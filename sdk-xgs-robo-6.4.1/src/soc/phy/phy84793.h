/***************************************************************************
 * $Id: phy84793.h,v 1.1 Broadcom SDK $
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 *     Copyright (c) 1999-2013, Broadcom Corporation
 *     All Rights Reserved
 *     Confidential Property of Broadcom Corporation
 *
 *
 * THIS SOFTWARE MAY ONLY BE USED SUBJECT TO AN EXECUTED SOFTWARE LICENSE
 * AGREEMENT  BETWEEN THE USER AND BROADCOM.  YOU HAVE NO RIGHT TO USE OR
 * EXPLOIT THIS MATERIAL EXCEPT SUBJECT TO THE TERMS OF SUCH AN AGREEMENT.
 *
 * $brcm_Workfile: $
 * $brcm_Revision: $
 * $brcm_Date: $
 *
 * Module Description:
 *                     DO NOT EDIT THIS FILE DIRECTLY
 *
 * This module was generated magically with RDB from a source description
 * file. You must edit the source file for changes to be made to this file.
 *
 *
 * Date:           Generated on         Sun Feb 17 21:44:14 2013
 *                 MD5 Checksum         d546e11aade78f6ba77a368ccf3444ae
 *
 * Compiled with:  RDB Utility          5.0
 *                 RDB Parser           3.0
 *                 rdb2macro.pm         4.0
 *                 Perl Interpreter     5.008008
 *                 Operating System     linux
 *
 * Spec Versions:  common_por_regs      1
 *                 ctl_regs             1
 *                 hs_rx_cdr            1
 *                 hs_rx_cdr_cm         1
 *                 hs_rx_cdr_sh         1
 *                 hs_tx_cdr_tpc        1
 *                 ieee_pma_pmd_control_2_regs1
 *                 ieee_pma_pmd_regs    1
 *                 rg_rx                2
 *                 rg_tx                2
 *                 slice_regs           1
 *                 vsr40_rx_ana25g      1
 *                 vsr40_rx_dig_regs    1
 *                 vsr40_rx_pll         1
 *                 vsr40_tx_ana25g      1
 *                 vsr40_tx_dig_regs    1
 *                 vsr40_tx_pll         1
 *
 * RDB Files:  /projects/ntsw-sw2/home/arunkuma/enzo_sdk/sdk/src/soc/phy/regs/scripts/Linux/single_rdb.rdb
 *
 * Revision History:
 *
 * $brcm_Log: $
 *
 ***************************************************************************/

#ifndef PHY84793_H__
#define PHY84793_H__

/**
 * m = memory, c = core, r = register, f = field, d = data.
 */
#if !defined(GET_FIELD) && !defined(SET_FIELD)
#define BRCM_ALIGN(c,r,f)   c##_##r##_##f##_ALIGN
#define BRCM_BITS(c,r,f)    c##_##r##_##f##_BITS
#define BRCM_MASK(c,r,f)    c##_##r##_##f##_MASK
#define BRCM_SHIFT(c,r,f)   c##_##r##_##f##_SHIFT

#define GET_FIELD(m,c,r,f) \
	((((m) & BRCM_MASK(c,r,f)) >> BRCM_SHIFT(c,r,f)) << BRCM_ALIGN(c,r,f))

#define SET_FIELD(m,c,r,f,d) \
	((m) = (((m) & ~BRCM_MASK(c,r,f)) | ((((d) >> BRCM_ALIGN(c,r,f)) << \
	 BRCM_SHIFT(c,r,f)) & BRCM_MASK(c,r,f))) \
	)

#define SET_TYPE_FIELD(m,c,r,f,d) SET_FIELD(m,c,r,f,c##_##d)
#define SET_NAME_FIELD(m,c,r,f,d) SET_FIELD(m,c,r,f,c##_##r##_##f##_##d)
#define SET_VALUE_FIELD(m,c,r,f,d) SET_FIELD(m,c,r,f,d)

#endif /* GET & SET */

/* PHY84793 MACROS */
#define PHY84793_C45_DEV_PMA_PMD     0x01

#define PHY84793_REG_READ(_unit, _phy_ctrl, _addr, _val) \
            READ_PHY_REG((_unit), (_phy_ctrl), (_addr), (_val))
#define PHY84793_REG_WRITE(_unit, _phy_ctrl, _addr, _val) \
            WRITE_PHY_REG((_unit), (_phy_ctrl), (_addr), (_val))
#define PHY84793_REG_MODIFY(_unit, _phy_ctrl, _addr, _val, _mask) \
            MODIFY_PHY_REG((_unit), (_phy_ctrl), (_addr), (_val), (_mask))

/* PMA/PMD Device (Dev Addr 1) */
#define READ_PHY84793_PMA_PMD_REG(_unit, _phy_ctrl, _reg,_val) \
            PHY84793_REG_READ((_unit), (_phy_ctrl), \
              SOC_PHY_CLAUSE45_ADDR(PHY84793_C45_DEV_PMA_PMD, (_reg)), (_val))
#define WRITE_PHY84793_PMA_PMD_REG(_unit, _phy_ctrl, _reg,_val) \
            PHY84793_REG_WRITE((_unit), (_phy_ctrl), \
              SOC_PHY_CLAUSE45_ADDR(PHY84793_C45_DEV_PMA_PMD, (_reg)), (_val))
#define MODIFY_PHY84793_PMA_PMD_REG(_unit, _phy_ctrl, _reg, _val, _mask) \
        PHY84793_REG_MODIFY((_unit), (_phy_ctrl), \
        SOC_PHY_CLAUSE45_ADDR(PHY84793_C45_DEV_PMA_PMD, (_reg)), (_val), (_mask))

/****************************************************************************
 * Core Enums.
 ***************************************************************************/
/****************************************************************************
 * common_por_regs_regs
 ***************************************************************************/
#define COMMON_POR_REGS_BOOT_POR       0x0000f416 /* Micro boot registers */


/****************************************************************************
 * ctl_regs_regs
 ***************************************************************************/
#define CTL_REGS_TX_EEPROM_CONTROL     0x0000f351 /* TX EEPROM control register. */
#define CTL_REGS_COMMON_CHIP_ID        0x0000f400 /* COMMON_CHIPID */
#define CTL_REGS_COMMON_REV_ID         0x0000f401 /* COMMON_REVID */
#define CTL_REGS_COMMON_CTRL1          0x0000f402 /* COMMON_CTRL1 */
#define CTL_REGS_USER_MODESEL_REG      0x0000f403 /* COMMON_USER_MODESEL_REG */
#define CTL_REGS_REFCLK_SEL_REG        0x0000f404 /* COMMON_USER_MODESEL_REG */
#define CTL_REGS_COMMON_CTRL2          0x0000f405 /* COMMON_CTRL2 */
#define CTL_REGS_COMMON_STATUS1        0x0000f406 /* COMMON_STATUS1 */
#define CTL_REGS_IEEE_MODESEL_DEFAULT  0x0000f407 /* IEEE Modesel Default value */
#define CTL_REGS_LED_CTRL              0x0000f408 /* Controls LED activity */
#define CTL_REGS_EISR                  0x0000f409 /* External Interrupt Status Register (EISR) */
#define CTL_REGS_EIMR                  0x0000f40a /* External Interrupt Mask Register (EIMR) */
#define CTL_REGS_EIPR                  0x0000f40b /* External Interrupt Pending Register (EIPR) */
#define CTL_REGS_PWRUP                 0x0000f40c /* Power up state machine control & status */
#define CTL_REGS_MISR                  0x0000f40e /* Micro Interrupt Status Register (MISR) */
#define CTL_REGS_MIMR                  0x0000f40f /* Micro Interrupt Mask Register (MIMR) */
#define CTL_REGS_MIPM                  0x0000f411 /* Micro Interrupt Pending Register (MIPR) */
#define CTL_REGS_MSCR                  0x0000f412 /* Micro Subsystem Configuration Register (MSCR) */
#define CTL_REGS_MSGOUT                0x0000f413 /* Outgoing message from micro to external world. */
#define CTL_REGS_MSGIN                 0x0000f414 /* Incoming message to micro from external world */
#define CTL_REGS_BOOT                  0x0000f415 /* Micro boot registers */
#define CTL_REGS_GPREG0                0x0000f417 /* general-purpose scratch-pad register 0 for micro/external communications */
#define CTL_REGS_GPREG1                0x0000f418 /* general-purpose scratch-pad register 1 for micro/external communications */
#define CTL_REGS_GPREG2                0x0000f419 /* general-purpose scratch-pad register 2 for micro/external communications */
#define CTL_REGS_GPREG3                0x0000f41a /* general-purpose scratch-pad register 3 for micro/external communications */
#define CTL_REGS_GPREG4                0x0000f41b /* general-purpose scratch-pad register 4 for micro/external communications */
#define CTL_REGS_GPREG5                0x0000f41c /* general-purpose scratch-pad register 5 for micro/external communications */
#define CTL_REGS_GPREG6                0x0000f41d /* general-purpose scratch-pad register 6 for micro/external communications */
#define CTL_REGS_GPREG7                0x0000f41e /* general-purpose scratch-pad register 7 for micro/external communications */
#define CTL_REGS_GPREG8                0x0000f41f /* general-purpose scratch-pad register 8 for micro/external communications */
#define CTL_REGS_GPREG9                0x0000f420 /* general-purpose scratch-pad register 9 for micro/external communications */
#define CTL_REGS_GPREG10               0x0000f421 /* general-purpose scratch-pad register 10 for micro/external communications */
#define CTL_REGS_GPREG11               0x0000f422 /* general-purpose scratch-pad register 11 for micro/external communications */
#define CTL_REGS_GPREG12               0x0000f423 /* general-purpose scratch-pad register 12 for micro/external communications */
#define CTL_REGS_GPREG13               0x0000f424 /* general-purpose scratch-pad register 13 for micro/external communications */
#define CTL_REGS_GPREG14               0x0000f425 /* general-purpose scratch-pad register 14 for micro/external communications */
#define CTL_REGS_GPREG15               0x0000f426 /* general-purpose scratch-pad register 15 for micro/external communications */
#define CTL_REGS_FW_ENABLE_TYPE        0x0000f427 /* Register to enable proprietary firmware features */
#define CTL_REGS_SYS_RX_RESET          0x0000f435 /* System side Rx Lane Reset */
#define CTL_REGS_SYS_TX_RESET          0x0000f436 /* System side Tx Lane Reset */
#define CTL_REGS_LINE_RX_RESET         0x0000f437 /* Line side Rx Lane Reset */
#define CTL_REGS_LINE_TX_RESET         0x0000f438 /* Line side Tx Lane Reset */
#define CTL_REGS_DC_RESET              0x0000f439 /* Deca Core common Resets */
#define CTL_REGS_FRC_DC_HW_RESET       0x0000f43a /* Forces for Deca core HW resets */
#define CTL_REGS_DC_HW_RESET           0x0000f43b /* Deca core HW Resets */
#define CTL_REGS_FRC_DC_MDIO_RESET     0x0000f43c /* Forces for Deca core mdio resets */
#define CTL_REGS_DC_MDIO_RESET         0x0000f43d /* Deca core mdio resets */
#define CTL_REGS_FRC_HCTX_DIG_RESET    0x0000f43e /* Forces for Hexa Core Tx dig resets */
#define CTL_REGS_HCTX_DIG_RESET        0x0000f43f /* Hexa Core Tx dig resets */
#define CTL_REGS_FRC_HCTX_MDIO_RESET   0x0000f440 /* Forces for Hexa Core Tx mdio resets */
#define CTL_REGS_HCTX_MDIO_RESET       0x0000f441 /* Hexa Core Tx mdio resets */
#define CTL_REGS_FRC_HCRX_DIG_RESET    0x0000f442 /* Forces for Hexa Core Rx dig resets */
#define CTL_REGS_HCRX_DIG_RESET        0x0000f443 /* Hexa Core Rx dig resets */
#define CTL_REGS_FRC_HCRX_MDIO_RESET   0x0000f444 /* Forces for Hexa Core Rx mdio resets */
#define CTL_REGS_HCRX_MDIO_RESET       0x0000f445 /* Hexa Core Rx mdio resets */
#define CTL_REGS_FRC_DCRX_PD           0x0000f446 /* Forces for Deca Core Rx Lanes Power down */
#define CTL_REGS_DCRX_PD               0x0000f447 /* Deca Core Rx Lanes Power down */
#define CTL_REGS_FRC_DCTX_PD           0x0000f448 /* Forces for Deca Core Tx Lanes Power down */
#define CTL_REGS_DCTX_PD               0x0000f449 /* Deca Core Tx Lanes Power down */
#define CTL_REGS_FRC_HCRX_PD           0x0000f44a /* Forces for Hexa Core Rx Lanes Power down */
#define CTL_REGS_HCRX_PD               0x0000f44b /* Hexa Core Rx Lanes Power down */
#define CTL_REGS_FRC_HCTX_PD           0x0000f44c /* Forces for Hexa Core Tx Lanes Power down */
#define CTL_REGS_HCTX_PD               0x0000f44d /* Hexa Core Tx Lanes Power down */
#define CTL_REGS_FRC_VSR40_TX_PD       0x0000f44e /* Forces for VSR40 Tx Lanes Power down */
#define CTL_REGS_VSR40_TX_PD           0x0000f44f /* VSR40 Tx Lanes Power down */
#define CTL_REGS_FRC_VSR40_RX_PD       0x0000f450 /* Forces for VSR40 Rx Lanes Power down */
#define CTL_REGS_VSR40_RX_PD           0x0000f451 /* VSR40 Rx Lanes Power down */
#define CTL_REGS_PCB_CTRL_TYPE         0x0000f452 /* PCB bus control register */
#define CTL_REGS_PCB_ADR_MSW_TYPE      0x0000f453 /* PCB address MSW register */
#define CTL_REGS_PCB_ADR_LSW_TYPE      0x0000f454 /* PCB address LSW register */
#define CTL_REGS_PCB_DATA_IN_TYPE      0x0000f455 /* PCB write value register */
#define CTL_REGS_PCB_DATA_OUT_TYPE     0x0000f456 /* PCB read value register */
#define CTL_REGS_SYS_LOOPBACK_EN       0x0000f457 /* System Loopback Enable */
#define CTL_REGS_LINE_LOOPBACK_EN      0x0000f458 /* Line Loopback Enable */
#define CTL_REGS_PVTMON_CTRL1          0x0000f45b /* PVTMON control1 */
#define CTL_REGS_PVTMON_CTRL2          0x0000f45c /* PVTMON control2 */
#define CTL_REGS_PVTMON_CTRL3          0x0000f45d /* PVTMON control3 */
#define CTL_REGS_PVTMON_CTRL4          0x0000f45e /* PVTMON control4 */
#define CTL_REGS_PVTMON_STATUS         0x0000f45f /* PVTMON status */
#define CTL_REGS_RESCAL_CTRL           0x0000f460 /* resistor calibration control */
#define CTL_REGS_RESCAL_STATUS         0x0000f461 /* resistor calibration status */
#define CTL_REGS_PAD_OSC_CONTROL       0x0000f462 /* Pad oscillator control */
#define CTL_REGS_OTP_CTRL_STATUS       0x0000f463 /* OTP control and status */
#define CTL_REGS_VREGCNTL_TYPE         0x0000f464 /* voltage regulator configuration bits */
#define CTL_REGS_FRC_LINE_LN           0x0000f466 /* Forces for enabling line side lanes */
#define CTL_REGS_LINE_LN               0x0000f467 /* Enables for line side lanes */
#define CTL_REGS_FRC_SYS_LN            0x0000f468 /* Forces for enabling sys side lanes */
#define CTL_REGS_SYS_LN                0x0000f469 /* Enables for sys side lanes */
#define CTL_REGS_GPIO_0_CTRL_STATUS    0x0000f470 /* gpio 0 control and status */
#define CTL_REGS_GPIO_1_CTRL_STATUS    0x0000f471 /* gpio 1 control and status */
#define CTL_REGS_GPIO_2_CTRL_STATUS    0x0000f472 /* gpio 2 control and status */
#define CTL_REGS_GPIO_3_CTRL_STATUS    0x0000f473 /* gpio 3 control and status */
#define CTL_REGS_GPIO_4_CTRL_STATUS    0x0000f474 /* gpio 4 control and status */
#define CTL_REGS_GPIO_5_CTRL_STATUS    0x0000f475 /* gpio 5 control and status */
#define CTL_REGS_STATUS_CTRL1          0x0000f476 /* Status pin control1 */
#define CTL_REGS_STATUS_CTRL2          0x0000f477 /* Status pin control2 */
#define CTL_REGS_INPUT_STATUS          0x0000f478 /* Control Input pin latched status */
#define CTL_REGS_IEEE_REGS_RST_LATCH   0x0000f479 /* IEEE regs reset latched high status */
#define CTL_REGS_DIS_SYS_CDR_LOCK      0x0000f47a /* Disable Sys CDR Lock status */
#define CTL_REGS_DIS_SYS_SIGDET        0x0000f47b /* Disable Sys Sigdet status */
#define CTL_REGS_DIS_LINE_CDR_LOCK     0x0000f47c /* Disable Line CDR Lock status */
#define CTL_REGS_DIS_LINE_SIGDET       0x0000f47d /* Disable Line sigdet status */
#define CTL_REGS_STATUS_MUX_CTRL       0x0000f47e /* Status Mux control */
#define CTL_REGS_SEISR                 0x0000f480 /* System side External Interrupt Status Register (SEISR) */
#define CTL_REGS_SEIMR                 0x0000f481 /* System side External Interrupt Mask Register (SEIMR) */
#define CTL_REGS_SEIPR                 0x0000f482 /* System side External Interrupt Pending Register (SEIPR) */
#define CTL_REGS_LEISR                 0x0000f483 /* Line side External Interrupt Status Register (LEISR) */
#define CTL_REGS_LEIMR                 0x0000f484 /* Line side External Interrupt Mask Register (LEIMR) */
#define CTL_REGS_LEIPR                 0x0000f485 /* Line side External Interrupt Pending Register (LEIPR) */
#define CTL_REGS_SUSM_CM_CTRL1         0x0000f490 /* Common startup statemachine control1 */
#define CTL_REGS_SUSM_LTX_CTRL1        0x0000f491 /* Line TX startup statemachine control1 */
#define CTL_REGS_SUSM_LTX_CTRL2        0x0000f492 /* Line TX startup statemachine control2 */
#define CTL_REGS_SUSM_LTX_CTRL3        0x0000f493 /* Line TX startup statemachine control3 */
#define CTL_REGS_SUSM_LTX_CTRL4        0x0000f494 /* Line TX startup statemachine control4 */
#define CTL_REGS_SUSM_LTX_CTRL5        0x0000f495 /* Line TX startup statemachine control5 */
#define CTL_REGS_SUSM_LTX_CTRL6        0x0000f496 /* Line TX startup statemachine control6 */
#define CTL_REGS_SUSM_LTX_CTRL7        0x0000f497 /* Line TX startup statemachine control7 */
#define CTL_REGS_SUSM_LTX_CTRL8        0x0000f498 /* Line TX startup statemachine control8 */
#define CTL_REGS_SUSM_LTX_CTRL9        0x0000f499 /* Line TX startup statemachine control9 */
#define CTL_REGS_SUSM_LTX_CTRL10       0x0000f49a /* Line TX startup statemachine control10 */
#define CTL_REGS_SUSM_LTX_CTRL11       0x0000f49b /* Line TX startup statemachine control11 */
#define CTL_REGS_SUSM_LRX_CTRL1        0x0000f49c /* Line RX startup statemachine control1 */
#define CTL_REGS_SUSM_LRX_CTRL2        0x0000f49d /* Line RX startup statemachine control2 */
#define CTL_REGS_SUSM_LRX_CTRL3        0x0000f49e /* Line RX startup statemachine control3 */
#define CTL_REGS_SUSM_SYS_CTRL1        0x0000f49f /* System startup statemachine control1 */
#define CTL_REGS_SUSM_SYS_CTRL2        0x0000f4a0 /* Systemstartup statemachine control2 */
#define CTL_REGS_SUSM_SYS_CTRL3        0x0000f4a1 /* System startup statemachine control3 */
#define CTL_REGS_SUSM_SYS_CTRL4        0x0000f4a2 /* System startup statemachine control4 */
#define CTL_REGS_SUSM_SYS_CTRL5        0x0000f4a3 /* System startup statemachine control5 */
#define CTL_REGS_SUSM_SYS_CTRL6        0x0000f4a4 /* System startup statemachine control6 */
#define CTL_REGS_SUSM_SYS_CTRL7        0x0000f4a5 /* System startup statemachine control7 */
#define CTL_REGS_SUSM_SYS_CTRL8        0x0000f4a6 /* System startup statemachine control8 */
#define CTL_REGS_SUSM_SYS_CTRL9        0x0000f4a7 /* System startup statemachine control9 */
#define CTL_REGS_SUSM_SYS_CTRL10       0x0000f4a8 /* System startup statemachine control10 */
#define CTL_REGS_SUSM_SYS_CTRL11       0x0000f4a9 /* System startup statemachine control11 */
#define CTL_REGS_SUSM_SYS_CTRL12       0x0000f4aa /* System startup statemachine control12 */
#define CTL_REGS_SUSM_SYS_CTRL13       0x0000f4ab /* System startup statemachine control13 */
#define CTL_REGS_SUSM_SYS_CTRL14       0x0000f4ac /* System startup statemachine control14 */
#define CTL_REGS_SUSM_STATUS1          0x0000f4ad /* Startup statemachine status1 */
#define CTL_REGS_SUSM_STATUS2          0x0000f4ae /* Startup statemachine status2 */
#define CTL_REGS_SUSM_STATUS3          0x0000f4af /* Startup statemachine status3 */
#define CTL_REGS_SUSM_STATUS4          0x0000f4b0 /* Startup statemachine status4 */
#define CTL_REGS_SUSM_STATUS5          0x0000f4b1 /* Startup statemachine status5 */
#define CTL_REGS_SUSM_STATUS6          0x0000f4b2 /* Startup statemachine status6 */
#define CTL_REGS_DEVICE_IDENTIFIER_LSB_CTRL1 0x0000f4b3 /* Dev ID LSB */
#define CTL_REGS_DEVICE_IDENTIFIER_MSB_CTRL1 0x0000f4b4 /* Dev ID MSB */
#define CTL_REGS_PACKAGE_IDENTIFIER_LSB_CTRL1 0x0000f4b5 /* Pkg ID LSB */
#define CTL_REGS_PACKAGE_IDENTIFIER_MSB_CTRL1 0x0000f4b6 /* Pkg ID MSB */
#define CTL_REGS_IP_TMUX_CTRL          0x0000f4c0 /* Hexacore & Decacore tmux output control */
#define CTL_REGS_OTP_FOUT_3            0x0000f4c1 /* OTP Fout bus */
#define CTL_REGS_OTP_FOUT_2            0x0000f4c2 /* OTP Fout bus */
#define CTL_REGS_OTP_FOUT_1            0x0000f4c3 /* OTP Fout bus */
#define CTL_REGS_OTP_FOUT_0            0x0000f4c4 /* OTP Fout bus */


/****************************************************************************
 * hs_rx_cdr_regs
 ***************************************************************************/
#define HS_RX_CDR_CDR_RESET            0x00000000 /* CDR controls: Reset and enable */
#define HS_RX_CDR_CDR_LOOP             0x00000001 /* CDR controls: Loop parameters */
#define HS_RX_CDR_CDR_PE_OFFSET        0x00000002 /* CDR controls: Phase error offset */
#define HS_RX_CDR_CDR_INTEG            0x00000003 /* CDR controls: integ initial value */
#define HS_RX_CDR_CDR_NCO_RDP          0x00000004 /* PI controls: initial phases for NCO at 0 and 90 degrees */
#define HS_RX_CDR_CDR_NCO_EYE          0x00000005 /* PI controls: initial phases for NCO for eye monitor */
#define HS_RX_CDR_PI_OS_CTRL           0x00000006 /* PI controls: offset adjustment */
#define HS_RX_CDR_MAN_PI_CTRL          0x00000007 /* PI controls: manual phase adjustment */
#define HS_RX_CDR_EM_CTRL              0x00000008 /* EM controls: general */
#define HS_RX_CDR_EM_CNT_15_0          0x00000009 /* EM control: monitor counter */
#define HS_RX_CDR_EM_CNT_31_16         0x0000000a /* EM control: monitor counter */
#define HS_RX_CDR_EM_CNT_47_32         0x0000000b /* EM control: monitor counter */
#define HS_RX_CDR_PFC_CTRL             0x0000000c /* PF controls: calibration */
#define HS_RX_CDR_PFC_CNT              0x0000000d /* PF control: calibration counter */
#define HS_RX_CDR_SWG_PERIOD           0x0000000e /* SWG control: period */
#define HS_RX_CDR_SWG_Y_VAL            0x0000000f /* SWG control: y value */
#define HS_RX_CDR_SWG_YSCALE           0x00000010 /* SWG controls: scale */
#define HS_RX_CDR_SWG_DELTA_1          0x00000011 /* SWG control: delta1 value */
#define HS_RX_CDR_SWG_DELTA_2          0x00000012 /* SWG control: delta2 value */
#define HS_RX_CDR_SWG_DELTA_3          0x00000013 /* SWG control: delta3 value */
#define HS_RX_CDR_CDR_STAT_TASKS       0x00000014 /* General status: operations done */
#define HS_RX_CDR_CDR_STAT_INTEG       0x00000015 /* CDR status: integral register */
#define HS_RX_CDR_CDR_STAT_NCO_RDP     0x00000016 /* PI status: phases for NCO at 0 and 90 degrees */
#define HS_RX_CDR_CDR_STAT_NCO_EYE     0x00000017 /* PI status: phases for eye monitor NCO */
#define HS_RX_CDR_EML_STAT_ACC_HI      0x00000018 /* EML status: mismatch count high bits */
#define HS_RX_CDR_EML_STAT_ACC_LO      0x00000019 /* EML status: mismatch count low bits */
#define HS_RX_CDR_PFC_STAT_ACC_HI      0x0000001a /* PF status: calibration acc high bits */
#define HS_RX_CDR_PFC_STAT_ACC_LO      0x0000001b /* PF status: calibration acc low bits */


/****************************************************************************
 * hs_rx_cdr_cm_regs
 ***************************************************************************/
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN  0x00000000 /* Write-enable signals for CDR loop parameters for all lanes */


/****************************************************************************
 * hs_rx_cdr_sh_regs
 ***************************************************************************/
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS 0x00000000 /* Shadow general status: operations done */
#define HS_RX_CDR_SH_SH_CDR_STAT_INTEG 0x00000001 /* Shadow CDR status: integral register */
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP 0x00000002 /* Shadow PI status: phases for NCO at 0 and 90 degrees */
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_EYE 0x00000003 /* Shadow PI status: phases for eye monitor NCO */
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_HI 0x00000004 /* Shadow EML status: mismatch count high bits */
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_LO 0x00000005 /* Shadow EML status: mismatch count low bits */
#define HS_RX_CDR_SH_SH_PFC_STAT_ACC_HI 0x00000006 /* Shadow PF status: calibration acc high bits */
#define HS_RX_CDR_SH_SH_PFC_STAT_ACC_LO 0x00000007 /* Shadow PF status: calibration acc low bits */


/****************************************************************************
 * hs_tx_cdr_tpc_regs
 ***************************************************************************/
#define HS_TX_CDR_TPC_TPC_CTRL         0x00000000 /* TPC controls: general */
#define HS_TX_CDR_TPC_TPC_IIR          0x00000001 /* TPC controls: IIR MSB forcing */
#define HS_TX_CDR_TPC_TPC_NCO          0x00000002 /* PI controls: initial phases for NCO for Tx PI */
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL  0x00000003 /* TPC controls: manual PI adjustments */
#define HS_TX_CDR_TPC_TPC_STAT_PI      0x00000004 /* TPC status: PI 0 NCO value */
#define HS_TX_CDR_TPC_TPC_STAT_IIR     0x00000005 /* TPC status: IIR MSB */


/****************************************************************************
 * ieee_pma_pmd_control_2_regs_regs
 ***************************************************************************/
#define IEEE_PMA_PMD_CONTROL_2_REGS_PMA_PMD_CONTROL_2 0x00000007 /* Mode selection via PMD type */


/****************************************************************************
 * ieee_pma_pmd_regs_regs
 ***************************************************************************/
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1 0x00000000 /* IEEE_PMA_PMD_CONTROL_1 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1 0x00000001 /* IEEE_PMA_PMD_STATUS_1 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_DEVICE_IDENTIFIER_MSB 0x00000002 /* IEEE_PMA_PMD_DEVICE_IDENTIFIER_MSB */
#define IEEE_PMA_PMD_REGS_PMA_PMD_DEVICE_IDENTIFIER_LSB 0x00000003 /* IEEE_PMA_PMD_DEVICE_IDENTIFIER_LSB */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY 0x00000004 /* IEEE_PMA_PMD_SPEED_ABILITY */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB 0x00000005 /* IEEE_DEVICES_IN_PACKAGE_LSB */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB 0x00000006 /* IEEE_DEVICES_IN_PACKAGE_MSB */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2 0x00000008 /* IEEE_PMA_PMD_STATUS_2 */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE 0x00000009 /* IEEE_PMD_TRANSMIT_DISABLE */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT 0x0000000a /* IEEE_PMD_RECEIVE_SIGNAL_DETECT */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY 0x0000000b /* IEEE_PMA_PMD_EXTENDED_ABILITY */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY 0x0000000d /* IEEE_PMA_PMD_40G_100G_EXTENDED_ABILITY */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PACKAGE_IDENTIFIER_MSB 0x0000000e /* IEEE_PMA_PMD_PACKAGE_IDENTIFIER_MSB */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PACKAGE_IDENTIFIER_LSB 0x0000000f /* IEEE_PMA_PMD_PACKAGE_IDENTIFIER_LSB */
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY 0x000005dc /* IEEE_PMA_PMD_TEST_PATTERN_ABILITY */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL 0x000005dd /* IEEE_PMA_PMD_PRBS_PATTERN_TEST_CONTROL */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL 0x000005e6 /* IEEE_PMA_PMD_SQUARE_WAVE_TEST_CONTROL */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_0 0x00000640 /* IEEE_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_0 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_1 0x00000641 /* IEEE_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_1 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_2 0x00000642 /* IEEE_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_2 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_3 0x00000643 /* IEEE_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_3 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_4 0x00000644 /* IEEE_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_4 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_5 0x00000645 /* IEEE_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_5 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_6 0x00000646 /* IEEE_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_6 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_7 0x00000647 /* IEEE_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_7 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_8 0x00000648 /* IEEE_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_8 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_9 0x00000649 /* IEEE_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_9 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_0 0x000006a4 /* IEEE_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_0 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_1 0x000006a5 /* IEEE_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_1 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_2 0x000006a6 /* IEEE_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_2 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_3 0x000006a7 /* IEEE_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_3 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_4 0x000006a8 /* IEEE_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_4 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_5 0x000006a9 /* IEEE_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_5 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_6 0x000006aa /* IEEE_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_6 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_7 0x000006ab /* IEEE_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_7 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_8 0x000006ac /* IEEE_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_8 */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_9 0x000006ad /* IEEE_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_9 */


/****************************************************************************
 * rg_rx_regs
 ***************************************************************************/
#define RG_RX_RX_GB_SYSTEM_RESET       0x0000f500 /* System side per lane software reset force value */
#define RG_RX_RX_GB_SYSTEM_RESET_FRC   0x0000f501 /* System side per lane software reset force control */
#define RG_RX_RX_GB_LINE_RESET         0x0000f502 /* Line side per lane software reset force value */
#define RG_RX_RX_GB_LINE_RESET_FRC     0x0000f503 /* Line side per lane software reset force control */
#define RG_RX_RX_GB_DB_TEST_CTRL       0x0000f504 /* Line side duobinary decoder and test checker control */
#define RG_RX_RX_GB_TEST_CTRL_LN49     0x0000f505 /* Line side pattern check control for lane 4 to 9 */
#define RG_RX_RX_GB_TEST_CTRL_LN03     0x0000f506 /* Line side PRBS/Pattern check main control for lane 0 to 3 */
#define RG_RX_RX_GB_PRBS_INV_IN        0x0000f507 /* Line side PRBS check control in manual mode */
#define RG_RX_RX_GB_BER_TIMER_CNT0     0x0000f508 /* PRBS/Pattern checker timer 15:0 */
#define RG_RX_RX_GB_BER_TIMER_CNT1     0x0000f509 /* PRBS/Pattern checker timer 31:16 */
#define RG_RX_RX_GB_TEST_MISC_CTRL     0x0000f50a /* PRBS/Pattern misc control */
#define RG_RX_RX_GB_LP_PTR_SYNC0       0x0000f50b /* loopback FIFO pointer separation control for lane 0 to 3 */
#define RG_RX_RX_GB_LP_PTR_SYNC1       0x0000f50c /* loopback FIFO pointer separation control for lane 4 to 7 */
#define RG_RX_RX_GB_LN89_PTR_SYNC      0x0000f50d /* FIFO pointer separation control for lane 8 and 9 */
#define RG_RX_RX_GB_PTR_SYNC1          0x0000f50e /* Pass Through FIFO pointer separation control for lane 4 to 7 */
#define RG_RX_RX_GB_PTR_SYNC0          0x0000f50f /* Rate Converter pointer separation control for lane 0 to 3 */
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0 0x0000f510 /* collision detection threshold for loopback FIFO lane 0 to 3 */
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1 0x0000f511 /* collision detection threshold for loopback FIFO lane 4 to 7 */
#define RG_RX_RX_GB_COL_THRESHOLD89    0x0000f512 /* collision detection threshold for FIFO lane 8 to 9 */
#define RG_RX_RX_GB_COL_THRESHOLD1     0x0000f513 /* collision detection threshold for pass through FIFO lane 4 to 7 */
#define RG_RX_RX_GB_COL_THRESHOLD0     0x0000f514 /* collision detection threshold for pass through FIFO lane 0 to 3 */
#define RG_RX_RX_GB_PRBS_GEN_IERR      0x0000f515 /* insert bit error to output PRBS pattern */
#define RG_RX_RX_GB_IO_BIT_CTRL        0x0000f516 /* System side output data polarity inversion and io bit swap enable */
#define RG_RX_RX_GB_CAUI_CLK_SEL       0x0000f517 /* System side common clock selection */
#define RG_RX_RX_GB_BER_MNTR_STATUS    0x0000f520 /* Bit Error Monitor status */
#define RG_RX_RX_GB_PRBS_PATTERN_PRESENT 0x0000f521 /* line side PRBS/Pattern present */
#define RG_RX_RX_GB_PRBS_LOCK          0x0000f522 /* line side PRBS/Pattern lock status */
#define RG_RX_RX_GB_PRBS_LOCK_LL       0x0000f523 /* line side PRBS/Pattern lose of lock status */
#define RG_RX_RX_GB_PRBS_STATUS_OUT    0x0000f524 /* line side PRBS/Pattern is inverted */
#define RG_RX_RX_GB_LSB_ERR_CNT        0x0000f525 /* Lower 16 bits of BER counter */
#define RG_RX_RX_GB_MSB_ERR_CNT        0x0000f526 /* higher 16 bits of BER counter */
#define RG_RX_RX_GB_COLLIDE_LPBK       0x0000f527 /* line side loopback FIFO live status */
#define RG_RX_RX_GB_COLLIDE_LPBK_LH    0x0000f528 /* line side loopback FIFO collision latch high status */
#define RG_RX_RX_GB_COLLIDE            0x0000f529 /* data path phase FIFO or rate converter live status */
#define RG_RX_RX_GB_COLLIDE_LH         0x0000f52a /* data path phase FIFO or rate converter collision latch high status */
#define RG_RX_RX_GB_ERR_DATA_0         0x0000f52b /* captured error PRBS/Pattern data, bit [15:0] */
#define RG_RX_RX_GB_ERR_DATA_1         0x0000f52c /* captured error PRBS/Pattern data, bit [31:16] */
#define RG_RX_RX_GB_ERR_DATA_2         0x0000f52d /* captured error PRBS/Pattern data, bit [47:32] */
#define RG_RX_RX_GB_ERR_DATA_3         0x0000f52e /* captured error PRBS/Pattern data, bit [63:48] */
#define RG_RX_RX_GB_ERR_DATA_4         0x0000f52f /* captured error PRBS/Pattern data, bit [79:64] */
#define RG_RX_RX_GB_ERR_DATA_5         0x0000f530 /* captured error PRBS/Pattern data, bit [95:80] */
#define RG_RX_RX_GB_ERR_DATA_6         0x0000f531 /* captured error PRBS/Pattern data, bit [111:96] */
#define RG_RX_RX_GB_ERR_DATA_7         0x0000f532 /* captured error PRBS/Pattern data, bit [127:112] */
#define RG_RX_RX_GB_ERR_DATA_8         0x0000f533 /* captured error PRBS/Pattern data, bit [131:128] */


/****************************************************************************
 * rg_tx_regs
 ***************************************************************************/
#define RG_TX_TX_GB_SYSTEM_RESET       0x0000f600 /* System side per lane software reset force value */
#define RG_TX_TX_GB_SYSTEM_RESET_FRC   0x0000f601 /* System side per lane software reset force control */
#define RG_TX_TX_GB_LINE_RESET         0x0000f602 /* Line side per lane software reset force value */
#define RG_TX_TX_GB_LINE_RESET_FRC     0x0000f603 /* Line side per lane software reset force control */
#define RG_TX_TX_GB_PRBS_DB_CTRL       0x0000f604 /* Line side test pattern generation and duobinary encoder control */
#define RG_TX_TX_GB_TEST_IERR          0x0000f605 /* Line side PRBS/Pattern error insertion control */
#define RG_TX_TX_GB_TEST_GEN_CTRL      0x0000f606 /* Line side PRBS/Pattern generation control for lane 0 to 3 */
#define RG_TX_TX_GB_PATTERN0_0         0x0000f607 /* Fixed pattern to be sent in lane 0 line side 15:0 */
#define RG_TX_TX_GB_PATTERN0_1         0x0000f608 /* Fixed pattern to be sent in lane 0 line side 31:16 */
#define RG_TX_TX_GB_PATTERN0_2         0x0000f609 /* Fixed pattern to be sent in lane 0 line side 47:32 */
#define RG_TX_TX_GB_PATTERN0_3         0x0000f60a /* Fixed pattern to be sent in lane 0 line side 63:48 */
#define RG_TX_TX_GB_PATTERN0_4         0x0000f60b /* Fixed pattern to be sent in lane 0 line side 79:64 */
#define RG_TX_TX_GB_PATTERN0_5         0x0000f60c /* Fixed pattern to be sent in lane 0 line side 95:80 */
#define RG_TX_TX_GB_PATTERN0_6         0x0000f60d /* Fixed pattern to be sent in lane 0 line side 111:96 */
#define RG_TX_TX_GB_PATTERN0_7         0x0000f60e /* Fixed pattern to be sent in lane 0 line side 127:112 */
#define RG_TX_TX_GB_PATTERN1_0         0x0000f60f /* Fixed pattern to be sent in lane 1 line side 15:0 */
#define RG_TX_TX_GB_PATTERN1_1         0x0000f610 /* Fixed pattern to be sent in lane 1 line side 31:16 */
#define RG_TX_TX_GB_PATTERN1_2         0x0000f611 /* Fixed pattern to be sent in lane 1 line side 47:32 */
#define RG_TX_TX_GB_PATTERN1_3         0x0000f612 /* Fixed pattern to be sent in lane 1 line side 63:48 */
#define RG_TX_TX_GB_PATTERN1_4         0x0000f613 /* Fixed pattern to be sent in lane 1 line side 79:64 */
#define RG_TX_TX_GB_PATTERN1_5         0x0000f614 /* Fixed pattern to be sent in lane 1 line side 95:80 */
#define RG_TX_TX_GB_PATTERN1_6         0x0000f615 /* Fixed pattern to be sent in lane 1 line side 111:96 */
#define RG_TX_TX_GB_PATTERN1_7         0x0000f616 /* Fixed pattern to be sent in lane 1 line side 127:112 */
#define RG_TX_TX_GB_PATTERN2_0         0x0000f617 /* Fixed pattern to be sent in lane 2 line side 15:0 */
#define RG_TX_TX_GB_PATTERN2_1         0x0000f618 /* Fixed pattern to be sent in lane 2 line side 31:16 */
#define RG_TX_TX_GB_PATTERN2_2         0x0000f619 /* Fixed pattern to be sent in lane 2 line side 47:32 */
#define RG_TX_TX_GB_PATTERN2_3         0x0000f61a /* Fixed pattern to be sent in lane 2 line side 63:48 */
#define RG_TX_TX_GB_PATTERN2_4         0x0000f61b /* Fixed pattern to be sent in lane 2 line side 79:64 */
#define RG_TX_TX_GB_PATTERN2_5         0x0000f61c /* Fixed pattern to be sent in lane 2 line side 95:80 */
#define RG_TX_TX_GB_PATTERN2_6         0x0000f61d /* Fixed pattern to be sent in lane 2 line side 111:96 */
#define RG_TX_TX_GB_PATTERN2_7         0x0000f61e /* Fixed pattern to be sent in lane 2 line side 127:112 */
#define RG_TX_TX_GB_PATTERN3_0         0x0000f61f /* Fixed pattern to be sent in lane 3 line side 15:0 */
#define RG_TX_TX_GB_PATTERN3_1         0x0000f620 /* Fixed pattern to be sent in lane 3 line side 31:16 */
#define RG_TX_TX_GB_PATTERN3_2         0x0000f621 /* Fixed pattern to be sent in lane 3 line side 47:32 */
#define RG_TX_TX_GB_PATTERN3_3         0x0000f622 /* Fixed pattern to be sent in lane 3 line side 63:48 */
#define RG_TX_TX_GB_PATTERN3_4         0x0000f623 /* Fixed pattern to be sent in lane 3 line side 79:64 */
#define RG_TX_TX_GB_PATTERN3_5         0x0000f624 /* Fixed pattern to be sent in lane 3 line side 95:80 */
#define RG_TX_TX_GB_PATTERN3_6         0x0000f625 /* Fixed pattern to be sent in lane 3 line side 111:96 */
#define RG_TX_TX_GB_PATTERN3_7         0x0000f626 /* Fixed pattern to be sent in lane 3 line side 127:112 */
#define RG_TX_TX_GB_PATTERN_8          0x0000f627 /* Fixed pattern to be sent for all lanes bit 131:128 */
#define RG_TX_TX_GB_LPBK_PTR_SYNC0     0x0000f628 /* loopback FIFO pointer separation control for lane 0 to 3 */
#define RG_TX_TX_GB_LPBK_PTR_SYNC1     0x0000f629 /* loopback FIFO pointer separation control for lane 4 to 7 */
#define RG_TX_TX_GB_LN89_PTR_SYNC      0x0000f62a /* FIFO pointer separation control for lane 8 and 9 */
#define RG_TX_TX_GB_PTR_SYNC1          0x0000f62b /* Pass Through FIFO pointer separation control for lane 4 to 7 */
#define RG_TX_TX_GB_PTR_SYNC0          0x0000f62c /* Pass Through FIFO or rate converter pointer separation control for lane 0 to 3 */
#define RG_TX_TX_GB_50TO64_CTRL        0x0000f62d /* Pointer separation and collision detection threshold control for 4 x 50to64 rate converter */
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0 0x0000f62e /* collision detection threshold for loopback FIFO lane 0 to 3 */
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1 0x0000f62f /* collision detection threshold for loopback FIFO lane 4 to 7 */
#define RG_TX_TX_GB_COL_THRESHOLD89    0x0000f630 /* collision detection threshold for FIFO lane 8 to 9 */
#define RG_TX_TX_GB_COL_THRESHOLD1     0x0000f631 /* collision detection threshold for pass through FIFO lane 4 to 7 */
#define RG_TX_TX_GB_COL_THRESHOLD0     0x0000f632 /* collision detection threshold for pass through FIFO lane 0 to 3 */
#define RG_TX_TX_GB_IO_BIT_CONTROL     0x0000f633 /* Line side output data polarity inversion and io bit swap enable */
#define RG_TX_TX_GB_LOGIC_LANE_TEST    0x0000f634 /* Per logic lane test control in CAUI mode */
#define RG_TX_TX_GB_COLLIDE_LPBK       0x0000f640 /* line side loopback FIFO live status */
#define RG_TX_TX_GB_COLLIDE_LPBK_LH    0x0000f641 /* line side loopback FIFO collision latch high status */
#define RG_TX_TX_GB_COLLIDE            0x0000f642 /* data path phase FIFO or rate converter live status */
#define RG_TX_TX_GB_COLLIDE_LH         0x0000f643 /* data path phase FIFO or rate converter collision latch high status */


/****************************************************************************
 * slice_regs_regs
 ***************************************************************************/
#define SLICE_REGS_SLICE               0x00008000 /* Slice Register */


/****************************************************************************
 * vsr40_rx_ana25g_regs
 ***************************************************************************/
#define VSR40_RX_ANA25G_CONTROL11      0x00000000 /* VSR40 RX Analog Interface Control 11 Register */
#define VSR40_RX_ANA25G_CONTROL10      0x00000001 /* VSR40 RX Analog Interface Control 10 Register */
#define VSR40_RX_ANA25G_CONTROL9       0x00000002 /* VSR40 RX Analog Interface Control 9  Register */
#define VSR40_RX_ANA25G_CONTROL8       0x00000003 /* VSR40 RX Analog Interface Control 8  Register */
#define VSR40_RX_ANA25G_CONTROL7       0x00000004 /* VSR40 RX Analog Interface Control 7  Register */
#define VSR40_RX_ANA25G_CONTROL6       0x00000005 /* VSR40 RX Analog Interface Control 6  Register */
#define VSR40_RX_ANA25G_CONTROL5       0x00000006 /* VSR40 RX Analog Interface Control 5  Register */
#define VSR40_RX_ANA25G_CONTROL4       0x00000007 /* VSR40 RX Analog Interface Control 4  Register */
#define VSR40_RX_ANA25G_CONTROL3       0x00000008 /* VSR40 RX Analog Interface Control 3  Register */
#define VSR40_RX_ANA25G_CONTROL2       0x00000009 /* VSR40 RX Analog Interface Control 2  Register */
#define VSR40_RX_ANA25G_CONTROL1       0x0000000a /* VSR40 RX Analog Interface Control 1  Register */
#define VSR40_RX_ANA25G_CONTROL0       0x0000000b /* VSR40 RX Analog Interface Control 0  Register */
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0 0x0000000c /* VSR40 RX Analog Signal Interface Control 0  Register */
#define VSR40_RX_ANA25G_ANA_IF_STATUS  0x0000000d /* VSR40 RX Analog Signal Interface Status  Register */


/****************************************************************************
 * vsr40_rx_dig_regs_regs
 ***************************************************************************/
#define VSR40_RX_DIG_REGS_CDR_CONTROL  0x00009800 /* Reset Control */
#define VSR40_RX_DIG_REGS_RESET_CONTROL 0x00009801 /* Reset Control */
#define VSR40_RX_DIG_REGS_CLK_CONTROL  0x00009802 /* Clock Control */
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL 0x00009803 /* VCO cal Control */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL1 0x00009804 /* Lockdet Control 1 */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL2 0x00009805 /* Lockdet Control 2 */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3 0x00009806 /* Lockdet Control 3 */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL4 0x00009807 /* Lockdet Control 4 */
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL 0x00009808 /* Reserve Control */
#define VSR40_RX_DIG_REGS_STATUS       0x0000980a /* Status Register */
#define VSR40_RX_DIG_REGS_RX_MISR      0x0000980b /* Level 2 VSR40 digital RX micro interrupt status register (MISR-L2) */
#define VSR40_RX_DIG_REGS_RX_MIMR      0x0000980c /* Level 2 VSR40 digital RX micro interrupt mask register (MIMR-L2) */
#define VSR40_RX_DIG_REGS_RX_P_MISR    0x0000980d /* Level 2 VSR40 digital pending RX micro interrupt status register (PMISR-L2) */
#define VSR40_RX_DIG_REGS_CDR_MISR     0x0000980e /* Level 2 VSR40 RX CDR micro interrupt status register (MISR-L2) */
#define VSR40_RX_DIG_REGS_CDR_MIMR     0x0000980f /* Level 2 VSR40 RX CDR micro interrupt mask register (MIMR-L2) */
#define VSR40_RX_DIG_REGS_CDR_P_MISR   0x00009810 /* Level 2 VSR40 RX pending CDR micro interrupt status register (PMISR-L2) */
#define VSR40_RX_DIG_REGS_DP_CTRL      0x00009811 /* Datapath control. */
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN 0x00009812 /* CDR common write enable register. */


/****************************************************************************
 * vsr40_rx_pll_regs
 ***************************************************************************/
#define VSR40_RX_PLL_CONTROL7          0x00009880 /* VSR40 RX PLL Interface Control 7 Register */
#define VSR40_RX_PLL_CONTROL6          0x00009881 /* VSR40 RX PLL Interface Control 6 Register */
#define VSR40_RX_PLL_CONTROL5          0x00009882 /* VSR40 RX PLL Interface Control 5 Register */
#define VSR40_RX_PLL_CONTROL4          0x00009883 /* VSR40 RX PLL Interface Control 4 Register */
#define VSR40_RX_PLL_CONTROL3          0x00009884 /* VSR40 RX PLL Interface Control 3 Register */
#define VSR40_RX_PLL_CONTROL2          0x00009885 /* VSR40 RX PLL Interface Control 2 Register */
#define VSR40_RX_PLL_CONTROL1          0x00009886 /* VSR40 RX PLL Interface Control 1 Register */
#define VSR40_RX_PLL_CONTROL0          0x00009887 /* VSR40 RX PLL Interface Control 0 Register */


/****************************************************************************
 * vsr40_tx_ana25g_regs
 ***************************************************************************/
#define VSR40_TX_ANA25G_CONTROL8       0x00000001 /* VSR40 TX Analog Interface Control 8 Register */
#define VSR40_TX_ANA25G_CONTROL7       0x00000002 /* VSR40 TX Analog Interface Control 7 Register */
#define VSR40_TX_ANA25G_CONTROL6       0x00000003 /* VSR40 TX Analog Interface Control 6 Register */
#define VSR40_TX_ANA25G_CONTROL5       0x00000004 /* VSR40 TX Analog Interface Control 5 Register */
#define VSR40_TX_ANA25G_CONTROL4       0x00000005 /* VSR40 TX Analog Interface Control 4 Register */
#define VSR40_TX_ANA25G_CONTROL3       0x00000006 /* VSR40 TX Analog Interface Control 3 Register */
#define VSR40_TX_ANA25G_CONTROL2       0x00000007 /* VSR40 TX Analog Interface Control 2 Register */
#define VSR40_TX_ANA25G_CONTROL1       0x00000008 /* VSR40 TX Analog Interface Control 1 Register */
#define VSR40_TX_ANA25G_CONTROL0       0x00000009 /* VSR40 TX Analog Interface Control 0 Register */


/****************************************************************************
 * vsr40_tx_dig_regs_regs
 ***************************************************************************/
#define VSR40_TX_DIG_REGS_RESET_CONTROL 0x00009900 /* Reset Control */
#define VSR40_TX_DIG_REGS_CLK_CONTROL  0x00009901 /* Clock Control */
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL 0x00009902 /* VCO cal Control */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL1 0x00009903 /* Lockdet Control 1 */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL2 0x00009904 /* Lockdet Control 2 */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3 0x00009905 /* Lockdet Control 3 */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL4 0x00009906 /* Lockdet Control 4 */
#define VSR40_TX_DIG_REGS_RESERVE_CONTROL 0x00009907 /* Reserve Control */
#define VSR40_TX_DIG_REGS_STATUS       0x0000990a /* Status Register */
#define VSR40_TX_DIG_REGS_TX_MISR      0x0000990b /* Level 2 VSR40 digital TX micro interrupt status register (MISR-L2) */
#define VSR40_TX_DIG_REGS_TX_MIMR      0x0000990c /* Level 2 VSR40 digital TX micro interrupt mask register (MIMR-L2) */
#define VSR40_TX_DIG_REGS_TX_P_MISR    0x0000990d /* Level 2 VSR40 digital pending TX micro interrupt status register (PMISR-L2) */
#define VSR40_TX_DIG_REGS_TCA_CTRL     0x0000990e /* VSR40 (4x25G) TX Clock Alignment Control register */
#define VSR40_TX_DIG_REGS_TCA_STATUS   0x0000990f /* VSR40 (4x25G) TX Clock Alignment Status register */


/****************************************************************************
 * vsr40_tx_pll_regs
 ***************************************************************************/
#define VSR40_TX_PLL_CONTROL7          0x00009980 /* VSR40 TX PLL Interface Control 7 Register */
#define VSR40_TX_PLL_CONTROL6          0x00009981 /* VSR40 TX PLL Interface Control 6 Register */
#define VSR40_TX_PLL_CONTROL5          0x00009982 /* VSR40 TX PLL Interface Control 5 Register */
#define VSR40_TX_PLL_CONTROL4          0x00009983 /* VSR40 TX PLL Interface Control 4 Register */
#define VSR40_TX_PLL_CONTROL3          0x00009984 /* VSR40 TX PLL Interface Control 3 Register */
#define VSR40_TX_PLL_CONTROL2          0x00009985 /* VSR40 TX PLL Interface Control 2 Register */
#define VSR40_TX_PLL_CONTROL1          0x00009986 /* VSR40 TX PLL Interface Control 1 Register */
#define VSR40_TX_PLL_CONTROL0          0x00009987 /* VSR40 TX PLL Interface Control 0 Register */


/****************************************************************************
 * common_por_regs_regs
 ***************************************************************************/
/****************************************************************************
 * common_por_regs :: boot_por
 ***************************************************************************/
/* common_por_regs :: boot_por :: spi_port_used [15:15] */
#define COMMON_POR_REGS_BOOT_POR_SPI_PORT_USED_MASK                0x8000
#define COMMON_POR_REGS_BOOT_POR_SPI_PORT_USED_ALIGN               0
#define COMMON_POR_REGS_BOOT_POR_SPI_PORT_USED_BITS                1
#define COMMON_POR_REGS_BOOT_POR_SPI_PORT_USED_SHIFT               15

/* common_por_regs :: boot_por :: ser_boot [14:14] */
#define COMMON_POR_REGS_BOOT_POR_SER_BOOT_MASK                     0x4000
#define COMMON_POR_REGS_BOOT_POR_SER_BOOT_ALIGN                    0
#define COMMON_POR_REGS_BOOT_POR_SER_BOOT_BITS                     1
#define COMMON_POR_REGS_BOOT_POR_SER_BOOT_SHIFT                    14

/* common_por_regs :: boot_por :: spi_dwld_done [13:13] */
#define COMMON_POR_REGS_BOOT_POR_SPI_DWLD_DONE_MASK                0x2000
#define COMMON_POR_REGS_BOOT_POR_SPI_DWLD_DONE_ALIGN               0
#define COMMON_POR_REGS_BOOT_POR_SPI_DWLD_DONE_BITS                1
#define COMMON_POR_REGS_BOOT_POR_SPI_DWLD_DONE_SHIFT               13

/* common_por_regs :: boot_por :: reserved0 [12:08] */
#define COMMON_POR_REGS_BOOT_POR_RESERVED0_MASK                    0x1f00
#define COMMON_POR_REGS_BOOT_POR_RESERVED0_ALIGN                   0
#define COMMON_POR_REGS_BOOT_POR_RESERVED0_BITS                    5
#define COMMON_POR_REGS_BOOT_POR_RESERVED0_SHIFT                   8

/* common_por_regs :: boot_por :: gpreg [07:00] */
#define COMMON_POR_REGS_BOOT_POR_GPREG_MASK                        0x00ff
#define COMMON_POR_REGS_BOOT_POR_GPREG_ALIGN                       0
#define COMMON_POR_REGS_BOOT_POR_GPREG_BITS                        8
#define COMMON_POR_REGS_BOOT_POR_GPREG_SHIFT                       0


/****************************************************************************
 * ctl_regs_regs
 ***************************************************************************/
/****************************************************************************
 * ctl_regs :: tx_eeprom_control
 ***************************************************************************/
/* ctl_regs :: tx_eeprom_control :: reserved0 [15:06] */
#define CTL_REGS_TX_EEPROM_CONTROL_RESERVED0_MASK                  0xffc0
#define CTL_REGS_TX_EEPROM_CONTROL_RESERVED0_ALIGN                 0
#define CTL_REGS_TX_EEPROM_CONTROL_RESERVED0_BITS                  10
#define CTL_REGS_TX_EEPROM_CONTROL_RESERVED0_SHIFT                 6

/* ctl_regs :: tx_eeprom_control :: eeprom_offset [05:03] */
#define CTL_REGS_TX_EEPROM_CONTROL_EEPROM_OFFSET_MASK              0x0038
#define CTL_REGS_TX_EEPROM_CONTROL_EEPROM_OFFSET_ALIGN             0
#define CTL_REGS_TX_EEPROM_CONTROL_EEPROM_OFFSET_BITS              3
#define CTL_REGS_TX_EEPROM_CONTROL_EEPROM_OFFSET_SHIFT             3

/* ctl_regs :: tx_eeprom_control :: eeprom_count [02:00] */
#define CTL_REGS_TX_EEPROM_CONTROL_EEPROM_COUNT_MASK               0x0007
#define CTL_REGS_TX_EEPROM_CONTROL_EEPROM_COUNT_ALIGN              0
#define CTL_REGS_TX_EEPROM_CONTROL_EEPROM_COUNT_BITS               3
#define CTL_REGS_TX_EEPROM_CONTROL_EEPROM_COUNT_SHIFT              0


/****************************************************************************
 * ctl_regs :: common_chip_id
 ***************************************************************************/
/* ctl_regs :: common_chip_id :: chip_id_15_0 [15:00] */
#define CTL_REGS_COMMON_CHIP_ID_CHIP_ID_15_0_MASK                  0xffff
#define CTL_REGS_COMMON_CHIP_ID_CHIP_ID_15_0_ALIGN                 0
#define CTL_REGS_COMMON_CHIP_ID_CHIP_ID_15_0_BITS                  16
#define CTL_REGS_COMMON_CHIP_ID_CHIP_ID_15_0_SHIFT                 0


/****************************************************************************
 * ctl_regs :: common_rev_id
 ***************************************************************************/
/* ctl_regs :: common_rev_id :: chip_id_19_16 [15:12] */
#define CTL_REGS_COMMON_REV_ID_CHIP_ID_19_16_MASK                  0xf000
#define CTL_REGS_COMMON_REV_ID_CHIP_ID_19_16_ALIGN                 0
#define CTL_REGS_COMMON_REV_ID_CHIP_ID_19_16_BITS                  4
#define CTL_REGS_COMMON_REV_ID_CHIP_ID_19_16_SHIFT                 12

/* ctl_regs :: common_rev_id :: reserved_for_eco0 [11:08] */
#define CTL_REGS_COMMON_REV_ID_RESERVED_FOR_ECO0_MASK              0x0f00
#define CTL_REGS_COMMON_REV_ID_RESERVED_FOR_ECO0_ALIGN             0
#define CTL_REGS_COMMON_REV_ID_RESERVED_FOR_ECO0_BITS              4
#define CTL_REGS_COMMON_REV_ID_RESERVED_FOR_ECO0_SHIFT             8

/* ctl_regs :: common_rev_id :: chip_rev [07:00] */
#define CTL_REGS_COMMON_REV_ID_CHIP_REV_MASK                       0x00ff
#define CTL_REGS_COMMON_REV_ID_CHIP_REV_ALIGN                      0
#define CTL_REGS_COMMON_REV_ID_CHIP_REV_BITS                       8
#define CTL_REGS_COMMON_REV_ID_CHIP_REV_SHIFT                      0


/****************************************************************************
 * ctl_regs :: common_ctrl1
 ***************************************************************************/
/* ctl_regs :: common_ctrl1 :: reserved_for_eco0 [15:10] */
#define CTL_REGS_COMMON_CTRL1_RESERVED_FOR_ECO0_MASK               0xfc00
#define CTL_REGS_COMMON_CTRL1_RESERVED_FOR_ECO0_ALIGN              0
#define CTL_REGS_COMMON_CTRL1_RESERVED_FOR_ECO0_BITS               6
#define CTL_REGS_COMMON_CTRL1_RESERVED_FOR_ECO0_SHIFT              10

/* ctl_regs :: common_ctrl1 :: en_rst_on_pd [09:09] */
#define CTL_REGS_COMMON_CTRL1_EN_RST_ON_PD_MASK                    0x0200
#define CTL_REGS_COMMON_CTRL1_EN_RST_ON_PD_ALIGN                   0
#define CTL_REGS_COMMON_CTRL1_EN_RST_ON_PD_BITS                    1
#define CTL_REGS_COMMON_CTRL1_EN_RST_ON_PD_SHIFT                   9

/* ctl_regs :: common_ctrl1 :: rx_dp_rstb [08:08] */
#define CTL_REGS_COMMON_CTRL1_RX_DP_RSTB_MASK                      0x0100
#define CTL_REGS_COMMON_CTRL1_RX_DP_RSTB_ALIGN                     0
#define CTL_REGS_COMMON_CTRL1_RX_DP_RSTB_BITS                      1
#define CTL_REGS_COMMON_CTRL1_RX_DP_RSTB_SHIFT                     8

/* ctl_regs :: common_ctrl1 :: tx_dp_rstb [07:07] */
#define CTL_REGS_COMMON_CTRL1_TX_DP_RSTB_MASK                      0x0080
#define CTL_REGS_COMMON_CTRL1_TX_DP_RSTB_ALIGN                     0
#define CTL_REGS_COMMON_CTRL1_TX_DP_RSTB_BITS                      1
#define CTL_REGS_COMMON_CTRL1_TX_DP_RSTB_SHIFT                     7

/* ctl_regs :: common_ctrl1 :: rescal_rstb [06:06] */
#define CTL_REGS_COMMON_CTRL1_RESCAL_RSTB_MASK                     0x0040
#define CTL_REGS_COMMON_CTRL1_RESCAL_RSTB_ALIGN                    0
#define CTL_REGS_COMMON_CTRL1_RESCAL_RSTB_BITS                     1
#define CTL_REGS_COMMON_CTRL1_RESCAL_RSTB_SHIFT                    6

/* ctl_regs :: common_ctrl1 :: spi_rstb [05:05] */
#define CTL_REGS_COMMON_CTRL1_SPI_RSTB_MASK                        0x0020
#define CTL_REGS_COMMON_CTRL1_SPI_RSTB_ALIGN                       0
#define CTL_REGS_COMMON_CTRL1_SPI_RSTB_BITS                        1
#define CTL_REGS_COMMON_CTRL1_SPI_RSTB_SHIFT                       5

/* ctl_regs :: common_ctrl1 :: spi2x_rstb [04:04] */
#define CTL_REGS_COMMON_CTRL1_SPI2X_RSTB_MASK                      0x0010
#define CTL_REGS_COMMON_CTRL1_SPI2X_RSTB_ALIGN                     0
#define CTL_REGS_COMMON_CTRL1_SPI2X_RSTB_BITS                      1
#define CTL_REGS_COMMON_CTRL1_SPI2X_RSTB_SHIFT                     4

/* ctl_regs :: common_ctrl1 :: uc_rstb [03:03] */
#define CTL_REGS_COMMON_CTRL1_UC_RSTB_MASK                         0x0008
#define CTL_REGS_COMMON_CTRL1_UC_RSTB_ALIGN                        0
#define CTL_REGS_COMMON_CTRL1_UC_RSTB_BITS                         1
#define CTL_REGS_COMMON_CTRL1_UC_RSTB_SHIFT                        3

/* ctl_regs :: common_ctrl1 :: arb_rstb [02:02] */
#define CTL_REGS_COMMON_CTRL1_ARB_RSTB_MASK                        0x0004
#define CTL_REGS_COMMON_CTRL1_ARB_RSTB_ALIGN                       0
#define CTL_REGS_COMMON_CTRL1_ARB_RSTB_BITS                        1
#define CTL_REGS_COMMON_CTRL1_ARB_RSTB_SHIFT                       2

/* ctl_regs :: common_ctrl1 :: reg_rstb [01:01] */
#define CTL_REGS_COMMON_CTRL1_REG_RSTB_MASK                        0x0002
#define CTL_REGS_COMMON_CTRL1_REG_RSTB_ALIGN                       0
#define CTL_REGS_COMMON_CTRL1_REG_RSTB_BITS                        1
#define CTL_REGS_COMMON_CTRL1_REG_RSTB_SHIFT                       1

/* ctl_regs :: common_ctrl1 :: resetb [00:00] */
#define CTL_REGS_COMMON_CTRL1_RESETB_MASK                          0x0001
#define CTL_REGS_COMMON_CTRL1_RESETB_ALIGN                         0
#define CTL_REGS_COMMON_CTRL1_RESETB_BITS                          1
#define CTL_REGS_COMMON_CTRL1_RESETB_SHIFT                         0


/****************************************************************************
 * ctl_regs :: user_modesel_reg
 ***************************************************************************/
/* ctl_regs :: user_modesel_reg :: reserved_for_eco0 [15:04] */
#define CTL_REGS_USER_MODESEL_REG_RESERVED_FOR_ECO0_MASK           0xfff0
#define CTL_REGS_USER_MODESEL_REG_RESERVED_FOR_ECO0_ALIGN          0
#define CTL_REGS_USER_MODESEL_REG_RESERVED_FOR_ECO0_BITS           12
#define CTL_REGS_USER_MODESEL_REG_RESERVED_FOR_ECO0_SHIFT          4

/* ctl_regs :: user_modesel_reg :: user_modesel_frc [03:03] */
#define CTL_REGS_USER_MODESEL_REG_USER_MODESEL_FRC_MASK            0x0008
#define CTL_REGS_USER_MODESEL_REG_USER_MODESEL_FRC_ALIGN           0
#define CTL_REGS_USER_MODESEL_REG_USER_MODESEL_FRC_BITS            1
#define CTL_REGS_USER_MODESEL_REG_USER_MODESEL_FRC_SHIFT           3

/* ctl_regs :: user_modesel_reg :: user_modesel [02:00] */
#define CTL_REGS_USER_MODESEL_REG_USER_MODESEL_MASK                0x0007
#define CTL_REGS_USER_MODESEL_REG_USER_MODESEL_ALIGN               0
#define CTL_REGS_USER_MODESEL_REG_USER_MODESEL_BITS                3
#define CTL_REGS_USER_MODESEL_REG_USER_MODESEL_SHIFT               0


/****************************************************************************
 * ctl_regs :: refclk_sel_reg
 ***************************************************************************/
/* ctl_regs :: refclk_sel_reg :: reserved_for_eco0 [15:04] */
#define CTL_REGS_REFCLK_SEL_REG_RESERVED_FOR_ECO0_MASK             0xfff0
#define CTL_REGS_REFCLK_SEL_REG_RESERVED_FOR_ECO0_ALIGN            0
#define CTL_REGS_REFCLK_SEL_REG_RESERVED_FOR_ECO0_BITS             12
#define CTL_REGS_REFCLK_SEL_REG_RESERVED_FOR_ECO0_SHIFT            4

/* ctl_regs :: refclk_sel_reg :: refclk_code [03:00] */
#define CTL_REGS_REFCLK_SEL_REG_REFCLK_CODE_MASK                   0x000f
#define CTL_REGS_REFCLK_SEL_REG_REFCLK_CODE_ALIGN                  0
#define CTL_REGS_REFCLK_SEL_REG_REFCLK_CODE_BITS                   4
#define CTL_REGS_REFCLK_SEL_REG_REFCLK_CODE_SHIFT                  0


/****************************************************************************
 * ctl_regs :: common_ctrl2
 ***************************************************************************/
/* ctl_regs :: common_ctrl2 :: spi_rom_mode [15:15] */
#define CTL_REGS_COMMON_CTRL2_SPI_ROM_MODE_MASK                    0x8000
#define CTL_REGS_COMMON_CTRL2_SPI_ROM_MODE_ALIGN                   0
#define CTL_REGS_COMMON_CTRL2_SPI_ROM_MODE_BITS                    1
#define CTL_REGS_COMMON_CTRL2_SPI_ROM_MODE_SHIFT                   15

/* ctl_regs :: common_ctrl2 :: tx_dis_pin_frc [14:14] */
#define CTL_REGS_COMMON_CTRL2_TX_DIS_PIN_FRC_MASK                  0x4000
#define CTL_REGS_COMMON_CTRL2_TX_DIS_PIN_FRC_ALIGN                 0
#define CTL_REGS_COMMON_CTRL2_TX_DIS_PIN_FRC_BITS                  1
#define CTL_REGS_COMMON_CTRL2_TX_DIS_PIN_FRC_SHIFT                 14

/* ctl_regs :: common_ctrl2 :: tx_dis_pin_frcval [13:13] */
#define CTL_REGS_COMMON_CTRL2_TX_DIS_PIN_FRCVAL_MASK               0x2000
#define CTL_REGS_COMMON_CTRL2_TX_DIS_PIN_FRCVAL_ALIGN              0
#define CTL_REGS_COMMON_CTRL2_TX_DIS_PIN_FRCVAL_BITS               1
#define CTL_REGS_COMMON_CTRL2_TX_DIS_PIN_FRCVAL_SHIFT              13

/* ctl_regs :: common_ctrl2 :: mod_lowpr_pin_frc [12:12] */
#define CTL_REGS_COMMON_CTRL2_MOD_LOWPR_PIN_FRC_MASK               0x1000
#define CTL_REGS_COMMON_CTRL2_MOD_LOWPR_PIN_FRC_ALIGN              0
#define CTL_REGS_COMMON_CTRL2_MOD_LOWPR_PIN_FRC_BITS               1
#define CTL_REGS_COMMON_CTRL2_MOD_LOWPR_PIN_FRC_SHIFT              12

/* ctl_regs :: common_ctrl2 :: mod_lowpr_pin_frcval [11:11] */
#define CTL_REGS_COMMON_CTRL2_MOD_LOWPR_PIN_FRCVAL_MASK            0x0800
#define CTL_REGS_COMMON_CTRL2_MOD_LOWPR_PIN_FRCVAL_ALIGN           0
#define CTL_REGS_COMMON_CTRL2_MOD_LOWPR_PIN_FRCVAL_BITS            1
#define CTL_REGS_COMMON_CTRL2_MOD_LOWPR_PIN_FRCVAL_SHIFT           11

/* ctl_regs :: common_ctrl2 :: reserved_for_eco0 [10:00] */
#define CTL_REGS_COMMON_CTRL2_RESERVED_FOR_ECO0_MASK               0x07ff
#define CTL_REGS_COMMON_CTRL2_RESERVED_FOR_ECO0_ALIGN              0
#define CTL_REGS_COMMON_CTRL2_RESERVED_FOR_ECO0_BITS               11
#define CTL_REGS_COMMON_CTRL2_RESERVED_FOR_ECO0_SHIFT              0


/****************************************************************************
 * ctl_regs :: common_status1
 ***************************************************************************/
/* ctl_regs :: common_status1 :: reserved_for_eco0 [15:06] */
#define CTL_REGS_COMMON_STATUS1_RESERVED_FOR_ECO0_MASK             0xffc0
#define CTL_REGS_COMMON_STATUS1_RESERVED_FOR_ECO0_ALIGN            0
#define CTL_REGS_COMMON_STATUS1_RESERVED_FOR_ECO0_BITS             10
#define CTL_REGS_COMMON_STATUS1_RESERVED_FOR_ECO0_SHIFT            6

/* ctl_regs :: common_status1 :: refsel_pad [05:05] */
#define CTL_REGS_COMMON_STATUS1_REFSEL_PAD_MASK                    0x0020
#define CTL_REGS_COMMON_STATUS1_REFSEL_PAD_ALIGN                   0
#define CTL_REGS_COMMON_STATUS1_REFSEL_PAD_BITS                    1
#define CTL_REGS_COMMON_STATUS1_REFSEL_PAD_SHIFT                   5

/* ctl_regs :: common_status1 :: reserved1 [04:04] */
#define CTL_REGS_COMMON_STATUS1_RESERVED1_MASK                     0x0010
#define CTL_REGS_COMMON_STATUS1_RESERVED1_ALIGN                    0
#define CTL_REGS_COMMON_STATUS1_RESERVED1_BITS                     1
#define CTL_REGS_COMMON_STATUS1_RESERVED1_SHIFT                    4

/* ctl_regs :: common_status1 :: reserved2 [03:03] */
#define CTL_REGS_COMMON_STATUS1_RESERVED2_MASK                     0x0008
#define CTL_REGS_COMMON_STATUS1_RESERVED2_ALIGN                    0
#define CTL_REGS_COMMON_STATUS1_RESERVED2_BITS                     1
#define CTL_REGS_COMMON_STATUS1_RESERVED2_SHIFT                    3

/* ctl_regs :: common_status1 :: reserved3 [02:00] */
#define CTL_REGS_COMMON_STATUS1_RESERVED3_MASK                     0x0007
#define CTL_REGS_COMMON_STATUS1_RESERVED3_ALIGN                    0
#define CTL_REGS_COMMON_STATUS1_RESERVED3_BITS                     3
#define CTL_REGS_COMMON_STATUS1_RESERVED3_SHIFT                    0


/****************************************************************************
 * ctl_regs :: ieee_modesel_default
 ***************************************************************************/
/* ctl_regs :: ieee_modesel_default :: reserved0 [15:08] */
#define CTL_REGS_IEEE_MODESEL_DEFAULT_RESERVED0_MASK               0xff00
#define CTL_REGS_IEEE_MODESEL_DEFAULT_RESERVED0_ALIGN              0
#define CTL_REGS_IEEE_MODESEL_DEFAULT_RESERVED0_BITS               8
#define CTL_REGS_IEEE_MODESEL_DEFAULT_RESERVED0_SHIFT              8

/* ctl_regs :: ieee_modesel_default :: ieee_modesel_cfg_hold [07:07] */
#define CTL_REGS_IEEE_MODESEL_DEFAULT_IEEE_MODESEL_CFG_HOLD_MASK   0x0080
#define CTL_REGS_IEEE_MODESEL_DEFAULT_IEEE_MODESEL_CFG_HOLD_ALIGN  0
#define CTL_REGS_IEEE_MODESEL_DEFAULT_IEEE_MODESEL_CFG_HOLD_BITS   1
#define CTL_REGS_IEEE_MODESEL_DEFAULT_IEEE_MODESEL_CFG_HOLD_SHIFT  7

/* ctl_regs :: ieee_modesel_default :: frc_ieee_modesel_def [06:06] */
#define CTL_REGS_IEEE_MODESEL_DEFAULT_FRC_IEEE_MODESEL_DEF_MASK    0x0040
#define CTL_REGS_IEEE_MODESEL_DEFAULT_FRC_IEEE_MODESEL_DEF_ALIGN   0
#define CTL_REGS_IEEE_MODESEL_DEFAULT_FRC_IEEE_MODESEL_DEF_BITS    1
#define CTL_REGS_IEEE_MODESEL_DEFAULT_FRC_IEEE_MODESEL_DEF_SHIFT   6

/* ctl_regs :: ieee_modesel_default :: ieee_modesel_def [05:00] */
#define CTL_REGS_IEEE_MODESEL_DEFAULT_IEEE_MODESEL_DEF_MASK        0x003f
#define CTL_REGS_IEEE_MODESEL_DEFAULT_IEEE_MODESEL_DEF_ALIGN       0
#define CTL_REGS_IEEE_MODESEL_DEFAULT_IEEE_MODESEL_DEF_BITS        6
#define CTL_REGS_IEEE_MODESEL_DEFAULT_IEEE_MODESEL_DEF_SHIFT       0


/****************************************************************************
 * ctl_regs :: led_ctrl
 ***************************************************************************/
/* ctl_regs :: led_ctrl :: reserved0 [15:12] */
#define CTL_REGS_LED_CTRL_RESERVED0_MASK                           0xf000
#define CTL_REGS_LED_CTRL_RESERVED0_ALIGN                          0
#define CTL_REGS_LED_CTRL_RESERVED0_BITS                           4
#define CTL_REGS_LED_CTRL_RESERVED0_SHIFT                          12

/* ctl_regs :: led_ctrl :: led_gpio_select [11:09] */
#define CTL_REGS_LED_CTRL_LED_GPIO_SELECT_MASK                     0x0e00
#define CTL_REGS_LED_CTRL_LED_GPIO_SELECT_ALIGN                    0
#define CTL_REGS_LED_CTRL_LED_GPIO_SELECT_BITS                     3
#define CTL_REGS_LED_CTRL_LED_GPIO_SELECT_SHIFT                    9

/* ctl_regs :: led_ctrl :: led_en [08:08] */
#define CTL_REGS_LED_CTRL_LED_EN_MASK                              0x0100
#define CTL_REGS_LED_CTRL_LED_EN_ALIGN                             0
#define CTL_REGS_LED_CTRL_LED_EN_BITS                              1
#define CTL_REGS_LED_CTRL_LED_EN_SHIFT                             8

/* ctl_regs :: led_ctrl :: led_base_div [07:06] */
#define CTL_REGS_LED_CTRL_LED_BASE_DIV_MASK                        0x00c0
#define CTL_REGS_LED_CTRL_LED_BASE_DIV_ALIGN                       0
#define CTL_REGS_LED_CTRL_LED_BASE_DIV_BITS                        2
#define CTL_REGS_LED_CTRL_LED_BASE_DIV_SHIFT                       6

/* ctl_regs :: led_ctrl :: led_on_time [05:03] */
#define CTL_REGS_LED_CTRL_LED_ON_TIME_MASK                         0x0038
#define CTL_REGS_LED_CTRL_LED_ON_TIME_ALIGN                        0
#define CTL_REGS_LED_CTRL_LED_ON_TIME_BITS                         3
#define CTL_REGS_LED_CTRL_LED_ON_TIME_SHIFT                        3

/* ctl_regs :: led_ctrl :: led_off_time [02:00] */
#define CTL_REGS_LED_CTRL_LED_OFF_TIME_MASK                        0x0007
#define CTL_REGS_LED_CTRL_LED_OFF_TIME_ALIGN                       0
#define CTL_REGS_LED_CTRL_LED_OFF_TIME_BITS                        3
#define CTL_REGS_LED_CTRL_LED_OFF_TIME_SHIFT                       0


/****************************************************************************
 * ctl_regs :: eisr
 ***************************************************************************/
/* ctl_regs :: eisr :: reserved0 [15:07] */
#define CTL_REGS_EISR_RESERVED0_MASK                               0xff80
#define CTL_REGS_EISR_RESERVED0_ALIGN                              0
#define CTL_REGS_EISR_RESERVED0_BITS                               9
#define CTL_REGS_EISR_RESERVED0_SHIFT                              7

/* ctl_regs :: eisr :: watch_dog_timer [06:06] */
#define CTL_REGS_EISR_WATCH_DOG_TIMER_MASK                         0x0040
#define CTL_REGS_EISR_WATCH_DOG_TIMER_ALIGN                        0
#define CTL_REGS_EISR_WATCH_DOG_TIMER_BITS                         1
#define CTL_REGS_EISR_WATCH_DOG_TIMER_SHIFT                        6

/* ctl_regs :: eisr :: msg_out [05:05] */
#define CTL_REGS_EISR_MSG_OUT_MASK                                 0x0020
#define CTL_REGS_EISR_MSG_OUT_ALIGN                                0
#define CTL_REGS_EISR_MSG_OUT_BITS                                 1
#define CTL_REGS_EISR_MSG_OUT_SHIFT                                5

/* ctl_regs :: eisr :: reserved1 [04:02] */
#define CTL_REGS_EISR_RESERVED1_MASK                               0x001c
#define CTL_REGS_EISR_RESERVED1_ALIGN                              0
#define CTL_REGS_EISR_RESERVED1_BITS                               3
#define CTL_REGS_EISR_RESERVED1_SHIFT                              2

/* ctl_regs :: eisr :: tx_fifo_error [01:01] */
#define CTL_REGS_EISR_TX_FIFO_ERROR_MASK                           0x0002
#define CTL_REGS_EISR_TX_FIFO_ERROR_ALIGN                          0
#define CTL_REGS_EISR_TX_FIFO_ERROR_BITS                           1
#define CTL_REGS_EISR_TX_FIFO_ERROR_SHIFT                          1

/* ctl_regs :: eisr :: rx_fifo_error [00:00] */
#define CTL_REGS_EISR_RX_FIFO_ERROR_MASK                           0x0001
#define CTL_REGS_EISR_RX_FIFO_ERROR_ALIGN                          0
#define CTL_REGS_EISR_RX_FIFO_ERROR_BITS                           1
#define CTL_REGS_EISR_RX_FIFO_ERROR_SHIFT                          0


/****************************************************************************
 * ctl_regs :: eimr
 ***************************************************************************/
/* ctl_regs :: eimr :: reserved0 [15:07] */
#define CTL_REGS_EIMR_RESERVED0_MASK                               0xff80
#define CTL_REGS_EIMR_RESERVED0_ALIGN                              0
#define CTL_REGS_EIMR_RESERVED0_BITS                               9
#define CTL_REGS_EIMR_RESERVED0_SHIFT                              7

/* ctl_regs :: eimr :: mask_watch_dog_timer [06:06] */
#define CTL_REGS_EIMR_MASK_WATCH_DOG_TIMER_MASK                    0x0040
#define CTL_REGS_EIMR_MASK_WATCH_DOG_TIMER_ALIGN                   0
#define CTL_REGS_EIMR_MASK_WATCH_DOG_TIMER_BITS                    1
#define CTL_REGS_EIMR_MASK_WATCH_DOG_TIMER_SHIFT                   6

/* ctl_regs :: eimr :: mask_msg_out [05:05] */
#define CTL_REGS_EIMR_MASK_MSG_OUT_MASK                            0x0020
#define CTL_REGS_EIMR_MASK_MSG_OUT_ALIGN                           0
#define CTL_REGS_EIMR_MASK_MSG_OUT_BITS                            1
#define CTL_REGS_EIMR_MASK_MSG_OUT_SHIFT                           5

/* ctl_regs :: eimr :: reserved1 [04:02] */
#define CTL_REGS_EIMR_RESERVED1_MASK                               0x001c
#define CTL_REGS_EIMR_RESERVED1_ALIGN                              0
#define CTL_REGS_EIMR_RESERVED1_BITS                               3
#define CTL_REGS_EIMR_RESERVED1_SHIFT                              2

/* ctl_regs :: eimr :: mask_tx_fifo_error [01:01] */
#define CTL_REGS_EIMR_MASK_TX_FIFO_ERROR_MASK                      0x0002
#define CTL_REGS_EIMR_MASK_TX_FIFO_ERROR_ALIGN                     0
#define CTL_REGS_EIMR_MASK_TX_FIFO_ERROR_BITS                      1
#define CTL_REGS_EIMR_MASK_TX_FIFO_ERROR_SHIFT                     1

/* ctl_regs :: eimr :: mask_rx_fifo_error [00:00] */
#define CTL_REGS_EIMR_MASK_RX_FIFO_ERROR_MASK                      0x0001
#define CTL_REGS_EIMR_MASK_RX_FIFO_ERROR_ALIGN                     0
#define CTL_REGS_EIMR_MASK_RX_FIFO_ERROR_BITS                      1
#define CTL_REGS_EIMR_MASK_RX_FIFO_ERROR_SHIFT                     0


/****************************************************************************
 * ctl_regs :: eipr
 ***************************************************************************/
/* ctl_regs :: eipr :: reserved0 [15:07] */
#define CTL_REGS_EIPR_RESERVED0_MASK                               0xff80
#define CTL_REGS_EIPR_RESERVED0_ALIGN                              0
#define CTL_REGS_EIPR_RESERVED0_BITS                               9
#define CTL_REGS_EIPR_RESERVED0_SHIFT                              7

/* ctl_regs :: eipr :: p_watch_dog_timer [06:06] */
#define CTL_REGS_EIPR_P_WATCH_DOG_TIMER_MASK                       0x0040
#define CTL_REGS_EIPR_P_WATCH_DOG_TIMER_ALIGN                      0
#define CTL_REGS_EIPR_P_WATCH_DOG_TIMER_BITS                       1
#define CTL_REGS_EIPR_P_WATCH_DOG_TIMER_SHIFT                      6

/* ctl_regs :: eipr :: p_msg_out [05:05] */
#define CTL_REGS_EIPR_P_MSG_OUT_MASK                               0x0020
#define CTL_REGS_EIPR_P_MSG_OUT_ALIGN                              0
#define CTL_REGS_EIPR_P_MSG_OUT_BITS                               1
#define CTL_REGS_EIPR_P_MSG_OUT_SHIFT                              5

/* ctl_regs :: eipr :: reserved1 [04:02] */
#define CTL_REGS_EIPR_RESERVED1_MASK                               0x001c
#define CTL_REGS_EIPR_RESERVED1_ALIGN                              0
#define CTL_REGS_EIPR_RESERVED1_BITS                               3
#define CTL_REGS_EIPR_RESERVED1_SHIFT                              2

/* ctl_regs :: eipr :: p_tx_fifo_error [01:01] */
#define CTL_REGS_EIPR_P_TX_FIFO_ERROR_MASK                         0x0002
#define CTL_REGS_EIPR_P_TX_FIFO_ERROR_ALIGN                        0
#define CTL_REGS_EIPR_P_TX_FIFO_ERROR_BITS                         1
#define CTL_REGS_EIPR_P_TX_FIFO_ERROR_SHIFT                        1

/* ctl_regs :: eipr :: p_rx_fifo_error [00:00] */
#define CTL_REGS_EIPR_P_RX_FIFO_ERROR_MASK                         0x0001
#define CTL_REGS_EIPR_P_RX_FIFO_ERROR_ALIGN                        0
#define CTL_REGS_EIPR_P_RX_FIFO_ERROR_BITS                         1
#define CTL_REGS_EIPR_P_RX_FIFO_ERROR_SHIFT                        0


/****************************************************************************
 * ctl_regs :: pwrup
 ***************************************************************************/
/* ctl_regs :: pwrup :: reserved0 [15:03] */
#define CTL_REGS_PWRUP_RESERVED0_MASK                              0xfff8
#define CTL_REGS_PWRUP_RESERVED0_ALIGN                             0
#define CTL_REGS_PWRUP_RESERVED0_BITS                              13
#define CTL_REGS_PWRUP_RESERVED0_SHIFT                             3

/* ctl_regs :: pwrup :: pwrup_done [02:02] */
#define CTL_REGS_PWRUP_PWRUP_DONE_MASK                             0x0004
#define CTL_REGS_PWRUP_PWRUP_DONE_ALIGN                            0
#define CTL_REGS_PWRUP_PWRUP_DONE_BITS                             1
#define CTL_REGS_PWRUP_PWRUP_DONE_SHIFT                            2

/* ctl_regs :: pwrup :: frc_pwrup_done [01:01] */
#define CTL_REGS_PWRUP_FRC_PWRUP_DONE_MASK                         0x0002
#define CTL_REGS_PWRUP_FRC_PWRUP_DONE_ALIGN                        0
#define CTL_REGS_PWRUP_FRC_PWRUP_DONE_BITS                         1
#define CTL_REGS_PWRUP_FRC_PWRUP_DONE_SHIFT                        1

/* ctl_regs :: pwrup :: dis_pwr_seq [00:00] */
#define CTL_REGS_PWRUP_DIS_PWR_SEQ_MASK                            0x0001
#define CTL_REGS_PWRUP_DIS_PWR_SEQ_ALIGN                           0
#define CTL_REGS_PWRUP_DIS_PWR_SEQ_BITS                            1
#define CTL_REGS_PWRUP_DIS_PWR_SEQ_SHIFT                           0


/****************************************************************************
 * ctl_regs :: misr
 ***************************************************************************/
/* ctl_regs :: misr :: token_req_intr [15:15] */
#define CTL_REGS_MISR_TOKEN_REQ_INTR_MASK                          0x8000
#define CTL_REGS_MISR_TOKEN_REQ_INTR_ALIGN                         0
#define CTL_REGS_MISR_TOKEN_REQ_INTR_BITS                          1
#define CTL_REGS_MISR_TOKEN_REQ_INTR_SHIFT                         15

/* ctl_regs :: misr :: timer_intr [14:07] */
#define CTL_REGS_MISR_TIMER_INTR_MASK                              0x7f80
#define CTL_REGS_MISR_TIMER_INTR_ALIGN                             0
#define CTL_REGS_MISR_TIMER_INTR_BITS                              8
#define CTL_REGS_MISR_TIMER_INTR_SHIFT                             7

/* ctl_regs :: misr :: reserved_for_eco0 [06:03] */
#define CTL_REGS_MISR_RESERVED_FOR_ECO0_MASK                       0x0078
#define CTL_REGS_MISR_RESERVED_FOR_ECO0_ALIGN                      0
#define CTL_REGS_MISR_RESERVED_FOR_ECO0_BITS                       4
#define CTL_REGS_MISR_RESERVED_FOR_ECO0_SHIFT                      3

/* ctl_regs :: misr :: cdr_channel_intr [02:02] */
#define CTL_REGS_MISR_CDR_CHANNEL_INTR_MASK                        0x0004
#define CTL_REGS_MISR_CDR_CHANNEL_INTR_ALIGN                       0
#define CTL_REGS_MISR_CDR_CHANNEL_INTR_BITS                        1
#define CTL_REGS_MISR_CDR_CHANNEL_INTR_SHIFT                       2

/* ctl_regs :: misr :: tx_analog_intr [01:01] */
#define CTL_REGS_MISR_TX_ANALOG_INTR_MASK                          0x0002
#define CTL_REGS_MISR_TX_ANALOG_INTR_ALIGN                         0
#define CTL_REGS_MISR_TX_ANALOG_INTR_BITS                          1
#define CTL_REGS_MISR_TX_ANALOG_INTR_SHIFT                         1

/* ctl_regs :: misr :: rx_analog_intr [00:00] */
#define CTL_REGS_MISR_RX_ANALOG_INTR_MASK                          0x0001
#define CTL_REGS_MISR_RX_ANALOG_INTR_ALIGN                         0
#define CTL_REGS_MISR_RX_ANALOG_INTR_BITS                          1
#define CTL_REGS_MISR_RX_ANALOG_INTR_SHIFT                         0


/****************************************************************************
 * ctl_regs :: mimr
 ***************************************************************************/
/* ctl_regs :: mimr :: token_req_mask [15:15] */
#define CTL_REGS_MIMR_TOKEN_REQ_MASK_MASK                          0x8000
#define CTL_REGS_MIMR_TOKEN_REQ_MASK_ALIGN                         0
#define CTL_REGS_MIMR_TOKEN_REQ_MASK_BITS                          1
#define CTL_REGS_MIMR_TOKEN_REQ_MASK_SHIFT                         15

/* ctl_regs :: mimr :: timer_mask [14:07] */
#define CTL_REGS_MIMR_TIMER_MASK_MASK                              0x7f80
#define CTL_REGS_MIMR_TIMER_MASK_ALIGN                             0
#define CTL_REGS_MIMR_TIMER_MASK_BITS                              8
#define CTL_REGS_MIMR_TIMER_MASK_SHIFT                             7

/* ctl_regs :: mimr :: reserved_for_eco0 [06:03] */
#define CTL_REGS_MIMR_RESERVED_FOR_ECO0_MASK                       0x0078
#define CTL_REGS_MIMR_RESERVED_FOR_ECO0_ALIGN                      0
#define CTL_REGS_MIMR_RESERVED_FOR_ECO0_BITS                       4
#define CTL_REGS_MIMR_RESERVED_FOR_ECO0_SHIFT                      3

/* ctl_regs :: mimr :: cdr_channel_mask [02:02] */
#define CTL_REGS_MIMR_CDR_CHANNEL_MASK_MASK                        0x0004
#define CTL_REGS_MIMR_CDR_CHANNEL_MASK_ALIGN                       0
#define CTL_REGS_MIMR_CDR_CHANNEL_MASK_BITS                        1
#define CTL_REGS_MIMR_CDR_CHANNEL_MASK_SHIFT                       2

/* ctl_regs :: mimr :: tx_analog_mask [01:01] */
#define CTL_REGS_MIMR_TX_ANALOG_MASK_MASK                          0x0002
#define CTL_REGS_MIMR_TX_ANALOG_MASK_ALIGN                         0
#define CTL_REGS_MIMR_TX_ANALOG_MASK_BITS                          1
#define CTL_REGS_MIMR_TX_ANALOG_MASK_SHIFT                         1

/* ctl_regs :: mimr :: rx_analog_mask [00:00] */
#define CTL_REGS_MIMR_RX_ANALOG_MASK_MASK                          0x0001
#define CTL_REGS_MIMR_RX_ANALOG_MASK_ALIGN                         0
#define CTL_REGS_MIMR_RX_ANALOG_MASK_BITS                          1
#define CTL_REGS_MIMR_RX_ANALOG_MASK_SHIFT                         0


/****************************************************************************
 * ctl_regs :: mipm
 ***************************************************************************/
/* ctl_regs :: mipm :: p_token_req_intr [15:15] */
#define CTL_REGS_MIPM_P_TOKEN_REQ_INTR_MASK                        0x8000
#define CTL_REGS_MIPM_P_TOKEN_REQ_INTR_ALIGN                       0
#define CTL_REGS_MIPM_P_TOKEN_REQ_INTR_BITS                        1
#define CTL_REGS_MIPM_P_TOKEN_REQ_INTR_SHIFT                       15

/* ctl_regs :: mipm :: p_timer_intr [14:07] */
#define CTL_REGS_MIPM_P_TIMER_INTR_MASK                            0x7f80
#define CTL_REGS_MIPM_P_TIMER_INTR_ALIGN                           0
#define CTL_REGS_MIPM_P_TIMER_INTR_BITS                            8
#define CTL_REGS_MIPM_P_TIMER_INTR_SHIFT                           7

/* ctl_regs :: mipm :: reserved_for_eco0 [06:03] */
#define CTL_REGS_MIPM_RESERVED_FOR_ECO0_MASK                       0x0078
#define CTL_REGS_MIPM_RESERVED_FOR_ECO0_ALIGN                      0
#define CTL_REGS_MIPM_RESERVED_FOR_ECO0_BITS                       4
#define CTL_REGS_MIPM_RESERVED_FOR_ECO0_SHIFT                      3

/* ctl_regs :: mipm :: p_cdr_channel_intr [02:02] */
#define CTL_REGS_MIPM_P_CDR_CHANNEL_INTR_MASK                      0x0004
#define CTL_REGS_MIPM_P_CDR_CHANNEL_INTR_ALIGN                     0
#define CTL_REGS_MIPM_P_CDR_CHANNEL_INTR_BITS                      1
#define CTL_REGS_MIPM_P_CDR_CHANNEL_INTR_SHIFT                     2

/* ctl_regs :: mipm :: p_tx_analog_intr [01:01] */
#define CTL_REGS_MIPM_P_TX_ANALOG_INTR_MASK                        0x0002
#define CTL_REGS_MIPM_P_TX_ANALOG_INTR_ALIGN                       0
#define CTL_REGS_MIPM_P_TX_ANALOG_INTR_BITS                        1
#define CTL_REGS_MIPM_P_TX_ANALOG_INTR_SHIFT                       1

/* ctl_regs :: mipm :: p_rx_analog_intr [00:00] */
#define CTL_REGS_MIPM_P_RX_ANALOG_INTR_MASK                        0x0001
#define CTL_REGS_MIPM_P_RX_ANALOG_INTR_ALIGN                       0
#define CTL_REGS_MIPM_P_RX_ANALOG_INTR_BITS                        1
#define CTL_REGS_MIPM_P_RX_ANALOG_INTR_SHIFT                       0


/****************************************************************************
 * ctl_regs :: mscr
 ***************************************************************************/
/* ctl_regs :: mscr :: global_intr_mask [15:15] */
#define CTL_REGS_MSCR_GLOBAL_INTR_MASK_MASK                        0x8000
#define CTL_REGS_MSCR_GLOBAL_INTR_MASK_ALIGN                       0
#define CTL_REGS_MSCR_GLOBAL_INTR_MASK_BITS                        1
#define CTL_REGS_MSCR_GLOBAL_INTR_MASK_SHIFT                       15

/* ctl_regs :: mscr :: reserved0 [14:04] */
#define CTL_REGS_MSCR_RESERVED0_MASK                               0x7ff0
#define CTL_REGS_MSCR_RESERVED0_ALIGN                              0
#define CTL_REGS_MSCR_RESERVED0_BITS                               11
#define CTL_REGS_MSCR_RESERVED0_SHIFT                              4

/* ctl_regs :: mscr :: isr_ram_en [03:03] */
#define CTL_REGS_MSCR_ISR_RAM_EN_MASK                              0x0008
#define CTL_REGS_MSCR_ISR_RAM_EN_ALIGN                             0
#define CTL_REGS_MSCR_ISR_RAM_EN_BITS                              1
#define CTL_REGS_MSCR_ISR_RAM_EN_SHIFT                             3

/* ctl_regs :: mscr :: dtna_micro_access [02:02] */
#define CTL_REGS_MSCR_DTNA_MICRO_ACCESS_MASK                       0x0004
#define CTL_REGS_MSCR_DTNA_MICRO_ACCESS_ALIGN                      0
#define CTL_REGS_MSCR_DTNA_MICRO_ACCESS_BITS                       1
#define CTL_REGS_MSCR_DTNA_MICRO_ACCESS_SHIFT                      2

/* ctl_regs :: mscr :: uc_reboot_ctl [01:01] */
#define CTL_REGS_MSCR_UC_REBOOT_CTL_MASK                           0x0002
#define CTL_REGS_MSCR_UC_REBOOT_CTL_ALIGN                          0
#define CTL_REGS_MSCR_UC_REBOOT_CTL_BITS                           1
#define CTL_REGS_MSCR_UC_REBOOT_CTL_SHIFT                          1

/* ctl_regs :: mscr :: reserved1 [00:00] */
#define CTL_REGS_MSCR_RESERVED1_MASK                               0x0001
#define CTL_REGS_MSCR_RESERVED1_ALIGN                              0
#define CTL_REGS_MSCR_RESERVED1_BITS                               1
#define CTL_REGS_MSCR_RESERVED1_SHIFT                              0


/****************************************************************************
 * ctl_regs :: msgout
 ***************************************************************************/
/* ctl_regs :: msgout :: msgout_val [15:00] */
#define CTL_REGS_MSGOUT_MSGOUT_VAL_MASK                            0xffff
#define CTL_REGS_MSGOUT_MSGOUT_VAL_ALIGN                           0
#define CTL_REGS_MSGOUT_MSGOUT_VAL_BITS                            16
#define CTL_REGS_MSGOUT_MSGOUT_VAL_SHIFT                           0


/****************************************************************************
 * ctl_regs :: msgin
 ***************************************************************************/
/* ctl_regs :: msgin :: msgin_val [15:00] */
#define CTL_REGS_MSGIN_MSGIN_VAL_MASK                              0xffff
#define CTL_REGS_MSGIN_MSGIN_VAL_ALIGN                             0
#define CTL_REGS_MSGIN_MSGIN_VAL_BITS                              16
#define CTL_REGS_MSGIN_MSGIN_VAL_SHIFT                             0


/****************************************************************************
 * ctl_regs :: boot
 ***************************************************************************/
/* ctl_regs :: boot :: reserved0 [15:12] */
#define CTL_REGS_BOOT_RESERVED0_MASK                               0xf000
#define CTL_REGS_BOOT_RESERVED0_ALIGN                              0
#define CTL_REGS_BOOT_RESERVED0_BITS                               4
#define CTL_REGS_BOOT_RESERVED0_SHIFT                              12

/* ctl_regs :: boot :: spi_tristate_ctrl [11:11] */
#define CTL_REGS_BOOT_SPI_TRISTATE_CTRL_MASK                       0x0800
#define CTL_REGS_BOOT_SPI_TRISTATE_CTRL_ALIGN                      0
#define CTL_REGS_BOOT_SPI_TRISTATE_CTRL_BITS                       1
#define CTL_REGS_BOOT_SPI_TRISTATE_CTRL_SHIFT                      11

/* ctl_regs :: boot :: reserved1 [10:03] */
#define CTL_REGS_BOOT_RESERVED1_MASK                               0x07f8
#define CTL_REGS_BOOT_RESERVED1_ALIGN                              0
#define CTL_REGS_BOOT_RESERVED1_BITS                               8
#define CTL_REGS_BOOT_RESERVED1_SHIFT                              3

/* ctl_regs :: boot :: serboot_done_once [02:02] */
#define CTL_REGS_BOOT_SERBOOT_DONE_ONCE_MASK                       0x0004
#define CTL_REGS_BOOT_SERBOOT_DONE_ONCE_ALIGN                      0
#define CTL_REGS_BOOT_SERBOOT_DONE_ONCE_BITS                       1
#define CTL_REGS_BOOT_SERBOOT_DONE_ONCE_SHIFT                      2

/* ctl_regs :: boot :: serboot_busy [01:01] */
#define CTL_REGS_BOOT_SERBOOT_BUSY_MASK                            0x0002
#define CTL_REGS_BOOT_SERBOOT_BUSY_ALIGN                           0
#define CTL_REGS_BOOT_SERBOOT_BUSY_BITS                            1
#define CTL_REGS_BOOT_SERBOOT_BUSY_SHIFT                           1

/* ctl_regs :: boot :: firmware_loaded [00:00] */
#define CTL_REGS_BOOT_FIRMWARE_LOADED_MASK                         0x0001
#define CTL_REGS_BOOT_FIRMWARE_LOADED_ALIGN                        0
#define CTL_REGS_BOOT_FIRMWARE_LOADED_BITS                         1
#define CTL_REGS_BOOT_FIRMWARE_LOADED_SHIFT                        0


/****************************************************************************
 * ctl_regs :: gpreg0
 ***************************************************************************/
/* ctl_regs :: gpreg0 :: gpreg0_data [15:00] */
#define CTL_REGS_GPREG0_GPREG0_DATA_MASK                           0xffff
#define CTL_REGS_GPREG0_GPREG0_DATA_ALIGN                          0
#define CTL_REGS_GPREG0_GPREG0_DATA_BITS                           16
#define CTL_REGS_GPREG0_GPREG0_DATA_SHIFT                          0


/****************************************************************************
 * ctl_regs :: gpreg1
 ***************************************************************************/
/* ctl_regs :: gpreg1 :: gpreg1_data [15:00] */
#define CTL_REGS_GPREG1_GPREG1_DATA_MASK                           0xffff
#define CTL_REGS_GPREG1_GPREG1_DATA_ALIGN                          0
#define CTL_REGS_GPREG1_GPREG1_DATA_BITS                           16
#define CTL_REGS_GPREG1_GPREG1_DATA_SHIFT                          0


/****************************************************************************
 * ctl_regs :: gpreg2
 ***************************************************************************/
/* ctl_regs :: gpreg2 :: gpreg2_data [15:00] */
#define CTL_REGS_GPREG2_GPREG2_DATA_MASK                           0xffff
#define CTL_REGS_GPREG2_GPREG2_DATA_ALIGN                          0
#define CTL_REGS_GPREG2_GPREG2_DATA_BITS                           16
#define CTL_REGS_GPREG2_GPREG2_DATA_SHIFT                          0


/****************************************************************************
 * ctl_regs :: gpreg3
 ***************************************************************************/
/* ctl_regs :: gpreg3 :: gpreg3_data [15:00] */
#define CTL_REGS_GPREG3_GPREG3_DATA_MASK                           0xffff
#define CTL_REGS_GPREG3_GPREG3_DATA_ALIGN                          0
#define CTL_REGS_GPREG3_GPREG3_DATA_BITS                           16
#define CTL_REGS_GPREG3_GPREG3_DATA_SHIFT                          0


/****************************************************************************
 * ctl_regs :: gpreg4
 ***************************************************************************/
/* ctl_regs :: gpreg4 :: gpreg4_data [15:00] */
#define CTL_REGS_GPREG4_GPREG4_DATA_MASK                           0xffff
#define CTL_REGS_GPREG4_GPREG4_DATA_ALIGN                          0
#define CTL_REGS_GPREG4_GPREG4_DATA_BITS                           16
#define CTL_REGS_GPREG4_GPREG4_DATA_SHIFT                          0


/****************************************************************************
 * ctl_regs :: gpreg5
 ***************************************************************************/
/* ctl_regs :: gpreg5 :: gpreg5_data [15:00] */
#define CTL_REGS_GPREG5_GPREG5_DATA_MASK                           0xffff
#define CTL_REGS_GPREG5_GPREG5_DATA_ALIGN                          0
#define CTL_REGS_GPREG5_GPREG5_DATA_BITS                           16
#define CTL_REGS_GPREG5_GPREG5_DATA_SHIFT                          0


/****************************************************************************
 * ctl_regs :: gpreg6
 ***************************************************************************/
/* ctl_regs :: gpreg6 :: gpreg6_data [15:00] */
#define CTL_REGS_GPREG6_GPREG6_DATA_MASK                           0xffff
#define CTL_REGS_GPREG6_GPREG6_DATA_ALIGN                          0
#define CTL_REGS_GPREG6_GPREG6_DATA_BITS                           16
#define CTL_REGS_GPREG6_GPREG6_DATA_SHIFT                          0


/****************************************************************************
 * ctl_regs :: gpreg7
 ***************************************************************************/
/* ctl_regs :: gpreg7 :: gpreg7_data [15:00] */
#define CTL_REGS_GPREG7_GPREG7_DATA_MASK                           0xffff
#define CTL_REGS_GPREG7_GPREG7_DATA_ALIGN                          0
#define CTL_REGS_GPREG7_GPREG7_DATA_BITS                           16
#define CTL_REGS_GPREG7_GPREG7_DATA_SHIFT                          0


/****************************************************************************
 * ctl_regs :: gpreg8
 ***************************************************************************/
/* ctl_regs :: gpreg8 :: gpreg8_data [15:00] */
#define CTL_REGS_GPREG8_GPREG8_DATA_MASK                           0xffff
#define CTL_REGS_GPREG8_GPREG8_DATA_ALIGN                          0
#define CTL_REGS_GPREG8_GPREG8_DATA_BITS                           16
#define CTL_REGS_GPREG8_GPREG8_DATA_SHIFT                          0


/****************************************************************************
 * ctl_regs :: gpreg9
 ***************************************************************************/
/* ctl_regs :: gpreg9 :: gpreg9_data [15:00] */
#define CTL_REGS_GPREG9_GPREG9_DATA_MASK                           0xffff
#define CTL_REGS_GPREG9_GPREG9_DATA_ALIGN                          0
#define CTL_REGS_GPREG9_GPREG9_DATA_BITS                           16
#define CTL_REGS_GPREG9_GPREG9_DATA_SHIFT                          0


/****************************************************************************
 * ctl_regs :: gpreg10
 ***************************************************************************/
/* ctl_regs :: gpreg10 :: gpreg10_data [15:00] */
#define CTL_REGS_GPREG10_GPREG10_DATA_MASK                         0xffff
#define CTL_REGS_GPREG10_GPREG10_DATA_ALIGN                        0
#define CTL_REGS_GPREG10_GPREG10_DATA_BITS                         16
#define CTL_REGS_GPREG10_GPREG10_DATA_SHIFT                        0


/****************************************************************************
 * ctl_regs :: gpreg11
 ***************************************************************************/
/* ctl_regs :: gpreg11 :: gpreg11_data [15:00] */
#define CTL_REGS_GPREG11_GPREG11_DATA_MASK                         0xffff
#define CTL_REGS_GPREG11_GPREG11_DATA_ALIGN                        0
#define CTL_REGS_GPREG11_GPREG11_DATA_BITS                         16
#define CTL_REGS_GPREG11_GPREG11_DATA_SHIFT                        0


/****************************************************************************
 * ctl_regs :: gpreg12
 ***************************************************************************/
/* ctl_regs :: gpreg12 :: gpreg12_data [15:00] */
#define CTL_REGS_GPREG12_GPREG12_DATA_MASK                         0xffff
#define CTL_REGS_GPREG12_GPREG12_DATA_ALIGN                        0
#define CTL_REGS_GPREG12_GPREG12_DATA_BITS                         16
#define CTL_REGS_GPREG12_GPREG12_DATA_SHIFT                        0


/****************************************************************************
 * ctl_regs :: gpreg13
 ***************************************************************************/
/* ctl_regs :: gpreg13 :: gpreg13_data [15:00] */
#define CTL_REGS_GPREG13_GPREG13_DATA_MASK                         0xffff
#define CTL_REGS_GPREG13_GPREG13_DATA_ALIGN                        0
#define CTL_REGS_GPREG13_GPREG13_DATA_BITS                         16
#define CTL_REGS_GPREG13_GPREG13_DATA_SHIFT                        0


/****************************************************************************
 * ctl_regs :: gpreg14
 ***************************************************************************/
/* ctl_regs :: gpreg14 :: gpreg14_data [15:00] */
#define CTL_REGS_GPREG14_GPREG14_DATA_MASK                         0xffff
#define CTL_REGS_GPREG14_GPREG14_DATA_ALIGN                        0
#define CTL_REGS_GPREG14_GPREG14_DATA_BITS                         16
#define CTL_REGS_GPREG14_GPREG14_DATA_SHIFT                        0


/****************************************************************************
 * ctl_regs :: gpreg15
 ***************************************************************************/
/* ctl_regs :: gpreg15 :: gpreg15_data [15:00] */
#define CTL_REGS_GPREG15_GPREG15_DATA_MASK                         0xffff
#define CTL_REGS_GPREG15_GPREG15_DATA_ALIGN                        0
#define CTL_REGS_GPREG15_GPREG15_DATA_BITS                         16
#define CTL_REGS_GPREG15_GPREG15_DATA_SHIFT                        0


/****************************************************************************
 * ctl_regs :: fw_enable_type
 ***************************************************************************/
/* ctl_regs :: fw_enable_type :: fw_enable [15:00] */
#define CTL_REGS_FW_ENABLE_TYPE_FW_ENABLE_MASK                     0xffff
#define CTL_REGS_FW_ENABLE_TYPE_FW_ENABLE_ALIGN                    0
#define CTL_REGS_FW_ENABLE_TYPE_FW_ENABLE_BITS                     16
#define CTL_REGS_FW_ENABLE_TYPE_FW_ENABLE_SHIFT                    0


/****************************************************************************
 * ctl_regs :: sys_rx_reset
 ***************************************************************************/
/* ctl_regs :: sys_rx_reset :: reserved0 [15:10] */
#define CTL_REGS_SYS_RX_RESET_RESERVED0_MASK                       0xfc00
#define CTL_REGS_SYS_RX_RESET_RESERVED0_ALIGN                      0
#define CTL_REGS_SYS_RX_RESET_RESERVED0_BITS                       6
#define CTL_REGS_SYS_RX_RESET_RESERVED0_SHIFT                      10

/* ctl_regs :: sys_rx_reset :: srx_ln_rstb [09:00] */
#define CTL_REGS_SYS_RX_RESET_SRX_LN_RSTB_MASK                     0x03ff
#define CTL_REGS_SYS_RX_RESET_SRX_LN_RSTB_ALIGN                    0
#define CTL_REGS_SYS_RX_RESET_SRX_LN_RSTB_BITS                     10
#define CTL_REGS_SYS_RX_RESET_SRX_LN_RSTB_SHIFT                    0


/****************************************************************************
 * ctl_regs :: sys_tx_reset
 ***************************************************************************/
/* ctl_regs :: sys_tx_reset :: reserved0 [15:10] */
#define CTL_REGS_SYS_TX_RESET_RESERVED0_MASK                       0xfc00
#define CTL_REGS_SYS_TX_RESET_RESERVED0_ALIGN                      0
#define CTL_REGS_SYS_TX_RESET_RESERVED0_BITS                       6
#define CTL_REGS_SYS_TX_RESET_RESERVED0_SHIFT                      10

/* ctl_regs :: sys_tx_reset :: stx_ln_rstb [09:00] */
#define CTL_REGS_SYS_TX_RESET_STX_LN_RSTB_MASK                     0x03ff
#define CTL_REGS_SYS_TX_RESET_STX_LN_RSTB_ALIGN                    0
#define CTL_REGS_SYS_TX_RESET_STX_LN_RSTB_BITS                     10
#define CTL_REGS_SYS_TX_RESET_STX_LN_RSTB_SHIFT                    0


/****************************************************************************
 * ctl_regs :: line_rx_reset
 ***************************************************************************/
/* ctl_regs :: line_rx_reset :: reserved0 [15:10] */
#define CTL_REGS_LINE_RX_RESET_RESERVED0_MASK                      0xfc00
#define CTL_REGS_LINE_RX_RESET_RESERVED0_ALIGN                     0
#define CTL_REGS_LINE_RX_RESET_RESERVED0_BITS                      6
#define CTL_REGS_LINE_RX_RESET_RESERVED0_SHIFT                     10

/* ctl_regs :: line_rx_reset :: lrx_ln_rstb [09:00] */
#define CTL_REGS_LINE_RX_RESET_LRX_LN_RSTB_MASK                    0x03ff
#define CTL_REGS_LINE_RX_RESET_LRX_LN_RSTB_ALIGN                   0
#define CTL_REGS_LINE_RX_RESET_LRX_LN_RSTB_BITS                    10
#define CTL_REGS_LINE_RX_RESET_LRX_LN_RSTB_SHIFT                   0


/****************************************************************************
 * ctl_regs :: line_tx_reset
 ***************************************************************************/
/* ctl_regs :: line_tx_reset :: reserved0 [15:10] */
#define CTL_REGS_LINE_TX_RESET_RESERVED0_MASK                      0xfc00
#define CTL_REGS_LINE_TX_RESET_RESERVED0_ALIGN                     0
#define CTL_REGS_LINE_TX_RESET_RESERVED0_BITS                      6
#define CTL_REGS_LINE_TX_RESET_RESERVED0_SHIFT                     10

/* ctl_regs :: line_tx_reset :: ltx_ln_rstb [09:00] */
#define CTL_REGS_LINE_TX_RESET_LTX_LN_RSTB_MASK                    0x03ff
#define CTL_REGS_LINE_TX_RESET_LTX_LN_RSTB_ALIGN                   0
#define CTL_REGS_LINE_TX_RESET_LTX_LN_RSTB_BITS                    10
#define CTL_REGS_LINE_TX_RESET_LTX_LN_RSTB_SHIFT                   0


/****************************************************************************
 * ctl_regs :: dc_reset
 ***************************************************************************/
/* ctl_regs :: dc_reset :: reserved0 [15:07] */
#define CTL_REGS_DC_RESET_RESERVED0_MASK                           0xff80
#define CTL_REGS_DC_RESET_RESERVED0_ALIGN                          0
#define CTL_REGS_DC_RESET_RESERVED0_BITS                           9
#define CTL_REGS_DC_RESET_RESERVED0_SHIFT                          7

/* ctl_regs :: dc_reset :: dc_pll_reset_rescal_ovrd [06:06] */
#define CTL_REGS_DC_RESET_DC_PLL_RESET_RESCAL_OVRD_MASK            0x0040
#define CTL_REGS_DC_RESET_DC_PLL_RESET_RESCAL_OVRD_ALIGN           0
#define CTL_REGS_DC_RESET_DC_PLL_RESET_RESCAL_OVRD_BITS            1
#define CTL_REGS_DC_RESET_DC_PLL_RESET_RESCAL_OVRD_SHIFT           6

/* ctl_regs :: dc_reset :: frc_dc_mdio_rstb [05:05] */
#define CTL_REGS_DC_RESET_FRC_DC_MDIO_RSTB_MASK                    0x0020
#define CTL_REGS_DC_RESET_FRC_DC_MDIO_RSTB_ALIGN                   0
#define CTL_REGS_DC_RESET_FRC_DC_MDIO_RSTB_BITS                    1
#define CTL_REGS_DC_RESET_FRC_DC_MDIO_RSTB_SHIFT                   5

/* ctl_regs :: dc_reset :: dc_mdio_rstb [04:04] */
#define CTL_REGS_DC_RESET_DC_MDIO_RSTB_MASK                        0x0010
#define CTL_REGS_DC_RESET_DC_MDIO_RSTB_ALIGN                       0
#define CTL_REGS_DC_RESET_DC_MDIO_RSTB_BITS                        1
#define CTL_REGS_DC_RESET_DC_MDIO_RSTB_SHIFT                       4

/* ctl_regs :: dc_reset :: frc_dc_pll_rstb [03:03] */
#define CTL_REGS_DC_RESET_FRC_DC_PLL_RSTB_MASK                     0x0008
#define CTL_REGS_DC_RESET_FRC_DC_PLL_RSTB_ALIGN                    0
#define CTL_REGS_DC_RESET_FRC_DC_PLL_RSTB_BITS                     1
#define CTL_REGS_DC_RESET_FRC_DC_PLL_RSTB_SHIFT                    3

/* ctl_regs :: dc_reset :: dc_pll_rstb [02:02] */
#define CTL_REGS_DC_RESET_DC_PLL_RSTB_MASK                         0x0004
#define CTL_REGS_DC_RESET_DC_PLL_RSTB_ALIGN                        0
#define CTL_REGS_DC_RESET_DC_PLL_RSTB_BITS                         1
#define CTL_REGS_DC_RESET_DC_PLL_RSTB_SHIFT                        2

/* ctl_regs :: dc_reset :: frc_dc_hw_rstb [01:01] */
#define CTL_REGS_DC_RESET_FRC_DC_HW_RSTB_MASK                      0x0002
#define CTL_REGS_DC_RESET_FRC_DC_HW_RSTB_ALIGN                     0
#define CTL_REGS_DC_RESET_FRC_DC_HW_RSTB_BITS                      1
#define CTL_REGS_DC_RESET_FRC_DC_HW_RSTB_SHIFT                     1

/* ctl_regs :: dc_reset :: dc_hw_rstb [00:00] */
#define CTL_REGS_DC_RESET_DC_HW_RSTB_MASK                          0x0001
#define CTL_REGS_DC_RESET_DC_HW_RSTB_ALIGN                         0
#define CTL_REGS_DC_RESET_DC_HW_RSTB_BITS                          1
#define CTL_REGS_DC_RESET_DC_HW_RSTB_SHIFT                         0


/****************************************************************************
 * ctl_regs :: frc_dc_hw_reset
 ***************************************************************************/
/* ctl_regs :: frc_dc_hw_reset :: reserved0 [15:10] */
#define CTL_REGS_FRC_DC_HW_RESET_RESERVED0_MASK                    0xfc00
#define CTL_REGS_FRC_DC_HW_RESET_RESERVED0_ALIGN                   0
#define CTL_REGS_FRC_DC_HW_RESET_RESERVED0_BITS                    6
#define CTL_REGS_FRC_DC_HW_RESET_RESERVED0_SHIFT                   10

/* ctl_regs :: frc_dc_hw_reset :: frc_dc_hw_ln_rstb [09:00] */
#define CTL_REGS_FRC_DC_HW_RESET_FRC_DC_HW_LN_RSTB_MASK            0x03ff
#define CTL_REGS_FRC_DC_HW_RESET_FRC_DC_HW_LN_RSTB_ALIGN           0
#define CTL_REGS_FRC_DC_HW_RESET_FRC_DC_HW_LN_RSTB_BITS            10
#define CTL_REGS_FRC_DC_HW_RESET_FRC_DC_HW_LN_RSTB_SHIFT           0


/****************************************************************************
 * ctl_regs :: dc_hw_reset
 ***************************************************************************/
/* ctl_regs :: dc_hw_reset :: reserved0 [15:10] */
#define CTL_REGS_DC_HW_RESET_RESERVED0_MASK                        0xfc00
#define CTL_REGS_DC_HW_RESET_RESERVED0_ALIGN                       0
#define CTL_REGS_DC_HW_RESET_RESERVED0_BITS                        6
#define CTL_REGS_DC_HW_RESET_RESERVED0_SHIFT                       10

/* ctl_regs :: dc_hw_reset :: dc_hw_ln_rstb [09:00] */
#define CTL_REGS_DC_HW_RESET_DC_HW_LN_RSTB_MASK                    0x03ff
#define CTL_REGS_DC_HW_RESET_DC_HW_LN_RSTB_ALIGN                   0
#define CTL_REGS_DC_HW_RESET_DC_HW_LN_RSTB_BITS                    10
#define CTL_REGS_DC_HW_RESET_DC_HW_LN_RSTB_SHIFT                   0


/****************************************************************************
 * ctl_regs :: frc_dc_mdio_reset
 ***************************************************************************/
/* ctl_regs :: frc_dc_mdio_reset :: reserved0 [15:10] */
#define CTL_REGS_FRC_DC_MDIO_RESET_RESERVED0_MASK                  0xfc00
#define CTL_REGS_FRC_DC_MDIO_RESET_RESERVED0_ALIGN                 0
#define CTL_REGS_FRC_DC_MDIO_RESET_RESERVED0_BITS                  6
#define CTL_REGS_FRC_DC_MDIO_RESET_RESERVED0_SHIFT                 10

/* ctl_regs :: frc_dc_mdio_reset :: frc_dc_mdio_ln_rstb [09:00] */
#define CTL_REGS_FRC_DC_MDIO_RESET_FRC_DC_MDIO_LN_RSTB_MASK        0x03ff
#define CTL_REGS_FRC_DC_MDIO_RESET_FRC_DC_MDIO_LN_RSTB_ALIGN       0
#define CTL_REGS_FRC_DC_MDIO_RESET_FRC_DC_MDIO_LN_RSTB_BITS        10
#define CTL_REGS_FRC_DC_MDIO_RESET_FRC_DC_MDIO_LN_RSTB_SHIFT       0


/****************************************************************************
 * ctl_regs :: dc_mdio_reset
 ***************************************************************************/
/* ctl_regs :: dc_mdio_reset :: reserved0 [15:10] */
#define CTL_REGS_DC_MDIO_RESET_RESERVED0_MASK                      0xfc00
#define CTL_REGS_DC_MDIO_RESET_RESERVED0_ALIGN                     0
#define CTL_REGS_DC_MDIO_RESET_RESERVED0_BITS                      6
#define CTL_REGS_DC_MDIO_RESET_RESERVED0_SHIFT                     10

/* ctl_regs :: dc_mdio_reset :: dc_mdio_ln_rstb [09:00] */
#define CTL_REGS_DC_MDIO_RESET_DC_MDIO_LN_RSTB_MASK                0x03ff
#define CTL_REGS_DC_MDIO_RESET_DC_MDIO_LN_RSTB_ALIGN               0
#define CTL_REGS_DC_MDIO_RESET_DC_MDIO_LN_RSTB_BITS                10
#define CTL_REGS_DC_MDIO_RESET_DC_MDIO_LN_RSTB_SHIFT               0


/****************************************************************************
 * ctl_regs :: frc_hctx_dig_reset
 ***************************************************************************/
/* ctl_regs :: frc_hctx_dig_reset :: reserved0 [15:07] */
#define CTL_REGS_FRC_HCTX_DIG_RESET_RESERVED0_MASK                 0xff80
#define CTL_REGS_FRC_HCTX_DIG_RESET_RESERVED0_ALIGN                0
#define CTL_REGS_FRC_HCTX_DIG_RESET_RESERVED0_BITS                 9
#define CTL_REGS_FRC_HCTX_DIG_RESET_RESERVED0_SHIFT                7

/* ctl_regs :: frc_hctx_dig_reset :: frc_hctx_lfck_rstb [06:06] */
#define CTL_REGS_FRC_HCTX_DIG_RESET_FRC_HCTX_LFCK_RSTB_MASK        0x0040
#define CTL_REGS_FRC_HCTX_DIG_RESET_FRC_HCTX_LFCK_RSTB_ALIGN       0
#define CTL_REGS_FRC_HCTX_DIG_RESET_FRC_HCTX_LFCK_RSTB_BITS        1
#define CTL_REGS_FRC_HCTX_DIG_RESET_FRC_HCTX_LFCK_RSTB_SHIFT       6

/* ctl_regs :: frc_hctx_dig_reset :: frc_hctx_dig_rstb [05:00] */
#define CTL_REGS_FRC_HCTX_DIG_RESET_FRC_HCTX_DIG_RSTB_MASK         0x003f
#define CTL_REGS_FRC_HCTX_DIG_RESET_FRC_HCTX_DIG_RSTB_ALIGN        0
#define CTL_REGS_FRC_HCTX_DIG_RESET_FRC_HCTX_DIG_RSTB_BITS         6
#define CTL_REGS_FRC_HCTX_DIG_RESET_FRC_HCTX_DIG_RSTB_SHIFT        0


/****************************************************************************
 * ctl_regs :: hctx_dig_reset
 ***************************************************************************/
/* ctl_regs :: hctx_dig_reset :: reserved0 [15:07] */
#define CTL_REGS_HCTX_DIG_RESET_RESERVED0_MASK                     0xff80
#define CTL_REGS_HCTX_DIG_RESET_RESERVED0_ALIGN                    0
#define CTL_REGS_HCTX_DIG_RESET_RESERVED0_BITS                     9
#define CTL_REGS_HCTX_DIG_RESET_RESERVED0_SHIFT                    7

/* ctl_regs :: hctx_dig_reset :: hctx_lfck_rstb [06:06] */
#define CTL_REGS_HCTX_DIG_RESET_HCTX_LFCK_RSTB_MASK                0x0040
#define CTL_REGS_HCTX_DIG_RESET_HCTX_LFCK_RSTB_ALIGN               0
#define CTL_REGS_HCTX_DIG_RESET_HCTX_LFCK_RSTB_BITS                1
#define CTL_REGS_HCTX_DIG_RESET_HCTX_LFCK_RSTB_SHIFT               6

/* ctl_regs :: hctx_dig_reset :: hctx_dig_rstb [05:00] */
#define CTL_REGS_HCTX_DIG_RESET_HCTX_DIG_RSTB_MASK                 0x003f
#define CTL_REGS_HCTX_DIG_RESET_HCTX_DIG_RSTB_ALIGN                0
#define CTL_REGS_HCTX_DIG_RESET_HCTX_DIG_RSTB_BITS                 6
#define CTL_REGS_HCTX_DIG_RESET_HCTX_DIG_RSTB_SHIFT                0


/****************************************************************************
 * ctl_regs :: frc_hctx_mdio_reset
 ***************************************************************************/
/* ctl_regs :: frc_hctx_mdio_reset :: reserved0 [15:06] */
#define CTL_REGS_FRC_HCTX_MDIO_RESET_RESERVED0_MASK                0xffc0
#define CTL_REGS_FRC_HCTX_MDIO_RESET_RESERVED0_ALIGN               0
#define CTL_REGS_FRC_HCTX_MDIO_RESET_RESERVED0_BITS                10
#define CTL_REGS_FRC_HCTX_MDIO_RESET_RESERVED0_SHIFT               6

/* ctl_regs :: frc_hctx_mdio_reset :: frc_hctx_mdio_rstb [05:00] */
#define CTL_REGS_FRC_HCTX_MDIO_RESET_FRC_HCTX_MDIO_RSTB_MASK       0x003f
#define CTL_REGS_FRC_HCTX_MDIO_RESET_FRC_HCTX_MDIO_RSTB_ALIGN      0
#define CTL_REGS_FRC_HCTX_MDIO_RESET_FRC_HCTX_MDIO_RSTB_BITS       6
#define CTL_REGS_FRC_HCTX_MDIO_RESET_FRC_HCTX_MDIO_RSTB_SHIFT      0


/****************************************************************************
 * ctl_regs :: hctx_mdio_reset
 ***************************************************************************/
/* ctl_regs :: hctx_mdio_reset :: reserved0 [15:06] */
#define CTL_REGS_HCTX_MDIO_RESET_RESERVED0_MASK                    0xffc0
#define CTL_REGS_HCTX_MDIO_RESET_RESERVED0_ALIGN                   0
#define CTL_REGS_HCTX_MDIO_RESET_RESERVED0_BITS                    10
#define CTL_REGS_HCTX_MDIO_RESET_RESERVED0_SHIFT                   6

/* ctl_regs :: hctx_mdio_reset :: hctx_mdio_rstb [05:00] */
#define CTL_REGS_HCTX_MDIO_RESET_HCTX_MDIO_RSTB_MASK               0x003f
#define CTL_REGS_HCTX_MDIO_RESET_HCTX_MDIO_RSTB_ALIGN              0
#define CTL_REGS_HCTX_MDIO_RESET_HCTX_MDIO_RSTB_BITS               6
#define CTL_REGS_HCTX_MDIO_RESET_HCTX_MDIO_RSTB_SHIFT              0


/****************************************************************************
 * ctl_regs :: frc_hcrx_dig_reset
 ***************************************************************************/
/* ctl_regs :: frc_hcrx_dig_reset :: reserved0 [15:07] */
#define CTL_REGS_FRC_HCRX_DIG_RESET_RESERVED0_MASK                 0xff80
#define CTL_REGS_FRC_HCRX_DIG_RESET_RESERVED0_ALIGN                0
#define CTL_REGS_FRC_HCRX_DIG_RESET_RESERVED0_BITS                 9
#define CTL_REGS_FRC_HCRX_DIG_RESET_RESERVED0_SHIFT                7

/* ctl_regs :: frc_hcrx_dig_reset :: frc_hcrx_lfck_rstb [06:06] */
#define CTL_REGS_FRC_HCRX_DIG_RESET_FRC_HCRX_LFCK_RSTB_MASK        0x0040
#define CTL_REGS_FRC_HCRX_DIG_RESET_FRC_HCRX_LFCK_RSTB_ALIGN       0
#define CTL_REGS_FRC_HCRX_DIG_RESET_FRC_HCRX_LFCK_RSTB_BITS        1
#define CTL_REGS_FRC_HCRX_DIG_RESET_FRC_HCRX_LFCK_RSTB_SHIFT       6

/* ctl_regs :: frc_hcrx_dig_reset :: frc_hcrx_dig_rstb [05:00] */
#define CTL_REGS_FRC_HCRX_DIG_RESET_FRC_HCRX_DIG_RSTB_MASK         0x003f
#define CTL_REGS_FRC_HCRX_DIG_RESET_FRC_HCRX_DIG_RSTB_ALIGN        0
#define CTL_REGS_FRC_HCRX_DIG_RESET_FRC_HCRX_DIG_RSTB_BITS         6
#define CTL_REGS_FRC_HCRX_DIG_RESET_FRC_HCRX_DIG_RSTB_SHIFT        0


/****************************************************************************
 * ctl_regs :: hcrx_dig_reset
 ***************************************************************************/
/* ctl_regs :: hcrx_dig_reset :: reserved0 [15:07] */
#define CTL_REGS_HCRX_DIG_RESET_RESERVED0_MASK                     0xff80
#define CTL_REGS_HCRX_DIG_RESET_RESERVED0_ALIGN                    0
#define CTL_REGS_HCRX_DIG_RESET_RESERVED0_BITS                     9
#define CTL_REGS_HCRX_DIG_RESET_RESERVED0_SHIFT                    7

/* ctl_regs :: hcrx_dig_reset :: hcrx_lfck_rstb [06:06] */
#define CTL_REGS_HCRX_DIG_RESET_HCRX_LFCK_RSTB_MASK                0x0040
#define CTL_REGS_HCRX_DIG_RESET_HCRX_LFCK_RSTB_ALIGN               0
#define CTL_REGS_HCRX_DIG_RESET_HCRX_LFCK_RSTB_BITS                1
#define CTL_REGS_HCRX_DIG_RESET_HCRX_LFCK_RSTB_SHIFT               6

/* ctl_regs :: hcrx_dig_reset :: hcrx_dig_rstb [05:00] */
#define CTL_REGS_HCRX_DIG_RESET_HCRX_DIG_RSTB_MASK                 0x003f
#define CTL_REGS_HCRX_DIG_RESET_HCRX_DIG_RSTB_ALIGN                0
#define CTL_REGS_HCRX_DIG_RESET_HCRX_DIG_RSTB_BITS                 6
#define CTL_REGS_HCRX_DIG_RESET_HCRX_DIG_RSTB_SHIFT                0


/****************************************************************************
 * ctl_regs :: frc_hcrx_mdio_reset
 ***************************************************************************/
/* ctl_regs :: frc_hcrx_mdio_reset :: reserved0 [15:06] */
#define CTL_REGS_FRC_HCRX_MDIO_RESET_RESERVED0_MASK                0xffc0
#define CTL_REGS_FRC_HCRX_MDIO_RESET_RESERVED0_ALIGN               0
#define CTL_REGS_FRC_HCRX_MDIO_RESET_RESERVED0_BITS                10
#define CTL_REGS_FRC_HCRX_MDIO_RESET_RESERVED0_SHIFT               6

/* ctl_regs :: frc_hcrx_mdio_reset :: frc_hcrx_mdio_rstb [05:00] */
#define CTL_REGS_FRC_HCRX_MDIO_RESET_FRC_HCRX_MDIO_RSTB_MASK       0x003f
#define CTL_REGS_FRC_HCRX_MDIO_RESET_FRC_HCRX_MDIO_RSTB_ALIGN      0
#define CTL_REGS_FRC_HCRX_MDIO_RESET_FRC_HCRX_MDIO_RSTB_BITS       6
#define CTL_REGS_FRC_HCRX_MDIO_RESET_FRC_HCRX_MDIO_RSTB_SHIFT      0


/****************************************************************************
 * ctl_regs :: hcrx_mdio_reset
 ***************************************************************************/
/* ctl_regs :: hcrx_mdio_reset :: reserved0 [15:06] */
#define CTL_REGS_HCRX_MDIO_RESET_RESERVED0_MASK                    0xffc0
#define CTL_REGS_HCRX_MDIO_RESET_RESERVED0_ALIGN                   0
#define CTL_REGS_HCRX_MDIO_RESET_RESERVED0_BITS                    10
#define CTL_REGS_HCRX_MDIO_RESET_RESERVED0_SHIFT                   6

/* ctl_regs :: hcrx_mdio_reset :: hcrx_mdio_rstb [05:00] */
#define CTL_REGS_HCRX_MDIO_RESET_HCRX_MDIO_RSTB_MASK               0x003f
#define CTL_REGS_HCRX_MDIO_RESET_HCRX_MDIO_RSTB_ALIGN              0
#define CTL_REGS_HCRX_MDIO_RESET_HCRX_MDIO_RSTB_BITS               6
#define CTL_REGS_HCRX_MDIO_RESET_HCRX_MDIO_RSTB_SHIFT              0


/****************************************************************************
 * ctl_regs :: frc_dcrx_pd
 ***************************************************************************/
/* ctl_regs :: frc_dcrx_pd :: reserved0 [15:10] */
#define CTL_REGS_FRC_DCRX_PD_RESERVED0_MASK                        0xfc00
#define CTL_REGS_FRC_DCRX_PD_RESERVED0_ALIGN                       0
#define CTL_REGS_FRC_DCRX_PD_RESERVED0_BITS                        6
#define CTL_REGS_FRC_DCRX_PD_RESERVED0_SHIFT                       10

/* ctl_regs :: frc_dcrx_pd :: frc_dcrx_pwrdn [09:00] */
#define CTL_REGS_FRC_DCRX_PD_FRC_DCRX_PWRDN_MASK                   0x03ff
#define CTL_REGS_FRC_DCRX_PD_FRC_DCRX_PWRDN_ALIGN                  0
#define CTL_REGS_FRC_DCRX_PD_FRC_DCRX_PWRDN_BITS                   10
#define CTL_REGS_FRC_DCRX_PD_FRC_DCRX_PWRDN_SHIFT                  0


/****************************************************************************
 * ctl_regs :: dcrx_pd
 ***************************************************************************/
/* ctl_regs :: dcrx_pd :: reserved0 [15:10] */
#define CTL_REGS_DCRX_PD_RESERVED0_MASK                            0xfc00
#define CTL_REGS_DCRX_PD_RESERVED0_ALIGN                           0
#define CTL_REGS_DCRX_PD_RESERVED0_BITS                            6
#define CTL_REGS_DCRX_PD_RESERVED0_SHIFT                           10

/* ctl_regs :: dcrx_pd :: dcrx_pwrdn [09:00] */
#define CTL_REGS_DCRX_PD_DCRX_PWRDN_MASK                           0x03ff
#define CTL_REGS_DCRX_PD_DCRX_PWRDN_ALIGN                          0
#define CTL_REGS_DCRX_PD_DCRX_PWRDN_BITS                           10
#define CTL_REGS_DCRX_PD_DCRX_PWRDN_SHIFT                          0


/****************************************************************************
 * ctl_regs :: frc_dctx_pd
 ***************************************************************************/
/* ctl_regs :: frc_dctx_pd :: reserved0 [15:11] */
#define CTL_REGS_FRC_DCTX_PD_RESERVED0_MASK                        0xf800
#define CTL_REGS_FRC_DCTX_PD_RESERVED0_ALIGN                       0
#define CTL_REGS_FRC_DCTX_PD_RESERVED0_BITS                        5
#define CTL_REGS_FRC_DCTX_PD_RESERVED0_SHIFT                       11

/* ctl_regs :: frc_dctx_pd :: frc_dc_pll_pwrdn [10:10] */
#define CTL_REGS_FRC_DCTX_PD_FRC_DC_PLL_PWRDN_MASK                 0x0400
#define CTL_REGS_FRC_DCTX_PD_FRC_DC_PLL_PWRDN_ALIGN                0
#define CTL_REGS_FRC_DCTX_PD_FRC_DC_PLL_PWRDN_BITS                 1
#define CTL_REGS_FRC_DCTX_PD_FRC_DC_PLL_PWRDN_SHIFT                10

/* ctl_regs :: frc_dctx_pd :: frc_dctx_pwrdn [09:00] */
#define CTL_REGS_FRC_DCTX_PD_FRC_DCTX_PWRDN_MASK                   0x03ff
#define CTL_REGS_FRC_DCTX_PD_FRC_DCTX_PWRDN_ALIGN                  0
#define CTL_REGS_FRC_DCTX_PD_FRC_DCTX_PWRDN_BITS                   10
#define CTL_REGS_FRC_DCTX_PD_FRC_DCTX_PWRDN_SHIFT                  0


/****************************************************************************
 * ctl_regs :: dctx_pd
 ***************************************************************************/
/* ctl_regs :: dctx_pd :: reserved0 [15:11] */
#define CTL_REGS_DCTX_PD_RESERVED0_MASK                            0xf800
#define CTL_REGS_DCTX_PD_RESERVED0_ALIGN                           0
#define CTL_REGS_DCTX_PD_RESERVED0_BITS                            5
#define CTL_REGS_DCTX_PD_RESERVED0_SHIFT                           11

/* ctl_regs :: dctx_pd :: dc_pll_pwrdn [10:10] */
#define CTL_REGS_DCTX_PD_DC_PLL_PWRDN_MASK                         0x0400
#define CTL_REGS_DCTX_PD_DC_PLL_PWRDN_ALIGN                        0
#define CTL_REGS_DCTX_PD_DC_PLL_PWRDN_BITS                         1
#define CTL_REGS_DCTX_PD_DC_PLL_PWRDN_SHIFT                        10

/* ctl_regs :: dctx_pd :: dctx_pwrdn [09:00] */
#define CTL_REGS_DCTX_PD_DCTX_PWRDN_MASK                           0x03ff
#define CTL_REGS_DCTX_PD_DCTX_PWRDN_ALIGN                          0
#define CTL_REGS_DCTX_PD_DCTX_PWRDN_BITS                           10
#define CTL_REGS_DCTX_PD_DCTX_PWRDN_SHIFT                          0


/****************************************************************************
 * ctl_regs :: frc_hcrx_pd
 ***************************************************************************/
/* ctl_regs :: frc_hcrx_pd :: reserved0 [15:06] */
#define CTL_REGS_FRC_HCRX_PD_RESERVED0_MASK                        0xffc0
#define CTL_REGS_FRC_HCRX_PD_RESERVED0_ALIGN                       0
#define CTL_REGS_FRC_HCRX_PD_RESERVED0_BITS                        10
#define CTL_REGS_FRC_HCRX_PD_RESERVED0_SHIFT                       6

/* ctl_regs :: frc_hcrx_pd :: frc_hcrx_pwrdn [05:00] */
#define CTL_REGS_FRC_HCRX_PD_FRC_HCRX_PWRDN_MASK                   0x003f
#define CTL_REGS_FRC_HCRX_PD_FRC_HCRX_PWRDN_ALIGN                  0
#define CTL_REGS_FRC_HCRX_PD_FRC_HCRX_PWRDN_BITS                   6
#define CTL_REGS_FRC_HCRX_PD_FRC_HCRX_PWRDN_SHIFT                  0


/****************************************************************************
 * ctl_regs :: hcrx_pd
 ***************************************************************************/
/* ctl_regs :: hcrx_pd :: reserved0 [15:06] */
#define CTL_REGS_HCRX_PD_RESERVED0_MASK                            0xffc0
#define CTL_REGS_HCRX_PD_RESERVED0_ALIGN                           0
#define CTL_REGS_HCRX_PD_RESERVED0_BITS                            10
#define CTL_REGS_HCRX_PD_RESERVED0_SHIFT                           6

/* ctl_regs :: hcrx_pd :: hcrx_pwrdn [05:00] */
#define CTL_REGS_HCRX_PD_HCRX_PWRDN_MASK                           0x003f
#define CTL_REGS_HCRX_PD_HCRX_PWRDN_ALIGN                          0
#define CTL_REGS_HCRX_PD_HCRX_PWRDN_BITS                           6
#define CTL_REGS_HCRX_PD_HCRX_PWRDN_SHIFT                          0


/****************************************************************************
 * ctl_regs :: frc_hctx_pd
 ***************************************************************************/
/* ctl_regs :: frc_hctx_pd :: reserved0 [15:06] */
#define CTL_REGS_FRC_HCTX_PD_RESERVED0_MASK                        0xffc0
#define CTL_REGS_FRC_HCTX_PD_RESERVED0_ALIGN                       0
#define CTL_REGS_FRC_HCTX_PD_RESERVED0_BITS                        10
#define CTL_REGS_FRC_HCTX_PD_RESERVED0_SHIFT                       6

/* ctl_regs :: frc_hctx_pd :: frc_hctx_pwrdn [05:00] */
#define CTL_REGS_FRC_HCTX_PD_FRC_HCTX_PWRDN_MASK                   0x003f
#define CTL_REGS_FRC_HCTX_PD_FRC_HCTX_PWRDN_ALIGN                  0
#define CTL_REGS_FRC_HCTX_PD_FRC_HCTX_PWRDN_BITS                   6
#define CTL_REGS_FRC_HCTX_PD_FRC_HCTX_PWRDN_SHIFT                  0


/****************************************************************************
 * ctl_regs :: hctx_pd
 ***************************************************************************/
/* ctl_regs :: hctx_pd :: reserved0 [15:06] */
#define CTL_REGS_HCTX_PD_RESERVED0_MASK                            0xffc0
#define CTL_REGS_HCTX_PD_RESERVED0_ALIGN                           0
#define CTL_REGS_HCTX_PD_RESERVED0_BITS                            10
#define CTL_REGS_HCTX_PD_RESERVED0_SHIFT                           6

/* ctl_regs :: hctx_pd :: hctx_pwrdn [05:00] */
#define CTL_REGS_HCTX_PD_HCTX_PWRDN_MASK                           0x003f
#define CTL_REGS_HCTX_PD_HCTX_PWRDN_ALIGN                          0
#define CTL_REGS_HCTX_PD_HCTX_PWRDN_BITS                           6
#define CTL_REGS_HCTX_PD_HCTX_PWRDN_SHIFT                          0


/****************************************************************************
 * ctl_regs :: frc_vsr40_tx_pd
 ***************************************************************************/
/* ctl_regs :: frc_vsr40_tx_pd :: reserved0 [15:04] */
#define CTL_REGS_FRC_VSR40_TX_PD_RESERVED0_MASK                    0xfff0
#define CTL_REGS_FRC_VSR40_TX_PD_RESERVED0_ALIGN                   0
#define CTL_REGS_FRC_VSR40_TX_PD_RESERVED0_BITS                    12
#define CTL_REGS_FRC_VSR40_TX_PD_RESERVED0_SHIFT                   4

/* ctl_regs :: frc_vsr40_tx_pd :: frc_vsr40_tx_pwrdn [03:00] */
#define CTL_REGS_FRC_VSR40_TX_PD_FRC_VSR40_TX_PWRDN_MASK           0x000f
#define CTL_REGS_FRC_VSR40_TX_PD_FRC_VSR40_TX_PWRDN_ALIGN          0
#define CTL_REGS_FRC_VSR40_TX_PD_FRC_VSR40_TX_PWRDN_BITS           4
#define CTL_REGS_FRC_VSR40_TX_PD_FRC_VSR40_TX_PWRDN_SHIFT          0


/****************************************************************************
 * ctl_regs :: vsr40_tx_pd
 ***************************************************************************/
/* ctl_regs :: vsr40_tx_pd :: reserved0 [15:04] */
#define CTL_REGS_VSR40_TX_PD_RESERVED0_MASK                        0xfff0
#define CTL_REGS_VSR40_TX_PD_RESERVED0_ALIGN                       0
#define CTL_REGS_VSR40_TX_PD_RESERVED0_BITS                        12
#define CTL_REGS_VSR40_TX_PD_RESERVED0_SHIFT                       4

/* ctl_regs :: vsr40_tx_pd :: vsr40_tx_pwrdn [03:00] */
#define CTL_REGS_VSR40_TX_PD_VSR40_TX_PWRDN_MASK                   0x000f
#define CTL_REGS_VSR40_TX_PD_VSR40_TX_PWRDN_ALIGN                  0
#define CTL_REGS_VSR40_TX_PD_VSR40_TX_PWRDN_BITS                   4
#define CTL_REGS_VSR40_TX_PD_VSR40_TX_PWRDN_SHIFT                  0


/****************************************************************************
 * ctl_regs :: frc_vsr40_rx_pd
 ***************************************************************************/
/* ctl_regs :: frc_vsr40_rx_pd :: reserved0 [15:04] */
#define CTL_REGS_FRC_VSR40_RX_PD_RESERVED0_MASK                    0xfff0
#define CTL_REGS_FRC_VSR40_RX_PD_RESERVED0_ALIGN                   0
#define CTL_REGS_FRC_VSR40_RX_PD_RESERVED0_BITS                    12
#define CTL_REGS_FRC_VSR40_RX_PD_RESERVED0_SHIFT                   4

/* ctl_regs :: frc_vsr40_rx_pd :: frc_vsr40_rx_pwrdn [03:00] */
#define CTL_REGS_FRC_VSR40_RX_PD_FRC_VSR40_RX_PWRDN_MASK           0x000f
#define CTL_REGS_FRC_VSR40_RX_PD_FRC_VSR40_RX_PWRDN_ALIGN          0
#define CTL_REGS_FRC_VSR40_RX_PD_FRC_VSR40_RX_PWRDN_BITS           4
#define CTL_REGS_FRC_VSR40_RX_PD_FRC_VSR40_RX_PWRDN_SHIFT          0


/****************************************************************************
 * ctl_regs :: vsr40_rx_pd
 ***************************************************************************/
/* ctl_regs :: vsr40_rx_pd :: reserved0 [15:04] */
#define CTL_REGS_VSR40_RX_PD_RESERVED0_MASK                        0xfff0
#define CTL_REGS_VSR40_RX_PD_RESERVED0_ALIGN                       0
#define CTL_REGS_VSR40_RX_PD_RESERVED0_BITS                        12
#define CTL_REGS_VSR40_RX_PD_RESERVED0_SHIFT                       4

/* ctl_regs :: vsr40_rx_pd :: vsr40_rx_pwrdn [03:00] */
#define CTL_REGS_VSR40_RX_PD_VSR40_RX_PWRDN_MASK                   0x000f
#define CTL_REGS_VSR40_RX_PD_VSR40_RX_PWRDN_ALIGN                  0
#define CTL_REGS_VSR40_RX_PD_VSR40_RX_PWRDN_BITS                   4
#define CTL_REGS_VSR40_RX_PD_VSR40_RX_PWRDN_SHIFT                  0


/****************************************************************************
 * ctl_regs :: pcb_ctrl_type
 ***************************************************************************/
/* ctl_regs :: pcb_ctrl_type :: reserved0 [15:06] */
#define CTL_REGS_PCB_CTRL_TYPE_RESERVED0_MASK                      0xffc0
#define CTL_REGS_PCB_CTRL_TYPE_RESERVED0_ALIGN                     0
#define CTL_REGS_PCB_CTRL_TYPE_RESERVED0_BITS                      10
#define CTL_REGS_PCB_CTRL_TYPE_RESERVED0_SHIFT                     6

/* ctl_regs :: pcb_ctrl_type :: pcb_clear [05:05] */
#define CTL_REGS_PCB_CTRL_TYPE_PCB_CLEAR_MASK                      0x0020
#define CTL_REGS_PCB_CTRL_TYPE_PCB_CLEAR_ALIGN                     0
#define CTL_REGS_PCB_CTRL_TYPE_PCB_CLEAR_BITS                      1
#define CTL_REGS_PCB_CTRL_TYPE_PCB_CLEAR_SHIFT                     5

/* ctl_regs :: pcb_ctrl_type :: pcb_rd [04:04] */
#define CTL_REGS_PCB_CTRL_TYPE_PCB_RD_MASK                         0x0010
#define CTL_REGS_PCB_CTRL_TYPE_PCB_RD_ALIGN                        0
#define CTL_REGS_PCB_CTRL_TYPE_PCB_RD_BITS                         1
#define CTL_REGS_PCB_CTRL_TYPE_PCB_RD_SHIFT                        4

/* ctl_regs :: pcb_ctrl_type :: pcb_wr [03:03] */
#define CTL_REGS_PCB_CTRL_TYPE_PCB_WR_MASK                         0x0008
#define CTL_REGS_PCB_CTRL_TYPE_PCB_WR_ALIGN                        0
#define CTL_REGS_PCB_CTRL_TYPE_PCB_WR_BITS                         1
#define CTL_REGS_PCB_CTRL_TYPE_PCB_WR_SHIFT                        3

/* ctl_regs :: pcb_ctrl_type :: hctx_pcb_en [02:02] */
#define CTL_REGS_PCB_CTRL_TYPE_HCTX_PCB_EN_MASK                    0x0004
#define CTL_REGS_PCB_CTRL_TYPE_HCTX_PCB_EN_ALIGN                   0
#define CTL_REGS_PCB_CTRL_TYPE_HCTX_PCB_EN_BITS                    1
#define CTL_REGS_PCB_CTRL_TYPE_HCTX_PCB_EN_SHIFT                   2

/* ctl_regs :: pcb_ctrl_type :: hcrx_pcb_en [01:01] */
#define CTL_REGS_PCB_CTRL_TYPE_HCRX_PCB_EN_MASK                    0x0002
#define CTL_REGS_PCB_CTRL_TYPE_HCRX_PCB_EN_ALIGN                   0
#define CTL_REGS_PCB_CTRL_TYPE_HCRX_PCB_EN_BITS                    1
#define CTL_REGS_PCB_CTRL_TYPE_HCRX_PCB_EN_SHIFT                   1

/* ctl_regs :: pcb_ctrl_type :: dc_pcb_en [00:00] */
#define CTL_REGS_PCB_CTRL_TYPE_DC_PCB_EN_MASK                      0x0001
#define CTL_REGS_PCB_CTRL_TYPE_DC_PCB_EN_ALIGN                     0
#define CTL_REGS_PCB_CTRL_TYPE_DC_PCB_EN_BITS                      1
#define CTL_REGS_PCB_CTRL_TYPE_DC_PCB_EN_SHIFT                     0


/****************************************************************************
 * ctl_regs :: pcb_adr_msw_type
 ***************************************************************************/
/* ctl_regs :: pcb_adr_msw_type :: pcb_adr_msw [15:00] */
#define CTL_REGS_PCB_ADR_MSW_TYPE_PCB_ADR_MSW_MASK                 0xffff
#define CTL_REGS_PCB_ADR_MSW_TYPE_PCB_ADR_MSW_ALIGN                0
#define CTL_REGS_PCB_ADR_MSW_TYPE_PCB_ADR_MSW_BITS                 16
#define CTL_REGS_PCB_ADR_MSW_TYPE_PCB_ADR_MSW_SHIFT                0


/****************************************************************************
 * ctl_regs :: pcb_adr_lsw_type
 ***************************************************************************/
/* ctl_regs :: pcb_adr_lsw_type :: pcb_adr_lsw [15:00] */
#define CTL_REGS_PCB_ADR_LSW_TYPE_PCB_ADR_LSW_MASK                 0xffff
#define CTL_REGS_PCB_ADR_LSW_TYPE_PCB_ADR_LSW_ALIGN                0
#define CTL_REGS_PCB_ADR_LSW_TYPE_PCB_ADR_LSW_BITS                 16
#define CTL_REGS_PCB_ADR_LSW_TYPE_PCB_ADR_LSW_SHIFT                0


/****************************************************************************
 * ctl_regs :: pcb_data_in_type
 ***************************************************************************/
/* ctl_regs :: pcb_data_in_type :: pcb_data_in [15:00] */
#define CTL_REGS_PCB_DATA_IN_TYPE_PCB_DATA_IN_MASK                 0xffff
#define CTL_REGS_PCB_DATA_IN_TYPE_PCB_DATA_IN_ALIGN                0
#define CTL_REGS_PCB_DATA_IN_TYPE_PCB_DATA_IN_BITS                 16
#define CTL_REGS_PCB_DATA_IN_TYPE_PCB_DATA_IN_SHIFT                0


/****************************************************************************
 * ctl_regs :: pcb_data_out_type
 ***************************************************************************/
/* ctl_regs :: pcb_data_out_type :: pcb_data_out [15:00] */
#define CTL_REGS_PCB_DATA_OUT_TYPE_PCB_DATA_OUT_MASK               0xffff
#define CTL_REGS_PCB_DATA_OUT_TYPE_PCB_DATA_OUT_ALIGN              0
#define CTL_REGS_PCB_DATA_OUT_TYPE_PCB_DATA_OUT_BITS               16
#define CTL_REGS_PCB_DATA_OUT_TYPE_PCB_DATA_OUT_SHIFT              0


/****************************************************************************
 * ctl_regs :: sys_loopback_en
 ***************************************************************************/
/* ctl_regs :: sys_loopback_en :: reserved0 [15:10] */
#define CTL_REGS_SYS_LOOPBACK_EN_RESERVED0_MASK                    0xfc00
#define CTL_REGS_SYS_LOOPBACK_EN_RESERVED0_ALIGN                   0
#define CTL_REGS_SYS_LOOPBACK_EN_RESERVED0_BITS                    6
#define CTL_REGS_SYS_LOOPBACK_EN_RESERVED0_SHIFT                   10

/* ctl_regs :: sys_loopback_en :: sys_lpbk_en [09:00] */
#define CTL_REGS_SYS_LOOPBACK_EN_SYS_LPBK_EN_MASK                  0x03ff
#define CTL_REGS_SYS_LOOPBACK_EN_SYS_LPBK_EN_ALIGN                 0
#define CTL_REGS_SYS_LOOPBACK_EN_SYS_LPBK_EN_BITS                  10
#define CTL_REGS_SYS_LOOPBACK_EN_SYS_LPBK_EN_SHIFT                 0


/****************************************************************************
 * ctl_regs :: line_loopback_en
 ***************************************************************************/
/* ctl_regs :: line_loopback_en :: reserved0 [15:10] */
#define CTL_REGS_LINE_LOOPBACK_EN_RESERVED0_MASK                   0xfc00
#define CTL_REGS_LINE_LOOPBACK_EN_RESERVED0_ALIGN                  0
#define CTL_REGS_LINE_LOOPBACK_EN_RESERVED0_BITS                   6
#define CTL_REGS_LINE_LOOPBACK_EN_RESERVED0_SHIFT                  10

/* ctl_regs :: line_loopback_en :: line_lpbk_en [09:00] */
#define CTL_REGS_LINE_LOOPBACK_EN_LINE_LPBK_EN_MASK                0x03ff
#define CTL_REGS_LINE_LOOPBACK_EN_LINE_LPBK_EN_ALIGN               0
#define CTL_REGS_LINE_LOOPBACK_EN_LINE_LPBK_EN_BITS                10
#define CTL_REGS_LINE_LOOPBACK_EN_LINE_LPBK_EN_SHIFT               0


/****************************************************************************
 * ctl_regs :: pvtmon_ctrl1
 ***************************************************************************/
/* ctl_regs :: pvtmon_ctrl1 :: reserved0 [15:13] */
#define CTL_REGS_PVTMON_CTRL1_RESERVED0_MASK                       0xe000
#define CTL_REGS_PVTMON_CTRL1_RESERVED0_ALIGN                      0
#define CTL_REGS_PVTMON_CTRL1_RESERVED0_BITS                       3
#define CTL_REGS_PVTMON_CTRL1_RESERVED0_SHIFT                      13

/* ctl_regs :: pvtmon_ctrl1 :: pvtmon_freq_output [12:12] */
#define CTL_REGS_PVTMON_CTRL1_PVTMON_FREQ_OUTPUT_MASK              0x1000
#define CTL_REGS_PVTMON_CTRL1_PVTMON_FREQ_OUTPUT_ALIGN             0
#define CTL_REGS_PVTMON_CTRL1_PVTMON_FREQ_OUTPUT_BITS              1
#define CTL_REGS_PVTMON_CTRL1_PVTMON_FREQ_OUTPUT_SHIFT             12

/* ctl_regs :: pvtmon_ctrl1 :: i_IDOFFMON_pwrdn [11:11] */
#define CTL_REGS_PVTMON_CTRL1_I_IDOFFMON_PWRDN_MASK                0x0800
#define CTL_REGS_PVTMON_CTRL1_I_IDOFFMON_PWRDN_ALIGN               0
#define CTL_REGS_PVTMON_CTRL1_I_IDOFFMON_PWRDN_BITS                1
#define CTL_REGS_PVTMON_CTRL1_I_IDOFFMON_PWRDN_SHIFT               11

/* ctl_regs :: pvtmon_ctrl1 :: reserved1 [10:06] */
#define CTL_REGS_PVTMON_CTRL1_RESERVED1_MASK                       0x07c0
#define CTL_REGS_PVTMON_CTRL1_RESERVED1_ALIGN                      0
#define CTL_REGS_PVTMON_CTRL1_RESERVED1_BITS                       5
#define CTL_REGS_PVTMON_CTRL1_RESERVED1_SHIFT                      6

/* ctl_regs :: pvtmon_ctrl1 :: i_PVTMON_pwrdn [05:05] */
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_PWRDN_MASK                  0x0020
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_PWRDN_ALIGN                 0
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_PWRDN_BITS                  1
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_PWRDN_SHIFT                 5

/* ctl_regs :: pvtmon_ctrl1 :: i_PVTMON_resetb [04:04] */
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_RESETB_MASK                 0x0010
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_RESETB_ALIGN                0
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_RESETB_BITS                 1
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_RESETB_SHIFT                4

/* ctl_regs :: pvtmon_ctrl1 :: i_PVTMON_reg_en [03:03] */
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_REG_EN_MASK                 0x0008
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_REG_EN_ALIGN                0
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_REG_EN_BITS                 1
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_REG_EN_SHIFT                3

/* ctl_regs :: pvtmon_ctrl1 :: i_PVTMON_sel [02:00] */
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_SEL_MASK                    0x0007
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_SEL_ALIGN                   0
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_SEL_BITS                    3
#define CTL_REGS_PVTMON_CTRL1_I_PVTMON_SEL_SHIFT                   0


/****************************************************************************
 * ctl_regs :: pvtmon_ctrl2
 ***************************************************************************/
/* ctl_regs :: pvtmon_ctrl2 :: reserved0 [15:10] */
#define CTL_REGS_PVTMON_CTRL2_RESERVED0_MASK                       0xfc00
#define CTL_REGS_PVTMON_CTRL2_RESERVED0_ALIGN                      0
#define CTL_REGS_PVTMON_CTRL2_RESERVED0_BITS                       6
#define CTL_REGS_PVTMON_CTRL2_RESERVED0_SHIFT                      10

/* ctl_regs :: pvtmon_ctrl2 :: i_PVTMON_vdac [09:00] */
#define CTL_REGS_PVTMON_CTRL2_I_PVTMON_VDAC_MASK                   0x03ff
#define CTL_REGS_PVTMON_CTRL2_I_PVTMON_VDAC_ALIGN                  0
#define CTL_REGS_PVTMON_CTRL2_I_PVTMON_VDAC_BITS                   10
#define CTL_REGS_PVTMON_CTRL2_I_PVTMON_VDAC_SHIFT                  0


/****************************************************************************
 * ctl_regs :: pvtmon_ctrl3
 ***************************************************************************/
/* ctl_regs :: pvtmon_ctrl3 :: i_PVTMON_ctrl_15_0 [15:00] */
#define CTL_REGS_PVTMON_CTRL3_I_PVTMON_CTRL_15_0_MASK              0xffff
#define CTL_REGS_PVTMON_CTRL3_I_PVTMON_CTRL_15_0_ALIGN             0
#define CTL_REGS_PVTMON_CTRL3_I_PVTMON_CTRL_15_0_BITS              16
#define CTL_REGS_PVTMON_CTRL3_I_PVTMON_CTRL_15_0_SHIFT             0


/****************************************************************************
 * ctl_regs :: pvtmon_ctrl4
 ***************************************************************************/
/* ctl_regs :: pvtmon_ctrl4 :: i_PVTMON_ctrl_31_16 [15:00] */
#define CTL_REGS_PVTMON_CTRL4_I_PVTMON_CTRL_31_16_MASK             0xffff
#define CTL_REGS_PVTMON_CTRL4_I_PVTMON_CTRL_31_16_ALIGN            0
#define CTL_REGS_PVTMON_CTRL4_I_PVTMON_CTRL_31_16_BITS             16
#define CTL_REGS_PVTMON_CTRL4_I_PVTMON_CTRL_31_16_SHIFT            0


/****************************************************************************
 * ctl_regs :: pvtmon_status
 ***************************************************************************/
/* ctl_regs :: pvtmon_status :: reserved_for_eco0 [15:10] */
#define CTL_REGS_PVTMON_STATUS_RESERVED_FOR_ECO0_MASK              0xfc00
#define CTL_REGS_PVTMON_STATUS_RESERVED_FOR_ECO0_ALIGN             0
#define CTL_REGS_PVTMON_STATUS_RESERVED_FOR_ECO0_BITS              6
#define CTL_REGS_PVTMON_STATUS_RESERVED_FOR_ECO0_SHIFT             10

/* ctl_regs :: pvtmon_status :: o_PVTMON_data [09:00] */
#define CTL_REGS_PVTMON_STATUS_O_PVTMON_DATA_MASK                  0x03ff
#define CTL_REGS_PVTMON_STATUS_O_PVTMON_DATA_ALIGN                 0
#define CTL_REGS_PVTMON_STATUS_O_PVTMON_DATA_BITS                  10
#define CTL_REGS_PVTMON_STATUS_O_PVTMON_DATA_SHIFT                 0


/****************************************************************************
 * ctl_regs :: rescal_ctrl
 ***************************************************************************/
/* ctl_regs :: rescal_ctrl :: reserved0 [15:09] */
#define CTL_REGS_RESCAL_CTRL_RESERVED0_MASK                        0xfe00
#define CTL_REGS_RESCAL_CTRL_RESERVED0_ALIGN                       0
#define CTL_REGS_RESCAL_CTRL_RESERVED0_BITS                        7
#define CTL_REGS_RESCAL_CTRL_RESERVED0_SHIFT                       9

/* ctl_regs :: rescal_ctrl :: rescal_done_frcval [08:08] */
#define CTL_REGS_RESCAL_CTRL_RESCAL_DONE_FRCVAL_MASK               0x0100
#define CTL_REGS_RESCAL_CTRL_RESCAL_DONE_FRCVAL_ALIGN              0
#define CTL_REGS_RESCAL_CTRL_RESCAL_DONE_FRCVAL_BITS               1
#define CTL_REGS_RESCAL_CTRL_RESCAL_DONE_FRCVAL_SHIFT              8

/* ctl_regs :: rescal_ctrl :: rescal_done_frc [07:07] */
#define CTL_REGS_RESCAL_CTRL_RESCAL_DONE_FRC_MASK                  0x0080
#define CTL_REGS_RESCAL_CTRL_RESCAL_DONE_FRC_ALIGN                 0
#define CTL_REGS_RESCAL_CTRL_RESCAL_DONE_FRC_BITS                  1
#define CTL_REGS_RESCAL_CTRL_RESCAL_DONE_FRC_SHIFT                 7

/* ctl_regs :: rescal_ctrl :: reserved1 [06:06] */
#define CTL_REGS_RESCAL_CTRL_RESERVED1_MASK                        0x0040
#define CTL_REGS_RESCAL_CTRL_RESERVED1_ALIGN                       0
#define CTL_REGS_RESCAL_CTRL_RESERVED1_BITS                        1
#define CTL_REGS_RESCAL_CTRL_RESERVED1_SHIFT                       6

/* ctl_regs :: rescal_ctrl :: rescal_pon_frcval [05:03] */
#define CTL_REGS_RESCAL_CTRL_RESCAL_PON_FRCVAL_MASK                0x0038
#define CTL_REGS_RESCAL_CTRL_RESCAL_PON_FRCVAL_ALIGN               0
#define CTL_REGS_RESCAL_CTRL_RESCAL_PON_FRCVAL_BITS                3
#define CTL_REGS_RESCAL_CTRL_RESCAL_PON_FRCVAL_SHIFT               3

/* ctl_regs :: rescal_ctrl :: rescal_pon_frc [02:02] */
#define CTL_REGS_RESCAL_CTRL_RESCAL_PON_FRC_MASK                   0x0004
#define CTL_REGS_RESCAL_CTRL_RESCAL_PON_FRC_ALIGN                  0
#define CTL_REGS_RESCAL_CTRL_RESCAL_PON_FRC_BITS                   1
#define CTL_REGS_RESCAL_CTRL_RESCAL_PON_FRC_SHIFT                  2

/* ctl_regs :: rescal_ctrl :: rescal_pwrdn [01:01] */
#define CTL_REGS_RESCAL_CTRL_RESCAL_PWRDN_MASK                     0x0002
#define CTL_REGS_RESCAL_CTRL_RESCAL_PWRDN_ALIGN                    0
#define CTL_REGS_RESCAL_CTRL_RESCAL_PWRDN_BITS                     1
#define CTL_REGS_RESCAL_CTRL_RESCAL_PWRDN_SHIFT                    1

/* ctl_regs :: rescal_ctrl :: rescal_enable [00:00] */
#define CTL_REGS_RESCAL_CTRL_RESCAL_ENABLE_MASK                    0x0001
#define CTL_REGS_RESCAL_CTRL_RESCAL_ENABLE_ALIGN                   0
#define CTL_REGS_RESCAL_CTRL_RESCAL_ENABLE_BITS                    1
#define CTL_REGS_RESCAL_CTRL_RESCAL_ENABLE_SHIFT                   0


/****************************************************************************
 * ctl_regs :: rescal_status
 ***************************************************************************/
/* ctl_regs :: rescal_status :: reserved_for_eco0 [15:04] */
#define CTL_REGS_RESCAL_STATUS_RESERVED_FOR_ECO0_MASK              0xfff0
#define CTL_REGS_RESCAL_STATUS_RESERVED_FOR_ECO0_ALIGN             0
#define CTL_REGS_RESCAL_STATUS_RESERVED_FOR_ECO0_BITS              12
#define CTL_REGS_RESCAL_STATUS_RESERVED_FOR_ECO0_SHIFT             4

/* ctl_regs :: rescal_status :: rescal_pon [03:01] */
#define CTL_REGS_RESCAL_STATUS_RESCAL_PON_MASK                     0x000e
#define CTL_REGS_RESCAL_STATUS_RESCAL_PON_ALIGN                    0
#define CTL_REGS_RESCAL_STATUS_RESCAL_PON_BITS                     3
#define CTL_REGS_RESCAL_STATUS_RESCAL_PON_SHIFT                    1

/* ctl_regs :: rescal_status :: rescal_done [00:00] */
#define CTL_REGS_RESCAL_STATUS_RESCAL_DONE_MASK                    0x0001
#define CTL_REGS_RESCAL_STATUS_RESCAL_DONE_ALIGN                   0
#define CTL_REGS_RESCAL_STATUS_RESCAL_DONE_BITS                    1
#define CTL_REGS_RESCAL_STATUS_RESCAL_DONE_SHIFT                   0


/****************************************************************************
 * ctl_regs :: pad_osc_control
 ***************************************************************************/
/* ctl_regs :: pad_osc_control :: reserved0 [15:10] */
#define CTL_REGS_PAD_OSC_CONTROL_RESERVED0_MASK                    0xfc00
#define CTL_REGS_PAD_OSC_CONTROL_RESERVED0_ALIGN                   0
#define CTL_REGS_PAD_OSC_CONTROL_RESERVED0_BITS                    6
#define CTL_REGS_PAD_OSC_CONTROL_RESERVED0_SHIFT                   10

/* ctl_regs :: pad_osc_control :: osc_left_output [09:09] */
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_OUTPUT_MASK              0x0200
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_OUTPUT_ALIGN             0
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_OUTPUT_BITS              1
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_OUTPUT_SHIFT             9

/* ctl_regs :: pad_osc_control :: osc_right_output [08:08] */
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_OUTPUT_MASK             0x0100
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_OUTPUT_ALIGN            0
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_OUTPUT_BITS             1
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_OUTPUT_SHIFT            8

/* ctl_regs :: pad_osc_control :: osc_right_sel1 [07:07] */
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_SEL1_MASK               0x0080
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_SEL1_ALIGN              0
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_SEL1_BITS               1
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_SEL1_SHIFT              7

/* ctl_regs :: pad_osc_control :: osc_right_sel0 [06:06] */
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_SEL0_MASK               0x0040
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_SEL0_ALIGN              0
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_SEL0_BITS               1
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_SEL0_SHIFT              6

/* ctl_regs :: pad_osc_control :: osc_right_enable [05:05] */
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_ENABLE_MASK             0x0020
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_ENABLE_ALIGN            0
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_ENABLE_BITS             1
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_ENABLE_SHIFT            5

/* ctl_regs :: pad_osc_control :: osc_right_pwenb [04:04] */
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_PWENB_MASK              0x0010
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_PWENB_ALIGN             0
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_PWENB_BITS              1
#define CTL_REGS_PAD_OSC_CONTROL_OSC_RIGHT_PWENB_SHIFT             4

/* ctl_regs :: pad_osc_control :: osc_left_sel1 [03:03] */
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_SEL1_MASK                0x0008
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_SEL1_ALIGN               0
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_SEL1_BITS                1
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_SEL1_SHIFT               3

/* ctl_regs :: pad_osc_control :: osc_left_sel0 [02:02] */
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_SEL0_MASK                0x0004
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_SEL0_ALIGN               0
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_SEL0_BITS                1
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_SEL0_SHIFT               2

/* ctl_regs :: pad_osc_control :: osc_left_enable [01:01] */
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_ENABLE_MASK              0x0002
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_ENABLE_ALIGN             0
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_ENABLE_BITS              1
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_ENABLE_SHIFT             1

/* ctl_regs :: pad_osc_control :: osc_left_pwenb [00:00] */
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_PWENB_MASK               0x0001
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_PWENB_ALIGN              0
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_PWENB_BITS               1
#define CTL_REGS_PAD_OSC_CONTROL_OSC_LEFT_PWENB_SHIFT              0


/****************************************************************************
 * ctl_regs :: otp_ctrl_status
 ***************************************************************************/
/* ctl_regs :: otp_ctrl_status :: reserved0 [15:05] */
#define CTL_REGS_OTP_CTRL_STATUS_RESERVED0_MASK                    0xffe0
#define CTL_REGS_OTP_CTRL_STATUS_RESERVED0_ALIGN                   0
#define CTL_REGS_OTP_CTRL_STATUS_RESERVED0_BITS                    11
#define CTL_REGS_OTP_CTRL_STATUS_RESERVED0_SHIFT                   5

/* ctl_regs :: otp_ctrl_status :: frc_otp_porb [04:04] */
#define CTL_REGS_OTP_CTRL_STATUS_FRC_OTP_PORB_MASK                 0x0010
#define CTL_REGS_OTP_CTRL_STATUS_FRC_OTP_PORB_ALIGN                0
#define CTL_REGS_OTP_CTRL_STATUS_FRC_OTP_PORB_BITS                 1
#define CTL_REGS_OTP_CTRL_STATUS_FRC_OTP_PORB_SHIFT                4

/* ctl_regs :: otp_ctrl_status :: otp_porb [03:03] */
#define CTL_REGS_OTP_CTRL_STATUS_OTP_PORB_MASK                     0x0008
#define CTL_REGS_OTP_CTRL_STATUS_OTP_PORB_ALIGN                    0
#define CTL_REGS_OTP_CTRL_STATUS_OTP_PORB_BITS                     1
#define CTL_REGS_OTP_CTRL_STATUS_OTP_PORB_SHIFT                    3

/* ctl_regs :: otp_ctrl_status :: otp_config_done [02:02] */
#define CTL_REGS_OTP_CTRL_STATUS_OTP_CONFIG_DONE_MASK              0x0004
#define CTL_REGS_OTP_CTRL_STATUS_OTP_CONFIG_DONE_ALIGN             0
#define CTL_REGS_OTP_CTRL_STATUS_OTP_CONFIG_DONE_BITS              1
#define CTL_REGS_OTP_CTRL_STATUS_OTP_CONFIG_DONE_SHIFT             2

/* ctl_regs :: otp_ctrl_status :: otp_ready [01:01] */
#define CTL_REGS_OTP_CTRL_STATUS_OTP_READY_MASK                    0x0002
#define CTL_REGS_OTP_CTRL_STATUS_OTP_READY_ALIGN                   0
#define CTL_REGS_OTP_CTRL_STATUS_OTP_READY_BITS                    1
#define CTL_REGS_OTP_CTRL_STATUS_OTP_READY_SHIFT                   1

/* ctl_regs :: otp_ctrl_status :: otp_sft_reset [00:00] */
#define CTL_REGS_OTP_CTRL_STATUS_OTP_SFT_RESET_MASK                0x0001
#define CTL_REGS_OTP_CTRL_STATUS_OTP_SFT_RESET_ALIGN               0
#define CTL_REGS_OTP_CTRL_STATUS_OTP_SFT_RESET_BITS                1
#define CTL_REGS_OTP_CTRL_STATUS_OTP_SFT_RESET_SHIFT               0


/****************************************************************************
 * ctl_regs :: vregcntl_type
 ***************************************************************************/
/* ctl_regs :: vregcntl_type :: reserved0 [15:13] */
#define CTL_REGS_VREGCNTL_TYPE_RESERVED0_MASK                      0xe000
#define CTL_REGS_VREGCNTL_TYPE_RESERVED0_ALIGN                     0
#define CTL_REGS_VREGCNTL_TYPE_RESERVED0_BITS                      3
#define CTL_REGS_VREGCNTL_TYPE_RESERVED0_SHIFT                     13

/* ctl_regs :: vregcntl_type :: o_vregcntl [12:00] */
#define CTL_REGS_VREGCNTL_TYPE_O_VREGCNTL_MASK                     0x1fff
#define CTL_REGS_VREGCNTL_TYPE_O_VREGCNTL_ALIGN                    0
#define CTL_REGS_VREGCNTL_TYPE_O_VREGCNTL_BITS                     13
#define CTL_REGS_VREGCNTL_TYPE_O_VREGCNTL_SHIFT                    0


/****************************************************************************
 * ctl_regs :: frc_line_ln
 ***************************************************************************/
/* ctl_regs :: frc_line_ln :: reserved0 [15:10] */
#define CTL_REGS_FRC_LINE_LN_RESERVED0_MASK                        0xfc00
#define CTL_REGS_FRC_LINE_LN_RESERVED0_ALIGN                       0
#define CTL_REGS_FRC_LINE_LN_RESERVED0_BITS                        6
#define CTL_REGS_FRC_LINE_LN_RESERVED0_SHIFT                       10

/* ctl_regs :: frc_line_ln :: frc_line_ln_en [09:00] */
#define CTL_REGS_FRC_LINE_LN_FRC_LINE_LN_EN_MASK                   0x03ff
#define CTL_REGS_FRC_LINE_LN_FRC_LINE_LN_EN_ALIGN                  0
#define CTL_REGS_FRC_LINE_LN_FRC_LINE_LN_EN_BITS                   10
#define CTL_REGS_FRC_LINE_LN_FRC_LINE_LN_EN_SHIFT                  0


/****************************************************************************
 * ctl_regs :: line_ln
 ***************************************************************************/
/* ctl_regs :: line_ln :: reserved0 [15:10] */
#define CTL_REGS_LINE_LN_RESERVED0_MASK                            0xfc00
#define CTL_REGS_LINE_LN_RESERVED0_ALIGN                           0
#define CTL_REGS_LINE_LN_RESERVED0_BITS                            6
#define CTL_REGS_LINE_LN_RESERVED0_SHIFT                           10

/* ctl_regs :: line_ln :: line_ln_en [09:00] */
#define CTL_REGS_LINE_LN_LINE_LN_EN_MASK                           0x03ff
#define CTL_REGS_LINE_LN_LINE_LN_EN_ALIGN                          0
#define CTL_REGS_LINE_LN_LINE_LN_EN_BITS                           10
#define CTL_REGS_LINE_LN_LINE_LN_EN_SHIFT                          0


/****************************************************************************
 * ctl_regs :: frc_sys_ln
 ***************************************************************************/
/* ctl_regs :: frc_sys_ln :: reserved0 [15:10] */
#define CTL_REGS_FRC_SYS_LN_RESERVED0_MASK                         0xfc00
#define CTL_REGS_FRC_SYS_LN_RESERVED0_ALIGN                        0
#define CTL_REGS_FRC_SYS_LN_RESERVED0_BITS                         6
#define CTL_REGS_FRC_SYS_LN_RESERVED0_SHIFT                        10

/* ctl_regs :: frc_sys_ln :: frc_sys_ln_en [09:00] */
#define CTL_REGS_FRC_SYS_LN_FRC_SYS_LN_EN_MASK                     0x03ff
#define CTL_REGS_FRC_SYS_LN_FRC_SYS_LN_EN_ALIGN                    0
#define CTL_REGS_FRC_SYS_LN_FRC_SYS_LN_EN_BITS                     10
#define CTL_REGS_FRC_SYS_LN_FRC_SYS_LN_EN_SHIFT                    0


/****************************************************************************
 * ctl_regs :: sys_ln
 ***************************************************************************/
/* ctl_regs :: sys_ln :: reserved0 [15:10] */
#define CTL_REGS_SYS_LN_RESERVED0_MASK                             0xfc00
#define CTL_REGS_SYS_LN_RESERVED0_ALIGN                            0
#define CTL_REGS_SYS_LN_RESERVED0_BITS                             6
#define CTL_REGS_SYS_LN_RESERVED0_SHIFT                            10

/* ctl_regs :: sys_ln :: sys_ln_en [09:00] */
#define CTL_REGS_SYS_LN_SYS_LN_EN_MASK                             0x03ff
#define CTL_REGS_SYS_LN_SYS_LN_EN_ALIGN                            0
#define CTL_REGS_SYS_LN_SYS_LN_EN_BITS                             10
#define CTL_REGS_SYS_LN_SYS_LN_EN_SHIFT                            0


/****************************************************************************
 * ctl_regs :: gpio_0_ctrl_status
 ***************************************************************************/
/* ctl_regs :: gpio_0_ctrl_status :: reserved0 [15:06] */
#define CTL_REGS_GPIO_0_CTRL_STATUS_RESERVED0_MASK                 0xffc0
#define CTL_REGS_GPIO_0_CTRL_STATUS_RESERVED0_ALIGN                0
#define CTL_REGS_GPIO_0_CTRL_STATUS_RESERVED0_BITS                 10
#define CTL_REGS_GPIO_0_CTRL_STATUS_RESERVED0_SHIFT                6

/* ctl_regs :: gpio_0_ctrl_status :: gpio_pdn_ctrl_0 [05:05] */
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PDN_CTRL_0_MASK           0x0020
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PDN_CTRL_0_ALIGN          0
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PDN_CTRL_0_BITS           1
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PDN_CTRL_0_SHIFT          5

/* ctl_regs :: gpio_0_ctrl_status :: gpio_pup_ctrl_0 [04:04] */
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PUP_CTRL_0_MASK           0x0010
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PUP_CTRL_0_ALIGN          0
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PUP_CTRL_0_BITS           1
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PUP_CTRL_0_SHIFT          4

/* ctl_regs :: gpio_0_ctrl_status :: gpio_oeb_ctrl_0 [03:03] */
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_OEB_CTRL_0_MASK           0x0008
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_OEB_CTRL_0_ALIGN          0
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_OEB_CTRL_0_BITS           1
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_OEB_CTRL_0_SHIFT          3

/* ctl_regs :: gpio_0_ctrl_status :: gpio_in_status_0 [02:02] */
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_IN_STATUS_0_MASK          0x0004
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_IN_STATUS_0_ALIGN         0
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_IN_STATUS_0_BITS          1
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_IN_STATUS_0_SHIFT         2

/* ctl_regs :: gpio_0_ctrl_status :: gpio_out_ctrl_0 [01:01] */
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_OUT_CTRL_0_MASK           0x0002
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_OUT_CTRL_0_ALIGN          0
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_OUT_CTRL_0_BITS           1
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_OUT_CTRL_0_SHIFT          1

/* ctl_regs :: gpio_0_ctrl_status :: gpio_pad_ctrl_0 [00:00] */
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PAD_CTRL_0_MASK           0x0001
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PAD_CTRL_0_ALIGN          0
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PAD_CTRL_0_BITS           1
#define CTL_REGS_GPIO_0_CTRL_STATUS_GPIO_PAD_CTRL_0_SHIFT          0


/****************************************************************************
 * ctl_regs :: gpio_1_ctrl_status
 ***************************************************************************/
/* ctl_regs :: gpio_1_ctrl_status :: reserved0 [15:06] */
#define CTL_REGS_GPIO_1_CTRL_STATUS_RESERVED0_MASK                 0xffc0
#define CTL_REGS_GPIO_1_CTRL_STATUS_RESERVED0_ALIGN                0
#define CTL_REGS_GPIO_1_CTRL_STATUS_RESERVED0_BITS                 10
#define CTL_REGS_GPIO_1_CTRL_STATUS_RESERVED0_SHIFT                6

/* ctl_regs :: gpio_1_ctrl_status :: gpio_pdn_ctrl_1 [05:05] */
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PDN_CTRL_1_MASK           0x0020
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PDN_CTRL_1_ALIGN          0
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PDN_CTRL_1_BITS           1
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PDN_CTRL_1_SHIFT          5

/* ctl_regs :: gpio_1_ctrl_status :: gpio_pup_ctrl_1 [04:04] */
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PUP_CTRL_1_MASK           0x0010
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PUP_CTRL_1_ALIGN          0
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PUP_CTRL_1_BITS           1
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PUP_CTRL_1_SHIFT          4

/* ctl_regs :: gpio_1_ctrl_status :: gpio_oeb_ctrl_1 [03:03] */
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_OEB_CTRL_1_MASK           0x0008
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_OEB_CTRL_1_ALIGN          0
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_OEB_CTRL_1_BITS           1
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_OEB_CTRL_1_SHIFT          3

/* ctl_regs :: gpio_1_ctrl_status :: gpio_in_status_1 [02:02] */
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_IN_STATUS_1_MASK          0x0004
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_IN_STATUS_1_ALIGN         0
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_IN_STATUS_1_BITS          1
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_IN_STATUS_1_SHIFT         2

/* ctl_regs :: gpio_1_ctrl_status :: gpio_out_ctrl_1 [01:01] */
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_OUT_CTRL_1_MASK           0x0002
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_OUT_CTRL_1_ALIGN          0
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_OUT_CTRL_1_BITS           1
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_OUT_CTRL_1_SHIFT          1

/* ctl_regs :: gpio_1_ctrl_status :: gpio_pad_ctrl_1 [00:00] */
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PAD_CTRL_1_MASK           0x0001
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PAD_CTRL_1_ALIGN          0
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PAD_CTRL_1_BITS           1
#define CTL_REGS_GPIO_1_CTRL_STATUS_GPIO_PAD_CTRL_1_SHIFT          0


/****************************************************************************
 * ctl_regs :: gpio_2_ctrl_status
 ***************************************************************************/
/* ctl_regs :: gpio_2_ctrl_status :: reserved0 [15:06] */
#define CTL_REGS_GPIO_2_CTRL_STATUS_RESERVED0_MASK                 0xffc0
#define CTL_REGS_GPIO_2_CTRL_STATUS_RESERVED0_ALIGN                0
#define CTL_REGS_GPIO_2_CTRL_STATUS_RESERVED0_BITS                 10
#define CTL_REGS_GPIO_2_CTRL_STATUS_RESERVED0_SHIFT                6

/* ctl_regs :: gpio_2_ctrl_status :: gpio_pdn_ctrl_2 [05:05] */
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PDN_CTRL_2_MASK           0x0020
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PDN_CTRL_2_ALIGN          0
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PDN_CTRL_2_BITS           1
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PDN_CTRL_2_SHIFT          5

/* ctl_regs :: gpio_2_ctrl_status :: gpio_pup_ctrl_2 [04:04] */
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PUP_CTRL_2_MASK           0x0010
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PUP_CTRL_2_ALIGN          0
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PUP_CTRL_2_BITS           1
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PUP_CTRL_2_SHIFT          4

/* ctl_regs :: gpio_2_ctrl_status :: gpio_oeb_ctrl_2 [03:03] */
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_OEB_CTRL_2_MASK           0x0008
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_OEB_CTRL_2_ALIGN          0
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_OEB_CTRL_2_BITS           1
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_OEB_CTRL_2_SHIFT          3

/* ctl_regs :: gpio_2_ctrl_status :: gpio_in_status_2 [02:02] */
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_IN_STATUS_2_MASK          0x0004
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_IN_STATUS_2_ALIGN         0
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_IN_STATUS_2_BITS          1
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_IN_STATUS_2_SHIFT         2

/* ctl_regs :: gpio_2_ctrl_status :: gpio_out_ctrl_2 [01:01] */
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_OUT_CTRL_2_MASK           0x0002
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_OUT_CTRL_2_ALIGN          0
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_OUT_CTRL_2_BITS           1
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_OUT_CTRL_2_SHIFT          1

/* ctl_regs :: gpio_2_ctrl_status :: gpio_pad_ctrl_2 [00:00] */
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PAD_CTRL_2_MASK           0x0001
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PAD_CTRL_2_ALIGN          0
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PAD_CTRL_2_BITS           1
#define CTL_REGS_GPIO_2_CTRL_STATUS_GPIO_PAD_CTRL_2_SHIFT          0


/****************************************************************************
 * ctl_regs :: gpio_3_ctrl_status
 ***************************************************************************/
/* ctl_regs :: gpio_3_ctrl_status :: reserved0 [15:06] */
#define CTL_REGS_GPIO_3_CTRL_STATUS_RESERVED0_MASK                 0xffc0
#define CTL_REGS_GPIO_3_CTRL_STATUS_RESERVED0_ALIGN                0
#define CTL_REGS_GPIO_3_CTRL_STATUS_RESERVED0_BITS                 10
#define CTL_REGS_GPIO_3_CTRL_STATUS_RESERVED0_SHIFT                6

/* ctl_regs :: gpio_3_ctrl_status :: gpio_pdn_ctrl_3 [05:05] */
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PDN_CTRL_3_MASK           0x0020
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PDN_CTRL_3_ALIGN          0
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PDN_CTRL_3_BITS           1
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PDN_CTRL_3_SHIFT          5

/* ctl_regs :: gpio_3_ctrl_status :: gpio_pup_ctrl_3 [04:04] */
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PUP_CTRL_3_MASK           0x0010
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PUP_CTRL_3_ALIGN          0
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PUP_CTRL_3_BITS           1
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PUP_CTRL_3_SHIFT          4

/* ctl_regs :: gpio_3_ctrl_status :: gpio_oeb_ctrl_3 [03:03] */
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_OEB_CTRL_3_MASK           0x0008
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_OEB_CTRL_3_ALIGN          0
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_OEB_CTRL_3_BITS           1
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_OEB_CTRL_3_SHIFT          3

/* ctl_regs :: gpio_3_ctrl_status :: gpio_in_status_3 [02:02] */
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_IN_STATUS_3_MASK          0x0004
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_IN_STATUS_3_ALIGN         0
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_IN_STATUS_3_BITS          1
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_IN_STATUS_3_SHIFT         2

/* ctl_regs :: gpio_3_ctrl_status :: gpio_out_ctrl_3 [01:01] */
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_OUT_CTRL_3_MASK           0x0002
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_OUT_CTRL_3_ALIGN          0
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_OUT_CTRL_3_BITS           1
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_OUT_CTRL_3_SHIFT          1

/* ctl_regs :: gpio_3_ctrl_status :: gpio_pad_ctrl_3 [00:00] */
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PAD_CTRL_3_MASK           0x0001
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PAD_CTRL_3_ALIGN          0
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PAD_CTRL_3_BITS           1
#define CTL_REGS_GPIO_3_CTRL_STATUS_GPIO_PAD_CTRL_3_SHIFT          0


/****************************************************************************
 * ctl_regs :: gpio_4_ctrl_status
 ***************************************************************************/
/* ctl_regs :: gpio_4_ctrl_status :: reserved0 [15:06] */
#define CTL_REGS_GPIO_4_CTRL_STATUS_RESERVED0_MASK                 0xffc0
#define CTL_REGS_GPIO_4_CTRL_STATUS_RESERVED0_ALIGN                0
#define CTL_REGS_GPIO_4_CTRL_STATUS_RESERVED0_BITS                 10
#define CTL_REGS_GPIO_4_CTRL_STATUS_RESERVED0_SHIFT                6

/* ctl_regs :: gpio_4_ctrl_status :: gpio_pdn_ctrl_4 [05:05] */
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PDN_CTRL_4_MASK           0x0020
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PDN_CTRL_4_ALIGN          0
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PDN_CTRL_4_BITS           1
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PDN_CTRL_4_SHIFT          5

/* ctl_regs :: gpio_4_ctrl_status :: gpio_pup_ctrl_4 [04:04] */
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PUP_CTRL_4_MASK           0x0010
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PUP_CTRL_4_ALIGN          0
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PUP_CTRL_4_BITS           1
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PUP_CTRL_4_SHIFT          4

/* ctl_regs :: gpio_4_ctrl_status :: gpio_oeb_ctrl_4 [03:03] */
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_OEB_CTRL_4_MASK           0x0008
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_OEB_CTRL_4_ALIGN          0
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_OEB_CTRL_4_BITS           1
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_OEB_CTRL_4_SHIFT          3

/* ctl_regs :: gpio_4_ctrl_status :: gpio_in_status_4 [02:02] */
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_IN_STATUS_4_MASK          0x0004
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_IN_STATUS_4_ALIGN         0
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_IN_STATUS_4_BITS          1
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_IN_STATUS_4_SHIFT         2

/* ctl_regs :: gpio_4_ctrl_status :: gpio_out_ctrl_4 [01:01] */
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_OUT_CTRL_4_MASK           0x0002
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_OUT_CTRL_4_ALIGN          0
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_OUT_CTRL_4_BITS           1
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_OUT_CTRL_4_SHIFT          1

/* ctl_regs :: gpio_4_ctrl_status :: gpio_pad_ctrl_4 [00:00] */
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PAD_CTRL_4_MASK           0x0001
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PAD_CTRL_4_ALIGN          0
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PAD_CTRL_4_BITS           1
#define CTL_REGS_GPIO_4_CTRL_STATUS_GPIO_PAD_CTRL_4_SHIFT          0


/****************************************************************************
 * ctl_regs :: gpio_5_ctrl_status
 ***************************************************************************/
/* ctl_regs :: gpio_5_ctrl_status :: reserved0 [15:06] */
#define CTL_REGS_GPIO_5_CTRL_STATUS_RESERVED0_MASK                 0xffc0
#define CTL_REGS_GPIO_5_CTRL_STATUS_RESERVED0_ALIGN                0
#define CTL_REGS_GPIO_5_CTRL_STATUS_RESERVED0_BITS                 10
#define CTL_REGS_GPIO_5_CTRL_STATUS_RESERVED0_SHIFT                6

/* ctl_regs :: gpio_5_ctrl_status :: gpio_pdn_ctrl_5 [05:05] */
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PDN_CTRL_5_MASK           0x0020
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PDN_CTRL_5_ALIGN          0
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PDN_CTRL_5_BITS           1
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PDN_CTRL_5_SHIFT          5

/* ctl_regs :: gpio_5_ctrl_status :: gpio_pup_ctrl_5 [04:04] */
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PUP_CTRL_5_MASK           0x0010
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PUP_CTRL_5_ALIGN          0
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PUP_CTRL_5_BITS           1
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PUP_CTRL_5_SHIFT          4

/* ctl_regs :: gpio_5_ctrl_status :: gpio_oeb_ctrl_5 [03:03] */
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_OEB_CTRL_5_MASK           0x0008
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_OEB_CTRL_5_ALIGN          0
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_OEB_CTRL_5_BITS           1
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_OEB_CTRL_5_SHIFT          3

/* ctl_regs :: gpio_5_ctrl_status :: gpio_in_status_5 [02:02] */
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_IN_STATUS_5_MASK          0x0004
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_IN_STATUS_5_ALIGN         0
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_IN_STATUS_5_BITS          1
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_IN_STATUS_5_SHIFT         2

/* ctl_regs :: gpio_5_ctrl_status :: gpio_out_ctrl_5 [01:01] */
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_OUT_CTRL_5_MASK           0x0002
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_OUT_CTRL_5_ALIGN          0
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_OUT_CTRL_5_BITS           1
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_OUT_CTRL_5_SHIFT          1

/* ctl_regs :: gpio_5_ctrl_status :: gpio_pad_ctrl_5 [00:00] */
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PAD_CTRL_5_MASK           0x0001
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PAD_CTRL_5_ALIGN          0
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PAD_CTRL_5_BITS           1
#define CTL_REGS_GPIO_5_CTRL_STATUS_GPIO_PAD_CTRL_5_SHIFT          0


/****************************************************************************
 * ctl_regs :: status_ctrl1
 ***************************************************************************/
/* ctl_regs :: status_ctrl1 :: reserved0 [15:15] */
#define CTL_REGS_STATUS_CTRL1_RESERVED0_MASK                       0x8000
#define CTL_REGS_STATUS_CTRL1_RESERVED0_ALIGN                      0
#define CTL_REGS_STATUS_CTRL1_RESERVED0_BITS                       1
#define CTL_REGS_STATUS_CTRL1_RESERVED0_SHIFT                      15

/* ctl_regs :: status_ctrl1 :: frc_ext_intr_status [14:14] */
#define CTL_REGS_STATUS_CTRL1_FRC_EXT_INTR_STATUS_MASK             0x4000
#define CTL_REGS_STATUS_CTRL1_FRC_EXT_INTR_STATUS_ALIGN            0
#define CTL_REGS_STATUS_CTRL1_FRC_EXT_INTR_STATUS_BITS             1
#define CTL_REGS_STATUS_CTRL1_FRC_EXT_INTR_STATUS_SHIFT            14

/* ctl_regs :: status_ctrl1 :: ext_intr_status [13:13] */
#define CTL_REGS_STATUS_CTRL1_EXT_INTR_STATUS_MASK                 0x2000
#define CTL_REGS_STATUS_CTRL1_EXT_INTR_STATUS_ALIGN                0
#define CTL_REGS_STATUS_CTRL1_EXT_INTR_STATUS_BITS                 1
#define CTL_REGS_STATUS_CTRL1_EXT_INTR_STATUS_SHIFT                13

/* ctl_regs :: status_ctrl1 :: inv_ext_intr_status [12:12] */
#define CTL_REGS_STATUS_CTRL1_INV_EXT_INTR_STATUS_MASK             0x1000
#define CTL_REGS_STATUS_CTRL1_INV_EXT_INTR_STATUS_ALIGN            0
#define CTL_REGS_STATUS_CTRL1_INV_EXT_INTR_STATUS_BITS             1
#define CTL_REGS_STATUS_CTRL1_INV_EXT_INTR_STATUS_SHIFT            12

/* ctl_regs :: status_ctrl1 :: frc_sys_lol_status [11:11] */
#define CTL_REGS_STATUS_CTRL1_FRC_SYS_LOL_STATUS_MASK              0x0800
#define CTL_REGS_STATUS_CTRL1_FRC_SYS_LOL_STATUS_ALIGN             0
#define CTL_REGS_STATUS_CTRL1_FRC_SYS_LOL_STATUS_BITS              1
#define CTL_REGS_STATUS_CTRL1_FRC_SYS_LOL_STATUS_SHIFT             11

/* ctl_regs :: status_ctrl1 :: sys_lol_status [10:10] */
#define CTL_REGS_STATUS_CTRL1_SYS_LOL_STATUS_MASK                  0x0400
#define CTL_REGS_STATUS_CTRL1_SYS_LOL_STATUS_ALIGN                 0
#define CTL_REGS_STATUS_CTRL1_SYS_LOL_STATUS_BITS                  1
#define CTL_REGS_STATUS_CTRL1_SYS_LOL_STATUS_SHIFT                 10

/* ctl_regs :: status_ctrl1 :: inv_sys_lol_status [09:09] */
#define CTL_REGS_STATUS_CTRL1_INV_SYS_LOL_STATUS_MASK              0x0200
#define CTL_REGS_STATUS_CTRL1_INV_SYS_LOL_STATUS_ALIGN             0
#define CTL_REGS_STATUS_CTRL1_INV_SYS_LOL_STATUS_BITS              1
#define CTL_REGS_STATUS_CTRL1_INV_SYS_LOL_STATUS_SHIFT             9

/* ctl_regs :: status_ctrl1 :: frc_rx_los_status [08:08] */
#define CTL_REGS_STATUS_CTRL1_FRC_RX_LOS_STATUS_MASK               0x0100
#define CTL_REGS_STATUS_CTRL1_FRC_RX_LOS_STATUS_ALIGN              0
#define CTL_REGS_STATUS_CTRL1_FRC_RX_LOS_STATUS_BITS               1
#define CTL_REGS_STATUS_CTRL1_FRC_RX_LOS_STATUS_SHIFT              8

/* ctl_regs :: status_ctrl1 :: rx_los_status [07:07] */
#define CTL_REGS_STATUS_CTRL1_RX_LOS_STATUS_MASK                   0x0080
#define CTL_REGS_STATUS_CTRL1_RX_LOS_STATUS_ALIGN                  0
#define CTL_REGS_STATUS_CTRL1_RX_LOS_STATUS_BITS                   1
#define CTL_REGS_STATUS_CTRL1_RX_LOS_STATUS_SHIFT                  7

/* ctl_regs :: status_ctrl1 :: inv_rx_los_status [06:06] */
#define CTL_REGS_STATUS_CTRL1_INV_RX_LOS_STATUS_MASK               0x0040
#define CTL_REGS_STATUS_CTRL1_INV_RX_LOS_STATUS_ALIGN              0
#define CTL_REGS_STATUS_CTRL1_INV_RX_LOS_STATUS_BITS               1
#define CTL_REGS_STATUS_CTRL1_INV_RX_LOS_STATUS_SHIFT              6

/* ctl_regs :: status_ctrl1 :: frc_rx_line_lol_status [05:05] */
#define CTL_REGS_STATUS_CTRL1_FRC_RX_LINE_LOL_STATUS_MASK          0x0020
#define CTL_REGS_STATUS_CTRL1_FRC_RX_LINE_LOL_STATUS_ALIGN         0
#define CTL_REGS_STATUS_CTRL1_FRC_RX_LINE_LOL_STATUS_BITS          1
#define CTL_REGS_STATUS_CTRL1_FRC_RX_LINE_LOL_STATUS_SHIFT         5

/* ctl_regs :: status_ctrl1 :: rx_line_lol_status [04:04] */
#define CTL_REGS_STATUS_CTRL1_RX_LINE_LOL_STATUS_MASK              0x0010
#define CTL_REGS_STATUS_CTRL1_RX_LINE_LOL_STATUS_ALIGN             0
#define CTL_REGS_STATUS_CTRL1_RX_LINE_LOL_STATUS_BITS              1
#define CTL_REGS_STATUS_CTRL1_RX_LINE_LOL_STATUS_SHIFT             4

/* ctl_regs :: status_ctrl1 :: inv_rx_line_lol_status [03:03] */
#define CTL_REGS_STATUS_CTRL1_INV_RX_LINE_LOL_STATUS_MASK          0x0008
#define CTL_REGS_STATUS_CTRL1_INV_RX_LINE_LOL_STATUS_ALIGN         0
#define CTL_REGS_STATUS_CTRL1_INV_RX_LINE_LOL_STATUS_BITS          1
#define CTL_REGS_STATUS_CTRL1_INV_RX_LINE_LOL_STATUS_SHIFT         3

/* ctl_regs :: status_ctrl1 :: frc_tx_line_lol_status [02:02] */
#define CTL_REGS_STATUS_CTRL1_FRC_TX_LINE_LOL_STATUS_MASK          0x0004
#define CTL_REGS_STATUS_CTRL1_FRC_TX_LINE_LOL_STATUS_ALIGN         0
#define CTL_REGS_STATUS_CTRL1_FRC_TX_LINE_LOL_STATUS_BITS          1
#define CTL_REGS_STATUS_CTRL1_FRC_TX_LINE_LOL_STATUS_SHIFT         2

/* ctl_regs :: status_ctrl1 :: tx_line_lol_status [01:01] */
#define CTL_REGS_STATUS_CTRL1_TX_LINE_LOL_STATUS_MASK              0x0002
#define CTL_REGS_STATUS_CTRL1_TX_LINE_LOL_STATUS_ALIGN             0
#define CTL_REGS_STATUS_CTRL1_TX_LINE_LOL_STATUS_BITS              1
#define CTL_REGS_STATUS_CTRL1_TX_LINE_LOL_STATUS_SHIFT             1

/* ctl_regs :: status_ctrl1 :: inv_tx_line_lol_status [00:00] */
#define CTL_REGS_STATUS_CTRL1_INV_TX_LINE_LOL_STATUS_MASK          0x0001
#define CTL_REGS_STATUS_CTRL1_INV_TX_LINE_LOL_STATUS_ALIGN         0
#define CTL_REGS_STATUS_CTRL1_INV_TX_LINE_LOL_STATUS_BITS          1
#define CTL_REGS_STATUS_CTRL1_INV_TX_LINE_LOL_STATUS_SHIFT         0


/****************************************************************************
 * ctl_regs :: status_ctrl2
 ***************************************************************************/
/* ctl_regs :: status_ctrl2 :: reserved0 [15:03] */
#define CTL_REGS_STATUS_CTRL2_RESERVED0_MASK                       0xfff8
#define CTL_REGS_STATUS_CTRL2_RESERVED0_ALIGN                      0
#define CTL_REGS_STATUS_CTRL2_RESERVED0_BITS                       13
#define CTL_REGS_STATUS_CTRL2_RESERVED0_SHIFT                      3

/* ctl_regs :: status_ctrl2 :: frc_tx_vcxo_lol_status [02:02] */
#define CTL_REGS_STATUS_CTRL2_FRC_TX_VCXO_LOL_STATUS_MASK          0x0004
#define CTL_REGS_STATUS_CTRL2_FRC_TX_VCXO_LOL_STATUS_ALIGN         0
#define CTL_REGS_STATUS_CTRL2_FRC_TX_VCXO_LOL_STATUS_BITS          1
#define CTL_REGS_STATUS_CTRL2_FRC_TX_VCXO_LOL_STATUS_SHIFT         2

/* ctl_regs :: status_ctrl2 :: tx_vcxo_lol_status [01:01] */
#define CTL_REGS_STATUS_CTRL2_TX_VCXO_LOL_STATUS_MASK              0x0002
#define CTL_REGS_STATUS_CTRL2_TX_VCXO_LOL_STATUS_ALIGN             0
#define CTL_REGS_STATUS_CTRL2_TX_VCXO_LOL_STATUS_BITS              1
#define CTL_REGS_STATUS_CTRL2_TX_VCXO_LOL_STATUS_SHIFT             1

/* ctl_regs :: status_ctrl2 :: inv_tx_vcxo_lol_status [00:00] */
#define CTL_REGS_STATUS_CTRL2_INV_TX_VCXO_LOL_STATUS_MASK          0x0001
#define CTL_REGS_STATUS_CTRL2_INV_TX_VCXO_LOL_STATUS_ALIGN         0
#define CTL_REGS_STATUS_CTRL2_INV_TX_VCXO_LOL_STATUS_BITS          1
#define CTL_REGS_STATUS_CTRL2_INV_TX_VCXO_LOL_STATUS_SHIFT         0


/****************************************************************************
 * ctl_regs :: input_status
 ***************************************************************************/
/* ctl_regs :: input_status :: reserved0 [15:06] */
#define CTL_REGS_INPUT_STATUS_RESERVED0_MASK                       0xffc0
#define CTL_REGS_INPUT_STATUS_RESERVED0_ALIGN                      0
#define CTL_REGS_INPUT_STATUS_RESERVED0_BITS                       10
#define CTL_REGS_INPUT_STATUS_RESERVED0_SHIFT                      6

/* ctl_regs :: input_status :: tx_dis_lh [05:05] */
#define CTL_REGS_INPUT_STATUS_TX_DIS_LH_MASK                       0x0020
#define CTL_REGS_INPUT_STATUS_TX_DIS_LH_ALIGN                      0
#define CTL_REGS_INPUT_STATUS_TX_DIS_LH_BITS                       1
#define CTL_REGS_INPUT_STATUS_TX_DIS_LH_SHIFT                      5

/* ctl_regs :: input_status :: tx_dis_ll [04:04] */
#define CTL_REGS_INPUT_STATUS_TX_DIS_LL_MASK                       0x0010
#define CTL_REGS_INPUT_STATUS_TX_DIS_LL_ALIGN                      0
#define CTL_REGS_INPUT_STATUS_TX_DIS_LL_BITS                       1
#define CTL_REGS_INPUT_STATUS_TX_DIS_LL_SHIFT                      4

/* ctl_regs :: input_status :: mod_lopwr_lh [03:03] */
#define CTL_REGS_INPUT_STATUS_MOD_LOPWR_LH_MASK                    0x0008
#define CTL_REGS_INPUT_STATUS_MOD_LOPWR_LH_ALIGN                   0
#define CTL_REGS_INPUT_STATUS_MOD_LOPWR_LH_BITS                    1
#define CTL_REGS_INPUT_STATUS_MOD_LOPWR_LH_SHIFT                   3

/* ctl_regs :: input_status :: mod_lopwr_ll [02:02] */
#define CTL_REGS_INPUT_STATUS_MOD_LOPWR_LL_MASK                    0x0004
#define CTL_REGS_INPUT_STATUS_MOD_LOPWR_LL_ALIGN                   0
#define CTL_REGS_INPUT_STATUS_MOD_LOPWR_LL_BITS                    1
#define CTL_REGS_INPUT_STATUS_MOD_LOPWR_LL_SHIFT                   2

/* ctl_regs :: input_status :: mod_abs_lh [01:01] */
#define CTL_REGS_INPUT_STATUS_MOD_ABS_LH_MASK                      0x0002
#define CTL_REGS_INPUT_STATUS_MOD_ABS_LH_ALIGN                     0
#define CTL_REGS_INPUT_STATUS_MOD_ABS_LH_BITS                      1
#define CTL_REGS_INPUT_STATUS_MOD_ABS_LH_SHIFT                     1

/* ctl_regs :: input_status :: mod_abs_ll [00:00] */
#define CTL_REGS_INPUT_STATUS_MOD_ABS_LL_MASK                      0x0001
#define CTL_REGS_INPUT_STATUS_MOD_ABS_LL_ALIGN                     0
#define CTL_REGS_INPUT_STATUS_MOD_ABS_LL_BITS                      1
#define CTL_REGS_INPUT_STATUS_MOD_ABS_LL_SHIFT                     0


/****************************************************************************
 * ctl_regs :: ieee_regs_rst_latch
 ***************************************************************************/
/* ctl_regs :: ieee_regs_rst_latch :: reserved0 [15:14] */
#define CTL_REGS_IEEE_REGS_RST_LATCH_RESERVED0_MASK                0xc000
#define CTL_REGS_IEEE_REGS_RST_LATCH_RESERVED0_ALIGN               0
#define CTL_REGS_IEEE_REGS_RST_LATCH_RESERVED0_BITS                2
#define CTL_REGS_IEEE_REGS_RST_LATCH_RESERVED0_SHIFT               14

/* ctl_regs :: ieee_regs_rst_latch :: ieee_regs_rst_lh [13:00] */
#define CTL_REGS_IEEE_REGS_RST_LATCH_IEEE_REGS_RST_LH_MASK         0x3fff
#define CTL_REGS_IEEE_REGS_RST_LATCH_IEEE_REGS_RST_LH_ALIGN        0
#define CTL_REGS_IEEE_REGS_RST_LATCH_IEEE_REGS_RST_LH_BITS         14
#define CTL_REGS_IEEE_REGS_RST_LATCH_IEEE_REGS_RST_LH_SHIFT        0


/****************************************************************************
 * ctl_regs :: dis_sys_cdr_lock
 ***************************************************************************/
/* ctl_regs :: dis_sys_cdr_lock :: reserved0 [15:10] */
#define CTL_REGS_DIS_SYS_CDR_LOCK_RESERVED0_MASK                   0xfc00
#define CTL_REGS_DIS_SYS_CDR_LOCK_RESERVED0_ALIGN                  0
#define CTL_REGS_DIS_SYS_CDR_LOCK_RESERVED0_BITS                   6
#define CTL_REGS_DIS_SYS_CDR_LOCK_RESERVED0_SHIFT                  10

/* ctl_regs :: dis_sys_cdr_lock :: dis_sys_cdr_lock_status [09:00] */
#define CTL_REGS_DIS_SYS_CDR_LOCK_DIS_SYS_CDR_LOCK_STATUS_MASK     0x03ff
#define CTL_REGS_DIS_SYS_CDR_LOCK_DIS_SYS_CDR_LOCK_STATUS_ALIGN    0
#define CTL_REGS_DIS_SYS_CDR_LOCK_DIS_SYS_CDR_LOCK_STATUS_BITS     10
#define CTL_REGS_DIS_SYS_CDR_LOCK_DIS_SYS_CDR_LOCK_STATUS_SHIFT    0


/****************************************************************************
 * ctl_regs :: dis_sys_sigdet
 ***************************************************************************/
/* ctl_regs :: dis_sys_sigdet :: reserved0 [15:10] */
#define CTL_REGS_DIS_SYS_SIGDET_RESERVED0_MASK                     0xfc00
#define CTL_REGS_DIS_SYS_SIGDET_RESERVED0_ALIGN                    0
#define CTL_REGS_DIS_SYS_SIGDET_RESERVED0_BITS                     6
#define CTL_REGS_DIS_SYS_SIGDET_RESERVED0_SHIFT                    10

/* ctl_regs :: dis_sys_sigdet :: dis_sys_sigdet_status [09:00] */
#define CTL_REGS_DIS_SYS_SIGDET_DIS_SYS_SIGDET_STATUS_MASK         0x03ff
#define CTL_REGS_DIS_SYS_SIGDET_DIS_SYS_SIGDET_STATUS_ALIGN        0
#define CTL_REGS_DIS_SYS_SIGDET_DIS_SYS_SIGDET_STATUS_BITS         10
#define CTL_REGS_DIS_SYS_SIGDET_DIS_SYS_SIGDET_STATUS_SHIFT        0


/****************************************************************************
 * ctl_regs :: dis_line_cdr_lock
 ***************************************************************************/
/* ctl_regs :: dis_line_cdr_lock :: reserved0 [15:10] */
#define CTL_REGS_DIS_LINE_CDR_LOCK_RESERVED0_MASK                  0xfc00
#define CTL_REGS_DIS_LINE_CDR_LOCK_RESERVED0_ALIGN                 0
#define CTL_REGS_DIS_LINE_CDR_LOCK_RESERVED0_BITS                  6
#define CTL_REGS_DIS_LINE_CDR_LOCK_RESERVED0_SHIFT                 10

/* ctl_regs :: dis_line_cdr_lock :: dis_line_cdr_lock_status [09:00] */
#define CTL_REGS_DIS_LINE_CDR_LOCK_DIS_LINE_CDR_LOCK_STATUS_MASK   0x03ff
#define CTL_REGS_DIS_LINE_CDR_LOCK_DIS_LINE_CDR_LOCK_STATUS_ALIGN  0
#define CTL_REGS_DIS_LINE_CDR_LOCK_DIS_LINE_CDR_LOCK_STATUS_BITS   10
#define CTL_REGS_DIS_LINE_CDR_LOCK_DIS_LINE_CDR_LOCK_STATUS_SHIFT  0


/****************************************************************************
 * ctl_regs :: dis_line_sigdet
 ***************************************************************************/
/* ctl_regs :: dis_line_sigdet :: reserved0 [15:10] */
#define CTL_REGS_DIS_LINE_SIGDET_RESERVED0_MASK                    0xfc00
#define CTL_REGS_DIS_LINE_SIGDET_RESERVED0_ALIGN                   0
#define CTL_REGS_DIS_LINE_SIGDET_RESERVED0_BITS                    6
#define CTL_REGS_DIS_LINE_SIGDET_RESERVED0_SHIFT                   10

/* ctl_regs :: dis_line_sigdet :: dis_line_sigdet_status [09:00] */
#define CTL_REGS_DIS_LINE_SIGDET_DIS_LINE_SIGDET_STATUS_MASK       0x03ff
#define CTL_REGS_DIS_LINE_SIGDET_DIS_LINE_SIGDET_STATUS_ALIGN      0
#define CTL_REGS_DIS_LINE_SIGDET_DIS_LINE_SIGDET_STATUS_BITS       10
#define CTL_REGS_DIS_LINE_SIGDET_DIS_LINE_SIGDET_STATUS_SHIFT      0


/****************************************************************************
 * ctl_regs :: status_mux_ctrl
 ***************************************************************************/
/* ctl_regs :: status_mux_ctrl :: reserved0 [15:03] */
#define CTL_REGS_STATUS_MUX_CTRL_RESERVED0_MASK                    0xfff8
#define CTL_REGS_STATUS_MUX_CTRL_RESERVED0_ALIGN                   0
#define CTL_REGS_STATUS_MUX_CTRL_RESERVED0_BITS                    13
#define CTL_REGS_STATUS_MUX_CTRL_RESERVED0_SHIFT                   3

/* ctl_regs :: status_mux_ctrl :: status_mux_sel [02:01] */
#define CTL_REGS_STATUS_MUX_CTRL_STATUS_MUX_SEL_MASK               0x0006
#define CTL_REGS_STATUS_MUX_CTRL_STATUS_MUX_SEL_ALIGN              0
#define CTL_REGS_STATUS_MUX_CTRL_STATUS_MUX_SEL_BITS               2
#define CTL_REGS_STATUS_MUX_CTRL_STATUS_MUX_SEL_SHIFT              1

/* ctl_regs :: status_mux_ctrl :: status_mux_en [00:00] */
#define CTL_REGS_STATUS_MUX_CTRL_STATUS_MUX_EN_MASK                0x0001
#define CTL_REGS_STATUS_MUX_CTRL_STATUS_MUX_EN_ALIGN               0
#define CTL_REGS_STATUS_MUX_CTRL_STATUS_MUX_EN_BITS                1
#define CTL_REGS_STATUS_MUX_CTRL_STATUS_MUX_EN_SHIFT               0


/****************************************************************************
 * ctl_regs :: seisr
 ***************************************************************************/
/* ctl_regs :: seisr :: reserved0 [15:06] */
#define CTL_REGS_SEISR_RESERVED0_MASK                              0xffc0
#define CTL_REGS_SEISR_RESERVED0_ALIGN                             0
#define CTL_REGS_SEISR_RESERVED0_BITS                              10
#define CTL_REGS_SEISR_RESERVED0_SHIFT                             6

/* ctl_regs :: seisr :: found_sys_sigdet [05:05] */
#define CTL_REGS_SEISR_FOUND_SYS_SIGDET_MASK                       0x0020
#define CTL_REGS_SEISR_FOUND_SYS_SIGDET_ALIGN                      0
#define CTL_REGS_SEISR_FOUND_SYS_SIGDET_BITS                       1
#define CTL_REGS_SEISR_FOUND_SYS_SIGDET_SHIFT                      5

/* ctl_regs :: seisr :: lost_sys_sigdet [04:04] */
#define CTL_REGS_SEISR_LOST_SYS_SIGDET_MASK                        0x0010
#define CTL_REGS_SEISR_LOST_SYS_SIGDET_ALIGN                       0
#define CTL_REGS_SEISR_LOST_SYS_SIGDET_BITS                        1
#define CTL_REGS_SEISR_LOST_SYS_SIGDET_SHIFT                       4

/* ctl_regs :: seisr :: found_sys_pll_lock [03:03] */
#define CTL_REGS_SEISR_FOUND_SYS_PLL_LOCK_MASK                     0x0008
#define CTL_REGS_SEISR_FOUND_SYS_PLL_LOCK_ALIGN                    0
#define CTL_REGS_SEISR_FOUND_SYS_PLL_LOCK_BITS                     1
#define CTL_REGS_SEISR_FOUND_SYS_PLL_LOCK_SHIFT                    3

/* ctl_regs :: seisr :: lost_sys_pll_lock [02:02] */
#define CTL_REGS_SEISR_LOST_SYS_PLL_LOCK_MASK                      0x0004
#define CTL_REGS_SEISR_LOST_SYS_PLL_LOCK_ALIGN                     0
#define CTL_REGS_SEISR_LOST_SYS_PLL_LOCK_BITS                      1
#define CTL_REGS_SEISR_LOST_SYS_PLL_LOCK_SHIFT                     2

/* ctl_regs :: seisr :: found_sys_cdr_lock [01:01] */
#define CTL_REGS_SEISR_FOUND_SYS_CDR_LOCK_MASK                     0x0002
#define CTL_REGS_SEISR_FOUND_SYS_CDR_LOCK_ALIGN                    0
#define CTL_REGS_SEISR_FOUND_SYS_CDR_LOCK_BITS                     1
#define CTL_REGS_SEISR_FOUND_SYS_CDR_LOCK_SHIFT                    1

/* ctl_regs :: seisr :: lost_sys_cdr_lock [00:00] */
#define CTL_REGS_SEISR_LOST_SYS_CDR_LOCK_MASK                      0x0001
#define CTL_REGS_SEISR_LOST_SYS_CDR_LOCK_ALIGN                     0
#define CTL_REGS_SEISR_LOST_SYS_CDR_LOCK_BITS                      1
#define CTL_REGS_SEISR_LOST_SYS_CDR_LOCK_SHIFT                     0


/****************************************************************************
 * ctl_regs :: seimr
 ***************************************************************************/
/* ctl_regs :: seimr :: reserved0 [15:06] */
#define CTL_REGS_SEIMR_RESERVED0_MASK                              0xffc0
#define CTL_REGS_SEIMR_RESERVED0_ALIGN                             0
#define CTL_REGS_SEIMR_RESERVED0_BITS                              10
#define CTL_REGS_SEIMR_RESERVED0_SHIFT                             6

/* ctl_regs :: seimr :: mask_found_sys_sigdet [05:05] */
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_SIGDET_MASK                  0x0020
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_SIGDET_ALIGN                 0
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_SIGDET_BITS                  1
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_SIGDET_SHIFT                 5

/* ctl_regs :: seimr :: mask_lost_sys_sigdet [04:04] */
#define CTL_REGS_SEIMR_MASK_LOST_SYS_SIGDET_MASK                   0x0010
#define CTL_REGS_SEIMR_MASK_LOST_SYS_SIGDET_ALIGN                  0
#define CTL_REGS_SEIMR_MASK_LOST_SYS_SIGDET_BITS                   1
#define CTL_REGS_SEIMR_MASK_LOST_SYS_SIGDET_SHIFT                  4

/* ctl_regs :: seimr :: mask_found_sys_pll_lock [03:03] */
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_PLL_LOCK_MASK                0x0008
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_PLL_LOCK_ALIGN               0
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_PLL_LOCK_BITS                1
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_PLL_LOCK_SHIFT               3

/* ctl_regs :: seimr :: mask_lost_sys_pll_lock [02:02] */
#define CTL_REGS_SEIMR_MASK_LOST_SYS_PLL_LOCK_MASK                 0x0004
#define CTL_REGS_SEIMR_MASK_LOST_SYS_PLL_LOCK_ALIGN                0
#define CTL_REGS_SEIMR_MASK_LOST_SYS_PLL_LOCK_BITS                 1
#define CTL_REGS_SEIMR_MASK_LOST_SYS_PLL_LOCK_SHIFT                2

/* ctl_regs :: seimr :: mask_found_sys_cdr_lock [01:01] */
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_CDR_LOCK_MASK                0x0002
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_CDR_LOCK_ALIGN               0
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_CDR_LOCK_BITS                1
#define CTL_REGS_SEIMR_MASK_FOUND_SYS_CDR_LOCK_SHIFT               1

/* ctl_regs :: seimr :: mask_lost_sys_cdr_lock [00:00] */
#define CTL_REGS_SEIMR_MASK_LOST_SYS_CDR_LOCK_MASK                 0x0001
#define CTL_REGS_SEIMR_MASK_LOST_SYS_CDR_LOCK_ALIGN                0
#define CTL_REGS_SEIMR_MASK_LOST_SYS_CDR_LOCK_BITS                 1
#define CTL_REGS_SEIMR_MASK_LOST_SYS_CDR_LOCK_SHIFT                0


/****************************************************************************
 * ctl_regs :: seipr
 ***************************************************************************/
/* ctl_regs :: seipr :: reserved0 [15:06] */
#define CTL_REGS_SEIPR_RESERVED0_MASK                              0xffc0
#define CTL_REGS_SEIPR_RESERVED0_ALIGN                             0
#define CTL_REGS_SEIPR_RESERVED0_BITS                              10
#define CTL_REGS_SEIPR_RESERVED0_SHIFT                             6

/* ctl_regs :: seipr :: p_found_sys_sigdet [05:05] */
#define CTL_REGS_SEIPR_P_FOUND_SYS_SIGDET_MASK                     0x0020
#define CTL_REGS_SEIPR_P_FOUND_SYS_SIGDET_ALIGN                    0
#define CTL_REGS_SEIPR_P_FOUND_SYS_SIGDET_BITS                     1
#define CTL_REGS_SEIPR_P_FOUND_SYS_SIGDET_SHIFT                    5

/* ctl_regs :: seipr :: p_lost_sys_sigdet [04:04] */
#define CTL_REGS_SEIPR_P_LOST_SYS_SIGDET_MASK                      0x0010
#define CTL_REGS_SEIPR_P_LOST_SYS_SIGDET_ALIGN                     0
#define CTL_REGS_SEIPR_P_LOST_SYS_SIGDET_BITS                      1
#define CTL_REGS_SEIPR_P_LOST_SYS_SIGDET_SHIFT                     4

/* ctl_regs :: seipr :: p_found_sys_pll_lock [03:03] */
#define CTL_REGS_SEIPR_P_FOUND_SYS_PLL_LOCK_MASK                   0x0008
#define CTL_REGS_SEIPR_P_FOUND_SYS_PLL_LOCK_ALIGN                  0
#define CTL_REGS_SEIPR_P_FOUND_SYS_PLL_LOCK_BITS                   1
#define CTL_REGS_SEIPR_P_FOUND_SYS_PLL_LOCK_SHIFT                  3

/* ctl_regs :: seipr :: p_lost_sys_pll_lock [02:02] */
#define CTL_REGS_SEIPR_P_LOST_SYS_PLL_LOCK_MASK                    0x0004
#define CTL_REGS_SEIPR_P_LOST_SYS_PLL_LOCK_ALIGN                   0
#define CTL_REGS_SEIPR_P_LOST_SYS_PLL_LOCK_BITS                    1
#define CTL_REGS_SEIPR_P_LOST_SYS_PLL_LOCK_SHIFT                   2

/* ctl_regs :: seipr :: p_found_sys_cdr_lock [01:01] */
#define CTL_REGS_SEIPR_P_FOUND_SYS_CDR_LOCK_MASK                   0x0002
#define CTL_REGS_SEIPR_P_FOUND_SYS_CDR_LOCK_ALIGN                  0
#define CTL_REGS_SEIPR_P_FOUND_SYS_CDR_LOCK_BITS                   1
#define CTL_REGS_SEIPR_P_FOUND_SYS_CDR_LOCK_SHIFT                  1

/* ctl_regs :: seipr :: p_lost_sys_cdr_lock [00:00] */
#define CTL_REGS_SEIPR_P_LOST_SYS_CDR_LOCK_MASK                    0x0001
#define CTL_REGS_SEIPR_P_LOST_SYS_CDR_LOCK_ALIGN                   0
#define CTL_REGS_SEIPR_P_LOST_SYS_CDR_LOCK_BITS                    1
#define CTL_REGS_SEIPR_P_LOST_SYS_CDR_LOCK_SHIFT                   0


/****************************************************************************
 * ctl_regs :: leisr
 ***************************************************************************/
/* ctl_regs :: leisr :: reserved0 [15:08] */
#define CTL_REGS_LEISR_RESERVED0_MASK                              0xff00
#define CTL_REGS_LEISR_RESERVED0_ALIGN                             0
#define CTL_REGS_LEISR_RESERVED0_BITS                              8
#define CTL_REGS_LEISR_RESERVED0_SHIFT                             8

/* ctl_regs :: leisr :: found_line_sigdet [07:07] */
#define CTL_REGS_LEISR_FOUND_LINE_SIGDET_MASK                      0x0080
#define CTL_REGS_LEISR_FOUND_LINE_SIGDET_ALIGN                     0
#define CTL_REGS_LEISR_FOUND_LINE_SIGDET_BITS                      1
#define CTL_REGS_LEISR_FOUND_LINE_SIGDET_SHIFT                     7

/* ctl_regs :: leisr :: lost_line_sigdet [06:06] */
#define CTL_REGS_LEISR_LOST_LINE_SIGDET_MASK                       0x0040
#define CTL_REGS_LEISR_LOST_LINE_SIGDET_ALIGN                      0
#define CTL_REGS_LEISR_LOST_LINE_SIGDET_BITS                       1
#define CTL_REGS_LEISR_LOST_LINE_SIGDET_SHIFT                      6

/* ctl_regs :: leisr :: found_line_rx_pll_lock [05:05] */
#define CTL_REGS_LEISR_FOUND_LINE_RX_PLL_LOCK_MASK                 0x0020
#define CTL_REGS_LEISR_FOUND_LINE_RX_PLL_LOCK_ALIGN                0
#define CTL_REGS_LEISR_FOUND_LINE_RX_PLL_LOCK_BITS                 1
#define CTL_REGS_LEISR_FOUND_LINE_RX_PLL_LOCK_SHIFT                5

/* ctl_regs :: leisr :: lost_line_rx_pll_lock [04:04] */
#define CTL_REGS_LEISR_LOST_LINE_RX_PLL_LOCK_MASK                  0x0010
#define CTL_REGS_LEISR_LOST_LINE_RX_PLL_LOCK_ALIGN                 0
#define CTL_REGS_LEISR_LOST_LINE_RX_PLL_LOCK_BITS                  1
#define CTL_REGS_LEISR_LOST_LINE_RX_PLL_LOCK_SHIFT                 4

/* ctl_regs :: leisr :: found_line_tx_pll_lock [03:03] */
#define CTL_REGS_LEISR_FOUND_LINE_TX_PLL_LOCK_MASK                 0x0008
#define CTL_REGS_LEISR_FOUND_LINE_TX_PLL_LOCK_ALIGN                0
#define CTL_REGS_LEISR_FOUND_LINE_TX_PLL_LOCK_BITS                 1
#define CTL_REGS_LEISR_FOUND_LINE_TX_PLL_LOCK_SHIFT                3

/* ctl_regs :: leisr :: lost_line_tx_pll_lock [02:02] */
#define CTL_REGS_LEISR_LOST_LINE_TX_PLL_LOCK_MASK                  0x0004
#define CTL_REGS_LEISR_LOST_LINE_TX_PLL_LOCK_ALIGN                 0
#define CTL_REGS_LEISR_LOST_LINE_TX_PLL_LOCK_BITS                  1
#define CTL_REGS_LEISR_LOST_LINE_TX_PLL_LOCK_SHIFT                 2

/* ctl_regs :: leisr :: found_line_cdr_lock [01:01] */
#define CTL_REGS_LEISR_FOUND_LINE_CDR_LOCK_MASK                    0x0002
#define CTL_REGS_LEISR_FOUND_LINE_CDR_LOCK_ALIGN                   0
#define CTL_REGS_LEISR_FOUND_LINE_CDR_LOCK_BITS                    1
#define CTL_REGS_LEISR_FOUND_LINE_CDR_LOCK_SHIFT                   1

/* ctl_regs :: leisr :: lost_line_cdr_lock [00:00] */
#define CTL_REGS_LEISR_LOST_LINE_CDR_LOCK_MASK                     0x0001
#define CTL_REGS_LEISR_LOST_LINE_CDR_LOCK_ALIGN                    0
#define CTL_REGS_LEISR_LOST_LINE_CDR_LOCK_BITS                     1
#define CTL_REGS_LEISR_LOST_LINE_CDR_LOCK_SHIFT                    0


/****************************************************************************
 * ctl_regs :: leimr
 ***************************************************************************/
/* ctl_regs :: leimr :: reserved0 [15:08] */
#define CTL_REGS_LEIMR_RESERVED0_MASK                              0xff00
#define CTL_REGS_LEIMR_RESERVED0_ALIGN                             0
#define CTL_REGS_LEIMR_RESERVED0_BITS                              8
#define CTL_REGS_LEIMR_RESERVED0_SHIFT                             8

/* ctl_regs :: leimr :: mask_found_line_sigdet [07:07] */
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_SIGDET_MASK                 0x0080
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_SIGDET_ALIGN                0
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_SIGDET_BITS                 1
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_SIGDET_SHIFT                7

/* ctl_regs :: leimr :: mask_lost_line_sigdet [06:06] */
#define CTL_REGS_LEIMR_MASK_LOST_LINE_SIGDET_MASK                  0x0040
#define CTL_REGS_LEIMR_MASK_LOST_LINE_SIGDET_ALIGN                 0
#define CTL_REGS_LEIMR_MASK_LOST_LINE_SIGDET_BITS                  1
#define CTL_REGS_LEIMR_MASK_LOST_LINE_SIGDET_SHIFT                 6

/* ctl_regs :: leimr :: mask_found_line_rx_pll_lock [05:05] */
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_RX_PLL_LOCK_MASK            0x0020
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_RX_PLL_LOCK_ALIGN           0
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_RX_PLL_LOCK_BITS            1
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_RX_PLL_LOCK_SHIFT           5

/* ctl_regs :: leimr :: mask_lost_line_rx_pll_lock [04:04] */
#define CTL_REGS_LEIMR_MASK_LOST_LINE_RX_PLL_LOCK_MASK             0x0010
#define CTL_REGS_LEIMR_MASK_LOST_LINE_RX_PLL_LOCK_ALIGN            0
#define CTL_REGS_LEIMR_MASK_LOST_LINE_RX_PLL_LOCK_BITS             1
#define CTL_REGS_LEIMR_MASK_LOST_LINE_RX_PLL_LOCK_SHIFT            4

/* ctl_regs :: leimr :: mask_found_line_tx_pll_lock [03:03] */
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_TX_PLL_LOCK_MASK            0x0008
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_TX_PLL_LOCK_ALIGN           0
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_TX_PLL_LOCK_BITS            1
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_TX_PLL_LOCK_SHIFT           3

/* ctl_regs :: leimr :: mask_lost_line_tx_pll_lock [02:02] */
#define CTL_REGS_LEIMR_MASK_LOST_LINE_TX_PLL_LOCK_MASK             0x0004
#define CTL_REGS_LEIMR_MASK_LOST_LINE_TX_PLL_LOCK_ALIGN            0
#define CTL_REGS_LEIMR_MASK_LOST_LINE_TX_PLL_LOCK_BITS             1
#define CTL_REGS_LEIMR_MASK_LOST_LINE_TX_PLL_LOCK_SHIFT            2

/* ctl_regs :: leimr :: mask_found_line_cdr_lock [01:01] */
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_CDR_LOCK_MASK               0x0002
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_CDR_LOCK_ALIGN              0
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_CDR_LOCK_BITS               1
#define CTL_REGS_LEIMR_MASK_FOUND_LINE_CDR_LOCK_SHIFT              1

/* ctl_regs :: leimr :: mask_lost_line_cdr_lock [00:00] */
#define CTL_REGS_LEIMR_MASK_LOST_LINE_CDR_LOCK_MASK                0x0001
#define CTL_REGS_LEIMR_MASK_LOST_LINE_CDR_LOCK_ALIGN               0
#define CTL_REGS_LEIMR_MASK_LOST_LINE_CDR_LOCK_BITS                1
#define CTL_REGS_LEIMR_MASK_LOST_LINE_CDR_LOCK_SHIFT               0


/****************************************************************************
 * ctl_regs :: leipr
 ***************************************************************************/
/* ctl_regs :: leipr :: reserved0 [15:08] */
#define CTL_REGS_LEIPR_RESERVED0_MASK                              0xff00
#define CTL_REGS_LEIPR_RESERVED0_ALIGN                             0
#define CTL_REGS_LEIPR_RESERVED0_BITS                              8
#define CTL_REGS_LEIPR_RESERVED0_SHIFT                             8

/* ctl_regs :: leipr :: p_found_line_sigdet [07:07] */
#define CTL_REGS_LEIPR_P_FOUND_LINE_SIGDET_MASK                    0x0080
#define CTL_REGS_LEIPR_P_FOUND_LINE_SIGDET_ALIGN                   0
#define CTL_REGS_LEIPR_P_FOUND_LINE_SIGDET_BITS                    1
#define CTL_REGS_LEIPR_P_FOUND_LINE_SIGDET_SHIFT                   7

/* ctl_regs :: leipr :: p_lost_line_sigdet [06:06] */
#define CTL_REGS_LEIPR_P_LOST_LINE_SIGDET_MASK                     0x0040
#define CTL_REGS_LEIPR_P_LOST_LINE_SIGDET_ALIGN                    0
#define CTL_REGS_LEIPR_P_LOST_LINE_SIGDET_BITS                     1
#define CTL_REGS_LEIPR_P_LOST_LINE_SIGDET_SHIFT                    6

/* ctl_regs :: leipr :: p_found_line_rx_pll_lock [05:05] */
#define CTL_REGS_LEIPR_P_FOUND_LINE_RX_PLL_LOCK_MASK               0x0020
#define CTL_REGS_LEIPR_P_FOUND_LINE_RX_PLL_LOCK_ALIGN              0
#define CTL_REGS_LEIPR_P_FOUND_LINE_RX_PLL_LOCK_BITS               1
#define CTL_REGS_LEIPR_P_FOUND_LINE_RX_PLL_LOCK_SHIFT              5

/* ctl_regs :: leipr :: p_lost_line_rx_pll_lock [04:04] */
#define CTL_REGS_LEIPR_P_LOST_LINE_RX_PLL_LOCK_MASK                0x0010
#define CTL_REGS_LEIPR_P_LOST_LINE_RX_PLL_LOCK_ALIGN               0
#define CTL_REGS_LEIPR_P_LOST_LINE_RX_PLL_LOCK_BITS                1
#define CTL_REGS_LEIPR_P_LOST_LINE_RX_PLL_LOCK_SHIFT               4

/* ctl_regs :: leipr :: p_found_line_tx_pll_lock [03:03] */
#define CTL_REGS_LEIPR_P_FOUND_LINE_TX_PLL_LOCK_MASK               0x0008
#define CTL_REGS_LEIPR_P_FOUND_LINE_TX_PLL_LOCK_ALIGN              0
#define CTL_REGS_LEIPR_P_FOUND_LINE_TX_PLL_LOCK_BITS               1
#define CTL_REGS_LEIPR_P_FOUND_LINE_TX_PLL_LOCK_SHIFT              3

/* ctl_regs :: leipr :: p_lost_line_tx_pll_lock [02:02] */
#define CTL_REGS_LEIPR_P_LOST_LINE_TX_PLL_LOCK_MASK                0x0004
#define CTL_REGS_LEIPR_P_LOST_LINE_TX_PLL_LOCK_ALIGN               0
#define CTL_REGS_LEIPR_P_LOST_LINE_TX_PLL_LOCK_BITS                1
#define CTL_REGS_LEIPR_P_LOST_LINE_TX_PLL_LOCK_SHIFT               2

/* ctl_regs :: leipr :: p_found_line_cdr_lock [01:01] */
#define CTL_REGS_LEIPR_P_FOUND_LINE_CDR_LOCK_MASK                  0x0002
#define CTL_REGS_LEIPR_P_FOUND_LINE_CDR_LOCK_ALIGN                 0
#define CTL_REGS_LEIPR_P_FOUND_LINE_CDR_LOCK_BITS                  1
#define CTL_REGS_LEIPR_P_FOUND_LINE_CDR_LOCK_SHIFT                 1

/* ctl_regs :: leipr :: p_lost_line_cdr_lock [00:00] */
#define CTL_REGS_LEIPR_P_LOST_LINE_CDR_LOCK_MASK                   0x0001
#define CTL_REGS_LEIPR_P_LOST_LINE_CDR_LOCK_ALIGN                  0
#define CTL_REGS_LEIPR_P_LOST_LINE_CDR_LOCK_BITS                   1
#define CTL_REGS_LEIPR_P_LOST_LINE_CDR_LOCK_SHIFT                  0


/****************************************************************************
 * ctl_regs :: susm_cm_ctrl1
 ***************************************************************************/
/* ctl_regs :: susm_cm_ctrl1 :: reserved0 [15:15] */
#define CTL_REGS_SUSM_CM_CTRL1_RESERVED0_MASK                      0x8000
#define CTL_REGS_SUSM_CM_CTRL1_RESERVED0_ALIGN                     0
#define CTL_REGS_SUSM_CM_CTRL1_RESERVED0_BITS                      1
#define CTL_REGS_SUSM_CM_CTRL1_RESERVED0_SHIFT                     15

/* ctl_regs :: susm_cm_ctrl1 :: susm_rescal_frc [14:14] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_RESCAL_FRC_MASK                0x4000
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_RESCAL_FRC_ALIGN               0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_RESCAL_FRC_BITS                1
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_RESCAL_FRC_SHIFT               14

/* ctl_regs :: susm_cm_ctrl1 :: susm_rescal_frcval [13:13] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_RESCAL_FRCVAL_MASK             0x2000
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_RESCAL_FRCVAL_ALIGN            0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_RESCAL_FRCVAL_BITS             1
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_RESCAL_FRCVAL_SHIFT            13

/* ctl_regs :: susm_cm_ctrl1 :: susm_afe_pll_mode_frc [12:12] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_PLL_MODE_FRC_MASK          0x1000
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_PLL_MODE_FRC_ALIGN         0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_PLL_MODE_FRC_BITS          1
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_PLL_MODE_FRC_SHIFT         12

/* ctl_regs :: susm_cm_ctrl1 :: susm_afe_pll_mode_frcval [11:10] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_PLL_MODE_FRCVAL_MASK       0x0c00
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_PLL_MODE_FRCVAL_ALIGN      0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_PLL_MODE_FRCVAL_BITS       2
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_PLL_MODE_FRCVAL_SHIFT      10

/* ctl_regs :: susm_cm_ctrl1 :: susm_afe_ref_mode_frc [09:09] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_REF_MODE_FRC_MASK          0x0200
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_REF_MODE_FRC_ALIGN         0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_REF_MODE_FRC_BITS          1
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_REF_MODE_FRC_SHIFT         9

/* ctl_regs :: susm_cm_ctrl1 :: susm_afe_ref_mode_frcval [08:07] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_REF_MODE_FRCVAL_MASK       0x0180
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_REF_MODE_FRCVAL_ALIGN      0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_REF_MODE_FRCVAL_BITS       2
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_AFE_REF_MODE_FRCVAL_SHIFT      7

/* ctl_regs :: susm_cm_ctrl1 :: susm_tca_en_frc [06:06] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_TCA_EN_FRC_MASK                0x0040
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_TCA_EN_FRC_ALIGN               0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_TCA_EN_FRC_BITS                1
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_TCA_EN_FRC_SHIFT               6

/* ctl_regs :: susm_cm_ctrl1 :: susm_tca_en_frcval [05:05] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_TCA_EN_FRCVAL_MASK             0x0020
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_TCA_EN_FRCVAL_ALIGN            0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_TCA_EN_FRCVAL_BITS             1
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_TCA_EN_FRCVAL_SHIFT            5

/* ctl_regs :: susm_cm_ctrl1 :: susm_cm_modesel_trigger_frc [04:04] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_MODESEL_TRIGGER_FRC_MASK    0x0010
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_MODESEL_TRIGGER_FRC_ALIGN   0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_MODESEL_TRIGGER_FRC_BITS    1
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_MODESEL_TRIGGER_FRC_SHIFT   4

/* ctl_regs :: susm_cm_ctrl1 :: susm_cm_modesel_trigger_frcval [03:03] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_MODESEL_TRIGGER_FRCVAL_MASK 0x0008
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_MODESEL_TRIGGER_FRCVAL_ALIGN 0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_MODESEL_TRIGGER_FRCVAL_BITS 1
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_MODESEL_TRIGGER_FRCVAL_SHIFT 3

/* ctl_regs :: susm_cm_ctrl1 :: susm_cm_trigger_frc [02:02] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_TRIGGER_FRC_MASK            0x0004
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_TRIGGER_FRC_ALIGN           0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_TRIGGER_FRC_BITS            1
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_TRIGGER_FRC_SHIFT           2

/* ctl_regs :: susm_cm_ctrl1 :: susm_cm_trigger_frcval [01:01] */
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_TRIGGER_FRCVAL_MASK         0x0002
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_TRIGGER_FRCVAL_ALIGN        0
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_TRIGGER_FRCVAL_BITS         1
#define CTL_REGS_SUSM_CM_CTRL1_SUSM_CM_TRIGGER_FRCVAL_SHIFT        1

/* ctl_regs :: susm_cm_ctrl1 :: dis_susm_cm [00:00] */
#define CTL_REGS_SUSM_CM_CTRL1_DIS_SUSM_CM_MASK                    0x0001
#define CTL_REGS_SUSM_CM_CTRL1_DIS_SUSM_CM_ALIGN                   0
#define CTL_REGS_SUSM_CM_CTRL1_DIS_SUSM_CM_BITS                    1
#define CTL_REGS_SUSM_CM_CTRL1_DIS_SUSM_CM_SHIFT                   0


/****************************************************************************
 * ctl_regs :: susm_ltx_ctrl1
 ***************************************************************************/
/* ctl_regs :: susm_ltx_ctrl1 :: reserved0 [15:12] */
#define CTL_REGS_SUSM_LTX_CTRL1_RESERVED0_MASK                     0xf000
#define CTL_REGS_SUSM_LTX_CTRL1_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_LTX_CTRL1_RESERVED0_BITS                     4
#define CTL_REGS_SUSM_LTX_CTRL1_RESERVED0_SHIFT                    12

/* ctl_regs :: susm_ltx_ctrl1 :: dis_hstx_pi_lock [11:11] */
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_HSTX_PI_LOCK_MASK              0x0800
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_HSTX_PI_LOCK_ALIGN             0
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_HSTX_PI_LOCK_BITS              1
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_HSTX_PI_LOCK_SHIFT             11

/* ctl_regs :: susm_ltx_ctrl1 :: dis_hc_tx_pi_lock [10:10] */
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_HC_TX_PI_LOCK_MASK             0x0400
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_HC_TX_PI_LOCK_ALIGN            0
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_HC_TX_PI_LOCK_BITS             1
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_HC_TX_PI_LOCK_SHIFT            10

/* ctl_regs :: susm_ltx_ctrl1 :: hc_tx_tca_start [09:09] */
#define CTL_REGS_SUSM_LTX_CTRL1_HC_TX_TCA_START_MASK               0x0200
#define CTL_REGS_SUSM_LTX_CTRL1_HC_TX_TCA_START_ALIGN              0
#define CTL_REGS_SUSM_LTX_CTRL1_HC_TX_TCA_START_BITS               1
#define CTL_REGS_SUSM_LTX_CTRL1_HC_TX_TCA_START_SHIFT              9

/* ctl_regs :: susm_ltx_ctrl1 :: hc_tx_tca_enable [08:08] */
#define CTL_REGS_SUSM_LTX_CTRL1_HC_TX_TCA_ENABLE_MASK              0x0100
#define CTL_REGS_SUSM_LTX_CTRL1_HC_TX_TCA_ENABLE_ALIGN             0
#define CTL_REGS_SUSM_LTX_CTRL1_HC_TX_TCA_ENABLE_BITS              1
#define CTL_REGS_SUSM_LTX_CTRL1_HC_TX_TCA_ENABLE_SHIFT             8

/* ctl_regs :: susm_ltx_ctrl1 :: restart_tca [07:07] */
#define CTL_REGS_SUSM_LTX_CTRL1_RESTART_TCA_MASK                   0x0080
#define CTL_REGS_SUSM_LTX_CTRL1_RESTART_TCA_ALIGN                  0
#define CTL_REGS_SUSM_LTX_CTRL1_RESTART_TCA_BITS                   1
#define CTL_REGS_SUSM_LTX_CTRL1_RESTART_TCA_SHIFT                  7

/* ctl_regs :: susm_ltx_ctrl1 :: ltx_tca_enable_frc [06:06] */
#define CTL_REGS_SUSM_LTX_CTRL1_LTX_TCA_ENABLE_FRC_MASK            0x0040
#define CTL_REGS_SUSM_LTX_CTRL1_LTX_TCA_ENABLE_FRC_ALIGN           0
#define CTL_REGS_SUSM_LTX_CTRL1_LTX_TCA_ENABLE_FRC_BITS            1
#define CTL_REGS_SUSM_LTX_CTRL1_LTX_TCA_ENABLE_FRC_SHIFT           6

/* ctl_regs :: susm_ltx_ctrl1 :: ltx_tca_enable_frcval [05:05] */
#define CTL_REGS_SUSM_LTX_CTRL1_LTX_TCA_ENABLE_FRCVAL_MASK         0x0020
#define CTL_REGS_SUSM_LTX_CTRL1_LTX_TCA_ENABLE_FRCVAL_ALIGN        0
#define CTL_REGS_SUSM_LTX_CTRL1_LTX_TCA_ENABLE_FRCVAL_BITS         1
#define CTL_REGS_SUSM_LTX_CTRL1_LTX_TCA_ENABLE_FRCVAL_SHIFT        5

/* ctl_regs :: susm_ltx_ctrl1 :: susm_ltx_tca_start_frc [04:04] */
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TCA_START_FRC_MASK        0x0010
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TCA_START_FRC_ALIGN       0
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TCA_START_FRC_BITS        1
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TCA_START_FRC_SHIFT       4

/* ctl_regs :: susm_ltx_ctrl1 :: susm_ltx_tca_start_frcval [03:03] */
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TCA_START_FRCVAL_MASK     0x0008
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TCA_START_FRCVAL_ALIGN    0
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TCA_START_FRCVAL_BITS     1
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TCA_START_FRCVAL_SHIFT    3

/* ctl_regs :: susm_ltx_ctrl1 :: susm_ltx_trigger_frc [02:02] */
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TRIGGER_FRC_MASK          0x0004
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TRIGGER_FRC_ALIGN         0
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TRIGGER_FRC_BITS          1
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TRIGGER_FRC_SHIFT         2

/* ctl_regs :: susm_ltx_ctrl1 :: susm_ltx_trigger_frcval [01:01] */
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TRIGGER_FRCVAL_MASK       0x0002
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TRIGGER_FRCVAL_ALIGN      0
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TRIGGER_FRCVAL_BITS       1
#define CTL_REGS_SUSM_LTX_CTRL1_SUSM_LTX_TRIGGER_FRCVAL_SHIFT      1

/* ctl_regs :: susm_ltx_ctrl1 :: dis_susm_ltx [00:00] */
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_SUSM_LTX_MASK                  0x0001
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_SUSM_LTX_ALIGN                 0
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_SUSM_LTX_BITS                  1
#define CTL_REGS_SUSM_LTX_CTRL1_DIS_SUSM_LTX_SHIFT                 0


/****************************************************************************
 * ctl_regs :: susm_ltx_ctrl2
 ***************************************************************************/
/* ctl_regs :: susm_ltx_ctrl2 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_LTX_CTRL2_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_LTX_CTRL2_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_LTX_CTRL2_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_LTX_CTRL2_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_ltx_ctrl2 :: susm_ltx_rdy_frc [09:00] */
#define CTL_REGS_SUSM_LTX_CTRL2_SUSM_LTX_RDY_FRC_MASK              0x03ff
#define CTL_REGS_SUSM_LTX_CTRL2_SUSM_LTX_RDY_FRC_ALIGN             0
#define CTL_REGS_SUSM_LTX_CTRL2_SUSM_LTX_RDY_FRC_BITS              10
#define CTL_REGS_SUSM_LTX_CTRL2_SUSM_LTX_RDY_FRC_SHIFT             0


/****************************************************************************
 * ctl_regs :: susm_ltx_ctrl3
 ***************************************************************************/
/* ctl_regs :: susm_ltx_ctrl3 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_LTX_CTRL3_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_LTX_CTRL3_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_LTX_CTRL3_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_LTX_CTRL3_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_ltx_ctrl3 :: susm_ltx_rdy_frcval [09:00] */
#define CTL_REGS_SUSM_LTX_CTRL3_SUSM_LTX_RDY_FRCVAL_MASK           0x03ff
#define CTL_REGS_SUSM_LTX_CTRL3_SUSM_LTX_RDY_FRCVAL_ALIGN          0
#define CTL_REGS_SUSM_LTX_CTRL3_SUSM_LTX_RDY_FRCVAL_BITS           10
#define CTL_REGS_SUSM_LTX_CTRL3_SUSM_LTX_RDY_FRCVAL_SHIFT          0


/****************************************************************************
 * ctl_regs :: susm_ltx_ctrl4
 ***************************************************************************/
/* ctl_regs :: susm_ltx_ctrl4 :: susm_tpc_clk_en_frc [15:12] */
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_CLK_EN_FRC_MASK           0xf000
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_CLK_EN_FRC_ALIGN          0
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_CLK_EN_FRC_BITS           4
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_CLK_EN_FRC_SHIFT          12

/* ctl_regs :: susm_ltx_ctrl4 :: susm_tpc_clk_en_frcval [11:08] */
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_CLK_EN_FRCVAL_MASK        0x0f00
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_CLK_EN_FRCVAL_ALIGN       0
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_CLK_EN_FRCVAL_BITS        4
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_CLK_EN_FRCVAL_SHIFT       8

/* ctl_regs :: susm_ltx_ctrl4 :: susm_tpc_sel_tca_frc [07:04] */
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_SEL_TCA_FRC_MASK          0x00f0
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_SEL_TCA_FRC_ALIGN         0
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_SEL_TCA_FRC_BITS          4
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_SEL_TCA_FRC_SHIFT         4

/* ctl_regs :: susm_ltx_ctrl4 :: susm_tpc_sel_tca_frcval [03:00] */
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_SEL_TCA_FRCVAL_MASK       0x000f
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_SEL_TCA_FRCVAL_ALIGN      0
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_SEL_TCA_FRCVAL_BITS       4
#define CTL_REGS_SUSM_LTX_CTRL4_SUSM_TPC_SEL_TCA_FRCVAL_SHIFT      0


/****************************************************************************
 * ctl_regs :: susm_ltx_ctrl5
 ***************************************************************************/
/* ctl_regs :: susm_ltx_ctrl5 :: reserved0 [15:06] */
#define CTL_REGS_SUSM_LTX_CTRL5_RESERVED0_MASK                     0xffc0
#define CTL_REGS_SUSM_LTX_CTRL5_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_LTX_CTRL5_RESERVED0_BITS                     10
#define CTL_REGS_SUSM_LTX_CTRL5_RESERVED0_SHIFT                    6

/* ctl_regs :: susm_ltx_ctrl5 :: hc_tx_pictrl_sel_tjf [05:00] */
#define CTL_REGS_SUSM_LTX_CTRL5_HC_TX_PICTRL_SEL_TJF_MASK          0x003f
#define CTL_REGS_SUSM_LTX_CTRL5_HC_TX_PICTRL_SEL_TJF_ALIGN         0
#define CTL_REGS_SUSM_LTX_CTRL5_HC_TX_PICTRL_SEL_TJF_BITS          6
#define CTL_REGS_SUSM_LTX_CTRL5_HC_TX_PICTRL_SEL_TJF_SHIFT         0


/****************************************************************************
 * ctl_regs :: susm_ltx_ctrl6
 ***************************************************************************/
/* ctl_regs :: susm_ltx_ctrl6 :: reserved0 [15:06] */
#define CTL_REGS_SUSM_LTX_CTRL6_RESERVED0_MASK                     0xffc0
#define CTL_REGS_SUSM_LTX_CTRL6_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_LTX_CTRL6_RESERVED0_BITS                     10
#define CTL_REGS_SUSM_LTX_CTRL6_RESERVED0_SHIFT                    6

/* ctl_regs :: susm_ltx_ctrl6 :: hc_tx_ra_soft_reset_frcval [05:00] */
#define CTL_REGS_SUSM_LTX_CTRL6_HC_TX_RA_SOFT_RESET_FRCVAL_MASK    0x003f
#define CTL_REGS_SUSM_LTX_CTRL6_HC_TX_RA_SOFT_RESET_FRCVAL_ALIGN   0
#define CTL_REGS_SUSM_LTX_CTRL6_HC_TX_RA_SOFT_RESET_FRCVAL_BITS    6
#define CTL_REGS_SUSM_LTX_CTRL6_HC_TX_RA_SOFT_RESET_FRCVAL_SHIFT   0


/****************************************************************************
 * ctl_regs :: susm_ltx_ctrl7
 ***************************************************************************/
/* ctl_regs :: susm_ltx_ctrl7 :: reserved0 [15:06] */
#define CTL_REGS_SUSM_LTX_CTRL7_RESERVED0_MASK                     0xffc0
#define CTL_REGS_SUSM_LTX_CTRL7_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_LTX_CTRL7_RESERVED0_BITS                     10
#define CTL_REGS_SUSM_LTX_CTRL7_RESERVED0_SHIFT                    6

/* ctl_regs :: susm_ltx_ctrl7 :: hc_tx_ra_soft_reset_frc [05:00] */
#define CTL_REGS_SUSM_LTX_CTRL7_HC_TX_RA_SOFT_RESET_FRC_MASK       0x003f
#define CTL_REGS_SUSM_LTX_CTRL7_HC_TX_RA_SOFT_RESET_FRC_ALIGN      0
#define CTL_REGS_SUSM_LTX_CTRL7_HC_TX_RA_SOFT_RESET_FRC_BITS       6
#define CTL_REGS_SUSM_LTX_CTRL7_HC_TX_RA_SOFT_RESET_FRC_SHIFT      0


/****************************************************************************
 * ctl_regs :: susm_ltx_ctrl8
 ***************************************************************************/
/* ctl_regs :: susm_ltx_ctrl8 :: reserved0 [15:15] */
#define CTL_REGS_SUSM_LTX_CTRL8_RESERVED0_MASK                     0x8000
#define CTL_REGS_SUSM_LTX_CTRL8_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_LTX_CTRL8_RESERVED0_BITS                     1
#define CTL_REGS_SUSM_LTX_CTRL8_RESERVED0_SHIFT                    15

/* ctl_regs :: susm_ltx_ctrl8 :: hc_tx_pi_ln4_cnt [14:12] */
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN4_CNT_MASK              0x7000
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN4_CNT_ALIGN             0
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN4_CNT_BITS              3
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN4_CNT_SHIFT             12

/* ctl_regs :: susm_ltx_ctrl8 :: hc_tx_pi_ln3_cnt [11:09] */
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN3_CNT_MASK              0x0e00
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN3_CNT_ALIGN             0
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN3_CNT_BITS              3
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN3_CNT_SHIFT             9

/* ctl_regs :: susm_ltx_ctrl8 :: hc_tx_pi_ln2_cnt [08:06] */
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN2_CNT_MASK              0x01c0
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN2_CNT_ALIGN             0
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN2_CNT_BITS              3
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN2_CNT_SHIFT             6

/* ctl_regs :: susm_ltx_ctrl8 :: hc_tx_pi_ln1_cnt [05:03] */
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN1_CNT_MASK              0x0038
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN1_CNT_ALIGN             0
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN1_CNT_BITS              3
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN1_CNT_SHIFT             3

/* ctl_regs :: susm_ltx_ctrl8 :: hc_tx_pi_ln0_cnt [02:00] */
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN0_CNT_MASK              0x0007
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN0_CNT_ALIGN             0
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN0_CNT_BITS              3
#define CTL_REGS_SUSM_LTX_CTRL8_HC_TX_PI_LN0_CNT_SHIFT             0


/****************************************************************************
 * ctl_regs :: susm_ltx_ctrl9
 ***************************************************************************/
/* ctl_regs :: susm_ltx_ctrl9 :: reserved0 [15:15] */
#define CTL_REGS_SUSM_LTX_CTRL9_RESERVED0_MASK                     0x8000
#define CTL_REGS_SUSM_LTX_CTRL9_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_LTX_CTRL9_RESERVED0_BITS                     1
#define CTL_REGS_SUSM_LTX_CTRL9_RESERVED0_SHIFT                    15

/* ctl_regs :: susm_ltx_ctrl9 :: hstx_pi_ln3_cnt [14:12] */
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN3_CNT_MASK               0x7000
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN3_CNT_ALIGN              0
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN3_CNT_BITS               3
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN3_CNT_SHIFT              12

/* ctl_regs :: susm_ltx_ctrl9 :: hstx_pi_ln2_cnt [11:09] */
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN2_CNT_MASK               0x0e00
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN2_CNT_ALIGN              0
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN2_CNT_BITS               3
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN2_CNT_SHIFT              9

/* ctl_regs :: susm_ltx_ctrl9 :: hstx_pi_ln1_cnt [08:06] */
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN1_CNT_MASK               0x01c0
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN1_CNT_ALIGN              0
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN1_CNT_BITS               3
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN1_CNT_SHIFT              6

/* ctl_regs :: susm_ltx_ctrl9 :: hstx_pi_ln0_cnt [05:03] */
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN0_CNT_MASK               0x0038
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN0_CNT_ALIGN              0
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN0_CNT_BITS               3
#define CTL_REGS_SUSM_LTX_CTRL9_HSTX_PI_LN0_CNT_SHIFT              3

/* ctl_regs :: susm_ltx_ctrl9 :: hc_tx_pi_ln5_cnt [02:00] */
#define CTL_REGS_SUSM_LTX_CTRL9_HC_TX_PI_LN5_CNT_MASK              0x0007
#define CTL_REGS_SUSM_LTX_CTRL9_HC_TX_PI_LN5_CNT_ALIGN             0
#define CTL_REGS_SUSM_LTX_CTRL9_HC_TX_PI_LN5_CNT_BITS              3
#define CTL_REGS_SUSM_LTX_CTRL9_HC_TX_PI_LN5_CNT_SHIFT             0


/****************************************************************************
 * ctl_regs :: susm_ltx_ctrl10
 ***************************************************************************/
/* ctl_regs :: susm_ltx_ctrl10 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_LTX_CTRL10_RESERVED0_MASK                    0xfc00
#define CTL_REGS_SUSM_LTX_CTRL10_RESERVED0_ALIGN                   0
#define CTL_REGS_SUSM_LTX_CTRL10_RESERVED0_BITS                    6
#define CTL_REGS_SUSM_LTX_CTRL10_RESERVED0_SHIFT                   10

/* ctl_regs :: susm_ltx_ctrl10 :: hstx_pi_lock_frc [09:06] */
#define CTL_REGS_SUSM_LTX_CTRL10_HSTX_PI_LOCK_FRC_MASK             0x03c0
#define CTL_REGS_SUSM_LTX_CTRL10_HSTX_PI_LOCK_FRC_ALIGN            0
#define CTL_REGS_SUSM_LTX_CTRL10_HSTX_PI_LOCK_FRC_BITS             4
#define CTL_REGS_SUSM_LTX_CTRL10_HSTX_PI_LOCK_FRC_SHIFT            6

/* ctl_regs :: susm_ltx_ctrl10 :: hc_tx_pi_lock_frc [05:00] */
#define CTL_REGS_SUSM_LTX_CTRL10_HC_TX_PI_LOCK_FRC_MASK            0x003f
#define CTL_REGS_SUSM_LTX_CTRL10_HC_TX_PI_LOCK_FRC_ALIGN           0
#define CTL_REGS_SUSM_LTX_CTRL10_HC_TX_PI_LOCK_FRC_BITS            6
#define CTL_REGS_SUSM_LTX_CTRL10_HC_TX_PI_LOCK_FRC_SHIFT           0


/****************************************************************************
 * ctl_regs :: susm_ltx_ctrl11
 ***************************************************************************/
/* ctl_regs :: susm_ltx_ctrl11 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_LTX_CTRL11_RESERVED0_MASK                    0xfc00
#define CTL_REGS_SUSM_LTX_CTRL11_RESERVED0_ALIGN                   0
#define CTL_REGS_SUSM_LTX_CTRL11_RESERVED0_BITS                    6
#define CTL_REGS_SUSM_LTX_CTRL11_RESERVED0_SHIFT                   10

/* ctl_regs :: susm_ltx_ctrl11 :: hstx_pi_lock_frcval [09:06] */
#define CTL_REGS_SUSM_LTX_CTRL11_HSTX_PI_LOCK_FRCVAL_MASK          0x03c0
#define CTL_REGS_SUSM_LTX_CTRL11_HSTX_PI_LOCK_FRCVAL_ALIGN         0
#define CTL_REGS_SUSM_LTX_CTRL11_HSTX_PI_LOCK_FRCVAL_BITS          4
#define CTL_REGS_SUSM_LTX_CTRL11_HSTX_PI_LOCK_FRCVAL_SHIFT         6

/* ctl_regs :: susm_ltx_ctrl11 :: hc_tx_pi_lock_frcval [05:00] */
#define CTL_REGS_SUSM_LTX_CTRL11_HC_TX_PI_LOCK_FRCVAL_MASK         0x003f
#define CTL_REGS_SUSM_LTX_CTRL11_HC_TX_PI_LOCK_FRCVAL_ALIGN        0
#define CTL_REGS_SUSM_LTX_CTRL11_HC_TX_PI_LOCK_FRCVAL_BITS         6
#define CTL_REGS_SUSM_LTX_CTRL11_HC_TX_PI_LOCK_FRCVAL_SHIFT        0


/****************************************************************************
 * ctl_regs :: susm_lrx_ctrl1
 ***************************************************************************/
/* ctl_regs :: susm_lrx_ctrl1 :: reserved0 [15:05] */
#define CTL_REGS_SUSM_LRX_CTRL1_RESERVED0_MASK                     0xffe0
#define CTL_REGS_SUSM_LRX_CTRL1_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_LRX_CTRL1_RESERVED0_BITS                     11
#define CTL_REGS_SUSM_LRX_CTRL1_RESERVED0_SHIFT                    5

/* ctl_regs :: susm_lrx_ctrl1 :: susm_pua_clk_en_frc [04:04] */
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_PUA_CLK_EN_FRC_MASK           0x0010
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_PUA_CLK_EN_FRC_ALIGN          0
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_PUA_CLK_EN_FRC_BITS           1
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_PUA_CLK_EN_FRC_SHIFT          4

/* ctl_regs :: susm_lrx_ctrl1 :: susm_pua_clk_en_frcval [03:03] */
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_PUA_CLK_EN_FRCVAL_MASK        0x0008
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_PUA_CLK_EN_FRCVAL_ALIGN       0
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_PUA_CLK_EN_FRCVAL_BITS        1
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_PUA_CLK_EN_FRCVAL_SHIFT       3

/* ctl_regs :: susm_lrx_ctrl1 :: susm_lrx_trigger_frc [02:02] */
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_LRX_TRIGGER_FRC_MASK          0x0004
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_LRX_TRIGGER_FRC_ALIGN         0
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_LRX_TRIGGER_FRC_BITS          1
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_LRX_TRIGGER_FRC_SHIFT         2

/* ctl_regs :: susm_lrx_ctrl1 :: susm_lrx_trigger_frcval [01:01] */
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_LRX_TRIGGER_FRCVAL_MASK       0x0002
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_LRX_TRIGGER_FRCVAL_ALIGN      0
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_LRX_TRIGGER_FRCVAL_BITS       1
#define CTL_REGS_SUSM_LRX_CTRL1_SUSM_LRX_TRIGGER_FRCVAL_SHIFT      1

/* ctl_regs :: susm_lrx_ctrl1 :: dis_susm_lrx [00:00] */
#define CTL_REGS_SUSM_LRX_CTRL1_DIS_SUSM_LRX_MASK                  0x0001
#define CTL_REGS_SUSM_LRX_CTRL1_DIS_SUSM_LRX_ALIGN                 0
#define CTL_REGS_SUSM_LRX_CTRL1_DIS_SUSM_LRX_BITS                  1
#define CTL_REGS_SUSM_LRX_CTRL1_DIS_SUSM_LRX_SHIFT                 0


/****************************************************************************
 * ctl_regs :: susm_lrx_ctrl2
 ***************************************************************************/
/* ctl_regs :: susm_lrx_ctrl2 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_LRX_CTRL2_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_LRX_CTRL2_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_LRX_CTRL2_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_LRX_CTRL2_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_lrx_ctrl2 :: susm_lrx_rdy_frc [09:00] */
#define CTL_REGS_SUSM_LRX_CTRL2_SUSM_LRX_RDY_FRC_MASK              0x03ff
#define CTL_REGS_SUSM_LRX_CTRL2_SUSM_LRX_RDY_FRC_ALIGN             0
#define CTL_REGS_SUSM_LRX_CTRL2_SUSM_LRX_RDY_FRC_BITS              10
#define CTL_REGS_SUSM_LRX_CTRL2_SUSM_LRX_RDY_FRC_SHIFT             0


/****************************************************************************
 * ctl_regs :: susm_lrx_ctrl3
 ***************************************************************************/
/* ctl_regs :: susm_lrx_ctrl3 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_LRX_CTRL3_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_LRX_CTRL3_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_LRX_CTRL3_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_LRX_CTRL3_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_lrx_ctrl3 :: susm_lrx_rdy_frcval [09:00] */
#define CTL_REGS_SUSM_LRX_CTRL3_SUSM_LRX_RDY_FRCVAL_MASK           0x03ff
#define CTL_REGS_SUSM_LRX_CTRL3_SUSM_LRX_RDY_FRCVAL_ALIGN          0
#define CTL_REGS_SUSM_LRX_CTRL3_SUSM_LRX_RDY_FRCVAL_BITS           10
#define CTL_REGS_SUSM_LRX_CTRL3_SUSM_LRX_RDY_FRCVAL_SHIFT          0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl1
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl1 :: reserved0 [15:09] */
#define CTL_REGS_SUSM_SYS_CTRL1_RESERVED0_MASK                     0xfe00
#define CTL_REGS_SUSM_SYS_CTRL1_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_SYS_CTRL1_RESERVED0_BITS                     7
#define CTL_REGS_SUSM_SYS_CTRL1_RESERVED0_SHIFT                    9

/* ctl_regs :: susm_sys_ctrl1 :: dis_dcrx_pi_lock [08:08] */
#define CTL_REGS_SUSM_SYS_CTRL1_DIS_DCRX_PI_LOCK_MASK              0x0100
#define CTL_REGS_SUSM_SYS_CTRL1_DIS_DCRX_PI_LOCK_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL1_DIS_DCRX_PI_LOCK_BITS              1
#define CTL_REGS_SUSM_SYS_CTRL1_DIS_DCRX_PI_LOCK_SHIFT             8

/* ctl_regs :: susm_sys_ctrl1 :: dctx_restart_tca [07:07] */
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_RESTART_TCA_MASK              0x0080
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_RESTART_TCA_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_RESTART_TCA_BITS              1
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_RESTART_TCA_SHIFT             7

/* ctl_regs :: susm_sys_ctrl1 :: dctx_tca_start_frc [06:06] */
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_START_FRC_MASK            0x0040
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_START_FRC_ALIGN           0
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_START_FRC_BITS            1
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_START_FRC_SHIFT           6

/* ctl_regs :: susm_sys_ctrl1 :: dctx_tca_start_frcval [05:05] */
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_START_FRCVAL_MASK         0x0020
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_START_FRCVAL_ALIGN        0
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_START_FRCVAL_BITS         1
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_START_FRCVAL_SHIFT        5

/* ctl_regs :: susm_sys_ctrl1 :: dctx_tca_enable_frc [04:04] */
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_ENABLE_FRC_MASK           0x0010
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_ENABLE_FRC_ALIGN          0
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_ENABLE_FRC_BITS           1
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_ENABLE_FRC_SHIFT          4

/* ctl_regs :: susm_sys_ctrl1 :: dctx_tca_enable_frcval [03:03] */
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_ENABLE_FRCVAL_MASK        0x0008
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_ENABLE_FRCVAL_ALIGN       0
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_ENABLE_FRCVAL_BITS        1
#define CTL_REGS_SUSM_SYS_CTRL1_DCTX_TCA_ENABLE_FRCVAL_SHIFT       3

/* ctl_regs :: susm_sys_ctrl1 :: susm_sys_trigger_frc [02:02] */
#define CTL_REGS_SUSM_SYS_CTRL1_SUSM_SYS_TRIGGER_FRC_MASK          0x0004
#define CTL_REGS_SUSM_SYS_CTRL1_SUSM_SYS_TRIGGER_FRC_ALIGN         0
#define CTL_REGS_SUSM_SYS_CTRL1_SUSM_SYS_TRIGGER_FRC_BITS          1
#define CTL_REGS_SUSM_SYS_CTRL1_SUSM_SYS_TRIGGER_FRC_SHIFT         2

/* ctl_regs :: susm_sys_ctrl1 :: susm_sys_trigger_frcval [01:01] */
#define CTL_REGS_SUSM_SYS_CTRL1_SUSM_SYS_TRIGGER_FRCVAL_MASK       0x0002
#define CTL_REGS_SUSM_SYS_CTRL1_SUSM_SYS_TRIGGER_FRCVAL_ALIGN      0
#define CTL_REGS_SUSM_SYS_CTRL1_SUSM_SYS_TRIGGER_FRCVAL_BITS       1
#define CTL_REGS_SUSM_SYS_CTRL1_SUSM_SYS_TRIGGER_FRCVAL_SHIFT      1

/* ctl_regs :: susm_sys_ctrl1 :: dis_susm_sys [00:00] */
#define CTL_REGS_SUSM_SYS_CTRL1_DIS_SUSM_SYS_MASK                  0x0001
#define CTL_REGS_SUSM_SYS_CTRL1_DIS_SUSM_SYS_ALIGN                 0
#define CTL_REGS_SUSM_SYS_CTRL1_DIS_SUSM_SYS_BITS                  1
#define CTL_REGS_SUSM_SYS_CTRL1_DIS_SUSM_SYS_SHIFT                 0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl2
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl2 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_SYS_CTRL2_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_SYS_CTRL2_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_SYS_CTRL2_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_SYS_CTRL2_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_sys_ctrl2 :: susm_stx_rdy_frc [09:00] */
#define CTL_REGS_SUSM_SYS_CTRL2_SUSM_STX_RDY_FRC_MASK              0x03ff
#define CTL_REGS_SUSM_SYS_CTRL2_SUSM_STX_RDY_FRC_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL2_SUSM_STX_RDY_FRC_BITS              10
#define CTL_REGS_SUSM_SYS_CTRL2_SUSM_STX_RDY_FRC_SHIFT             0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl3
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl3 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_SYS_CTRL3_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_SYS_CTRL3_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_SYS_CTRL3_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_SYS_CTRL3_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_sys_ctrl3 :: susm_stx_rdy_frcval [09:00] */
#define CTL_REGS_SUSM_SYS_CTRL3_SUSM_STX_RDY_FRCVAL_MASK           0x03ff
#define CTL_REGS_SUSM_SYS_CTRL3_SUSM_STX_RDY_FRCVAL_ALIGN          0
#define CTL_REGS_SUSM_SYS_CTRL3_SUSM_STX_RDY_FRCVAL_BITS           10
#define CTL_REGS_SUSM_SYS_CTRL3_SUSM_STX_RDY_FRCVAL_SHIFT          0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl4
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl4 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_SYS_CTRL4_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_SYS_CTRL4_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_SYS_CTRL4_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_SYS_CTRL4_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_sys_ctrl4 :: susm_srx_rdy_frc [09:00] */
#define CTL_REGS_SUSM_SYS_CTRL4_SUSM_SRX_RDY_FRC_MASK              0x03ff
#define CTL_REGS_SUSM_SYS_CTRL4_SUSM_SRX_RDY_FRC_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL4_SUSM_SRX_RDY_FRC_BITS              10
#define CTL_REGS_SUSM_SYS_CTRL4_SUSM_SRX_RDY_FRC_SHIFT             0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl5
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl5 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_SYS_CTRL5_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_SYS_CTRL5_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_SYS_CTRL5_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_SYS_CTRL5_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_sys_ctrl5 :: susm_srx_rdy_frcval [09:00] */
#define CTL_REGS_SUSM_SYS_CTRL5_SUSM_SRX_RDY_FRCVAL_MASK           0x03ff
#define CTL_REGS_SUSM_SYS_CTRL5_SUSM_SRX_RDY_FRCVAL_ALIGN          0
#define CTL_REGS_SUSM_SYS_CTRL5_SUSM_SRX_RDY_FRCVAL_BITS           10
#define CTL_REGS_SUSM_SYS_CTRL5_SUSM_SRX_RDY_FRCVAL_SHIFT          0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl6
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl6 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_SYS_CTRL6_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_SYS_CTRL6_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_SYS_CTRL6_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_SYS_CTRL6_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_sys_ctrl6 :: dctx_sel_tjf_frc [09:00] */
#define CTL_REGS_SUSM_SYS_CTRL6_DCTX_SEL_TJF_FRC_MASK              0x03ff
#define CTL_REGS_SUSM_SYS_CTRL6_DCTX_SEL_TJF_FRC_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL6_DCTX_SEL_TJF_FRC_BITS              10
#define CTL_REGS_SUSM_SYS_CTRL6_DCTX_SEL_TJF_FRC_SHIFT             0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl7
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl7 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_SYS_CTRL7_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_SYS_CTRL7_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_SYS_CTRL7_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_SYS_CTRL7_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_sys_ctrl7 :: dctx_sel_tjf_frcval [09:00] */
#define CTL_REGS_SUSM_SYS_CTRL7_DCTX_SEL_TJF_FRCVAL_MASK           0x03ff
#define CTL_REGS_SUSM_SYS_CTRL7_DCTX_SEL_TJF_FRCVAL_ALIGN          0
#define CTL_REGS_SUSM_SYS_CTRL7_DCTX_SEL_TJF_FRCVAL_BITS           10
#define CTL_REGS_SUSM_SYS_CTRL7_DCTX_SEL_TJF_FRCVAL_SHIFT          0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl8
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl8 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_SYS_CTRL8_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_SYS_CTRL8_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_SYS_CTRL8_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_SYS_CTRL8_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_sys_ctrl8 :: dctx_ra_soft_reset_frc [09:00] */
#define CTL_REGS_SUSM_SYS_CTRL8_DCTX_RA_SOFT_RESET_FRC_MASK        0x03ff
#define CTL_REGS_SUSM_SYS_CTRL8_DCTX_RA_SOFT_RESET_FRC_ALIGN       0
#define CTL_REGS_SUSM_SYS_CTRL8_DCTX_RA_SOFT_RESET_FRC_BITS        10
#define CTL_REGS_SUSM_SYS_CTRL8_DCTX_RA_SOFT_RESET_FRC_SHIFT       0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl9
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl9 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_SYS_CTRL9_RESERVED0_MASK                     0xfc00
#define CTL_REGS_SUSM_SYS_CTRL9_RESERVED0_ALIGN                    0
#define CTL_REGS_SUSM_SYS_CTRL9_RESERVED0_BITS                     6
#define CTL_REGS_SUSM_SYS_CTRL9_RESERVED0_SHIFT                    10

/* ctl_regs :: susm_sys_ctrl9 :: dctx_ra_soft_reset_frcval [09:00] */
#define CTL_REGS_SUSM_SYS_CTRL9_DCTX_RA_SOFT_RESET_FRCVAL_MASK     0x03ff
#define CTL_REGS_SUSM_SYS_CTRL9_DCTX_RA_SOFT_RESET_FRCVAL_ALIGN    0
#define CTL_REGS_SUSM_SYS_CTRL9_DCTX_RA_SOFT_RESET_FRCVAL_BITS     10
#define CTL_REGS_SUSM_SYS_CTRL9_DCTX_RA_SOFT_RESET_FRCVAL_SHIFT    0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl10
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl10 :: reserved0 [15:15] */
#define CTL_REGS_SUSM_SYS_CTRL10_RESERVED0_MASK                    0x8000
#define CTL_REGS_SUSM_SYS_CTRL10_RESERVED0_ALIGN                   0
#define CTL_REGS_SUSM_SYS_CTRL10_RESERVED0_BITS                    1
#define CTL_REGS_SUSM_SYS_CTRL10_RESERVED0_SHIFT                   15

/* ctl_regs :: susm_sys_ctrl10 :: dcrx_pi_ln4_cnt [14:12] */
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN4_CNT_MASK              0x7000
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN4_CNT_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN4_CNT_BITS              3
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN4_CNT_SHIFT             12

/* ctl_regs :: susm_sys_ctrl10 :: dcrx_pi_ln3_cnt [11:09] */
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN3_CNT_MASK              0x0e00
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN3_CNT_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN3_CNT_BITS              3
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN3_CNT_SHIFT             9

/* ctl_regs :: susm_sys_ctrl10 :: dcrx_pi_ln2_cnt [08:06] */
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN2_CNT_MASK              0x01c0
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN2_CNT_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN2_CNT_BITS              3
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN2_CNT_SHIFT             6

/* ctl_regs :: susm_sys_ctrl10 :: dcrx_pi_ln1_cnt [05:03] */
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN1_CNT_MASK              0x0038
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN1_CNT_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN1_CNT_BITS              3
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN1_CNT_SHIFT             3

/* ctl_regs :: susm_sys_ctrl10 :: dcrx_pi_ln0_cnt [02:00] */
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN0_CNT_MASK              0x0007
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN0_CNT_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN0_CNT_BITS              3
#define CTL_REGS_SUSM_SYS_CTRL10_DCRX_PI_LN0_CNT_SHIFT             0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl11
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl11 :: reserved0 [15:15] */
#define CTL_REGS_SUSM_SYS_CTRL11_RESERVED0_MASK                    0x8000
#define CTL_REGS_SUSM_SYS_CTRL11_RESERVED0_ALIGN                   0
#define CTL_REGS_SUSM_SYS_CTRL11_RESERVED0_BITS                    1
#define CTL_REGS_SUSM_SYS_CTRL11_RESERVED0_SHIFT                   15

/* ctl_regs :: susm_sys_ctrl11 :: dcrx_pi_ln9_cnt [14:12] */
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN9_CNT_MASK              0x7000
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN9_CNT_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN9_CNT_BITS              3
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN9_CNT_SHIFT             12

/* ctl_regs :: susm_sys_ctrl11 :: dcrx_pi_ln8_cnt [11:09] */
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN8_CNT_MASK              0x0e00
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN8_CNT_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN8_CNT_BITS              3
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN8_CNT_SHIFT             9

/* ctl_regs :: susm_sys_ctrl11 :: dcrx_pi_ln7_cnt [08:06] */
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN7_CNT_MASK              0x01c0
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN7_CNT_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN7_CNT_BITS              3
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN7_CNT_SHIFT             6

/* ctl_regs :: susm_sys_ctrl11 :: dcrx_pi_ln6_cnt [05:03] */
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN6_CNT_MASK              0x0038
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN6_CNT_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN6_CNT_BITS              3
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN6_CNT_SHIFT             3

/* ctl_regs :: susm_sys_ctrl11 :: dcrx_pi_ln5_cnt [02:00] */
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN5_CNT_MASK              0x0007
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN5_CNT_ALIGN             0
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN5_CNT_BITS              3
#define CTL_REGS_SUSM_SYS_CTRL11_DCRX_PI_LN5_CNT_SHIFT             0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl12
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl12 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_SYS_CTRL12_RESERVED0_MASK                    0xfc00
#define CTL_REGS_SUSM_SYS_CTRL12_RESERVED0_ALIGN                   0
#define CTL_REGS_SUSM_SYS_CTRL12_RESERVED0_BITS                    6
#define CTL_REGS_SUSM_SYS_CTRL12_RESERVED0_SHIFT                   10

/* ctl_regs :: susm_sys_ctrl12 :: dcrx_pi_lock_frc [09:00] */
#define CTL_REGS_SUSM_SYS_CTRL12_DCRX_PI_LOCK_FRC_MASK             0x03ff
#define CTL_REGS_SUSM_SYS_CTRL12_DCRX_PI_LOCK_FRC_ALIGN            0
#define CTL_REGS_SUSM_SYS_CTRL12_DCRX_PI_LOCK_FRC_BITS             10
#define CTL_REGS_SUSM_SYS_CTRL12_DCRX_PI_LOCK_FRC_SHIFT            0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl13
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl13 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_SYS_CTRL13_RESERVED0_MASK                    0xfc00
#define CTL_REGS_SUSM_SYS_CTRL13_RESERVED0_ALIGN                   0
#define CTL_REGS_SUSM_SYS_CTRL13_RESERVED0_BITS                    6
#define CTL_REGS_SUSM_SYS_CTRL13_RESERVED0_SHIFT                   10

/* ctl_regs :: susm_sys_ctrl13 :: dcrx_pi_lock_frcval [09:00] */
#define CTL_REGS_SUSM_SYS_CTRL13_DCRX_PI_LOCK_FRCVAL_MASK          0x03ff
#define CTL_REGS_SUSM_SYS_CTRL13_DCRX_PI_LOCK_FRCVAL_ALIGN         0
#define CTL_REGS_SUSM_SYS_CTRL13_DCRX_PI_LOCK_FRCVAL_BITS          10
#define CTL_REGS_SUSM_SYS_CTRL13_DCRX_PI_LOCK_FRCVAL_SHIFT         0


/****************************************************************************
 * ctl_regs :: susm_sys_ctrl14
 ***************************************************************************/
/* ctl_regs :: susm_sys_ctrl14 :: reserved0 [15:10] */
#define CTL_REGS_SUSM_SYS_CTRL14_RESERVED0_MASK                    0xfc00
#define CTL_REGS_SUSM_SYS_CTRL14_RESERVED0_ALIGN                   0
#define CTL_REGS_SUSM_SYS_CTRL14_RESERVED0_BITS                    6
#define CTL_REGS_SUSM_SYS_CTRL14_RESERVED0_SHIFT                   10

/* ctl_regs :: susm_sys_ctrl14 :: dcrx_lpbk_pi_lock [09:00] */
#define CTL_REGS_SUSM_SYS_CTRL14_DCRX_LPBK_PI_LOCK_MASK            0x03ff
#define CTL_REGS_SUSM_SYS_CTRL14_DCRX_LPBK_PI_LOCK_ALIGN           0
#define CTL_REGS_SUSM_SYS_CTRL14_DCRX_LPBK_PI_LOCK_BITS            10
#define CTL_REGS_SUSM_SYS_CTRL14_DCRX_LPBK_PI_LOCK_SHIFT           0


/****************************************************************************
 * ctl_regs :: susm_status1
 ***************************************************************************/
/* ctl_regs :: susm_status1 :: reserved_for_eco0 [15:10] */
#define CTL_REGS_SUSM_STATUS1_RESERVED_FOR_ECO0_MASK               0xfc00
#define CTL_REGS_SUSM_STATUS1_RESERVED_FOR_ECO0_ALIGN              0
#define CTL_REGS_SUSM_STATUS1_RESERVED_FOR_ECO0_BITS               6
#define CTL_REGS_SUSM_STATUS1_RESERVED_FOR_ECO0_SHIFT              10

/* ctl_regs :: susm_status1 :: lrx_ready [09:00] */
#define CTL_REGS_SUSM_STATUS1_LRX_READY_MASK                       0x03ff
#define CTL_REGS_SUSM_STATUS1_LRX_READY_ALIGN                      0
#define CTL_REGS_SUSM_STATUS1_LRX_READY_BITS                       10
#define CTL_REGS_SUSM_STATUS1_LRX_READY_SHIFT                      0


/****************************************************************************
 * ctl_regs :: susm_status2
 ***************************************************************************/
/* ctl_regs :: susm_status2 :: reserved_for_eco0 [15:12] */
#define CTL_REGS_SUSM_STATUS2_RESERVED_FOR_ECO0_MASK               0xf000
#define CTL_REGS_SUSM_STATUS2_RESERVED_FOR_ECO0_ALIGN              0
#define CTL_REGS_SUSM_STATUS2_RESERVED_FOR_ECO0_BITS               4
#define CTL_REGS_SUSM_STATUS2_RESERVED_FOR_ECO0_SHIFT              12

/* ctl_regs :: susm_status2 :: hc_tx_algnmnt_done [11:11] */
#define CTL_REGS_SUSM_STATUS2_HC_TX_ALGNMNT_DONE_MASK              0x0800
#define CTL_REGS_SUSM_STATUS2_HC_TX_ALGNMNT_DONE_ALIGN             0
#define CTL_REGS_SUSM_STATUS2_HC_TX_ALGNMNT_DONE_BITS              1
#define CTL_REGS_SUSM_STATUS2_HC_TX_ALGNMNT_DONE_SHIFT             11

/* ctl_regs :: susm_status2 :: vsr40_tx_algnmnt_done [10:10] */
#define CTL_REGS_SUSM_STATUS2_VSR40_TX_ALGNMNT_DONE_MASK           0x0400
#define CTL_REGS_SUSM_STATUS2_VSR40_TX_ALGNMNT_DONE_ALIGN          0
#define CTL_REGS_SUSM_STATUS2_VSR40_TX_ALGNMNT_DONE_BITS           1
#define CTL_REGS_SUSM_STATUS2_VSR40_TX_ALGNMNT_DONE_SHIFT          10

/* ctl_regs :: susm_status2 :: ltx_ready [09:00] */
#define CTL_REGS_SUSM_STATUS2_LTX_READY_MASK                       0x03ff
#define CTL_REGS_SUSM_STATUS2_LTX_READY_ALIGN                      0
#define CTL_REGS_SUSM_STATUS2_LTX_READY_BITS                       10
#define CTL_REGS_SUSM_STATUS2_LTX_READY_SHIFT                      0


/****************************************************************************
 * ctl_regs :: susm_status3
 ***************************************************************************/
/* ctl_regs :: susm_status3 :: reserved_for_eco0 [15:13] */
#define CTL_REGS_SUSM_STATUS3_RESERVED_FOR_ECO0_MASK               0xe000
#define CTL_REGS_SUSM_STATUS3_RESERVED_FOR_ECO0_ALIGN              0
#define CTL_REGS_SUSM_STATUS3_RESERVED_FOR_ECO0_BITS               3
#define CTL_REGS_SUSM_STATUS3_RESERVED_FOR_ECO0_SHIFT              13

/* ctl_regs :: susm_status3 :: dc_tx_tca_start [12:12] */
#define CTL_REGS_SUSM_STATUS3_DC_TX_TCA_START_MASK                 0x1000
#define CTL_REGS_SUSM_STATUS3_DC_TX_TCA_START_ALIGN                0
#define CTL_REGS_SUSM_STATUS3_DC_TX_TCA_START_BITS                 1
#define CTL_REGS_SUSM_STATUS3_DC_TX_TCA_START_SHIFT                12

/* ctl_regs :: susm_status3 :: dc_tx_tca_enable [11:11] */
#define CTL_REGS_SUSM_STATUS3_DC_TX_TCA_ENABLE_MASK                0x0800
#define CTL_REGS_SUSM_STATUS3_DC_TX_TCA_ENABLE_ALIGN               0
#define CTL_REGS_SUSM_STATUS3_DC_TX_TCA_ENABLE_BITS                1
#define CTL_REGS_SUSM_STATUS3_DC_TX_TCA_ENABLE_SHIFT               11

/* ctl_regs :: susm_status3 :: dc_tx_algnmnt_done [10:10] */
#define CTL_REGS_SUSM_STATUS3_DC_TX_ALGNMNT_DONE_MASK              0x0400
#define CTL_REGS_SUSM_STATUS3_DC_TX_ALGNMNT_DONE_ALIGN             0
#define CTL_REGS_SUSM_STATUS3_DC_TX_ALGNMNT_DONE_BITS              1
#define CTL_REGS_SUSM_STATUS3_DC_TX_ALGNMNT_DONE_SHIFT             10

/* ctl_regs :: susm_status3 :: srx_ready [09:00] */
#define CTL_REGS_SUSM_STATUS3_SRX_READY_MASK                       0x03ff
#define CTL_REGS_SUSM_STATUS3_SRX_READY_ALIGN                      0
#define CTL_REGS_SUSM_STATUS3_SRX_READY_BITS                       10
#define CTL_REGS_SUSM_STATUS3_SRX_READY_SHIFT                      0


/****************************************************************************
 * ctl_regs :: susm_status4
 ***************************************************************************/
/* ctl_regs :: susm_status4 :: reserved_for_eco0 [15:10] */
#define CTL_REGS_SUSM_STATUS4_RESERVED_FOR_ECO0_MASK               0xfc00
#define CTL_REGS_SUSM_STATUS4_RESERVED_FOR_ECO0_ALIGN              0
#define CTL_REGS_SUSM_STATUS4_RESERVED_FOR_ECO0_BITS               6
#define CTL_REGS_SUSM_STATUS4_RESERVED_FOR_ECO0_SHIFT              10

/* ctl_regs :: susm_status4 :: stx_ready [09:00] */
#define CTL_REGS_SUSM_STATUS4_STX_READY_MASK                       0x03ff
#define CTL_REGS_SUSM_STATUS4_STX_READY_ALIGN                      0
#define CTL_REGS_SUSM_STATUS4_STX_READY_BITS                       10
#define CTL_REGS_SUSM_STATUS4_STX_READY_SHIFT                      0


/****************************************************************************
 * ctl_regs :: susm_status5
 ***************************************************************************/
/* ctl_regs :: susm_status5 :: reserved_for_eco0 [15:10] */
#define CTL_REGS_SUSM_STATUS5_RESERVED_FOR_ECO0_MASK               0xfc00
#define CTL_REGS_SUSM_STATUS5_RESERVED_FOR_ECO0_ALIGN              0
#define CTL_REGS_SUSM_STATUS5_RESERVED_FOR_ECO0_BITS               6
#define CTL_REGS_SUSM_STATUS5_RESERVED_FOR_ECO0_SHIFT              10

/* ctl_regs :: susm_status5 :: srx_pi_lock [09:00] */
#define CTL_REGS_SUSM_STATUS5_SRX_PI_LOCK_MASK                     0x03ff
#define CTL_REGS_SUSM_STATUS5_SRX_PI_LOCK_ALIGN                    0
#define CTL_REGS_SUSM_STATUS5_SRX_PI_LOCK_BITS                     10
#define CTL_REGS_SUSM_STATUS5_SRX_PI_LOCK_SHIFT                    0


/****************************************************************************
 * ctl_regs :: susm_status6
 ***************************************************************************/
/* ctl_regs :: susm_status6 :: reserved_for_eco0 [15:10] */
#define CTL_REGS_SUSM_STATUS6_RESERVED_FOR_ECO0_MASK               0xfc00
#define CTL_REGS_SUSM_STATUS6_RESERVED_FOR_ECO0_ALIGN              0
#define CTL_REGS_SUSM_STATUS6_RESERVED_FOR_ECO0_BITS               6
#define CTL_REGS_SUSM_STATUS6_RESERVED_FOR_ECO0_SHIFT              10

/* ctl_regs :: susm_status6 :: ltx_pi_lock [09:00] */
#define CTL_REGS_SUSM_STATUS6_LTX_PI_LOCK_MASK                     0x03ff
#define CTL_REGS_SUSM_STATUS6_LTX_PI_LOCK_ALIGN                    0
#define CTL_REGS_SUSM_STATUS6_LTX_PI_LOCK_BITS                     10
#define CTL_REGS_SUSM_STATUS6_LTX_PI_LOCK_SHIFT                    0


/****************************************************************************
 * ctl_regs :: device_identifier_lsb_ctrl1
 ***************************************************************************/
/* ctl_regs :: device_identifier_lsb_ctrl1 :: pma_pmd_device_identifier_lsb [15:00] */
#define CTL_REGS_DEVICE_IDENTIFIER_LSB_CTRL1_PMA_PMD_DEVICE_IDENTIFIER_LSB_MASK 0xffff
#define CTL_REGS_DEVICE_IDENTIFIER_LSB_CTRL1_PMA_PMD_DEVICE_IDENTIFIER_LSB_ALIGN 0
#define CTL_REGS_DEVICE_IDENTIFIER_LSB_CTRL1_PMA_PMD_DEVICE_IDENTIFIER_LSB_BITS 16
#define CTL_REGS_DEVICE_IDENTIFIER_LSB_CTRL1_PMA_PMD_DEVICE_IDENTIFIER_LSB_SHIFT 0


/****************************************************************************
 * ctl_regs :: device_identifier_msb_ctrl1
 ***************************************************************************/
/* ctl_regs :: device_identifier_msb_ctrl1 :: pma_pmd_device_identifier_msb [15:00] */
#define CTL_REGS_DEVICE_IDENTIFIER_MSB_CTRL1_PMA_PMD_DEVICE_IDENTIFIER_MSB_MASK 0xffff
#define CTL_REGS_DEVICE_IDENTIFIER_MSB_CTRL1_PMA_PMD_DEVICE_IDENTIFIER_MSB_ALIGN 0
#define CTL_REGS_DEVICE_IDENTIFIER_MSB_CTRL1_PMA_PMD_DEVICE_IDENTIFIER_MSB_BITS 16
#define CTL_REGS_DEVICE_IDENTIFIER_MSB_CTRL1_PMA_PMD_DEVICE_IDENTIFIER_MSB_SHIFT 0


/****************************************************************************
 * ctl_regs :: package_identifier_lsb_ctrl1
 ***************************************************************************/
/* ctl_regs :: package_identifier_lsb_ctrl1 :: pma_pmd_package_identifier_lsb [15:00] */
#define CTL_REGS_PACKAGE_IDENTIFIER_LSB_CTRL1_PMA_PMD_PACKAGE_IDENTIFIER_LSB_MASK 0xffff
#define CTL_REGS_PACKAGE_IDENTIFIER_LSB_CTRL1_PMA_PMD_PACKAGE_IDENTIFIER_LSB_ALIGN 0
#define CTL_REGS_PACKAGE_IDENTIFIER_LSB_CTRL1_PMA_PMD_PACKAGE_IDENTIFIER_LSB_BITS 16
#define CTL_REGS_PACKAGE_IDENTIFIER_LSB_CTRL1_PMA_PMD_PACKAGE_IDENTIFIER_LSB_SHIFT 0


/****************************************************************************
 * ctl_regs :: package_identifier_msb_ctrl1
 ***************************************************************************/
/* ctl_regs :: package_identifier_msb_ctrl1 :: pma_pmd_package_identifier_msb [15:00] */
#define CTL_REGS_PACKAGE_IDENTIFIER_MSB_CTRL1_PMA_PMD_PACKAGE_IDENTIFIER_MSB_MASK 0xffff
#define CTL_REGS_PACKAGE_IDENTIFIER_MSB_CTRL1_PMA_PMD_PACKAGE_IDENTIFIER_MSB_ALIGN 0
#define CTL_REGS_PACKAGE_IDENTIFIER_MSB_CTRL1_PMA_PMD_PACKAGE_IDENTIFIER_MSB_BITS 16
#define CTL_REGS_PACKAGE_IDENTIFIER_MSB_CTRL1_PMA_PMD_PACKAGE_IDENTIFIER_MSB_SHIFT 0


/****************************************************************************
 * ctl_regs :: ip_tmux_ctrl
 ***************************************************************************/
/* ctl_regs :: ip_tmux_ctrl :: reserved0 [15:14] */
#define CTL_REGS_IP_TMUX_CTRL_RESERVED0_MASK                       0xc000
#define CTL_REGS_IP_TMUX_CTRL_RESERVED0_ALIGN                      0
#define CTL_REGS_IP_TMUX_CTRL_RESERVED0_BITS                       2
#define CTL_REGS_IP_TMUX_CTRL_RESERVED0_SHIFT                      14

/* ctl_regs :: ip_tmux_ctrl :: hc_tx_rx_select [13:13] */
#define CTL_REGS_IP_TMUX_CTRL_HC_TX_RX_SELECT_MASK                 0x2000
#define CTL_REGS_IP_TMUX_CTRL_HC_TX_RX_SELECT_ALIGN                0
#define CTL_REGS_IP_TMUX_CTRL_HC_TX_RX_SELECT_BITS                 1
#define CTL_REGS_IP_TMUX_CTRL_HC_TX_RX_SELECT_SHIFT                13

/* ctl_regs :: ip_tmux_ctrl :: hc_tmux_select [12:09] */
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_SELECT_MASK                  0x1e00
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_SELECT_ALIGN                 0
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_SELECT_BITS                  4
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_SELECT_SHIFT                 9

/* ctl_regs :: ip_tmux_ctrl :: hc_tmux_out_select [08:06] */
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_OUT_SELECT_MASK              0x01c0
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_OUT_SELECT_ALIGN             0
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_OUT_SELECT_BITS              3
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_OUT_SELECT_SHIFT             6

/* ctl_regs :: ip_tmux_ctrl :: hc_tmux_out_en [05:05] */
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_OUT_EN_MASK                  0x0020
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_OUT_EN_ALIGN                 0
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_OUT_EN_BITS                  1
#define CTL_REGS_IP_TMUX_CTRL_HC_TMUX_OUT_EN_SHIFT                 5

/* ctl_regs :: ip_tmux_ctrl :: dc_tmux_out_select [04:01] */
#define CTL_REGS_IP_TMUX_CTRL_DC_TMUX_OUT_SELECT_MASK              0x001e
#define CTL_REGS_IP_TMUX_CTRL_DC_TMUX_OUT_SELECT_ALIGN             0
#define CTL_REGS_IP_TMUX_CTRL_DC_TMUX_OUT_SELECT_BITS              4
#define CTL_REGS_IP_TMUX_CTRL_DC_TMUX_OUT_SELECT_SHIFT             1

/* ctl_regs :: ip_tmux_ctrl :: dc_tmux_out_en [00:00] */
#define CTL_REGS_IP_TMUX_CTRL_DC_TMUX_OUT_EN_MASK                  0x0001
#define CTL_REGS_IP_TMUX_CTRL_DC_TMUX_OUT_EN_ALIGN                 0
#define CTL_REGS_IP_TMUX_CTRL_DC_TMUX_OUT_EN_BITS                  1
#define CTL_REGS_IP_TMUX_CTRL_DC_TMUX_OUT_EN_SHIFT                 0


/****************************************************************************
 * ctl_regs :: otp_fout_3
 ***************************************************************************/
/* ctl_regs :: otp_fout_3 :: otp_fout3 [15:00] */
#define CTL_REGS_OTP_FOUT_3_OTP_FOUT3_MASK                         0xffff
#define CTL_REGS_OTP_FOUT_3_OTP_FOUT3_ALIGN                        0
#define CTL_REGS_OTP_FOUT_3_OTP_FOUT3_BITS                         16
#define CTL_REGS_OTP_FOUT_3_OTP_FOUT3_SHIFT                        0


/****************************************************************************
 * ctl_regs :: otp_fout_2
 ***************************************************************************/
/* ctl_regs :: otp_fout_2 :: otp_fout2 [15:00] */
#define CTL_REGS_OTP_FOUT_2_OTP_FOUT2_MASK                         0xffff
#define CTL_REGS_OTP_FOUT_2_OTP_FOUT2_ALIGN                        0
#define CTL_REGS_OTP_FOUT_2_OTP_FOUT2_BITS                         16
#define CTL_REGS_OTP_FOUT_2_OTP_FOUT2_SHIFT                        0


/****************************************************************************
 * ctl_regs :: otp_fout_1
 ***************************************************************************/
/* ctl_regs :: otp_fout_1 :: otp_fout1 [15:00] */
#define CTL_REGS_OTP_FOUT_1_OTP_FOUT1_MASK                         0xffff
#define CTL_REGS_OTP_FOUT_1_OTP_FOUT1_ALIGN                        0
#define CTL_REGS_OTP_FOUT_1_OTP_FOUT1_BITS                         16
#define CTL_REGS_OTP_FOUT_1_OTP_FOUT1_SHIFT                        0


/****************************************************************************
 * ctl_regs :: otp_fout_0
 ***************************************************************************/
/* ctl_regs :: otp_fout_0 :: otp_fout0 [15:00] */
#define CTL_REGS_OTP_FOUT_0_OTP_FOUT0_MASK                         0xffff
#define CTL_REGS_OTP_FOUT_0_OTP_FOUT0_ALIGN                        0
#define CTL_REGS_OTP_FOUT_0_OTP_FOUT0_BITS                         16
#define CTL_REGS_OTP_FOUT_0_OTP_FOUT0_SHIFT                        0


/****************************************************************************
 * hs_rx_cdr_regs
 ***************************************************************************/
/****************************************************************************
 * hs_rx_cdr :: cdr_reset
 ***************************************************************************/
/* hs_rx_cdr :: cdr_reset :: rg_hlr_hs_dsp_soft_rstb [15:15] */
#define HS_RX_CDR_CDR_RESET_RG_HLR_HS_DSP_SOFT_RSTB_MASK           0x8000
#define HS_RX_CDR_CDR_RESET_RG_HLR_HS_DSP_SOFT_RSTB_ALIGN          0
#define HS_RX_CDR_CDR_RESET_RG_HLR_HS_DSP_SOFT_RSTB_BITS           1
#define HS_RX_CDR_CDR_RESET_RG_HLR_HS_DSP_SOFT_RSTB_SHIFT          15

/* hs_rx_cdr :: cdr_reset :: rg_pit_clk_en [14:14] */
#define HS_RX_CDR_CDR_RESET_RG_PIT_CLK_EN_MASK                     0x4000
#define HS_RX_CDR_CDR_RESET_RG_PIT_CLK_EN_ALIGN                    0
#define HS_RX_CDR_CDR_RESET_RG_PIT_CLK_EN_BITS                     1
#define HS_RX_CDR_CDR_RESET_RG_PIT_CLK_EN_SHIFT                    14

/* hs_rx_cdr :: cdr_reset :: reserved0 [13:13] */
#define HS_RX_CDR_CDR_RESET_RESERVED0_MASK                         0x2000
#define HS_RX_CDR_CDR_RESET_RESERVED0_ALIGN                        0
#define HS_RX_CDR_CDR_RESET_RESERVED0_BITS                         1
#define HS_RX_CDR_CDR_RESET_RESERVED0_SHIFT                        13

/* hs_rx_cdr :: cdr_reset :: rg_pua_lrx2ltx_soft_rstb [12:12] */
#define HS_RX_CDR_CDR_RESET_RG_PUA_LRX2LTX_SOFT_RSTB_MASK          0x1000
#define HS_RX_CDR_CDR_RESET_RG_PUA_LRX2LTX_SOFT_RSTB_ALIGN         0
#define HS_RX_CDR_CDR_RESET_RG_PUA_LRX2LTX_SOFT_RSTB_BITS          1
#define HS_RX_CDR_CDR_RESET_RG_PUA_LRX2LTX_SOFT_RSTB_SHIFT         12

/* hs_rx_cdr :: cdr_reset :: rg_pua_lrx2stx_soft_rstb [11:11] */
#define HS_RX_CDR_CDR_RESET_RG_PUA_LRX2STX_SOFT_RSTB_MASK          0x0800
#define HS_RX_CDR_CDR_RESET_RG_PUA_LRX2STX_SOFT_RSTB_ALIGN         0
#define HS_RX_CDR_CDR_RESET_RG_PUA_LRX2STX_SOFT_RSTB_BITS          1
#define HS_RX_CDR_CDR_RESET_RG_PUA_LRX2STX_SOFT_RSTB_SHIFT         11

/* hs_rx_cdr :: cdr_reset :: rg_swg_clk_en [10:10] */
#define HS_RX_CDR_CDR_RESET_RG_SWG_CLK_EN_MASK                     0x0400
#define HS_RX_CDR_CDR_RESET_RG_SWG_CLK_EN_ALIGN                    0
#define HS_RX_CDR_CDR_RESET_RG_SWG_CLK_EN_BITS                     1
#define HS_RX_CDR_CDR_RESET_RG_SWG_CLK_EN_SHIFT                    10

/* hs_rx_cdr :: cdr_reset :: rg_swg_soft_rstb [09:09] */
#define HS_RX_CDR_CDR_RESET_RG_SWG_SOFT_RSTB_MASK                  0x0200
#define HS_RX_CDR_CDR_RESET_RG_SWG_SOFT_RSTB_ALIGN                 0
#define HS_RX_CDR_CDR_RESET_RG_SWG_SOFT_RSTB_BITS                  1
#define HS_RX_CDR_CDR_RESET_RG_SWG_SOFT_RSTB_SHIFT                 9

/* hs_rx_cdr :: cdr_reset :: rg_pfc_clk_en [08:08] */
#define HS_RX_CDR_CDR_RESET_RG_PFC_CLK_EN_MASK                     0x0100
#define HS_RX_CDR_CDR_RESET_RG_PFC_CLK_EN_ALIGN                    0
#define HS_RX_CDR_CDR_RESET_RG_PFC_CLK_EN_BITS                     1
#define HS_RX_CDR_CDR_RESET_RG_PFC_CLK_EN_SHIFT                    8

/* hs_rx_cdr :: cdr_reset :: rg_pfc_soft_rstb [07:07] */
#define HS_RX_CDR_CDR_RESET_RG_PFC_SOFT_RSTB_MASK                  0x0080
#define HS_RX_CDR_CDR_RESET_RG_PFC_SOFT_RSTB_ALIGN                 0
#define HS_RX_CDR_CDR_RESET_RG_PFC_SOFT_RSTB_BITS                  1
#define HS_RX_CDR_CDR_RESET_RG_PFC_SOFT_RSTB_SHIFT                 7

/* hs_rx_cdr :: cdr_reset :: rg_eml_clk_en [06:06] */
#define HS_RX_CDR_CDR_RESET_RG_EML_CLK_EN_MASK                     0x0040
#define HS_RX_CDR_CDR_RESET_RG_EML_CLK_EN_ALIGN                    0
#define HS_RX_CDR_CDR_RESET_RG_EML_CLK_EN_BITS                     1
#define HS_RX_CDR_CDR_RESET_RG_EML_CLK_EN_SHIFT                    6

/* hs_rx_cdr :: cdr_reset :: rg_eml_soft_rstb [05:05] */
#define HS_RX_CDR_CDR_RESET_RG_EML_SOFT_RSTB_MASK                  0x0020
#define HS_RX_CDR_CDR_RESET_RG_EML_SOFT_RSTB_ALIGN                 0
#define HS_RX_CDR_CDR_RESET_RG_EML_SOFT_RSTB_BITS                  1
#define HS_RX_CDR_CDR_RESET_RG_EML_SOFT_RSTB_SHIFT                 5

/* hs_rx_cdr :: cdr_reset :: rg_cdr_ip_sum_sd_soft_rstb [04:04] */
#define HS_RX_CDR_CDR_RESET_RG_CDR_IP_SUM_SD_SOFT_RSTB_MASK        0x0010
#define HS_RX_CDR_CDR_RESET_RG_CDR_IP_SUM_SD_SOFT_RSTB_ALIGN       0
#define HS_RX_CDR_CDR_RESET_RG_CDR_IP_SUM_SD_SOFT_RSTB_BITS        1
#define HS_RX_CDR_CDR_RESET_RG_CDR_IP_SUM_SD_SOFT_RSTB_SHIFT       4

/* hs_rx_cdr :: cdr_reset :: rg_cdr_integ_sd_soft_rstb [03:03] */
#define HS_RX_CDR_CDR_RESET_RG_CDR_INTEG_SD_SOFT_RSTB_MASK         0x0008
#define HS_RX_CDR_CDR_RESET_RG_CDR_INTEG_SD_SOFT_RSTB_ALIGN        0
#define HS_RX_CDR_CDR_RESET_RG_CDR_INTEG_SD_SOFT_RSTB_BITS         1
#define HS_RX_CDR_CDR_RESET_RG_CDR_INTEG_SD_SOFT_RSTB_SHIFT        3

/* hs_rx_cdr :: cdr_reset :: rg_cdr_integ_soft_rstb [02:02] */
#define HS_RX_CDR_CDR_RESET_RG_CDR_INTEG_SOFT_RSTB_MASK            0x0004
#define HS_RX_CDR_CDR_RESET_RG_CDR_INTEG_SOFT_RSTB_ALIGN           0
#define HS_RX_CDR_CDR_RESET_RG_CDR_INTEG_SOFT_RSTB_BITS            1
#define HS_RX_CDR_CDR_RESET_RG_CDR_INTEG_SOFT_RSTB_SHIFT           2

/* hs_rx_cdr :: cdr_reset :: rg_rdp_soft_rstb [01:01] */
#define HS_RX_CDR_CDR_RESET_RG_RDP_SOFT_RSTB_MASK                  0x0002
#define HS_RX_CDR_CDR_RESET_RG_RDP_SOFT_RSTB_ALIGN                 0
#define HS_RX_CDR_CDR_RESET_RG_RDP_SOFT_RSTB_BITS                  1
#define HS_RX_CDR_CDR_RESET_RG_RDP_SOFT_RSTB_SHIFT                 1

/* hs_rx_cdr :: cdr_reset :: rg_cdr_soft_rstb [00:00] */
#define HS_RX_CDR_CDR_RESET_RG_CDR_SOFT_RSTB_MASK                  0x0001
#define HS_RX_CDR_CDR_RESET_RG_CDR_SOFT_RSTB_ALIGN                 0
#define HS_RX_CDR_CDR_RESET_RG_CDR_SOFT_RSTB_BITS                  1
#define HS_RX_CDR_CDR_RESET_RG_CDR_SOFT_RSTB_SHIFT                 0


/****************************************************************************
 * hs_rx_cdr :: cdr_loop
 ***************************************************************************/
/* hs_rx_cdr :: cdr_loop :: reserved0 [15:13] */
#define HS_RX_CDR_CDR_LOOP_RESERVED0_MASK                          0xe000
#define HS_RX_CDR_CDR_LOOP_RESERVED0_ALIGN                         0
#define HS_RX_CDR_CDR_LOOP_RESERVED0_BITS                          3
#define HS_RX_CDR_CDR_LOOP_RESERVED0_SHIFT                         13

/* hs_rx_cdr :: cdr_loop :: rg_cdr_integ_consec_sat_det_cntrl [12:09] */
#define HS_RX_CDR_CDR_LOOP_RG_CDR_INTEG_CONSEC_SAT_DET_CNTRL_MASK  0x1e00
#define HS_RX_CDR_CDR_LOOP_RG_CDR_INTEG_CONSEC_SAT_DET_CNTRL_ALIGN 0
#define HS_RX_CDR_CDR_LOOP_RG_CDR_INTEG_CONSEC_SAT_DET_CNTRL_BITS  4
#define HS_RX_CDR_CDR_LOOP_RG_CDR_INTEG_CONSEC_SAT_DET_CNTRL_SHIFT 9

/* hs_rx_cdr :: cdr_loop :: reserved1 [08:08] */
#define HS_RX_CDR_CDR_LOOP_RESERVED1_MASK                          0x0100
#define HS_RX_CDR_CDR_LOOP_RESERVED1_ALIGN                         0
#define HS_RX_CDR_CDR_LOOP_RESERVED1_BITS                          1
#define HS_RX_CDR_CDR_LOOP_RESERVED1_SHIFT                         8

/* hs_rx_cdr :: cdr_loop :: rg_cdr_integ_byp [07:07] */
#define HS_RX_CDR_CDR_LOOP_RG_CDR_INTEG_BYP_MASK                   0x0080
#define HS_RX_CDR_CDR_LOOP_RG_CDR_INTEG_BYP_ALIGN                  0
#define HS_RX_CDR_CDR_LOOP_RG_CDR_INTEG_BYP_BITS                   1
#define HS_RX_CDR_CDR_LOOP_RG_CDR_INTEG_BYP_SHIFT                  7

/* hs_rx_cdr :: cdr_loop :: rg_cdr_kf [06:04] */
#define HS_RX_CDR_CDR_LOOP_RG_CDR_KF_MASK                          0x0070
#define HS_RX_CDR_CDR_LOOP_RG_CDR_KF_ALIGN                         0
#define HS_RX_CDR_CDR_LOOP_RG_CDR_KF_BITS                          3
#define HS_RX_CDR_CDR_LOOP_RG_CDR_KF_SHIFT                         4

/* hs_rx_cdr :: cdr_loop :: reserved2 [03:02] */
#define HS_RX_CDR_CDR_LOOP_RESERVED2_MASK                          0x000c
#define HS_RX_CDR_CDR_LOOP_RESERVED2_ALIGN                         0
#define HS_RX_CDR_CDR_LOOP_RESERVED2_BITS                          2
#define HS_RX_CDR_CDR_LOOP_RESERVED2_SHIFT                         2

/* hs_rx_cdr :: cdr_loop :: rg_cdr_kp [01:00] */
#define HS_RX_CDR_CDR_LOOP_RG_CDR_KP_MASK                          0x0003
#define HS_RX_CDR_CDR_LOOP_RG_CDR_KP_ALIGN                         0
#define HS_RX_CDR_CDR_LOOP_RG_CDR_KP_BITS                          2
#define HS_RX_CDR_CDR_LOOP_RG_CDR_KP_SHIFT                         0


/****************************************************************************
 * hs_rx_cdr :: cdr_pe_offset
 ***************************************************************************/
/* hs_rx_cdr :: cdr_pe_offset :: reserved0 [15:11] */
#define HS_RX_CDR_CDR_PE_OFFSET_RESERVED0_MASK                     0xf800
#define HS_RX_CDR_CDR_PE_OFFSET_RESERVED0_ALIGN                    0
#define HS_RX_CDR_CDR_PE_OFFSET_RESERVED0_BITS                     5
#define HS_RX_CDR_CDR_PE_OFFSET_RESERVED0_SHIFT                    11

/* hs_rx_cdr :: cdr_pe_offset :: rg_cdr_pe_os_common [10:08] */
#define HS_RX_CDR_CDR_PE_OFFSET_RG_CDR_PE_OS_COMMON_MASK           0x0700
#define HS_RX_CDR_CDR_PE_OFFSET_RG_CDR_PE_OS_COMMON_ALIGN          0
#define HS_RX_CDR_CDR_PE_OFFSET_RG_CDR_PE_OS_COMMON_BITS           3
#define HS_RX_CDR_CDR_PE_OFFSET_RG_CDR_PE_OS_COMMON_SHIFT          8

/* hs_rx_cdr :: cdr_pe_offset :: reserved1 [07:05] */
#define HS_RX_CDR_CDR_PE_OFFSET_RESERVED1_MASK                     0x00e0
#define HS_RX_CDR_CDR_PE_OFFSET_RESERVED1_ALIGN                    0
#define HS_RX_CDR_CDR_PE_OFFSET_RESERVED1_BITS                     3
#define HS_RX_CDR_CDR_PE_OFFSET_RESERVED1_SHIFT                    5

/* hs_rx_cdr :: cdr_pe_offset :: rg_cdr_pe_os_integ [04:00] */
#define HS_RX_CDR_CDR_PE_OFFSET_RG_CDR_PE_OS_INTEG_MASK            0x001f
#define HS_RX_CDR_CDR_PE_OFFSET_RG_CDR_PE_OS_INTEG_ALIGN           0
#define HS_RX_CDR_CDR_PE_OFFSET_RG_CDR_PE_OS_INTEG_BITS            5
#define HS_RX_CDR_CDR_PE_OFFSET_RG_CDR_PE_OS_INTEG_SHIFT           0


/****************************************************************************
 * hs_rx_cdr :: cdr_integ
 ***************************************************************************/
/* hs_rx_cdr :: cdr_integ :: rg_cdr_integ_val [15:00] */
#define HS_RX_CDR_CDR_INTEG_RG_CDR_INTEG_VAL_MASK                  0xffff
#define HS_RX_CDR_CDR_INTEG_RG_CDR_INTEG_VAL_ALIGN                 0
#define HS_RX_CDR_CDR_INTEG_RG_CDR_INTEG_VAL_BITS                  16
#define HS_RX_CDR_CDR_INTEG_RG_CDR_INTEG_VAL_SHIFT                 0


/****************************************************************************
 * hs_rx_cdr :: cdr_nco_rdp
 ***************************************************************************/
/* hs_rx_cdr :: cdr_nco_rdp :: reserved0 [15:15] */
#define HS_RX_CDR_CDR_NCO_RDP_RESERVED0_MASK                       0x8000
#define HS_RX_CDR_CDR_NCO_RDP_RESERVED0_ALIGN                      0
#define HS_RX_CDR_CDR_NCO_RDP_RESERVED0_BITS                       1
#define HS_RX_CDR_CDR_NCO_RDP_RESERVED0_SHIFT                      15

/* hs_rx_cdr :: cdr_nco_rdp :: rg_cdr_pi_90_nco_def [14:08] */
#define HS_RX_CDR_CDR_NCO_RDP_RG_CDR_PI_90_NCO_DEF_MASK            0x7f00
#define HS_RX_CDR_CDR_NCO_RDP_RG_CDR_PI_90_NCO_DEF_ALIGN           0
#define HS_RX_CDR_CDR_NCO_RDP_RG_CDR_PI_90_NCO_DEF_BITS            7
#define HS_RX_CDR_CDR_NCO_RDP_RG_CDR_PI_90_NCO_DEF_SHIFT           8

/* hs_rx_cdr :: cdr_nco_rdp :: reserved1 [07:07] */
#define HS_RX_CDR_CDR_NCO_RDP_RESERVED1_MASK                       0x0080
#define HS_RX_CDR_CDR_NCO_RDP_RESERVED1_ALIGN                      0
#define HS_RX_CDR_CDR_NCO_RDP_RESERVED1_BITS                       1
#define HS_RX_CDR_CDR_NCO_RDP_RESERVED1_SHIFT                      7

/* hs_rx_cdr :: cdr_nco_rdp :: rg_cdr_pi_0_nco_def [06:00] */
#define HS_RX_CDR_CDR_NCO_RDP_RG_CDR_PI_0_NCO_DEF_MASK             0x007f
#define HS_RX_CDR_CDR_NCO_RDP_RG_CDR_PI_0_NCO_DEF_ALIGN            0
#define HS_RX_CDR_CDR_NCO_RDP_RG_CDR_PI_0_NCO_DEF_BITS             7
#define HS_RX_CDR_CDR_NCO_RDP_RG_CDR_PI_0_NCO_DEF_SHIFT            0


/****************************************************************************
 * hs_rx_cdr :: cdr_nco_eye
 ***************************************************************************/
/* hs_rx_cdr :: cdr_nco_eye :: reserved0 [15:07] */
#define HS_RX_CDR_CDR_NCO_EYE_RESERVED0_MASK                       0xff80
#define HS_RX_CDR_CDR_NCO_EYE_RESERVED0_ALIGN                      0
#define HS_RX_CDR_CDR_NCO_EYE_RESERVED0_BITS                       9
#define HS_RX_CDR_CDR_NCO_EYE_RESERVED0_SHIFT                      7

/* hs_rx_cdr :: cdr_nco_eye :: rg_cdr_pi_eye_nco_def [06:00] */
#define HS_RX_CDR_CDR_NCO_EYE_RG_CDR_PI_EYE_NCO_DEF_MASK           0x007f
#define HS_RX_CDR_CDR_NCO_EYE_RG_CDR_PI_EYE_NCO_DEF_ALIGN          0
#define HS_RX_CDR_CDR_NCO_EYE_RG_CDR_PI_EYE_NCO_DEF_BITS           7
#define HS_RX_CDR_CDR_NCO_EYE_RG_CDR_PI_EYE_NCO_DEF_SHIFT          0


/****************************************************************************
 * hs_rx_cdr :: pi_os_ctrl
 ***************************************************************************/
/* hs_rx_cdr :: pi_os_ctrl :: reserved0 [15:12] */
#define HS_RX_CDR_PI_OS_CTRL_RESERVED0_MASK                        0xf000
#define HS_RX_CDR_PI_OS_CTRL_RESERVED0_ALIGN                       0
#define HS_RX_CDR_PI_OS_CTRL_RESERVED0_BITS                        4
#define HS_RX_CDR_PI_OS_CTRL_RESERVED0_SHIFT                       12

/* hs_rx_cdr :: pi_os_ctrl :: rg_cdr_pi_eye_pha_adj_en [11:11] */
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_EYE_PHA_ADJ_EN_MASK         0x0800
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_EYE_PHA_ADJ_EN_ALIGN        0
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_EYE_PHA_ADJ_EN_BITS         1
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_EYE_PHA_ADJ_EN_SHIFT        11

/* hs_rx_cdr :: pi_os_ctrl :: rg_cdr_pi_90_pha_adj_en [10:10] */
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_90_PHA_ADJ_EN_MASK          0x0400
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_90_PHA_ADJ_EN_ALIGN         0
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_90_PHA_ADJ_EN_BITS          1
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_90_PHA_ADJ_EN_SHIFT         10

/* hs_rx_cdr :: pi_os_ctrl :: rg_cdr_pi_0_pha_adj_en [09:09] */
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_0_PHA_ADJ_EN_MASK           0x0200
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_0_PHA_ADJ_EN_ALIGN          0
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_0_PHA_ADJ_EN_BITS           1
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_0_PHA_ADJ_EN_SHIFT          9

/* hs_rx_cdr :: pi_os_ctrl :: rg_cdr_pi_os_start [08:08] */
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_OS_START_MASK               0x0100
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_OS_START_ALIGN              0
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_OS_START_BITS               1
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_OS_START_SHIFT              8

/* hs_rx_cdr :: pi_os_ctrl :: rg_cdr_pi_pha_adj_val [07:05] */
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_PHA_ADJ_VAL_MASK            0x00e0
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_PHA_ADJ_VAL_ALIGN           0
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_PHA_ADJ_VAL_BITS            3
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_PHA_ADJ_VAL_SHIFT           5

/* hs_rx_cdr :: pi_os_ctrl :: rg_cdr_pi_os_cnt [04:00] */
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_OS_CNT_MASK                 0x001f
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_OS_CNT_ALIGN                0
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_OS_CNT_BITS                 5
#define HS_RX_CDR_PI_OS_CTRL_RG_CDR_PI_OS_CNT_SHIFT                0


/****************************************************************************
 * hs_rx_cdr :: man_pi_ctrl
 ***************************************************************************/
/* hs_rx_cdr :: man_pi_ctrl :: reserved0 [15:11] */
#define HS_RX_CDR_MAN_PI_CTRL_RESERVED0_MASK                       0xf800
#define HS_RX_CDR_MAN_PI_CTRL_RESERVED0_ALIGN                      0
#define HS_RX_CDR_MAN_PI_CTRL_RESERVED0_BITS                       5
#define HS_RX_CDR_MAN_PI_CTRL_RESERVED0_SHIFT                      11

/* hs_rx_cdr :: man_pi_ctrl :: rg_cdr_negate_pua_pi_updn [10:10] */
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_NEGATE_PUA_PI_UPDN_MASK       0x0400
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_NEGATE_PUA_PI_UPDN_ALIGN      0
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_NEGATE_PUA_PI_UPDN_BITS       1
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_NEGATE_PUA_PI_UPDN_SHIFT      10

/* hs_rx_cdr :: man_pi_ctrl :: rg_cdr_man_pha_adj_mode [09:09] */
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_MODE_MASK         0x0200
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_MODE_ALIGN        0
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_MODE_BITS         1
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_MODE_SHIFT        9

/* hs_rx_cdr :: man_pi_ctrl :: rg_cdr_man_pha_adj_start [08:08] */
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_START_MASK        0x0100
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_START_ALIGN       0
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_START_BITS        1
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_START_SHIFT       8

/* hs_rx_cdr :: man_pi_ctrl :: rg_cdr_man_pha_adj_cnt [07:00] */
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_CNT_MASK          0x00ff
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_CNT_ALIGN         0
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_CNT_BITS          8
#define HS_RX_CDR_MAN_PI_CTRL_RG_CDR_MAN_PHA_ADJ_CNT_SHIFT         0


/****************************************************************************
 * hs_rx_cdr :: em_ctrl
 ***************************************************************************/
/* hs_rx_cdr :: em_ctrl :: reserved0 [15:11] */
#define HS_RX_CDR_EM_CTRL_RESERVED0_MASK                           0xf800
#define HS_RX_CDR_EM_CTRL_RESERVED0_ALIGN                          0
#define HS_RX_CDR_EM_CTRL_RESERVED0_BITS                           5
#define HS_RX_CDR_EM_CTRL_RESERVED0_SHIFT                          11

/* hs_rx_cdr :: em_ctrl :: rg_eml_zero_out_eye [10:10] */
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_EYE_MASK                 0x0400
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_EYE_ALIGN                0
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_EYE_BITS                 1
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_EYE_SHIFT                10

/* hs_rx_cdr :: em_ctrl :: rg_eml_zero_out_odd_p [09:09] */
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_ODD_P_MASK               0x0200
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_ODD_P_ALIGN              0
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_ODD_P_BITS               1
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_ODD_P_SHIFT              9

/* hs_rx_cdr :: em_ctrl :: rg_eml_zero_out_even_p [08:08] */
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_EVEN_P_MASK              0x0100
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_EVEN_P_ALIGN             0
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_EVEN_P_BITS              1
#define HS_RX_CDR_EM_CTRL_RG_EML_ZERO_OUT_EVEN_P_SHIFT             8

/* hs_rx_cdr :: em_ctrl :: reserved1 [07:07] */
#define HS_RX_CDR_EM_CTRL_RESERVED1_MASK                           0x0080
#define HS_RX_CDR_EM_CTRL_RESERVED1_ALIGN                          0
#define HS_RX_CDR_EM_CTRL_RESERVED1_BITS                           1
#define HS_RX_CDR_EM_CTRL_RESERVED1_SHIFT                          7

/* hs_rx_cdr :: em_ctrl :: rg_eml_comp_start [06:06] */
#define HS_RX_CDR_EM_CTRL_RG_EML_COMP_START_MASK                   0x0040
#define HS_RX_CDR_EM_CTRL_RG_EML_COMP_START_ALIGN                  0
#define HS_RX_CDR_EM_CTRL_RG_EML_COMP_START_BITS                   1
#define HS_RX_CDR_EM_CTRL_RG_EML_COMP_START_SHIFT                  6

/* hs_rx_cdr :: em_ctrl :: rg_eml_comp_p_dly_sel [05:00] */
#define HS_RX_CDR_EM_CTRL_RG_EML_COMP_P_DLY_SEL_MASK               0x003f
#define HS_RX_CDR_EM_CTRL_RG_EML_COMP_P_DLY_SEL_ALIGN              0
#define HS_RX_CDR_EM_CTRL_RG_EML_COMP_P_DLY_SEL_BITS               6
#define HS_RX_CDR_EM_CTRL_RG_EML_COMP_P_DLY_SEL_SHIFT              0


/****************************************************************************
 * hs_rx_cdr :: em_cnt_15_0
 ***************************************************************************/
/* hs_rx_cdr :: em_cnt_15_0 :: rg_eml_comp_cnt_15_0 [15:00] */
#define HS_RX_CDR_EM_CNT_15_0_RG_EML_COMP_CNT_15_0_MASK            0xffff
#define HS_RX_CDR_EM_CNT_15_0_RG_EML_COMP_CNT_15_0_ALIGN           0
#define HS_RX_CDR_EM_CNT_15_0_RG_EML_COMP_CNT_15_0_BITS            16
#define HS_RX_CDR_EM_CNT_15_0_RG_EML_COMP_CNT_15_0_SHIFT           0


/****************************************************************************
 * hs_rx_cdr :: em_cnt_31_16
 ***************************************************************************/
/* hs_rx_cdr :: em_cnt_31_16 :: rg_eml_comp_cnt_31_16 [15:00] */
#define HS_RX_CDR_EM_CNT_31_16_RG_EML_COMP_CNT_31_16_MASK          0xffff
#define HS_RX_CDR_EM_CNT_31_16_RG_EML_COMP_CNT_31_16_ALIGN         0
#define HS_RX_CDR_EM_CNT_31_16_RG_EML_COMP_CNT_31_16_BITS          16
#define HS_RX_CDR_EM_CNT_31_16_RG_EML_COMP_CNT_31_16_SHIFT         0


/****************************************************************************
 * hs_rx_cdr :: em_cnt_47_32
 ***************************************************************************/
/* hs_rx_cdr :: em_cnt_47_32 :: rg_eml_comp_cnt_47_32 [15:00] */
#define HS_RX_CDR_EM_CNT_47_32_RG_EML_COMP_CNT_47_32_MASK          0xffff
#define HS_RX_CDR_EM_CNT_47_32_RG_EML_COMP_CNT_47_32_ALIGN         0
#define HS_RX_CDR_EM_CNT_47_32_RG_EML_COMP_CNT_47_32_BITS          16
#define HS_RX_CDR_EM_CNT_47_32_RG_EML_COMP_CNT_47_32_SHIFT         0


/****************************************************************************
 * hs_rx_cdr :: pfc_ctrl
 ***************************************************************************/
/* hs_rx_cdr :: pfc_ctrl :: reserved0 [15:14] */
#define HS_RX_CDR_PFC_CTRL_RESERVED0_MASK                          0xc000
#define HS_RX_CDR_PFC_CTRL_RESERVED0_ALIGN                         0
#define HS_RX_CDR_PFC_CTRL_RESERVED0_BITS                          2
#define HS_RX_CDR_PFC_CTRL_RESERVED0_SHIFT                         14

/* hs_rx_cdr :: pfc_ctrl :: rg_pfc_xcor_cnt_hi [13:08] */
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_CNT_HI_MASK                 0x3f00
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_CNT_HI_ALIGN                0
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_CNT_HI_BITS                 6
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_CNT_HI_SHIFT                8

/* hs_rx_cdr :: pfc_ctrl :: rg_pfc_byp_p_tran_chk [07:07] */
#define HS_RX_CDR_PFC_CTRL_RG_PFC_BYP_P_TRAN_CHK_MASK              0x0080
#define HS_RX_CDR_PFC_CTRL_RG_PFC_BYP_P_TRAN_CHK_ALIGN             0
#define HS_RX_CDR_PFC_CTRL_RG_PFC_BYP_P_TRAN_CHK_BITS              1
#define HS_RX_CDR_PFC_CTRL_RG_PFC_BYP_P_TRAN_CHK_SHIFT             7

/* hs_rx_cdr :: pfc_ctrl :: rg_pfc_xcor_start [06:06] */
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_START_MASK                  0x0040
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_START_ALIGN                 0
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_START_BITS                  1
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_START_SHIFT                 6

/* hs_rx_cdr :: pfc_ctrl :: rg_pfc_xcor_p_dly_sel [05:00] */
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_P_DLY_SEL_MASK              0x003f
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_P_DLY_SEL_ALIGN             0
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_P_DLY_SEL_BITS              6
#define HS_RX_CDR_PFC_CTRL_RG_PFC_XCOR_P_DLY_SEL_SHIFT             0


/****************************************************************************
 * hs_rx_cdr :: pfc_cnt
 ***************************************************************************/
/* hs_rx_cdr :: pfc_cnt :: rg_pfc_xcor_cnt_lo [15:00] */
#define HS_RX_CDR_PFC_CNT_RG_PFC_XCOR_CNT_LO_MASK                  0xffff
#define HS_RX_CDR_PFC_CNT_RG_PFC_XCOR_CNT_LO_ALIGN                 0
#define HS_RX_CDR_PFC_CNT_RG_PFC_XCOR_CNT_LO_BITS                  16
#define HS_RX_CDR_PFC_CNT_RG_PFC_XCOR_CNT_LO_SHIFT                 0


/****************************************************************************
 * hs_rx_cdr :: swg_period
 ***************************************************************************/
/* hs_rx_cdr :: swg_period :: rg_swg_half_period_val [15:00] */
#define HS_RX_CDR_SWG_PERIOD_RG_SWG_HALF_PERIOD_VAL_MASK           0xffff
#define HS_RX_CDR_SWG_PERIOD_RG_SWG_HALF_PERIOD_VAL_ALIGN          0
#define HS_RX_CDR_SWG_PERIOD_RG_SWG_HALF_PERIOD_VAL_BITS           16
#define HS_RX_CDR_SWG_PERIOD_RG_SWG_HALF_PERIOD_VAL_SHIFT          0


/****************************************************************************
 * hs_rx_cdr :: swg_y_val
 ***************************************************************************/
/* hs_rx_cdr :: swg_y_val :: rg_swg_y_init_val_lo [15:00] */
#define HS_RX_CDR_SWG_Y_VAL_RG_SWG_Y_INIT_VAL_LO_MASK              0xffff
#define HS_RX_CDR_SWG_Y_VAL_RG_SWG_Y_INIT_VAL_LO_ALIGN             0
#define HS_RX_CDR_SWG_Y_VAL_RG_SWG_Y_INIT_VAL_LO_BITS              16
#define HS_RX_CDR_SWG_Y_VAL_RG_SWG_Y_INIT_VAL_LO_SHIFT             0


/****************************************************************************
 * hs_rx_cdr :: swg_yscale
 ***************************************************************************/
/* hs_rx_cdr :: swg_yscale :: rg_swg_delta1_shift_val [15:13] */
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_DELTA1_SHIFT_VAL_MASK          0xe000
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_DELTA1_SHIFT_VAL_ALIGN         0
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_DELTA1_SHIFT_VAL_BITS          3
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_DELTA1_SHIFT_VAL_SHIFT         13

/* hs_rx_cdr :: swg_yscale :: rg_swg_delta2_shift_val [12:10] */
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_DELTA2_SHIFT_VAL_MASK          0x1c00
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_DELTA2_SHIFT_VAL_ALIGN         0
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_DELTA2_SHIFT_VAL_BITS          3
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_DELTA2_SHIFT_VAL_SHIFT         10

/* hs_rx_cdr :: swg_yscale :: rg_swg_y_init_val_hi [09:08] */
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_Y_INIT_VAL_HI_MASK             0x0300
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_Y_INIT_VAL_HI_ALIGN            0
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_Y_INIT_VAL_HI_BITS             2
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_Y_INIT_VAL_HI_SHIFT            8

/* hs_rx_cdr :: swg_yscale :: reserved0 [07:07] */
#define HS_RX_CDR_SWG_YSCALE_RESERVED0_MASK                        0x0080
#define HS_RX_CDR_SWG_YSCALE_RESERVED0_ALIGN                       0
#define HS_RX_CDR_SWG_YSCALE_RESERVED0_BITS                        1
#define HS_RX_CDR_SWG_YSCALE_RESERVED0_SHIFT                       7

/* hs_rx_cdr :: swg_yscale :: rg_swg_enable [06:06] */
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_ENABLE_MASK                    0x0040
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_ENABLE_ALIGN                   0
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_ENABLE_BITS                    1
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_ENABLE_SHIFT                   6

/* hs_rx_cdr :: swg_yscale :: rg_swg_y_scale_val [05:00] */
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_Y_SCALE_VAL_MASK               0x003f
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_Y_SCALE_VAL_ALIGN              0
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_Y_SCALE_VAL_BITS               6
#define HS_RX_CDR_SWG_YSCALE_RG_SWG_Y_SCALE_VAL_SHIFT              0


/****************************************************************************
 * hs_rx_cdr :: swg_delta_1
 ***************************************************************************/
/* hs_rx_cdr :: swg_delta_1 :: rg_swg_delta1_init_val_lo [15:00] */
#define HS_RX_CDR_SWG_DELTA_1_RG_SWG_DELTA1_INIT_VAL_LO_MASK       0xffff
#define HS_RX_CDR_SWG_DELTA_1_RG_SWG_DELTA1_INIT_VAL_LO_ALIGN      0
#define HS_RX_CDR_SWG_DELTA_1_RG_SWG_DELTA1_INIT_VAL_LO_BITS       16
#define HS_RX_CDR_SWG_DELTA_1_RG_SWG_DELTA1_INIT_VAL_LO_SHIFT      0


/****************************************************************************
 * hs_rx_cdr :: swg_delta_2
 ***************************************************************************/
/* hs_rx_cdr :: swg_delta_2 :: rg_swg_delta2_init_val_lo [15:00] */
#define HS_RX_CDR_SWG_DELTA_2_RG_SWG_DELTA2_INIT_VAL_LO_MASK       0xffff
#define HS_RX_CDR_SWG_DELTA_2_RG_SWG_DELTA2_INIT_VAL_LO_ALIGN      0
#define HS_RX_CDR_SWG_DELTA_2_RG_SWG_DELTA2_INIT_VAL_LO_BITS       16
#define HS_RX_CDR_SWG_DELTA_2_RG_SWG_DELTA2_INIT_VAL_LO_SHIFT      0


/****************************************************************************
 * hs_rx_cdr :: swg_delta_3
 ***************************************************************************/
/* hs_rx_cdr :: swg_delta_3 :: rg_swg_delta1_init_val_hi [15:14] */
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA1_INIT_VAL_HI_MASK       0xc000
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA1_INIT_VAL_HI_ALIGN      0
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA1_INIT_VAL_HI_BITS       2
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA1_INIT_VAL_HI_SHIFT      14

/* hs_rx_cdr :: swg_delta_3 :: rg_swg_delta2_init_val_hi [13:12] */
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA2_INIT_VAL_HI_MASK       0x3000
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA2_INIT_VAL_HI_ALIGN      0
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA2_INIT_VAL_HI_BITS       2
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA2_INIT_VAL_HI_SHIFT      12

/* hs_rx_cdr :: swg_delta_3 :: rg_swg_delta3_val [11:00] */
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA3_VAL_MASK               0x0fff
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA3_VAL_ALIGN              0
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA3_VAL_BITS               12
#define HS_RX_CDR_SWG_DELTA_3_RG_SWG_DELTA3_VAL_SHIFT              0


/****************************************************************************
 * hs_rx_cdr :: cdr_stat_tasks
 ***************************************************************************/
/* hs_rx_cdr :: cdr_stat_tasks :: reserved0 [15:14] */
#define HS_RX_CDR_CDR_STAT_TASKS_RESERVED0_MASK                    0xc000
#define HS_RX_CDR_CDR_STAT_TASKS_RESERVED0_ALIGN                   0
#define HS_RX_CDR_CDR_STAT_TASKS_RESERVED0_BITS                    2
#define HS_RX_CDR_CDR_STAT_TASKS_RESERVED0_SHIFT                   14

/* hs_rx_cdr :: cdr_stat_tasks :: cdr_rg_integ_sat_det_lh [13:13] */
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_INTEG_SAT_DET_LH_MASK      0x2000
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_INTEG_SAT_DET_LH_ALIGN     0
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_INTEG_SAT_DET_LH_BITS      1
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_INTEG_SAT_DET_LH_SHIFT     13

/* hs_rx_cdr :: cdr_stat_tasks :: cdr_rg_integ_consec_sat_det_lh [12:12] */
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_INTEG_CONSEC_SAT_DET_LH_MASK 0x1000
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_INTEG_CONSEC_SAT_DET_LH_ALIGN 0
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_INTEG_CONSEC_SAT_DET_LH_BITS 1
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_INTEG_CONSEC_SAT_DET_LH_SHIFT 12

/* hs_rx_cdr :: cdr_stat_tasks :: pfc_rg_xcor_done_lh [11:11] */
#define HS_RX_CDR_CDR_STAT_TASKS_PFC_RG_XCOR_DONE_LH_MASK          0x0800
#define HS_RX_CDR_CDR_STAT_TASKS_PFC_RG_XCOR_DONE_LH_ALIGN         0
#define HS_RX_CDR_CDR_STAT_TASKS_PFC_RG_XCOR_DONE_LH_BITS          1
#define HS_RX_CDR_CDR_STAT_TASKS_PFC_RG_XCOR_DONE_LH_SHIFT         11

/* hs_rx_cdr :: cdr_stat_tasks :: eml_rg_comp_done_lh [10:10] */
#define HS_RX_CDR_CDR_STAT_TASKS_EML_RG_COMP_DONE_LH_MASK          0x0400
#define HS_RX_CDR_CDR_STAT_TASKS_EML_RG_COMP_DONE_LH_ALIGN         0
#define HS_RX_CDR_CDR_STAT_TASKS_EML_RG_COMP_DONE_LH_BITS          1
#define HS_RX_CDR_CDR_STAT_TASKS_EML_RG_COMP_DONE_LH_SHIFT         10

/* hs_rx_cdr :: cdr_stat_tasks :: cdr_rg_man_pha_adj_done_lh [09:09] */
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_MAN_PHA_ADJ_DONE_LH_MASK   0x0200
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_MAN_PHA_ADJ_DONE_LH_ALIGN  0
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_MAN_PHA_ADJ_DONE_LH_BITS   1
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_MAN_PHA_ADJ_DONE_LH_SHIFT  9

/* hs_rx_cdr :: cdr_stat_tasks :: cdr_rg_pi_os_done_lh [08:08] */
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_PI_OS_DONE_LH_MASK         0x0100
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_PI_OS_DONE_LH_ALIGN        0
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_PI_OS_DONE_LH_BITS         1
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_PI_OS_DONE_LH_SHIFT        8

/* hs_rx_cdr :: cdr_stat_tasks :: reserved1 [07:07] */
#define HS_RX_CDR_CDR_STAT_TASKS_RESERVED1_MASK                    0x0080
#define HS_RX_CDR_CDR_STAT_TASKS_RESERVED1_ALIGN                   0
#define HS_RX_CDR_CDR_STAT_TASKS_RESERVED1_BITS                    1
#define HS_RX_CDR_CDR_STAT_TASKS_RESERVED1_SHIFT                   7

/* hs_rx_cdr :: cdr_stat_tasks :: cdr_rg_pe_sum [06:00] */
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_PE_SUM_MASK                0x007f
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_PE_SUM_ALIGN               0
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_PE_SUM_BITS                7
#define HS_RX_CDR_CDR_STAT_TASKS_CDR_RG_PE_SUM_SHIFT               0


/****************************************************************************
 * hs_rx_cdr :: cdr_stat_integ
 ***************************************************************************/
/* hs_rx_cdr :: cdr_stat_integ :: cdr_rg_integ_val [15:00] */
#define HS_RX_CDR_CDR_STAT_INTEG_CDR_RG_INTEG_VAL_MASK             0xffff
#define HS_RX_CDR_CDR_STAT_INTEG_CDR_RG_INTEG_VAL_ALIGN            0
#define HS_RX_CDR_CDR_STAT_INTEG_CDR_RG_INTEG_VAL_BITS             16
#define HS_RX_CDR_CDR_STAT_INTEG_CDR_RG_INTEG_VAL_SHIFT            0


/****************************************************************************
 * hs_rx_cdr :: cdr_stat_nco_rdp
 ***************************************************************************/
/* hs_rx_cdr :: cdr_stat_nco_rdp :: reserved0 [15:15] */
#define HS_RX_CDR_CDR_STAT_NCO_RDP_RESERVED0_MASK                  0x8000
#define HS_RX_CDR_CDR_STAT_NCO_RDP_RESERVED0_ALIGN                 0
#define HS_RX_CDR_CDR_STAT_NCO_RDP_RESERVED0_BITS                  1
#define HS_RX_CDR_CDR_STAT_NCO_RDP_RESERVED0_SHIFT                 15

/* hs_rx_cdr :: cdr_stat_nco_rdp :: cdr_rg_pi_90_nco [14:08] */
#define HS_RX_CDR_CDR_STAT_NCO_RDP_CDR_RG_PI_90_NCO_MASK           0x7f00
#define HS_RX_CDR_CDR_STAT_NCO_RDP_CDR_RG_PI_90_NCO_ALIGN          0
#define HS_RX_CDR_CDR_STAT_NCO_RDP_CDR_RG_PI_90_NCO_BITS           7
#define HS_RX_CDR_CDR_STAT_NCO_RDP_CDR_RG_PI_90_NCO_SHIFT          8

/* hs_rx_cdr :: cdr_stat_nco_rdp :: reserved1 [07:07] */
#define HS_RX_CDR_CDR_STAT_NCO_RDP_RESERVED1_MASK                  0x0080
#define HS_RX_CDR_CDR_STAT_NCO_RDP_RESERVED1_ALIGN                 0
#define HS_RX_CDR_CDR_STAT_NCO_RDP_RESERVED1_BITS                  1
#define HS_RX_CDR_CDR_STAT_NCO_RDP_RESERVED1_SHIFT                 7

/* hs_rx_cdr :: cdr_stat_nco_rdp :: cdr_rg_pi_0_nco [06:00] */
#define HS_RX_CDR_CDR_STAT_NCO_RDP_CDR_RG_PI_0_NCO_MASK            0x007f
#define HS_RX_CDR_CDR_STAT_NCO_RDP_CDR_RG_PI_0_NCO_ALIGN           0
#define HS_RX_CDR_CDR_STAT_NCO_RDP_CDR_RG_PI_0_NCO_BITS            7
#define HS_RX_CDR_CDR_STAT_NCO_RDP_CDR_RG_PI_0_NCO_SHIFT           0


/****************************************************************************
 * hs_rx_cdr :: cdr_stat_nco_eye
 ***************************************************************************/
/* hs_rx_cdr :: cdr_stat_nco_eye :: reserved0 [15:07] */
#define HS_RX_CDR_CDR_STAT_NCO_EYE_RESERVED0_MASK                  0xff80
#define HS_RX_CDR_CDR_STAT_NCO_EYE_RESERVED0_ALIGN                 0
#define HS_RX_CDR_CDR_STAT_NCO_EYE_RESERVED0_BITS                  9
#define HS_RX_CDR_CDR_STAT_NCO_EYE_RESERVED0_SHIFT                 7

/* hs_rx_cdr :: cdr_stat_nco_eye :: cdr_rg_pi_eye_nco [06:00] */
#define HS_RX_CDR_CDR_STAT_NCO_EYE_CDR_RG_PI_EYE_NCO_MASK          0x007f
#define HS_RX_CDR_CDR_STAT_NCO_EYE_CDR_RG_PI_EYE_NCO_ALIGN         0
#define HS_RX_CDR_CDR_STAT_NCO_EYE_CDR_RG_PI_EYE_NCO_BITS          7
#define HS_RX_CDR_CDR_STAT_NCO_EYE_CDR_RG_PI_EYE_NCO_SHIFT         0


/****************************************************************************
 * hs_rx_cdr :: eml_stat_acc_hi
 ***************************************************************************/
/* hs_rx_cdr :: eml_stat_acc_hi :: reserved0 [15:08] */
#define HS_RX_CDR_EML_STAT_ACC_HI_RESERVED0_MASK                   0xff00
#define HS_RX_CDR_EML_STAT_ACC_HI_RESERVED0_ALIGN                  0
#define HS_RX_CDR_EML_STAT_ACC_HI_RESERVED0_BITS                   8
#define HS_RX_CDR_EML_STAT_ACC_HI_RESERVED0_SHIFT                  8

/* hs_rx_cdr :: eml_stat_acc_hi :: eml_rg_comp_mismatch_cnt_hi [07:00] */
#define HS_RX_CDR_EML_STAT_ACC_HI_EML_RG_COMP_MISMATCH_CNT_HI_MASK 0x00ff
#define HS_RX_CDR_EML_STAT_ACC_HI_EML_RG_COMP_MISMATCH_CNT_HI_ALIGN 0
#define HS_RX_CDR_EML_STAT_ACC_HI_EML_RG_COMP_MISMATCH_CNT_HI_BITS 8
#define HS_RX_CDR_EML_STAT_ACC_HI_EML_RG_COMP_MISMATCH_CNT_HI_SHIFT 0


/****************************************************************************
 * hs_rx_cdr :: eml_stat_acc_lo
 ***************************************************************************/
/* hs_rx_cdr :: eml_stat_acc_lo :: eml_rg_comp_mismatch_cnt_lo [15:00] */
#define HS_RX_CDR_EML_STAT_ACC_LO_EML_RG_COMP_MISMATCH_CNT_LO_MASK 0xffff
#define HS_RX_CDR_EML_STAT_ACC_LO_EML_RG_COMP_MISMATCH_CNT_LO_ALIGN 0
#define HS_RX_CDR_EML_STAT_ACC_LO_EML_RG_COMP_MISMATCH_CNT_LO_BITS 16
#define HS_RX_CDR_EML_STAT_ACC_LO_EML_RG_COMP_MISMATCH_CNT_LO_SHIFT 0


/****************************************************************************
 * hs_rx_cdr :: pfc_stat_acc_hi
 ***************************************************************************/
/* hs_rx_cdr :: pfc_stat_acc_hi :: pfc_rg_xcor_val_hi [15:00] */
#define HS_RX_CDR_PFC_STAT_ACC_HI_PFC_RG_XCOR_VAL_HI_MASK          0xffff
#define HS_RX_CDR_PFC_STAT_ACC_HI_PFC_RG_XCOR_VAL_HI_ALIGN         0
#define HS_RX_CDR_PFC_STAT_ACC_HI_PFC_RG_XCOR_VAL_HI_BITS          16
#define HS_RX_CDR_PFC_STAT_ACC_HI_PFC_RG_XCOR_VAL_HI_SHIFT         0


/****************************************************************************
 * hs_rx_cdr :: pfc_stat_acc_lo
 ***************************************************************************/
/* hs_rx_cdr :: pfc_stat_acc_lo :: pfc_rg_xcor_val_lo [15:00] */
#define HS_RX_CDR_PFC_STAT_ACC_LO_PFC_RG_XCOR_VAL_LO_MASK          0xffff
#define HS_RX_CDR_PFC_STAT_ACC_LO_PFC_RG_XCOR_VAL_LO_ALIGN         0
#define HS_RX_CDR_PFC_STAT_ACC_LO_PFC_RG_XCOR_VAL_LO_BITS          16
#define HS_RX_CDR_PFC_STAT_ACC_LO_PFC_RG_XCOR_VAL_LO_SHIFT         0


/****************************************************************************
 * hs_rx_cdr_cm_regs
 ***************************************************************************/
/****************************************************************************
 * hs_rx_cdr_cm :: cdr_common_wr_en
 ***************************************************************************/
/* hs_rx_cdr_cm :: cdr_common_wr_en :: reserved0 [15:06] */
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RESERVED0_MASK               0xffc0
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RESERVED0_ALIGN              0
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RESERVED0_BITS               10
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RESERVED0_SHIFT              6

/* hs_rx_cdr_cm :: cdr_common_wr_en :: rg_cdr_integ_consec_sat_det_cntrl_wr_en [05:05] */
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_INTEG_CONSEC_SAT_DET_CNTRL_WR_EN_MASK 0x0020
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_INTEG_CONSEC_SAT_DET_CNTRL_WR_EN_ALIGN 0
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_INTEG_CONSEC_SAT_DET_CNTRL_WR_EN_BITS 1
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_INTEG_CONSEC_SAT_DET_CNTRL_WR_EN_SHIFT 5

/* hs_rx_cdr_cm :: cdr_common_wr_en :: rg_cdr_pe_os_integ_wr_en [04:04] */
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_PE_OS_INTEG_WR_EN_MASK 0x0010
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_PE_OS_INTEG_WR_EN_ALIGN 0
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_PE_OS_INTEG_WR_EN_BITS 1
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_PE_OS_INTEG_WR_EN_SHIFT 4

/* hs_rx_cdr_cm :: cdr_common_wr_en :: rg_cdr_pe_os_common_wr_en [03:03] */
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_PE_OS_COMMON_WR_EN_MASK 0x0008
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_PE_OS_COMMON_WR_EN_ALIGN 0
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_PE_OS_COMMON_WR_EN_BITS 1
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_PE_OS_COMMON_WR_EN_SHIFT 3

/* hs_rx_cdr_cm :: cdr_common_wr_en :: rg_cdr_integ_wr_en [02:02] */
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_INTEG_WR_EN_MASK      0x0004
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_INTEG_WR_EN_ALIGN     0
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_INTEG_WR_EN_BITS      1
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_INTEG_WR_EN_SHIFT     2

/* hs_rx_cdr_cm :: cdr_common_wr_en :: rg_cdr_kf_wr_en [01:01] */
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_KF_WR_EN_MASK         0x0002
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_KF_WR_EN_ALIGN        0
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_KF_WR_EN_BITS         1
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_KF_WR_EN_SHIFT        1

/* hs_rx_cdr_cm :: cdr_common_wr_en :: rg_cdr_kp_wr_en [00:00] */
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_KP_WR_EN_MASK         0x0001
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_KP_WR_EN_ALIGN        0
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_KP_WR_EN_BITS         1
#define HS_RX_CDR_CM_CDR_COMMON_WR_EN_RG_CDR_KP_WR_EN_SHIFT        0


/****************************************************************************
 * hs_rx_cdr_sh_regs
 ***************************************************************************/
/****************************************************************************
 * hs_rx_cdr_sh :: sh_cdr_stat_tasks
 ***************************************************************************/
/* hs_rx_cdr_sh :: sh_cdr_stat_tasks :: reserved0 [15:14] */
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_RESERVED0_MASK              0xc000
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_RESERVED0_ALIGN             0
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_RESERVED0_BITS              2
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_RESERVED0_SHIFT             14

/* hs_rx_cdr_sh :: sh_cdr_stat_tasks :: cdr_rg_sh_integ_sat_det_lh [13:13] */
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_INTEG_SAT_DET_LH_MASK 0x2000
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_INTEG_SAT_DET_LH_ALIGN 0
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_INTEG_SAT_DET_LH_BITS 1
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_INTEG_SAT_DET_LH_SHIFT 13

/* hs_rx_cdr_sh :: sh_cdr_stat_tasks :: cdr_rg_sh_integ_consec_sat_det_lh [12:12] */
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_INTEG_CONSEC_SAT_DET_LH_MASK 0x1000
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_INTEG_CONSEC_SAT_DET_LH_ALIGN 0
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_INTEG_CONSEC_SAT_DET_LH_BITS 1
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_INTEG_CONSEC_SAT_DET_LH_SHIFT 12

/* hs_rx_cdr_sh :: sh_cdr_stat_tasks :: pfc_rg_sh_xcor_done_lh [11:11] */
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_PFC_RG_SH_XCOR_DONE_LH_MASK 0x0800
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_PFC_RG_SH_XCOR_DONE_LH_ALIGN 0
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_PFC_RG_SH_XCOR_DONE_LH_BITS 1
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_PFC_RG_SH_XCOR_DONE_LH_SHIFT 11

/* hs_rx_cdr_sh :: sh_cdr_stat_tasks :: eml_rg_sh_comp_done_lh [10:10] */
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_EML_RG_SH_COMP_DONE_LH_MASK 0x0400
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_EML_RG_SH_COMP_DONE_LH_ALIGN 0
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_EML_RG_SH_COMP_DONE_LH_BITS 1
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_EML_RG_SH_COMP_DONE_LH_SHIFT 10

/* hs_rx_cdr_sh :: sh_cdr_stat_tasks :: cdr_rg_sh_man_pha_adj_done_lh [09:09] */
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_MAN_PHA_ADJ_DONE_LH_MASK 0x0200
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_MAN_PHA_ADJ_DONE_LH_ALIGN 0
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_MAN_PHA_ADJ_DONE_LH_BITS 1
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_MAN_PHA_ADJ_DONE_LH_SHIFT 9

/* hs_rx_cdr_sh :: sh_cdr_stat_tasks :: cdr_rg_sh_pi_os_done_lh [08:08] */
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_PI_OS_DONE_LH_MASK 0x0100
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_PI_OS_DONE_LH_ALIGN 0
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_PI_OS_DONE_LH_BITS 1
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_PI_OS_DONE_LH_SHIFT 8

/* hs_rx_cdr_sh :: sh_cdr_stat_tasks :: reserved1 [07:07] */
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_RESERVED1_MASK              0x0080
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_RESERVED1_ALIGN             0
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_RESERVED1_BITS              1
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_RESERVED1_SHIFT             7

/* hs_rx_cdr_sh :: sh_cdr_stat_tasks :: cdr_rg_sh_pe_sum [06:00] */
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_PE_SUM_MASK       0x007f
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_PE_SUM_ALIGN      0
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_PE_SUM_BITS       7
#define HS_RX_CDR_SH_SH_CDR_STAT_TASKS_CDR_RG_SH_PE_SUM_SHIFT      0


/****************************************************************************
 * hs_rx_cdr_sh :: sh_cdr_stat_integ
 ***************************************************************************/
/* hs_rx_cdr_sh :: sh_cdr_stat_integ :: cdr_rg_sh_integ_val [15:00] */
#define HS_RX_CDR_SH_SH_CDR_STAT_INTEG_CDR_RG_SH_INTEG_VAL_MASK    0xffff
#define HS_RX_CDR_SH_SH_CDR_STAT_INTEG_CDR_RG_SH_INTEG_VAL_ALIGN   0
#define HS_RX_CDR_SH_SH_CDR_STAT_INTEG_CDR_RG_SH_INTEG_VAL_BITS    16
#define HS_RX_CDR_SH_SH_CDR_STAT_INTEG_CDR_RG_SH_INTEG_VAL_SHIFT   0


/****************************************************************************
 * hs_rx_cdr_sh :: sh_cdr_stat_nco_rdp
 ***************************************************************************/
/* hs_rx_cdr_sh :: sh_cdr_stat_nco_rdp :: reserved0 [15:15] */
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_RESERVED0_MASK            0x8000
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_RESERVED0_ALIGN           0
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_RESERVED0_BITS            1
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_RESERVED0_SHIFT           15

/* hs_rx_cdr_sh :: sh_cdr_stat_nco_rdp :: cdr_rg_sh_pi_90_nco [14:08] */
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_CDR_RG_SH_PI_90_NCO_MASK  0x7f00
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_CDR_RG_SH_PI_90_NCO_ALIGN 0
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_CDR_RG_SH_PI_90_NCO_BITS  7
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_CDR_RG_SH_PI_90_NCO_SHIFT 8

/* hs_rx_cdr_sh :: sh_cdr_stat_nco_rdp :: reserved1 [07:07] */
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_RESERVED1_MASK            0x0080
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_RESERVED1_ALIGN           0
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_RESERVED1_BITS            1
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_RESERVED1_SHIFT           7

/* hs_rx_cdr_sh :: sh_cdr_stat_nco_rdp :: cdr_rg_sh_pi_0_nco [06:00] */
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_CDR_RG_SH_PI_0_NCO_MASK   0x007f
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_CDR_RG_SH_PI_0_NCO_ALIGN  0
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_CDR_RG_SH_PI_0_NCO_BITS   7
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_RDP_CDR_RG_SH_PI_0_NCO_SHIFT  0


/****************************************************************************
 * hs_rx_cdr_sh :: sh_cdr_stat_nco_eye
 ***************************************************************************/
/* hs_rx_cdr_sh :: sh_cdr_stat_nco_eye :: reserved0 [15:07] */
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_EYE_RESERVED0_MASK            0xff80
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_EYE_RESERVED0_ALIGN           0
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_EYE_RESERVED0_BITS            9
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_EYE_RESERVED0_SHIFT           7

/* hs_rx_cdr_sh :: sh_cdr_stat_nco_eye :: cdr_rg_sh_pi_eye_nco [06:00] */
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_EYE_CDR_RG_SH_PI_EYE_NCO_MASK 0x007f
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_EYE_CDR_RG_SH_PI_EYE_NCO_ALIGN 0
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_EYE_CDR_RG_SH_PI_EYE_NCO_BITS 7
#define HS_RX_CDR_SH_SH_CDR_STAT_NCO_EYE_CDR_RG_SH_PI_EYE_NCO_SHIFT 0


/****************************************************************************
 * hs_rx_cdr_sh :: sh_eml_stat_acc_hi
 ***************************************************************************/
/* hs_rx_cdr_sh :: sh_eml_stat_acc_hi :: reserved0 [15:08] */
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_HI_RESERVED0_MASK             0xff00
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_HI_RESERVED0_ALIGN            0
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_HI_RESERVED0_BITS             8
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_HI_RESERVED0_SHIFT            8

/* hs_rx_cdr_sh :: sh_eml_stat_acc_hi :: eml_rg_sh_comp_mismatch_cnt_hi [07:00] */
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_HI_EML_RG_SH_COMP_MISMATCH_CNT_HI_MASK 0x00ff
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_HI_EML_RG_SH_COMP_MISMATCH_CNT_HI_ALIGN 0
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_HI_EML_RG_SH_COMP_MISMATCH_CNT_HI_BITS 8
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_HI_EML_RG_SH_COMP_MISMATCH_CNT_HI_SHIFT 0


/****************************************************************************
 * hs_rx_cdr_sh :: sh_eml_stat_acc_lo
 ***************************************************************************/
/* hs_rx_cdr_sh :: sh_eml_stat_acc_lo :: eml_rg_sh_comp_mismatch_cnt_lo [15:00] */
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_LO_EML_RG_SH_COMP_MISMATCH_CNT_LO_MASK 0xffff
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_LO_EML_RG_SH_COMP_MISMATCH_CNT_LO_ALIGN 0
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_LO_EML_RG_SH_COMP_MISMATCH_CNT_LO_BITS 16
#define HS_RX_CDR_SH_SH_EML_STAT_ACC_LO_EML_RG_SH_COMP_MISMATCH_CNT_LO_SHIFT 0


/****************************************************************************
 * hs_rx_cdr_sh :: sh_pfc_stat_acc_hi
 ***************************************************************************/
/* hs_rx_cdr_sh :: sh_pfc_stat_acc_hi :: pfc_rg_sh_xcor_val_hi [15:00] */
#define HS_RX_CDR_SH_SH_PFC_STAT_ACC_HI_PFC_RG_SH_XCOR_VAL_HI_MASK 0xffff
#define HS_RX_CDR_SH_SH_PFC_STAT_ACC_HI_PFC_RG_SH_XCOR_VAL_HI_ALIGN 0
#define HS_RX_CDR_SH_SH_PFC_STAT_ACC_HI_PFC_RG_SH_XCOR_VAL_HI_BITS 16
#define HS_RX_CDR_SH_SH_PFC_STAT_ACC_HI_PFC_RG_SH_XCOR_VAL_HI_SHIFT 0


/****************************************************************************
 * hs_rx_cdr_sh :: sh_pfc_stat_acc_lo
 ***************************************************************************/
/* hs_rx_cdr_sh :: sh_pfc_stat_acc_lo :: pfc_rg_sh_xcor_val_lo [15:00] */
#define HS_RX_CDR_SH_SH_PFC_STAT_ACC_LO_PFC_RG_SH_XCOR_VAL_LO_MASK 0xffff
#define HS_RX_CDR_SH_SH_PFC_STAT_ACC_LO_PFC_RG_SH_XCOR_VAL_LO_ALIGN 0
#define HS_RX_CDR_SH_SH_PFC_STAT_ACC_LO_PFC_RG_SH_XCOR_VAL_LO_BITS 16
#define HS_RX_CDR_SH_SH_PFC_STAT_ACC_LO_PFC_RG_SH_XCOR_VAL_LO_SHIFT 0


/****************************************************************************
 * hs_tx_cdr_tpc_regs
 ***************************************************************************/
/****************************************************************************
 * hs_tx_cdr_tpc :: tpc_ctrl
 ***************************************************************************/
/* hs_tx_cdr_tpc :: tpc_ctrl :: reserved0 [15:07] */
#define HS_TX_CDR_TPC_TPC_CTRL_RESERVED0_MASK                      0xff80
#define HS_TX_CDR_TPC_TPC_CTRL_RESERVED0_ALIGN                     0
#define HS_TX_CDR_TPC_TPC_CTRL_RESERVED0_BITS                      9
#define HS_TX_CDR_TPC_TPC_CTRL_RESERVED0_SHIFT                     7

/* hs_tx_cdr_tpc :: tpc_ctrl :: rg_tpc_soft_rstb [06:06] */
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_SOFT_RSTB_MASK               0x0040
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_SOFT_RSTB_ALIGN              0
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_SOFT_RSTB_BITS               1
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_SOFT_RSTB_SHIFT              6

/* hs_tx_cdr_tpc :: tpc_ctrl :: rg_tpc_bw_cntrl_wr_en [05:05] */
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_BW_CNTRL_WR_EN_MASK          0x0020
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_BW_CNTRL_WR_EN_ALIGN         0
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_BW_CNTRL_WR_EN_BITS          1
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_BW_CNTRL_WR_EN_SHIFT         5

/* hs_tx_cdr_tpc :: tpc_ctrl :: rg_tpc_bw_cntrl [04:02] */
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_BW_CNTRL_MASK                0x001c
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_BW_CNTRL_ALIGN               0
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_BW_CNTRL_BITS                3
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_BW_CNTRL_SHIFT               2

/* hs_tx_cdr_tpc :: tpc_ctrl :: rg_tpc_iir_soft_rstb [01:01] */
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_IIR_SOFT_RSTB_MASK           0x0002
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_IIR_SOFT_RSTB_ALIGN          0
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_IIR_SOFT_RSTB_BITS           1
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_IIR_SOFT_RSTB_SHIFT          1

/* hs_tx_cdr_tpc :: tpc_ctrl :: rg_tpc_sd_soft_rstb [00:00] */
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_SD_SOFT_RSTB_MASK            0x0001
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_SD_SOFT_RSTB_ALIGN           0
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_SD_SOFT_RSTB_BITS            1
#define HS_TX_CDR_TPC_TPC_CTRL_RG_TPC_SD_SOFT_RSTB_SHIFT           0


/****************************************************************************
 * hs_tx_cdr_tpc :: tpc_iir
 ***************************************************************************/
/* hs_tx_cdr_tpc :: tpc_iir :: rg_tpc_iir_msb_15b_force [15:15] */
#define HS_TX_CDR_TPC_TPC_IIR_RG_TPC_IIR_MSB_15B_FORCE_MASK        0x8000
#define HS_TX_CDR_TPC_TPC_IIR_RG_TPC_IIR_MSB_15B_FORCE_ALIGN       0
#define HS_TX_CDR_TPC_TPC_IIR_RG_TPC_IIR_MSB_15B_FORCE_BITS        1
#define HS_TX_CDR_TPC_TPC_IIR_RG_TPC_IIR_MSB_15B_FORCE_SHIFT       15

/* hs_tx_cdr_tpc :: tpc_iir :: rg_tpc_iir_msb_15b_force_val [14:00] */
#define HS_TX_CDR_TPC_TPC_IIR_RG_TPC_IIR_MSB_15B_FORCE_VAL_MASK    0x7fff
#define HS_TX_CDR_TPC_TPC_IIR_RG_TPC_IIR_MSB_15B_FORCE_VAL_ALIGN   0
#define HS_TX_CDR_TPC_TPC_IIR_RG_TPC_IIR_MSB_15B_FORCE_VAL_BITS    15
#define HS_TX_CDR_TPC_TPC_IIR_RG_TPC_IIR_MSB_15B_FORCE_VAL_SHIFT   0


/****************************************************************************
 * hs_tx_cdr_tpc :: tpc_nco
 ***************************************************************************/
/* hs_tx_cdr_tpc :: tpc_nco :: reserved0 [15:07] */
#define HS_TX_CDR_TPC_TPC_NCO_RESERVED0_MASK                       0xff80
#define HS_TX_CDR_TPC_TPC_NCO_RESERVED0_ALIGN                      0
#define HS_TX_CDR_TPC_TPC_NCO_RESERVED0_BITS                       9
#define HS_TX_CDR_TPC_TPC_NCO_RESERVED0_SHIFT                      7

/* hs_tx_cdr_tpc :: tpc_nco :: rg_tpc_pi_nco_def [06:00] */
#define HS_TX_CDR_TPC_TPC_NCO_RG_TPC_PI_NCO_DEF_MASK               0x007f
#define HS_TX_CDR_TPC_TPC_NCO_RG_TPC_PI_NCO_DEF_ALIGN              0
#define HS_TX_CDR_TPC_TPC_NCO_RG_TPC_PI_NCO_DEF_BITS               7
#define HS_TX_CDR_TPC_TPC_NCO_RG_TPC_PI_NCO_DEF_SHIFT              0


/****************************************************************************
 * hs_tx_cdr_tpc :: tpc_pi_man_ctrl
 ***************************************************************************/
/* hs_tx_cdr_tpc :: tpc_pi_man_ctrl :: rg_tpc_man_pha_adj_cnt [15:08] */
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_CNT_MASK  0xff00
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_CNT_ALIGN 0
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_CNT_BITS  8
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_CNT_SHIFT 8

/* hs_tx_cdr_tpc :: tpc_pi_man_ctrl :: reserved0 [07:05] */
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RESERVED0_MASK               0x00e0
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RESERVED0_ALIGN              0
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RESERVED0_BITS               3
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RESERVED0_SHIFT              5

/* hs_tx_cdr_tpc :: tpc_pi_man_ctrl :: rg_tpc_pi_pha_adj_val [04:02] */
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_PI_PHA_ADJ_VAL_MASK   0x001c
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_PI_PHA_ADJ_VAL_ALIGN  0
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_PI_PHA_ADJ_VAL_BITS   3
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_PI_PHA_ADJ_VAL_SHIFT  2

/* hs_tx_cdr_tpc :: tpc_pi_man_ctrl :: rg_tpc_man_pha_adj_mode [01:01] */
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_MODE_MASK 0x0002
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_MODE_ALIGN 0
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_MODE_BITS 1
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_MODE_SHIFT 1

/* hs_tx_cdr_tpc :: tpc_pi_man_ctrl :: rg_tpc_man_pha_adj_start [00:00] */
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_START_MASK 0x0001
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_START_ALIGN 0
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_START_BITS 1
#define HS_TX_CDR_TPC_TPC_PI_MAN_CTRL_RG_TPC_MAN_PHA_ADJ_START_SHIFT 0


/****************************************************************************
 * hs_tx_cdr_tpc :: tpc_stat_pi
 ***************************************************************************/
/* hs_tx_cdr_tpc :: tpc_stat_pi :: reserved0 [15:08] */
#define HS_TX_CDR_TPC_TPC_STAT_PI_RESERVED0_MASK                   0xff00
#define HS_TX_CDR_TPC_TPC_STAT_PI_RESERVED0_ALIGN                  0
#define HS_TX_CDR_TPC_TPC_STAT_PI_RESERVED0_BITS                   8
#define HS_TX_CDR_TPC_TPC_STAT_PI_RESERVED0_SHIFT                  8

/* hs_tx_cdr_tpc :: tpc_stat_pi :: tpc_rg_man_pha_adj_done_lh [07:07] */
#define HS_TX_CDR_TPC_TPC_STAT_PI_TPC_RG_MAN_PHA_ADJ_DONE_LH_MASK  0x0080
#define HS_TX_CDR_TPC_TPC_STAT_PI_TPC_RG_MAN_PHA_ADJ_DONE_LH_ALIGN 0
#define HS_TX_CDR_TPC_TPC_STAT_PI_TPC_RG_MAN_PHA_ADJ_DONE_LH_BITS  1
#define HS_TX_CDR_TPC_TPC_STAT_PI_TPC_RG_MAN_PHA_ADJ_DONE_LH_SHIFT 7

/* hs_tx_cdr_tpc :: tpc_stat_pi :: tpc_rg_pi_nco [06:00] */
#define HS_TX_CDR_TPC_TPC_STAT_PI_TPC_RG_PI_NCO_MASK               0x007f
#define HS_TX_CDR_TPC_TPC_STAT_PI_TPC_RG_PI_NCO_ALIGN              0
#define HS_TX_CDR_TPC_TPC_STAT_PI_TPC_RG_PI_NCO_BITS               7
#define HS_TX_CDR_TPC_TPC_STAT_PI_TPC_RG_PI_NCO_SHIFT              0


/****************************************************************************
 * hs_tx_cdr_tpc :: tpc_stat_iir
 ***************************************************************************/
/* hs_tx_cdr_tpc :: tpc_stat_iir :: reserved0 [15:15] */
#define HS_TX_CDR_TPC_TPC_STAT_IIR_RESERVED0_MASK                  0x8000
#define HS_TX_CDR_TPC_TPC_STAT_IIR_RESERVED0_ALIGN                 0
#define HS_TX_CDR_TPC_TPC_STAT_IIR_RESERVED0_BITS                  1
#define HS_TX_CDR_TPC_TPC_STAT_IIR_RESERVED0_SHIFT                 15

/* hs_tx_cdr_tpc :: tpc_stat_iir :: tpc_rg_iir_msb_15b [14:00] */
#define HS_TX_CDR_TPC_TPC_STAT_IIR_TPC_RG_IIR_MSB_15B_MASK         0x7fff
#define HS_TX_CDR_TPC_TPC_STAT_IIR_TPC_RG_IIR_MSB_15B_ALIGN        0
#define HS_TX_CDR_TPC_TPC_STAT_IIR_TPC_RG_IIR_MSB_15B_BITS         15
#define HS_TX_CDR_TPC_TPC_STAT_IIR_TPC_RG_IIR_MSB_15B_SHIFT        0


/****************************************************************************
 * ieee_pma_pmd_control_2_regs_regs
 ***************************************************************************/
/****************************************************************************
 * ieee_pma_pmd_control_2_regs :: pma_pmd_control_2
 ***************************************************************************/
/* ieee_pma_pmd_control_2_regs :: pma_pmd_control_2 :: reserved0 [15:06] */
#define IEEE_PMA_PMD_CONTROL_2_REGS_PMA_PMD_CONTROL_2_RESERVED0_MASK 0xffc0
#define IEEE_PMA_PMD_CONTROL_2_REGS_PMA_PMD_CONTROL_2_RESERVED0_ALIGN 0
#define IEEE_PMA_PMD_CONTROL_2_REGS_PMA_PMD_CONTROL_2_RESERVED0_BITS 10
#define IEEE_PMA_PMD_CONTROL_2_REGS_PMA_PMD_CONTROL_2_RESERVED0_SHIFT 6

/* ieee_pma_pmd_control_2_regs :: pma_pmd_control_2 :: pma_pmd_type_selection [05:00] */
#define IEEE_PMA_PMD_CONTROL_2_REGS_PMA_PMD_CONTROL_2_PMA_PMD_TYPE_SELECTION_MASK 0x003f
#define IEEE_PMA_PMD_CONTROL_2_REGS_PMA_PMD_CONTROL_2_PMA_PMD_TYPE_SELECTION_ALIGN 0
#define IEEE_PMA_PMD_CONTROL_2_REGS_PMA_PMD_CONTROL_2_PMA_PMD_TYPE_SELECTION_BITS 6
#define IEEE_PMA_PMD_CONTROL_2_REGS_PMA_PMD_CONTROL_2_PMA_PMD_TYPE_SELECTION_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs_regs
 ***************************************************************************/
/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_control_1
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_control_1 :: pma_pmd_reg_reset [15:15] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_REG_RESET_MASK 0x8000
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_REG_RESET_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_REG_RESET_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_REG_RESET_SHIFT 15

/* ieee_pma_pmd_regs :: pma_pmd_control_1 :: reserved0 [14:14] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED0_MASK         0x4000
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED0_ALIGN        0
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED0_BITS         1
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED0_SHIFT        14

/* ieee_pma_pmd_regs :: pma_pmd_control_1 :: speed_sel_lsb_unused [13:13] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_SPEED_SEL_LSB_UNUSED_MASK 0x2000
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_SPEED_SEL_LSB_UNUSED_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_SPEED_SEL_LSB_UNUSED_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_SPEED_SEL_LSB_UNUSED_SHIFT 13

/* ieee_pma_pmd_regs :: pma_pmd_control_1 :: reserved1 [12:12] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED1_MASK         0x1000
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED1_ALIGN        0
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED1_BITS         1
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED1_SHIFT        12

/* ieee_pma_pmd_regs :: pma_pmd_control_1 :: pma_pmd_low_power_mode [11:11] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_LOW_POWER_MODE_MASK 0x0800
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_LOW_POWER_MODE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_LOW_POWER_MODE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_LOW_POWER_MODE_SHIFT 11

/* ieee_pma_pmd_regs :: pma_pmd_control_1 :: reserved2 [10:07] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED2_MASK         0x0780
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED2_ALIGN        0
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED2_BITS         4
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_RESERVED2_SHIFT        7

/* ieee_pma_pmd_regs :: pma_pmd_control_1 :: speed_sel_msb_unused [06:06] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_SPEED_SEL_MSB_UNUSED_MASK 0x0040
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_SPEED_SEL_MSB_UNUSED_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_SPEED_SEL_MSB_UNUSED_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_SPEED_SEL_MSB_UNUSED_SHIFT 6

/* ieee_pma_pmd_regs :: pma_pmd_control_1 :: pma_pmd_speed_selection [05:02] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_SPEED_SELECTION_MASK 0x003c
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_SPEED_SELECTION_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_SPEED_SELECTION_BITS 4
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_PMD_SPEED_SELECTION_SHIFT 2

/* ieee_pma_pmd_regs :: pma_pmd_control_1 :: pma_remote_loopback [01:01] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_REMOTE_LOOPBACK_MASK 0x0002
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_REMOTE_LOOPBACK_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_REMOTE_LOOPBACK_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_REMOTE_LOOPBACK_SHIFT 1

/* ieee_pma_pmd_regs :: pma_pmd_control_1 :: pma_local_loopback [00:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_LOCAL_LOOPBACK_MASK 0x0001
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_LOCAL_LOOPBACK_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_LOCAL_LOOPBACK_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_CONTROL_1_PMA_LOCAL_LOOPBACK_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_status_1
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_status_1 :: reserved0 [15:08] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED0_MASK          0xff00
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED0_ALIGN         0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED0_BITS          8
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED0_SHIFT         8

/* ieee_pma_pmd_regs :: pma_pmd_status_1 :: pma_pmd_fault [07:07] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_FAULT_MASK      0x0080
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_FAULT_ALIGN     0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_FAULT_BITS      1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_FAULT_SHIFT     7

/* ieee_pma_pmd_regs :: pma_pmd_status_1 :: reserved1 [06:03] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED1_MASK          0x0078
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED1_ALIGN         0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED1_BITS          4
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED1_SHIFT         3

/* ieee_pma_pmd_regs :: pma_pmd_status_1 :: pma_pmd_rx_link_status [02:02] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_RX_LINK_STATUS_MASK 0x0004
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_RX_LINK_STATUS_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_RX_LINK_STATUS_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_RX_LINK_STATUS_SHIFT 2

/* ieee_pma_pmd_regs :: pma_pmd_status_1 :: pma_pmd_low_power_ability [01:01] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_LOW_POWER_ABILITY_MASK 0x0002
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_LOW_POWER_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_LOW_POWER_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_PMA_PMD_LOW_POWER_ABILITY_SHIFT 1

/* ieee_pma_pmd_regs :: pma_pmd_status_1 :: reserved2 [00:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED2_MASK          0x0001
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED2_ALIGN         0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED2_BITS          1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_1_RESERVED2_SHIFT         0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_device_identifier_msb
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_device_identifier_msb :: pma_pmd_device_identifier_msb_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_DEVICE_IDENTIFIER_MSB_PMA_PMD_DEVICE_IDENTIFIER_MSB_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_DEVICE_IDENTIFIER_MSB_PMA_PMD_DEVICE_IDENTIFIER_MSB_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_DEVICE_IDENTIFIER_MSB_PMA_PMD_DEVICE_IDENTIFIER_MSB_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_DEVICE_IDENTIFIER_MSB_PMA_PMD_DEVICE_IDENTIFIER_MSB_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_device_identifier_lsb
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_device_identifier_lsb :: pma_pmd_device_identifier_lsb_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_DEVICE_IDENTIFIER_LSB_PMA_PMD_DEVICE_IDENTIFIER_LSB_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_DEVICE_IDENTIFIER_LSB_PMA_PMD_DEVICE_IDENTIFIER_LSB_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_DEVICE_IDENTIFIER_LSB_PMA_PMD_DEVICE_IDENTIFIER_LSB_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_DEVICE_IDENTIFIER_LSB_PMA_PMD_DEVICE_IDENTIFIER_LSB_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_speed_ability
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_speed_ability :: reserved0 [15:10] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED0_MASK     0xfc00
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED0_ALIGN    0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED0_BITS     6
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED0_SHIFT    10

/* ieee_pma_pmd_regs :: pma_pmd_speed_ability :: pma_pmd_100g_capable [09:09] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_100G_CAPABLE_MASK 0x0200
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_100G_CAPABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_100G_CAPABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_100G_CAPABLE_SHIFT 9

/* ieee_pma_pmd_regs :: pma_pmd_speed_ability :: pma_pmd_40g_capable [08:08] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_40G_CAPABLE_MASK 0x0100
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_40G_CAPABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_40G_CAPABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_40G_CAPABLE_SHIFT 8

/* ieee_pma_pmd_regs :: pma_pmd_speed_ability :: reserved1 [07:07] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED1_MASK     0x0080
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED1_ALIGN    0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED1_BITS     1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED1_SHIFT    7

/* ieee_pma_pmd_regs :: pma_pmd_speed_ability :: pma_pmd_10m_capable [06:06] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10M_CAPABLE_MASK 0x0040
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10M_CAPABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10M_CAPABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10M_CAPABLE_SHIFT 6

/* ieee_pma_pmd_regs :: pma_pmd_speed_ability :: pma_pmd_100m_capable [05:05] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_100M_CAPABLE_MASK 0x0020
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_100M_CAPABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_100M_CAPABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_100M_CAPABLE_SHIFT 5

/* ieee_pma_pmd_regs :: pma_pmd_speed_ability :: pma_pmd_1000m_capable [04:04] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_1000M_CAPABLE_MASK 0x0010
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_1000M_CAPABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_1000M_CAPABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_1000M_CAPABLE_SHIFT 4

/* ieee_pma_pmd_regs :: pma_pmd_speed_ability :: reserved2 [03:03] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED2_MASK     0x0008
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED2_ALIGN    0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED2_BITS     1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_RESERVED2_SHIFT    3

/* ieee_pma_pmd_regs :: pma_pmd_speed_ability :: pma_pmd_10pass_ts_capable [02:02] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10PASS_TS_CAPABLE_MASK 0x0004
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10PASS_TS_CAPABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10PASS_TS_CAPABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10PASS_TS_CAPABLE_SHIFT 2

/* ieee_pma_pmd_regs :: pma_pmd_speed_ability :: pma_pmd_2base_tl_capable [01:01] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_2BASE_TL_CAPABLE_MASK 0x0002
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_2BASE_TL_CAPABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_2BASE_TL_CAPABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_2BASE_TL_CAPABLE_SHIFT 1

/* ieee_pma_pmd_regs :: pma_pmd_speed_ability :: pma_pmd_10g_capable [00:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10G_CAPABLE_MASK 0x0001
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10G_CAPABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10G_CAPABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SPEED_ABILITY_PMA_PMD_10G_CAPABLE_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: devices_in_package_lsb
 ***************************************************************************/
/* ieee_pma_pmd_regs :: devices_in_package_lsb :: reserved0 [15:12] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_RESERVED0_MASK    0xf000
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_RESERVED0_ALIGN   0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_RESERVED0_BITS    4
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_RESERVED0_SHIFT   12

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: separated_pma_4_present [11:11] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_4_PRESENT_MASK 0x0800
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_4_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_4_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_4_PRESENT_SHIFT 11

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: separated_pma_3_present [10:10] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_3_PRESENT_MASK 0x0400
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_3_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_3_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_3_PRESENT_SHIFT 10

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: separated_pma_2_present [09:09] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_2_PRESENT_MASK 0x0200
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_2_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_2_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_2_PRESENT_SHIFT 9

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: separated_pma_1_present [08:08] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_1_PRESENT_MASK 0x0100
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_1_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_1_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_SEPARATED_PMA_1_PRESENT_SHIFT 8

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: auto_negotiation_present [07:07] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_AUTO_NEGOTIATION_PRESENT_MASK 0x0080
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_AUTO_NEGOTIATION_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_AUTO_NEGOTIATION_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_AUTO_NEGOTIATION_PRESENT_SHIFT 7

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: tc_present [06:06] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_TC_PRESENT_MASK   0x0040
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_TC_PRESENT_ALIGN  0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_TC_PRESENT_BITS   1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_TC_PRESENT_SHIFT  6

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: dte_xs_present [05:05] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_DTE_XS_PRESENT_MASK 0x0020
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_DTE_XS_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_DTE_XS_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_DTE_XS_PRESENT_SHIFT 5

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: phy_xs_present [04:04] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PHY_XS_PRESENT_MASK 0x0010
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PHY_XS_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PHY_XS_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PHY_XS_PRESENT_SHIFT 4

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: pcs_present [03:03] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PCS_PRESENT_MASK  0x0008
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PCS_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PCS_PRESENT_BITS  1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PCS_PRESENT_SHIFT 3

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: wis_present [02:02] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_WIS_PRESENT_MASK  0x0004
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_WIS_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_WIS_PRESENT_BITS  1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_WIS_PRESENT_SHIFT 2

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: pma_pmd_present [01:01] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PMA_PMD_PRESENT_MASK 0x0002
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PMA_PMD_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PMA_PMD_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_PMA_PMD_PRESENT_SHIFT 1

/* ieee_pma_pmd_regs :: devices_in_package_lsb :: clause_22_present [00:00] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_CLAUSE_22_PRESENT_MASK 0x0001
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_CLAUSE_22_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_CLAUSE_22_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_LSB_CLAUSE_22_PRESENT_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: devices_in_package_msb
 ***************************************************************************/
/* ieee_pma_pmd_regs :: devices_in_package_msb :: vendor_specific_device_2_present [15:15] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_VENDOR_SPECIFIC_DEVICE_2_PRESENT_MASK 0x8000
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_VENDOR_SPECIFIC_DEVICE_2_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_VENDOR_SPECIFIC_DEVICE_2_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_VENDOR_SPECIFIC_DEVICE_2_PRESENT_SHIFT 15

/* ieee_pma_pmd_regs :: devices_in_package_msb :: vendor_specific_device_1_present [14:14] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_VENDOR_SPECIFIC_DEVICE_1_PRESENT_MASK 0x4000
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_VENDOR_SPECIFIC_DEVICE_1_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_VENDOR_SPECIFIC_DEVICE_1_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_VENDOR_SPECIFIC_DEVICE_1_PRESENT_SHIFT 14

/* ieee_pma_pmd_regs :: devices_in_package_msb :: clause_22_extension_present [13:13] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_CLAUSE_22_EXTENSION_PRESENT_MASK 0x2000
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_CLAUSE_22_EXTENSION_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_CLAUSE_22_EXTENSION_PRESENT_BITS 1
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_CLAUSE_22_EXTENSION_PRESENT_SHIFT 13

/* ieee_pma_pmd_regs :: devices_in_package_msb :: reserved0 [12:00] */
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_RESERVED0_MASK    0x1fff
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_RESERVED0_ALIGN   0
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_RESERVED0_BITS    13
#define IEEE_PMA_PMD_REGS_DEVICES_IN_PACKAGE_MSB_RESERVED0_SHIFT   0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_status_2
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pma_pmd_device_present [15:14] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_DEVICE_PRESENT_MASK 0xc000
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_DEVICE_PRESENT_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_DEVICE_PRESENT_BITS 2
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_DEVICE_PRESENT_SHIFT 14

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pma_pmd_transmit_fault_ability [13:13] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_TRANSMIT_FAULT_ABILITY_MASK 0x2000
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_TRANSMIT_FAULT_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_TRANSMIT_FAULT_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_TRANSMIT_FAULT_ABILITY_SHIFT 13

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pma_pmd_receive_fault_ability [12:12] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_RECEIVE_FAULT_ABILITY_MASK 0x1000
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_RECEIVE_FAULT_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_RECEIVE_FAULT_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_RECEIVE_FAULT_ABILITY_SHIFT 12

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pma_pmd_transmit_fault [11:11] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_TRANSMIT_FAULT_MASK 0x0800
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_TRANSMIT_FAULT_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_TRANSMIT_FAULT_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_TRANSMIT_FAULT_SHIFT 11

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pma_pmd_receive_fault [10:10] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_RECEIVE_FAULT_MASK 0x0400
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_RECEIVE_FAULT_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_RECEIVE_FAULT_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_RECEIVE_FAULT_SHIFT 10

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pma_pmd_extended_abilites [09:09] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_EXTENDED_ABILITES_MASK 0x0200
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_EXTENDED_ABILITES_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_EXTENDED_ABILITES_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_PMD_EXTENDED_ABILITES_SHIFT 9

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pmd_transmit_disable_ability [08:08] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_TRANSMIT_DISABLE_ABILITY_MASK 0x0100
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_TRANSMIT_DISABLE_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_TRANSMIT_DISABLE_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_TRANSMIT_DISABLE_ABILITY_SHIFT 8

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pmd_10gbase_sr_ability [07:07] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_SR_ABILITY_MASK 0x0080
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_SR_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_SR_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_SR_ABILITY_SHIFT 7

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pmd_10gbase_lr_abiity [06:06] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LR_ABIITY_MASK 0x0040
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LR_ABIITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LR_ABIITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LR_ABIITY_SHIFT 6

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pmd_10gbase_er_abiity [05:05] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_ER_ABIITY_MASK 0x0020
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_ER_ABIITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_ER_ABIITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_ER_ABIITY_SHIFT 5

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pmd_10gbase_lx4_abiity [04:04] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LX4_ABIITY_MASK 0x0010
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LX4_ABIITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LX4_ABIITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LX4_ABIITY_SHIFT 4

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pmd_10gbase_sw_abiity [03:03] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_SW_ABIITY_MASK 0x0008
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_SW_ABIITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_SW_ABIITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_SW_ABIITY_SHIFT 3

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pmd_10gbase_lw_abiity [02:02] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LW_ABIITY_MASK 0x0004
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LW_ABIITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LW_ABIITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_LW_ABIITY_SHIFT 2

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pmd_10gbase_ew_abiity [01:01] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_EW_ABIITY_MASK 0x0002
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_EW_ABIITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_EW_ABIITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMD_10GBASE_EW_ABIITY_SHIFT 1

/* ieee_pma_pmd_regs :: pma_pmd_status_2 :: pma_local_loopback_ability [00:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_LOCAL_LOOPBACK_ABILITY_MASK 0x0001
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_LOCAL_LOOPBACK_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_LOCAL_LOOPBACK_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_STATUS_2_PMA_LOCAL_LOOPBACK_ABILITY_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pmd_transmit_disable
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pmd_transmit_disable :: reserved0 [15:11] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_RESERVED0_MASK      0xf800
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_RESERVED0_ALIGN     0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_RESERVED0_BITS      5
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_RESERVED0_SHIFT     11

/* ieee_pma_pmd_regs :: pmd_transmit_disable :: pmd_transmit_disable_9 [10:10] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_9_MASK 0x0400
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_9_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_9_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_9_SHIFT 10

/* ieee_pma_pmd_regs :: pmd_transmit_disable :: pmd_transmit_disable_8 [09:09] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_8_MASK 0x0200
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_8_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_8_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_8_SHIFT 9

/* ieee_pma_pmd_regs :: pmd_transmit_disable :: pmd_transmit_disable_7 [08:08] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_7_MASK 0x0100
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_7_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_7_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_7_SHIFT 8

/* ieee_pma_pmd_regs :: pmd_transmit_disable :: pmd_transmit_disable_6 [07:07] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_6_MASK 0x0080
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_6_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_6_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_6_SHIFT 7

/* ieee_pma_pmd_regs :: pmd_transmit_disable :: pmd_transmit_disable_5 [06:06] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_5_MASK 0x0040
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_5_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_5_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_5_SHIFT 6

/* ieee_pma_pmd_regs :: pmd_transmit_disable :: pmd_transmit_disable_4 [05:05] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_4_MASK 0x0020
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_4_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_4_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_4_SHIFT 5

/* ieee_pma_pmd_regs :: pmd_transmit_disable :: pmd_transmit_disable_3 [04:04] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_3_MASK 0x0010
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_3_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_3_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_3_SHIFT 4

/* ieee_pma_pmd_regs :: pmd_transmit_disable :: pmd_transmit_disable_2 [03:03] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_2_MASK 0x0008
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_2_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_2_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_2_SHIFT 3

/* ieee_pma_pmd_regs :: pmd_transmit_disable :: pmd_transmit_disable_1 [02:02] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_1_MASK 0x0004
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_1_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_1_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_1_SHIFT 2

/* ieee_pma_pmd_regs :: pmd_transmit_disable :: pmd_transmit_disable_0 [01:01] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_0_MASK 0x0002
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_0_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_0_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_TRANSMIT_DISABLE_0_SHIFT 1

/* ieee_pma_pmd_regs :: pmd_transmit_disable :: pmd_global_transmit_disable [00:00] */
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_GLOBAL_TRANSMIT_DISABLE_MASK 0x0001
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_GLOBAL_TRANSMIT_DISABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_GLOBAL_TRANSMIT_DISABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_TRANSMIT_DISABLE_PMD_GLOBAL_TRANSMIT_DISABLE_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pmd_receive_signal_detect
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: reserved0 [15:11] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_RESERVED0_MASK 0xf800
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_RESERVED0_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_RESERVED0_BITS 5
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_RESERVED0_SHIFT 11

/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: pmd_receive_signal_detect_9 [10:10] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_9_MASK 0x0400
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_9_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_9_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_9_SHIFT 10

/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: pmd_receive_signal_detect_8 [09:09] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_8_MASK 0x0200
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_8_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_8_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_8_SHIFT 9

/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: pmd_receive_signal_detect_7 [08:08] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_7_MASK 0x0100
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_7_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_7_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_7_SHIFT 8

/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: pmd_receive_signal_detect_6 [07:07] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_6_MASK 0x0080
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_6_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_6_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_6_SHIFT 7

/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: pmd_receive_signal_detect_5 [06:06] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_5_MASK 0x0040
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_5_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_5_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_5_SHIFT 6

/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: pmd_receive_signal_detect_4 [05:05] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_4_MASK 0x0020
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_4_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_4_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_4_SHIFT 5

/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: pmd_receive_signal_detect_3 [04:04] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_3_MASK 0x0010
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_3_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_3_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_3_SHIFT 4

/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: pmd_receive_signal_detect_2 [03:03] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_2_MASK 0x0008
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_2_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_2_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_2_SHIFT 3

/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: pmd_receive_signal_detect_1 [02:02] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_1_MASK 0x0004
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_1_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_1_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_1_SHIFT 2

/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: pmd_receive_signal_detect_0 [01:01] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_0_MASK 0x0002
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_0_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_0_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_RECEIVE_SIGNAL_DETECT_0_SHIFT 1

/* ieee_pma_pmd_regs :: pmd_receive_signal_detect :: pmd_global_receive_signal_detect [00:00] */
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_GLOBAL_RECEIVE_SIGNAL_DETECT_MASK 0x0001
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_GLOBAL_RECEIVE_SIGNAL_DETECT_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_GLOBAL_RECEIVE_SIGNAL_DETECT_BITS 1
#define IEEE_PMA_PMD_REGS_PMD_RECEIVE_SIGNAL_DETECT_PMD_GLOBAL_RECEIVE_SIGNAL_DETECT_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_extended_ability
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: reserved0 [15:11] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_RESERVED0_MASK  0xf800
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_RESERVED0_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_RESERVED0_BITS  5
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_RESERVED0_SHIFT 11

/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: pma_pmd_40g_100g_extended_abilities [10:10] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_40G_100G_EXTENDED_ABILITIES_MASK 0x0400
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_40G_100G_EXTENDED_ABILITIES_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_40G_100G_EXTENDED_ABILITIES_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_40G_100G_EXTENDED_ABILITIES_SHIFT 10

/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: reserved1 [09:09] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_RESERVED1_MASK  0x0200
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_RESERVED1_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_RESERVED1_BITS  1
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_RESERVED1_SHIFT 9

/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: pma_pmd_10base_t_ability [08:08] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10BASE_T_ABILITY_MASK 0x0100
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10BASE_T_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10BASE_T_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10BASE_T_ABILITY_SHIFT 8

/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: pma_pmd_100base_tx_ability [07:07] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_100BASE_TX_ABILITY_MASK 0x0080
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_100BASE_TX_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_100BASE_TX_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_100BASE_TX_ABILITY_SHIFT 7

/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: pma_pmd_1000base_kx_ability [06:06] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_1000BASE_KX_ABILITY_MASK 0x0040
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_1000BASE_KX_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_1000BASE_KX_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_1000BASE_KX_ABILITY_SHIFT 6

/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: pma_pmd_1000base_t_ability [05:05] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_1000BASE_T_ABILITY_MASK 0x0020
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_1000BASE_T_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_1000BASE_T_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_1000BASE_T_ABILITY_SHIFT 5

/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: pma_pmd_10gbase_kr_ability [04:04] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_KR_ABILITY_MASK 0x0010
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_KR_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_KR_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_KR_ABILITY_SHIFT 4

/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: pma_pmd_10gbase_kx4_ability [03:03] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_KX4_ABILITY_MASK 0x0008
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_KX4_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_KX4_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_KX4_ABILITY_SHIFT 3

/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: pma_pmd_10gbase_t_ability [02:02] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_T_ABILITY_MASK 0x0004
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_T_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_T_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_T_ABILITY_SHIFT 2

/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: pma_pmd_10gbase_lrm_ability [01:01] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_LRM_ABILITY_MASK 0x0002
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_LRM_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_LRM_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_LRM_ABILITY_SHIFT 1

/* ieee_pma_pmd_regs :: pma_pmd_extended_ability :: pma_pmd_10gbase_cx4_ability [00:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_CX4_ABILITY_MASK 0x0001
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_CX4_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_CX4_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_EXTENDED_ABILITY_PMA_PMD_10GBASE_CX4_ABILITY_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability :: pma_pmd_remote_loopback_ability [15:15] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_REMOTE_LOOPBACK_ABILITY_MASK 0x8000
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_REMOTE_LOOPBACK_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_REMOTE_LOOPBACK_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_REMOTE_LOOPBACK_ABILITY_SHIFT 15

/* ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability :: reserved0 [14:12] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_RESERVED0_MASK 0x7000
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_RESERVED0_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_RESERVED0_BITS 3
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_RESERVED0_SHIFT 12

/* ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability :: pma_pmd_100gbase_er4_ability [11:11] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_ER4_ABILITY_MASK 0x0800
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_ER4_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_ER4_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_ER4_ABILITY_SHIFT 11

/* ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability :: pma_pmd_100gbase_lr4_ability [10:10] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_LR4_ABILITY_MASK 0x0400
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_LR4_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_LR4_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_LR4_ABILITY_SHIFT 10

/* ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability :: pma_pmd_100gbase_sr10_ability [09:09] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_SR10_ABILITY_MASK 0x0200
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_SR10_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_SR10_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_SR10_ABILITY_SHIFT 9

/* ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability :: pma_pmd_100gbase_cr10_ability [08:08] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_CR10_ABILITY_MASK 0x0100
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_CR10_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_CR10_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_100GBASE_CR10_ABILITY_SHIFT 8

/* ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability :: reserved1 [07:04] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_RESERVED1_MASK 0x00f0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_RESERVED1_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_RESERVED1_BITS 4
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_RESERVED1_SHIFT 4

/* ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability :: pma_pmd_40gbase_lr4_ability [03:03] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_LR4_ABILITY_MASK 0x0008
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_LR4_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_LR4_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_LR4_ABILITY_SHIFT 3

/* ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability :: pma_pmd_40gbase_sr4_ability [02:02] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_SR4_ABILITY_MASK 0x0004
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_SR4_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_SR4_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_SR4_ABILITY_SHIFT 2

/* ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability :: pma_pmd_40gbase_cr4_ability [01:01] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_CR4_ABILITY_MASK 0x0002
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_CR4_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_CR4_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_CR4_ABILITY_SHIFT 1

/* ieee_pma_pmd_regs :: pma_pmd_40g_100g_extended_ability :: pma_pmd_40gbase_kr4_ability [00:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_KR4_ABILITY_MASK 0x0001
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_KR4_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_KR4_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_40G_100G_EXTENDED_ABILITY_PMA_PMD_40GBASE_KR4_ABILITY_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_package_identifier_msb
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_package_identifier_msb :: pma_pmd_package_identifier_msb_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PACKAGE_IDENTIFIER_MSB_PMA_PMD_PACKAGE_IDENTIFIER_MSB_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PACKAGE_IDENTIFIER_MSB_PMA_PMD_PACKAGE_IDENTIFIER_MSB_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PACKAGE_IDENTIFIER_MSB_PMA_PMD_PACKAGE_IDENTIFIER_MSB_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PACKAGE_IDENTIFIER_MSB_PMA_PMD_PACKAGE_IDENTIFIER_MSB_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_package_identifier_lsb
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_package_identifier_lsb :: pma_pmd_package_identifier_lsb_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PACKAGE_IDENTIFIER_LSB_PMA_PMD_PACKAGE_IDENTIFIER_LSB_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PACKAGE_IDENTIFIER_LSB_PMA_PMD_PACKAGE_IDENTIFIER_LSB_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PACKAGE_IDENTIFIER_LSB_PMA_PMD_PACKAGE_IDENTIFIER_LSB_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PACKAGE_IDENTIFIER_LSB_PMA_PMD_PACKAGE_IDENTIFIER_LSB_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_test_pattern_ability
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_test_pattern_ability :: reserved0 [15:13] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_RESERVED0_MASK 0xe000
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_RESERVED0_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_RESERVED0_BITS 3
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_RESERVED0_SHIFT 13

/* ieee_pma_pmd_regs :: pma_pmd_test_pattern_ability :: pma_square_wave_test_ability [12:12] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_SQUARE_WAVE_TEST_ABILITY_MASK 0x1000
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_SQUARE_WAVE_TEST_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_SQUARE_WAVE_TEST_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_SQUARE_WAVE_TEST_ABILITY_SHIFT 12

/* ieee_pma_pmd_regs :: pma_pmd_test_pattern_ability :: reserved1 [11:06] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_RESERVED1_MASK 0x0fc0
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_RESERVED1_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_RESERVED1_BITS 6
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_RESERVED1_SHIFT 6

/* ieee_pma_pmd_regs :: pma_pmd_test_pattern_ability :: pma_prbs9_tx_generator_ability [05:05] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS9_TX_GENERATOR_ABILITY_MASK 0x0020
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS9_TX_GENERATOR_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS9_TX_GENERATOR_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS9_TX_GENERATOR_ABILITY_SHIFT 5

/* ieee_pma_pmd_regs :: pma_pmd_test_pattern_ability :: pma_prbs9_rx_generator_ability [04:04] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS9_RX_GENERATOR_ABILITY_MASK 0x0010
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS9_RX_GENERATOR_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS9_RX_GENERATOR_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS9_RX_GENERATOR_ABILITY_SHIFT 4

/* ieee_pma_pmd_regs :: pma_pmd_test_pattern_ability :: pma_prbs31_tx_generator_ability [03:03] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_TX_GENERATOR_ABILITY_MASK 0x0008
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_TX_GENERATOR_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_TX_GENERATOR_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_TX_GENERATOR_ABILITY_SHIFT 3

/* ieee_pma_pmd_regs :: pma_pmd_test_pattern_ability :: pma_prbs31_tx_checker_ability [02:02] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_TX_CHECKER_ABILITY_MASK 0x0004
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_TX_CHECKER_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_TX_CHECKER_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_TX_CHECKER_ABILITY_SHIFT 2

/* ieee_pma_pmd_regs :: pma_pmd_test_pattern_ability :: pma_prbs31_rx_generator_ability [01:01] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_RX_GENERATOR_ABILITY_MASK 0x0002
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_RX_GENERATOR_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_RX_GENERATOR_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_RX_GENERATOR_ABILITY_SHIFT 1

/* ieee_pma_pmd_regs :: pma_pmd_test_pattern_ability :: pma_prbs31_rx_checker_ability [00:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_RX_CHECKER_ABILITY_MASK 0x0001
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_RX_CHECKER_ABILITY_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_RX_CHECKER_ABILITY_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_TEST_PATTERN_ABILITY_PMA_PRBS31_RX_CHECKER_ABILITY_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_pattern_test_control
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_pattern_test_control :: reserved0 [15:08] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_RESERVED0_MASK 0xff00
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_RESERVED0_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_RESERVED0_BITS 8
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_RESERVED0_SHIFT 8

/* ieee_pma_pmd_regs :: pma_pmd_prbs_pattern_test_control :: pma_prbs31_pattern_enable [07:07] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_PRBS31_PATTERN_ENABLE_MASK 0x0080
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_PRBS31_PATTERN_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_PRBS31_PATTERN_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_PRBS31_PATTERN_ENABLE_SHIFT 7

/* ieee_pma_pmd_regs :: pma_pmd_prbs_pattern_test_control :: pma_prbs9_pattern_enable [06:06] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_PRBS9_PATTERN_ENABLE_MASK 0x0040
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_PRBS9_PATTERN_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_PRBS9_PATTERN_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_PRBS9_PATTERN_ENABLE_SHIFT 6

/* ieee_pma_pmd_regs :: pma_pmd_prbs_pattern_test_control :: reserved1 [05:04] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_RESERVED1_MASK 0x0030
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_RESERVED1_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_RESERVED1_BITS 2
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_RESERVED1_SHIFT 4

/* ieee_pma_pmd_regs :: pma_pmd_prbs_pattern_test_control :: pma_tx_generator_enable [03:03] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_TX_GENERATOR_ENABLE_MASK 0x0008
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_TX_GENERATOR_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_TX_GENERATOR_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_TX_GENERATOR_ENABLE_SHIFT 3

/* ieee_pma_pmd_regs :: pma_pmd_prbs_pattern_test_control :: pma_tx_checker_enable [02:02] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_TX_CHECKER_ENABLE_MASK 0x0004
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_TX_CHECKER_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_TX_CHECKER_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_TX_CHECKER_ENABLE_SHIFT 2

/* ieee_pma_pmd_regs :: pma_pmd_prbs_pattern_test_control :: pma_rx_generator_enable [01:01] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_RX_GENERATOR_ENABLE_MASK 0x0002
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_RX_GENERATOR_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_RX_GENERATOR_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_RX_GENERATOR_ENABLE_SHIFT 1

/* ieee_pma_pmd_regs :: pma_pmd_prbs_pattern_test_control :: pma_rx_checker_enable [00:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_RX_CHECKER_ENABLE_MASK 0x0001
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_RX_CHECKER_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_RX_CHECKER_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_PATTERN_TEST_CONTROL_PMA_RX_CHECKER_ENABLE_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control :: reserved0 [15:10] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_RESERVED0_MASK 0xfc00
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_RESERVED0_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_RESERVED0_BITS 6
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_RESERVED0_SHIFT 10

/* ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control :: pma_lane9_sw_enable [09:09] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE9_SW_ENABLE_MASK 0x0200
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE9_SW_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE9_SW_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE9_SW_ENABLE_SHIFT 9

/* ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control :: pma_lane8_sw_enable [08:08] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE8_SW_ENABLE_MASK 0x0100
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE8_SW_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE8_SW_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE8_SW_ENABLE_SHIFT 8

/* ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control :: pma_lane7_sw_enable [07:07] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE7_SW_ENABLE_MASK 0x0080
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE7_SW_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE7_SW_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE7_SW_ENABLE_SHIFT 7

/* ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control :: pma_lane6_sw_enable [06:06] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE6_SW_ENABLE_MASK 0x0040
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE6_SW_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE6_SW_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE6_SW_ENABLE_SHIFT 6

/* ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control :: pma_lane5_sw_enable [05:05] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE5_SW_ENABLE_MASK 0x0020
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE5_SW_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE5_SW_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE5_SW_ENABLE_SHIFT 5

/* ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control :: pma_lane4_sw_enable [04:04] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE4_SW_ENABLE_MASK 0x0010
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE4_SW_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE4_SW_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE4_SW_ENABLE_SHIFT 4

/* ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control :: pma_lane3_sw_enable [03:03] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE3_SW_ENABLE_MASK 0x0008
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE3_SW_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE3_SW_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE3_SW_ENABLE_SHIFT 3

/* ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control :: pma_lane2_sw_enable [02:02] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE2_SW_ENABLE_MASK 0x0004
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE2_SW_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE2_SW_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE2_SW_ENABLE_SHIFT 2

/* ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control :: pma_lane1_sw_enable [01:01] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE1_SW_ENABLE_MASK 0x0002
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE1_SW_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE1_SW_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE1_SW_ENABLE_SHIFT 1

/* ieee_pma_pmd_regs :: pma_pmd_square_wave_test_control :: pma_lane0_sw_enable [00:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE0_SW_ENABLE_MASK 0x0001
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE0_SW_ENABLE_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE0_SW_ENABLE_BITS 1
#define IEEE_PMA_PMD_REGS_PMA_PMD_SQUARE_WAVE_TEST_CONTROL_PMA_LANE0_SW_ENABLE_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_0
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_0 :: pma_pmd_prbs_tx_error_counter_lane_0_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_0_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_0_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_0_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_0_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_0_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_0_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_0_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_0_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_1
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_1 :: pma_pmd_prbs_tx_error_counter_lane_1_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_1_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_1_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_1_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_1_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_1_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_1_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_1_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_1_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_2
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_2 :: pma_pmd_prbs_tx_error_counter_lane_2_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_2_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_2_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_2_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_2_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_2_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_2_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_2_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_2_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_3
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_3 :: pma_pmd_prbs_tx_error_counter_lane_3_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_3_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_3_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_3_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_3_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_3_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_3_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_3_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_3_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_4
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_4 :: pma_pmd_prbs_tx_error_counter_lane_4_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_4_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_4_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_4_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_4_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_4_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_4_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_4_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_4_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_5
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_5 :: pma_pmd_prbs_tx_error_counter_lane_5_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_5_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_5_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_5_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_5_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_5_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_5_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_5_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_5_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_6
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_6 :: pma_pmd_prbs_tx_error_counter_lane_6_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_6_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_6_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_6_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_6_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_6_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_6_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_6_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_6_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_7
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_7 :: pma_pmd_prbs_tx_error_counter_lane_7_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_7_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_7_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_7_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_7_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_7_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_7_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_7_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_7_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_8
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_8 :: pma_pmd_prbs_tx_error_counter_lane_8_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_8_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_8_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_8_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_8_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_8_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_8_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_8_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_8_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_9
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_tx_error_counter_lane_9 :: pma_pmd_prbs_tx_error_counter_lane_9_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_9_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_9_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_9_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_9_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_9_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_9_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_9_PMA_PMD_PRBS_TX_ERROR_COUNTER_LANE_9_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_0
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_0 :: pma_pmd_prbs_rx_error_counter_lane_0_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_0_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_0_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_0_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_0_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_0_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_0_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_0_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_0_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_1
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_1 :: pma_pmd_prbs_rx_error_counter_lane_1_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_1_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_1_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_1_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_1_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_1_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_1_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_1_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_1_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_2
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_2 :: pma_pmd_prbs_rx_error_counter_lane_2_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_2_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_2_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_2_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_2_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_2_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_2_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_2_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_2_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_3
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_3 :: pma_pmd_prbs_rx_error_counter_lane_3_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_3_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_3_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_3_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_3_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_3_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_3_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_3_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_3_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_4
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_4 :: pma_pmd_prbs_rx_error_counter_lane_4_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_4_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_4_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_4_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_4_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_4_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_4_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_4_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_4_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_5
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_5 :: pma_pmd_prbs_rx_error_counter_lane_5_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_5_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_5_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_5_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_5_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_5_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_5_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_5_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_5_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_6
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_6 :: pma_pmd_prbs_rx_error_counter_lane_6_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_6_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_6_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_6_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_6_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_6_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_6_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_6_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_6_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_7
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_7 :: pma_pmd_prbs_rx_error_counter_lane_7_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_7_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_7_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_7_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_7_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_7_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_7_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_7_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_7_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_8
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_8 :: pma_pmd_prbs_rx_error_counter_lane_8_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_8_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_8_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_8_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_8_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_8_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_8_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_8_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_8_F_SHIFT 0


/****************************************************************************
 * ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_9
 ***************************************************************************/
/* ieee_pma_pmd_regs :: pma_pmd_prbs_rx_error_counter_lane_9 :: pma_pmd_prbs_rx_error_counter_lane_9_f [15:00] */
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_9_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_9_F_MASK 0xffff
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_9_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_9_F_ALIGN 0
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_9_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_9_F_BITS 16
#define IEEE_PMA_PMD_REGS_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_9_PMA_PMD_PRBS_RX_ERROR_COUNTER_LANE_9_F_SHIFT 0


/****************************************************************************
 * rg_rx_regs
 ***************************************************************************/
/****************************************************************************
 * rg_rx :: rx_gb_system_reset
 ***************************************************************************/
/* rg_rx :: rx_gb_system_reset :: reserved0 [15:10] */
#define RG_RX_RX_GB_SYSTEM_RESET_RESERVED0_MASK                    0xfc00
#define RG_RX_RX_GB_SYSTEM_RESET_RESERVED0_ALIGN                   0
#define RG_RX_RX_GB_SYSTEM_RESET_RESERVED0_BITS                    6
#define RG_RX_RX_GB_SYSTEM_RESET_RESERVED0_SHIFT                   10

/* rg_rx :: rx_gb_system_reset :: srx_rstb [09:00] */
#define RG_RX_RX_GB_SYSTEM_RESET_SRX_RSTB_MASK                     0x03ff
#define RG_RX_RX_GB_SYSTEM_RESET_SRX_RSTB_ALIGN                    0
#define RG_RX_RX_GB_SYSTEM_RESET_SRX_RSTB_BITS                     10
#define RG_RX_RX_GB_SYSTEM_RESET_SRX_RSTB_SHIFT                    0


/****************************************************************************
 * rg_rx :: rx_gb_system_reset_frc
 ***************************************************************************/
/* rg_rx :: rx_gb_system_reset_frc :: reserved0 [15:10] */
#define RG_RX_RX_GB_SYSTEM_RESET_FRC_RESERVED0_MASK                0xfc00
#define RG_RX_RX_GB_SYSTEM_RESET_FRC_RESERVED0_ALIGN               0
#define RG_RX_RX_GB_SYSTEM_RESET_FRC_RESERVED0_BITS                6
#define RG_RX_RX_GB_SYSTEM_RESET_FRC_RESERVED0_SHIFT               10

/* rg_rx :: rx_gb_system_reset_frc :: srx_rstb_frc [09:00] */
#define RG_RX_RX_GB_SYSTEM_RESET_FRC_SRX_RSTB_FRC_MASK             0x03ff
#define RG_RX_RX_GB_SYSTEM_RESET_FRC_SRX_RSTB_FRC_ALIGN            0
#define RG_RX_RX_GB_SYSTEM_RESET_FRC_SRX_RSTB_FRC_BITS             10
#define RG_RX_RX_GB_SYSTEM_RESET_FRC_SRX_RSTB_FRC_SHIFT            0


/****************************************************************************
 * rg_rx :: rx_gb_line_reset
 ***************************************************************************/
/* rg_rx :: rx_gb_line_reset :: reserved0 [15:10] */
#define RG_RX_RX_GB_LINE_RESET_RESERVED0_MASK                      0xfc00
#define RG_RX_RX_GB_LINE_RESET_RESERVED0_ALIGN                     0
#define RG_RX_RX_GB_LINE_RESET_RESERVED0_BITS                      6
#define RG_RX_RX_GB_LINE_RESET_RESERVED0_SHIFT                     10

/* rg_rx :: rx_gb_line_reset :: lrx_rstb [09:00] */
#define RG_RX_RX_GB_LINE_RESET_LRX_RSTB_MASK                       0x03ff
#define RG_RX_RX_GB_LINE_RESET_LRX_RSTB_ALIGN                      0
#define RG_RX_RX_GB_LINE_RESET_LRX_RSTB_BITS                       10
#define RG_RX_RX_GB_LINE_RESET_LRX_RSTB_SHIFT                      0


/****************************************************************************
 * rg_rx :: rx_gb_line_reset_frc
 ***************************************************************************/
/* rg_rx :: rx_gb_line_reset_frc :: reserved0 [15:10] */
#define RG_RX_RX_GB_LINE_RESET_FRC_RESERVED0_MASK                  0xfc00
#define RG_RX_RX_GB_LINE_RESET_FRC_RESERVED0_ALIGN                 0
#define RG_RX_RX_GB_LINE_RESET_FRC_RESERVED0_BITS                  6
#define RG_RX_RX_GB_LINE_RESET_FRC_RESERVED0_SHIFT                 10

/* rg_rx :: rx_gb_line_reset_frc :: lrx_rstb_frc [09:00] */
#define RG_RX_RX_GB_LINE_RESET_FRC_LRX_RSTB_FRC_MASK               0x03ff
#define RG_RX_RX_GB_LINE_RESET_FRC_LRX_RSTB_FRC_ALIGN              0
#define RG_RX_RX_GB_LINE_RESET_FRC_LRX_RSTB_FRC_BITS               10
#define RG_RX_RX_GB_LINE_RESET_FRC_LRX_RSTB_FRC_SHIFT              0


/****************************************************************************
 * rg_rx :: rx_gb_db_test_ctrl
 ***************************************************************************/
/* rg_rx :: rx_gb_db_test_ctrl :: db_bypass [15:12] */
#define RG_RX_RX_GB_DB_TEST_CTRL_DB_BYPASS_MASK                    0xf000
#define RG_RX_RX_GB_DB_TEST_CTRL_DB_BYPASS_ALIGN                   0
#define RG_RX_RX_GB_DB_TEST_CTRL_DB_BYPASS_BITS                    4
#define RG_RX_RX_GB_DB_TEST_CTRL_DB_BYPASS_SHIFT                   12

/* rg_rx :: rx_gb_db_test_ctrl :: db_inv_en [11:08] */
#define RG_RX_RX_GB_DB_TEST_CTRL_DB_INV_EN_MASK                    0x0f00
#define RG_RX_RX_GB_DB_TEST_CTRL_DB_INV_EN_ALIGN                   0
#define RG_RX_RX_GB_DB_TEST_CTRL_DB_INV_EN_BITS                    4
#define RG_RX_RX_GB_DB_TEST_CTRL_DB_INV_EN_SHIFT                   8

/* rg_rx :: rx_gb_db_test_ctrl :: ber_mntr_en [07:04] */
#define RG_RX_RX_GB_DB_TEST_CTRL_BER_MNTR_EN_MASK                  0x00f0
#define RG_RX_RX_GB_DB_TEST_CTRL_BER_MNTR_EN_ALIGN                 0
#define RG_RX_RX_GB_DB_TEST_CTRL_BER_MNTR_EN_BITS                  4
#define RG_RX_RX_GB_DB_TEST_CTRL_BER_MNTR_EN_SHIFT                 4

/* rg_rx :: rx_gb_db_test_ctrl :: ieee_mode [03:00] */
#define RG_RX_RX_GB_DB_TEST_CTRL_IEEE_MODE_MASK                    0x000f
#define RG_RX_RX_GB_DB_TEST_CTRL_IEEE_MODE_ALIGN                   0
#define RG_RX_RX_GB_DB_TEST_CTRL_IEEE_MODE_BITS                    4
#define RG_RX_RX_GB_DB_TEST_CTRL_IEEE_MODE_SHIFT                   0


/****************************************************************************
 * rg_rx :: rx_gb_test_ctrl_ln49
 ***************************************************************************/
/* rg_rx :: rx_gb_test_ctrl_ln49 :: reserved0 [15:14] */
#define RG_RX_RX_GB_TEST_CTRL_LN49_RESERVED0_MASK                  0xc000
#define RG_RX_RX_GB_TEST_CTRL_LN49_RESERVED0_ALIGN                 0
#define RG_RX_RX_GB_TEST_CTRL_LN49_RESERVED0_BITS                  2
#define RG_RX_RX_GB_TEST_CTRL_LN49_RESERVED0_SHIFT                 14

/* rg_rx :: rx_gb_test_ctrl_ln49 :: ieee_prbs_inv [13:13] */
#define RG_RX_RX_GB_TEST_CTRL_LN49_IEEE_PRBS_INV_MASK              0x2000
#define RG_RX_RX_GB_TEST_CTRL_LN49_IEEE_PRBS_INV_ALIGN             0
#define RG_RX_RX_GB_TEST_CTRL_LN49_IEEE_PRBS_INV_BITS              1
#define RG_RX_RX_GB_TEST_CTRL_LN49_IEEE_PRBS_INV_SHIFT             13

/* rg_rx :: rx_gb_test_ctrl_ln49 :: ieee_cnt_div3 [12:12] */
#define RG_RX_RX_GB_TEST_CTRL_LN49_IEEE_CNT_DIV3_MASK              0x1000
#define RG_RX_RX_GB_TEST_CTRL_LN49_IEEE_CNT_DIV3_ALIGN             0
#define RG_RX_RX_GB_TEST_CTRL_LN49_IEEE_CNT_DIV3_BITS              1
#define RG_RX_RX_GB_TEST_CTRL_LN49_IEEE_CNT_DIV3_SHIFT             12

/* rg_rx :: rx_gb_test_ctrl_ln49 :: prbs_err_cap_en [11:06] */
#define RG_RX_RX_GB_TEST_CTRL_LN49_PRBS_ERR_CAP_EN_MASK            0x0fc0
#define RG_RX_RX_GB_TEST_CTRL_LN49_PRBS_ERR_CAP_EN_ALIGN           0
#define RG_RX_RX_GB_TEST_CTRL_LN49_PRBS_ERR_CAP_EN_BITS            6
#define RG_RX_RX_GB_TEST_CTRL_LN49_PRBS_ERR_CAP_EN_SHIFT           6

/* rg_rx :: rx_gb_test_ctrl_ln49 :: prbs_chk_en [05:00] */
#define RG_RX_RX_GB_TEST_CTRL_LN49_PRBS_CHK_EN_MASK                0x003f
#define RG_RX_RX_GB_TEST_CTRL_LN49_PRBS_CHK_EN_ALIGN               0
#define RG_RX_RX_GB_TEST_CTRL_LN49_PRBS_CHK_EN_BITS                6
#define RG_RX_RX_GB_TEST_CTRL_LN49_PRBS_CHK_EN_SHIFT               0


/****************************************************************************
 * rg_rx :: rx_gb_test_ctrl_ln03
 ***************************************************************************/
/* rg_rx :: rx_gb_test_ctrl_ln03 :: prbs_err_cap_en [15:12] */
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_ERR_CAP_EN_MASK            0xf000
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_ERR_CAP_EN_ALIGN           0
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_ERR_CAP_EN_BITS            4
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_ERR_CAP_EN_SHIFT           12

/* rg_rx :: rx_gb_test_ctrl_ln03 :: prbs_unlock_dis [11:08] */
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_UNLOCK_DIS_MASK            0x0f00
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_UNLOCK_DIS_ALIGN           0
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_UNLOCK_DIS_BITS            4
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_UNLOCK_DIS_SHIFT           8

/* rg_rx :: rx_gb_test_ctrl_ln03 :: prbs_autodet_dis [07:04] */
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_AUTODET_DIS_MASK           0x00f0
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_AUTODET_DIS_ALIGN          0
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_AUTODET_DIS_BITS           4
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_AUTODET_DIS_SHIFT          4

/* rg_rx :: rx_gb_test_ctrl_ln03 :: prbs_chk_en [03:00] */
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_CHK_EN_MASK                0x000f
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_CHK_EN_ALIGN               0
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_CHK_EN_BITS                4
#define RG_RX_RX_GB_TEST_CTRL_LN03_PRBS_CHK_EN_SHIFT               0


/****************************************************************************
 * rg_rx :: rx_gb_prbs_inv_in
 ***************************************************************************/
/* rg_rx :: rx_gb_prbs_inv_in :: prbs_inv_in [15:12] */
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_INV_IN_MASK                   0xf000
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_INV_IN_ALIGN                  0
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_INV_IN_BITS                   4
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_INV_IN_SHIFT                  12

/* rg_rx :: rx_gb_prbs_inv_in :: prbs_sel_in3 [11:09] */
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN3_MASK                  0x0e00
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN3_ALIGN                 0
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN3_BITS                  3
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN3_SHIFT                 9

/* rg_rx :: rx_gb_prbs_inv_in :: prbs_sel_in2 [08:06] */
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN2_MASK                  0x01c0
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN2_ALIGN                 0
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN2_BITS                  3
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN2_SHIFT                 6

/* rg_rx :: rx_gb_prbs_inv_in :: prbs_sel_in1 [05:03] */
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN1_MASK                  0x0038
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN1_ALIGN                 0
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN1_BITS                  3
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN1_SHIFT                 3

/* rg_rx :: rx_gb_prbs_inv_in :: prbs_sel_in0 [02:00] */
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN0_MASK                  0x0007
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN0_ALIGN                 0
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN0_BITS                  3
#define RG_RX_RX_GB_PRBS_INV_IN_PRBS_SEL_IN0_SHIFT                 0


/****************************************************************************
 * rg_rx :: rx_gb_ber_timer_cnt0
 ***************************************************************************/
/* rg_rx :: rx_gb_ber_timer_cnt0 :: ber_timer_cnt_lsb [15:00] */
#define RG_RX_RX_GB_BER_TIMER_CNT0_BER_TIMER_CNT_LSB_MASK          0xffff
#define RG_RX_RX_GB_BER_TIMER_CNT0_BER_TIMER_CNT_LSB_ALIGN         0
#define RG_RX_RX_GB_BER_TIMER_CNT0_BER_TIMER_CNT_LSB_BITS          16
#define RG_RX_RX_GB_BER_TIMER_CNT0_BER_TIMER_CNT_LSB_SHIFT         0


/****************************************************************************
 * rg_rx :: rx_gb_ber_timer_cnt1
 ***************************************************************************/
/* rg_rx :: rx_gb_ber_timer_cnt1 :: ber_timer_cnt_lsb1 [15:00] */
#define RG_RX_RX_GB_BER_TIMER_CNT1_BER_TIMER_CNT_LSB1_MASK         0xffff
#define RG_RX_RX_GB_BER_TIMER_CNT1_BER_TIMER_CNT_LSB1_ALIGN        0
#define RG_RX_RX_GB_BER_TIMER_CNT1_BER_TIMER_CNT_LSB1_BITS         16
#define RG_RX_RX_GB_BER_TIMER_CNT1_BER_TIMER_CNT_LSB1_SHIFT        0


/****************************************************************************
 * rg_rx :: rx_gb_test_misc_ctrl
 ***************************************************************************/
/* rg_rx :: rx_gb_test_misc_ctrl :: reserved0 [15:12] */
#define RG_RX_RX_GB_TEST_MISC_CTRL_RESERVED0_MASK                  0xf000
#define RG_RX_RX_GB_TEST_MISC_CTRL_RESERVED0_ALIGN                 0
#define RG_RX_RX_GB_TEST_MISC_CTRL_RESERVED0_BITS                  4
#define RG_RX_RX_GB_TEST_MISC_CTRL_RESERVED0_SHIFT                 12

/* rg_rx :: rx_gb_test_misc_ctrl :: check_port [11:08] */
#define RG_RX_RX_GB_TEST_MISC_CTRL_CHECK_PORT_MASK                 0x0f00
#define RG_RX_RX_GB_TEST_MISC_CTRL_CHECK_PORT_ALIGN                0
#define RG_RX_RX_GB_TEST_MISC_CTRL_CHECK_PORT_BITS                 4
#define RG_RX_RX_GB_TEST_MISC_CTRL_CHECK_PORT_SHIFT                8

/* rg_rx :: rx_gb_test_misc_ctrl :: start_ber_mntr [07:04] */
#define RG_RX_RX_GB_TEST_MISC_CTRL_START_BER_MNTR_MASK             0x00f0
#define RG_RX_RX_GB_TEST_MISC_CTRL_START_BER_MNTR_ALIGN            0
#define RG_RX_RX_GB_TEST_MISC_CTRL_START_BER_MNTR_BITS             4
#define RG_RX_RX_GB_TEST_MISC_CTRL_START_BER_MNTR_SHIFT            4

/* rg_rx :: rx_gb_test_misc_ctrl :: ber_timer_cnt_msb [03:00] */
#define RG_RX_RX_GB_TEST_MISC_CTRL_BER_TIMER_CNT_MSB_MASK          0x000f
#define RG_RX_RX_GB_TEST_MISC_CTRL_BER_TIMER_CNT_MSB_ALIGN         0
#define RG_RX_RX_GB_TEST_MISC_CTRL_BER_TIMER_CNT_MSB_BITS          4
#define RG_RX_RX_GB_TEST_MISC_CTRL_BER_TIMER_CNT_MSB_SHIFT         0


/****************************************************************************
 * rg_rx :: rx_gb_lp_ptr_sync0
 ***************************************************************************/
/* rg_rx :: rx_gb_lp_ptr_sync0 :: lp_ptr_sync3 [15:12] */
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC3_MASK                 0xf000
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC3_ALIGN                0
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC3_BITS                 4
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC3_SHIFT                12

/* rg_rx :: rx_gb_lp_ptr_sync0 :: lp_ptr_sync2 [11:08] */
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC2_MASK                 0x0f00
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC2_ALIGN                0
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC2_BITS                 4
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC2_SHIFT                8

/* rg_rx :: rx_gb_lp_ptr_sync0 :: lp_ptr_sync1 [07:04] */
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC1_MASK                 0x00f0
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC1_ALIGN                0
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC1_BITS                 4
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC1_SHIFT                4

/* rg_rx :: rx_gb_lp_ptr_sync0 :: lp_ptr_sync0 [03:00] */
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC0_MASK                 0x000f
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC0_ALIGN                0
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC0_BITS                 4
#define RG_RX_RX_GB_LP_PTR_SYNC0_LP_PTR_SYNC0_SHIFT                0


/****************************************************************************
 * rg_rx :: rx_gb_lp_ptr_sync1
 ***************************************************************************/
/* rg_rx :: rx_gb_lp_ptr_sync1 :: lp_ptr_sync7 [15:12] */
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC7_MASK                 0xf000
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC7_ALIGN                0
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC7_BITS                 4
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC7_SHIFT                12

/* rg_rx :: rx_gb_lp_ptr_sync1 :: lp_ptr_sync6 [11:08] */
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC6_MASK                 0x0f00
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC6_ALIGN                0
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC6_BITS                 4
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC6_SHIFT                8

/* rg_rx :: rx_gb_lp_ptr_sync1 :: lp_ptr_sync5 [07:04] */
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC5_MASK                 0x00f0
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC5_ALIGN                0
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC5_BITS                 4
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC5_SHIFT                4

/* rg_rx :: rx_gb_lp_ptr_sync1 :: lp_ptr_sync4 [03:00] */
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC4_MASK                 0x000f
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC4_ALIGN                0
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC4_BITS                 4
#define RG_RX_RX_GB_LP_PTR_SYNC1_LP_PTR_SYNC4_SHIFT                0


/****************************************************************************
 * rg_rx :: rx_gb_ln89_ptr_sync
 ***************************************************************************/
/* rg_rx :: rx_gb_ln89_ptr_sync :: ptr_sync9 [15:12] */
#define RG_RX_RX_GB_LN89_PTR_SYNC_PTR_SYNC9_MASK                   0xf000
#define RG_RX_RX_GB_LN89_PTR_SYNC_PTR_SYNC9_ALIGN                  0
#define RG_RX_RX_GB_LN89_PTR_SYNC_PTR_SYNC9_BITS                   4
#define RG_RX_RX_GB_LN89_PTR_SYNC_PTR_SYNC9_SHIFT                  12

/* rg_rx :: rx_gb_ln89_ptr_sync :: ptr_sync8 [11:08] */
#define RG_RX_RX_GB_LN89_PTR_SYNC_PTR_SYNC8_MASK                   0x0f00
#define RG_RX_RX_GB_LN89_PTR_SYNC_PTR_SYNC8_ALIGN                  0
#define RG_RX_RX_GB_LN89_PTR_SYNC_PTR_SYNC8_BITS                   4
#define RG_RX_RX_GB_LN89_PTR_SYNC_PTR_SYNC8_SHIFT                  8

/* rg_rx :: rx_gb_ln89_ptr_sync :: lp_ptr_sync9 [07:04] */
#define RG_RX_RX_GB_LN89_PTR_SYNC_LP_PTR_SYNC9_MASK                0x00f0
#define RG_RX_RX_GB_LN89_PTR_SYNC_LP_PTR_SYNC9_ALIGN               0
#define RG_RX_RX_GB_LN89_PTR_SYNC_LP_PTR_SYNC9_BITS                4
#define RG_RX_RX_GB_LN89_PTR_SYNC_LP_PTR_SYNC9_SHIFT               4

/* rg_rx :: rx_gb_ln89_ptr_sync :: lp_ptr_sync8 [03:00] */
#define RG_RX_RX_GB_LN89_PTR_SYNC_LP_PTR_SYNC8_MASK                0x000f
#define RG_RX_RX_GB_LN89_PTR_SYNC_LP_PTR_SYNC8_ALIGN               0
#define RG_RX_RX_GB_LN89_PTR_SYNC_LP_PTR_SYNC8_BITS                4
#define RG_RX_RX_GB_LN89_PTR_SYNC_LP_PTR_SYNC8_SHIFT               0


/****************************************************************************
 * rg_rx :: rx_gb_ptr_sync1
 ***************************************************************************/
/* rg_rx :: rx_gb_ptr_sync1 :: ptr_sync7 [15:12] */
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC7_MASK                       0xf000
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC7_ALIGN                      0
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC7_BITS                       4
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC7_SHIFT                      12

/* rg_rx :: rx_gb_ptr_sync1 :: ptr_sync6 [11:08] */
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC6_MASK                       0x0f00
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC6_ALIGN                      0
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC6_BITS                       4
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC6_SHIFT                      8

/* rg_rx :: rx_gb_ptr_sync1 :: ptr_sync5 [07:04] */
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC5_MASK                       0x00f0
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC5_ALIGN                      0
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC5_BITS                       4
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC5_SHIFT                      4

/* rg_rx :: rx_gb_ptr_sync1 :: ptr_sync4 [03:00] */
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC4_MASK                       0x000f
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC4_ALIGN                      0
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC4_BITS                       4
#define RG_RX_RX_GB_PTR_SYNC1_PTR_SYNC4_SHIFT                      0


/****************************************************************************
 * rg_rx :: rx_gb_ptr_sync0
 ***************************************************************************/
/* rg_rx :: rx_gb_ptr_sync0 :: ptr_sync3 [15:12] */
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC3_MASK                       0xf000
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC3_ALIGN                      0
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC3_BITS                       4
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC3_SHIFT                      12

/* rg_rx :: rx_gb_ptr_sync0 :: ptr_sync2 [11:08] */
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC2_MASK                       0x0f00
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC2_ALIGN                      0
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC2_BITS                       4
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC2_SHIFT                      8

/* rg_rx :: rx_gb_ptr_sync0 :: ptr_sync1 [07:04] */
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC1_MASK                       0x00f0
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC1_ALIGN                      0
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC1_BITS                       4
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC1_SHIFT                      4

/* rg_rx :: rx_gb_ptr_sync0 :: ptr_sync0 [03:00] */
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC0_MASK                       0x000f
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC0_ALIGN                      0
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC0_BITS                       4
#define RG_RX_RX_GB_PTR_SYNC0_PTR_SYNC0_SHIFT                      0


/****************************************************************************
 * rg_rx :: rx_gb_lpbk_col_threshold0
 ***************************************************************************/
/* rg_rx :: rx_gb_lpbk_col_threshold0 :: lpbk_col_threshold3 [15:12] */
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD3_MASK   0xf000
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD3_ALIGN  0
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD3_BITS   4
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD3_SHIFT  12

/* rg_rx :: rx_gb_lpbk_col_threshold0 :: lpbk_col_threshold2 [11:08] */
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD2_MASK   0x0f00
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD2_ALIGN  0
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD2_BITS   4
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD2_SHIFT  8

/* rg_rx :: rx_gb_lpbk_col_threshold0 :: lpbk_col_threshold1 [07:04] */
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD1_MASK   0x00f0
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD1_ALIGN  0
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD1_BITS   4
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD1_SHIFT  4

/* rg_rx :: rx_gb_lpbk_col_threshold0 :: lpbk_col_threshold0 [03:00] */
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD0_MASK   0x000f
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD0_ALIGN  0
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD0_BITS   4
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD0_SHIFT  0


/****************************************************************************
 * rg_rx :: rx_gb_lpbk_col_threshold1
 ***************************************************************************/
/* rg_rx :: rx_gb_lpbk_col_threshold1 :: lpbk_col_threshold7 [15:12] */
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD7_MASK   0xf000
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD7_ALIGN  0
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD7_BITS   4
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD7_SHIFT  12

/* rg_rx :: rx_gb_lpbk_col_threshold1 :: lpbk_col_threshold6 [11:08] */
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD6_MASK   0x0f00
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD6_ALIGN  0
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD6_BITS   4
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD6_SHIFT  8

/* rg_rx :: rx_gb_lpbk_col_threshold1 :: lpbk_col_threshold5 [07:04] */
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD5_MASK   0x00f0
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD5_ALIGN  0
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD5_BITS   4
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD5_SHIFT  4

/* rg_rx :: rx_gb_lpbk_col_threshold1 :: lpbk_col_threshold4 [03:00] */
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD4_MASK   0x000f
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD4_ALIGN  0
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD4_BITS   4
#define RG_RX_RX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD4_SHIFT  0


/****************************************************************************
 * rg_rx :: rx_gb_col_threshold89
 ***************************************************************************/
/* rg_rx :: rx_gb_col_threshold89 :: col_threshold9 [15:12] */
#define RG_RX_RX_GB_COL_THRESHOLD89_COL_THRESHOLD9_MASK            0xf000
#define RG_RX_RX_GB_COL_THRESHOLD89_COL_THRESHOLD9_ALIGN           0
#define RG_RX_RX_GB_COL_THRESHOLD89_COL_THRESHOLD9_BITS            4
#define RG_RX_RX_GB_COL_THRESHOLD89_COL_THRESHOLD9_SHIFT           12

/* rg_rx :: rx_gb_col_threshold89 :: col_threshold8 [11:08] */
#define RG_RX_RX_GB_COL_THRESHOLD89_COL_THRESHOLD8_MASK            0x0f00
#define RG_RX_RX_GB_COL_THRESHOLD89_COL_THRESHOLD8_ALIGN           0
#define RG_RX_RX_GB_COL_THRESHOLD89_COL_THRESHOLD8_BITS            4
#define RG_RX_RX_GB_COL_THRESHOLD89_COL_THRESHOLD8_SHIFT           8

/* rg_rx :: rx_gb_col_threshold89 :: lpbk_col_threshold9 [07:04] */
#define RG_RX_RX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD9_MASK       0x00f0
#define RG_RX_RX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD9_ALIGN      0
#define RG_RX_RX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD9_BITS       4
#define RG_RX_RX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD9_SHIFT      4

/* rg_rx :: rx_gb_col_threshold89 :: lpbk_col_threshold8 [03:00] */
#define RG_RX_RX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD8_MASK       0x000f
#define RG_RX_RX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD8_ALIGN      0
#define RG_RX_RX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD8_BITS       4
#define RG_RX_RX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD8_SHIFT      0


/****************************************************************************
 * rg_rx :: rx_gb_col_threshold1
 ***************************************************************************/
/* rg_rx :: rx_gb_col_threshold1 :: col_threshold7 [15:12] */
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD7_MASK             0xf000
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD7_ALIGN            0
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD7_BITS             4
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD7_SHIFT            12

/* rg_rx :: rx_gb_col_threshold1 :: col_threshold6 [11:08] */
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD6_MASK             0x0f00
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD6_ALIGN            0
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD6_BITS             4
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD6_SHIFT            8

/* rg_rx :: rx_gb_col_threshold1 :: col_threshold5 [07:04] */
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD5_MASK             0x00f0
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD5_ALIGN            0
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD5_BITS             4
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD5_SHIFT            4

/* rg_rx :: rx_gb_col_threshold1 :: col_threshold4 [03:00] */
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD4_MASK             0x000f
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD4_ALIGN            0
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD4_BITS             4
#define RG_RX_RX_GB_COL_THRESHOLD1_COL_THRESHOLD4_SHIFT            0


/****************************************************************************
 * rg_rx :: rx_gb_col_threshold0
 ***************************************************************************/
/* rg_rx :: rx_gb_col_threshold0 :: col_threshold3 [15:12] */
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD3_MASK             0xf000
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD3_ALIGN            0
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD3_BITS             4
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD3_SHIFT            12

/* rg_rx :: rx_gb_col_threshold0 :: col_threshold2 [11:08] */
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD2_MASK             0x0f00
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD2_ALIGN            0
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD2_BITS             4
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD2_SHIFT            8

/* rg_rx :: rx_gb_col_threshold0 :: col_threshold1 [07:04] */
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD1_MASK             0x00f0
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD1_ALIGN            0
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD1_BITS             4
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD1_SHIFT            4

/* rg_rx :: rx_gb_col_threshold0 :: col_threshold0 [03:00] */
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD0_MASK             0x000f
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD0_ALIGN            0
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD0_BITS             4
#define RG_RX_RX_GB_COL_THRESHOLD0_COL_THRESHOLD0_SHIFT            0


/****************************************************************************
 * rg_rx :: rx_gb_prbs_gen_ierr
 ***************************************************************************/
/* rg_rx :: rx_gb_prbs_gen_ierr :: reserved0 [15:10] */
#define RG_RX_RX_GB_PRBS_GEN_IERR_RESERVED0_MASK                   0xfc00
#define RG_RX_RX_GB_PRBS_GEN_IERR_RESERVED0_ALIGN                  0
#define RG_RX_RX_GB_PRBS_GEN_IERR_RESERVED0_BITS                   6
#define RG_RX_RX_GB_PRBS_GEN_IERR_RESERVED0_SHIFT                  10

/* rg_rx :: rx_gb_prbs_gen_ierr :: prbs_ierr [09:00] */
#define RG_RX_RX_GB_PRBS_GEN_IERR_PRBS_IERR_MASK                   0x03ff
#define RG_RX_RX_GB_PRBS_GEN_IERR_PRBS_IERR_ALIGN                  0
#define RG_RX_RX_GB_PRBS_GEN_IERR_PRBS_IERR_BITS                   10
#define RG_RX_RX_GB_PRBS_GEN_IERR_PRBS_IERR_SHIFT                  0


/****************************************************************************
 * rg_rx :: rx_gb_io_bit_ctrl
 ***************************************************************************/
/* rg_rx :: rx_gb_io_bit_ctrl :: reserved0 [15:13] */
#define RG_RX_RX_GB_IO_BIT_CTRL_RESERVED0_MASK                     0xe000
#define RG_RX_RX_GB_IO_BIT_CTRL_RESERVED0_ALIGN                    0
#define RG_RX_RX_GB_IO_BIT_CTRL_RESERVED0_BITS                     3
#define RG_RX_RX_GB_IO_BIT_CTRL_RESERVED0_SHIFT                    13

/* rg_rx :: rx_gb_io_bit_ctrl :: srx_rev_en [12:12] */
#define RG_RX_RX_GB_IO_BIT_CTRL_SRX_REV_EN_MASK                    0x1000
#define RG_RX_RX_GB_IO_BIT_CTRL_SRX_REV_EN_ALIGN                   0
#define RG_RX_RX_GB_IO_BIT_CTRL_SRX_REV_EN_BITS                    1
#define RG_RX_RX_GB_IO_BIT_CTRL_SRX_REV_EN_SHIFT                   12

/* rg_rx :: rx_gb_io_bit_ctrl :: lrx_ds_rev_en [11:11] */
#define RG_RX_RX_GB_IO_BIT_CTRL_LRX_DS_REV_EN_MASK                 0x0800
#define RG_RX_RX_GB_IO_BIT_CTRL_LRX_DS_REV_EN_ALIGN                0
#define RG_RX_RX_GB_IO_BIT_CTRL_LRX_DS_REV_EN_BITS                 1
#define RG_RX_RX_GB_IO_BIT_CTRL_LRX_DS_REV_EN_SHIFT                11

/* rg_rx :: rx_gb_io_bit_ctrl :: lrx_10g_rev_en [10:10] */
#define RG_RX_RX_GB_IO_BIT_CTRL_LRX_10G_REV_EN_MASK                0x0400
#define RG_RX_RX_GB_IO_BIT_CTRL_LRX_10G_REV_EN_ALIGN               0
#define RG_RX_RX_GB_IO_BIT_CTRL_LRX_10G_REV_EN_BITS                1
#define RG_RX_RX_GB_IO_BIT_CTRL_LRX_10G_REV_EN_SHIFT               10

/* rg_rx :: rx_gb_io_bit_ctrl :: output_invert [09:00] */
#define RG_RX_RX_GB_IO_BIT_CTRL_OUTPUT_INVERT_MASK                 0x03ff
#define RG_RX_RX_GB_IO_BIT_CTRL_OUTPUT_INVERT_ALIGN                0
#define RG_RX_RX_GB_IO_BIT_CTRL_OUTPUT_INVERT_BITS                 10
#define RG_RX_RX_GB_IO_BIT_CTRL_OUTPUT_INVERT_SHIFT                0


/****************************************************************************
 * rg_rx :: rx_gb_caui_clk_sel
 ***************************************************************************/
/* rg_rx :: rx_gb_caui_clk_sel :: caui_clk_sel [15:15] */
#define RG_RX_RX_GB_CAUI_CLK_SEL_CAUI_CLK_SEL_MASK                 0x8000
#define RG_RX_RX_GB_CAUI_CLK_SEL_CAUI_CLK_SEL_ALIGN                0
#define RG_RX_RX_GB_CAUI_CLK_SEL_CAUI_CLK_SEL_BITS                 1
#define RG_RX_RX_GB_CAUI_CLK_SEL_CAUI_CLK_SEL_SHIFT                15

/* rg_rx :: rx_gb_caui_clk_sel :: logic_lane_test [14:14] */
#define RG_RX_RX_GB_CAUI_CLK_SEL_LOGIC_LANE_TEST_MASK              0x4000
#define RG_RX_RX_GB_CAUI_CLK_SEL_LOGIC_LANE_TEST_ALIGN             0
#define RG_RX_RX_GB_CAUI_CLK_SEL_LOGIC_LANE_TEST_BITS              1
#define RG_RX_RX_GB_CAUI_CLK_SEL_LOGIC_LANE_TEST_SHIFT             14

/* rg_rx :: rx_gb_caui_clk_sel :: gen_next_lane [13:04] */
#define RG_RX_RX_GB_CAUI_CLK_SEL_GEN_NEXT_LANE_MASK                0x3ff0
#define RG_RX_RX_GB_CAUI_CLK_SEL_GEN_NEXT_LANE_ALIGN               0
#define RG_RX_RX_GB_CAUI_CLK_SEL_GEN_NEXT_LANE_BITS                10
#define RG_RX_RX_GB_CAUI_CLK_SEL_GEN_NEXT_LANE_SHIFT               4

/* rg_rx :: rx_gb_caui_clk_sel :: check_next_lane [03:00] */
#define RG_RX_RX_GB_CAUI_CLK_SEL_CHECK_NEXT_LANE_MASK              0x000f
#define RG_RX_RX_GB_CAUI_CLK_SEL_CHECK_NEXT_LANE_ALIGN             0
#define RG_RX_RX_GB_CAUI_CLK_SEL_CHECK_NEXT_LANE_BITS              4
#define RG_RX_RX_GB_CAUI_CLK_SEL_CHECK_NEXT_LANE_SHIFT             0


/****************************************************************************
 * rg_rx :: rx_gb_ber_mntr_status
 ***************************************************************************/
/* rg_rx :: rx_gb_ber_mntr_status :: reserved0 [15:08] */
#define RG_RX_RX_GB_BER_MNTR_STATUS_RESERVED0_MASK                 0xff00
#define RG_RX_RX_GB_BER_MNTR_STATUS_RESERVED0_ALIGN                0
#define RG_RX_RX_GB_BER_MNTR_STATUS_RESERVED0_BITS                 8
#define RG_RX_RX_GB_BER_MNTR_STATUS_RESERVED0_SHIFT                8

/* rg_rx :: rx_gb_ber_mntr_status :: ber_mntr_done [07:04] */
#define RG_RX_RX_GB_BER_MNTR_STATUS_BER_MNTR_DONE_MASK             0x00f0
#define RG_RX_RX_GB_BER_MNTR_STATUS_BER_MNTR_DONE_ALIGN            0
#define RG_RX_RX_GB_BER_MNTR_STATUS_BER_MNTR_DONE_BITS             4
#define RG_RX_RX_GB_BER_MNTR_STATUS_BER_MNTR_DONE_SHIFT            4

/* rg_rx :: rx_gb_ber_mntr_status :: waiting_for_lock [03:00] */
#define RG_RX_RX_GB_BER_MNTR_STATUS_WAITING_FOR_LOCK_MASK          0x000f
#define RG_RX_RX_GB_BER_MNTR_STATUS_WAITING_FOR_LOCK_ALIGN         0
#define RG_RX_RX_GB_BER_MNTR_STATUS_WAITING_FOR_LOCK_BITS          4
#define RG_RX_RX_GB_BER_MNTR_STATUS_WAITING_FOR_LOCK_SHIFT         0


/****************************************************************************
 * rg_rx :: rx_gb_prbs_pattern_present
 ***************************************************************************/
/* rg_rx :: rx_gb_prbs_pattern_present :: reserved0 [15:10] */
#define RG_RX_RX_GB_PRBS_PATTERN_PRESENT_RESERVED0_MASK            0xfc00
#define RG_RX_RX_GB_PRBS_PATTERN_PRESENT_RESERVED0_ALIGN           0
#define RG_RX_RX_GB_PRBS_PATTERN_PRESENT_RESERVED0_BITS            6
#define RG_RX_RX_GB_PRBS_PATTERN_PRESENT_RESERVED0_SHIFT           10

/* rg_rx :: rx_gb_prbs_pattern_present :: pattern_present [09:00] */
#define RG_RX_RX_GB_PRBS_PATTERN_PRESENT_PATTERN_PRESENT_MASK      0x03ff
#define RG_RX_RX_GB_PRBS_PATTERN_PRESENT_PATTERN_PRESENT_ALIGN     0
#define RG_RX_RX_GB_PRBS_PATTERN_PRESENT_PATTERN_PRESENT_BITS      10
#define RG_RX_RX_GB_PRBS_PATTERN_PRESENT_PATTERN_PRESENT_SHIFT     0


/****************************************************************************
 * rg_rx :: rx_gb_prbs_lock
 ***************************************************************************/
/* rg_rx :: rx_gb_prbs_lock :: reserved0 [15:10] */
#define RG_RX_RX_GB_PRBS_LOCK_RESERVED0_MASK                       0xfc00
#define RG_RX_RX_GB_PRBS_LOCK_RESERVED0_ALIGN                      0
#define RG_RX_RX_GB_PRBS_LOCK_RESERVED0_BITS                       6
#define RG_RX_RX_GB_PRBS_LOCK_RESERVED0_SHIFT                      10

/* rg_rx :: rx_gb_prbs_lock :: prbs_lock [09:00] */
#define RG_RX_RX_GB_PRBS_LOCK_PRBS_LOCK_MASK                       0x03ff
#define RG_RX_RX_GB_PRBS_LOCK_PRBS_LOCK_ALIGN                      0
#define RG_RX_RX_GB_PRBS_LOCK_PRBS_LOCK_BITS                       10
#define RG_RX_RX_GB_PRBS_LOCK_PRBS_LOCK_SHIFT                      0


/****************************************************************************
 * rg_rx :: rx_gb_prbs_lock_ll
 ***************************************************************************/
/* rg_rx :: rx_gb_prbs_lock_ll :: reserved0 [15:10] */
#define RG_RX_RX_GB_PRBS_LOCK_LL_RESERVED0_MASK                    0xfc00
#define RG_RX_RX_GB_PRBS_LOCK_LL_RESERVED0_ALIGN                   0
#define RG_RX_RX_GB_PRBS_LOCK_LL_RESERVED0_BITS                    6
#define RG_RX_RX_GB_PRBS_LOCK_LL_RESERVED0_SHIFT                   10

/* rg_rx :: rx_gb_prbs_lock_ll :: prbs_lock_ll [09:00] */
#define RG_RX_RX_GB_PRBS_LOCK_LL_PRBS_LOCK_LL_MASK                 0x03ff
#define RG_RX_RX_GB_PRBS_LOCK_LL_PRBS_LOCK_LL_ALIGN                0
#define RG_RX_RX_GB_PRBS_LOCK_LL_PRBS_LOCK_LL_BITS                 10
#define RG_RX_RX_GB_PRBS_LOCK_LL_PRBS_LOCK_LL_SHIFT                0


/****************************************************************************
 * rg_rx :: rx_gb_prbs_status_out
 ***************************************************************************/
/* rg_rx :: rx_gb_prbs_status_out :: prbs_inv_out [15:12] */
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_INV_OUT_MASK              0xf000
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_INV_OUT_ALIGN             0
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_INV_OUT_BITS              4
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_INV_OUT_SHIFT             12

/* rg_rx :: rx_gb_prbs_status_out :: prbs_sel_out3 [11:09] */
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT3_MASK             0x0e00
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT3_ALIGN            0
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT3_BITS             3
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT3_SHIFT            9

/* rg_rx :: rx_gb_prbs_status_out :: prbs_sel_out2 [08:06] */
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT2_MASK             0x01c0
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT2_ALIGN            0
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT2_BITS             3
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT2_SHIFT            6

/* rg_rx :: rx_gb_prbs_status_out :: prbs_sel_out1 [05:03] */
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT1_MASK             0x0038
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT1_ALIGN            0
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT1_BITS             3
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT1_SHIFT            3

/* rg_rx :: rx_gb_prbs_status_out :: prbs_sel_out0 [02:00] */
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT0_MASK             0x0007
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT0_ALIGN            0
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT0_BITS             3
#define RG_RX_RX_GB_PRBS_STATUS_OUT_PRBS_SEL_OUT0_SHIFT            0


/****************************************************************************
 * rg_rx :: rx_gb_lsb_err_cnt
 ***************************************************************************/
/* rg_rx :: rx_gb_lsb_err_cnt :: lsb_err_cnt [15:00] */
#define RG_RX_RX_GB_LSB_ERR_CNT_LSB_ERR_CNT_MASK                   0xffff
#define RG_RX_RX_GB_LSB_ERR_CNT_LSB_ERR_CNT_ALIGN                  0
#define RG_RX_RX_GB_LSB_ERR_CNT_LSB_ERR_CNT_BITS                   16
#define RG_RX_RX_GB_LSB_ERR_CNT_LSB_ERR_CNT_SHIFT                  0


/****************************************************************************
 * rg_rx :: rx_gb_msb_err_cnt
 ***************************************************************************/
/* rg_rx :: rx_gb_msb_err_cnt :: msb_err_cnt [15:00] */
#define RG_RX_RX_GB_MSB_ERR_CNT_MSB_ERR_CNT_MASK                   0xffff
#define RG_RX_RX_GB_MSB_ERR_CNT_MSB_ERR_CNT_ALIGN                  0
#define RG_RX_RX_GB_MSB_ERR_CNT_MSB_ERR_CNT_BITS                   16
#define RG_RX_RX_GB_MSB_ERR_CNT_MSB_ERR_CNT_SHIFT                  0


/****************************************************************************
 * rg_rx :: rx_gb_collide_lpbk
 ***************************************************************************/
/* rg_rx :: rx_gb_collide_lpbk :: reserved0 [15:10] */
#define RG_RX_RX_GB_COLLIDE_LPBK_RESERVED0_MASK                    0xfc00
#define RG_RX_RX_GB_COLLIDE_LPBK_RESERVED0_ALIGN                   0
#define RG_RX_RX_GB_COLLIDE_LPBK_RESERVED0_BITS                    6
#define RG_RX_RX_GB_COLLIDE_LPBK_RESERVED0_SHIFT                   10

/* rg_rx :: rx_gb_collide_lpbk :: collide_lpbk [09:00] */
#define RG_RX_RX_GB_COLLIDE_LPBK_COLLIDE_LPBK_MASK                 0x03ff
#define RG_RX_RX_GB_COLLIDE_LPBK_COLLIDE_LPBK_ALIGN                0
#define RG_RX_RX_GB_COLLIDE_LPBK_COLLIDE_LPBK_BITS                 10
#define RG_RX_RX_GB_COLLIDE_LPBK_COLLIDE_LPBK_SHIFT                0


/****************************************************************************
 * rg_rx :: rx_gb_collide_lpbk_lh
 ***************************************************************************/
/* rg_rx :: rx_gb_collide_lpbk_lh :: reserved0 [15:10] */
#define RG_RX_RX_GB_COLLIDE_LPBK_LH_RESERVED0_MASK                 0xfc00
#define RG_RX_RX_GB_COLLIDE_LPBK_LH_RESERVED0_ALIGN                0
#define RG_RX_RX_GB_COLLIDE_LPBK_LH_RESERVED0_BITS                 6
#define RG_RX_RX_GB_COLLIDE_LPBK_LH_RESERVED0_SHIFT                10

/* rg_rx :: rx_gb_collide_lpbk_lh :: collide_lpbk_lh [09:00] */
#define RG_RX_RX_GB_COLLIDE_LPBK_LH_COLLIDE_LPBK_LH_MASK           0x03ff
#define RG_RX_RX_GB_COLLIDE_LPBK_LH_COLLIDE_LPBK_LH_ALIGN          0
#define RG_RX_RX_GB_COLLIDE_LPBK_LH_COLLIDE_LPBK_LH_BITS           10
#define RG_RX_RX_GB_COLLIDE_LPBK_LH_COLLIDE_LPBK_LH_SHIFT          0


/****************************************************************************
 * rg_rx :: rx_gb_collide
 ***************************************************************************/
/* rg_rx :: rx_gb_collide :: reserved0 [15:10] */
#define RG_RX_RX_GB_COLLIDE_RESERVED0_MASK                         0xfc00
#define RG_RX_RX_GB_COLLIDE_RESERVED0_ALIGN                        0
#define RG_RX_RX_GB_COLLIDE_RESERVED0_BITS                         6
#define RG_RX_RX_GB_COLLIDE_RESERVED0_SHIFT                        10

/* rg_rx :: rx_gb_collide :: collide [09:00] */
#define RG_RX_RX_GB_COLLIDE_COLLIDE_MASK                           0x03ff
#define RG_RX_RX_GB_COLLIDE_COLLIDE_ALIGN                          0
#define RG_RX_RX_GB_COLLIDE_COLLIDE_BITS                           10
#define RG_RX_RX_GB_COLLIDE_COLLIDE_SHIFT                          0


/****************************************************************************
 * rg_rx :: rx_gb_collide_lh
 ***************************************************************************/
/* rg_rx :: rx_gb_collide_lh :: reserved0 [15:10] */
#define RG_RX_RX_GB_COLLIDE_LH_RESERVED0_MASK                      0xfc00
#define RG_RX_RX_GB_COLLIDE_LH_RESERVED0_ALIGN                     0
#define RG_RX_RX_GB_COLLIDE_LH_RESERVED0_BITS                      6
#define RG_RX_RX_GB_COLLIDE_LH_RESERVED0_SHIFT                     10

/* rg_rx :: rx_gb_collide_lh :: collide_lh [09:00] */
#define RG_RX_RX_GB_COLLIDE_LH_COLLIDE_LH_MASK                     0x03ff
#define RG_RX_RX_GB_COLLIDE_LH_COLLIDE_LH_ALIGN                    0
#define RG_RX_RX_GB_COLLIDE_LH_COLLIDE_LH_BITS                     10
#define RG_RX_RX_GB_COLLIDE_LH_COLLIDE_LH_SHIFT                    0


/****************************************************************************
 * rg_rx :: rx_gb_err_data_0
 ***************************************************************************/
/* rg_rx :: rx_gb_err_data_0 :: err_data_0 [15:00] */
#define RG_RX_RX_GB_ERR_DATA_0_ERR_DATA_0_MASK                     0xffff
#define RG_RX_RX_GB_ERR_DATA_0_ERR_DATA_0_ALIGN                    0
#define RG_RX_RX_GB_ERR_DATA_0_ERR_DATA_0_BITS                     16
#define RG_RX_RX_GB_ERR_DATA_0_ERR_DATA_0_SHIFT                    0


/****************************************************************************
 * rg_rx :: rx_gb_err_data_1
 ***************************************************************************/
/* rg_rx :: rx_gb_err_data_1 :: err_data_1 [15:00] */
#define RG_RX_RX_GB_ERR_DATA_1_ERR_DATA_1_MASK                     0xffff
#define RG_RX_RX_GB_ERR_DATA_1_ERR_DATA_1_ALIGN                    0
#define RG_RX_RX_GB_ERR_DATA_1_ERR_DATA_1_BITS                     16
#define RG_RX_RX_GB_ERR_DATA_1_ERR_DATA_1_SHIFT                    0


/****************************************************************************
 * rg_rx :: rx_gb_err_data_2
 ***************************************************************************/
/* rg_rx :: rx_gb_err_data_2 :: err_data_2 [15:00] */
#define RG_RX_RX_GB_ERR_DATA_2_ERR_DATA_2_MASK                     0xffff
#define RG_RX_RX_GB_ERR_DATA_2_ERR_DATA_2_ALIGN                    0
#define RG_RX_RX_GB_ERR_DATA_2_ERR_DATA_2_BITS                     16
#define RG_RX_RX_GB_ERR_DATA_2_ERR_DATA_2_SHIFT                    0


/****************************************************************************
 * rg_rx :: rx_gb_err_data_3
 ***************************************************************************/
/* rg_rx :: rx_gb_err_data_3 :: err_data_3 [15:00] */
#define RG_RX_RX_GB_ERR_DATA_3_ERR_DATA_3_MASK                     0xffff
#define RG_RX_RX_GB_ERR_DATA_3_ERR_DATA_3_ALIGN                    0
#define RG_RX_RX_GB_ERR_DATA_3_ERR_DATA_3_BITS                     16
#define RG_RX_RX_GB_ERR_DATA_3_ERR_DATA_3_SHIFT                    0


/****************************************************************************
 * rg_rx :: rx_gb_err_data_4
 ***************************************************************************/
/* rg_rx :: rx_gb_err_data_4 :: err_data_4 [15:00] */
#define RG_RX_RX_GB_ERR_DATA_4_ERR_DATA_4_MASK                     0xffff
#define RG_RX_RX_GB_ERR_DATA_4_ERR_DATA_4_ALIGN                    0
#define RG_RX_RX_GB_ERR_DATA_4_ERR_DATA_4_BITS                     16
#define RG_RX_RX_GB_ERR_DATA_4_ERR_DATA_4_SHIFT                    0


/****************************************************************************
 * rg_rx :: rx_gb_err_data_5
 ***************************************************************************/
/* rg_rx :: rx_gb_err_data_5 :: err_data_5 [15:00] */
#define RG_RX_RX_GB_ERR_DATA_5_ERR_DATA_5_MASK                     0xffff
#define RG_RX_RX_GB_ERR_DATA_5_ERR_DATA_5_ALIGN                    0
#define RG_RX_RX_GB_ERR_DATA_5_ERR_DATA_5_BITS                     16
#define RG_RX_RX_GB_ERR_DATA_5_ERR_DATA_5_SHIFT                    0


/****************************************************************************
 * rg_rx :: rx_gb_err_data_6
 ***************************************************************************/
/* rg_rx :: rx_gb_err_data_6 :: err_data_6 [15:00] */
#define RG_RX_RX_GB_ERR_DATA_6_ERR_DATA_6_MASK                     0xffff
#define RG_RX_RX_GB_ERR_DATA_6_ERR_DATA_6_ALIGN                    0
#define RG_RX_RX_GB_ERR_DATA_6_ERR_DATA_6_BITS                     16
#define RG_RX_RX_GB_ERR_DATA_6_ERR_DATA_6_SHIFT                    0


/****************************************************************************
 * rg_rx :: rx_gb_err_data_7
 ***************************************************************************/
/* rg_rx :: rx_gb_err_data_7 :: err_data_7 [15:00] */
#define RG_RX_RX_GB_ERR_DATA_7_ERR_DATA_7_MASK                     0xffff
#define RG_RX_RX_GB_ERR_DATA_7_ERR_DATA_7_ALIGN                    0
#define RG_RX_RX_GB_ERR_DATA_7_ERR_DATA_7_BITS                     16
#define RG_RX_RX_GB_ERR_DATA_7_ERR_DATA_7_SHIFT                    0


/****************************************************************************
 * rg_rx :: rx_gb_err_data_8
 ***************************************************************************/
/* rg_rx :: rx_gb_err_data_8 :: err_data_8 [15:00] */
#define RG_RX_RX_GB_ERR_DATA_8_ERR_DATA_8_MASK                     0xffff
#define RG_RX_RX_GB_ERR_DATA_8_ERR_DATA_8_ALIGN                    0
#define RG_RX_RX_GB_ERR_DATA_8_ERR_DATA_8_BITS                     16
#define RG_RX_RX_GB_ERR_DATA_8_ERR_DATA_8_SHIFT                    0


/****************************************************************************
 * rg_tx_regs
 ***************************************************************************/
/****************************************************************************
 * rg_tx :: tx_gb_system_reset
 ***************************************************************************/
/* rg_tx :: tx_gb_system_reset :: reserved0 [15:10] */
#define RG_TX_TX_GB_SYSTEM_RESET_RESERVED0_MASK                    0xfc00
#define RG_TX_TX_GB_SYSTEM_RESET_RESERVED0_ALIGN                   0
#define RG_TX_TX_GB_SYSTEM_RESET_RESERVED0_BITS                    6
#define RG_TX_TX_GB_SYSTEM_RESET_RESERVED0_SHIFT                   10

/* rg_tx :: tx_gb_system_reset :: stx_rstb [09:00] */
#define RG_TX_TX_GB_SYSTEM_RESET_STX_RSTB_MASK                     0x03ff
#define RG_TX_TX_GB_SYSTEM_RESET_STX_RSTB_ALIGN                    0
#define RG_TX_TX_GB_SYSTEM_RESET_STX_RSTB_BITS                     10
#define RG_TX_TX_GB_SYSTEM_RESET_STX_RSTB_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_system_reset_frc
 ***************************************************************************/
/* rg_tx :: tx_gb_system_reset_frc :: reserved0 [15:10] */
#define RG_TX_TX_GB_SYSTEM_RESET_FRC_RESERVED0_MASK                0xfc00
#define RG_TX_TX_GB_SYSTEM_RESET_FRC_RESERVED0_ALIGN               0
#define RG_TX_TX_GB_SYSTEM_RESET_FRC_RESERVED0_BITS                6
#define RG_TX_TX_GB_SYSTEM_RESET_FRC_RESERVED0_SHIFT               10

/* rg_tx :: tx_gb_system_reset_frc :: stx_rstb_frc [09:00] */
#define RG_TX_TX_GB_SYSTEM_RESET_FRC_STX_RSTB_FRC_MASK             0x03ff
#define RG_TX_TX_GB_SYSTEM_RESET_FRC_STX_RSTB_FRC_ALIGN            0
#define RG_TX_TX_GB_SYSTEM_RESET_FRC_STX_RSTB_FRC_BITS             10
#define RG_TX_TX_GB_SYSTEM_RESET_FRC_STX_RSTB_FRC_SHIFT            0


/****************************************************************************
 * rg_tx :: tx_gb_line_reset
 ***************************************************************************/
/* rg_tx :: tx_gb_line_reset :: reserved0 [15:10] */
#define RG_TX_TX_GB_LINE_RESET_RESERVED0_MASK                      0xfc00
#define RG_TX_TX_GB_LINE_RESET_RESERVED0_ALIGN                     0
#define RG_TX_TX_GB_LINE_RESET_RESERVED0_BITS                      6
#define RG_TX_TX_GB_LINE_RESET_RESERVED0_SHIFT                     10

/* rg_tx :: tx_gb_line_reset :: ltx_rstb [09:00] */
#define RG_TX_TX_GB_LINE_RESET_LTX_RSTB_MASK                       0x03ff
#define RG_TX_TX_GB_LINE_RESET_LTX_RSTB_ALIGN                      0
#define RG_TX_TX_GB_LINE_RESET_LTX_RSTB_BITS                       10
#define RG_TX_TX_GB_LINE_RESET_LTX_RSTB_SHIFT                      0


/****************************************************************************
 * rg_tx :: tx_gb_line_reset_frc
 ***************************************************************************/
/* rg_tx :: tx_gb_line_reset_frc :: reserved0 [15:10] */
#define RG_TX_TX_GB_LINE_RESET_FRC_RESERVED0_MASK                  0xfc00
#define RG_TX_TX_GB_LINE_RESET_FRC_RESERVED0_ALIGN                 0
#define RG_TX_TX_GB_LINE_RESET_FRC_RESERVED0_BITS                  6
#define RG_TX_TX_GB_LINE_RESET_FRC_RESERVED0_SHIFT                 10

/* rg_tx :: tx_gb_line_reset_frc :: ltx_rstb_frc [09:00] */
#define RG_TX_TX_GB_LINE_RESET_FRC_LTX_RSTB_FRC_MASK               0x03ff
#define RG_TX_TX_GB_LINE_RESET_FRC_LTX_RSTB_FRC_ALIGN              0
#define RG_TX_TX_GB_LINE_RESET_FRC_LTX_RSTB_FRC_BITS               10
#define RG_TX_TX_GB_LINE_RESET_FRC_LTX_RSTB_FRC_SHIFT              0


/****************************************************************************
 * rg_tx :: tx_gb_prbs_db_ctrl
 ***************************************************************************/
/* rg_tx :: tx_gb_prbs_db_ctrl :: reserved0 [15:14] */
#define RG_TX_TX_GB_PRBS_DB_CTRL_RESERVED0_MASK                    0xc000
#define RG_TX_TX_GB_PRBS_DB_CTRL_RESERVED0_ALIGN                   0
#define RG_TX_TX_GB_PRBS_DB_CTRL_RESERVED0_BITS                    2
#define RG_TX_TX_GB_PRBS_DB_CTRL_RESERVED0_SHIFT                   14

/* rg_tx :: tx_gb_prbs_db_ctrl :: ieee_prbs_inv [13:13] */
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_PRBS_INV_MASK                0x2000
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_PRBS_INV_ALIGN               0
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_PRBS_INV_BITS                1
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_PRBS_INV_SHIFT               13

/* rg_tx :: tx_gb_prbs_db_ctrl :: ieee_cnt_div3 [12:12] */
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_CNT_DIV3_MASK                0x1000
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_CNT_DIV3_ALIGN               0
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_CNT_DIV3_BITS                1
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_CNT_DIV3_SHIFT               12

/* rg_tx :: tx_gb_prbs_db_ctrl :: ieee_mode [11:08] */
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_MODE_MASK                    0x0f00
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_MODE_ALIGN                   0
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_MODE_BITS                    4
#define RG_TX_TX_GB_PRBS_DB_CTRL_IEEE_MODE_SHIFT                   8

/* rg_tx :: tx_gb_prbs_db_ctrl :: prbs_gen_en [07:04] */
#define RG_TX_TX_GB_PRBS_DB_CTRL_PRBS_GEN_EN_MASK                  0x00f0
#define RG_TX_TX_GB_PRBS_DB_CTRL_PRBS_GEN_EN_ALIGN                 0
#define RG_TX_TX_GB_PRBS_DB_CTRL_PRBS_GEN_EN_BITS                  4
#define RG_TX_TX_GB_PRBS_DB_CTRL_PRBS_GEN_EN_SHIFT                 4

/* rg_tx :: tx_gb_prbs_db_ctrl :: db_bypass [03:00] */
#define RG_TX_TX_GB_PRBS_DB_CTRL_DB_BYPASS_MASK                    0x000f
#define RG_TX_TX_GB_PRBS_DB_CTRL_DB_BYPASS_ALIGN                   0
#define RG_TX_TX_GB_PRBS_DB_CTRL_DB_BYPASS_BITS                    4
#define RG_TX_TX_GB_PRBS_DB_CTRL_DB_BYPASS_SHIFT                   0


/****************************************************************************
 * rg_tx :: tx_gb_test_ierr
 ***************************************************************************/
/* rg_tx :: tx_gb_test_ierr :: reserved0 [15:10] */
#define RG_TX_TX_GB_TEST_IERR_RESERVED0_MASK                       0xfc00
#define RG_TX_TX_GB_TEST_IERR_RESERVED0_ALIGN                      0
#define RG_TX_TX_GB_TEST_IERR_RESERVED0_BITS                       6
#define RG_TX_TX_GB_TEST_IERR_RESERVED0_SHIFT                      10

/* rg_tx :: tx_gb_test_ierr :: prbs_ierr [09:00] */
#define RG_TX_TX_GB_TEST_IERR_PRBS_IERR_MASK                       0x03ff
#define RG_TX_TX_GB_TEST_IERR_PRBS_IERR_ALIGN                      0
#define RG_TX_TX_GB_TEST_IERR_PRBS_IERR_BITS                       10
#define RG_TX_TX_GB_TEST_IERR_PRBS_IERR_SHIFT                      0


/****************************************************************************
 * rg_tx :: tx_gb_test_gen_ctrl
 ***************************************************************************/
/* rg_tx :: tx_gb_test_gen_ctrl :: prbs_inv [15:12] */
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_INV_MASK                    0xf000
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_INV_ALIGN                   0
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_INV_BITS                    4
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_INV_SHIFT                   12

/* rg_tx :: tx_gb_test_gen_ctrl :: prbs_sel3 [11:09] */
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL3_MASK                   0x0e00
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL3_ALIGN                  0
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL3_BITS                   3
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL3_SHIFT                  9

/* rg_tx :: tx_gb_test_gen_ctrl :: prbs_sel2 [08:06] */
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL2_MASK                   0x01c0
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL2_ALIGN                  0
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL2_BITS                   3
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL2_SHIFT                  6

/* rg_tx :: tx_gb_test_gen_ctrl :: prbs_sel1 [05:03] */
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL1_MASK                   0x0038
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL1_ALIGN                  0
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL1_BITS                   3
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL1_SHIFT                  3

/* rg_tx :: tx_gb_test_gen_ctrl :: prbs_sel0 [02:00] */
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL0_MASK                   0x0007
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL0_ALIGN                  0
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL0_BITS                   3
#define RG_TX_TX_GB_TEST_GEN_CTRL_PRBS_SEL0_SHIFT                  0


/****************************************************************************
 * rg_tx :: tx_gb_pattern0_0
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern0_0 :: pattern0_0 [15:00] */
#define RG_TX_TX_GB_PATTERN0_0_PATTERN0_0_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN0_0_PATTERN0_0_ALIGN                    0
#define RG_TX_TX_GB_PATTERN0_0_PATTERN0_0_BITS                     16
#define RG_TX_TX_GB_PATTERN0_0_PATTERN0_0_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern0_1
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern0_1 :: pattern0_1 [15:00] */
#define RG_TX_TX_GB_PATTERN0_1_PATTERN0_1_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN0_1_PATTERN0_1_ALIGN                    0
#define RG_TX_TX_GB_PATTERN0_1_PATTERN0_1_BITS                     16
#define RG_TX_TX_GB_PATTERN0_1_PATTERN0_1_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern0_2
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern0_2 :: pattern0_2 [15:00] */
#define RG_TX_TX_GB_PATTERN0_2_PATTERN0_2_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN0_2_PATTERN0_2_ALIGN                    0
#define RG_TX_TX_GB_PATTERN0_2_PATTERN0_2_BITS                     16
#define RG_TX_TX_GB_PATTERN0_2_PATTERN0_2_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern0_3
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern0_3 :: pattern0_3 [15:00] */
#define RG_TX_TX_GB_PATTERN0_3_PATTERN0_3_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN0_3_PATTERN0_3_ALIGN                    0
#define RG_TX_TX_GB_PATTERN0_3_PATTERN0_3_BITS                     16
#define RG_TX_TX_GB_PATTERN0_3_PATTERN0_3_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern0_4
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern0_4 :: pattern0_4 [15:00] */
#define RG_TX_TX_GB_PATTERN0_4_PATTERN0_4_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN0_4_PATTERN0_4_ALIGN                    0
#define RG_TX_TX_GB_PATTERN0_4_PATTERN0_4_BITS                     16
#define RG_TX_TX_GB_PATTERN0_4_PATTERN0_4_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern0_5
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern0_5 :: pattern0_5 [15:00] */
#define RG_TX_TX_GB_PATTERN0_5_PATTERN0_5_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN0_5_PATTERN0_5_ALIGN                    0
#define RG_TX_TX_GB_PATTERN0_5_PATTERN0_5_BITS                     16
#define RG_TX_TX_GB_PATTERN0_5_PATTERN0_5_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern0_6
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern0_6 :: pattern0_6 [15:00] */
#define RG_TX_TX_GB_PATTERN0_6_PATTERN0_6_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN0_6_PATTERN0_6_ALIGN                    0
#define RG_TX_TX_GB_PATTERN0_6_PATTERN0_6_BITS                     16
#define RG_TX_TX_GB_PATTERN0_6_PATTERN0_6_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern0_7
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern0_7 :: pattern0_7 [15:00] */
#define RG_TX_TX_GB_PATTERN0_7_PATTERN0_7_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN0_7_PATTERN0_7_ALIGN                    0
#define RG_TX_TX_GB_PATTERN0_7_PATTERN0_7_BITS                     16
#define RG_TX_TX_GB_PATTERN0_7_PATTERN0_7_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern1_0
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern1_0 :: pattern1_0 [15:00] */
#define RG_TX_TX_GB_PATTERN1_0_PATTERN1_0_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN1_0_PATTERN1_0_ALIGN                    0
#define RG_TX_TX_GB_PATTERN1_0_PATTERN1_0_BITS                     16
#define RG_TX_TX_GB_PATTERN1_0_PATTERN1_0_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern1_1
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern1_1 :: pattern1_1 [15:00] */
#define RG_TX_TX_GB_PATTERN1_1_PATTERN1_1_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN1_1_PATTERN1_1_ALIGN                    0
#define RG_TX_TX_GB_PATTERN1_1_PATTERN1_1_BITS                     16
#define RG_TX_TX_GB_PATTERN1_1_PATTERN1_1_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern1_2
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern1_2 :: pattern1_2 [15:00] */
#define RG_TX_TX_GB_PATTERN1_2_PATTERN1_2_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN1_2_PATTERN1_2_ALIGN                    0
#define RG_TX_TX_GB_PATTERN1_2_PATTERN1_2_BITS                     16
#define RG_TX_TX_GB_PATTERN1_2_PATTERN1_2_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern1_3
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern1_3 :: pattern1_3 [15:00] */
#define RG_TX_TX_GB_PATTERN1_3_PATTERN1_3_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN1_3_PATTERN1_3_ALIGN                    0
#define RG_TX_TX_GB_PATTERN1_3_PATTERN1_3_BITS                     16
#define RG_TX_TX_GB_PATTERN1_3_PATTERN1_3_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern1_4
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern1_4 :: pattern1_4 [15:00] */
#define RG_TX_TX_GB_PATTERN1_4_PATTERN1_4_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN1_4_PATTERN1_4_ALIGN                    0
#define RG_TX_TX_GB_PATTERN1_4_PATTERN1_4_BITS                     16
#define RG_TX_TX_GB_PATTERN1_4_PATTERN1_4_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern1_5
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern1_5 :: pattern1_5 [15:00] */
#define RG_TX_TX_GB_PATTERN1_5_PATTERN1_5_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN1_5_PATTERN1_5_ALIGN                    0
#define RG_TX_TX_GB_PATTERN1_5_PATTERN1_5_BITS                     16
#define RG_TX_TX_GB_PATTERN1_5_PATTERN1_5_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern1_6
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern1_6 :: pattern1_6 [15:00] */
#define RG_TX_TX_GB_PATTERN1_6_PATTERN1_6_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN1_6_PATTERN1_6_ALIGN                    0
#define RG_TX_TX_GB_PATTERN1_6_PATTERN1_6_BITS                     16
#define RG_TX_TX_GB_PATTERN1_6_PATTERN1_6_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern1_7
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern1_7 :: pattern1_7 [15:00] */
#define RG_TX_TX_GB_PATTERN1_7_PATTERN1_7_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN1_7_PATTERN1_7_ALIGN                    0
#define RG_TX_TX_GB_PATTERN1_7_PATTERN1_7_BITS                     16
#define RG_TX_TX_GB_PATTERN1_7_PATTERN1_7_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern2_0
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern2_0 :: pattern2_0 [15:00] */
#define RG_TX_TX_GB_PATTERN2_0_PATTERN2_0_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN2_0_PATTERN2_0_ALIGN                    0
#define RG_TX_TX_GB_PATTERN2_0_PATTERN2_0_BITS                     16
#define RG_TX_TX_GB_PATTERN2_0_PATTERN2_0_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern2_1
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern2_1 :: pattern2_1 [15:00] */
#define RG_TX_TX_GB_PATTERN2_1_PATTERN2_1_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN2_1_PATTERN2_1_ALIGN                    0
#define RG_TX_TX_GB_PATTERN2_1_PATTERN2_1_BITS                     16
#define RG_TX_TX_GB_PATTERN2_1_PATTERN2_1_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern2_2
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern2_2 :: pattern2_2 [15:00] */
#define RG_TX_TX_GB_PATTERN2_2_PATTERN2_2_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN2_2_PATTERN2_2_ALIGN                    0
#define RG_TX_TX_GB_PATTERN2_2_PATTERN2_2_BITS                     16
#define RG_TX_TX_GB_PATTERN2_2_PATTERN2_2_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern2_3
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern2_3 :: pattern2_3 [15:00] */
#define RG_TX_TX_GB_PATTERN2_3_PATTERN2_3_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN2_3_PATTERN2_3_ALIGN                    0
#define RG_TX_TX_GB_PATTERN2_3_PATTERN2_3_BITS                     16
#define RG_TX_TX_GB_PATTERN2_3_PATTERN2_3_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern2_4
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern2_4 :: pattern2_4 [15:00] */
#define RG_TX_TX_GB_PATTERN2_4_PATTERN2_4_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN2_4_PATTERN2_4_ALIGN                    0
#define RG_TX_TX_GB_PATTERN2_4_PATTERN2_4_BITS                     16
#define RG_TX_TX_GB_PATTERN2_4_PATTERN2_4_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern2_5
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern2_5 :: pattern2_5 [15:00] */
#define RG_TX_TX_GB_PATTERN2_5_PATTERN2_5_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN2_5_PATTERN2_5_ALIGN                    0
#define RG_TX_TX_GB_PATTERN2_5_PATTERN2_5_BITS                     16
#define RG_TX_TX_GB_PATTERN2_5_PATTERN2_5_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern2_6
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern2_6 :: pattern2_6 [15:00] */
#define RG_TX_TX_GB_PATTERN2_6_PATTERN2_6_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN2_6_PATTERN2_6_ALIGN                    0
#define RG_TX_TX_GB_PATTERN2_6_PATTERN2_6_BITS                     16
#define RG_TX_TX_GB_PATTERN2_6_PATTERN2_6_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern2_7
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern2_7 :: pattern2_7 [15:00] */
#define RG_TX_TX_GB_PATTERN2_7_PATTERN2_7_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN2_7_PATTERN2_7_ALIGN                    0
#define RG_TX_TX_GB_PATTERN2_7_PATTERN2_7_BITS                     16
#define RG_TX_TX_GB_PATTERN2_7_PATTERN2_7_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern3_0
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern3_0 :: pattern3_0 [15:00] */
#define RG_TX_TX_GB_PATTERN3_0_PATTERN3_0_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN3_0_PATTERN3_0_ALIGN                    0
#define RG_TX_TX_GB_PATTERN3_0_PATTERN3_0_BITS                     16
#define RG_TX_TX_GB_PATTERN3_0_PATTERN3_0_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern3_1
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern3_1 :: pattern3_1 [15:00] */
#define RG_TX_TX_GB_PATTERN3_1_PATTERN3_1_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN3_1_PATTERN3_1_ALIGN                    0
#define RG_TX_TX_GB_PATTERN3_1_PATTERN3_1_BITS                     16
#define RG_TX_TX_GB_PATTERN3_1_PATTERN3_1_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern3_2
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern3_2 :: pattern3_2 [15:00] */
#define RG_TX_TX_GB_PATTERN3_2_PATTERN3_2_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN3_2_PATTERN3_2_ALIGN                    0
#define RG_TX_TX_GB_PATTERN3_2_PATTERN3_2_BITS                     16
#define RG_TX_TX_GB_PATTERN3_2_PATTERN3_2_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern3_3
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern3_3 :: pattern3_3 [15:00] */
#define RG_TX_TX_GB_PATTERN3_3_PATTERN3_3_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN3_3_PATTERN3_3_ALIGN                    0
#define RG_TX_TX_GB_PATTERN3_3_PATTERN3_3_BITS                     16
#define RG_TX_TX_GB_PATTERN3_3_PATTERN3_3_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern3_4
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern3_4 :: pattern3_4 [15:00] */
#define RG_TX_TX_GB_PATTERN3_4_PATTERN3_4_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN3_4_PATTERN3_4_ALIGN                    0
#define RG_TX_TX_GB_PATTERN3_4_PATTERN3_4_BITS                     16
#define RG_TX_TX_GB_PATTERN3_4_PATTERN3_4_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern3_5
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern3_5 :: pattern3_5 [15:00] */
#define RG_TX_TX_GB_PATTERN3_5_PATTERN3_5_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN3_5_PATTERN3_5_ALIGN                    0
#define RG_TX_TX_GB_PATTERN3_5_PATTERN3_5_BITS                     16
#define RG_TX_TX_GB_PATTERN3_5_PATTERN3_5_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern3_6
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern3_6 :: pattern3_6 [15:00] */
#define RG_TX_TX_GB_PATTERN3_6_PATTERN3_6_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN3_6_PATTERN3_6_ALIGN                    0
#define RG_TX_TX_GB_PATTERN3_6_PATTERN3_6_BITS                     16
#define RG_TX_TX_GB_PATTERN3_6_PATTERN3_6_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern3_7
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern3_7 :: pattern3_7 [15:00] */
#define RG_TX_TX_GB_PATTERN3_7_PATTERN3_7_MASK                     0xffff
#define RG_TX_TX_GB_PATTERN3_7_PATTERN3_7_ALIGN                    0
#define RG_TX_TX_GB_PATTERN3_7_PATTERN3_7_BITS                     16
#define RG_TX_TX_GB_PATTERN3_7_PATTERN3_7_SHIFT                    0


/****************************************************************************
 * rg_tx :: tx_gb_pattern_8
 ***************************************************************************/
/* rg_tx :: tx_gb_pattern_8 :: pattern3_8 [15:12] */
#define RG_TX_TX_GB_PATTERN_8_PATTERN3_8_MASK                      0xf000
#define RG_TX_TX_GB_PATTERN_8_PATTERN3_8_ALIGN                     0
#define RG_TX_TX_GB_PATTERN_8_PATTERN3_8_BITS                      4
#define RG_TX_TX_GB_PATTERN_8_PATTERN3_8_SHIFT                     12

/* rg_tx :: tx_gb_pattern_8 :: pattern2_8 [11:08] */
#define RG_TX_TX_GB_PATTERN_8_PATTERN2_8_MASK                      0x0f00
#define RG_TX_TX_GB_PATTERN_8_PATTERN2_8_ALIGN                     0
#define RG_TX_TX_GB_PATTERN_8_PATTERN2_8_BITS                      4
#define RG_TX_TX_GB_PATTERN_8_PATTERN2_8_SHIFT                     8

/* rg_tx :: tx_gb_pattern_8 :: pattern1_8 [07:04] */
#define RG_TX_TX_GB_PATTERN_8_PATTERN1_8_MASK                      0x00f0
#define RG_TX_TX_GB_PATTERN_8_PATTERN1_8_ALIGN                     0
#define RG_TX_TX_GB_PATTERN_8_PATTERN1_8_BITS                      4
#define RG_TX_TX_GB_PATTERN_8_PATTERN1_8_SHIFT                     4

/* rg_tx :: tx_gb_pattern_8 :: pattern0_8 [03:00] */
#define RG_TX_TX_GB_PATTERN_8_PATTERN0_8_MASK                      0x000f
#define RG_TX_TX_GB_PATTERN_8_PATTERN0_8_ALIGN                     0
#define RG_TX_TX_GB_PATTERN_8_PATTERN0_8_BITS                      4
#define RG_TX_TX_GB_PATTERN_8_PATTERN0_8_SHIFT                     0


/****************************************************************************
 * rg_tx :: tx_gb_lpbk_ptr_sync0
 ***************************************************************************/
/* rg_tx :: tx_gb_lpbk_ptr_sync0 :: lpbk_ptr_sync3 [15:12] */
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC3_MASK             0xf000
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC3_ALIGN            0
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC3_BITS             4
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC3_SHIFT            12

/* rg_tx :: tx_gb_lpbk_ptr_sync0 :: lpbk_ptr_sync2 [11:08] */
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC2_MASK             0x0f00
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC2_ALIGN            0
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC2_BITS             4
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC2_SHIFT            8

/* rg_tx :: tx_gb_lpbk_ptr_sync0 :: lpbk_ptr_sync1 [07:04] */
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC1_MASK             0x00f0
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC1_ALIGN            0
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC1_BITS             4
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC1_SHIFT            4

/* rg_tx :: tx_gb_lpbk_ptr_sync0 :: lpbk_ptr_sync0 [03:00] */
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC0_MASK             0x000f
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC0_ALIGN            0
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC0_BITS             4
#define RG_TX_TX_GB_LPBK_PTR_SYNC0_LPBK_PTR_SYNC0_SHIFT            0


/****************************************************************************
 * rg_tx :: tx_gb_lpbk_ptr_sync1
 ***************************************************************************/
/* rg_tx :: tx_gb_lpbk_ptr_sync1 :: lpbk_ptr_sync7 [15:12] */
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC7_MASK             0xf000
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC7_ALIGN            0
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC7_BITS             4
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC7_SHIFT            12

/* rg_tx :: tx_gb_lpbk_ptr_sync1 :: lpbk_ptr_sync6 [11:08] */
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC6_MASK             0x0f00
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC6_ALIGN            0
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC6_BITS             4
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC6_SHIFT            8

/* rg_tx :: tx_gb_lpbk_ptr_sync1 :: lpbk_ptr_sync5 [07:04] */
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC5_MASK             0x00f0
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC5_ALIGN            0
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC5_BITS             4
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC5_SHIFT            4

/* rg_tx :: tx_gb_lpbk_ptr_sync1 :: lpbk_ptr_sync4 [03:00] */
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC4_MASK             0x000f
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC4_ALIGN            0
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC4_BITS             4
#define RG_TX_TX_GB_LPBK_PTR_SYNC1_LPBK_PTR_SYNC4_SHIFT            0


/****************************************************************************
 * rg_tx :: tx_gb_ln89_ptr_sync
 ***************************************************************************/
/* rg_tx :: tx_gb_ln89_ptr_sync :: ptr_sync9 [15:12] */
#define RG_TX_TX_GB_LN89_PTR_SYNC_PTR_SYNC9_MASK                   0xf000
#define RG_TX_TX_GB_LN89_PTR_SYNC_PTR_SYNC9_ALIGN                  0
#define RG_TX_TX_GB_LN89_PTR_SYNC_PTR_SYNC9_BITS                   4
#define RG_TX_TX_GB_LN89_PTR_SYNC_PTR_SYNC9_SHIFT                  12

/* rg_tx :: tx_gb_ln89_ptr_sync :: ptr_sync8 [11:08] */
#define RG_TX_TX_GB_LN89_PTR_SYNC_PTR_SYNC8_MASK                   0x0f00
#define RG_TX_TX_GB_LN89_PTR_SYNC_PTR_SYNC8_ALIGN                  0
#define RG_TX_TX_GB_LN89_PTR_SYNC_PTR_SYNC8_BITS                   4
#define RG_TX_TX_GB_LN89_PTR_SYNC_PTR_SYNC8_SHIFT                  8

/* rg_tx :: tx_gb_ln89_ptr_sync :: lpbk_ptr_sync9 [07:04] */
#define RG_TX_TX_GB_LN89_PTR_SYNC_LPBK_PTR_SYNC9_MASK              0x00f0
#define RG_TX_TX_GB_LN89_PTR_SYNC_LPBK_PTR_SYNC9_ALIGN             0
#define RG_TX_TX_GB_LN89_PTR_SYNC_LPBK_PTR_SYNC9_BITS              4
#define RG_TX_TX_GB_LN89_PTR_SYNC_LPBK_PTR_SYNC9_SHIFT             4

/* rg_tx :: tx_gb_ln89_ptr_sync :: lpbk_ptr_sync8 [03:00] */
#define RG_TX_TX_GB_LN89_PTR_SYNC_LPBK_PTR_SYNC8_MASK              0x000f
#define RG_TX_TX_GB_LN89_PTR_SYNC_LPBK_PTR_SYNC8_ALIGN             0
#define RG_TX_TX_GB_LN89_PTR_SYNC_LPBK_PTR_SYNC8_BITS              4
#define RG_TX_TX_GB_LN89_PTR_SYNC_LPBK_PTR_SYNC8_SHIFT             0


/****************************************************************************
 * rg_tx :: tx_gb_ptr_sync1
 ***************************************************************************/
/* rg_tx :: tx_gb_ptr_sync1 :: ptr_sync7 [15:12] */
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC7_MASK                       0xf000
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC7_ALIGN                      0
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC7_BITS                       4
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC7_SHIFT                      12

/* rg_tx :: tx_gb_ptr_sync1 :: ptr_sync6 [11:08] */
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC6_MASK                       0x0f00
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC6_ALIGN                      0
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC6_BITS                       4
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC6_SHIFT                      8

/* rg_tx :: tx_gb_ptr_sync1 :: ptr_sync5 [07:04] */
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC5_MASK                       0x00f0
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC5_ALIGN                      0
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC5_BITS                       4
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC5_SHIFT                      4

/* rg_tx :: tx_gb_ptr_sync1 :: ptr_sync4 [03:00] */
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC4_MASK                       0x000f
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC4_ALIGN                      0
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC4_BITS                       4
#define RG_TX_TX_GB_PTR_SYNC1_PTR_SYNC4_SHIFT                      0


/****************************************************************************
 * rg_tx :: tx_gb_ptr_sync0
 ***************************************************************************/
/* rg_tx :: tx_gb_ptr_sync0 :: ptr_sync3 [15:12] */
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC3_MASK                       0xf000
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC3_ALIGN                      0
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC3_BITS                       4
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC3_SHIFT                      12

/* rg_tx :: tx_gb_ptr_sync0 :: ptr_sync2 [11:08] */
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC2_MASK                       0x0f00
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC2_ALIGN                      0
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC2_BITS                       4
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC2_SHIFT                      8

/* rg_tx :: tx_gb_ptr_sync0 :: ptr_sync1 [07:04] */
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC1_MASK                       0x00f0
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC1_ALIGN                      0
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC1_BITS                       4
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC1_SHIFT                      4

/* rg_tx :: tx_gb_ptr_sync0 :: ptr_sync0 [03:00] */
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC0_MASK                       0x000f
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC0_ALIGN                      0
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC0_BITS                       4
#define RG_TX_TX_GB_PTR_SYNC0_PTR_SYNC0_SHIFT                      0


/****************************************************************************
 * rg_tx :: tx_gb_50to64_ctrl
 ***************************************************************************/
/* rg_tx :: tx_gb_50to64_ctrl :: reserved0 [15:08] */
#define RG_TX_TX_GB_50TO64_CTRL_RESERVED0_MASK                     0xff00
#define RG_TX_TX_GB_50TO64_CTRL_RESERVED0_ALIGN                    0
#define RG_TX_TX_GB_50TO64_CTRL_RESERVED0_BITS                     8
#define RG_TX_TX_GB_50TO64_CTRL_RESERVED0_SHIFT                    8

/* rg_tx :: tx_gb_50to64_ctrl :: col_threshold10 [07:04] */
#define RG_TX_TX_GB_50TO64_CTRL_COL_THRESHOLD10_MASK               0x00f0
#define RG_TX_TX_GB_50TO64_CTRL_COL_THRESHOLD10_ALIGN              0
#define RG_TX_TX_GB_50TO64_CTRL_COL_THRESHOLD10_BITS               4
#define RG_TX_TX_GB_50TO64_CTRL_COL_THRESHOLD10_SHIFT              4

/* rg_tx :: tx_gb_50to64_ctrl :: ptr_sync10 [03:00] */
#define RG_TX_TX_GB_50TO64_CTRL_PTR_SYNC10_MASK                    0x000f
#define RG_TX_TX_GB_50TO64_CTRL_PTR_SYNC10_ALIGN                   0
#define RG_TX_TX_GB_50TO64_CTRL_PTR_SYNC10_BITS                    4
#define RG_TX_TX_GB_50TO64_CTRL_PTR_SYNC10_SHIFT                   0


/****************************************************************************
 * rg_tx :: tx_gb_lpbk_col_threshold0
 ***************************************************************************/
/* rg_tx :: tx_gb_lpbk_col_threshold0 :: lpbk_col_threshold3 [15:12] */
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD3_MASK   0xf000
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD3_ALIGN  0
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD3_BITS   4
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD3_SHIFT  12

/* rg_tx :: tx_gb_lpbk_col_threshold0 :: lpbk_col_threshold2 [11:08] */
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD2_MASK   0x0f00
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD2_ALIGN  0
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD2_BITS   4
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD2_SHIFT  8

/* rg_tx :: tx_gb_lpbk_col_threshold0 :: lpbk_col_threshold1 [07:04] */
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD1_MASK   0x00f0
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD1_ALIGN  0
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD1_BITS   4
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD1_SHIFT  4

/* rg_tx :: tx_gb_lpbk_col_threshold0 :: lpbk_col_threshold0 [03:00] */
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD0_MASK   0x000f
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD0_ALIGN  0
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD0_BITS   4
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD0_LPBK_COL_THRESHOLD0_SHIFT  0


/****************************************************************************
 * rg_tx :: tx_gb_lpbk_col_threshold1
 ***************************************************************************/
/* rg_tx :: tx_gb_lpbk_col_threshold1 :: lpbk_col_threshold7 [15:12] */
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD7_MASK   0xf000
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD7_ALIGN  0
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD7_BITS   4
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD7_SHIFT  12

/* rg_tx :: tx_gb_lpbk_col_threshold1 :: lpbk_col_threshold6 [11:08] */
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD6_MASK   0x0f00
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD6_ALIGN  0
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD6_BITS   4
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD6_SHIFT  8

/* rg_tx :: tx_gb_lpbk_col_threshold1 :: lpbk_col_threshold5 [07:04] */
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD5_MASK   0x00f0
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD5_ALIGN  0
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD5_BITS   4
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD5_SHIFT  4

/* rg_tx :: tx_gb_lpbk_col_threshold1 :: lpbk_col_threshold4 [03:00] */
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD4_MASK   0x000f
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD4_ALIGN  0
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD4_BITS   4
#define RG_TX_TX_GB_LPBK_COL_THRESHOLD1_LPBK_COL_THRESHOLD4_SHIFT  0


/****************************************************************************
 * rg_tx :: tx_gb_col_threshold89
 ***************************************************************************/
/* rg_tx :: tx_gb_col_threshold89 :: col_threshold9 [15:12] */
#define RG_TX_TX_GB_COL_THRESHOLD89_COL_THRESHOLD9_MASK            0xf000
#define RG_TX_TX_GB_COL_THRESHOLD89_COL_THRESHOLD9_ALIGN           0
#define RG_TX_TX_GB_COL_THRESHOLD89_COL_THRESHOLD9_BITS            4
#define RG_TX_TX_GB_COL_THRESHOLD89_COL_THRESHOLD9_SHIFT           12

/* rg_tx :: tx_gb_col_threshold89 :: col_threshold8 [11:08] */
#define RG_TX_TX_GB_COL_THRESHOLD89_COL_THRESHOLD8_MASK            0x0f00
#define RG_TX_TX_GB_COL_THRESHOLD89_COL_THRESHOLD8_ALIGN           0
#define RG_TX_TX_GB_COL_THRESHOLD89_COL_THRESHOLD8_BITS            4
#define RG_TX_TX_GB_COL_THRESHOLD89_COL_THRESHOLD8_SHIFT           8

/* rg_tx :: tx_gb_col_threshold89 :: lpbk_col_threshold9 [07:04] */
#define RG_TX_TX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD9_MASK       0x00f0
#define RG_TX_TX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD9_ALIGN      0
#define RG_TX_TX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD9_BITS       4
#define RG_TX_TX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD9_SHIFT      4

/* rg_tx :: tx_gb_col_threshold89 :: lpbk_col_threshold8 [03:00] */
#define RG_TX_TX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD8_MASK       0x000f
#define RG_TX_TX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD8_ALIGN      0
#define RG_TX_TX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD8_BITS       4
#define RG_TX_TX_GB_COL_THRESHOLD89_LPBK_COL_THRESHOLD8_SHIFT      0


/****************************************************************************
 * rg_tx :: tx_gb_col_threshold1
 ***************************************************************************/
/* rg_tx :: tx_gb_col_threshold1 :: col_threshold7 [15:12] */
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD7_MASK             0xf000
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD7_ALIGN            0
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD7_BITS             4
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD7_SHIFT            12

/* rg_tx :: tx_gb_col_threshold1 :: col_threshold6 [11:08] */
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD6_MASK             0x0f00
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD6_ALIGN            0
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD6_BITS             4
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD6_SHIFT            8

/* rg_tx :: tx_gb_col_threshold1 :: col_threshold5 [07:04] */
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD5_MASK             0x00f0
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD5_ALIGN            0
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD5_BITS             4
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD5_SHIFT            4

/* rg_tx :: tx_gb_col_threshold1 :: col_threshold4 [03:00] */
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD4_MASK             0x000f
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD4_ALIGN            0
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD4_BITS             4
#define RG_TX_TX_GB_COL_THRESHOLD1_COL_THRESHOLD4_SHIFT            0


/****************************************************************************
 * rg_tx :: tx_gb_col_threshold0
 ***************************************************************************/
/* rg_tx :: tx_gb_col_threshold0 :: col_threshold3 [15:12] */
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD3_MASK             0xf000
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD3_ALIGN            0
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD3_BITS             4
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD3_SHIFT            12

/* rg_tx :: tx_gb_col_threshold0 :: col_threshold2 [11:08] */
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD2_MASK             0x0f00
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD2_ALIGN            0
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD2_BITS             4
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD2_SHIFT            8

/* rg_tx :: tx_gb_col_threshold0 :: col_threshold1 [07:04] */
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD1_MASK             0x00f0
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD1_ALIGN            0
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD1_BITS             4
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD1_SHIFT            4

/* rg_tx :: tx_gb_col_threshold0 :: col_threshold0 [03:00] */
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD0_MASK             0x000f
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD0_ALIGN            0
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD0_BITS             4
#define RG_TX_TX_GB_COL_THRESHOLD0_COL_THRESHOLD0_SHIFT            0


/****************************************************************************
 * rg_tx :: tx_gb_io_bit_control
 ***************************************************************************/
/* rg_tx :: tx_gb_io_bit_control :: reserved0 [15:13] */
#define RG_TX_TX_GB_IO_BIT_CONTROL_RESERVED0_MASK                  0xe000
#define RG_TX_TX_GB_IO_BIT_CONTROL_RESERVED0_ALIGN                 0
#define RG_TX_TX_GB_IO_BIT_CONTROL_RESERVED0_BITS                  3
#define RG_TX_TX_GB_IO_BIT_CONTROL_RESERVED0_SHIFT                 13

/* rg_tx :: tx_gb_io_bit_control :: stx_rev_en [12:12] */
#define RG_TX_TX_GB_IO_BIT_CONTROL_STX_REV_EN_MASK                 0x1000
#define RG_TX_TX_GB_IO_BIT_CONTROL_STX_REV_EN_ALIGN                0
#define RG_TX_TX_GB_IO_BIT_CONTROL_STX_REV_EN_BITS                 1
#define RG_TX_TX_GB_IO_BIT_CONTROL_STX_REV_EN_SHIFT                12

/* rg_tx :: tx_gb_io_bit_control :: ltx_ds_rev_en [11:11] */
#define RG_TX_TX_GB_IO_BIT_CONTROL_LTX_DS_REV_EN_MASK              0x0800
#define RG_TX_TX_GB_IO_BIT_CONTROL_LTX_DS_REV_EN_ALIGN             0
#define RG_TX_TX_GB_IO_BIT_CONTROL_LTX_DS_REV_EN_BITS              1
#define RG_TX_TX_GB_IO_BIT_CONTROL_LTX_DS_REV_EN_SHIFT             11

/* rg_tx :: tx_gb_io_bit_control :: ltx_10g_rev_en [10:10] */
#define RG_TX_TX_GB_IO_BIT_CONTROL_LTX_10G_REV_EN_MASK             0x0400
#define RG_TX_TX_GB_IO_BIT_CONTROL_LTX_10G_REV_EN_ALIGN            0
#define RG_TX_TX_GB_IO_BIT_CONTROL_LTX_10G_REV_EN_BITS             1
#define RG_TX_TX_GB_IO_BIT_CONTROL_LTX_10G_REV_EN_SHIFT            10

/* rg_tx :: tx_gb_io_bit_control :: output_invert [09:00] */
#define RG_TX_TX_GB_IO_BIT_CONTROL_OUTPUT_INVERT_MASK              0x03ff
#define RG_TX_TX_GB_IO_BIT_CONTROL_OUTPUT_INVERT_ALIGN             0
#define RG_TX_TX_GB_IO_BIT_CONTROL_OUTPUT_INVERT_BITS              10
#define RG_TX_TX_GB_IO_BIT_CONTROL_OUTPUT_INVERT_SHIFT             0


/****************************************************************************
 * rg_tx :: tx_gb_logic_lane_test
 ***************************************************************************/
/* rg_tx :: tx_gb_logic_lane_test :: reserved0 [15:15] */
#define RG_TX_TX_GB_LOGIC_LANE_TEST_RESERVED0_MASK                 0x8000
#define RG_TX_TX_GB_LOGIC_LANE_TEST_RESERVED0_ALIGN                0
#define RG_TX_TX_GB_LOGIC_LANE_TEST_RESERVED0_BITS                 1
#define RG_TX_TX_GB_LOGIC_LANE_TEST_RESERVED0_SHIFT                15

/* rg_tx :: tx_gb_logic_lane_test :: logic_lane_test [14:14] */
#define RG_TX_TX_GB_LOGIC_LANE_TEST_LOGIC_LANE_TEST_MASK           0x4000
#define RG_TX_TX_GB_LOGIC_LANE_TEST_LOGIC_LANE_TEST_ALIGN          0
#define RG_TX_TX_GB_LOGIC_LANE_TEST_LOGIC_LANE_TEST_BITS           1
#define RG_TX_TX_GB_LOGIC_LANE_TEST_LOGIC_LANE_TEST_SHIFT          14

/* rg_tx :: tx_gb_logic_lane_test :: check_next_lane [13:04] */
#define RG_TX_TX_GB_LOGIC_LANE_TEST_CHECK_NEXT_LANE_MASK           0x3ff0
#define RG_TX_TX_GB_LOGIC_LANE_TEST_CHECK_NEXT_LANE_ALIGN          0
#define RG_TX_TX_GB_LOGIC_LANE_TEST_CHECK_NEXT_LANE_BITS           10
#define RG_TX_TX_GB_LOGIC_LANE_TEST_CHECK_NEXT_LANE_SHIFT          4

/* rg_tx :: tx_gb_logic_lane_test :: gen_next_lane [03:00] */
#define RG_TX_TX_GB_LOGIC_LANE_TEST_GEN_NEXT_LANE_MASK             0x000f
#define RG_TX_TX_GB_LOGIC_LANE_TEST_GEN_NEXT_LANE_ALIGN            0
#define RG_TX_TX_GB_LOGIC_LANE_TEST_GEN_NEXT_LANE_BITS             4
#define RG_TX_TX_GB_LOGIC_LANE_TEST_GEN_NEXT_LANE_SHIFT            0


/****************************************************************************
 * rg_tx :: tx_gb_collide_lpbk
 ***************************************************************************/
/* rg_tx :: tx_gb_collide_lpbk :: reserved0 [15:10] */
#define RG_TX_TX_GB_COLLIDE_LPBK_RESERVED0_MASK                    0xfc00
#define RG_TX_TX_GB_COLLIDE_LPBK_RESERVED0_ALIGN                   0
#define RG_TX_TX_GB_COLLIDE_LPBK_RESERVED0_BITS                    6
#define RG_TX_TX_GB_COLLIDE_LPBK_RESERVED0_SHIFT                   10

/* rg_tx :: tx_gb_collide_lpbk :: collide_lb [09:00] */
#define RG_TX_TX_GB_COLLIDE_LPBK_COLLIDE_LB_MASK                   0x03ff
#define RG_TX_TX_GB_COLLIDE_LPBK_COLLIDE_LB_ALIGN                  0
#define RG_TX_TX_GB_COLLIDE_LPBK_COLLIDE_LB_BITS                   10
#define RG_TX_TX_GB_COLLIDE_LPBK_COLLIDE_LB_SHIFT                  0


/****************************************************************************
 * rg_tx :: tx_gb_collide_lpbk_lh
 ***************************************************************************/
/* rg_tx :: tx_gb_collide_lpbk_lh :: reserved0 [15:10] */
#define RG_TX_TX_GB_COLLIDE_LPBK_LH_RESERVED0_MASK                 0xfc00
#define RG_TX_TX_GB_COLLIDE_LPBK_LH_RESERVED0_ALIGN                0
#define RG_TX_TX_GB_COLLIDE_LPBK_LH_RESERVED0_BITS                 6
#define RG_TX_TX_GB_COLLIDE_LPBK_LH_RESERVED0_SHIFT                10

/* rg_tx :: tx_gb_collide_lpbk_lh :: collide_lb_lh [09:00] */
#define RG_TX_TX_GB_COLLIDE_LPBK_LH_COLLIDE_LB_LH_MASK             0x03ff
#define RG_TX_TX_GB_COLLIDE_LPBK_LH_COLLIDE_LB_LH_ALIGN            0
#define RG_TX_TX_GB_COLLIDE_LPBK_LH_COLLIDE_LB_LH_BITS             10
#define RG_TX_TX_GB_COLLIDE_LPBK_LH_COLLIDE_LB_LH_SHIFT            0


/****************************************************************************
 * rg_tx :: tx_gb_collide
 ***************************************************************************/
/* rg_tx :: tx_gb_collide :: reserved0 [15:14] */
#define RG_TX_TX_GB_COLLIDE_RESERVED0_MASK                         0xc000
#define RG_TX_TX_GB_COLLIDE_RESERVED0_ALIGN                        0
#define RG_TX_TX_GB_COLLIDE_RESERVED0_BITS                         2
#define RG_TX_TX_GB_COLLIDE_RESERVED0_SHIFT                        14

/* rg_tx :: tx_gb_collide :: collide_pt [13:00] */
#define RG_TX_TX_GB_COLLIDE_COLLIDE_PT_MASK                        0x3fff
#define RG_TX_TX_GB_COLLIDE_COLLIDE_PT_ALIGN                       0
#define RG_TX_TX_GB_COLLIDE_COLLIDE_PT_BITS                        14
#define RG_TX_TX_GB_COLLIDE_COLLIDE_PT_SHIFT                       0


/****************************************************************************
 * rg_tx :: tx_gb_collide_lh
 ***************************************************************************/
/* rg_tx :: tx_gb_collide_lh :: reserved0 [15:14] */
#define RG_TX_TX_GB_COLLIDE_LH_RESERVED0_MASK                      0xc000
#define RG_TX_TX_GB_COLLIDE_LH_RESERVED0_ALIGN                     0
#define RG_TX_TX_GB_COLLIDE_LH_RESERVED0_BITS                      2
#define RG_TX_TX_GB_COLLIDE_LH_RESERVED0_SHIFT                     14

/* rg_tx :: tx_gb_collide_lh :: collide_pt_lh [13:00] */
#define RG_TX_TX_GB_COLLIDE_LH_COLLIDE_PT_LH_MASK                  0x3fff
#define RG_TX_TX_GB_COLLIDE_LH_COLLIDE_PT_LH_ALIGN                 0
#define RG_TX_TX_GB_COLLIDE_LH_COLLIDE_PT_LH_BITS                  14
#define RG_TX_TX_GB_COLLIDE_LH_COLLIDE_PT_LH_SHIFT                 0


/****************************************************************************
 * slice_regs_regs
 ***************************************************************************/
/****************************************************************************
 * slice_regs :: slice
 ***************************************************************************/
/* slice_regs :: slice :: reserved0 [15:04] */
#define SLICE_REGS_SLICE_RESERVED0_MASK                            0xfff0
#define SLICE_REGS_SLICE_RESERVED0_ALIGN                           0
#define SLICE_REGS_SLICE_RESERVED0_BITS                            12
#define SLICE_REGS_SLICE_RESERVED0_SHIFT                           4

/* slice_regs :: slice :: slice_f [03:00] */
#define SLICE_REGS_SLICE_SLICE_F_MASK                              0x000f
#define SLICE_REGS_SLICE_SLICE_F_ALIGN                             0
#define SLICE_REGS_SLICE_SLICE_F_BITS                              4
#define SLICE_REGS_SLICE_SLICE_F_SHIFT                             0


/****************************************************************************
 * vsr40_rx_ana25g_regs
 ***************************************************************************/
/****************************************************************************
 * vsr40_rx_ana25g :: control11
 ***************************************************************************/
/* vsr40_rx_ana25g :: control11 :: rsrvd_for_eco_143_135 [15:07] */
#define VSR40_RX_ANA25G_CONTROL11_RSRVD_FOR_ECO_143_135_MASK       0xff80
#define VSR40_RX_ANA25G_CONTROL11_RSRVD_FOR_ECO_143_135_ALIGN      0
#define VSR40_RX_ANA25G_CONTROL11_RSRVD_FOR_ECO_143_135_BITS       9
#define VSR40_RX_ANA25G_CONTROL11_RSRVD_FOR_ECO_143_135_SHIFT      7

/* vsr40_rx_ana25g :: control11 :: sel_testclk8T [06:06] */
#define VSR40_RX_ANA25G_CONTROL11_SEL_TESTCLK8T_MASK               0x0040
#define VSR40_RX_ANA25G_CONTROL11_SEL_TESTCLK8T_ALIGN              0
#define VSR40_RX_ANA25G_CONTROL11_SEL_TESTCLK8T_BITS               1
#define VSR40_RX_ANA25G_CONTROL11_SEL_TESTCLK8T_SHIFT              6

/* vsr40_rx_ana25g :: control11 :: Slcr_offset_cal_en [05:05] */
#define VSR40_RX_ANA25G_CONTROL11_SLCR_OFFSET_CAL_EN_MASK          0x0020
#define VSR40_RX_ANA25G_CONTROL11_SLCR_OFFSET_CAL_EN_ALIGN         0
#define VSR40_RX_ANA25G_CONTROL11_SLCR_OFFSET_CAL_EN_BITS          1
#define VSR40_RX_ANA25G_CONTROL11_SLCR_OFFSET_CAL_EN_SHIFT         5

/* vsr40_rx_ana25g :: control11 :: Slcr_offset_ib_Ctrl [04:02] */
#define VSR40_RX_ANA25G_CONTROL11_SLCR_OFFSET_IB_CTRL_MASK         0x001c
#define VSR40_RX_ANA25G_CONTROL11_SLCR_OFFSET_IB_CTRL_ALIGN        0
#define VSR40_RX_ANA25G_CONTROL11_SLCR_OFFSET_IB_CTRL_BITS         3
#define VSR40_RX_ANA25G_CONTROL11_SLCR_OFFSET_IB_CTRL_SHIFT        2

/* vsr40_rx_ana25g :: control11 :: Rx_offset_Z_mode [01:01] */
#define VSR40_RX_ANA25G_CONTROL11_RX_OFFSET_Z_MODE_MASK            0x0002
#define VSR40_RX_ANA25G_CONTROL11_RX_OFFSET_Z_MODE_ALIGN           0
#define VSR40_RX_ANA25G_CONTROL11_RX_OFFSET_Z_MODE_BITS            1
#define VSR40_RX_ANA25G_CONTROL11_RX_OFFSET_Z_MODE_SHIFT           1

/* vsr40_rx_ana25g :: control11 :: Rx_pwrdn_offset [00:00] */
#define VSR40_RX_ANA25G_CONTROL11_RX_PWRDN_OFFSET_MASK             0x0001
#define VSR40_RX_ANA25G_CONTROL11_RX_PWRDN_OFFSET_ALIGN            0
#define VSR40_RX_ANA25G_CONTROL11_RX_PWRDN_OFFSET_BITS             1
#define VSR40_RX_ANA25G_CONTROL11_RX_PWRDN_OFFSET_SHIFT            0


/****************************************************************************
 * vsr40_rx_ana25g :: control10
 ***************************************************************************/
/* vsr40_rx_ana25g :: control10 :: Idac_offset_Z1 [15:12] */
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_Z1_MASK              0xf000
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_Z1_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_Z1_BITS              4
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_Z1_SHIFT             12

/* vsr40_rx_ana25g :: control10 :: Idac_offset_Z0 [11:08] */
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_Z0_MASK              0x0f00
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_Z0_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_Z0_BITS              4
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_Z0_SHIFT             8

/* vsr40_rx_ana25g :: control10 :: Idac_offset_P1 [07:04] */
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_P1_MASK              0x00f0
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_P1_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_P1_BITS              4
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_P1_SHIFT             4

/* vsr40_rx_ana25g :: control10 :: Idac_offset_P0 [03:00] */
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_P0_MASK              0x000f
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_P0_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_P0_BITS              4
#define VSR40_RX_ANA25G_CONTROL10_IDAC_OFFSET_P0_SHIFT             0


/****************************************************************************
 * vsr40_rx_ana25g :: control9
 ***************************************************************************/
/* vsr40_rx_ana25g :: control9 :: clk_test_sel_1_0 [15:14] */
#define VSR40_RX_ANA25G_CONTROL9_CLK_TEST_SEL_1_0_MASK             0xc000
#define VSR40_RX_ANA25G_CONTROL9_CLK_TEST_SEL_1_0_ALIGN            0
#define VSR40_RX_ANA25G_CONTROL9_CLK_TEST_SEL_1_0_BITS             2
#define VSR40_RX_ANA25G_CONTROL9_CLK_TEST_SEL_1_0_SHIFT            14

/* vsr40_rx_ana25g :: control9 :: susm_sel_10g_mode_frc [13:13] */
#define VSR40_RX_ANA25G_CONTROL9_SUSM_SEL_10G_MODE_FRC_MASK        0x2000
#define VSR40_RX_ANA25G_CONTROL9_SUSM_SEL_10G_MODE_FRC_ALIGN       0
#define VSR40_RX_ANA25G_CONTROL9_SUSM_SEL_10G_MODE_FRC_BITS        1
#define VSR40_RX_ANA25G_CONTROL9_SUSM_SEL_10G_MODE_FRC_SHIFT       13

/* vsr40_rx_ana25g :: control9 :: susm_sel_10g_mode [12:12] */
#define VSR40_RX_ANA25G_CONTROL9_SUSM_SEL_10G_MODE_MASK            0x1000
#define VSR40_RX_ANA25G_CONTROL9_SUSM_SEL_10G_MODE_ALIGN           0
#define VSR40_RX_ANA25G_CONTROL9_SUSM_SEL_10G_MODE_BITS            1
#define VSR40_RX_ANA25G_CONTROL9_SUSM_SEL_10G_MODE_SHIFT           12

/* vsr40_rx_ana25g :: control9 :: dis_intofst [11:11] */
#define VSR40_RX_ANA25G_CONTROL9_DIS_INTOFST_MASK                  0x0800
#define VSR40_RX_ANA25G_CONTROL9_DIS_INTOFST_ALIGN                 0
#define VSR40_RX_ANA25G_CONTROL9_DIS_INTOFST_BITS                  1
#define VSR40_RX_ANA25G_CONTROL9_DIS_INTOFST_SHIFT                 11

/* vsr40_rx_ana25g :: control9 :: rx_mref_selhigh [10:10] */
#define VSR40_RX_ANA25G_CONTROL9_RX_MREF_SELHIGH_MASK              0x0400
#define VSR40_RX_ANA25G_CONTROL9_RX_MREF_SELHIGH_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL9_RX_MREF_SELHIGH_BITS              1
#define VSR40_RX_ANA25G_CONTROL9_RX_MREF_SELHIGH_SHIFT             10

/* vsr40_rx_ana25g :: control9 :: rclk_test_enable [09:09] */
#define VSR40_RX_ANA25G_CONTROL9_RCLK_TEST_ENABLE_MASK             0x0200
#define VSR40_RX_ANA25G_CONTROL9_RCLK_TEST_ENABLE_ALIGN            0
#define VSR40_RX_ANA25G_CONTROL9_RCLK_TEST_ENABLE_BITS             1
#define VSR40_RX_ANA25G_CONTROL9_RCLK_TEST_ENABLE_SHIFT            9

/* vsr40_rx_ana25g :: control9 :: rclk_test_lane_sel [08:08] */
#define VSR40_RX_ANA25G_CONTROL9_RCLK_TEST_LANE_SEL_MASK           0x0100
#define VSR40_RX_ANA25G_CONTROL9_RCLK_TEST_LANE_SEL_ALIGN          0
#define VSR40_RX_ANA25G_CONTROL9_RCLK_TEST_LANE_SEL_BITS           1
#define VSR40_RX_ANA25G_CONTROL9_RCLK_TEST_LANE_SEL_SHIFT          8

/* vsr40_rx_ana25g :: control9 :: rsrvd_for_eco_104 [07:07] */
#define VSR40_RX_ANA25G_CONTROL9_RSRVD_FOR_ECO_104_MASK            0x0080
#define VSR40_RX_ANA25G_CONTROL9_RSRVD_FOR_ECO_104_ALIGN           0
#define VSR40_RX_ANA25G_CONTROL9_RSRVD_FOR_ECO_104_BITS            1
#define VSR40_RX_ANA25G_CONTROL9_RSRVD_FOR_ECO_104_SHIFT           7

/* vsr40_rx_ana25g :: control9 :: Clk2Tdiv_ibp_ctrl [06:04] */
#define VSR40_RX_ANA25G_CONTROL9_CLK2TDIV_IBP_CTRL_MASK            0x0070
#define VSR40_RX_ANA25G_CONTROL9_CLK2TDIV_IBP_CTRL_ALIGN           0
#define VSR40_RX_ANA25G_CONTROL9_CLK2TDIV_IBP_CTRL_BITS            3
#define VSR40_RX_ANA25G_CONTROL9_CLK2TDIV_IBP_CTRL_SHIFT           4

/* vsr40_rx_ana25g :: control9 :: reserved0 [03:03] */
#define VSR40_RX_ANA25G_CONTROL9_RESERVED0_MASK                    0x0008
#define VSR40_RX_ANA25G_CONTROL9_RESERVED0_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL9_RESERVED0_BITS                    1
#define VSR40_RX_ANA25G_CONTROL9_RESERVED0_SHIFT                   3

/* vsr40_rx_ana25g :: control9 :: Pibufout_ib_Ctrl [02:00] */
#define VSR40_RX_ANA25G_CONTROL9_PIBUFOUT_IB_CTRL_MASK             0x0007
#define VSR40_RX_ANA25G_CONTROL9_PIBUFOUT_IB_CTRL_ALIGN            0
#define VSR40_RX_ANA25G_CONTROL9_PIBUFOUT_IB_CTRL_BITS             3
#define VSR40_RX_ANA25G_CONTROL9_PIBUFOUT_IB_CTRL_SHIFT            0


/****************************************************************************
 * vsr40_rx_ana25g :: control8
 ***************************************************************************/
/* vsr40_rx_ana25g :: control8 :: reserved0 [15:06] */
#define VSR40_RX_ANA25G_CONTROL8_RESERVED0_MASK                    0xffc0
#define VSR40_RX_ANA25G_CONTROL8_RESERVED0_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL8_RESERVED0_BITS                    10
#define VSR40_RX_ANA25G_CONTROL8_RESERVED0_SHIFT                   6

/* vsr40_rx_ana25g :: control8 :: Pibufin_ib_ctrl [05:03] */
#define VSR40_RX_ANA25G_CONTROL8_PIBUFIN_IB_CTRL_MASK              0x0038
#define VSR40_RX_ANA25G_CONTROL8_PIBUFIN_IB_CTRL_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL8_PIBUFIN_IB_CTRL_BITS              3
#define VSR40_RX_ANA25G_CONTROL8_PIBUFIN_IB_CTRL_SHIFT             3

/* vsr40_rx_ana25g :: control8 :: Laf_ib_ctrl [02:00] */
#define VSR40_RX_ANA25G_CONTROL8_LAF_IB_CTRL_MASK                  0x0007
#define VSR40_RX_ANA25G_CONTROL8_LAF_IB_CTRL_ALIGN                 0
#define VSR40_RX_ANA25G_CONTROL8_LAF_IB_CTRL_BITS                  3
#define VSR40_RX_ANA25G_CONTROL8_LAF_IB_CTRL_SHIFT                 0


/****************************************************************************
 * vsr40_rx_ana25g :: control7
 ***************************************************************************/
/* vsr40_rx_ana25g :: control7 :: reserved0 [15:14] */
#define VSR40_RX_ANA25G_CONTROL7_RESERVED0_MASK                    0xc000
#define VSR40_RX_ANA25G_CONTROL7_RESERVED0_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL7_RESERVED0_BITS                    2
#define VSR40_RX_ANA25G_CONTROL7_RESERVED0_SHIFT                   14

/* vsr40_rx_ana25g :: control7 :: rsrvd_for_eco_91_90 [13:12] */
#define VSR40_RX_ANA25G_CONTROL7_RSRVD_FOR_ECO_91_90_MASK          0x3000
#define VSR40_RX_ANA25G_CONTROL7_RSRVD_FOR_ECO_91_90_ALIGN         0
#define VSR40_RX_ANA25G_CONTROL7_RSRVD_FOR_ECO_91_90_BITS          2
#define VSR40_RX_ANA25G_CONTROL7_RSRVD_FOR_ECO_91_90_SHIFT         12

/* vsr40_rx_ana25g :: control7 :: Invert_zero_10g_pd [11:11] */
#define VSR40_RX_ANA25G_CONTROL7_INVERT_ZERO_10G_PD_MASK           0x0800
#define VSR40_RX_ANA25G_CONTROL7_INVERT_ZERO_10G_PD_ALIGN          0
#define VSR40_RX_ANA25G_CONTROL7_INVERT_ZERO_10G_PD_BITS           1
#define VSR40_RX_ANA25G_CONTROL7_INVERT_ZERO_10G_PD_SHIFT          11

/* vsr40_rx_ana25g :: control7 :: Invert_zero_25g [10:10] */
#define VSR40_RX_ANA25G_CONTROL7_INVERT_ZERO_25G_MASK              0x0400
#define VSR40_RX_ANA25G_CONTROL7_INVERT_ZERO_25G_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL7_INVERT_ZERO_25G_BITS              1
#define VSR40_RX_ANA25G_CONTROL7_INVERT_ZERO_25G_SHIFT             10

/* vsr40_rx_ana25g :: control7 :: Pkz_enind [09:09] */
#define VSR40_RX_ANA25G_CONTROL7_PKZ_ENIND_MASK                    0x0200
#define VSR40_RX_ANA25G_CONTROL7_PKZ_ENIND_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL7_PKZ_ENIND_BITS                    1
#define VSR40_RX_ANA25G_CONTROL7_PKZ_ENIND_SHIFT                   9

/* vsr40_rx_ana25g :: control7 :: Mon_enind [08:07] */
#define VSR40_RX_ANA25G_CONTROL7_MON_ENIND_MASK                    0x0180
#define VSR40_RX_ANA25G_CONTROL7_MON_ENIND_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL7_MON_ENIND_BITS                    2
#define VSR40_RX_ANA25G_CONTROL7_MON_ENIND_SHIFT                   7

/* vsr40_rx_ana25g :: control7 :: Invert_peak [06:06] */
#define VSR40_RX_ANA25G_CONTROL7_INVERT_PEAK_MASK                  0x0040
#define VSR40_RX_ANA25G_CONTROL7_INVERT_PEAK_ALIGN                 0
#define VSR40_RX_ANA25G_CONTROL7_INVERT_PEAK_BITS                  1
#define VSR40_RX_ANA25G_CONTROL7_INVERT_PEAK_SHIFT                 6

/* vsr40_rx_ana25g :: control7 :: Clk_pkdet_ref [05:03] */
#define VSR40_RX_ANA25G_CONTROL7_CLK_PKDET_REF_MASK                0x0038
#define VSR40_RX_ANA25G_CONTROL7_CLK_PKDET_REF_ALIGN               0
#define VSR40_RX_ANA25G_CONTROL7_CLK_PKDET_REF_BITS                3
#define VSR40_RX_ANA25G_CONTROL7_CLK_PKDET_REF_SHIFT               3

/* vsr40_rx_ana25g :: control7 :: Mon_ref_ib_ctrl [02:00] */
#define VSR40_RX_ANA25G_CONTROL7_MON_REF_IB_CTRL_MASK              0x0007
#define VSR40_RX_ANA25G_CONTROL7_MON_REF_IB_CTRL_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL7_MON_REF_IB_CTRL_BITS              3
#define VSR40_RX_ANA25G_CONTROL7_MON_REF_IB_CTRL_SHIFT             0


/****************************************************************************
 * vsr40_rx_ana25g :: control6
 ***************************************************************************/
/* vsr40_rx_ana25g :: control6 :: Rx_pon_PI_frc [15:15] */
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_PI_FRC_MASK                0x8000
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_PI_FRC_ALIGN               0
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_PI_FRC_BITS                1
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_PI_FRC_SHIFT               15

/* vsr40_rx_ana25g :: control6 :: Rx_pon_PI [14:12] */
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_PI_MASK                    0x7000
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_PI_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_PI_BITS                    3
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_PI_SHIFT                   12

/* vsr40_rx_ana25g :: control6 :: Rx_pon_Div2T_frc [11:11] */
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_DIV2T_FRC_MASK             0x0800
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_DIV2T_FRC_ALIGN            0
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_DIV2T_FRC_BITS             1
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_DIV2T_FRC_SHIFT            11

/* vsr40_rx_ana25g :: control6 :: Rx_pon_Div2T [10:08] */
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_DIV2T_MASK                 0x0700
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_DIV2T_ALIGN                0
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_DIV2T_BITS                 3
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_DIV2T_SHIFT                8

/* vsr40_rx_ana25g :: control6 :: Rx_pon_slicer_frc [07:07] */
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_SLICER_FRC_MASK            0x0080
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_SLICER_FRC_ALIGN           0
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_SLICER_FRC_BITS            1
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_SLICER_FRC_SHIFT           7

/* vsr40_rx_ana25g :: control6 :: Rx_pon_slicer [06:04] */
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_SLICER_MASK                0x0070
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_SLICER_ALIGN               0
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_SLICER_BITS                3
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_SLICER_SHIFT               4

/* vsr40_rx_ana25g :: control6 :: Rx_pon_LA_frc [03:03] */
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_LA_FRC_MASK                0x0008
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_LA_FRC_ALIGN               0
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_LA_FRC_BITS                1
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_LA_FRC_SHIFT               3

/* vsr40_rx_ana25g :: control6 :: Rx_pon_LA [02:00] */
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_LA_MASK                    0x0007
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_LA_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_LA_BITS                    3
#define VSR40_RX_ANA25G_CONTROL6_RX_PON_LA_SHIFT                   0


/****************************************************************************
 * vsr40_rx_ana25g :: control5
 ***************************************************************************/
/* vsr40_rx_ana25g :: control5 :: reserved0 [15:07] */
#define VSR40_RX_ANA25G_CONTROL5_RESERVED0_MASK                    0xff80
#define VSR40_RX_ANA25G_CONTROL5_RESERVED0_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL5_RESERVED0_BITS                    9
#define VSR40_RX_ANA25G_CONTROL5_RESERVED0_SHIFT                   7

/* vsr40_rx_ana25g :: control5 :: los_filter_ctrl [06:05] */
#define VSR40_RX_ANA25G_CONTROL5_LOS_FILTER_CTRL_MASK              0x0060
#define VSR40_RX_ANA25G_CONTROL5_LOS_FILTER_CTRL_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL5_LOS_FILTER_CTRL_BITS              2
#define VSR40_RX_ANA25G_CONTROL5_LOS_FILTER_CTRL_SHIFT             5

/* vsr40_rx_ana25g :: control5 :: los_vth_ctrl [04:02] */
#define VSR40_RX_ANA25G_CONTROL5_LOS_VTH_CTRL_MASK                 0x001c
#define VSR40_RX_ANA25G_CONTROL5_LOS_VTH_CTRL_ALIGN                0
#define VSR40_RX_ANA25G_CONTROL5_LOS_VTH_CTRL_BITS                 3
#define VSR40_RX_ANA25G_CONTROL5_LOS_VTH_CTRL_SHIFT                2

/* vsr40_rx_ana25g :: control5 :: los_hysb_frc [01:01] */
#define VSR40_RX_ANA25G_CONTROL5_LOS_HYSB_FRC_MASK                 0x0002
#define VSR40_RX_ANA25G_CONTROL5_LOS_HYSB_FRC_ALIGN                0
#define VSR40_RX_ANA25G_CONTROL5_LOS_HYSB_FRC_BITS                 1
#define VSR40_RX_ANA25G_CONTROL5_LOS_HYSB_FRC_SHIFT                1

/* vsr40_rx_ana25g :: control5 :: los_hysb [00:00] */
#define VSR40_RX_ANA25G_CONTROL5_LOS_HYSB_MASK                     0x0001
#define VSR40_RX_ANA25G_CONTROL5_LOS_HYSB_ALIGN                    0
#define VSR40_RX_ANA25G_CONTROL5_LOS_HYSB_BITS                     1
#define VSR40_RX_ANA25G_CONTROL5_LOS_HYSB_SHIFT                    0


/****************************************************************************
 * vsr40_rx_ana25g :: control4
 ***************************************************************************/
/* vsr40_rx_ana25g :: control4 :: reserved0 [15:15] */
#define VSR40_RX_ANA25G_CONTROL4_RESERVED0_MASK                    0x8000
#define VSR40_RX_ANA25G_CONTROL4_RESERVED0_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL4_RESERVED0_BITS                    1
#define VSR40_RX_ANA25G_CONTROL4_RESERVED0_SHIFT                   15

/* vsr40_rx_ana25g :: control4 :: Pi_peak_ib_ctrl [14:12] */
#define VSR40_RX_ANA25G_CONTROL4_PI_PEAK_IB_CTRL_MASK              0x7000
#define VSR40_RX_ANA25G_CONTROL4_PI_PEAK_IB_CTRL_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL4_PI_PEAK_IB_CTRL_BITS              3
#define VSR40_RX_ANA25G_CONTROL4_PI_PEAK_IB_CTRL_SHIFT             12

/* vsr40_rx_ana25g :: control4 :: Pi_zero_ib_ctrl [11:09] */
#define VSR40_RX_ANA25G_CONTROL4_PI_ZERO_IB_CTRL_MASK              0x0e00
#define VSR40_RX_ANA25G_CONTROL4_PI_ZERO_IB_CTRL_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL4_PI_ZERO_IB_CTRL_BITS              3
#define VSR40_RX_ANA25G_CONTROL4_PI_ZERO_IB_CTRL_SHIFT             9

/* vsr40_rx_ana25g :: control4 :: Pi_mon_ib_ctrl [08:06] */
#define VSR40_RX_ANA25G_CONTROL4_PI_MON_IB_CTRL_MASK               0x01c0
#define VSR40_RX_ANA25G_CONTROL4_PI_MON_IB_CTRL_ALIGN              0
#define VSR40_RX_ANA25G_CONTROL4_PI_MON_IB_CTRL_BITS               3
#define VSR40_RX_ANA25G_CONTROL4_PI_MON_IB_CTRL_SHIFT              6

/* vsr40_rx_ana25g :: control4 :: en_2Tpin_hicur [05:03] */
#define VSR40_RX_ANA25G_CONTROL4_EN_2TPIN_HICUR_MASK               0x0038
#define VSR40_RX_ANA25G_CONTROL4_EN_2TPIN_HICUR_ALIGN              0
#define VSR40_RX_ANA25G_CONTROL4_EN_2TPIN_HICUR_BITS               3
#define VSR40_RX_ANA25G_CONTROL4_EN_2TPIN_HICUR_SHIFT              3

/* vsr40_rx_ana25g :: control4 :: susm_pibufout_tbuf_frc [02:02] */
#define VSR40_RX_ANA25G_CONTROL4_SUSM_PIBUFOUT_TBUF_FRC_MASK       0x0004
#define VSR40_RX_ANA25G_CONTROL4_SUSM_PIBUFOUT_TBUF_FRC_ALIGN      0
#define VSR40_RX_ANA25G_CONTROL4_SUSM_PIBUFOUT_TBUF_FRC_BITS       1
#define VSR40_RX_ANA25G_CONTROL4_SUSM_PIBUFOUT_TBUF_FRC_SHIFT      2

/* vsr40_rx_ana25g :: control4 :: susm_pibufout_tbuf [01:00] */
#define VSR40_RX_ANA25G_CONTROL4_SUSM_PIBUFOUT_TBUF_MASK           0x0003
#define VSR40_RX_ANA25G_CONTROL4_SUSM_PIBUFOUT_TBUF_ALIGN          0
#define VSR40_RX_ANA25G_CONTROL4_SUSM_PIBUFOUT_TBUF_BITS           2
#define VSR40_RX_ANA25G_CONTROL4_SUSM_PIBUFOUT_TBUF_SHIFT          0


/****************************************************************************
 * vsr40_rx_ana25g :: control3
 ***************************************************************************/
/* vsr40_rx_ana25g :: control3 :: reserved0 [15:15] */
#define VSR40_RX_ANA25G_CONTROL3_RESERVED0_MASK                    0x8000
#define VSR40_RX_ANA25G_CONTROL3_RESERVED0_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL3_RESERVED0_BITS                    1
#define VSR40_RX_ANA25G_CONTROL3_RESERVED0_SHIFT                   15

/* vsr40_rx_ana25g :: control3 :: DmuxZ_ib_ctrl [14:12] */
#define VSR40_RX_ANA25G_CONTROL3_DMUXZ_IB_CTRL_MASK                0x7000
#define VSR40_RX_ANA25G_CONTROL3_DMUXZ_IB_CTRL_ALIGN               0
#define VSR40_RX_ANA25G_CONTROL3_DMUXZ_IB_CTRL_BITS                3
#define VSR40_RX_ANA25G_CONTROL3_DMUXZ_IB_CTRL_SHIFT               12

/* vsr40_rx_ana25g :: control3 :: DmuxP_ib_ctrl [11:09] */
#define VSR40_RX_ANA25G_CONTROL3_DMUXP_IB_CTRL_MASK                0x0e00
#define VSR40_RX_ANA25G_CONTROL3_DMUXP_IB_CTRL_ALIGN               0
#define VSR40_RX_ANA25G_CONTROL3_DMUXP_IB_CTRL_BITS                3
#define VSR40_RX_ANA25G_CONTROL3_DMUXP_IB_CTRL_SHIFT               9

/* vsr40_rx_ana25g :: control3 :: DmuxM_ib_ctrl [08:06] */
#define VSR40_RX_ANA25G_CONTROL3_DMUXM_IB_CTRL_MASK                0x01c0
#define VSR40_RX_ANA25G_CONTROL3_DMUXM_IB_CTRL_ALIGN               0
#define VSR40_RX_ANA25G_CONTROL3_DMUXM_IB_CTRL_BITS                3
#define VSR40_RX_ANA25G_CONTROL3_DMUXM_IB_CTRL_SHIFT               6

/* vsr40_rx_ana25g :: control3 :: SlicerP_ib_Ctrl [05:03] */
#define VSR40_RX_ANA25G_CONTROL3_SLICERP_IB_CTRL_MASK              0x0038
#define VSR40_RX_ANA25G_CONTROL3_SLICERP_IB_CTRL_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL3_SLICERP_IB_CTRL_BITS              3
#define VSR40_RX_ANA25G_CONTROL3_SLICERP_IB_CTRL_SHIFT             3

/* vsr40_rx_ana25g :: control3 :: SlicerZ_ib_Ctrl [02:00] */
#define VSR40_RX_ANA25G_CONTROL3_SLICERZ_IB_CTRL_MASK              0x0007
#define VSR40_RX_ANA25G_CONTROL3_SLICERZ_IB_CTRL_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL3_SLICERZ_IB_CTRL_BITS              3
#define VSR40_RX_ANA25G_CONTROL3_SLICERZ_IB_CTRL_SHIFT             0


/****************************************************************************
 * vsr40_rx_ana25g :: control2
 ***************************************************************************/
/* vsr40_rx_ana25g :: control2 :: reserved0 [15:13] */
#define VSR40_RX_ANA25G_CONTROL2_RESERVED0_MASK                    0xe000
#define VSR40_RX_ANA25G_CONTROL2_RESERVED0_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL2_RESERVED0_BITS                    3
#define VSR40_RX_ANA25G_CONTROL2_RESERVED0_SHIFT                   13

/* vsr40_rx_ana25g :: control2 :: SlicerM_ib_Ctrl [12:10] */
#define VSR40_RX_ANA25G_CONTROL2_SLICERM_IB_CTRL_MASK              0x1c00
#define VSR40_RX_ANA25G_CONTROL2_SLICERM_IB_CTRL_ALIGN             0
#define VSR40_RX_ANA25G_CONTROL2_SLICERM_IB_CTRL_BITS              3
#define VSR40_RX_ANA25G_CONTROL2_SLICERM_IB_CTRL_SHIFT             10

/* vsr40_rx_ana25g :: control2 :: Clk2Tdiv_ibg_ctrl [09:07] */
#define VSR40_RX_ANA25G_CONTROL2_CLK2TDIV_IBG_CTRL_MASK            0x0380
#define VSR40_RX_ANA25G_CONTROL2_CLK2TDIV_IBG_CTRL_ALIGN           0
#define VSR40_RX_ANA25G_CONTROL2_CLK2TDIV_IBG_CTRL_BITS            3
#define VSR40_RX_ANA25G_CONTROL2_CLK2TDIV_IBG_CTRL_SHIFT           7

/* vsr40_rx_ana25g :: control2 :: Pkdet_ib_ctrl [06:04] */
#define VSR40_RX_ANA25G_CONTROL2_PKDET_IB_CTRL_MASK                0x0070
#define VSR40_RX_ANA25G_CONTROL2_PKDET_IB_CTRL_ALIGN               0
#define VSR40_RX_ANA25G_CONTROL2_PKDET_IB_CTRL_BITS                3
#define VSR40_RX_ANA25G_CONTROL2_PKDET_IB_CTRL_SHIFT               4

/* vsr40_rx_ana25g :: control2 :: rsrvd_for_eco_21 [03:03] */
#define VSR40_RX_ANA25G_CONTROL2_RSRVD_FOR_ECO_21_MASK             0x0008
#define VSR40_RX_ANA25G_CONTROL2_RSRVD_FOR_ECO_21_ALIGN            0
#define VSR40_RX_ANA25G_CONTROL2_RSRVD_FOR_ECO_21_BITS             1
#define VSR40_RX_ANA25G_CONTROL2_RSRVD_FOR_ECO_21_SHIFT            3

/* vsr40_rx_ana25g :: control2 :: LOS_ctrl_n50 [02:00] */
#define VSR40_RX_ANA25G_CONTROL2_LOS_CTRL_N50_MASK                 0x0007
#define VSR40_RX_ANA25G_CONTROL2_LOS_CTRL_N50_ALIGN                0
#define VSR40_RX_ANA25G_CONTROL2_LOS_CTRL_N50_BITS                 3
#define VSR40_RX_ANA25G_CONTROL2_LOS_CTRL_N50_SHIFT                0


/****************************************************************************
 * vsr40_rx_ana25g :: control1
 ***************************************************************************/
/* vsr40_rx_ana25g :: control1 :: reserved0 [15:11] */
#define VSR40_RX_ANA25G_CONTROL1_RESERVED0_MASK                    0xf800
#define VSR40_RX_ANA25G_CONTROL1_RESERVED0_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL1_RESERVED0_BITS                    5
#define VSR40_RX_ANA25G_CONTROL1_RESERVED0_SHIFT                   11

/* vsr40_rx_ana25g :: control1 :: eq_ib_ctrl [10:07] */
#define VSR40_RX_ANA25G_CONTROL1_EQ_IB_CTRL_MASK                   0x0780
#define VSR40_RX_ANA25G_CONTROL1_EQ_IB_CTRL_ALIGN                  0
#define VSR40_RX_ANA25G_CONTROL1_EQ_IB_CTRL_BITS                   4
#define VSR40_RX_ANA25G_CONTROL1_EQ_IB_CTRL_SHIFT                  7

/* vsr40_rx_ana25g :: control1 :: la_ib_ctrl [06:03] */
#define VSR40_RX_ANA25G_CONTROL1_LA_IB_CTRL_MASK                   0x0078
#define VSR40_RX_ANA25G_CONTROL1_LA_IB_CTRL_ALIGN                  0
#define VSR40_RX_ANA25G_CONTROL1_LA_IB_CTRL_BITS                   4
#define VSR40_RX_ANA25G_CONTROL1_LA_IB_CTRL_SHIFT                  3

/* vsr40_rx_ana25g :: control1 :: en_progc [02:00] */
#define VSR40_RX_ANA25G_CONTROL1_EN_PROGC_MASK                     0x0007
#define VSR40_RX_ANA25G_CONTROL1_EN_PROGC_ALIGN                    0
#define VSR40_RX_ANA25G_CONTROL1_EN_PROGC_BITS                     3
#define VSR40_RX_ANA25G_CONTROL1_EN_PROGC_SHIFT                    0


/****************************************************************************
 * vsr40_rx_ana25g :: control0
 ***************************************************************************/
/* vsr40_rx_ana25g :: control0 :: reserved0 [15:07] */
#define VSR40_RX_ANA25G_CONTROL0_RESERVED0_MASK                    0xff80
#define VSR40_RX_ANA25G_CONTROL0_RESERVED0_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL0_RESERVED0_BITS                    9
#define VSR40_RX_ANA25G_CONTROL0_RESERVED0_SHIFT                   7

/* vsr40_rx_ana25g :: control0 :: Rx_pwrdn_zero [06:06] */
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_ZERO_MASK                0x0040
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_ZERO_ALIGN               0
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_ZERO_BITS                1
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_ZERO_SHIFT               6

/* vsr40_rx_ana25g :: control0 :: los_pwrdn [05:05] */
#define VSR40_RX_ANA25G_CONTROL0_LOS_PWRDN_MASK                    0x0020
#define VSR40_RX_ANA25G_CONTROL0_LOS_PWRDN_ALIGN                   0
#define VSR40_RX_ANA25G_CONTROL0_LOS_PWRDN_BITS                    1
#define VSR40_RX_ANA25G_CONTROL0_LOS_PWRDN_SHIFT                   5

/* vsr40_rx_ana25g :: control0 :: Rx_pwrdn_mon [04:04] */
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_MON_MASK                 0x0010
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_MON_ALIGN                0
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_MON_BITS                 1
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_MON_SHIFT                4

/* vsr40_rx_ana25g :: control0 :: Rx_pwrdn_slp [03:03] */
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_SLP_MASK                 0x0008
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_SLP_ALIGN                0
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_SLP_BITS                 1
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_SLP_SHIFT                3

/* vsr40_rx_ana25g :: control0 :: Rx_pwrdn_la [02:02] */
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_LA_MASK                  0x0004
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_LA_ALIGN                 0
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_LA_BITS                  1
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_LA_SHIFT                 2

/* vsr40_rx_ana25g :: control0 :: Rx_pwrdn_pkdet [01:01] */
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_PKDET_MASK               0x0002
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_PKDET_ALIGN              0
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_PKDET_BITS               1
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_PKDET_SHIFT              1

/* vsr40_rx_ana25g :: control0 :: Rx_pwrdn_peak [00:00] */
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_PEAK_MASK                0x0001
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_PEAK_ALIGN               0
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_PEAK_BITS                1
#define VSR40_RX_ANA25G_CONTROL0_RX_PWRDN_PEAK_SHIFT               0


/****************************************************************************
 * vsr40_rx_ana25g :: ana_if_control0
 ***************************************************************************/
/* vsr40_rx_ana25g :: ana_if_control0 :: reserved0 [15:12] */
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RESERVED0_MASK             0xf000
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RESERVED0_ALIGN            0
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RESERVED0_BITS             4
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RESERVED0_SHIFT            12

/* vsr40_rx_ana25g :: ana_if_control0 :: man_rx_mref [11:11] */
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_MAN_RX_MREF_MASK           0x0800
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_MAN_RX_MREF_ALIGN          0
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_MAN_RX_MREF_BITS           1
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_MAN_RX_MREF_SHIFT          11

/* vsr40_rx_ana25g :: ana_if_control0 :: rx_mref [10:05] */
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RX_MREF_MASK               0x07e0
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RX_MREF_ALIGN              0
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RX_MREF_BITS               6
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RX_MREF_SHIFT              5

/* vsr40_rx_ana25g :: ana_if_control0 :: man_rx_eq_en [04:04] */
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_MAN_RX_EQ_EN_MASK          0x0010
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_MAN_RX_EQ_EN_ALIGN         0
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_MAN_RX_EQ_EN_BITS          1
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_MAN_RX_EQ_EN_SHIFT         4

/* vsr40_rx_ana25g :: ana_if_control0 :: rx_eq [03:00] */
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RX_EQ_MASK                 0x000f
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RX_EQ_ALIGN                0
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RX_EQ_BITS                 4
#define VSR40_RX_ANA25G_ANA_IF_CONTROL0_RX_EQ_SHIFT                0


/****************************************************************************
 * vsr40_rx_ana25g :: ana_if_status
 ***************************************************************************/
/* vsr40_rx_ana25g :: ana_if_status :: reserved0 [15:12] */
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RESERVED0_MASK               0xf000
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RESERVED0_ALIGN              0
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RESERVED0_BITS               4
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RESERVED0_SHIFT              12

/* vsr40_rx_ana25g :: ana_if_status :: rx_clk_pkdet_low_dgltch [11:11] */
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_CLK_PKDET_LOW_DGLTCH_MASK 0x0800
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_CLK_PKDET_LOW_DGLTCH_ALIGN 0
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_CLK_PKDET_LOW_DGLTCH_BITS 1
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_CLK_PKDET_LOW_DGLTCH_SHIFT 11

/* vsr40_rx_ana25g :: ana_if_status :: rx_clk_pkdet_high_dgltch [10:10] */
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_CLK_PKDET_HIGH_DGLTCH_MASK 0x0400
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_CLK_PKDET_HIGH_DGLTCH_ALIGN 0
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_CLK_PKDET_HIGH_DGLTCH_BITS 1
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_CLK_PKDET_HIGH_DGLTCH_SHIFT 10

/* vsr40_rx_ana25g :: ana_if_status :: rx_mref_gray_read [09:04] */
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_MREF_GRAY_READ_MASK       0x03f0
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_MREF_GRAY_READ_ALIGN      0
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_MREF_GRAY_READ_BITS       6
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_MREF_GRAY_READ_SHIFT      4

/* vsr40_rx_ana25g :: ana_if_status :: rx_eq_gray_read [03:00] */
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_EQ_GRAY_READ_MASK         0x000f
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_EQ_GRAY_READ_ALIGN        0
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_EQ_GRAY_READ_BITS         4
#define VSR40_RX_ANA25G_ANA_IF_STATUS_RX_EQ_GRAY_READ_SHIFT        0


/****************************************************************************
 * vsr40_rx_dig_regs_regs
 ***************************************************************************/
/****************************************************************************
 * vsr40_rx_dig_regs :: cdr_control
 ***************************************************************************/
/* vsr40_rx_dig_regs :: cdr_control :: reserved_for_eco0 [15:08] */
#define VSR40_RX_DIG_REGS_CDR_CONTROL_RESERVED_FOR_ECO0_MASK       0xff00
#define VSR40_RX_DIG_REGS_CDR_CONTROL_RESERVED_FOR_ECO0_ALIGN      0
#define VSR40_RX_DIG_REGS_CDR_CONTROL_RESERVED_FOR_ECO0_BITS       8
#define VSR40_RX_DIG_REGS_CDR_CONTROL_RESERVED_FOR_ECO0_SHIFT      8

/* vsr40_rx_dig_regs :: cdr_control :: cdrlock_status_ln3 [07:07] */
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN3_MASK      0x0080
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN3_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN3_BITS      1
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN3_SHIFT     7

/* vsr40_rx_dig_regs :: cdr_control :: cdrlock_status_ln2 [06:06] */
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN2_MASK      0x0040
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN2_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN2_BITS      1
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN2_SHIFT     6

/* vsr40_rx_dig_regs :: cdr_control :: cdrlock_status_ln1 [05:05] */
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN1_MASK      0x0020
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN1_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN1_BITS      1
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN1_SHIFT     5

/* vsr40_rx_dig_regs :: cdr_control :: cdrlock_status_ln0 [04:04] */
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN0_MASK      0x0010
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN0_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN0_BITS      1
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_STATUS_LN0_SHIFT     4

/* vsr40_rx_dig_regs :: cdr_control :: cdrlock_ln3 [03:03] */
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN3_MASK             0x0008
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN3_ALIGN            0
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN3_BITS             1
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN3_SHIFT            3

/* vsr40_rx_dig_regs :: cdr_control :: cdrlock_ln2 [02:02] */
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN2_MASK             0x0004
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN2_ALIGN            0
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN2_BITS             1
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN2_SHIFT            2

/* vsr40_rx_dig_regs :: cdr_control :: cdrlock_ln1 [01:01] */
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN1_MASK             0x0002
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN1_ALIGN            0
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN1_BITS             1
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN1_SHIFT            1

/* vsr40_rx_dig_regs :: cdr_control :: cdrlock_ln0 [00:00] */
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN0_MASK             0x0001
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN0_ALIGN            0
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN0_BITS             1
#define VSR40_RX_DIG_REGS_CDR_CONTROL_CDRLOCK_LN0_SHIFT            0


/****************************************************************************
 * vsr40_rx_dig_regs :: reset_control
 ***************************************************************************/
/* vsr40_rx_dig_regs :: reset_control :: rescal_reset_ovrd [15:15] */
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESCAL_RESET_OVRD_MASK     0x8000
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESCAL_RESET_OVRD_ALIGN    0
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESCAL_RESET_OVRD_BITS     1
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESCAL_RESET_OVRD_SHIFT    15

/* vsr40_rx_dig_regs :: reset_control :: pll_pwrdn_ovrd [14:14] */
#define VSR40_RX_DIG_REGS_RESET_CONTROL_PLL_PWRDN_OVRD_MASK        0x4000
#define VSR40_RX_DIG_REGS_RESET_CONTROL_PLL_PWRDN_OVRD_ALIGN       0
#define VSR40_RX_DIG_REGS_RESET_CONTROL_PLL_PWRDN_OVRD_BITS        1
#define VSR40_RX_DIG_REGS_RESET_CONTROL_PLL_PWRDN_OVRD_SHIFT       14

/* vsr40_rx_dig_regs :: reset_control :: reserved_for_eco0 [13:12] */
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO0_MASK     0x3000
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO0_ALIGN    0
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO0_BITS     2
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO0_SHIFT    12

/* vsr40_rx_dig_regs :: reset_control :: hs_ln3_rstb [11:11] */
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN3_RSTB_MASK           0x0800
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN3_RSTB_ALIGN          0
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN3_RSTB_BITS           1
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN3_RSTB_SHIFT          11

/* vsr40_rx_dig_regs :: reset_control :: hs_ln2_rstb [10:10] */
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN2_RSTB_MASK           0x0400
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN2_RSTB_ALIGN          0
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN2_RSTB_BITS           1
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN2_RSTB_SHIFT          10

/* vsr40_rx_dig_regs :: reset_control :: hs_ln1_rstb [09:09] */
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN1_RSTB_MASK           0x0200
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN1_RSTB_ALIGN          0
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN1_RSTB_BITS           1
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN1_RSTB_SHIFT          9

/* vsr40_rx_dig_regs :: reset_control :: hs_ln0_rstb [08:08] */
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN0_RSTB_MASK           0x0100
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN0_RSTB_ALIGN          0
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN0_RSTB_BITS           1
#define VSR40_RX_DIG_REGS_RESET_CONTROL_HS_LN0_RSTB_SHIFT          8

/* vsr40_rx_dig_regs :: reset_control :: reserved_for_eco1 [07:02] */
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO1_MASK     0x00fc
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO1_ALIGN    0
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO1_BITS     6
#define VSR40_RX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO1_SHIFT    2

/* vsr40_rx_dig_regs :: reset_control :: cal_rstb [01:01] */
#define VSR40_RX_DIG_REGS_RESET_CONTROL_CAL_RSTB_MASK              0x0002
#define VSR40_RX_DIG_REGS_RESET_CONTROL_CAL_RSTB_ALIGN             0
#define VSR40_RX_DIG_REGS_RESET_CONTROL_CAL_RSTB_BITS              1
#define VSR40_RX_DIG_REGS_RESET_CONTROL_CAL_RSTB_SHIFT             1

/* vsr40_rx_dig_regs :: reset_control :: lkdt_rstb [00:00] */
#define VSR40_RX_DIG_REGS_RESET_CONTROL_LKDT_RSTB_MASK             0x0001
#define VSR40_RX_DIG_REGS_RESET_CONTROL_LKDT_RSTB_ALIGN            0
#define VSR40_RX_DIG_REGS_RESET_CONTROL_LKDT_RSTB_BITS             1
#define VSR40_RX_DIG_REGS_RESET_CONTROL_LKDT_RSTB_SHIFT            0


/****************************************************************************
 * vsr40_rx_dig_regs :: clk_control
 ***************************************************************************/
/* vsr40_rx_dig_regs :: clk_control :: reserved_for_eco0 [15:00] */
#define VSR40_RX_DIG_REGS_CLK_CONTROL_RESERVED_FOR_ECO0_MASK       0xffff
#define VSR40_RX_DIG_REGS_CLK_CONTROL_RESERVED_FOR_ECO0_ALIGN      0
#define VSR40_RX_DIG_REGS_CLK_CONTROL_RESERVED_FOR_ECO0_BITS       16
#define VSR40_RX_DIG_REGS_CLK_CONTROL_RESERVED_FOR_ECO0_SHIFT      0


/****************************************************************************
 * vsr40_rx_dig_regs :: vcocal_control
 ***************************************************************************/
/* vsr40_rx_dig_regs :: vcocal_control :: reserved_for_eco0 [15:03] */
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_RESERVED_FOR_ECO0_MASK    0xfff8
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_RESERVED_FOR_ECO0_ALIGN   0
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_RESERVED_FOR_ECO0_BITS    13
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_RESERVED_FOR_ECO0_SHIFT   3

/* vsr40_rx_dig_regs :: vcocal_control :: cal_th [02:01] */
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_CAL_TH_MASK               0x0006
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_CAL_TH_ALIGN              0
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_CAL_TH_BITS               2
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_CAL_TH_SHIFT              1

/* vsr40_rx_dig_regs :: vcocal_control :: cap_delay [00:00] */
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_CAP_DELAY_MASK            0x0001
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_CAP_DELAY_ALIGN           0
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_CAP_DELAY_BITS            1
#define VSR40_RX_DIG_REGS_VCOCAL_CONTROL_CAP_DELAY_SHIFT           0


/****************************************************************************
 * vsr40_rx_dig_regs :: lockdet_control1
 ***************************************************************************/
/* vsr40_rx_dig_regs :: lockdet_control1 :: lkdt_assrt_cmpr [15:00] */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL1_LKDT_ASSRT_CMPR_MASK    0xffff
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL1_LKDT_ASSRT_CMPR_ALIGN   0
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL1_LKDT_ASSRT_CMPR_BITS    16
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL1_LKDT_ASSRT_CMPR_SHIFT   0


/****************************************************************************
 * vsr40_rx_dig_regs :: lockdet_control2
 ***************************************************************************/
/* vsr40_rx_dig_regs :: lockdet_control2 :: lkdt_deassrt_cmpr [15:00] */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL2_LKDT_DEASSRT_CMPR_MASK  0xffff
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL2_LKDT_DEASSRT_CMPR_ALIGN 0
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL2_LKDT_DEASSRT_CMPR_BITS  16
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL2_LKDT_DEASSRT_CMPR_SHIFT 0


/****************************************************************************
 * vsr40_rx_dig_regs :: lockdet_control3
 ***************************************************************************/
/* vsr40_rx_dig_regs :: lockdet_control3 :: lkdt_byp [15:15] */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_LKDT_BYP_MASK           0x8000
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_LKDT_BYP_ALIGN          0
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_LKDT_BYP_BITS           1
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_LKDT_BYP_SHIFT          15

/* vsr40_rx_dig_regs :: lockdet_control3 :: lkdt_cnt [14:12] */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_LKDT_CNT_MASK           0x7000
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_LKDT_CNT_ALIGN          0
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_LKDT_CNT_BITS           3
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_LKDT_CNT_SHIFT          12

/* vsr40_rx_dig_regs :: lockdet_control3 :: ppm_offset_deassrt [11:06] */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_DEASSRT_MASK 0x0fc0
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_DEASSRT_ALIGN 0
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_DEASSRT_BITS 6
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_DEASSRT_SHIFT 6

/* vsr40_rx_dig_regs :: lockdet_control3 :: ppm_offset_assrt [05:00] */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_ASSRT_MASK   0x003f
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_ASSRT_ALIGN  0
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_ASSRT_BITS   6
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_ASSRT_SHIFT  0


/****************************************************************************
 * vsr40_rx_dig_regs :: lockdet_control4
 ***************************************************************************/
/* vsr40_rx_dig_regs :: lockdet_control4 :: reserved_for_eco0 [15:03] */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL4_RESERVED_FOR_ECO0_MASK  0xfff8
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL4_RESERVED_FOR_ECO0_ALIGN 0
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL4_RESERVED_FOR_ECO0_BITS  13
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL4_RESERVED_FOR_ECO0_SHIFT 3

/* vsr40_rx_dig_regs :: lockdet_control4 :: dec_pre_lkdt_cnt [02:00] */
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL4_DEC_PRE_LKDT_CNT_MASK   0x0007
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL4_DEC_PRE_LKDT_CNT_ALIGN  0
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL4_DEC_PRE_LKDT_CNT_BITS   3
#define VSR40_RX_DIG_REGS_LOCKDET_CONTROL4_DEC_PRE_LKDT_CNT_SHIFT  0


/****************************************************************************
 * vsr40_rx_dig_regs :: reserve_control
 ***************************************************************************/
/* vsr40_rx_dig_regs :: reserve_control :: dig_rsvd_1 [15:03] */
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_DIG_RSVD_1_MASK          0xfff8
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_DIG_RSVD_1_ALIGN         0
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_DIG_RSVD_1_BITS          13
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_DIG_RSVD_1_SHIFT         3

/* vsr40_rx_dig_regs :: reserve_control :: alosb_degltch_sel [02:01] */
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_ALOSB_DEGLTCH_SEL_MASK   0x0006
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_ALOSB_DEGLTCH_SEL_ALIGN  0
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_ALOSB_DEGLTCH_SEL_BITS   2
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_ALOSB_DEGLTCH_SEL_SHIFT  1

/* vsr40_rx_dig_regs :: reserve_control :: alosb_degltch_en [00:00] */
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_ALOSB_DEGLTCH_EN_MASK    0x0001
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_ALOSB_DEGLTCH_EN_ALIGN   0
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_ALOSB_DEGLTCH_EN_BITS    1
#define VSR40_RX_DIG_REGS_RESERVE_CONTROL_ALOSB_DEGLTCH_EN_SHIFT   0


/****************************************************************************
 * vsr40_rx_dig_regs :: status
 ***************************************************************************/
/* vsr40_rx_dig_regs :: status :: reserved_for_eco0 [15:11] */
#define VSR40_RX_DIG_REGS_STATUS_RESERVED_FOR_ECO0_MASK            0xf800
#define VSR40_RX_DIG_REGS_STATUS_RESERVED_FOR_ECO0_ALIGN           0
#define VSR40_RX_DIG_REGS_STATUS_RESERVED_FOR_ECO0_BITS            5
#define VSR40_RX_DIG_REGS_STATUS_RESERVED_FOR_ECO0_SHIFT           11

/* vsr40_rx_dig_regs :: status :: alosb [10:07] */
#define VSR40_RX_DIG_REGS_STATUS_ALOSB_MASK                        0x0780
#define VSR40_RX_DIG_REGS_STATUS_ALOSB_ALIGN                       0
#define VSR40_RX_DIG_REGS_STATUS_ALOSB_BITS                        4
#define VSR40_RX_DIG_REGS_STATUS_ALOSB_SHIFT                       7

/* vsr40_rx_dig_regs :: status :: cal_state [06:04] */
#define VSR40_RX_DIG_REGS_STATUS_CAL_STATE_MASK                    0x0070
#define VSR40_RX_DIG_REGS_STATUS_CAL_STATE_ALIGN                   0
#define VSR40_RX_DIG_REGS_STATUS_CAL_STATE_BITS                    3
#define VSR40_RX_DIG_REGS_STATUS_CAL_STATE_SHIFT                   4

/* vsr40_rx_dig_regs :: status :: cal_valid [03:03] */
#define VSR40_RX_DIG_REGS_STATUS_CAL_VALID_MASK                    0x0008
#define VSR40_RX_DIG_REGS_STATUS_CAL_VALID_ALIGN                   0
#define VSR40_RX_DIG_REGS_STATUS_CAL_VALID_BITS                    1
#define VSR40_RX_DIG_REGS_STATUS_CAL_VALID_SHIFT                   3

/* vsr40_rx_dig_regs :: status :: cal_valid_ll [02:02] */
#define VSR40_RX_DIG_REGS_STATUS_CAL_VALID_LL_MASK                 0x0004
#define VSR40_RX_DIG_REGS_STATUS_CAL_VALID_LL_ALIGN                0
#define VSR40_RX_DIG_REGS_STATUS_CAL_VALID_LL_BITS                 1
#define VSR40_RX_DIG_REGS_STATUS_CAL_VALID_LL_SHIFT                2

/* vsr40_rx_dig_regs :: status :: lockerrb [01:01] */
#define VSR40_RX_DIG_REGS_STATUS_LOCKERRB_MASK                     0x0002
#define VSR40_RX_DIG_REGS_STATUS_LOCKERRB_ALIGN                    0
#define VSR40_RX_DIG_REGS_STATUS_LOCKERRB_BITS                     1
#define VSR40_RX_DIG_REGS_STATUS_LOCKERRB_SHIFT                    1

/* vsr40_rx_dig_regs :: status :: lockerrb_ll [00:00] */
#define VSR40_RX_DIG_REGS_STATUS_LOCKERRB_LL_MASK                  0x0001
#define VSR40_RX_DIG_REGS_STATUS_LOCKERRB_LL_ALIGN                 0
#define VSR40_RX_DIG_REGS_STATUS_LOCKERRB_LL_BITS                  1
#define VSR40_RX_DIG_REGS_STATUS_LOCKERRB_LL_SHIFT                 0


/****************************************************************************
 * vsr40_rx_dig_regs :: rx_misr
 ***************************************************************************/
/* vsr40_rx_dig_regs :: rx_misr :: rx_intr_rsvd [15:04] */
#define VSR40_RX_DIG_REGS_RX_MISR_RX_INTR_RSVD_MASK                0xfff0
#define VSR40_RX_DIG_REGS_RX_MISR_RX_INTR_RSVD_ALIGN               0
#define VSR40_RX_DIG_REGS_RX_MISR_RX_INTR_RSVD_BITS                12
#define VSR40_RX_DIG_REGS_RX_MISR_RX_INTR_RSVD_SHIFT               4

/* vsr40_rx_dig_regs :: rx_misr :: rx_vco_cal_lost [03:03] */
#define VSR40_RX_DIG_REGS_RX_MISR_RX_VCO_CAL_LOST_MASK             0x0008
#define VSR40_RX_DIG_REGS_RX_MISR_RX_VCO_CAL_LOST_ALIGN            0
#define VSR40_RX_DIG_REGS_RX_MISR_RX_VCO_CAL_LOST_BITS             1
#define VSR40_RX_DIG_REGS_RX_MISR_RX_VCO_CAL_LOST_SHIFT            3

/* vsr40_rx_dig_regs :: rx_misr :: rx_vco_cal_done [02:02] */
#define VSR40_RX_DIG_REGS_RX_MISR_RX_VCO_CAL_DONE_MASK             0x0004
#define VSR40_RX_DIG_REGS_RX_MISR_RX_VCO_CAL_DONE_ALIGN            0
#define VSR40_RX_DIG_REGS_RX_MISR_RX_VCO_CAL_DONE_BITS             1
#define VSR40_RX_DIG_REGS_RX_MISR_RX_VCO_CAL_DONE_SHIFT            2

/* vsr40_rx_dig_regs :: rx_misr :: rx_pll_lost_lock [01:01] */
#define VSR40_RX_DIG_REGS_RX_MISR_RX_PLL_LOST_LOCK_MASK            0x0002
#define VSR40_RX_DIG_REGS_RX_MISR_RX_PLL_LOST_LOCK_ALIGN           0
#define VSR40_RX_DIG_REGS_RX_MISR_RX_PLL_LOST_LOCK_BITS            1
#define VSR40_RX_DIG_REGS_RX_MISR_RX_PLL_LOST_LOCK_SHIFT           1

/* vsr40_rx_dig_regs :: rx_misr :: rx_pll_lock [00:00] */
#define VSR40_RX_DIG_REGS_RX_MISR_RX_PLL_LOCK_MASK                 0x0001
#define VSR40_RX_DIG_REGS_RX_MISR_RX_PLL_LOCK_ALIGN                0
#define VSR40_RX_DIG_REGS_RX_MISR_RX_PLL_LOCK_BITS                 1
#define VSR40_RX_DIG_REGS_RX_MISR_RX_PLL_LOCK_SHIFT                0


/****************************************************************************
 * vsr40_rx_dig_regs :: rx_mimr
 ***************************************************************************/
/* vsr40_rx_dig_regs :: rx_mimr :: mask_rx_intr_rsvd [15:04] */
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_INTR_RSVD_MASK           0xfff0
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_INTR_RSVD_ALIGN          0
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_INTR_RSVD_BITS           12
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_INTR_RSVD_SHIFT          4

/* vsr40_rx_dig_regs :: rx_mimr :: mask_rx_vco_cal_lost [03:03] */
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_VCO_CAL_LOST_MASK        0x0008
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_VCO_CAL_LOST_ALIGN       0
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_VCO_CAL_LOST_BITS        1
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_VCO_CAL_LOST_SHIFT       3

/* vsr40_rx_dig_regs :: rx_mimr :: mask_rx_vco_cal_done [02:02] */
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_VCO_CAL_DONE_MASK        0x0004
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_VCO_CAL_DONE_ALIGN       0
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_VCO_CAL_DONE_BITS        1
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_VCO_CAL_DONE_SHIFT       2

/* vsr40_rx_dig_regs :: rx_mimr :: mask_rx_pll_lost_lock [01:01] */
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_PLL_LOST_LOCK_MASK       0x0002
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_PLL_LOST_LOCK_ALIGN      0
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_PLL_LOST_LOCK_BITS       1
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_PLL_LOST_LOCK_SHIFT      1

/* vsr40_rx_dig_regs :: rx_mimr :: mask_rx_pll_lock [00:00] */
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_PLL_LOCK_MASK            0x0001
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_PLL_LOCK_ALIGN           0
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_PLL_LOCK_BITS            1
#define VSR40_RX_DIG_REGS_RX_MIMR_MASK_RX_PLL_LOCK_SHIFT           0


/****************************************************************************
 * vsr40_rx_dig_regs :: rx_p_misr
 ***************************************************************************/
/* vsr40_rx_dig_regs :: rx_p_misr :: p_rx_intr_rsvd [15:04] */
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_INTR_RSVD_MASK            0xfff0
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_INTR_RSVD_ALIGN           0
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_INTR_RSVD_BITS            12
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_INTR_RSVD_SHIFT           4

/* vsr40_rx_dig_regs :: rx_p_misr :: p_rx_vco_cal_lost [03:03] */
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_VCO_CAL_LOST_MASK         0x0008
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_VCO_CAL_LOST_ALIGN        0
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_VCO_CAL_LOST_BITS         1
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_VCO_CAL_LOST_SHIFT        3

/* vsr40_rx_dig_regs :: rx_p_misr :: p_rx_vco_cal_done [02:02] */
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_VCO_CAL_DONE_MASK         0x0004
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_VCO_CAL_DONE_ALIGN        0
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_VCO_CAL_DONE_BITS         1
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_VCO_CAL_DONE_SHIFT        2

/* vsr40_rx_dig_regs :: rx_p_misr :: p_rx_pll_lost_lock [01:01] */
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_PLL_LOST_LOCK_MASK        0x0002
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_PLL_LOST_LOCK_ALIGN       0
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_PLL_LOST_LOCK_BITS        1
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_PLL_LOST_LOCK_SHIFT       1

/* vsr40_rx_dig_regs :: rx_p_misr :: p_rx_pll_lock [00:00] */
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_PLL_LOCK_MASK             0x0001
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_PLL_LOCK_ALIGN            0
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_PLL_LOCK_BITS             1
#define VSR40_RX_DIG_REGS_RX_P_MISR_P_RX_PLL_LOCK_SHIFT            0


/****************************************************************************
 * vsr40_rx_dig_regs :: cdr_misr
 ***************************************************************************/
/* vsr40_rx_dig_regs :: cdr_misr :: cdr_intr_rsvd [15:12] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTR_RSVD_MASK              0xf000
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTR_RSVD_ALIGN             0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTR_RSVD_BITS              4
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTR_RSVD_SHIFT             12

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_eml_comp_done_ch3 [11:11] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH3_MASK      0x0800
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH3_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH3_BITS      1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH3_SHIFT     11

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_pfc_xcor_done_ch3 [10:10] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH3_MASK      0x0400
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH3_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH3_BITS      1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH3_SHIFT     10

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_integ_sat_ch3 [09:09] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH3_MASK          0x0200
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH3_ALIGN         0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH3_BITS          1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH3_SHIFT         9

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_eml_comp_done_ch2 [08:08] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH2_MASK      0x0100
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH2_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH2_BITS      1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH2_SHIFT     8

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_pfc_xcor_done_ch2 [07:07] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH2_MASK      0x0080
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH2_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH2_BITS      1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH2_SHIFT     7

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_integ_sat_ch2 [06:06] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH2_MASK          0x0040
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH2_ALIGN         0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH2_BITS          1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH2_SHIFT         6

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_eml_comp_done_ch1 [05:05] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH1_MASK      0x0020
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH1_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH1_BITS      1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH1_SHIFT     5

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_pfc_xcor_done_ch1 [04:04] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH1_MASK      0x0010
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH1_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH1_BITS      1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH1_SHIFT     4

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_integ_sat_ch1 [03:03] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH1_MASK          0x0008
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH1_ALIGN         0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH1_BITS          1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH1_SHIFT         3

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_eml_comp_done_ch0 [02:02] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH0_MASK      0x0004
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH0_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH0_BITS      1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_EML_COMP_DONE_CH0_SHIFT     2

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_pfc_xcor_done_ch0 [01:01] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH0_MASK      0x0002
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH0_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH0_BITS      1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_PFC_XCOR_DONE_CH0_SHIFT     1

/* vsr40_rx_dig_regs :: cdr_misr :: cdr_integ_sat_ch0 [00:00] */
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH0_MASK          0x0001
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH0_ALIGN         0
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH0_BITS          1
#define VSR40_RX_DIG_REGS_CDR_MISR_CDR_INTEG_SAT_CH0_SHIFT         0


/****************************************************************************
 * vsr40_rx_dig_regs :: cdr_mimr
 ***************************************************************************/
/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_intr_rsvd [15:12] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTR_RSVD_MASK         0xf000
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTR_RSVD_ALIGN        0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTR_RSVD_BITS         4
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTR_RSVD_SHIFT        12

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_eml_comp_done_ch3 [11:11] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH3_MASK 0x0800
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH3_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH3_BITS 1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH3_SHIFT 11

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_pfc_xcor_done_ch3 [10:10] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH3_MASK 0x0400
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH3_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH3_BITS 1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH3_SHIFT 10

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_integ_sat_ch3 [09:09] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH3_MASK     0x0200
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH3_ALIGN    0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH3_BITS     1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH3_SHIFT    9

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_eml_comp_done_ch2 [08:08] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH2_MASK 0x0100
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH2_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH2_BITS 1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH2_SHIFT 8

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_pfc_xcor_done_ch2 [07:07] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH2_MASK 0x0080
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH2_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH2_BITS 1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH2_SHIFT 7

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_integ_sat_ch2 [06:06] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH2_MASK     0x0040
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH2_ALIGN    0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH2_BITS     1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH2_SHIFT    6

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_eml_comp_done_ch1 [05:05] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH1_MASK 0x0020
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH1_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH1_BITS 1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH1_SHIFT 5

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_pfc_xcor_done_ch1 [04:04] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH1_MASK 0x0010
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH1_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH1_BITS 1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH1_SHIFT 4

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_integ_sat_ch1 [03:03] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH1_MASK     0x0008
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH1_ALIGN    0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH1_BITS     1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH1_SHIFT    3

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_eml_comp_done_ch0 [02:02] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH0_MASK 0x0004
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH0_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH0_BITS 1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_EML_COMP_DONE_CH0_SHIFT 2

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_pfc_xcor_done_ch0 [01:01] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH0_MASK 0x0002
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH0_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH0_BITS 1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_PFC_XCOR_DONE_CH0_SHIFT 1

/* vsr40_rx_dig_regs :: cdr_mimr :: mask_cdr_integ_sat_ch0 [00:00] */
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH0_MASK     0x0001
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH0_ALIGN    0
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH0_BITS     1
#define VSR40_RX_DIG_REGS_CDR_MIMR_MASK_CDR_INTEG_SAT_CH0_SHIFT    0


/****************************************************************************
 * vsr40_rx_dig_regs :: cdr_p_misr
 ***************************************************************************/
/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_intr_rsvd [15:12] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTR_RSVD_MASK          0xf000
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTR_RSVD_ALIGN         0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTR_RSVD_BITS          4
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTR_RSVD_SHIFT         12

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_eml_comp_done_ch3 [11:11] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH3_MASK  0x0800
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH3_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH3_BITS  1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH3_SHIFT 11

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_pfc_xcor_done_ch3 [10:10] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH3_MASK  0x0400
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH3_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH3_BITS  1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH3_SHIFT 10

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_integ_sat_ch3 [09:09] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH3_MASK      0x0200
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH3_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH3_BITS      1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH3_SHIFT     9

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_eml_comp_done_ch2 [08:08] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH2_MASK  0x0100
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH2_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH2_BITS  1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH2_SHIFT 8

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_pfc_xcor_done_ch2 [07:07] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH2_MASK  0x0080
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH2_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH2_BITS  1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH2_SHIFT 7

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_integ_sat_ch2 [06:06] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH2_MASK      0x0040
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH2_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH2_BITS      1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH2_SHIFT     6

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_eml_comp_done_ch1 [05:05] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH1_MASK  0x0020
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH1_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH1_BITS  1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH1_SHIFT 5

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_pfc_xcor_done_ch1 [04:04] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH1_MASK  0x0010
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH1_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH1_BITS  1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH1_SHIFT 4

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_integ_sat_ch1 [03:03] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH1_MASK      0x0008
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH1_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH1_BITS      1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH1_SHIFT     3

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_eml_comp_done_ch0 [02:02] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH0_MASK  0x0004
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH0_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH0_BITS  1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_EML_COMP_DONE_CH0_SHIFT 2

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_pfc_xcor_done_ch0 [01:01] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH0_MASK  0x0002
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH0_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH0_BITS  1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_PFC_XCOR_DONE_CH0_SHIFT 1

/* vsr40_rx_dig_regs :: cdr_p_misr :: p_cdr_integ_sat_ch0 [00:00] */
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH0_MASK      0x0001
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH0_ALIGN     0
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH0_BITS      1
#define VSR40_RX_DIG_REGS_CDR_P_MISR_P_CDR_INTEG_SAT_CH0_SHIFT     0


/****************************************************************************
 * vsr40_rx_dig_regs :: dp_ctrl
 ***************************************************************************/
/* vsr40_rx_dig_regs :: dp_ctrl :: reserved0 [15:08] */
#define VSR40_RX_DIG_REGS_DP_CTRL_RESERVED0_MASK                   0xff00
#define VSR40_RX_DIG_REGS_DP_CTRL_RESERVED0_ALIGN                  0
#define VSR40_RX_DIG_REGS_DP_CTRL_RESERVED0_BITS                   8
#define VSR40_RX_DIG_REGS_DP_CTRL_RESERVED0_SHIFT                  8

/* vsr40_rx_dig_regs :: dp_ctrl :: swap_dp [07:04] */
#define VSR40_RX_DIG_REGS_DP_CTRL_SWAP_DP_MASK                     0x00f0
#define VSR40_RX_DIG_REGS_DP_CTRL_SWAP_DP_ALIGN                    0
#define VSR40_RX_DIG_REGS_DP_CTRL_SWAP_DP_BITS                     4
#define VSR40_RX_DIG_REGS_DP_CTRL_SWAP_DP_SHIFT                    4

/* vsr40_rx_dig_regs :: dp_ctrl :: invert_dp [03:00] */
#define VSR40_RX_DIG_REGS_DP_CTRL_INVERT_DP_MASK                   0x000f
#define VSR40_RX_DIG_REGS_DP_CTRL_INVERT_DP_ALIGN                  0
#define VSR40_RX_DIG_REGS_DP_CTRL_INVERT_DP_BITS                   4
#define VSR40_RX_DIG_REGS_DP_CTRL_INVERT_DP_SHIFT                  0


/****************************************************************************
 * vsr40_rx_dig_regs :: cdr_common_wr_en
 ***************************************************************************/
/* vsr40_rx_dig_regs :: cdr_common_wr_en :: reserved0 [15:06] */
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_RESERVED0_MASK          0xffc0
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_RESERVED0_ALIGN         0
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_RESERVED0_BITS          10
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_RESERVED0_SHIFT         6

/* vsr40_rx_dig_regs :: cdr_common_wr_en :: cdr_integ_consec_sat_det_cntrl_wr_en [05:05] */
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_INTEG_CONSEC_SAT_DET_CNTRL_WR_EN_MASK 0x0020
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_INTEG_CONSEC_SAT_DET_CNTRL_WR_EN_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_INTEG_CONSEC_SAT_DET_CNTRL_WR_EN_BITS 1
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_INTEG_CONSEC_SAT_DET_CNTRL_WR_EN_SHIFT 5

/* vsr40_rx_dig_regs :: cdr_common_wr_en :: cdr_pe_os_integ_wr_en [04:04] */
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_PE_OS_INTEG_WR_EN_MASK 0x0010
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_PE_OS_INTEG_WR_EN_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_PE_OS_INTEG_WR_EN_BITS 1
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_PE_OS_INTEG_WR_EN_SHIFT 4

/* vsr40_rx_dig_regs :: cdr_common_wr_en :: cdr_pe_os_common_wr_en [03:03] */
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_PE_OS_COMMON_WR_EN_MASK 0x0008
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_PE_OS_COMMON_WR_EN_ALIGN 0
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_PE_OS_COMMON_WR_EN_BITS 1
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_PE_OS_COMMON_WR_EN_SHIFT 3

/* vsr40_rx_dig_regs :: cdr_common_wr_en :: cdr_integ_wr_en [02:02] */
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_INTEG_WR_EN_MASK    0x0004
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_INTEG_WR_EN_ALIGN   0
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_INTEG_WR_EN_BITS    1
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_INTEG_WR_EN_SHIFT   2

/* vsr40_rx_dig_regs :: cdr_common_wr_en :: cdr_kf_wr_en [01:01] */
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_KF_WR_EN_MASK       0x0002
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_KF_WR_EN_ALIGN      0
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_KF_WR_EN_BITS       1
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_KF_WR_EN_SHIFT      1

/* vsr40_rx_dig_regs :: cdr_common_wr_en :: cdr_kp_wr_en [00:00] */
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_KP_WR_EN_MASK       0x0001
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_KP_WR_EN_ALIGN      0
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_KP_WR_EN_BITS       1
#define VSR40_RX_DIG_REGS_CDR_COMMON_WR_EN_CDR_KP_WR_EN_SHIFT      0


/****************************************************************************
 * vsr40_rx_pll_regs
 ***************************************************************************/
/****************************************************************************
 * vsr40_rx_pll :: control7
 ***************************************************************************/
/* vsr40_rx_pll :: control7 :: pll_rsrvd_103_90 [15:02] */
#define VSR40_RX_PLL_CONTROL7_PLL_RSRVD_103_90_MASK                0xfffc
#define VSR40_RX_PLL_CONTROL7_PLL_RSRVD_103_90_ALIGN               0
#define VSR40_RX_PLL_CONTROL7_PLL_RSRVD_103_90_BITS                14
#define VSR40_RX_PLL_CONTROL7_PLL_RSRVD_103_90_SHIFT               2

/* vsr40_rx_pll :: control7 :: Rx_tport_cur [01:00] */
#define VSR40_RX_PLL_CONTROL7_RX_TPORT_CUR_MASK                    0x0003
#define VSR40_RX_PLL_CONTROL7_RX_TPORT_CUR_ALIGN                   0
#define VSR40_RX_PLL_CONTROL7_RX_TPORT_CUR_BITS                    2
#define VSR40_RX_PLL_CONTROL7_RX_TPORT_CUR_SHIFT                   0


/****************************************************************************
 * vsr40_rx_pll :: control6
 ***************************************************************************/
/* vsr40_rx_pll :: control6 :: reserved_for_eco0 [15:08] */
#define VSR40_RX_PLL_CONTROL6_RESERVED_FOR_ECO0_MASK               0xff00
#define VSR40_RX_PLL_CONTROL6_RESERVED_FOR_ECO0_ALIGN              0
#define VSR40_RX_PLL_CONTROL6_RESERVED_FOR_ECO0_BITS               8
#define VSR40_RX_PLL_CONTROL6_RESERVED_FOR_ECO0_SHIFT              8

/* vsr40_rx_pll :: control6 :: Rx_2T_IQbuf_ptat [07:04] */
#define VSR40_RX_PLL_CONTROL6_RX_2T_IQBUF_PTAT_MASK                0x00f0
#define VSR40_RX_PLL_CONTROL6_RX_2T_IQBUF_PTAT_ALIGN               0
#define VSR40_RX_PLL_CONTROL6_RX_2T_IQBUF_PTAT_BITS                4
#define VSR40_RX_PLL_CONTROL6_RX_2T_IQBUF_PTAT_SHIFT               4

/* vsr40_rx_pll :: control6 :: Rx_2T_IQbuf_bgcr [03:00] */
#define VSR40_RX_PLL_CONTROL6_RX_2T_IQBUF_BGCR_MASK                0x000f
#define VSR40_RX_PLL_CONTROL6_RX_2T_IQBUF_BGCR_ALIGN               0
#define VSR40_RX_PLL_CONTROL6_RX_2T_IQBUF_BGCR_BITS                4
#define VSR40_RX_PLL_CONTROL6_RX_2T_IQBUF_BGCR_SHIFT               0


/****************************************************************************
 * vsr40_rx_pll :: control5
 ***************************************************************************/
/* vsr40_rx_pll :: control5 :: reserved_for_eco0 [15:13] */
#define VSR40_RX_PLL_CONTROL5_RESERVED_FOR_ECO0_MASK               0xe000
#define VSR40_RX_PLL_CONTROL5_RESERVED_FOR_ECO0_ALIGN              0
#define VSR40_RX_PLL_CONTROL5_RESERVED_FOR_ECO0_BITS               3
#define VSR40_RX_PLL_CONTROL5_RESERVED_FOR_ECO0_SHIFT              13

/* vsr40_rx_pll :: control5 :: Not_used_in_RX_PLL [12:11] */
#define VSR40_RX_PLL_CONTROL5_NOT_USED_IN_RX_PLL_MASK              0x1800
#define VSR40_RX_PLL_CONTROL5_NOT_USED_IN_RX_PLL_ALIGN             0
#define VSR40_RX_PLL_CONTROL5_NOT_USED_IN_RX_PLL_BITS              2
#define VSR40_RX_PLL_CONTROL5_NOT_USED_IN_RX_PLL_SHIFT             11

/* vsr40_rx_pll :: control5 :: Rx_pll_test_ref_sel [10:10] */
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_REF_SEL_MASK             0x0400
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_REF_SEL_ALIGN            0
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_REF_SEL_BITS             1
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_REF_SEL_SHIFT            10

/* vsr40_rx_pll :: control5 :: Not_used_in_RX_PLL_76_72 [09:05] */
#define VSR40_RX_PLL_CONTROL5_NOT_USED_IN_RX_PLL_76_72_MASK        0x03e0
#define VSR40_RX_PLL_CONTROL5_NOT_USED_IN_RX_PLL_76_72_ALIGN       0
#define VSR40_RX_PLL_CONTROL5_NOT_USED_IN_RX_PLL_76_72_BITS        5
#define VSR40_RX_PLL_CONTROL5_NOT_USED_IN_RX_PLL_76_72_SHIFT       5

/* vsr40_rx_pll :: control5 :: Rx_pll_test_clk [04:04] */
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_CLK_MASK                 0x0010
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_CLK_ALIGN                0
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_CLK_BITS                 1
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_CLK_SHIFT                4

/* vsr40_rx_pll :: control5 :: Rx_pll_test_vc [03:03] */
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_VC_MASK                  0x0008
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_VC_ALIGN                 0
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_VC_BITS                  1
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TEST_VC_SHIFT                 3

/* vsr40_rx_pll :: control5 :: Rx_bg_test_vbg [02:02] */
#define VSR40_RX_PLL_CONTROL5_RX_BG_TEST_VBG_MASK                  0x0004
#define VSR40_RX_PLL_CONTROL5_RX_BG_TEST_VBG_ALIGN                 0
#define VSR40_RX_PLL_CONTROL5_RX_BG_TEST_VBG_BITS                  1
#define VSR40_RX_PLL_CONTROL5_RX_BG_TEST_VBG_SHIFT                 2

/* vsr40_rx_pll :: control5 :: rx_pll_rsrvd_68 [01:01] */
#define VSR40_RX_PLL_CONTROL5_RX_PLL_RSRVD_68_MASK                 0x0002
#define VSR40_RX_PLL_CONTROL5_RX_PLL_RSRVD_68_ALIGN                0
#define VSR40_RX_PLL_CONTROL5_RX_PLL_RSRVD_68_BITS                 1
#define VSR40_RX_PLL_CONTROL5_RX_PLL_RSRVD_68_SHIFT                1

/* vsr40_rx_pll :: control5 :: Rx_pll_tp_tailchg_en [00:00] */
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TP_TAILCHG_EN_MASK            0x0001
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TP_TAILCHG_EN_ALIGN           0
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TP_TAILCHG_EN_BITS            1
#define VSR40_RX_PLL_CONTROL5_RX_PLL_TP_TAILCHG_EN_SHIFT           0


/****************************************************************************
 * vsr40_rx_pll :: control4
 ***************************************************************************/
/* vsr40_rx_pll :: control4 :: susm_rx_refsel_frc [15:15] */
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_REFSEL_FRC_MASK              0x8000
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_REFSEL_FRC_ALIGN             0
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_REFSEL_FRC_BITS              1
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_REFSEL_FRC_SHIFT             15

/* vsr40_rx_pll :: control4 :: susm_rx_refsel [14:13] */
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_REFSEL_MASK                  0x6000
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_REFSEL_ALIGN                 0
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_REFSEL_BITS                  2
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_REFSEL_SHIFT                 13

/* vsr40_rx_pll :: control4 :: susm_rx_en_e100g_frc [12:12] */
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_E100G_FRC_MASK            0x1000
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_E100G_FRC_ALIGN           0
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_E100G_FRC_BITS            1
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_E100G_FRC_SHIFT           12

/* vsr40_rx_pll :: control4 :: susm_rx_en_e100g [11:11] */
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_E100G_MASK                0x0800
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_E100G_ALIGN               0
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_E100G_BITS                1
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_E100G_SHIFT               11

/* vsr40_rx_pll :: control4 :: susm_rx_en_25g_frc [10:10] */
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_25G_FRC_MASK              0x0400
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_25G_FRC_ALIGN             0
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_25G_FRC_BITS              1
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_25G_FRC_SHIFT             10

/* vsr40_rx_pll :: control4 :: susm_rx_en_25g [09:09] */
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_25G_MASK                  0x0200
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_25G_ALIGN                 0
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_25G_BITS                  1
#define VSR40_RX_PLL_CONTROL4_SUSM_RX_EN_25G_SHIFT                 9

/* vsr40_rx_pll :: control4 :: ENDUALREF [08:08] */
#define VSR40_RX_PLL_CONTROL4_ENDUALREF_MASK                       0x0100
#define VSR40_RX_PLL_CONTROL4_ENDUALREF_ALIGN                      0
#define VSR40_RX_PLL_CONTROL4_ENDUALREF_BITS                       1
#define VSR40_RX_PLL_CONTROL4_ENDUALREF_SHIFT                      8

/* vsr40_rx_pll :: control4 :: CMUSEL [07:06] */
#define VSR40_RX_PLL_CONTROL4_CMUSEL_MASK                          0x00c0
#define VSR40_RX_PLL_CONTROL4_CMUSEL_ALIGN                         0
#define VSR40_RX_PLL_CONTROL4_CMUSEL_BITS                          2
#define VSR40_RX_PLL_CONTROL4_CMUSEL_SHIFT                         6

/* vsr40_rx_pll :: control4 :: Rx_bg_pwrdn [05:05] */
#define VSR40_RX_PLL_CONTROL4_RX_BG_PWRDN_MASK                     0x0020
#define VSR40_RX_PLL_CONTROL4_RX_BG_PWRDN_ALIGN                    0
#define VSR40_RX_PLL_CONTROL4_RX_BG_PWRDN_BITS                     1
#define VSR40_RX_PLL_CONTROL4_RX_BG_PWRDN_SHIFT                    5

/* vsr40_rx_pll :: control4 :: Rx_pll_pwrdn [04:04] */
#define VSR40_RX_PLL_CONTROL4_RX_PLL_PWRDN_MASK                    0x0010
#define VSR40_RX_PLL_CONTROL4_RX_PLL_PWRDN_ALIGN                   0
#define VSR40_RX_PLL_CONTROL4_RX_PLL_PWRDN_BITS                    1
#define VSR40_RX_PLL_CONTROL4_RX_PLL_PWRDN_SHIFT                   4

/* vsr40_rx_pll :: control4 :: Rx_bg_ptatadj [03:00] */
#define VSR40_RX_PLL_CONTROL4_RX_BG_PTATADJ_MASK                   0x000f
#define VSR40_RX_PLL_CONTROL4_RX_BG_PTATADJ_ALIGN                  0
#define VSR40_RX_PLL_CONTROL4_RX_BG_PTATADJ_BITS                   4
#define VSR40_RX_PLL_CONTROL4_RX_BG_PTATADJ_SHIFT                  0


/****************************************************************************
 * vsr40_rx_pll :: control3
 ***************************************************************************/
/* vsr40_rx_pll :: control3 :: Rx_bg_ctatadj [15:12] */
#define VSR40_RX_PLL_CONTROL3_RX_BG_CTATADJ_MASK                   0xf000
#define VSR40_RX_PLL_CONTROL3_RX_BG_CTATADJ_ALIGN                  0
#define VSR40_RX_PLL_CONTROL3_RX_BG_CTATADJ_BITS                   4
#define VSR40_RX_PLL_CONTROL3_RX_BG_CTATADJ_SHIFT                  12

/* vsr40_rx_pll :: control3 :: Not_used_in_RX_PLL_49_46 [11:08] */
#define VSR40_RX_PLL_CONTROL3_NOT_USED_IN_RX_PLL_49_46_MASK        0x0f00
#define VSR40_RX_PLL_CONTROL3_NOT_USED_IN_RX_PLL_49_46_ALIGN       0
#define VSR40_RX_PLL_CONTROL3_NOT_USED_IN_RX_PLL_49_46_BITS        4
#define VSR40_RX_PLL_CONTROL3_NOT_USED_IN_RX_PLL_49_46_SHIFT       8

/* vsr40_rx_pll :: control3 :: Rx_vco_range_frc [07:07] */
#define VSR40_RX_PLL_CONTROL3_RX_VCO_RANGE_FRC_MASK                0x0080
#define VSR40_RX_PLL_CONTROL3_RX_VCO_RANGE_FRC_ALIGN               0
#define VSR40_RX_PLL_CONTROL3_RX_VCO_RANGE_FRC_BITS                1
#define VSR40_RX_PLL_CONTROL3_RX_VCO_RANGE_FRC_SHIFT               7

/* vsr40_rx_pll :: control3 :: Rx_vco_range [06:00] */
#define VSR40_RX_PLL_CONTROL3_RX_VCO_RANGE_MASK                    0x007f
#define VSR40_RX_PLL_CONTROL3_RX_VCO_RANGE_ALIGN                   0
#define VSR40_RX_PLL_CONTROL3_RX_VCO_RANGE_BITS                    7
#define VSR40_RX_PLL_CONTROL3_RX_VCO_RANGE_SHIFT                   0


/****************************************************************************
 * vsr40_rx_pll :: control2
 ***************************************************************************/
/* vsr40_rx_pll :: control2 :: Rx_vco_cur [15:15] */
#define VSR40_RX_PLL_CONTROL2_RX_VCO_CUR_MASK                      0x8000
#define VSR40_RX_PLL_CONTROL2_RX_VCO_CUR_ALIGN                     0
#define VSR40_RX_PLL_CONTROL2_RX_VCO_CUR_BITS                      1
#define VSR40_RX_PLL_CONTROL2_RX_VCO_CUR_SHIFT                     15

/* vsr40_rx_pll :: control2 :: susm_rx_vco_en25G_frc [14:14] */
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_VCO_EN25G_FRC_MASK           0x4000
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_VCO_EN25G_FRC_ALIGN          0
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_VCO_EN25G_FRC_BITS           1
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_VCO_EN25G_FRC_SHIFT          14

/* vsr40_rx_pll :: control2 :: susm_rx_vco_en25G [13:13] */
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_VCO_EN25G_MASK               0x2000
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_VCO_EN25G_ALIGN              0
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_VCO_EN25G_BITS               1
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_VCO_EN25G_SHIFT              13

/* vsr40_rx_pll :: control2 :: susm_rx_en_VSR_frc [12:12] */
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_EN_VSR_FRC_MASK              0x1000
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_EN_VSR_FRC_ALIGN             0
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_EN_VSR_FRC_BITS              1
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_EN_VSR_FRC_SHIFT             12

/* vsr40_rx_pll :: control2 :: susm_rx_en_VSR [11:11] */
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_EN_VSR_MASK                  0x0800
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_EN_VSR_ALIGN                 0
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_EN_VSR_BITS                  1
#define VSR40_RX_PLL_CONTROL2_SUSM_RX_EN_VSR_SHIFT                 11

/* vsr40_rx_pll :: control2 :: Rx_test_rx1_sel [10:10] */
#define VSR40_RX_PLL_CONTROL2_RX_TEST_RX1_SEL_MASK                 0x0400
#define VSR40_RX_PLL_CONTROL2_RX_TEST_RX1_SEL_ALIGN                0
#define VSR40_RX_PLL_CONTROL2_RX_TEST_RX1_SEL_BITS                 1
#define VSR40_RX_PLL_CONTROL2_RX_TEST_RX1_SEL_SHIFT                10

/* vsr40_rx_pll :: control2 :: Rx_test_rx_clk [09:09] */
#define VSR40_RX_PLL_CONTROL2_RX_TEST_RX_CLK_MASK                  0x0200
#define VSR40_RX_PLL_CONTROL2_RX_TEST_RX_CLK_ALIGN                 0
#define VSR40_RX_PLL_CONTROL2_RX_TEST_RX_CLK_BITS                  1
#define VSR40_RX_PLL_CONTROL2_RX_TEST_RX_CLK_SHIFT                 9

/* vsr40_rx_pll :: control2 :: Rxpll_rescal_frc [08:08] */
#define VSR40_RX_PLL_CONTROL2_RXPLL_RESCAL_FRC_MASK                0x0100
#define VSR40_RX_PLL_CONTROL2_RXPLL_RESCAL_FRC_ALIGN               0
#define VSR40_RX_PLL_CONTROL2_RXPLL_RESCAL_FRC_BITS                1
#define VSR40_RX_PLL_CONTROL2_RXPLL_RESCAL_FRC_SHIFT               8

/* vsr40_rx_pll :: control2 :: Rxpll_rescal [07:05] */
#define VSR40_RX_PLL_CONTROL2_RXPLL_RESCAL_MASK                    0x00e0
#define VSR40_RX_PLL_CONTROL2_RXPLL_RESCAL_ALIGN                   0
#define VSR40_RX_PLL_CONTROL2_RXPLL_RESCAL_BITS                    3
#define VSR40_RX_PLL_CONTROL2_RXPLL_RESCAL_SHIFT                   5

/* vsr40_rx_pll :: control2 :: Rx_1Tbuf1_band_frc [04:04] */
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_BAND_FRC_MASK              0x0010
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_BAND_FRC_ALIGN             0
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_BAND_FRC_BITS              1
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_BAND_FRC_SHIFT             4

/* vsr40_rx_pll :: control2 :: Rx_1Tbuf1_band [03:02] */
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_BAND_MASK                  0x000c
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_BAND_ALIGN                 0
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_BAND_BITS                  2
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_BAND_SHIFT                 2

/* vsr40_rx_pll :: control2 :: Rx_1Tbuf1_cur [01:00] */
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_CUR_MASK                   0x0003
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_CUR_ALIGN                  0
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_CUR_BITS                   2
#define VSR40_RX_PLL_CONTROL2_RX_1TBUF1_CUR_SHIFT                  0


/****************************************************************************
 * vsr40_rx_pll :: control1
 ***************************************************************************/
/* vsr40_rx_pll :: control1 :: reserved_for_eco0 [15:15] */
#define VSR40_RX_PLL_CONTROL1_RESERVED_FOR_ECO0_MASK               0x8000
#define VSR40_RX_PLL_CONTROL1_RESERVED_FOR_ECO0_ALIGN              0
#define VSR40_RX_PLL_CONTROL1_RESERVED_FOR_ECO0_BITS               1
#define VSR40_RX_PLL_CONTROL1_RESERVED_FOR_ECO0_SHIFT              15

/* vsr40_rx_pll :: control1 :: Rx_capctrl_IQbuf [14:11] */
#define VSR40_RX_PLL_CONTROL1_RX_CAPCTRL_IQBUF_MASK                0x7800
#define VSR40_RX_PLL_CONTROL1_RX_CAPCTRL_IQBUF_ALIGN               0
#define VSR40_RX_PLL_CONTROL1_RX_CAPCTRL_IQBUF_BITS                4
#define VSR40_RX_PLL_CONTROL1_RX_CAPCTRL_IQBUF_SHIFT               11

/* vsr40_rx_pll :: control1 :: Rx_encurrent_IQbuf_frc [10:10] */
#define VSR40_RX_PLL_CONTROL1_RX_ENCURRENT_IQBUF_FRC_MASK          0x0400
#define VSR40_RX_PLL_CONTROL1_RX_ENCURRENT_IQBUF_FRC_ALIGN         0
#define VSR40_RX_PLL_CONTROL1_RX_ENCURRENT_IQBUF_FRC_BITS          1
#define VSR40_RX_PLL_CONTROL1_RX_ENCURRENT_IQBUF_FRC_SHIFT         10

/* vsr40_rx_pll :: control1 :: Rx_encurrent_IQbuf [09:09] */
#define VSR40_RX_PLL_CONTROL1_RX_ENCURRENT_IQBUF_MASK              0x0200
#define VSR40_RX_PLL_CONTROL1_RX_ENCURRENT_IQBUF_ALIGN             0
#define VSR40_RX_PLL_CONTROL1_RX_ENCURRENT_IQBUF_BITS              1
#define VSR40_RX_PLL_CONTROL1_RX_ENCURRENT_IQBUF_SHIFT             9

/* vsr40_rx_pll :: control1 :: Rx_1Tdiv_cur [08:06] */
#define VSR40_RX_PLL_CONTROL1_RX_1TDIV_CUR_MASK                    0x01c0
#define VSR40_RX_PLL_CONTROL1_RX_1TDIV_CUR_ALIGN                   0
#define VSR40_RX_PLL_CONTROL1_RX_1TDIV_CUR_BITS                    3
#define VSR40_RX_PLL_CONTROL1_RX_1TDIV_CUR_SHIFT                   6

/* vsr40_rx_pll :: control1 :: susm_rx_ref_div_frc [05:05] */
#define VSR40_RX_PLL_CONTROL1_SUSM_RX_REF_DIV_FRC_MASK             0x0020
#define VSR40_RX_PLL_CONTROL1_SUSM_RX_REF_DIV_FRC_ALIGN            0
#define VSR40_RX_PLL_CONTROL1_SUSM_RX_REF_DIV_FRC_BITS             1
#define VSR40_RX_PLL_CONTROL1_SUSM_RX_REF_DIV_FRC_SHIFT            5

/* vsr40_rx_pll :: control1 :: susm_rx_ref_div [04:03] */
#define VSR40_RX_PLL_CONTROL1_SUSM_RX_REF_DIV_MASK                 0x0018
#define VSR40_RX_PLL_CONTROL1_SUSM_RX_REF_DIV_ALIGN                0
#define VSR40_RX_PLL_CONTROL1_SUSM_RX_REF_DIV_BITS                 2
#define VSR40_RX_PLL_CONTROL1_SUSM_RX_REF_DIV_SHIFT                3

/* vsr40_rx_pll :: control1 :: Rx_2Tbufdiv_cur [02:00] */
#define VSR40_RX_PLL_CONTROL1_RX_2TBUFDIV_CUR_MASK                 0x0007
#define VSR40_RX_PLL_CONTROL1_RX_2TBUFDIV_CUR_ALIGN                0
#define VSR40_RX_PLL_CONTROL1_RX_2TBUFDIV_CUR_BITS                 3
#define VSR40_RX_PLL_CONTROL1_RX_2TBUFDIV_CUR_SHIFT                0


/****************************************************************************
 * vsr40_rx_pll :: control0
 ***************************************************************************/
/* vsr40_rx_pll :: control0 :: reserved_for_eco0 [15:14] */
#define VSR40_RX_PLL_CONTROL0_RESERVED_FOR_ECO0_MASK               0xc000
#define VSR40_RX_PLL_CONTROL0_RESERVED_FOR_ECO0_ALIGN              0
#define VSR40_RX_PLL_CONTROL0_RESERVED_FOR_ECO0_BITS               2
#define VSR40_RX_PLL_CONTROL0_RESERVED_FOR_ECO0_SHIFT              14

/* vsr40_rx_pll :: control0 :: Rx_tport_hicur [13:13] */
#define VSR40_RX_PLL_CONTROL0_RX_TPORT_HICUR_MASK                  0x2000
#define VSR40_RX_PLL_CONTROL0_RX_TPORT_HICUR_ALIGN                 0
#define VSR40_RX_PLL_CONTROL0_RX_TPORT_HICUR_BITS                  1
#define VSR40_RX_PLL_CONTROL0_RX_TPORT_HICUR_SHIFT                 13

/* vsr40_rx_pll :: control0 :: pll_rsrvd_12 [12:12] */
#define VSR40_RX_PLL_CONTROL0_PLL_RSRVD_12_MASK                    0x1000
#define VSR40_RX_PLL_CONTROL0_PLL_RSRVD_12_ALIGN                   0
#define VSR40_RX_PLL_CONTROL0_PLL_RSRVD_12_BITS                    1
#define VSR40_RX_PLL_CONTROL0_PLL_RSRVD_12_SHIFT                   12

/* vsr40_rx_pll :: control0 :: pll_rsrvd_11 [11:11] */
#define VSR40_RX_PLL_CONTROL0_PLL_RSRVD_11_MASK                    0x0800
#define VSR40_RX_PLL_CONTROL0_PLL_RSRVD_11_ALIGN                   0
#define VSR40_RX_PLL_CONTROL0_PLL_RSRVD_11_BITS                    1
#define VSR40_RX_PLL_CONTROL0_PLL_RSRVD_11_SHIFT                   11

/* vsr40_rx_pll :: control0 :: Rx_cp [10:09] */
#define VSR40_RX_PLL_CONTROL0_RX_CP_MASK                           0x0600
#define VSR40_RX_PLL_CONTROL0_RX_CP_ALIGN                          0
#define VSR40_RX_PLL_CONTROL0_RX_CP_BITS                           2
#define VSR40_RX_PLL_CONTROL0_RX_CP_SHIFT                          9

/* vsr40_rx_pll :: control0 :: Rx_rz [08:06] */
#define VSR40_RX_PLL_CONTROL0_RX_RZ_MASK                           0x01c0
#define VSR40_RX_PLL_CONTROL0_RX_RZ_ALIGN                          0
#define VSR40_RX_PLL_CONTROL0_RX_RZ_BITS                           3
#define VSR40_RX_PLL_CONTROL0_RX_RZ_SHIFT                          6

/* vsr40_rx_pll :: control0 :: Rx_qp_cur [05:02] */
#define VSR40_RX_PLL_CONTROL0_RX_QP_CUR_MASK                       0x003c
#define VSR40_RX_PLL_CONTROL0_RX_QP_CUR_ALIGN                      0
#define VSR40_RX_PLL_CONTROL0_RX_QP_CUR_BITS                       4
#define VSR40_RX_PLL_CONTROL0_RX_QP_CUR_SHIFT                      2

/* vsr40_rx_pll :: control0 :: Rx_qp_VDD_BGb [01:01] */
#define VSR40_RX_PLL_CONTROL0_RX_QP_VDD_BGB_MASK                   0x0002
#define VSR40_RX_PLL_CONTROL0_RX_QP_VDD_BGB_ALIGN                  0
#define VSR40_RX_PLL_CONTROL0_RX_QP_VDD_BGB_BITS                   1
#define VSR40_RX_PLL_CONTROL0_RX_QP_VDD_BGB_SHIFT                  1

/* vsr40_rx_pll :: control0 :: Rx_testport_sel_ana_n [00:00] */
#define VSR40_RX_PLL_CONTROL0_RX_TESTPORT_SEL_ANA_N_MASK           0x0001
#define VSR40_RX_PLL_CONTROL0_RX_TESTPORT_SEL_ANA_N_ALIGN          0
#define VSR40_RX_PLL_CONTROL0_RX_TESTPORT_SEL_ANA_N_BITS           1
#define VSR40_RX_PLL_CONTROL0_RX_TESTPORT_SEL_ANA_N_SHIFT          0


/****************************************************************************
 * vsr40_tx_ana25g_regs
 ***************************************************************************/
/****************************************************************************
 * vsr40_tx_ana25g :: control8
 ***************************************************************************/
/* vsr40_tx_ana25g :: control8 :: ana_rsrvd_103_91 [15:03] */
#define VSR40_TX_ANA25G_CONTROL8_ANA_RSRVD_103_91_MASK             0xfff8
#define VSR40_TX_ANA25G_CONTROL8_ANA_RSRVD_103_91_ALIGN            0
#define VSR40_TX_ANA25G_CONTROL8_ANA_RSRVD_103_91_BITS             13
#define VSR40_TX_ANA25G_CONTROL8_ANA_RSRVD_103_91_SHIFT            3

/* vsr40_tx_ana25g :: control8 :: sel_testclk8T [02:02] */
#define VSR40_TX_ANA25G_CONTROL8_SEL_TESTCLK8T_MASK                0x0004
#define VSR40_TX_ANA25G_CONTROL8_SEL_TESTCLK8T_ALIGN               0
#define VSR40_TX_ANA25G_CONTROL8_SEL_TESTCLK8T_BITS                1
#define VSR40_TX_ANA25G_CONTROL8_SEL_TESTCLK8T_SHIFT               2

/* vsr40_tx_ana25g :: control8 :: test_clk_rate_sel [01:00] */
#define VSR40_TX_ANA25G_CONTROL8_TEST_CLK_RATE_SEL_MASK            0x0003
#define VSR40_TX_ANA25G_CONTROL8_TEST_CLK_RATE_SEL_ALIGN           0
#define VSR40_TX_ANA25G_CONTROL8_TEST_CLK_RATE_SEL_BITS            2
#define VSR40_TX_ANA25G_CONTROL8_TEST_CLK_RATE_SEL_SHIFT           0


/****************************************************************************
 * vsr40_tx_ana25g :: control7
 ***************************************************************************/
/* vsr40_tx_ana25g :: control7 :: reserved_for_eco0 [15:15] */
#define VSR40_TX_ANA25G_CONTROL7_RESERVED_FOR_ECO0_MASK            0x8000
#define VSR40_TX_ANA25G_CONTROL7_RESERVED_FOR_ECO0_ALIGN           0
#define VSR40_TX_ANA25G_CONTROL7_RESERVED_FOR_ECO0_BITS            1
#define VSR40_TX_ANA25G_CONTROL7_RESERVED_FOR_ECO0_SHIFT           15

/* vsr40_tx_ana25g :: control7 :: test_clk_en [14:14] */
#define VSR40_TX_ANA25G_CONTROL7_TEST_CLK_EN_MASK                  0x4000
#define VSR40_TX_ANA25G_CONTROL7_TEST_CLK_EN_ALIGN                 0
#define VSR40_TX_ANA25G_CONTROL7_TEST_CLK_EN_BITS                  1
#define VSR40_TX_ANA25G_CONTROL7_TEST_CLK_EN_SHIFT                 14

/* vsr40_tx_ana25g :: control7 :: test_clk_ch_sel [13:13] */
#define VSR40_TX_ANA25G_CONTROL7_TEST_CLK_CH_SEL_MASK              0x2000
#define VSR40_TX_ANA25G_CONTROL7_TEST_CLK_CH_SEL_ALIGN             0
#define VSR40_TX_ANA25G_CONTROL7_TEST_CLK_CH_SEL_BITS              1
#define VSR40_TX_ANA25G_CONTROL7_TEST_CLK_CH_SEL_SHIFT             13

/* vsr40_tx_ana25g :: control7 :: ana_rsrvd_85 [12:12] */
#define VSR40_TX_ANA25G_CONTROL7_ANA_RSRVD_85_MASK                 0x1000
#define VSR40_TX_ANA25G_CONTROL7_ANA_RSRVD_85_ALIGN                0
#define VSR40_TX_ANA25G_CONTROL7_ANA_RSRVD_85_BITS                 1
#define VSR40_TX_ANA25G_CONTROL7_ANA_RSRVD_85_SHIFT                12

/* vsr40_tx_ana25g :: control7 :: tx_pon_frc [11:11] */
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_FRC_MASK                   0x0800
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_FRC_ALIGN                  0
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_FRC_BITS                   1
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_FRC_SHIFT                  11

/* vsr40_tx_ana25g :: control7 :: tx_pon [10:08] */
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_MASK                       0x0700
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_ALIGN                      0
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_BITS                       3
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_SHIFT                      8

/* vsr40_tx_ana25g :: control7 :: tx_pon_pdrv_frc [07:07] */
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_PDRV_FRC_MASK              0x0080
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_PDRV_FRC_ALIGN             0
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_PDRV_FRC_BITS              1
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_PDRV_FRC_SHIFT             7

/* vsr40_tx_ana25g :: control7 :: tx_pon_pdrv [06:04] */
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_PDRV_MASK                  0x0070
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_PDRV_ALIGN                 0
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_PDRV_BITS                  3
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_PDRV_SHIFT                 4

/* vsr40_tx_ana25g :: control7 :: tx_pon_drv_frc [03:03] */
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_DRV_FRC_MASK               0x0008
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_DRV_FRC_ALIGN              0
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_DRV_FRC_BITS               1
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_DRV_FRC_SHIFT              3

/* vsr40_tx_ana25g :: control7 :: tx_pon_drv [02:00] */
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_DRV_MASK                   0x0007
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_DRV_ALIGN                  0
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_DRV_BITS                   3
#define VSR40_TX_ANA25G_CONTROL7_TX_PON_DRV_SHIFT                  0


/****************************************************************************
 * vsr40_tx_ana25g :: control6
 ***************************************************************************/
/* vsr40_tx_ana25g :: control6 :: tx_pon_hs_frc [15:15] */
#define VSR40_TX_ANA25G_CONTROL6_TX_PON_HS_FRC_MASK                0x8000
#define VSR40_TX_ANA25G_CONTROL6_TX_PON_HS_FRC_ALIGN               0
#define VSR40_TX_ANA25G_CONTROL6_TX_PON_HS_FRC_BITS                1
#define VSR40_TX_ANA25G_CONTROL6_TX_PON_HS_FRC_SHIFT               15

/* vsr40_tx_ana25g :: control6 :: tx_pon_hs [14:12] */
#define VSR40_TX_ANA25G_CONTROL6_TX_PON_HS_MASK                    0x7000
#define VSR40_TX_ANA25G_CONTROL6_TX_PON_HS_ALIGN                   0
#define VSR40_TX_ANA25G_CONTROL6_TX_PON_HS_BITS                    3
#define VSR40_TX_ANA25G_CONTROL6_TX_PON_HS_SHIFT                   12

/* vsr40_tx_ana25g :: control6 :: reserved0 [11:03] */
#define VSR40_TX_ANA25G_CONTROL6_RESERVED0_MASK                    0x0ff8
#define VSR40_TX_ANA25G_CONTROL6_RESERVED0_ALIGN                   0
#define VSR40_TX_ANA25G_CONTROL6_RESERVED0_BITS                    9
#define VSR40_TX_ANA25G_CONTROL6_RESERVED0_SHIFT                   3

/* vsr40_tx_ana25g :: control6 :: ana_rsrvd_72 [02:02] */
#define VSR40_TX_ANA25G_CONTROL6_ANA_RSRVD_72_MASK                 0x0004
#define VSR40_TX_ANA25G_CONTROL6_ANA_RSRVD_72_ALIGN                0
#define VSR40_TX_ANA25G_CONTROL6_ANA_RSRVD_72_BITS                 1
#define VSR40_TX_ANA25G_CONTROL6_ANA_RSRVD_72_SHIFT                2

/* vsr40_tx_ana25g :: control6 :: ticksel [01:00] */
#define VSR40_TX_ANA25G_CONTROL6_TICKSEL_MASK                      0x0003
#define VSR40_TX_ANA25G_CONTROL6_TICKSEL_ALIGN                     0
#define VSR40_TX_ANA25G_CONTROL6_TICKSEL_BITS                      2
#define VSR40_TX_ANA25G_CONTROL6_TICKSEL_SHIFT                     0


/****************************************************************************
 * vsr40_tx_ana25g :: control5
 ***************************************************************************/
/* vsr40_tx_ana25g :: control5 :: reserved0 [15:15] */
#define VSR40_TX_ANA25G_CONTROL5_RESERVED0_MASK                    0x8000
#define VSR40_TX_ANA25G_CONTROL5_RESERVED0_ALIGN                   0
#define VSR40_TX_ANA25G_CONTROL5_RESERVED0_BITS                    1
#define VSR40_TX_ANA25G_CONTROL5_RESERVED0_SHIFT                   15

/* vsr40_tx_ana25g :: control5 :: pre_tap [14:11] */
#define VSR40_TX_ANA25G_CONTROL5_PRE_TAP_MASK                      0x7800
#define VSR40_TX_ANA25G_CONTROL5_PRE_TAP_ALIGN                     0
#define VSR40_TX_ANA25G_CONTROL5_PRE_TAP_BITS                      4
#define VSR40_TX_ANA25G_CONTROL5_PRE_TAP_SHIFT                     11

/* vsr40_tx_ana25g :: control5 :: post_tap [10:06] */
#define VSR40_TX_ANA25G_CONTROL5_POST_TAP_MASK                     0x07c0
#define VSR40_TX_ANA25G_CONTROL5_POST_TAP_ALIGN                    0
#define VSR40_TX_ANA25G_CONTROL5_POST_TAP_BITS                     5
#define VSR40_TX_ANA25G_CONTROL5_POST_TAP_SHIFT                    6

/* vsr40_tx_ana25g :: control5 :: main_tap [05:00] */
#define VSR40_TX_ANA25G_CONTROL5_MAIN_TAP_MASK                     0x003f
#define VSR40_TX_ANA25G_CONTROL5_MAIN_TAP_ALIGN                    0
#define VSR40_TX_ANA25G_CONTROL5_MAIN_TAP_BITS                     6
#define VSR40_TX_ANA25G_CONTROL5_MAIN_TAP_SHIFT                    0


/****************************************************************************
 * vsr40_tx_ana25g :: control4
 ***************************************************************************/
/* vsr40_tx_ana25g :: control4 :: reserved0 [15:15] */
#define VSR40_TX_ANA25G_CONTROL4_RESERVED0_MASK                    0x8000
#define VSR40_TX_ANA25G_CONTROL4_RESERVED0_ALIGN                   0
#define VSR40_TX_ANA25G_CONTROL4_RESERVED0_BITS                    1
#define VSR40_TX_ANA25G_CONTROL4_RESERVED0_SHIFT                   15

/* vsr40_tx_ana25g :: control4 :: susm_en_clk4T_5G_frc [14:14] */
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN_CLK4T_5G_FRC_MASK         0x4000
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN_CLK4T_5G_FRC_ALIGN        0
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN_CLK4T_5G_FRC_BITS         1
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN_CLK4T_5G_FRC_SHIFT        14

/* vsr40_tx_ana25g :: control4 :: susm_en_clk4T_5G [13:13] */
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN_CLK4T_5G_MASK             0x2000
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN_CLK4T_5G_ALIGN            0
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN_CLK4T_5G_BITS             1
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN_CLK4T_5G_SHIFT            13

/* vsr40_tx_ana25g :: control4 :: susm_en10G_frc [12:12] */
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN10G_FRC_MASK               0x1000
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN10G_FRC_ALIGN              0
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN10G_FRC_BITS               1
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN10G_FRC_SHIFT              12

/* vsr40_tx_ana25g :: control4 :: susm_en10G [11:11] */
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN10G_MASK                   0x0800
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN10G_ALIGN                  0
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN10G_BITS                   1
#define VSR40_TX_ANA25G_CONTROL4_SUSM_EN10G_SHIFT                  11

/* vsr40_tx_ana25g :: control4 :: tx_phadj_5g [10:09] */
#define VSR40_TX_ANA25G_CONTROL4_TX_PHADJ_5G_MASK                  0x0600
#define VSR40_TX_ANA25G_CONTROL4_TX_PHADJ_5G_ALIGN                 0
#define VSR40_TX_ANA25G_CONTROL4_TX_PHADJ_5G_BITS                  2
#define VSR40_TX_ANA25G_CONTROL4_TX_PHADJ_5G_SHIFT                 9

/* vsr40_tx_ana25g :: control4 :: i_ctrl_band_clk4T_frc [08:08] */
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK4T_FRC_MASK        0x0100
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK4T_FRC_ALIGN       0
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK4T_FRC_BITS        1
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK4T_FRC_SHIFT       8

/* vsr40_tx_ana25g :: control4 :: i_ctrl_band_clk4T [07:06] */
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK4T_MASK            0x00c0
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK4T_ALIGN           0
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK4T_BITS            2
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK4T_SHIFT           6

/* vsr40_tx_ana25g :: control4 :: i_ctrl_band_clk2T_frc [05:05] */
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK2T_FRC_MASK        0x0020
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK2T_FRC_ALIGN       0
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK2T_FRC_BITS        1
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK2T_FRC_SHIFT       5

/* vsr40_tx_ana25g :: control4 :: i_ctrl_band_clk2T [04:03] */
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK2T_MASK            0x0018
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK2T_ALIGN           0
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK2T_BITS            2
#define VSR40_TX_ANA25G_CONTROL4_I_CTRL_BAND_CLK2T_SHIFT           3

/* vsr40_tx_ana25g :: control4 :: en_hcur_4T [02:02] */
#define VSR40_TX_ANA25G_CONTROL4_EN_HCUR_4T_MASK                   0x0004
#define VSR40_TX_ANA25G_CONTROL4_EN_HCUR_4T_ALIGN                  0
#define VSR40_TX_ANA25G_CONTROL4_EN_HCUR_4T_BITS                   1
#define VSR40_TX_ANA25G_CONTROL4_EN_HCUR_4T_SHIFT                  2

/* vsr40_tx_ana25g :: control4 :: en_hcur_2T [01:01] */
#define VSR40_TX_ANA25G_CONTROL4_EN_HCUR_2T_MASK                   0x0002
#define VSR40_TX_ANA25G_CONTROL4_EN_HCUR_2T_ALIGN                  0
#define VSR40_TX_ANA25G_CONTROL4_EN_HCUR_2T_BITS                   1
#define VSR40_TX_ANA25G_CONTROL4_EN_HCUR_2T_SHIFT                  1

/* vsr40_tx_ana25g :: control4 :: test_drv [00:00] */
#define VSR40_TX_ANA25G_CONTROL4_TEST_DRV_MASK                     0x0001
#define VSR40_TX_ANA25G_CONTROL4_TEST_DRV_ALIGN                    0
#define VSR40_TX_ANA25G_CONTROL4_TEST_DRV_BITS                     1
#define VSR40_TX_ANA25G_CONTROL4_TEST_DRV_SHIFT                    0


/****************************************************************************
 * vsr40_tx_ana25g :: control3
 ***************************************************************************/
/* vsr40_tx_ana25g :: control3 :: reserved0 [15:08] */
#define VSR40_TX_ANA25G_CONTROL3_RESERVED0_MASK                    0xff00
#define VSR40_TX_ANA25G_CONTROL3_RESERVED0_ALIGN                   0
#define VSR40_TX_ANA25G_CONTROL3_RESERVED0_BITS                    8
#define VSR40_TX_ANA25G_CONTROL3_RESERVED0_SHIFT                   8

/* vsr40_tx_ana25g :: control3 :: tx_drv_opamp_bias_en [07:07] */
#define VSR40_TX_ANA25G_CONTROL3_TX_DRV_OPAMP_BIAS_EN_MASK         0x0080
#define VSR40_TX_ANA25G_CONTROL3_TX_DRV_OPAMP_BIAS_EN_ALIGN        0
#define VSR40_TX_ANA25G_CONTROL3_TX_DRV_OPAMP_BIAS_EN_BITS         1
#define VSR40_TX_ANA25G_CONTROL3_TX_DRV_OPAMP_BIAS_EN_SHIFT        7

/* vsr40_tx_ana25g :: control3 :: imux4to2 [06:04] */
#define VSR40_TX_ANA25G_CONTROL3_IMUX4TO2_MASK                     0x0070
#define VSR40_TX_ANA25G_CONTROL3_IMUX4TO2_ALIGN                    0
#define VSR40_TX_ANA25G_CONTROL3_IMUX4TO2_BITS                     3
#define VSR40_TX_ANA25G_CONTROL3_IMUX4TO2_SHIFT                    4

/* vsr40_tx_ana25g :: control3 :: i_clk4T [03:00] */
#define VSR40_TX_ANA25G_CONTROL3_I_CLK4T_MASK                      0x000f
#define VSR40_TX_ANA25G_CONTROL3_I_CLK4T_ALIGN                     0
#define VSR40_TX_ANA25G_CONTROL3_I_CLK4T_BITS                      4
#define VSR40_TX_ANA25G_CONTROL3_I_CLK4T_SHIFT                     0


/****************************************************************************
 * vsr40_tx_ana25g :: control2
 ***************************************************************************/
/* vsr40_tx_ana25g :: control2 :: I_clk_pibuf [15:12] */
#define VSR40_TX_ANA25G_CONTROL2_I_CLK_PIBUF_MASK                  0xf000
#define VSR40_TX_ANA25G_CONTROL2_I_CLK_PIBUF_ALIGN                 0
#define VSR40_TX_ANA25G_CONTROL2_I_CLK_PIBUF_BITS                  4
#define VSR40_TX_ANA25G_CONTROL2_I_CLK_PIBUF_SHIFT                 12

/* vsr40_tx_ana25g :: control2 :: I_clk_pi [11:08] */
#define VSR40_TX_ANA25G_CONTROL2_I_CLK_PI_MASK                     0x0f00
#define VSR40_TX_ANA25G_CONTROL2_I_CLK_PI_ALIGN                    0
#define VSR40_TX_ANA25G_CONTROL2_I_CLK_PI_BITS                     4
#define VSR40_TX_ANA25G_CONTROL2_I_CLK_PI_SHIFT                    8

/* vsr40_tx_ana25g :: control2 :: iclk_tune_2T [07:04] */
#define VSR40_TX_ANA25G_CONTROL2_ICLK_TUNE_2T_MASK                 0x00f0
#define VSR40_TX_ANA25G_CONTROL2_ICLK_TUNE_2T_ALIGN                0
#define VSR40_TX_ANA25G_CONTROL2_ICLK_TUNE_2T_BITS                 4
#define VSR40_TX_ANA25G_CONTROL2_ICLK_TUNE_2T_SHIFT                4

/* vsr40_tx_ana25g :: control2 :: imux2to1_pre [03:00] */
#define VSR40_TX_ANA25G_CONTROL2_IMUX2TO1_PRE_MASK                 0x000f
#define VSR40_TX_ANA25G_CONTROL2_IMUX2TO1_PRE_ALIGN                0
#define VSR40_TX_ANA25G_CONTROL2_IMUX2TO1_PRE_BITS                 4
#define VSR40_TX_ANA25G_CONTROL2_IMUX2TO1_PRE_SHIFT                0


/****************************************************************************
 * vsr40_tx_ana25g :: control1
 ***************************************************************************/
/* vsr40_tx_ana25g :: control1 :: imux2to1_post [15:12] */
#define VSR40_TX_ANA25G_CONTROL1_IMUX2TO1_POST_MASK                0xf000
#define VSR40_TX_ANA25G_CONTROL1_IMUX2TO1_POST_ALIGN               0
#define VSR40_TX_ANA25G_CONTROL1_IMUX2TO1_POST_BITS                4
#define VSR40_TX_ANA25G_CONTROL1_IMUX2TO1_POST_SHIFT               12

/* vsr40_tx_ana25g :: control1 :: imux2to1 [11:08] */
#define VSR40_TX_ANA25G_CONTROL1_IMUX2TO1_MASK                     0x0f00
#define VSR40_TX_ANA25G_CONTROL1_IMUX2TO1_ALIGN                    0
#define VSR40_TX_ANA25G_CONTROL1_IMUX2TO1_BITS                     4
#define VSR40_TX_ANA25G_CONTROL1_IMUX2TO1_SHIFT                    8

/* vsr40_tx_ana25g :: control1 :: ipredriver [07:04] */
#define VSR40_TX_ANA25G_CONTROL1_IPREDRIVER_MASK                   0x00f0
#define VSR40_TX_ANA25G_CONTROL1_IPREDRIVER_ALIGN                  0
#define VSR40_TX_ANA25G_CONTROL1_IPREDRIVER_BITS                   4
#define VSR40_TX_ANA25G_CONTROL1_IPREDRIVER_SHIFT                  4

/* vsr40_tx_ana25g :: control1 :: idriver [03:00] */
#define VSR40_TX_ANA25G_CONTROL1_IDRIVER_MASK                      0x000f
#define VSR40_TX_ANA25G_CONTROL1_IDRIVER_ALIGN                     0
#define VSR40_TX_ANA25G_CONTROL1_IDRIVER_BITS                      4
#define VSR40_TX_ANA25G_CONTROL1_IDRIVER_SHIFT                     0


/****************************************************************************
 * vsr40_tx_ana25g :: control0
 ***************************************************************************/
/* vsr40_tx_ana25g :: control0 :: reserved_for_eco0 [15:04] */
#define VSR40_TX_ANA25G_CONTROL0_RESERVED_FOR_ECO0_MASK            0xfff0
#define VSR40_TX_ANA25G_CONTROL0_RESERVED_FOR_ECO0_ALIGN           0
#define VSR40_TX_ANA25G_CONTROL0_RESERVED_FOR_ECO0_BITS            12
#define VSR40_TX_ANA25G_CONTROL0_RESERVED_FOR_ECO0_SHIFT           4

/* vsr40_tx_ana25g :: control0 :: tx_pwrdn [03:03] */
#define VSR40_TX_ANA25G_CONTROL0_TX_PWRDN_MASK                     0x0008
#define VSR40_TX_ANA25G_CONTROL0_TX_PWRDN_ALIGN                    0
#define VSR40_TX_ANA25G_CONTROL0_TX_PWRDN_BITS                     1
#define VSR40_TX_ANA25G_CONTROL0_TX_PWRDN_SHIFT                    3

/* vsr40_tx_ana25g :: control0 :: tx_clk_pwrdn [02:02] */
#define VSR40_TX_ANA25G_CONTROL0_TX_CLK_PWRDN_MASK                 0x0004
#define VSR40_TX_ANA25G_CONTROL0_TX_CLK_PWRDN_ALIGN                0
#define VSR40_TX_ANA25G_CONTROL0_TX_CLK_PWRDN_BITS                 1
#define VSR40_TX_ANA25G_CONTROL0_TX_CLK_PWRDN_SHIFT                2

/* vsr40_tx_ana25g :: control0 :: ana_rsrvd_for_eco_1_0 [01:00] */
#define VSR40_TX_ANA25G_CONTROL0_ANA_RSRVD_FOR_ECO_1_0_MASK        0x0003
#define VSR40_TX_ANA25G_CONTROL0_ANA_RSRVD_FOR_ECO_1_0_ALIGN       0
#define VSR40_TX_ANA25G_CONTROL0_ANA_RSRVD_FOR_ECO_1_0_BITS        2
#define VSR40_TX_ANA25G_CONTROL0_ANA_RSRVD_FOR_ECO_1_0_SHIFT       0


/****************************************************************************
 * vsr40_tx_dig_regs_regs
 ***************************************************************************/
/****************************************************************************
 * vsr40_tx_dig_regs :: reset_control
 ***************************************************************************/
/* vsr40_tx_dig_regs :: reset_control :: rescal_reset_ovrd [15:15] */
#define VSR40_TX_DIG_REGS_RESET_CONTROL_RESCAL_RESET_OVRD_MASK     0x8000
#define VSR40_TX_DIG_REGS_RESET_CONTROL_RESCAL_RESET_OVRD_ALIGN    0
#define VSR40_TX_DIG_REGS_RESET_CONTROL_RESCAL_RESET_OVRD_BITS     1
#define VSR40_TX_DIG_REGS_RESET_CONTROL_RESCAL_RESET_OVRD_SHIFT    15

/* vsr40_tx_dig_regs :: reset_control :: pll_pwrdn_st_ovrd [14:14] */
#define VSR40_TX_DIG_REGS_RESET_CONTROL_PLL_PWRDN_ST_OVRD_MASK     0x4000
#define VSR40_TX_DIG_REGS_RESET_CONTROL_PLL_PWRDN_ST_OVRD_ALIGN    0
#define VSR40_TX_DIG_REGS_RESET_CONTROL_PLL_PWRDN_ST_OVRD_BITS     1
#define VSR40_TX_DIG_REGS_RESET_CONTROL_PLL_PWRDN_ST_OVRD_SHIFT    14

/* vsr40_tx_dig_regs :: reset_control :: reserved_for_eco0 [13:03] */
#define VSR40_TX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO0_MASK     0x3ff8
#define VSR40_TX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO0_ALIGN    0
#define VSR40_TX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO0_BITS     11
#define VSR40_TX_DIG_REGS_RESET_CONTROL_RESERVED_FOR_ECO0_SHIFT    3

/* vsr40_tx_dig_regs :: reset_control :: tca_rstb [02:02] */
#define VSR40_TX_DIG_REGS_RESET_CONTROL_TCA_RSTB_MASK              0x0004
#define VSR40_TX_DIG_REGS_RESET_CONTROL_TCA_RSTB_ALIGN             0
#define VSR40_TX_DIG_REGS_RESET_CONTROL_TCA_RSTB_BITS              1
#define VSR40_TX_DIG_REGS_RESET_CONTROL_TCA_RSTB_SHIFT             2

/* vsr40_tx_dig_regs :: reset_control :: cal_rstb [01:01] */
#define VSR40_TX_DIG_REGS_RESET_CONTROL_CAL_RSTB_MASK              0x0002
#define VSR40_TX_DIG_REGS_RESET_CONTROL_CAL_RSTB_ALIGN             0
#define VSR40_TX_DIG_REGS_RESET_CONTROL_CAL_RSTB_BITS              1
#define VSR40_TX_DIG_REGS_RESET_CONTROL_CAL_RSTB_SHIFT             1

/* vsr40_tx_dig_regs :: reset_control :: lkdt_rstb [00:00] */
#define VSR40_TX_DIG_REGS_RESET_CONTROL_LKDT_RSTB_MASK             0x0001
#define VSR40_TX_DIG_REGS_RESET_CONTROL_LKDT_RSTB_ALIGN            0
#define VSR40_TX_DIG_REGS_RESET_CONTROL_LKDT_RSTB_BITS             1
#define VSR40_TX_DIG_REGS_RESET_CONTROL_LKDT_RSTB_SHIFT            0


/****************************************************************************
 * vsr40_tx_dig_regs :: clk_control
 ***************************************************************************/
/* vsr40_tx_dig_regs :: clk_control :: reserved_for_eco0 [15:00] */
#define VSR40_TX_DIG_REGS_CLK_CONTROL_RESERVED_FOR_ECO0_MASK       0xffff
#define VSR40_TX_DIG_REGS_CLK_CONTROL_RESERVED_FOR_ECO0_ALIGN      0
#define VSR40_TX_DIG_REGS_CLK_CONTROL_RESERVED_FOR_ECO0_BITS       16
#define VSR40_TX_DIG_REGS_CLK_CONTROL_RESERVED_FOR_ECO0_SHIFT      0


/****************************************************************************
 * vsr40_tx_dig_regs :: vcocal_control
 ***************************************************************************/
/* vsr40_tx_dig_regs :: vcocal_control :: reserved_for_eco0 [15:03] */
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_RESERVED_FOR_ECO0_MASK    0xfff8
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_RESERVED_FOR_ECO0_ALIGN   0
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_RESERVED_FOR_ECO0_BITS    13
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_RESERVED_FOR_ECO0_SHIFT   3

/* vsr40_tx_dig_regs :: vcocal_control :: cal_th [02:01] */
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_CAL_TH_MASK               0x0006
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_CAL_TH_ALIGN              0
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_CAL_TH_BITS               2
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_CAL_TH_SHIFT              1

/* vsr40_tx_dig_regs :: vcocal_control :: cap_delay [00:00] */
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_CAP_DELAY_MASK            0x0001
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_CAP_DELAY_ALIGN           0
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_CAP_DELAY_BITS            1
#define VSR40_TX_DIG_REGS_VCOCAL_CONTROL_CAP_DELAY_SHIFT           0


/****************************************************************************
 * vsr40_tx_dig_regs :: lockdet_control1
 ***************************************************************************/
/* vsr40_tx_dig_regs :: lockdet_control1 :: lkdt_assrt_cmpr [15:00] */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL1_LKDT_ASSRT_CMPR_MASK    0xffff
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL1_LKDT_ASSRT_CMPR_ALIGN   0
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL1_LKDT_ASSRT_CMPR_BITS    16
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL1_LKDT_ASSRT_CMPR_SHIFT   0


/****************************************************************************
 * vsr40_tx_dig_regs :: lockdet_control2
 ***************************************************************************/
/* vsr40_tx_dig_regs :: lockdet_control2 :: lkdt_deassrt_cmpr [15:00] */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL2_LKDT_DEASSRT_CMPR_MASK  0xffff
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL2_LKDT_DEASSRT_CMPR_ALIGN 0
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL2_LKDT_DEASSRT_CMPR_BITS  16
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL2_LKDT_DEASSRT_CMPR_SHIFT 0


/****************************************************************************
 * vsr40_tx_dig_regs :: lockdet_control3
 ***************************************************************************/
/* vsr40_tx_dig_regs :: lockdet_control3 :: lkdt_byp [15:15] */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_LKDT_BYP_MASK           0x8000
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_LKDT_BYP_ALIGN          0
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_LKDT_BYP_BITS           1
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_LKDT_BYP_SHIFT          15

/* vsr40_tx_dig_regs :: lockdet_control3 :: lkdt_cnt [14:12] */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_LKDT_CNT_MASK           0x7000
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_LKDT_CNT_ALIGN          0
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_LKDT_CNT_BITS           3
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_LKDT_CNT_SHIFT          12

/* vsr40_tx_dig_regs :: lockdet_control3 :: ppm_offset_deassrt [11:06] */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_DEASSRT_MASK 0x0fc0
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_DEASSRT_ALIGN 0
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_DEASSRT_BITS 6
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_DEASSRT_SHIFT 6

/* vsr40_tx_dig_regs :: lockdet_control3 :: ppm_offset_assrt [05:00] */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_ASSRT_MASK   0x003f
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_ASSRT_ALIGN  0
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_ASSRT_BITS   6
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL3_PPM_OFFSET_ASSRT_SHIFT  0


/****************************************************************************
 * vsr40_tx_dig_regs :: lockdet_control4
 ***************************************************************************/
/* vsr40_tx_dig_regs :: lockdet_control4 :: reserved_for_eco0 [15:03] */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL4_RESERVED_FOR_ECO0_MASK  0xfff8
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL4_RESERVED_FOR_ECO0_ALIGN 0
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL4_RESERVED_FOR_ECO0_BITS  13
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL4_RESERVED_FOR_ECO0_SHIFT 3

/* vsr40_tx_dig_regs :: lockdet_control4 :: dec_pre_lkdt_cnt [02:00] */
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL4_DEC_PRE_LKDT_CNT_MASK   0x0007
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL4_DEC_PRE_LKDT_CNT_ALIGN  0
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL4_DEC_PRE_LKDT_CNT_BITS   3
#define VSR40_TX_DIG_REGS_LOCKDET_CONTROL4_DEC_PRE_LKDT_CNT_SHIFT  0


/****************************************************************************
 * vsr40_tx_dig_regs :: reserve_control
 ***************************************************************************/
/* vsr40_tx_dig_regs :: reserve_control :: dig_rsvd_1 [15:00] */
#define VSR40_TX_DIG_REGS_RESERVE_CONTROL_DIG_RSVD_1_MASK          0xffff
#define VSR40_TX_DIG_REGS_RESERVE_CONTROL_DIG_RSVD_1_ALIGN         0
#define VSR40_TX_DIG_REGS_RESERVE_CONTROL_DIG_RSVD_1_BITS          16
#define VSR40_TX_DIG_REGS_RESERVE_CONTROL_DIG_RSVD_1_SHIFT         0


/****************************************************************************
 * vsr40_tx_dig_regs :: status
 ***************************************************************************/
/* vsr40_tx_dig_regs :: status :: reserved_for_eco0 [15:09] */
#define VSR40_TX_DIG_REGS_STATUS_RESERVED_FOR_ECO0_MASK            0xfe00
#define VSR40_TX_DIG_REGS_STATUS_RESERVED_FOR_ECO0_ALIGN           0
#define VSR40_TX_DIG_REGS_STATUS_RESERVED_FOR_ECO0_BITS            7
#define VSR40_TX_DIG_REGS_STATUS_RESERVED_FOR_ECO0_SHIFT           9

/* vsr40_tx_dig_regs :: status :: vcxo_lockerrb [08:08] */
#define VSR40_TX_DIG_REGS_STATUS_VCXO_LOCKERRB_MASK                0x0100
#define VSR40_TX_DIG_REGS_STATUS_VCXO_LOCKERRB_ALIGN               0
#define VSR40_TX_DIG_REGS_STATUS_VCXO_LOCKERRB_BITS                1
#define VSR40_TX_DIG_REGS_STATUS_VCXO_LOCKERRB_SHIFT               8

/* vsr40_tx_dig_regs :: status :: vcxo_lockerrb_ll [07:07] */
#define VSR40_TX_DIG_REGS_STATUS_VCXO_LOCKERRB_LL_MASK             0x0080
#define VSR40_TX_DIG_REGS_STATUS_VCXO_LOCKERRB_LL_ALIGN            0
#define VSR40_TX_DIG_REGS_STATUS_VCXO_LOCKERRB_LL_BITS             1
#define VSR40_TX_DIG_REGS_STATUS_VCXO_LOCKERRB_LL_SHIFT            7

/* vsr40_tx_dig_regs :: status :: cal_state [06:04] */
#define VSR40_TX_DIG_REGS_STATUS_CAL_STATE_MASK                    0x0070
#define VSR40_TX_DIG_REGS_STATUS_CAL_STATE_ALIGN                   0
#define VSR40_TX_DIG_REGS_STATUS_CAL_STATE_BITS                    3
#define VSR40_TX_DIG_REGS_STATUS_CAL_STATE_SHIFT                   4

/* vsr40_tx_dig_regs :: status :: cal_valid [03:03] */
#define VSR40_TX_DIG_REGS_STATUS_CAL_VALID_MASK                    0x0008
#define VSR40_TX_DIG_REGS_STATUS_CAL_VALID_ALIGN                   0
#define VSR40_TX_DIG_REGS_STATUS_CAL_VALID_BITS                    1
#define VSR40_TX_DIG_REGS_STATUS_CAL_VALID_SHIFT                   3

/* vsr40_tx_dig_regs :: status :: cal_valid_ll [02:02] */
#define VSR40_TX_DIG_REGS_STATUS_CAL_VALID_LL_MASK                 0x0004
#define VSR40_TX_DIG_REGS_STATUS_CAL_VALID_LL_ALIGN                0
#define VSR40_TX_DIG_REGS_STATUS_CAL_VALID_LL_BITS                 1
#define VSR40_TX_DIG_REGS_STATUS_CAL_VALID_LL_SHIFT                2

/* vsr40_tx_dig_regs :: status :: lockerrb [01:01] */
#define VSR40_TX_DIG_REGS_STATUS_LOCKERRB_MASK                     0x0002
#define VSR40_TX_DIG_REGS_STATUS_LOCKERRB_ALIGN                    0
#define VSR40_TX_DIG_REGS_STATUS_LOCKERRB_BITS                     1
#define VSR40_TX_DIG_REGS_STATUS_LOCKERRB_SHIFT                    1

/* vsr40_tx_dig_regs :: status :: lockerrb_ll [00:00] */
#define VSR40_TX_DIG_REGS_STATUS_LOCKERRB_LL_MASK                  0x0001
#define VSR40_TX_DIG_REGS_STATUS_LOCKERRB_LL_ALIGN                 0
#define VSR40_TX_DIG_REGS_STATUS_LOCKERRB_LL_BITS                  1
#define VSR40_TX_DIG_REGS_STATUS_LOCKERRB_LL_SHIFT                 0


/****************************************************************************
 * vsr40_tx_dig_regs :: tx_misr
 ***************************************************************************/
/* vsr40_tx_dig_regs :: tx_misr :: tx_intr_rsvd [15:08] */
#define VSR40_TX_DIG_REGS_TX_MISR_TX_INTR_RSVD_MASK                0xff00
#define VSR40_TX_DIG_REGS_TX_MISR_TX_INTR_RSVD_ALIGN               0
#define VSR40_TX_DIG_REGS_TX_MISR_TX_INTR_RSVD_BITS                8
#define VSR40_TX_DIG_REGS_TX_MISR_TX_INTR_RSVD_SHIFT               8

/* vsr40_tx_dig_regs :: tx_misr :: tpc_iir_sat_ch3 [07:07] */
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH3_MASK             0x0080
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH3_ALIGN            0
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH3_BITS             1
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH3_SHIFT            7

/* vsr40_tx_dig_regs :: tx_misr :: tpc_iir_sat_ch2 [06:06] */
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH2_MASK             0x0040
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH2_ALIGN            0
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH2_BITS             1
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH2_SHIFT            6

/* vsr40_tx_dig_regs :: tx_misr :: tpc_iir_sat_ch1 [05:05] */
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH1_MASK             0x0020
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH1_ALIGN            0
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH1_BITS             1
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH1_SHIFT            5

/* vsr40_tx_dig_regs :: tx_misr :: tpc_iir_sat_ch0 [04:04] */
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH0_MASK             0x0010
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH0_ALIGN            0
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH0_BITS             1
#define VSR40_TX_DIG_REGS_TX_MISR_TPC_IIR_SAT_CH0_SHIFT            4

/* vsr40_tx_dig_regs :: tx_misr :: tx_vco_cal_lost [03:03] */
#define VSR40_TX_DIG_REGS_TX_MISR_TX_VCO_CAL_LOST_MASK             0x0008
#define VSR40_TX_DIG_REGS_TX_MISR_TX_VCO_CAL_LOST_ALIGN            0
#define VSR40_TX_DIG_REGS_TX_MISR_TX_VCO_CAL_LOST_BITS             1
#define VSR40_TX_DIG_REGS_TX_MISR_TX_VCO_CAL_LOST_SHIFT            3

/* vsr40_tx_dig_regs :: tx_misr :: tx_vco_cal_done [02:02] */
#define VSR40_TX_DIG_REGS_TX_MISR_TX_VCO_CAL_DONE_MASK             0x0004
#define VSR40_TX_DIG_REGS_TX_MISR_TX_VCO_CAL_DONE_ALIGN            0
#define VSR40_TX_DIG_REGS_TX_MISR_TX_VCO_CAL_DONE_BITS             1
#define VSR40_TX_DIG_REGS_TX_MISR_TX_VCO_CAL_DONE_SHIFT            2

/* vsr40_tx_dig_regs :: tx_misr :: tx_pll_lost_lock [01:01] */
#define VSR40_TX_DIG_REGS_TX_MISR_TX_PLL_LOST_LOCK_MASK            0x0002
#define VSR40_TX_DIG_REGS_TX_MISR_TX_PLL_LOST_LOCK_ALIGN           0
#define VSR40_TX_DIG_REGS_TX_MISR_TX_PLL_LOST_LOCK_BITS            1
#define VSR40_TX_DIG_REGS_TX_MISR_TX_PLL_LOST_LOCK_SHIFT           1

/* vsr40_tx_dig_regs :: tx_misr :: tx_pll_lock [00:00] */
#define VSR40_TX_DIG_REGS_TX_MISR_TX_PLL_LOCK_MASK                 0x0001
#define VSR40_TX_DIG_REGS_TX_MISR_TX_PLL_LOCK_ALIGN                0
#define VSR40_TX_DIG_REGS_TX_MISR_TX_PLL_LOCK_BITS                 1
#define VSR40_TX_DIG_REGS_TX_MISR_TX_PLL_LOCK_SHIFT                0


/****************************************************************************
 * vsr40_tx_dig_regs :: tx_mimr
 ***************************************************************************/
/* vsr40_tx_dig_regs :: tx_mimr :: mask_tx_intr_rsvd [15:08] */
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_INTR_RSVD_MASK           0xff00
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_INTR_RSVD_ALIGN          0
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_INTR_RSVD_BITS           8
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_INTR_RSVD_SHIFT          8

/* vsr40_tx_dig_regs :: tx_mimr :: mask_tpc_iir_sat_ch3 [07:07] */
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH3_MASK        0x0080
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH3_ALIGN       0
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH3_BITS        1
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH3_SHIFT       7

/* vsr40_tx_dig_regs :: tx_mimr :: mask_tpc_iir_sat_ch2 [06:06] */
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH2_MASK        0x0040
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH2_ALIGN       0
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH2_BITS        1
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH2_SHIFT       6

/* vsr40_tx_dig_regs :: tx_mimr :: mask_tpc_iir_sat_ch1 [05:05] */
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH1_MASK        0x0020
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH1_ALIGN       0
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH1_BITS        1
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH1_SHIFT       5

/* vsr40_tx_dig_regs :: tx_mimr :: mask_tpc_iir_sat_ch0 [04:04] */
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH0_MASK        0x0010
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH0_ALIGN       0
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH0_BITS        1
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TPC_IIR_SAT_CH0_SHIFT       4

/* vsr40_tx_dig_regs :: tx_mimr :: mask_tx_vco_cal_lost [03:03] */
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_VCO_CAL_LOST_MASK        0x0008
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_VCO_CAL_LOST_ALIGN       0
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_VCO_CAL_LOST_BITS        1
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_VCO_CAL_LOST_SHIFT       3

/* vsr40_tx_dig_regs :: tx_mimr :: mask_tx_vco_cal_done [02:02] */
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_VCO_CAL_DONE_MASK        0x0004
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_VCO_CAL_DONE_ALIGN       0
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_VCO_CAL_DONE_BITS        1
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_VCO_CAL_DONE_SHIFT       2

/* vsr40_tx_dig_regs :: tx_mimr :: mask_tx_pll_lost_lock [01:01] */
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_PLL_LOST_LOCK_MASK       0x0002
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_PLL_LOST_LOCK_ALIGN      0
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_PLL_LOST_LOCK_BITS       1
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_PLL_LOST_LOCK_SHIFT      1

/* vsr40_tx_dig_regs :: tx_mimr :: mask_tx_pll_lock [00:00] */
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_PLL_LOCK_MASK            0x0001
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_PLL_LOCK_ALIGN           0
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_PLL_LOCK_BITS            1
#define VSR40_TX_DIG_REGS_TX_MIMR_MASK_TX_PLL_LOCK_SHIFT           0


/****************************************************************************
 * vsr40_tx_dig_regs :: tx_p_misr
 ***************************************************************************/
/* vsr40_tx_dig_regs :: tx_p_misr :: p_tx_intr_rsvd [15:08] */
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_INTR_RSVD_MASK            0xff00
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_INTR_RSVD_ALIGN           0
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_INTR_RSVD_BITS            8
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_INTR_RSVD_SHIFT           8

/* vsr40_tx_dig_regs :: tx_p_misr :: p_tpc_iir_sat_ch3 [07:07] */
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH3_MASK         0x0080
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH3_ALIGN        0
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH3_BITS         1
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH3_SHIFT        7

/* vsr40_tx_dig_regs :: tx_p_misr :: p_tpc_iir_sat_ch2 [06:06] */
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH2_MASK         0x0040
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH2_ALIGN        0
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH2_BITS         1
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH2_SHIFT        6

/* vsr40_tx_dig_regs :: tx_p_misr :: p_tpc_iir_sat_ch1 [05:05] */
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH1_MASK         0x0020
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH1_ALIGN        0
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH1_BITS         1
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH1_SHIFT        5

/* vsr40_tx_dig_regs :: tx_p_misr :: p_tpc_iir_sat_ch0 [04:04] */
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH0_MASK         0x0010
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH0_ALIGN        0
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH0_BITS         1
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TPC_IIR_SAT_CH0_SHIFT        4

/* vsr40_tx_dig_regs :: tx_p_misr :: p_tx_vco_cal_lost [03:03] */
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_VCO_CAL_LOST_MASK         0x0008
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_VCO_CAL_LOST_ALIGN        0
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_VCO_CAL_LOST_BITS         1
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_VCO_CAL_LOST_SHIFT        3

/* vsr40_tx_dig_regs :: tx_p_misr :: p_tx_vco_cal_done [02:02] */
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_VCO_CAL_DONE_MASK         0x0004
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_VCO_CAL_DONE_ALIGN        0
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_VCO_CAL_DONE_BITS         1
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_VCO_CAL_DONE_SHIFT        2

/* vsr40_tx_dig_regs :: tx_p_misr :: p_tx_pll_lost_lock [01:01] */
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_PLL_LOST_LOCK_MASK        0x0002
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_PLL_LOST_LOCK_ALIGN       0
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_PLL_LOST_LOCK_BITS        1
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_PLL_LOST_LOCK_SHIFT       1

/* vsr40_tx_dig_regs :: tx_p_misr :: p_tx_pll_lock [00:00] */
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_PLL_LOCK_MASK             0x0001
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_PLL_LOCK_ALIGN            0
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_PLL_LOCK_BITS             1
#define VSR40_TX_DIG_REGS_TX_P_MISR_P_TX_PLL_LOCK_SHIFT            0


/****************************************************************************
 * vsr40_tx_dig_regs :: tca_ctrl
 ***************************************************************************/
/* vsr40_tx_dig_regs :: tca_ctrl :: reserved0 [15:08] */
#define VSR40_TX_DIG_REGS_TCA_CTRL_RESERVED0_MASK                  0xff00
#define VSR40_TX_DIG_REGS_TCA_CTRL_RESERVED0_ALIGN                 0
#define VSR40_TX_DIG_REGS_TCA_CTRL_RESERVED0_BITS                  8
#define VSR40_TX_DIG_REGS_TCA_CTRL_RESERVED0_SHIFT                 8

/* vsr40_tx_dig_regs :: tca_ctrl :: tca_k_frc [07:07] */
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_K_FRC_MASK                  0x0080
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_K_FRC_ALIGN                 0
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_K_FRC_BITS                  1
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_K_FRC_SHIFT                 7

/* vsr40_tx_dig_regs :: tca_ctrl :: tca_k_frc_val [06:05] */
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_K_FRC_VAL_MASK              0x0060
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_K_FRC_VAL_ALIGN             0
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_K_FRC_VAL_BITS              2
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_K_FRC_VAL_SHIFT             5

/* vsr40_tx_dig_regs :: tca_ctrl :: tca_add_pdoffst [04:04] */
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_ADD_PDOFFST_MASK            0x0010
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_ADD_PDOFFST_ALIGN           0
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_ADD_PDOFFST_BITS            1
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_ADD_PDOFFST_SHIFT           4

/* vsr40_tx_dig_regs :: tca_ctrl :: tca_timer_sel [03:02] */
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_TIMER_SEL_MASK              0x000c
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_TIMER_SEL_ALIGN             0
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_TIMER_SEL_BITS              2
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_TIMER_SEL_SHIFT             2

/* vsr40_tx_dig_regs :: tca_ctrl :: tca_pdout_inv [01:01] */
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_PDOUT_INV_MASK              0x0002
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_PDOUT_INV_ALIGN             0
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_PDOUT_INV_BITS              1
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_PDOUT_INV_SHIFT             1

/* vsr40_tx_dig_regs :: tca_ctrl :: tca_phs_step_size_sel [00:00] */
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_PHS_STEP_SIZE_SEL_MASK      0x0001
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_PHS_STEP_SIZE_SEL_ALIGN     0
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_PHS_STEP_SIZE_SEL_BITS      1
#define VSR40_TX_DIG_REGS_TCA_CTRL_TCA_PHS_STEP_SIZE_SEL_SHIFT     0


/****************************************************************************
 * vsr40_tx_dig_regs :: tca_status
 ***************************************************************************/
/* vsr40_tx_dig_regs :: tca_status :: reserved0 [15:03] */
#define VSR40_TX_DIG_REGS_TCA_STATUS_RESERVED0_MASK                0xfff8
#define VSR40_TX_DIG_REGS_TCA_STATUS_RESERVED0_ALIGN               0
#define VSR40_TX_DIG_REGS_TCA_STATUS_RESERVED0_BITS                13
#define VSR40_TX_DIG_REGS_TCA_STATUS_RESERVED0_SHIFT               3

/* vsr40_tx_dig_regs :: tca_status :: vsr40_tx_algnmnt_done_ch3 [02:02] */
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH3_MASK 0x0004
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH3_ALIGN 0
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH3_BITS 1
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH3_SHIFT 2

/* vsr40_tx_dig_regs :: tca_status :: vsr40_tx_algnmnt_done_ch2 [01:01] */
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH2_MASK 0x0002
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH2_ALIGN 0
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH2_BITS 1
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH2_SHIFT 1

/* vsr40_tx_dig_regs :: tca_status :: vsr40_tx_algnmnt_done_ch1 [00:00] */
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH1_MASK 0x0001
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH1_ALIGN 0
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH1_BITS 1
#define VSR40_TX_DIG_REGS_TCA_STATUS_VSR40_TX_ALGNMNT_DONE_CH1_SHIFT 0


/****************************************************************************
 * vsr40_tx_pll_regs
 ***************************************************************************/
/****************************************************************************
 * vsr40_tx_pll :: control7
 ***************************************************************************/
/* vsr40_tx_pll :: control7 :: tx_pll_rsvd_103_90 [15:02] */
#define VSR40_TX_PLL_CONTROL7_TX_PLL_RSVD_103_90_MASK              0xfffc
#define VSR40_TX_PLL_CONTROL7_TX_PLL_RSVD_103_90_ALIGN             0
#define VSR40_TX_PLL_CONTROL7_TX_PLL_RSVD_103_90_BITS              14
#define VSR40_TX_PLL_CONTROL7_TX_PLL_RSVD_103_90_SHIFT             2

/* vsr40_tx_pll :: control7 :: Tx_tport_cur [01:00] */
#define VSR40_TX_PLL_CONTROL7_TX_TPORT_CUR_MASK                    0x0003
#define VSR40_TX_PLL_CONTROL7_TX_TPORT_CUR_ALIGN                   0
#define VSR40_TX_PLL_CONTROL7_TX_TPORT_CUR_BITS                    2
#define VSR40_TX_PLL_CONTROL7_TX_TPORT_CUR_SHIFT                   0


/****************************************************************************
 * vsr40_tx_pll :: control6
 ***************************************************************************/
/* vsr40_tx_pll :: control6 :: reserved0 [15:08] */
#define VSR40_TX_PLL_CONTROL6_RESERVED0_MASK                       0xff00
#define VSR40_TX_PLL_CONTROL6_RESERVED0_ALIGN                      0
#define VSR40_TX_PLL_CONTROL6_RESERVED0_BITS                       8
#define VSR40_TX_PLL_CONTROL6_RESERVED0_SHIFT                      8

/* vsr40_tx_pll :: control6 :: Tx_2T_IQbuf_ptat [07:04] */
#define VSR40_TX_PLL_CONTROL6_TX_2T_IQBUF_PTAT_MASK                0x00f0
#define VSR40_TX_PLL_CONTROL6_TX_2T_IQBUF_PTAT_ALIGN               0
#define VSR40_TX_PLL_CONTROL6_TX_2T_IQBUF_PTAT_BITS                4
#define VSR40_TX_PLL_CONTROL6_TX_2T_IQBUF_PTAT_SHIFT               4

/* vsr40_tx_pll :: control6 :: Tx_2T_IQbuf_bgcr [03:00] */
#define VSR40_TX_PLL_CONTROL6_TX_2T_IQBUF_BGCR_MASK                0x000f
#define VSR40_TX_PLL_CONTROL6_TX_2T_IQBUF_BGCR_ALIGN               0
#define VSR40_TX_PLL_CONTROL6_TX_2T_IQBUF_BGCR_BITS                4
#define VSR40_TX_PLL_CONTROL6_TX_2T_IQBUF_BGCR_SHIFT               0


/****************************************************************************
 * vsr40_tx_pll :: control5
 ***************************************************************************/
/* vsr40_tx_pll :: control5 :: reserved_for_eco0 [15:13] */
#define VSR40_TX_PLL_CONTROL5_RESERVED_FOR_ECO0_MASK               0xe000
#define VSR40_TX_PLL_CONTROL5_RESERVED_FOR_ECO0_ALIGN              0
#define VSR40_TX_PLL_CONTROL5_RESERVED_FOR_ECO0_BITS               3
#define VSR40_TX_PLL_CONTROL5_RESERVED_FOR_ECO0_SHIFT              13

/* vsr40_tx_pll :: control5 :: Tx_cupll_vcxosel [12:11] */
#define VSR40_TX_PLL_CONTROL5_TX_CUPLL_VCXOSEL_MASK                0x1800
#define VSR40_TX_PLL_CONTROL5_TX_CUPLL_VCXOSEL_ALIGN               0
#define VSR40_TX_PLL_CONTROL5_TX_CUPLL_VCXOSEL_BITS                2
#define VSR40_TX_PLL_CONTROL5_TX_CUPLL_VCXOSEL_SHIFT               11

/* vsr40_tx_pll :: control5 :: Tx_pll_test_ref_sel [10:10] */
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_REF_SEL_MASK             0x0400
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_REF_SEL_ALIGN            0
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_REF_SEL_BITS             1
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_REF_SEL_SHIFT            10

/* vsr40_tx_pll :: control5 :: Tx_cupll_qpcur [09:05] */
#define VSR40_TX_PLL_CONTROL5_TX_CUPLL_QPCUR_MASK                  0x03e0
#define VSR40_TX_PLL_CONTROL5_TX_CUPLL_QPCUR_ALIGN                 0
#define VSR40_TX_PLL_CONTROL5_TX_CUPLL_QPCUR_BITS                  5
#define VSR40_TX_PLL_CONTROL5_TX_CUPLL_QPCUR_SHIFT                 5

/* vsr40_tx_pll :: control5 :: Tx_pll_test_clk [04:04] */
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_CLK_MASK                 0x0010
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_CLK_ALIGN                0
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_CLK_BITS                 1
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_CLK_SHIFT                4

/* vsr40_tx_pll :: control5 :: Tx_pll_test_vc [03:03] */
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_VC_MASK                  0x0008
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_VC_ALIGN                 0
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_VC_BITS                  1
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TEST_VC_SHIFT                 3

/* vsr40_tx_pll :: control5 :: Tx_bg_test_vbg [02:02] */
#define VSR40_TX_PLL_CONTROL5_TX_BG_TEST_VBG_MASK                  0x0004
#define VSR40_TX_PLL_CONTROL5_TX_BG_TEST_VBG_ALIGN                 0
#define VSR40_TX_PLL_CONTROL5_TX_BG_TEST_VBG_BITS                  1
#define VSR40_TX_PLL_CONTROL5_TX_BG_TEST_VBG_SHIFT                 2

/* vsr40_tx_pll :: control5 :: tx_pll_rsvd_68 [01:01] */
#define VSR40_TX_PLL_CONTROL5_TX_PLL_RSVD_68_MASK                  0x0002
#define VSR40_TX_PLL_CONTROL5_TX_PLL_RSVD_68_ALIGN                 0
#define VSR40_TX_PLL_CONTROL5_TX_PLL_RSVD_68_BITS                  1
#define VSR40_TX_PLL_CONTROL5_TX_PLL_RSVD_68_SHIFT                 1

/* vsr40_tx_pll :: control5 :: Tx_pll_tp_tailchg_en [00:00] */
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TP_TAILCHG_EN_MASK            0x0001
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TP_TAILCHG_EN_ALIGN           0
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TP_TAILCHG_EN_BITS            1
#define VSR40_TX_PLL_CONTROL5_TX_PLL_TP_TAILCHG_EN_SHIFT           0


/****************************************************************************
 * vsr40_tx_pll :: control4
 ***************************************************************************/
/* vsr40_tx_pll :: control4 :: susm_tx_refsel_frc [15:15] */
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_REFSEL_FRC_MASK              0x8000
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_REFSEL_FRC_ALIGN             0
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_REFSEL_FRC_BITS              1
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_REFSEL_FRC_SHIFT             15

/* vsr40_tx_pll :: control4 :: susm_tx_refsel [14:13] */
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_REFSEL_MASK                  0x6000
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_REFSEL_ALIGN                 0
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_REFSEL_BITS                  2
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_REFSEL_SHIFT                 13

/* vsr40_tx_pll :: control4 :: susm_tx_en_e100g_frc [12:12] */
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_E100G_FRC_MASK            0x1000
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_E100G_FRC_ALIGN           0
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_E100G_FRC_BITS            1
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_E100G_FRC_SHIFT           12

/* vsr40_tx_pll :: control4 :: susm_tx_en_e100g [11:11] */
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_E100G_MASK                0x0800
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_E100G_ALIGN               0
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_E100G_BITS                1
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_E100G_SHIFT               11

/* vsr40_tx_pll :: control4 :: susm_tx_en_25g_frc [10:10] */
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_25G_FRC_MASK              0x0400
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_25G_FRC_ALIGN             0
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_25G_FRC_BITS              1
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_25G_FRC_SHIFT             10

/* vsr40_tx_pll :: control4 :: susm_tx_en_25g [09:09] */
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_25G_MASK                  0x0200
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_25G_ALIGN                 0
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_25G_BITS                  1
#define VSR40_TX_PLL_CONTROL4_SUSM_TX_EN_25G_SHIFT                 9

/* vsr40_tx_pll :: control4 :: ENDUALREF [08:08] */
#define VSR40_TX_PLL_CONTROL4_ENDUALREF_MASK                       0x0100
#define VSR40_TX_PLL_CONTROL4_ENDUALREF_ALIGN                      0
#define VSR40_TX_PLL_CONTROL4_ENDUALREF_BITS                       1
#define VSR40_TX_PLL_CONTROL4_ENDUALREF_SHIFT                      8

/* vsr40_tx_pll :: control4 :: CMUSEL_1 [07:07] */
#define VSR40_TX_PLL_CONTROL4_CMUSEL_1_MASK                        0x0080
#define VSR40_TX_PLL_CONTROL4_CMUSEL_1_ALIGN                       0
#define VSR40_TX_PLL_CONTROL4_CMUSEL_1_BITS                        1
#define VSR40_TX_PLL_CONTROL4_CMUSEL_1_SHIFT                       7

/* vsr40_tx_pll :: control4 :: CMUSEL_0 [06:06] */
#define VSR40_TX_PLL_CONTROL4_CMUSEL_0_MASK                        0x0040
#define VSR40_TX_PLL_CONTROL4_CMUSEL_0_ALIGN                       0
#define VSR40_TX_PLL_CONTROL4_CMUSEL_0_BITS                        1
#define VSR40_TX_PLL_CONTROL4_CMUSEL_0_SHIFT                       6

/* vsr40_tx_pll :: control4 :: Tx_bg_pwrdn [05:05] */
#define VSR40_TX_PLL_CONTROL4_TX_BG_PWRDN_MASK                     0x0020
#define VSR40_TX_PLL_CONTROL4_TX_BG_PWRDN_ALIGN                    0
#define VSR40_TX_PLL_CONTROL4_TX_BG_PWRDN_BITS                     1
#define VSR40_TX_PLL_CONTROL4_TX_BG_PWRDN_SHIFT                    5

/* vsr40_tx_pll :: control4 :: Tx_pll_pwrdn [04:04] */
#define VSR40_TX_PLL_CONTROL4_TX_PLL_PWRDN_MASK                    0x0010
#define VSR40_TX_PLL_CONTROL4_TX_PLL_PWRDN_ALIGN                   0
#define VSR40_TX_PLL_CONTROL4_TX_PLL_PWRDN_BITS                    1
#define VSR40_TX_PLL_CONTROL4_TX_PLL_PWRDN_SHIFT                   4

/* vsr40_tx_pll :: control4 :: Tx_bg_ptatadj [03:00] */
#define VSR40_TX_PLL_CONTROL4_TX_BG_PTATADJ_MASK                   0x000f
#define VSR40_TX_PLL_CONTROL4_TX_BG_PTATADJ_ALIGN                  0
#define VSR40_TX_PLL_CONTROL4_TX_BG_PTATADJ_BITS                   4
#define VSR40_TX_PLL_CONTROL4_TX_BG_PTATADJ_SHIFT                  0


/****************************************************************************
 * vsr40_tx_pll :: control3
 ***************************************************************************/
/* vsr40_tx_pll :: control3 :: Tx_bg_ctatadj [15:12] */
#define VSR40_TX_PLL_CONTROL3_TX_BG_CTATADJ_MASK                   0xf000
#define VSR40_TX_PLL_CONTROL3_TX_BG_CTATADJ_ALIGN                  0
#define VSR40_TX_PLL_CONTROL3_TX_BG_CTATADJ_BITS                   4
#define VSR40_TX_PLL_CONTROL3_TX_BG_CTATADJ_SHIFT                  12

/* vsr40_tx_pll :: control3 :: Tx_cupll_gmcur [11:10] */
#define VSR40_TX_PLL_CONTROL3_TX_CUPLL_GMCUR_MASK                  0x0c00
#define VSR40_TX_PLL_CONTROL3_TX_CUPLL_GMCUR_ALIGN                 0
#define VSR40_TX_PLL_CONTROL3_TX_CUPLL_GMCUR_BITS                  2
#define VSR40_TX_PLL_CONTROL3_TX_CUPLL_GMCUR_SHIFT                 10

/* vsr40_tx_pll :: control3 :: Tx_cupll_cmv [09:08] */
#define VSR40_TX_PLL_CONTROL3_TX_CUPLL_CMV_MASK                    0x0300
#define VSR40_TX_PLL_CONTROL3_TX_CUPLL_CMV_ALIGN                   0
#define VSR40_TX_PLL_CONTROL3_TX_CUPLL_CMV_BITS                    2
#define VSR40_TX_PLL_CONTROL3_TX_CUPLL_CMV_SHIFT                   8

/* vsr40_tx_pll :: control3 :: Tx_vco_range_frc [07:07] */
#define VSR40_TX_PLL_CONTROL3_TX_VCO_RANGE_FRC_MASK                0x0080
#define VSR40_TX_PLL_CONTROL3_TX_VCO_RANGE_FRC_ALIGN               0
#define VSR40_TX_PLL_CONTROL3_TX_VCO_RANGE_FRC_BITS                1
#define VSR40_TX_PLL_CONTROL3_TX_VCO_RANGE_FRC_SHIFT               7

/* vsr40_tx_pll :: control3 :: Tx_vco_range [06:00] */
#define VSR40_TX_PLL_CONTROL3_TX_VCO_RANGE_MASK                    0x007f
#define VSR40_TX_PLL_CONTROL3_TX_VCO_RANGE_ALIGN                   0
#define VSR40_TX_PLL_CONTROL3_TX_VCO_RANGE_BITS                    7
#define VSR40_TX_PLL_CONTROL3_TX_VCO_RANGE_SHIFT                   0


/****************************************************************************
 * vsr40_tx_pll :: control2
 ***************************************************************************/
/* vsr40_tx_pll :: control2 :: Tx_vco_cur [15:15] */
#define VSR40_TX_PLL_CONTROL2_TX_VCO_CUR_MASK                      0x8000
#define VSR40_TX_PLL_CONTROL2_TX_VCO_CUR_ALIGN                     0
#define VSR40_TX_PLL_CONTROL2_TX_VCO_CUR_BITS                      1
#define VSR40_TX_PLL_CONTROL2_TX_VCO_CUR_SHIFT                     15

/* vsr40_tx_pll :: control2 :: susm_tx_vco_en25G_frc [14:14] */
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_VCO_EN25G_FRC_MASK           0x4000
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_VCO_EN25G_FRC_ALIGN          0
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_VCO_EN25G_FRC_BITS           1
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_VCO_EN25G_FRC_SHIFT          14

/* vsr40_tx_pll :: control2 :: susm_tx_vco_en25G [13:13] */
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_VCO_EN25G_MASK               0x2000
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_VCO_EN25G_ALIGN              0
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_VCO_EN25G_BITS               1
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_VCO_EN25G_SHIFT              13

/* vsr40_tx_pll :: control2 :: susm_tx_en_VSR_frc [12:12] */
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_EN_VSR_FRC_MASK              0x1000
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_EN_VSR_FRC_ALIGN             0
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_EN_VSR_FRC_BITS              1
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_EN_VSR_FRC_SHIFT             12

/* vsr40_tx_pll :: control2 :: susm_tx_en_VSR [11:11] */
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_EN_VSR_MASK                  0x0800
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_EN_VSR_ALIGN                 0
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_EN_VSR_BITS                  1
#define VSR40_TX_PLL_CONTROL2_SUSM_TX_EN_VSR_SHIFT                 11

/* vsr40_tx_pll :: control2 :: Tx_test_tx1_sel [10:10] */
#define VSR40_TX_PLL_CONTROL2_TX_TEST_TX1_SEL_MASK                 0x0400
#define VSR40_TX_PLL_CONTROL2_TX_TEST_TX1_SEL_ALIGN                0
#define VSR40_TX_PLL_CONTROL2_TX_TEST_TX1_SEL_BITS                 1
#define VSR40_TX_PLL_CONTROL2_TX_TEST_TX1_SEL_SHIFT                10

/* vsr40_tx_pll :: control2 :: Tx_test_tx_clk [09:09] */
#define VSR40_TX_PLL_CONTROL2_TX_TEST_TX_CLK_MASK                  0x0200
#define VSR40_TX_PLL_CONTROL2_TX_TEST_TX_CLK_ALIGN                 0
#define VSR40_TX_PLL_CONTROL2_TX_TEST_TX_CLK_BITS                  1
#define VSR40_TX_PLL_CONTROL2_TX_TEST_TX_CLK_SHIFT                 9

/* vsr40_tx_pll :: control2 :: Txpll_rescal_frc [08:08] */
#define VSR40_TX_PLL_CONTROL2_TXPLL_RESCAL_FRC_MASK                0x0100
#define VSR40_TX_PLL_CONTROL2_TXPLL_RESCAL_FRC_ALIGN               0
#define VSR40_TX_PLL_CONTROL2_TXPLL_RESCAL_FRC_BITS                1
#define VSR40_TX_PLL_CONTROL2_TXPLL_RESCAL_FRC_SHIFT               8

/* vsr40_tx_pll :: control2 :: Txpll_rescal [07:05] */
#define VSR40_TX_PLL_CONTROL2_TXPLL_RESCAL_MASK                    0x00e0
#define VSR40_TX_PLL_CONTROL2_TXPLL_RESCAL_ALIGN                   0
#define VSR40_TX_PLL_CONTROL2_TXPLL_RESCAL_BITS                    3
#define VSR40_TX_PLL_CONTROL2_TXPLL_RESCAL_SHIFT                   5

/* vsr40_tx_pll :: control2 :: Tx_1Tbuf1_band_frc [04:04] */
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_BAND_FRC_MASK              0x0010
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_BAND_FRC_ALIGN             0
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_BAND_FRC_BITS              1
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_BAND_FRC_SHIFT             4

/* vsr40_tx_pll :: control2 :: Tx_1Tbuf1_band [03:02] */
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_BAND_MASK                  0x000c
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_BAND_ALIGN                 0
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_BAND_BITS                  2
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_BAND_SHIFT                 2

/* vsr40_tx_pll :: control2 :: Tx_1Tbuf1_cur [01:00] */
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_CUR_MASK                   0x0003
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_CUR_ALIGN                  0
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_CUR_BITS                   2
#define VSR40_TX_PLL_CONTROL2_TX_1TBUF1_CUR_SHIFT                  0


/****************************************************************************
 * vsr40_tx_pll :: control1
 ***************************************************************************/
/* vsr40_tx_pll :: control1 :: reserved_for_eco0 [15:15] */
#define VSR40_TX_PLL_CONTROL1_RESERVED_FOR_ECO0_MASK               0x8000
#define VSR40_TX_PLL_CONTROL1_RESERVED_FOR_ECO0_ALIGN              0
#define VSR40_TX_PLL_CONTROL1_RESERVED_FOR_ECO0_BITS               1
#define VSR40_TX_PLL_CONTROL1_RESERVED_FOR_ECO0_SHIFT              15

/* vsr40_tx_pll :: control1 :: Tx_capctrl_IQbuf [14:11] */
#define VSR40_TX_PLL_CONTROL1_TX_CAPCTRL_IQBUF_MASK                0x7800
#define VSR40_TX_PLL_CONTROL1_TX_CAPCTRL_IQBUF_ALIGN               0
#define VSR40_TX_PLL_CONTROL1_TX_CAPCTRL_IQBUF_BITS                4
#define VSR40_TX_PLL_CONTROL1_TX_CAPCTRL_IQBUF_SHIFT               11

/* vsr40_tx_pll :: control1 :: Tx_encurrent_IQbuf_frc [10:10] */
#define VSR40_TX_PLL_CONTROL1_TX_ENCURRENT_IQBUF_FRC_MASK          0x0400
#define VSR40_TX_PLL_CONTROL1_TX_ENCURRENT_IQBUF_FRC_ALIGN         0
#define VSR40_TX_PLL_CONTROL1_TX_ENCURRENT_IQBUF_FRC_BITS          1
#define VSR40_TX_PLL_CONTROL1_TX_ENCURRENT_IQBUF_FRC_SHIFT         10

/* vsr40_tx_pll :: control1 :: Tx_encurrent_IQbuf [09:09] */
#define VSR40_TX_PLL_CONTROL1_TX_ENCURRENT_IQBUF_MASK              0x0200
#define VSR40_TX_PLL_CONTROL1_TX_ENCURRENT_IQBUF_ALIGN             0
#define VSR40_TX_PLL_CONTROL1_TX_ENCURRENT_IQBUF_BITS              1
#define VSR40_TX_PLL_CONTROL1_TX_ENCURRENT_IQBUF_SHIFT             9

/* vsr40_tx_pll :: control1 :: Tx_1Tdiv_cur [08:06] */
#define VSR40_TX_PLL_CONTROL1_TX_1TDIV_CUR_MASK                    0x01c0
#define VSR40_TX_PLL_CONTROL1_TX_1TDIV_CUR_ALIGN                   0
#define VSR40_TX_PLL_CONTROL1_TX_1TDIV_CUR_BITS                    3
#define VSR40_TX_PLL_CONTROL1_TX_1TDIV_CUR_SHIFT                   6

/* vsr40_tx_pll :: control1 :: susm_tx_ref_div_frc [05:05] */
#define VSR40_TX_PLL_CONTROL1_SUSM_TX_REF_DIV_FRC_MASK             0x0020
#define VSR40_TX_PLL_CONTROL1_SUSM_TX_REF_DIV_FRC_ALIGN            0
#define VSR40_TX_PLL_CONTROL1_SUSM_TX_REF_DIV_FRC_BITS             1
#define VSR40_TX_PLL_CONTROL1_SUSM_TX_REF_DIV_FRC_SHIFT            5

/* vsr40_tx_pll :: control1 :: susm_tx_ref_div [04:03] */
#define VSR40_TX_PLL_CONTROL1_SUSM_TX_REF_DIV_MASK                 0x0018
#define VSR40_TX_PLL_CONTROL1_SUSM_TX_REF_DIV_ALIGN                0
#define VSR40_TX_PLL_CONTROL1_SUSM_TX_REF_DIV_BITS                 2
#define VSR40_TX_PLL_CONTROL1_SUSM_TX_REF_DIV_SHIFT                3

/* vsr40_tx_pll :: control1 :: Tx_2Tbufdiv_cur [02:00] */
#define VSR40_TX_PLL_CONTROL1_TX_2TBUFDIV_CUR_MASK                 0x0007
#define VSR40_TX_PLL_CONTROL1_TX_2TBUFDIV_CUR_ALIGN                0
#define VSR40_TX_PLL_CONTROL1_TX_2TBUFDIV_CUR_BITS                 3
#define VSR40_TX_PLL_CONTROL1_TX_2TBUFDIV_CUR_SHIFT                0


/****************************************************************************
 * vsr40_tx_pll :: control0
 ***************************************************************************/
/* vsr40_tx_pll :: control0 :: reserved_for_eco0 [15:14] */
#define VSR40_TX_PLL_CONTROL0_RESERVED_FOR_ECO0_MASK               0xc000
#define VSR40_TX_PLL_CONTROL0_RESERVED_FOR_ECO0_ALIGN              0
#define VSR40_TX_PLL_CONTROL0_RESERVED_FOR_ECO0_BITS               2
#define VSR40_TX_PLL_CONTROL0_RESERVED_FOR_ECO0_SHIFT              14

/* vsr40_tx_pll :: control0 :: Tx_tport_hicur [13:13] */
#define VSR40_TX_PLL_CONTROL0_TX_TPORT_HICUR_MASK                  0x2000
#define VSR40_TX_PLL_CONTROL0_TX_TPORT_HICUR_ALIGN                 0
#define VSR40_TX_PLL_CONTROL0_TX_TPORT_HICUR_BITS                  1
#define VSR40_TX_PLL_CONTROL0_TX_TPORT_HICUR_SHIFT                 13

/* vsr40_tx_pll :: control0 :: ana_rsrvd_12 [12:12] */
#define VSR40_TX_PLL_CONTROL0_ANA_RSRVD_12_MASK                    0x1000
#define VSR40_TX_PLL_CONTROL0_ANA_RSRVD_12_ALIGN                   0
#define VSR40_TX_PLL_CONTROL0_ANA_RSRVD_12_BITS                    1
#define VSR40_TX_PLL_CONTROL0_ANA_RSRVD_12_SHIFT                   12

/* vsr40_tx_pll :: control0 :: ana_rsrvd_11 [11:11] */
#define VSR40_TX_PLL_CONTROL0_ANA_RSRVD_11_MASK                    0x0800
#define VSR40_TX_PLL_CONTROL0_ANA_RSRVD_11_ALIGN                   0
#define VSR40_TX_PLL_CONTROL0_ANA_RSRVD_11_BITS                    1
#define VSR40_TX_PLL_CONTROL0_ANA_RSRVD_11_SHIFT                   11

/* vsr40_tx_pll :: control0 :: Tx_cp [10:09] */
#define VSR40_TX_PLL_CONTROL0_TX_CP_MASK                           0x0600
#define VSR40_TX_PLL_CONTROL0_TX_CP_ALIGN                          0
#define VSR40_TX_PLL_CONTROL0_TX_CP_BITS                           2
#define VSR40_TX_PLL_CONTROL0_TX_CP_SHIFT                          9

/* vsr40_tx_pll :: control0 :: Tx_rz [08:06] */
#define VSR40_TX_PLL_CONTROL0_TX_RZ_MASK                           0x01c0
#define VSR40_TX_PLL_CONTROL0_TX_RZ_ALIGN                          0
#define VSR40_TX_PLL_CONTROL0_TX_RZ_BITS                           3
#define VSR40_TX_PLL_CONTROL0_TX_RZ_SHIFT                          6

/* vsr40_tx_pll :: control0 :: Tx_qp_cur [05:02] */
#define VSR40_TX_PLL_CONTROL0_TX_QP_CUR_MASK                       0x003c
#define VSR40_TX_PLL_CONTROL0_TX_QP_CUR_ALIGN                      0
#define VSR40_TX_PLL_CONTROL0_TX_QP_CUR_BITS                       4
#define VSR40_TX_PLL_CONTROL0_TX_QP_CUR_SHIFT                      2

/* vsr40_tx_pll :: control0 :: Tx_qp_VDD_BGb [01:01] */
#define VSR40_TX_PLL_CONTROL0_TX_QP_VDD_BGB_MASK                   0x0002
#define VSR40_TX_PLL_CONTROL0_TX_QP_VDD_BGB_ALIGN                  0
#define VSR40_TX_PLL_CONTROL0_TX_QP_VDD_BGB_BITS                   1
#define VSR40_TX_PLL_CONTROL0_TX_QP_VDD_BGB_SHIFT                  1

/* vsr40_tx_pll :: control0 :: Tx_tport_sel_ana_n [00:00] */
#define VSR40_TX_PLL_CONTROL0_TX_TPORT_SEL_ANA_N_MASK              0x0001
#define VSR40_TX_PLL_CONTROL0_TX_TPORT_SEL_ANA_N_ALIGN             0
#define VSR40_TX_PLL_CONTROL0_TX_TPORT_SEL_ANA_N_BITS              1
#define VSR40_TX_PLL_CONTROL0_TX_TPORT_SEL_ANA_N_SHIFT             0


/****************************************************************************
 * Datatype Definitions.
 ***************************************************************************/
#endif /* #ifndef PHY84793_H__ */

/* End of File */


# $Id: Makefile.vxworks-raptor,v 1.26 Broadcom SDK $
# $Copyright: Copyright 2012 Broadcom Corporation.
# This program is the proprietary software of Broadcom Corporation
# and/or its licensors, and may only be used, duplicated, modified
# or distributed pursuant to the terms and conditions of a separate,
# written license agreement executed between you and Broadcom
# (an "Authorized License").  Except as set forth in an Authorized
# License, Broadcom grants no license (express or implied), right
# to use, or waiver of any kind with respect to the Software, and
# Broadcom expressly reserves all rights in and to the Software
# and all intellectual property rights therein.  IF YOU HAVE
# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
# ALL USE OF THE SOFTWARE.  
#  
# Except as expressly set forth in the Authorized License,
#  
# 1.     This program, including its structure, sequence and organization,
# constitutes the valuable trade secrets of Broadcom, and you shall use
# all reasonable efforts to protect the confidentiality thereof,
# and to use this information only in connection with your use of
# Broadcom integrated circuit products.
#  
# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
# 
# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
#
# Makefile for the BCM4702 board(CPCI) running VxWorks

include ${SDK}/make/Makefile.vxworks-common

# WIND_BASE and WIND_HOST_TYPE must be modified according to your
# installed location.  The environment variables are ignored intentionally.

ifndef VX_VERSION
VX_VERSION = 68
endif

#ifeq ($(VX_TARGET_BIG_ENDIAN),1)
#TARGET_EFLAGS = -DLE_HOST=1 -DIL_BIGENDIAN=0 -DMIPSEB
#TOOL_SUFFIX=
#else
#TARGET_EFLAGS = -DLE_HOST=1 -DIL_BIGENDIAN=0 -DMIPSEL
#TOOL_SUFFIX=le
#endif

TARGET_EFLAGS = -DLE_HOST=1

WIND_HOME = /tools/windriver/vxworks/6.8.3
WIND_BASE = /tools/windriver/vxworks/6.8.3/vxworks-6.8
WIND_DIAB_PATH = /tools/windriver/vxworks/6.8.3/diab/5.8.0.0
WIND_GNU_PATH = /tools/windriver/vxworks/6.8.3/gnu/4.1.2-vxworks-6.8
WIND_HOST_TYPE = x86-linux2
WORKBENCH_VERSION = workbench-3.2

export WRVX_COMPBASE=/tools/windriver/vxworks/6.8.3/components
export COMP_IPNET2=ip_net2-6.8
export WIND_TOOLS = $(WIND_HOME)/$(WORKBENCH_VERSION)
export WIND_LIC_PROXY = $(WIND_HOME)/setup/$(WIND_HOST_TYPE)/bin/
export WRSD_LICENSE_FILE = $(WIND_HOME)/license/
export VXWORKS_VERSION = $(VX_VERSION)

CPU  = ARMARCH7
TOOL = sfgnu
#TOOL = sfgnu$(TOOL_SUFFIX)
BSP_DIR = vxworks6x
VX_SRC = ${SDK}/systems/vxworks/iproc/$(BSP_DIR)/bcm56450
VX_SRC_ALL = $(VX_SRC)/all

BOOTROM_SWAP=yes

# Configuration Flags

CFGFLAGS += -DBCM_PLATFORM_STRING=\"IPROC_BCM56450\" 
CFGFLAGS += -DBCM_KATANA2_ORI_PLL_SUPPORT


toolbase = $(WIND_GNU_PATH)/$(WIND_HOST_TYPE)/bin/
toolbase_alt = $(WIND_HOME)/utilities-1.0/$(WIND_HOST_TYPE)/bin/
CC 	= $(toolbase)ccarm -w
CPP	= $(toolbase)cpparm
CXX 	= $(toolbase)g++arm
RANLIB 	= $(toolbase)ranlibarm
AR 	= $(toolbase)ararm
LD 	= $(toolbase)ldarm
MUNCH 	= $(toolbase)munch
NM 	= $(toolbase_alt)nmarm
SIZE 	= $(toolbase_alt)sizearm
STRIP	= $(toolbase_alt)striparm
OBJCOPY = $(toolbase_alt)objcopyarm


# GCC version
#export GCC_EXEC_PREFIX=$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/


OPTFLAGS_DEFAULT = -O2
#MFLAGS = $(OPTFLAGS) -EB -mcpu=r4000 -mips3 -mgp32 -mfp32 -non_shared -G 0 -DCPU=$(CPU)

ifeq ($(WIND_HOST_TYPE),x86-linux)
HAVE_BRANCH_NOLIKELY=
OPTFLAGS_DEFAULT = -O1
else
HAVE_BRANCH_NOLIKELY=-mno-branch-likely
endif

#MFLAGS = -G 0 $(OPTFLAGS) $(TARGET_EFLAGS) -mips32r2 -msoft-float -DCPU=$(CPU) -DintUnlock=intUnlockSafe -D_VSB_CONFIG_FILE=\"/tools/windriver/vxworks/6.8.3/vxworks-6.8/target/lib_smp/h/config/vsbConfig.h\"

MFLAGS = $(OPTFLAGS) $(TARGET_EFLAGS) -msoft-float -DCPU=$(CPU) -I/tools/windriver/vxworks/6.8.3/vxworks-6.8/target/lib_smp/h/config/ -D_VSB_CONFIG_FILE=\"vsbConfig.h\"

ARFLAGS = -rc

# TARGETTYPE Defines: This defines the type of system you are compiling
# the driver for; there are several values allowed. New values can be created
# by porting the routines (system.c) to your platform and adding
# the define in this Makefile.

TARGETTYPE = IPROC_CMICD
SUBTGTTYPE = INTERNAL_CPU
# OSType Defines: This defines the type of RTOS or microkernel which you
# are compiling the SAL (and its associated driver) for. New platforms
# can be created by porting the routines (system.c) to your platform and
# adding the define in this Makefile.

OSTYPE = VXWORKS

INCS += -I$(VX_SRC) -I${VX_SRC_ALL} -I$(WIND_BASE)/target/h
INCS += -I$(WIND_BASE)/target/h/wrn/coreip 
INCS += -I$(WIND_BASE)/target/h/wrn/coreip/net 
#INCS += -I$(WIND_DIAB_PATH)/include/diab
INCS += -I$(WIND_HOME)/gnu/4.1.2-vxworks-6.8/lib/gcc/arm-wrs-vxworks/4.1.2/include

# Includes path to new network stack component.
INCS += -I$(WIND_HOME)/components/ip_net2-6.8
INCS += -I$(WIND_HOME)/components/ip_net2-6.8/ipnet2/src
INCS += -I$(WIND_HOME)/components/ip_net2-6.8/ipnet2/include
INCS += -I$(WIND_HOME)/components/ip_net2-6.8/ipnet2/config
INCS += -I$(WIND_HOME)/components/ip_net2-6.8/ipcom/port/vxworks/include
INCS += -I$(WIND_HOME)/components/ip_net2-6.8/ipcom/port/vxworks/config
INCS += -I$(WIND_HOME)/components/ip_net2-6.8/ipcom/include
INCS += -I$(WIND_HOME)/components/ip_net2-6.8/ipcom/config

LIBS = 

#
# STD_{C|CPP|CXX}FLAGS - Standard flags used by ALL compilations
# BCM_{C|CPP|CXX}FLAGS - Flags used for Broadcom source files
# OPT_{C|CPP|CXX}FLAGS - Defined in local make files BEFORE inclusion of 
#			 this Makefile, to define local "Extra" flags.
#
# We include -DTRUE=1 to fix a Tornado 1 problem where stdarg macros are
# defined incorrectly if TRUE is not defined ahead of including stdarg.h.
# NOTE: Extra -I${INCDIR} puts SDK include before system incs, for assert.h
#
STD_CFLAGS = -fno-builtin -fno-strict-aliasing $(MFLAGS) \
	-I${INCDIR} ${INCS} -DMBZ -D${TARGETTYPE} -D${SUBTGTTYPE} -D${OSTYPE} \
	-DVX_VERSION=${VX_VERSION} -DVXWORKS_NETWORK_STACK_6_5 -DBROADCOM_BSP \
	${CFGFLAGS}

STD_CPPFLAGS = ${STD_CFLAGS}
STD_CXXFLAGS = ${STD_CFLAGS}

#
# Features which should be explicitly excluded from this configuration:
#
FEATURE_EXCLUDE_LIST += DUNE_UI


# Remove redundant include and definition to speed up compile
CFGFLAGS := $(filter-out -DNO_BCM_5690_A0 -DNO_BCM_5670_A0 -DNO_BCM_5673_A0 -DNO_BCM_5674_A0, $(CFGFLAGS))
CFGFLAGS := $(filter-out -DNO_BCM_5665_A0 -DNO_BCM_5665_B0 -DNO_BCM_5650_C0 -DNO_BCM_5695_A0, $(CFGFLAGS))
CFGFLAGS := $(filter-out -DNO_BCM_56601_A0 -DNO_BCM_56601_B0 -DNO_BCM_56601_C0 -DNO_BCM_56602_A0 -DNO_BCM_56602_B0 -DNO_BCM_56602_C0, $(CFGFLAGS))


/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * $Id: 5b34790f609408fadfe1de420eff2f559e2fd923 $
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 *
 * File:	client_dispatch.h
 * Purpose:	client driver BCM API dispatch table
 * Generator:	mkdispatch 1.54
 * Generated:	Tue Jun 10 17:38:49 2014
 */

#ifndef	_BCM_INT_CLIENT_DISPATCH_H
#define	_BCM_INT_CLIENT_DISPATCH_H

#include <bcm/types.h>
#include <bcm_int/dispatch.h>

#ifdef	BCM_RPC_SUPPORT

extern int _bcm_client_attach(int,char *);
extern int _bcm_client_detach(int);
/* _bcm_shutdown not dispatchable */
/* bcm_attach not dispatchable */
/* bcm_attach_check not dispatchable */
/* bcm_attach_info_t_init not dispatchable */
/* bcm_attach_max not dispatchable */
/* bcm_attach_register not dispatchable */
/* bcm_attach_unregister not dispatchable */
extern int bcm_client_auth_detach(int);
extern int bcm_client_auth_egress_get(int,int,int *);
extern int bcm_client_auth_egress_set(int,int,int);
extern int bcm_client_auth_init(int);
extern int bcm_client_auth_mac_add(int,int,bcm_mac_t);
extern int bcm_client_auth_mac_control_get(int,bcm_auth_mac_control_t,uint32 *);
extern int bcm_client_auth_mac_control_set(int,bcm_auth_mac_control_t,uint32);
extern int bcm_client_auth_mac_delete(int,int,bcm_mac_t);
extern int bcm_client_auth_mac_delete_all(int,int);
extern int bcm_client_auth_mode_get(int,int,uint32 *);
extern int bcm_client_auth_mode_set(int,int,uint32);
extern int bcm_client_auth_unauth_callback(int,bcm_auth_cb_t,void *);
#ifdef	INCLUDE_BFD
extern int bcm_client_bfd_auth_sha1_get(int,int,bcm_bfd_auth_sha1_t *);
extern int bcm_client_bfd_auth_sha1_set(int,int,bcm_bfd_auth_sha1_t *);
extern int bcm_client_bfd_auth_simple_password_get(int,int,bcm_bfd_auth_simple_password_t *);
extern int bcm_client_bfd_auth_simple_password_set(int,int,bcm_bfd_auth_simple_password_t *);
extern int bcm_client_bfd_detach(int);
extern int bcm_client_bfd_endpoint_create(int,bcm_bfd_endpoint_info_t *);
extern int bcm_client_bfd_endpoint_destroy(int,bcm_bfd_endpoint_t);
extern int bcm_client_bfd_endpoint_destroy_all(int);
extern int bcm_client_bfd_endpoint_get(int,bcm_bfd_endpoint_t,bcm_bfd_endpoint_info_t *);
/* bcm_bfd_endpoint_info_t_init not dispatchable */
extern int bcm_client_bfd_endpoint_poll(int,bcm_bfd_endpoint_t);
extern int bcm_client_bfd_endpoint_stat_get(int,bcm_bfd_endpoint_t,bcm_bfd_endpoint_stat_t *,uint8);
extern int bcm_client_bfd_event_register(int,bcm_bfd_event_types_t,bcm_bfd_event_cb,void *);
extern int bcm_client_bfd_event_unregister(int,bcm_bfd_event_types_t,bcm_bfd_event_cb);
extern int bcm_client_bfd_init(int);
#endif	/* INCLUDE_BFD */
#ifdef	INCLUDE_CES
extern int bcm_client_ces_attach_ethernet(int,int);
/* bcm_ces_cb_register mapped to bcm_e_unavail */
/* bcm_ces_cb_unregister mapped to bcm_e_unavail */
/* bcm_ces_cclk_config_t_init not dispatchable */
extern int bcm_client_ces_detach(int);
extern int bcm_client_ces_egress_status_get(int,bcm_ces_service_t,bcm_ces_service_egress_status_t *);
extern int bcm_client_ces_ethernet_config_get(int,int,bcm_ces_mac_cmd_config_t *);
extern int bcm_client_ces_ethernet_config_set(int,int,bcm_ces_mac_cmd_config_t *);
extern int bcm_client_ces_init(int);
/* bcm_ces_rclock_config_t_init not dispatchable */
extern int bcm_client_ces_service_cas_packet_enable(int,bcm_ces_service_t,bcm_ces_cas_packet_control_t *);
extern int bcm_client_ces_service_config_get(int,bcm_ces_service_t,bcm_ces_service_config_t *);
/* bcm_ces_service_config_t_init not dispatchable */
extern int bcm_client_ces_service_control_word_get(int,bcm_ces_service_t,uint16 *,uint16 *,uint16 *);
extern int bcm_client_ces_service_control_word_set(int,bcm_ces_service_t,uint16,uint16);
extern int bcm_client_ces_service_create(int,int,bcm_ces_service_config_t *,bcm_ces_service_t *);
extern int bcm_client_ces_service_destroy(int,bcm_ces_service_t);
extern int bcm_client_ces_service_destroy_all(int);
extern int bcm_client_ces_service_enable_get(int,bcm_ces_service_t,int *);
extern int bcm_client_ces_service_enable_set(int,bcm_ces_service_t,int);
extern int bcm_client_ces_service_ingress_cas_enable_get(int,bcm_ces_service_t,int *);
extern int bcm_client_ces_service_ingress_cas_enable_set(int,bcm_ces_service_t,int);
extern int bcm_client_ces_service_pm_clear(int,bcm_ces_service_t);
extern int bcm_client_ces_service_pm_get(int,bcm_ces_service_t,bcm_ces_service_pm_stats_t *);
extern int bcm_client_ces_service_rclock_config_get(int,bcm_ces_service_t,bcm_ces_rclock_config_t *);
extern int bcm_client_ces_service_rclock_config_set(int,bcm_ces_service_t,bcm_ces_rclock_config_t *);
extern int bcm_client_ces_services_cclk_config_get(int,bcm_ces_cclk_config_t *);
extern int bcm_client_ces_services_cclk_config_set(int,bcm_ces_cclk_config_t *);
extern int bcm_client_ces_services_clear(int);
extern int bcm_client_ces_services_init(int);
extern int bcm_client_ces_services_traverse(int,uint32,bcm_ces_service_traverse_cb,void *);
#endif	/* INCLUDE_CES */
extern int bcm_client_clear(int);
extern int bcm_client_cosq_bst_profile_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_bst_stat_id_t,bcm_cosq_bst_profile_t *);
extern int bcm_client_cosq_bst_profile_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_bst_stat_id_t,bcm_cosq_bst_profile_t *);
/* bcm_cosq_bst_profile_t_init not dispatchable */
extern int bcm_client_cosq_bst_stat_clear(int,bcm_gport_t,bcm_cos_queue_t,bcm_bst_stat_id_t);
extern int bcm_client_cosq_bst_stat_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_bst_stat_id_t,uint32,uint64 *);
extern int bcm_client_cosq_bst_stat_get32(int,bcm_gport_t,bcm_cos_queue_t,bcm_bst_stat_id_t,uint32,uint32 *);
extern int bcm_client_cosq_bst_stat_multi_get(int,bcm_gport_t,bcm_cos_queue_t,uint32,int,bcm_bst_stat_id_t *,uint64 *);
extern int bcm_client_cosq_bst_stat_multi_get32(int,bcm_gport_t,bcm_cos_queue_t,uint32,int,bcm_bst_stat_id_t *,uint32 *);
extern int bcm_client_cosq_bst_stat_sync(int,bcm_bst_stat_id_t);
extern int bcm_client_cosq_classifier_create(int,bcm_cosq_classifier_t *,int *);
extern int bcm_client_cosq_classifier_destroy(int,int);
extern int bcm_client_cosq_classifier_get(int,int,bcm_cosq_classifier_t *);
extern int bcm_client_cosq_classifier_mapping_clear(int,bcm_gport_t,int);
extern int bcm_client_cosq_classifier_mapping_get(int,bcm_gport_t,int,bcm_gport_t *,bcm_cos_t,bcm_cos_queue_t *);
extern int bcm_client_cosq_classifier_mapping_multi_get(int,bcm_gport_t,int,bcm_gport_t *,int,bcm_cos_t *,bcm_cos_queue_t *,int *);
extern int bcm_client_cosq_classifier_mapping_multi_set(int,bcm_gport_t,int,bcm_gport_t,int,bcm_cos_t *,bcm_cos_queue_t *);
extern int bcm_client_cosq_classifier_mapping_set(int,bcm_gport_t,int,bcm_gport_t,bcm_cos_t,bcm_cos_queue_t);
/* bcm_cosq_classifier_t_init not dispatchable */
extern int bcm_client_cosq_config_get(int,int *);
extern int bcm_client_cosq_config_set(int,int);
/* bcm_cosq_congestion_info_t_init not dispatchable */
extern int bcm_client_cosq_control_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_control_t,int *);
extern int bcm_client_cosq_control_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_control_t,int);
extern int bcm_client_cosq_cpu_cosq_enable_get(int,bcm_cos_queue_t,int *);
extern int bcm_client_cosq_cpu_cosq_enable_set(int,bcm_cos_queue_t,int);
extern int bcm_client_cosq_delay_tolerance_level_get(int,int,bcm_cosq_delay_tolerance_t *);
extern int bcm_client_cosq_delay_tolerance_level_set(int,int,bcm_cosq_delay_tolerance_t *);
extern int bcm_client_cosq_dest_credit_size_get(int,bcm_module_t,uint32 *);
extern int bcm_client_cosq_dest_credit_size_set(int,bcm_module_t,uint32);
extern int bcm_client_cosq_detach(int);
extern int bcm_client_cosq_discard_get(int,uint32 *);
extern int bcm_client_cosq_discard_port_get(int,bcm_port_t,bcm_cos_queue_t,uint32,int *,int *,int *);
extern int bcm_client_cosq_discard_port_set(int,bcm_port_t,bcm_cos_queue_t,uint32,int,int,int);
extern int bcm_client_cosq_discard_set(int,uint32);
extern int bcm_client_cosq_fabric_distribution_add(int,bcm_fabric_distribution_t,int,uint32,bcm_gport_t *);
extern int bcm_client_cosq_fabric_distribution_get(int,bcm_fabric_distribution_t,int *,bcm_gport_t *,uint32 *);
extern int bcm_client_cosq_fc_path_add(int,bcm_cosq_fc_direction_type_t,bcm_cosq_fc_endpoint_t *,bcm_cosq_fc_endpoint_t *);
extern int bcm_client_cosq_fc_path_delete(int,bcm_cosq_fc_direction_type_t,bcm_cosq_fc_endpoint_t *,bcm_cosq_fc_endpoint_t *);
extern int bcm_client_cosq_fc_path_get(int,bcm_cosq_fc_direction_type_t,bcm_cosq_fc_endpoint_t *,int,bcm_cosq_fc_endpoint_t *,int *);
extern int bcm_client_cosq_gport_add(int,bcm_gport_t,int,uint32,bcm_gport_t *);
extern int bcm_client_cosq_gport_attach(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_client_cosq_gport_attach_get(int,bcm_gport_t,bcm_gport_t *,bcm_cos_queue_t *);
extern int bcm_client_cosq_gport_bandwidth_get(int,bcm_gport_t,bcm_cos_queue_t,uint32 *,uint32 *,uint32 *);
extern int bcm_client_cosq_gport_bandwidth_set(int,bcm_gport_t,bcm_cos_queue_t,uint32,uint32,uint32);
extern int bcm_client_cosq_gport_child_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_gport_t *);
extern int bcm_client_cosq_gport_color_size_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_color_t,uint32,bcm_cosq_gport_size_t *);
extern int bcm_client_cosq_gport_color_size_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_color_t,uint32,bcm_cosq_gport_size_t *);
extern int bcm_client_cosq_gport_congestion_config_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_congestion_info_t *);
extern int bcm_client_cosq_gport_congestion_config_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_congestion_info_t *);
extern int bcm_client_cosq_gport_connection_get(int,bcm_cosq_gport_connection_t *);
extern int bcm_client_cosq_gport_connection_set(int,bcm_cosq_gport_connection_t *);
extern int bcm_client_cosq_gport_delete(int,bcm_gport_t);
extern int bcm_client_cosq_gport_destmod_attach(int,bcm_gport_t,bcm_port_t,bcm_module_t,int);
extern int bcm_client_cosq_gport_destmod_detach(int,bcm_gport_t,bcm_port_t,bcm_module_t,int);
extern int bcm_client_cosq_gport_detach(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_client_cosq_gport_discard_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_gport_discard_t *);
extern int bcm_client_cosq_gport_discard_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_gport_discard_t *);
/* bcm_cosq_gport_discard_t_init not dispatchable */
extern int bcm_client_cosq_gport_dynamic_sched_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_dynamic_state_t,int *);
extern int bcm_client_cosq_gport_dynamic_sched_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_dynamic_state_t,int);
extern int bcm_client_cosq_gport_egress_map_get(int,bcm_gport_t,bcm_cos_t,bcm_color_t,bcm_cos_queue_t *);
extern int bcm_client_cosq_gport_egress_map_set(int,bcm_gport_t,bcm_cos_t,bcm_color_t,bcm_cos_queue_t);
extern int bcm_client_cosq_gport_egress_multicast_config_get(int,bcm_gport_t,bcm_cos_t,bcm_color_t,uint32,bcm_cosq_egress_multicast_config_t *);
extern int bcm_client_cosq_gport_egress_multicast_config_set(int,bcm_gport_t,bcm_cos_t,bcm_color_t,uint32,bcm_cosq_egress_multicast_config_t *);
extern int bcm_client_cosq_gport_enable_get(int,bcm_gport_t,bcm_cos_queue_t,int *);
extern int bcm_client_cosq_gport_enable_set(int,bcm_gport_t,bcm_cos_queue_t,int);
extern int bcm_client_cosq_gport_flow_control_get(int,bcm_gport_t,bcm_cos_t,uint32 *);
extern int bcm_client_cosq_gport_flow_control_set(int,bcm_gport_t,bcm_cos_t,uint32);
extern int bcm_client_cosq_gport_get(int,bcm_gport_t,bcm_gport_t *,int *,uint32 *);
extern int bcm_client_cosq_gport_handle_core_get(int,int,bcm_cosq_gport_info_core_t *,bcm_gport_t *);
extern int bcm_client_cosq_gport_handle_get(int,bcm_cosq_gport_type_t,bcm_cosq_gport_info_t *);
extern int bcm_client_cosq_gport_mapping_get(int,bcm_port_t,bcm_cos_t,uint32,bcm_gport_t *,bcm_cos_queue_t *);
extern int bcm_client_cosq_gport_mapping_set(int,bcm_port_t,bcm_cos_t,uint32,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_client_cosq_gport_multipath_add(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_client_cosq_gport_multipath_delete(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_client_cosq_gport_multipath_get(int,bcm_gport_t,int,bcm_gport_t *,bcm_cos_queue_t *,int *);
extern int bcm_client_cosq_gport_parent_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_gport_t *);
extern int bcm_client_cosq_gport_pon_link_sla_get(int,bcm_gport_t,bcm_cos_pon_link_sla_t *);
extern int bcm_client_cosq_gport_pon_link_sla_set(int,bcm_gport_t,bcm_cos_pon_link_sla_t *);
extern int bcm_client_cosq_gport_queue_attach(int,uint32,bcm_gport_t,bcm_cos_t,bcm_gport_t,bcm_cos_t,int *);
extern int bcm_client_cosq_gport_queue_attach_get(int,bcm_gport_t,bcm_cos_t,bcm_gport_t *,bcm_cos_t *,int);
extern int bcm_client_cosq_gport_queue_detach(int,bcm_gport_t,bcm_cos_t,int);
extern int bcm_client_cosq_gport_reattach(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_client_cosq_gport_report_threshold_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_report_threshold_t *);
extern int bcm_client_cosq_gport_report_threshold_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_report_threshold_t *);
extern int bcm_client_cosq_gport_sched_config_get(int,bcm_gport_t,int,int,uint32 *);
extern int bcm_client_cosq_gport_sched_config_set(int,bcm_gport_t,int,int,uint32);
extern int bcm_client_cosq_gport_sched_get(int,bcm_gport_t,bcm_cos_queue_t,int *,int *);
extern int bcm_client_cosq_gport_sched_set(int,bcm_gport_t,bcm_cos_queue_t,int,int);
extern int bcm_client_cosq_gport_size_get(int,bcm_gport_t,bcm_cos_queue_t,uint32 *,uint32 *);
extern int bcm_client_cosq_gport_size_set(int,bcm_gport_t,bcm_cos_queue_t,uint32,uint32);
extern int bcm_client_cosq_gport_stat_config_get(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_cosq_gport_stat_profile_t *);
extern int bcm_client_cosq_gport_stat_config_set(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_cosq_gport_stat_profile_t);
extern int bcm_client_cosq_gport_stat_enable_get(int,bcm_gport_t,int *);
extern int bcm_client_cosq_gport_stat_enable_set(int,bcm_gport_t,int);
extern int bcm_client_cosq_gport_stat_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_gport_stats_t,uint64 *);
extern int bcm_client_cosq_gport_stat_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_gport_stats_t,uint64);
extern int bcm_client_cosq_gport_stat_sync_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_gport_stats_t,uint64 *);
extern int bcm_client_cosq_gport_statistic_get(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_cosq_gport_stats_t,uint64 *);
extern int bcm_client_cosq_gport_statistic_multi_get(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t,int,bcm_cosq_gport_stats_t *,int,uint64 *);
extern int bcm_client_cosq_gport_statistic_multi_set(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t,int,bcm_cosq_gport_stats_t *,uint64);
extern int bcm_client_cosq_gport_statistic_set(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_cosq_gport_stats_t,uint64);
extern int bcm_client_cosq_gport_threshold_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_threshold_t *);
extern int bcm_client_cosq_gport_threshold_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_threshold_t *);
extern int bcm_client_cosq_gport_traverse(int,bcm_cosq_gport_traverse_cb,void *);
extern int bcm_client_cosq_gport_vsq_add(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_client_cosq_gport_vsq_create(int,bcm_cosq_vsq_info_t *,bcm_gport_t *);
extern int bcm_client_cosq_gport_vsq_delete(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_client_cosq_gport_vsq_delete_all(int,bcm_gport_t);
extern int bcm_client_cosq_gport_vsq_destroy(int,bcm_gport_t);
extern int bcm_client_cosq_gport_vsq_get(int,bcm_gport_t,int,bcm_gport_t *,bcm_cos_queue_t *,int *);
extern int bcm_client_cosq_init(int);
extern int bcm_client_cosq_mapping_get(int,bcm_cos_t,bcm_cos_queue_t *);
extern int bcm_client_cosq_mapping_set(int,bcm_cos_t,bcm_cos_queue_t);
extern int bcm_client_cosq_pfc_config_get(int,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_cosq_pfc_config_t *);
extern int bcm_client_cosq_pfc_config_set(int,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_cosq_pfc_config_t *);
extern int bcm_client_cosq_port_bandwidth_get(int,bcm_port_t,bcm_cos_queue_t,uint32 *,uint32 *,uint32 *);
extern int bcm_client_cosq_port_bandwidth_set(int,bcm_port_t,bcm_cos_queue_t,uint32,uint32,uint32);
extern int bcm_client_cosq_port_mapping_get(int,bcm_port_t,bcm_cos_t,bcm_cos_queue_t *);
extern int bcm_client_cosq_port_mapping_set(int,bcm_port_t,bcm_cos_t,bcm_cos_queue_t);
extern int bcm_client_cosq_port_sched_get(int,bcm_pbmp_t,int *,int [BCM_COS_COUNT],int *);
extern int bcm_client_cosq_port_sched_set(int,bcm_pbmp_t,int,const int [BCM_COS_COUNT],int);
extern int bcm_client_cosq_priority_get(int,int,int,int *);
extern int bcm_client_cosq_priority_profile_get(int,int,int *,bcm_cosq_gport_priority_profile_t *);
extern int bcm_client_cosq_priority_profile_set(int,int,int,bcm_cosq_gport_priority_profile_t *);
extern int bcm_client_cosq_priority_set(int,int,int,int);
extern int bcm_client_cosq_profile_mapping_get(int,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_switch_profile_mapping_t *);
extern int bcm_client_cosq_profile_mapping_set(int,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_switch_profile_mapping_t *);
extern int bcm_client_cosq_qcn_config_get(int,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_cosq_qcn_config_t *);
extern int bcm_client_cosq_qcn_config_set(int,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_cosq_qcn_config_t *);
extern int bcm_client_cosq_sched_get(int,int *,int [BCM_COS_COUNT],int *);
extern int bcm_client_cosq_sched_set(int,int,const int [BCM_COS_COUNT],int);
extern int bcm_client_cosq_sched_weight_max_get(int,int,int *);
extern int bcm_client_cosq_service_pool_get(int,bcm_service_pool_id_t,bcm_cosq_service_pool_t *);
extern int bcm_client_cosq_service_pool_set(int,bcm_service_pool_id_t,bcm_cosq_service_pool_t);
extern int bcm_client_cosq_stat_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_stat_t,uint64 *);
extern int bcm_client_cosq_stat_get32(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_stat_t,uint32 *);
extern int bcm_client_cosq_stat_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_stat_t,uint64);
extern int bcm_client_cosq_stat_set32(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_stat_t,uint32);
extern int bcm_client_cosq_stat_sync_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_stat_t,uint64 *);
extern int bcm_client_cosq_stat_sync_get32(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_stat_t,uint32 *);
extern int bcm_client_cosq_subscriber_map_add(int,bcm_cosq_subscriber_map_t *);
extern int bcm_client_cosq_subscriber_map_delete(int,bcm_cosq_subscriber_map_t *);
extern int bcm_client_cosq_subscriber_map_delete_all(int);
extern int bcm_client_cosq_subscriber_map_get(int,bcm_cosq_subscriber_map_t *);
extern int bcm_client_cosq_subscriber_traverse(int,bcm_cosq_subscriber_map_traverse_cb,void *);
/* bcm_cosq_threshold_t_init not dispatchable */
extern int bcm_client_custom_port_get(int,bcm_port_t,int,int,uint32 *,int *);
extern int bcm_client_custom_port_set(int,bcm_port_t,int,int,uint32 *);
/* bcm_custom_register mapped to bcm_e_unavail */
/* bcm_custom_unregister mapped to bcm_e_unavail */
/* bcm_detach not dispatchable */
/* bcm_detach_retry_get not dispatchable */
/* bcm_detach_retry_set not dispatchable */
/* bcm_detach_retry_t_init not dispatchable */
extern int bcm_client_eav_bandwidth_get(int,bcm_port_t,bcm_eav_stream_class_t,uint32 *,uint32 *);
extern int bcm_client_eav_bandwidth_set(int,bcm_port_t,bcm_eav_stream_class_t,uint32,uint32);
extern int bcm_client_eav_control_get(int,bcm_eav_control_t,uint32 *,uint32 *);
extern int bcm_client_eav_control_set(int,bcm_eav_control_t,uint32,uint32);
extern int bcm_client_eav_init(int);
extern int bcm_client_eav_link_status_get(int,bcm_port_t,int *);
extern int bcm_client_eav_link_status_set(int,bcm_port_t,int);
extern int bcm_client_eav_pcp_mapping_get(int,bcm_eav_stream_class_t,int *,int *);
extern int bcm_client_eav_pcp_mapping_set(int,bcm_eav_stream_class_t,int,int);
extern int bcm_client_eav_port_enable_get(int,bcm_port_t,int *);
extern int bcm_client_eav_port_enable_set(int,bcm_port_t,int);
extern int bcm_client_eav_srp_mac_ethertype_get(int,bcm_mac_t,bcm_port_ethertype_t *);
extern int bcm_client_eav_srp_mac_ethertype_set(int,bcm_mac_t,bcm_port_ethertype_t);
extern int bcm_client_eav_timestamp_get(int,bcm_port_t,uint32 *);
extern int bcm_client_eav_timesync_mac_get(int,bcm_mac_t);
extern int bcm_client_eav_timesync_mac_set(int,bcm_mac_t);
extern int bcm_client_ecn_responsive_protocol_get(int,uint8,int *);
extern int bcm_client_ecn_responsive_protocol_set(int,uint8,int);
extern int bcm_client_ecn_traffic_action_config_get(int,bcm_ecn_traffic_action_config_t *);
extern int bcm_client_ecn_traffic_action_config_set(int,bcm_ecn_traffic_action_config_t *);
extern int bcm_client_ecn_traffic_map_get(int,bcm_ecn_traffic_map_info_t *);
extern int bcm_client_ecn_traffic_map_set(int,bcm_ecn_traffic_map_info_t *);
#ifdef	INCLUDE_PTP
/* bcm_esmc_QL_SSM_map mapped to bcm_e_unavail */
/* bcm_esmc_SSM_QL_map mapped to bcm_e_unavail */
/* bcm_esmc_g781_option_get mapped to bcm_e_unavail */
/* bcm_esmc_g781_option_set mapped to bcm_e_unavail */
/* bcm_esmc_rx_callback_register mapped to bcm_e_unavail */
/* bcm_esmc_rx_callback_unregister mapped to bcm_e_unavail */
/* bcm_esmc_tunnel_get mapped to bcm_e_unavail */
/* bcm_esmc_tunnel_set mapped to bcm_e_unavail */
/* bcm_esmc_tx mapped to bcm_e_unavail */
#endif	/* INCLUDE_PTP */
#ifdef	INCLUDE_L3
extern int bcm_client_extender_cleanup(int);
extern int bcm_client_extender_encap_create(int,bcm_extender_encap_t *);
extern int bcm_client_extender_encap_destroy(int,bcm_gport_t *);
extern int bcm_client_extender_encap_destroy_all(int);
extern int bcm_client_extender_encap_get(int,bcm_extender_encap_t *);
/* bcm_extender_encap_t_init not dispatchable */
extern int bcm_client_extender_encap_traverse(int,bcm_extender_encap_traverse_cb,void *);
extern int bcm_client_extender_forward_add(int,bcm_extender_forward_t *);
extern int bcm_client_extender_forward_delete(int,bcm_extender_forward_t *);
extern int bcm_client_extender_forward_delete_all(int);
extern int bcm_client_extender_forward_get(int,bcm_extender_forward_t *);
/* bcm_extender_forward_t_init not dispatchable */
extern int bcm_client_extender_forward_traverse(int,bcm_extender_forward_traverse_cb,void *);
extern int bcm_client_extender_init(int);
extern int bcm_client_extender_port_add(int,bcm_extender_port_t *);
extern int bcm_client_extender_port_delete(int,bcm_gport_t);
extern int bcm_client_extender_port_delete_all(int);
extern int bcm_client_extender_port_get(int,bcm_extender_port_t *);
/* bcm_extender_port_t_init not dispatchable */
extern int bcm_client_extender_port_traverse(int,bcm_extender_port_traverse_cb,void *);
#endif	/* INCLUDE_L3 */
extern int bcm_client_fabric_action_create(int,bcm_fabric_action_info_t *,bcm_fabric_action_t *);
extern int bcm_client_fabric_action_destroy(int,bcm_fabric_action_t);
extern int bcm_client_fabric_action_destroy_all(int);
extern int bcm_client_fabric_action_get(int,bcm_fabric_action_t,bcm_fabric_action_info_t *);
/* bcm_fabric_action_info_t_init not dispatchable */
extern int bcm_client_fabric_action_traverse(int,bcm_fabric_action_traverse_cb,void *);
extern int bcm_client_fabric_bandwidth_profile_get(int,int,bcm_fabric_bandwidth_profile_t *);
extern int bcm_client_fabric_bandwidth_profile_set(int,int,bcm_fabric_bandwidth_profile_t *);
extern int bcm_client_fabric_calendar_active(int);
extern int bcm_client_fabric_calendar_get(int,int,int *,bcm_gport_t *,bcm_cos_queue_t *);
extern int bcm_client_fabric_calendar_max_get(int,int *);
extern int bcm_client_fabric_calendar_multi_get(int,int,int *,bcm_gport_t *,bcm_cos_queue_t *);
extern int bcm_client_fabric_calendar_multi_set(int,int,int *,bcm_gport_t *,bcm_cos_queue_t *);
extern int bcm_client_fabric_calendar_set(int,int,int,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_client_fabric_calendar_size_get(int,int *);
extern int bcm_client_fabric_calendar_size_set(int,int);
extern int bcm_client_fabric_config_discard_get(int,bcm_fabric_config_discard_t *);
extern int bcm_client_fabric_config_discard_set(int,bcm_fabric_config_discard_t *);
extern int bcm_client_fabric_congestion_size_get(int,bcm_module_t,int *);
extern int bcm_client_fabric_congestion_size_set(int,bcm_module_t,int);
extern int bcm_client_fabric_connection_bytes_get(int,int,int,bcm_fabric_connection_mode_t,int,int *);
extern int bcm_client_fabric_connection_interval_get(int,int,int *);
extern int bcm_client_fabric_connection_max_get(int,int,int *);
extern int bcm_client_fabric_control_get(int,bcm_fabric_control_t,int *);
extern int bcm_client_fabric_control_redundancy_register(int,bcm_fabric_control_redundancy_handler_t);
extern int bcm_client_fabric_control_redundancy_unregister(int,bcm_fabric_control_redundancy_handler_t);
extern int bcm_client_fabric_control_set(int,bcm_fabric_control_t,int);
extern int bcm_client_fabric_crossbar_connection_get(int,int,int,bcm_port_t,int,bcm_port_t *);
extern int bcm_client_fabric_crossbar_connection_set(int,int,int,bcm_port_t,int,bcm_port_t);
extern int bcm_client_fabric_crossbar_connection_status_get(int,int,int,bcm_fabric_connection_mode_t,uint64 *);
extern int bcm_client_fabric_crossbar_enable_get(int,uint64 *);
extern int bcm_client_fabric_crossbar_enable_set(int,uint64);
extern int bcm_client_fabric_crossbar_mapping_get(int,int,int,int,bcm_port_t *);
extern int bcm_client_fabric_crossbar_mapping_set(int,int,int,int,bcm_port_t);
extern int bcm_client_fabric_crossbar_status_get(int,uint64 *);
extern int bcm_client_fabric_distribution_control_get(int,bcm_fabric_distribution_t,bcm_fabric_distribution_control_t,int *);
extern int bcm_client_fabric_distribution_control_set(int,bcm_fabric_distribution_t,bcm_fabric_distribution_control_t,int);
extern int bcm_client_fabric_distribution_create(int,uint32,bcm_fabric_distribution_t *);
extern int bcm_client_fabric_distribution_destroy(int,bcm_fabric_distribution_t);
extern int bcm_client_fabric_distribution_get(int,bcm_fabric_distribution_t,int,int *,int *);
extern int bcm_client_fabric_distribution_set(int,bcm_fabric_distribution_t,int,int *);
extern int bcm_client_fabric_init(int);
extern int bcm_client_fabric_link_connectivity_status_get(int,int,bcm_fabric_link_connectivity_t *,int *);
extern int bcm_client_fabric_link_connectivity_status_single_get(int,bcm_port_t,bcm_fabric_link_connectivity_t *);
extern int bcm_client_fabric_link_control_get(int,bcm_port_t,bcm_fabric_link_control_t,int *);
extern int bcm_client_fabric_link_control_set(int,bcm_port_t,bcm_fabric_link_control_t,int);
extern int bcm_client_fabric_link_remote_pipe_mapping_get(int,bcm_port_t,bcm_fabric_link_remote_pipe_mapping_t *);
extern int bcm_client_fabric_link_remote_pipe_mapping_set(int,bcm_port_t,bcm_fabric_link_remote_pipe_mapping_t *);
/* bcm_fabric_link_remote_pipe_mapping_t_init not dispatchable */
extern int bcm_client_fabric_link_status_get(int,bcm_port_t,uint32 *,uint32 *);
extern int bcm_client_fabric_link_threshold_add(int,uint32,int *);
extern int bcm_client_fabric_link_threshold_delete(int,int);
extern int bcm_client_fabric_link_thresholds_attach(int,int,uint32,bcm_port_t *);
extern int bcm_client_fabric_link_thresholds_get(int,int,uint32,bcm_fabric_link_threshold_type_t *,int *);
extern int bcm_client_fabric_link_thresholds_pipe_get(int,int,bcm_fabric_pipe_t,uint32,uint32,bcm_fabric_link_threshold_type_t *,int *);
extern int bcm_client_fabric_link_thresholds_pipe_set(int,int,bcm_fabric_pipe_t,uint32,uint32,bcm_fabric_link_threshold_type_t *,int *);
extern int bcm_client_fabric_link_thresholds_retrieve(int,int,uint32,bcm_port_t *,uint32 *);
extern int bcm_client_fabric_link_thresholds_set(int,int,uint32,bcm_fabric_link_threshold_type_t *,int *);
extern int bcm_client_fabric_link_topology_get(int,bcm_module_t,int,int *,bcm_port_t *);
extern int bcm_client_fabric_link_topology_set(int,bcm_module_t,int,bcm_port_t *);
extern int bcm_client_fabric_modid_group_find(int,bcm_module_t,bcm_module_t *);
extern int bcm_client_fabric_modid_group_get(int,bcm_module_t,int,bcm_module_t *,int *);
extern int bcm_client_fabric_modid_group_set(int,bcm_module_t,int,bcm_module_t *);
extern int bcm_client_fabric_modid_local_mapping_get(int,bcm_module_t,bcm_module_t *);
extern int bcm_client_fabric_modid_local_mapping_set(int,bcm_module_t,bcm_module_t);
extern int bcm_client_fabric_multicast_get(int,bcm_multicast_t,uint32,int,int *,bcm_module_t *);
extern int bcm_client_fabric_multicast_multi_get(int,uint32,uint32,bcm_multicast_t *,bcm_fabric_module_vector_t *);
extern int bcm_client_fabric_multicast_multi_set(int,uint32,uint32,bcm_multicast_t *,bcm_fabric_module_vector_t *);
extern int bcm_client_fabric_multicast_set(int,bcm_multicast_t,uint32,uint32,bcm_module_t *);
extern int bcm_client_fabric_operating_interval_get(int,int,int *);
extern int bcm_client_fabric_packet_adjust_get(int,int,int *);
extern int bcm_client_fabric_packet_adjust_set(int,int,int);
extern int bcm_client_fabric_pcp_dest_mode_config_get(int,uint32,bcm_module_t,bcm_fabric_pcp_mode_config_t *);
extern int bcm_client_fabric_pcp_dest_mode_config_set(int,uint32,bcm_module_t,bcm_fabric_pcp_mode_config_t *);
extern int bcm_client_fabric_port_create(int,bcm_gport_t,int,uint32,bcm_gport_t *);
extern int bcm_client_fabric_port_destroy(int,bcm_gport_t);
extern int bcm_client_fabric_port_failover_get(int,bcm_gport_t,bcm_failover_t *,bcm_gport_t *);
extern int bcm_client_fabric_port_failover_set(int,bcm_gport_t,bcm_failover_t,bcm_gport_t);
extern int bcm_client_fabric_port_get(int,bcm_gport_t,uint32,bcm_gport_t *);
extern int bcm_client_fabric_predicate_action_create(int,bcm_fabric_predicate_action_info_t *,bcm_fabric_predicate_action_t *);
extern int bcm_client_fabric_predicate_action_destroy(int,bcm_fabric_predicate_action_t);
extern int bcm_client_fabric_predicate_action_destroy_all(int);
extern int bcm_client_fabric_predicate_action_get(int,bcm_fabric_predicate_action_t,bcm_fabric_predicate_action_info_t *);
/* bcm_fabric_predicate_action_info_t_init not dispatchable */
extern int bcm_client_fabric_predicate_action_traverse(int,bcm_fabric_predicate_action_traverse_cb,void *);
extern int bcm_client_fabric_predicate_create(int,bcm_fabric_predicate_info_t *,bcm_fabric_predicate_t *);
extern int bcm_client_fabric_predicate_destroy(int,bcm_fabric_predicate_t);
extern int bcm_client_fabric_predicate_destroy_all(int);
extern int bcm_client_fabric_predicate_get(int,bcm_fabric_predicate_t,bcm_fabric_predicate_info_t *);
/* bcm_fabric_predicate_info_t_init not dispatchable */
extern int bcm_client_fabric_predicate_traverse(int,bcm_fabric_predicate_traverse_cb,void *);
extern int bcm_client_fabric_priority_get(int,uint32,bcm_cos_t,bcm_color_t,int *);
extern int bcm_client_fabric_priority_set(int,uint32,bcm_cos_t,bcm_color_t,int);
extern int bcm_client_fabric_qsel_create(int,uint32,int,int,bcm_fabric_qsel_t *);
extern int bcm_client_fabric_qsel_destroy(int,bcm_fabric_qsel_t);
extern int bcm_client_fabric_qsel_destroy_all(int);
extern int bcm_client_fabric_qsel_entry_get(int,bcm_fabric_qsel_t,int,bcm_gport_t *,bcm_fabric_qsel_offset_t *);
extern int bcm_client_fabric_qsel_entry_multi_get(int,bcm_fabric_qsel_t,int,int,bcm_gport_t *,bcm_fabric_qsel_offset_t *);
extern int bcm_client_fabric_qsel_entry_multi_set(int,bcm_fabric_qsel_t,int,int,bcm_gport_t *,bcm_fabric_qsel_offset_t *);
extern int bcm_client_fabric_qsel_entry_set(int,bcm_fabric_qsel_t,int,bcm_gport_t,bcm_fabric_qsel_offset_t);
extern int bcm_client_fabric_qsel_entry_traverse(int,bcm_fabric_qsel_t,bcm_fabric_qsel_entry_traverse_cb,void *);
extern int bcm_client_fabric_qsel_get(int,bcm_fabric_qsel_t,uint32 *,int *,int *);
extern int bcm_client_fabric_qsel_offset_create(int,uint32,bcm_fabric_qsel_offset_t *);
extern int bcm_client_fabric_qsel_offset_destroy(int,bcm_fabric_qsel_offset_t);
extern int bcm_client_fabric_qsel_offset_destroy_all(int);
extern int bcm_client_fabric_qsel_offset_entry_get(int,bcm_fabric_qsel_offset_t,bcm_cos_t,int *);
extern int bcm_client_fabric_qsel_offset_entry_set(int,bcm_fabric_qsel_offset_t,bcm_cos_t,int);
extern int bcm_client_fabric_qsel_offset_entry_traverse(int,bcm_fabric_qsel_offset_t,bcm_fabric_qsel_offset_entry_traverse_cb,void *);
extern int bcm_client_fabric_qsel_offset_traverse(int,bcm_fabric_qsel_offset_traverse_cb,void *);
extern int bcm_client_fabric_qsel_traverse(int,bcm_fabric_qsel_traverse_cb,void *);
extern int bcm_client_fabric_reachability_status_get(int,int,int,uint32 *,int *);
extern int bcm_client_fabric_route_rx(int,uint32,uint32,uint32 *,uint32 *);
/* bcm_fabric_route_t_init not dispatchable */
extern int bcm_client_fabric_route_tx(int,uint32,bcm_fabric_route_t *,uint32,uint32 *);
extern int bcm_client_fabric_tdm_direct_routing_get(int,bcm_gport_t,bcm_fabric_tdm_direct_routing_t *);
extern int bcm_client_fabric_tdm_direct_routing_set(int,bcm_gport_t,bcm_fabric_tdm_direct_routing_t *);
extern int bcm_client_fabric_tdm_editing_get(int,bcm_gport_t,bcm_fabric_tdm_editing_t *);
extern int bcm_client_fabric_tdm_editing_set(int,bcm_gport_t,bcm_fabric_tdm_editing_t *);
/* bcm_fabric_tdm_editing_t_init not dispatchable */
extern int bcm_client_fabric_tdm_enable_get(int,int *);
extern int bcm_client_fabric_tdm_enable_set(int,int);
#ifdef	INCLUDE_L3
extern int bcm_client_failover_cleanup(int);
extern int bcm_client_failover_create(int,uint32,bcm_failover_t *);
extern int bcm_client_failover_destroy(int,bcm_failover_t);
/* bcm_failover_element_t_init not dispatchable */
extern int bcm_client_failover_get(int,bcm_failover_t,int *);
extern int bcm_client_failover_init(int);
#endif	/* INCLUDE_L3 */
extern int bcm_client_failover_ring_config_get(int,bcm_failover_ring_t *);
extern int bcm_client_failover_ring_config_set(int,bcm_failover_ring_t *);
/* bcm_failover_ring_t_init not dispatchable */
#ifdef	INCLUDE_L3
extern int bcm_client_failover_set(int,bcm_failover_t,int);
extern int bcm_client_failover_status_get(int,bcm_failover_element_t *,int *);
extern int bcm_client_failover_status_set(int,bcm_failover_element_t *,int);
#endif	/* INCLUDE_L3 */
#ifdef	INCLUDE_FCMAP
/* bcm_fcmap_diag_get mapped to bcm_e_unavail */
/* bcm_fcmap_event_enable_get mapped to bcm_e_unavail */
/* bcm_fcmap_event_enable_set mapped to bcm_e_unavail */
/* bcm_fcmap_event_register mapped to bcm_e_unavail */
/* bcm_fcmap_event_unregister mapped to bcm_e_unavail */
/* bcm_fcmap_linkfault_trigger_rc_get mapped to bcm_e_unavail */
/* bcm_fcmap_port_config_get mapped to bcm_e_unavail */
/* bcm_fcmap_port_config_selective_get mapped to bcm_e_unavail */
/* bcm_fcmap_port_config_selective_set mapped to bcm_e_unavail */
/* bcm_fcmap_port_config_set mapped to bcm_e_unavail */
/* bcm_fcmap_port_enable mapped to bcm_e_unavail */
/* bcm_fcmap_port_link_reset mapped to bcm_e_unavail */
/* bcm_fcmap_port_shutdown mapped to bcm_e_unavail */
/* bcm_fcmap_port_speed_set mapped to bcm_e_unavail */
/* bcm_fcmap_port_traverse mapped to bcm_e_unavail */
/* bcm_fcmap_stat_clear mapped to bcm_e_unavail */
/* bcm_fcmap_stat_get mapped to bcm_e_unavail */
/* bcm_fcmap_stat_get32 mapped to bcm_e_unavail */
/* bcm_fcmap_vlan_map_add mapped to bcm_e_unavail */
/* bcm_fcmap_vlan_map_delete mapped to bcm_e_unavail */
/* bcm_fcmap_vlan_map_get mapped to bcm_e_unavail */
#endif	/* INCLUDE_FCMAP */
extern int bcm_client_fcoe_cleanup(int);
extern int bcm_client_fcoe_control_vsan_get(int,bcm_fcoe_vsan_id_t,bcm_fcoe_vsan_control_t,int *);
extern int bcm_client_fcoe_control_vsan_set(int,bcm_fcoe_vsan_id_t,bcm_fcoe_vsan_control_t,int);
extern int bcm_client_fcoe_enable_set(int);
extern int bcm_client_fcoe_fc_header_type_get(int,uint32,uint8,bcm_fcoe_fc_header_type_t *);
extern int bcm_client_fcoe_fc_header_type_set(int,uint32,uint8,bcm_fcoe_fc_header_type_t);
extern int bcm_client_fcoe_init(int);
extern int bcm_client_fcoe_intf_config_get(int,uint32,bcm_if_t,bcm_fcoe_intf_config_t *);
extern int bcm_client_fcoe_intf_config_set(int,uint32,bcm_if_t,bcm_fcoe_intf_config_t *);
/* bcm_fcoe_intf_config_t_init not dispatchable */
extern int bcm_client_fcoe_route_add(int,bcm_fcoe_route_t *);
extern int bcm_client_fcoe_route_delete(int,bcm_fcoe_route_t *);
extern int bcm_client_fcoe_route_delete_all(int);
extern int bcm_client_fcoe_route_delete_by_interface(int,bcm_fcoe_route_t *);
extern int bcm_client_fcoe_route_delete_by_prefix(int,bcm_fcoe_route_t *);
extern int bcm_client_fcoe_route_find(int,bcm_fcoe_route_t *);
extern int bcm_client_fcoe_route_stat_attach(int,bcm_fcoe_route_t *,uint32);
extern int bcm_client_fcoe_route_stat_counter_get(int,bcm_fcoe_route_t *,bcm_fcoe_route_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_fcoe_route_stat_counter_set(int,bcm_fcoe_route_t *,bcm_fcoe_route_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_fcoe_route_stat_counter_sync_get(int,bcm_fcoe_route_t *,bcm_fcoe_route_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_fcoe_route_stat_detach(int,bcm_fcoe_route_t *);
extern int bcm_client_fcoe_route_stat_id_get(int,bcm_fcoe_route_t *,bcm_fcoe_route_stat_t,uint32 *);
/* bcm_fcoe_route_t_init not dispatchable */
extern int bcm_client_fcoe_route_traverse(int,uint32,bcm_fcoe_route_traverse_cb,void *);
/* bcm_fcoe_vsan_action_set_t_init not dispatchable */
extern int bcm_client_fcoe_vsan_create(int,uint32,bcm_fcoe_vsan_t *,bcm_fcoe_vsan_id_t *);
extern int bcm_client_fcoe_vsan_destroy(int,bcm_fcoe_vsan_id_t);
extern int bcm_client_fcoe_vsan_destroy_all(int);
extern int bcm_client_fcoe_vsan_get(int,bcm_fcoe_vsan_id_t,bcm_fcoe_vsan_t *);
extern int bcm_client_fcoe_vsan_set(int,bcm_fcoe_vsan_id_t,bcm_fcoe_vsan_t *);
extern int bcm_client_fcoe_vsan_stat_attach(int,bcm_fcoe_vsan_id_t,uint32);
extern int bcm_client_fcoe_vsan_stat_counter_get(int,bcm_fcoe_vsan_id_t,bcm_fcoe_vsan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_fcoe_vsan_stat_counter_set(int,bcm_fcoe_vsan_id_t,bcm_fcoe_vsan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_fcoe_vsan_stat_counter_sync_get(int,bcm_fcoe_vsan_id_t,bcm_fcoe_vsan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_fcoe_vsan_stat_detach(int,bcm_fcoe_vsan_id_t);
extern int bcm_client_fcoe_vsan_stat_id_get(int,bcm_fcoe_vsan_id_t,bcm_fcoe_vsan_stat_t,uint32 *);
/* bcm_fcoe_vsan_t_init not dispatchable */
extern int bcm_client_fcoe_vsan_translate_action_add(int,bcm_fcoe_vsan_translate_key_config_t *,bcm_fcoe_vsan_action_set_t *);
extern int bcm_client_fcoe_vsan_translate_action_delete(int,bcm_fcoe_vsan_translate_key_config_t *);
/* bcm_fcoe_vsan_translate_key_config_t_init not dispatchable */
extern int bcm_client_fcoe_vsan_traverse(int,uint32,bcm_fcoe_vsan_traverse_cb,void *);
/* bcm_fcoe_vsan_vft_t_init not dispatchable */
extern int bcm_client_fcoe_zone_add(int,bcm_fcoe_zone_entry_t *);
extern int bcm_client_fcoe_zone_delete(int,bcm_fcoe_zone_entry_t *);
extern int bcm_client_fcoe_zone_delete_all(int);
extern int bcm_client_fcoe_zone_delete_by_did(int,bcm_fcoe_zone_entry_t *);
extern int bcm_client_fcoe_zone_delete_by_sid(int,bcm_fcoe_zone_entry_t *);
extern int bcm_client_fcoe_zone_delete_by_vsan(int,bcm_fcoe_zone_entry_t *);
/* bcm_fcoe_zone_entry_t_init not dispatchable */
extern int bcm_client_fcoe_zone_get(int,bcm_fcoe_zone_entry_t *);
extern int bcm_client_fcoe_zone_traverse(int,uint32,bcm_fcoe_zone_traverse_cb,void *);
extern int bcm_client_field_action_add(int,bcm_field_entry_t,bcm_field_action_t,uint32,uint32);
extern int bcm_client_field_action_delete(int,bcm_field_entry_t,bcm_field_action_t,uint32,uint32);
extern int bcm_client_field_action_get(int,bcm_field_entry_t,bcm_field_action_t,uint32 *,uint32 *);
extern int bcm_client_field_action_mac_add(int,bcm_field_entry_t,bcm_field_action_t,bcm_mac_t);
extern int bcm_client_field_action_mac_get(int,bcm_field_entry_t,bcm_field_action_t,bcm_mac_t *);
extern int bcm_client_field_action_ports_add(int,bcm_field_entry_t,bcm_field_action_t,bcm_pbmp_t);
extern int bcm_client_field_action_ports_get(int,bcm_field_entry_t,bcm_field_action_t,bcm_pbmp_t *);
extern int bcm_client_field_action_remove(int,bcm_field_entry_t,bcm_field_action_t);
extern int bcm_client_field_action_remove_all(int,bcm_field_entry_t);
/* bcm_field_aset_t_init not dispatchable */
extern int bcm_client_field_control_get(int,bcm_field_control_t,uint32 *);
extern int bcm_client_field_control_set(int,bcm_field_control_t,uint32);
/* bcm_field_data_ethertype_t_init not dispatchable */
/* bcm_field_data_ip_protocol_t_init not dispatchable */
/* bcm_field_data_packet_format_t_init not dispatchable */
extern int bcm_client_field_data_qualifier_create(int,bcm_field_data_qualifier_t *);
extern int bcm_client_field_data_qualifier_destroy(int,int);
extern int bcm_client_field_data_qualifier_destroy_all(int);
extern int bcm_client_field_data_qualifier_ethertype_add(int,int,bcm_field_data_ethertype_t *);
extern int bcm_client_field_data_qualifier_ethertype_delete(int,int,bcm_field_data_ethertype_t *);
extern int bcm_client_field_data_qualifier_get(int,int,bcm_field_data_qualifier_t *);
extern int bcm_client_field_data_qualifier_ip_protocol_add(int,int,bcm_field_data_ip_protocol_t *);
extern int bcm_client_field_data_qualifier_ip_protocol_delete(int,int,bcm_field_data_ip_protocol_t *);
extern int bcm_client_field_data_qualifier_multi_get(int,int,int *,int *);
extern int bcm_client_field_data_qualifier_packet_format_add(int,int,bcm_field_data_packet_format_t *);
extern int bcm_client_field_data_qualifier_packet_format_delete(int,int,bcm_field_data_packet_format_t *);
/* bcm_field_data_qualifier_t_init not dispatchable */
extern int bcm_client_field_detach(int);
extern int bcm_client_field_direct_extraction_action_add(int,bcm_field_entry_t,bcm_field_extraction_action_t,int,bcm_field_extraction_field_t *);
extern int bcm_client_field_direct_extraction_action_get(int,bcm_field_entry_t,bcm_field_extraction_action_t *,int,bcm_field_extraction_field_t *,int *);
extern int bcm_client_field_entry_copy(int,bcm_field_entry_t,bcm_field_entry_t *);
extern int bcm_client_field_entry_copy_id(int,bcm_field_entry_t,bcm_field_entry_t);
extern int bcm_client_field_entry_create(int,bcm_field_group_t,bcm_field_entry_t *);
extern int bcm_client_field_entry_create_id(int,bcm_field_group_t,bcm_field_entry_t);
extern int bcm_client_field_entry_destroy(int,bcm_field_entry_t);
extern int bcm_client_field_entry_destroy_all(int);
#ifdef	BROADCOM_DEBUG
/* bcm_field_entry_dump mapped to bcm_e_unavail */
#endif	/* BROADCOM_DEBUG */
extern int bcm_client_field_entry_enable_get(int,bcm_field_entry_t,int *);
extern int bcm_client_field_entry_enable_set(int,bcm_field_entry_t,int);
extern int bcm_client_field_entry_install(int,bcm_field_entry_t);
extern int bcm_client_field_entry_multi_get(int,bcm_field_group_t,int,bcm_field_entry_t *,int *);
/* bcm_field_entry_oper_t_init not dispatchable */
extern int bcm_client_field_entry_operation(int,bcm_field_entry_oper_t *);
extern int bcm_client_field_entry_policer_attach(int,bcm_field_entry_t,int,bcm_policer_t);
extern int bcm_client_field_entry_policer_detach(int,bcm_field_entry_t,int);
extern int bcm_client_field_entry_policer_detach_all(int,bcm_field_entry_t);
extern int bcm_client_field_entry_policer_get(int,bcm_field_entry_t,int,bcm_policer_t *);
extern int bcm_client_field_entry_prio_get(int,bcm_field_entry_t,int *);
extern int bcm_client_field_entry_prio_set(int,bcm_field_entry_t,int);
extern int bcm_client_field_entry_reinstall(int,bcm_field_entry_t);
extern int bcm_client_field_entry_remove(int,bcm_field_entry_t);
extern int bcm_client_field_entry_stat_attach(int,bcm_field_entry_t,int);
extern int bcm_client_field_entry_stat_detach(int,bcm_field_entry_t,int);
extern int bcm_client_field_entry_stat_get(int,bcm_field_entry_t,int *);
/* bcm_field_extraction_action_t_init not dispatchable */
/* bcm_field_extraction_field_t_init not dispatchable */
extern int bcm_client_field_group_action_get(int,bcm_field_group_t,bcm_field_aset_t *);
extern int bcm_client_field_group_action_set(int,bcm_field_group_t,bcm_field_aset_t);
extern int bcm_client_field_group_compress(int,bcm_field_group_t);
extern int bcm_client_field_group_config_create(int,bcm_field_group_config_t *);
/* bcm_field_group_config_t_init not dispatchable */
extern int bcm_client_field_group_create(int,bcm_field_qset_t,int,bcm_field_group_t *);
extern int bcm_client_field_group_create_id(int,bcm_field_qset_t,int,bcm_field_group_t);
extern int bcm_client_field_group_create_mode(int,bcm_field_qset_t,int,bcm_field_group_mode_t,bcm_field_group_t *);
extern int bcm_client_field_group_create_mode_id(int,bcm_field_qset_t,int,bcm_field_group_mode_t,bcm_field_group_t);
extern int bcm_client_field_group_destroy(int,bcm_field_group_t);
#ifdef	BROADCOM_DEBUG
/* bcm_field_group_dump mapped to bcm_e_unavail */
#endif	/* BROADCOM_DEBUG */
extern int bcm_client_field_group_enable_get(int,bcm_field_group_t,int *);
extern int bcm_client_field_group_enable_set(int,bcm_field_group_t,int);
extern int bcm_client_field_group_expansion_enable_get(int,bcm_field_group_t,int *);
extern int bcm_client_field_group_expansion_enable_set(int,bcm_field_group_t,int);
extern int bcm_client_field_group_flush(int,bcm_field_group_t);
extern int bcm_client_field_group_get(int,bcm_field_group_t,bcm_field_qset_t *);
extern int bcm_client_field_group_install(int,bcm_field_group_t);
extern int bcm_client_field_group_mode_get(int,bcm_field_group_t,bcm_field_group_mode_t *);
extern int bcm_client_field_group_port_create_mode(int,bcm_port_t,bcm_field_qset_t,int,bcm_field_group_mode_t,bcm_field_group_t *);
extern int bcm_client_field_group_port_create_mode_id(int,bcm_port_t,bcm_field_qset_t,int,bcm_field_group_mode_t,bcm_field_group_t);
extern int bcm_client_field_group_ports_create_mode(int,bcm_pbmp_t,bcm_field_qset_t,int,bcm_field_group_mode_t,bcm_field_group_t *);
extern int bcm_client_field_group_ports_create_mode_id(int,bcm_pbmp_t,bcm_field_qset_t,int,bcm_field_group_mode_t,bcm_field_group_t);
extern int bcm_client_field_group_presel_get(int,bcm_field_group_t,bcm_field_presel_set_t *);
extern int bcm_client_field_group_presel_set(int,bcm_field_group_t,bcm_field_presel_set_t *);
extern int bcm_client_field_group_priority_get(int,bcm_field_group_t,int *);
extern int bcm_client_field_group_priority_set(int,bcm_field_group_t,int);
extern int bcm_client_field_group_remove(int,bcm_field_group_t);
extern int bcm_client_field_group_set(int,bcm_field_group_t,bcm_field_qset_t);
extern int bcm_client_field_group_status_get(int,bcm_field_group_t,bcm_field_group_status_t *);
/* bcm_field_group_status_t_init not dispatchable */
extern int bcm_client_field_group_traverse(int,bcm_field_group_traverse_cb,void *);
extern int bcm_client_field_group_wlan_create_mode(int,bcm_field_qset_t,int,bcm_field_group_mode_t,bcm_field_group_t *);
extern int bcm_client_field_group_wlan_create_mode_id(int,bcm_field_qset_t,int,bcm_field_group_mode_t,bcm_field_group_t);
extern int bcm_client_field_init(int);
/* bcm_field_llc_header_t_init not dispatchable */
extern int bcm_client_field_presel_create(int,bcm_field_presel_t *);
extern int bcm_client_field_presel_create_id(int,bcm_field_presel_t);
extern int bcm_client_field_presel_destroy(int,bcm_field_presel_t);
/* bcm_field_presel_set_t_init not dispatchable */
extern int bcm_client_field_qset_data_qualifier_add(int,bcm_field_qset_t *,int);
extern int bcm_client_field_qset_data_qualifier_delete(int,bcm_field_qset_t *,int);
extern int bcm_client_field_qset_data_qualifier_get(int,bcm_field_qset_t,int,int *,int *);
extern int bcm_client_field_qset_id_multi_delete(int,bcm_field_qualify_t,int,int *,bcm_field_qset_t *);
extern int bcm_client_field_qset_id_multi_get(int,bcm_field_qset_t,bcm_field_qualify_t,int,int *,int *);
extern int bcm_client_field_qset_id_multi_set(int,bcm_field_qualify_t,int,int *,bcm_field_qset_t *);
/* bcm_field_qset_t_init not dispatchable */
extern int bcm_client_field_qualifier_delete(int,bcm_field_entry_t,bcm_field_qualify_t);
extern int bcm_client_field_qualify_AppType(int,bcm_field_entry_t,bcm_field_AppType_t);
extern int bcm_client_field_qualify_AppType_get(int,bcm_field_entry_t,bcm_field_AppType_t *);
extern int bcm_client_field_qualify_ArpOpcode(int,bcm_field_entry_t,bcm_field_ArpOpcode_t);
extern int bcm_client_field_qualify_ArpOpcode_get(int,bcm_field_entry_t,bcm_field_ArpOpcode_t *);
extern int bcm_client_field_qualify_ArpSenderIp4(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_ArpSenderIp4_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_ArpTargetIp4(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_ArpTargetIp4_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_BigIcmpCheck(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_BigIcmpCheck_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_BypassFilter(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_BypassFilter32(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_BypassFilter32_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_BypassFilter_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_BypassSrcMacFilter(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_BypassSrcMacFilter_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_CascadedKeyValue(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_CascadedKeyValue_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_ClassId(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ClassId_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_CnTag(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_CnTag_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_Color(int,bcm_field_entry_t,uint8);
extern int bcm_client_field_qualify_Color_get(int,bcm_field_entry_t,uint8 *);
extern int bcm_client_field_qualify_CpuQueue(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_CpuQueue_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_DSCP(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_DSCP_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_Decap(int,bcm_field_entry_t,bcm_field_decap_t);
extern int bcm_client_field_qualify_Dhcp(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_Dhcp_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_DosAttack(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_DosAttack_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_Drop(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_Drop_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_DstClassField(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_DstClassField_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_DstClassL2(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_DstClassL2_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_DstClassL3(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_DstClassL3_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_DstGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_DstGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_DstHiGig(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_DstHiGig_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_DstIp(int,bcm_field_entry_t,bcm_ip_t,bcm_ip_t);
extern int bcm_client_field_qualify_DstIp6(int,bcm_field_entry_t,bcm_ip6_t,bcm_ip6_t);
extern int bcm_client_field_qualify_DstIp6High(int,bcm_field_entry_t,bcm_ip6_t,bcm_ip6_t);
extern int bcm_client_field_qualify_DstIp6High_get(int,bcm_field_entry_t,bcm_ip6_t *,bcm_ip6_t *);
extern int bcm_client_field_qualify_DstIp6Low(int,bcm_field_entry_t,bcm_ip6_t,bcm_ip6_t);
extern int bcm_client_field_qualify_DstIp6Low_get(int,bcm_field_entry_t,bcm_ip6_t *,bcm_ip6_t *);
extern int bcm_client_field_qualify_DstIp6_get(int,bcm_field_entry_t,bcm_ip6_t *,bcm_ip6_t *);
extern int bcm_client_field_qualify_DstIpLocal(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_DstIpLocal_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_DstIp_get(int,bcm_field_entry_t,bcm_ip_t *,bcm_ip_t *);
extern int bcm_client_field_qualify_DstL3Egress(int,bcm_field_entry_t,bcm_if_t);
extern int bcm_client_field_qualify_DstL3EgressNextHops(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_DstL3EgressNextHops_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_DstL3Egress_get(int,bcm_field_entry_t,bcm_if_t *);
extern int bcm_client_field_qualify_DstMac(int,bcm_field_entry_t,bcm_mac_t,bcm_mac_t);
extern int bcm_client_field_qualify_DstMac_get(int,bcm_field_entry_t,bcm_mac_t *,bcm_mac_t *);
extern int bcm_client_field_qualify_DstMimGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_DstMimGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_DstMplsGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_DstMplsGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_DstMulticastGroup(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_DstMulticastGroup_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_DstMultipath(int,bcm_field_entry_t,bcm_if_t);
extern int bcm_client_field_qualify_DstMultipath_get(int,bcm_field_entry_t,bcm_if_t *);
extern int bcm_client_field_qualify_DstNivGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_DstNivGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_DstPort(int,bcm_field_entry_t,bcm_module_t,bcm_module_t,bcm_port_t,bcm_port_t);
extern int bcm_client_field_qualify_DstPort_get(int,bcm_field_entry_t,bcm_module_t *,bcm_module_t *,bcm_port_t *,bcm_port_t *);
extern int bcm_client_field_qualify_DstRpfGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_DstRpfGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_DstTrunk(int,bcm_field_entry_t,bcm_trunk_t,bcm_trunk_t);
extern int bcm_client_field_qualify_DstTrunk_get(int,bcm_field_entry_t,bcm_trunk_t *,bcm_trunk_t *);
extern int bcm_client_field_qualify_DstVxlanGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_DstVxlanGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_DstWlanGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_DstWlanGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_ECid(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_ECid_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_ETag(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_ETag_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_EcnValue(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_EcnValue_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_EgressClass(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_EgressClassL2Gre(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_EgressClassL2Gre_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_EgressClassL3Interface(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_EgressClassL3Interface_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_EgressClassTrill(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_EgressClassTrill_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_EgressClassWlan(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_EgressClassWlan_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_EgressClass_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_EqualL4Port(int,bcm_field_entry_t,uint32);
extern int bcm_client_field_qualify_EqualL4Port_get(int,bcm_field_entry_t,uint32 *);
extern int bcm_client_field_qualify_EtherType(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_EtherType_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_ExtensionHeader2Type(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ExtensionHeader2Type_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_ExtensionHeaderSubCode(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ExtensionHeaderSubCode_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_ExtensionHeaderType(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ExtensionHeaderType_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_ExternalHit0(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ExternalHit0_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_ExternalHit1(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ExternalHit1_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_ExternalHit2(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ExternalHit2_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_ExternalHit3(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ExternalHit3_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_ExternalValue0(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_ExternalValue0_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_ExternalValue1(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_ExternalValue1_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_ExternalValue2(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_ExternalValue2_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_ExternalValue3(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_ExternalValue3_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_FabricQueueTag(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_FabricQueueTag_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_FcoeSOF(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FcoeSOF_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FcoeVersionIsZero(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FcoeVersionIsZero_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_Fhei(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_FheiSize(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_FheiSize_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_Fhei_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_FibreChanCSCtl(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanCSCtl_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FibreChanDFCtl(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanDFCtl_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FibreChanDstId(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_FibreChanDstId_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_FibreChanFCtl(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_FibreChanFCtl_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_FibreChanInner(int,bcm_field_entry_t,bcm_field_FibreChan_t);
extern int bcm_client_field_qualify_FibreChanInner_get(int,bcm_field_entry_t,bcm_field_FibreChan_t *);
extern int bcm_client_field_qualify_FibreChanOuter(int,bcm_field_entry_t,bcm_field_FibreChan_t);
extern int bcm_client_field_qualify_FibreChanOuter_get(int,bcm_field_entry_t,bcm_field_FibreChan_t *);
extern int bcm_client_field_qualify_FibreChanRCtl(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanRCtl_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FibreChanSrcBindCheck(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanSrcBindCheck_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FibreChanSrcFpmaCheck(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanSrcFpmaCheck_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FibreChanSrcId(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_FibreChanSrcId_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_FibreChanType(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanType_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FibreChanVFTFabricId(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_FibreChanVFTFabricId_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_FibreChanVFTHopCount(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanVFTHopCount_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FibreChanVFTPri(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanVFTPri_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FibreChanVFTValid(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanVFTValid_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FibreChanVFTVersion(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanVFTVersion_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FibreChanVFTVsanId(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_FibreChanVFTVsanId_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_FibreChanVFTVsanPri(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanVFTVsanPri_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FibreChanZoneCheck(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_FibreChanZoneCheck_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_FlowId(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_FlowId_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_ForwardCopy(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ForwardCopy_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_ForwardingHeaderOffset(int,bcm_field_entry_t,bcm_field_data_offset_base_t,uint32,uint32);
extern int bcm_client_field_qualify_ForwardingHeaderOffset_get(int,bcm_field_entry_t,bcm_field_data_offset_base_t *,uint32 *,uint32 *);
extern int bcm_client_field_qualify_ForwardingType(int,bcm_field_entry_t,bcm_field_ForwardingType_t);
extern int bcm_client_field_qualify_ForwardingType_get(int,bcm_field_entry_t,bcm_field_ForwardingType_t *);
extern int bcm_client_field_qualify_ForwardingVlanId(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_ForwardingVlanId_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_ForwardingVlanValid(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ForwardingVlanValid_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_GenericAssociatedChannelLabelValid(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_GenericAssociatedChannelLabelValid_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_HeaderFormat(int,bcm_field_entry_t,bcm_field_header_format_t);
extern int bcm_client_field_qualify_HeaderFormatSet(int,bcm_field_entry_t,bcm_field_header_format_set_t);
extern int bcm_client_field_qualify_HeaderFormatSet_get(int,bcm_field_entry_t,bcm_field_header_format_set_t *);
extern int bcm_client_field_qualify_HeaderFormat_get(int,bcm_field_entry_t,bcm_field_header_format_t *);
extern int bcm_client_field_qualify_HiGig(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_HiGigProxy(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_HiGigProxy_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_HiGig_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_ISid(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_ISid_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_IcmpError(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IcmpError_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IcmpTypeCode(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_IcmpTypeCode_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_IgmpTypeMaxRespTime(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_IgmpTypeMaxRespTime_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_InPort(int,bcm_field_entry_t,bcm_port_t,bcm_port_t);
extern int bcm_client_field_qualify_InPort_get(int,bcm_field_entry_t,bcm_port_t *,bcm_port_t *);
extern int bcm_client_field_qualify_InPorts(int,bcm_field_entry_t,bcm_pbmp_t,bcm_pbmp_t);
extern int bcm_client_field_qualify_InPorts_get(int,bcm_field_entry_t,bcm_pbmp_t *,bcm_pbmp_t *);
extern int bcm_client_field_qualify_InVPort(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_InVPort32(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_InVPort32_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_InVPort_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IncomingIpIfClass(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_IncomingIpIfClass_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_IngressClassField(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_IngressClassField_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_IngressECid(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_IngressECid_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_IngressInterfaceClassPort(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_IngressInterfaceClassPort_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_IngressStpState(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IngressStpState_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IngressVPortBridgeDisable(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IngressVPortBridgeDisable_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_InnerDSCP(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_InnerDSCP_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_InnerDstIp(int,bcm_field_entry_t,bcm_ip_t,bcm_ip_t);
extern int bcm_client_field_qualify_InnerDstIp6(int,bcm_field_entry_t,bcm_ip6_t,bcm_ip6_t);
extern int bcm_client_field_qualify_InnerDstIp6High(int,bcm_field_entry_t,bcm_ip6_t,bcm_ip6_t);
extern int bcm_client_field_qualify_InnerDstIp6High_get(int,bcm_field_entry_t,bcm_ip6_t *,bcm_ip6_t *);
extern int bcm_client_field_qualify_InnerDstIp6_get(int,bcm_field_entry_t,bcm_ip6_t *,bcm_ip6_t *);
extern int bcm_client_field_qualify_InnerDstIp_get(int,bcm_field_entry_t,bcm_ip_t *,bcm_ip_t *);
extern int bcm_client_field_qualify_InnerDstMac(int,bcm_field_entry_t,bcm_mac_t,bcm_mac_t);
extern int bcm_client_field_qualify_InnerDstMac_get(int,bcm_field_entry_t,bcm_mac_t *,bcm_mac_t *);
extern int bcm_client_field_qualify_InnerEtherType(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_InnerEtherType_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_InnerIp6FlowLabel(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_InnerIp6FlowLabel_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_InnerIp6HopLimit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_InnerIp6HopLimit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_InnerIp6NextHeader(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_InnerIp6NextHeader_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_InnerIpFrag(int,bcm_field_entry_t,bcm_field_IpFrag_t);
extern int bcm_client_field_qualify_InnerIpFrag_get(int,bcm_field_entry_t,bcm_field_IpFrag_t *);
extern int bcm_client_field_qualify_InnerIpProtocol(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_InnerIpProtocolCommon(int,bcm_field_entry_t,bcm_field_IpProtocolCommon_t);
extern int bcm_client_field_qualify_InnerIpProtocolCommon_get(int,bcm_field_entry_t,bcm_field_IpProtocolCommon_t *);
extern int bcm_client_field_qualify_InnerIpProtocol_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_InnerIpType(int,bcm_field_entry_t,bcm_field_IpType_t);
extern int bcm_client_field_qualify_InnerIpType_get(int,bcm_field_entry_t,bcm_field_IpType_t *);
extern int bcm_client_field_qualify_InnerL4DstPort(int,bcm_field_entry_t,bcm_l4_port_t,bcm_l4_port_t);
extern int bcm_client_field_qualify_InnerL4DstPort_get(int,bcm_field_entry_t,bcm_l4_port_t *,bcm_l4_port_t *);
extern int bcm_client_field_qualify_InnerL4SrcPort(int,bcm_field_entry_t,bcm_l4_port_t,bcm_l4_port_t);
extern int bcm_client_field_qualify_InnerL4SrcPort_get(int,bcm_field_entry_t,bcm_l4_port_t *,bcm_l4_port_t *);
extern int bcm_client_field_qualify_InnerSrcIp(int,bcm_field_entry_t,bcm_ip_t,bcm_ip_t);
extern int bcm_client_field_qualify_InnerSrcIp6(int,bcm_field_entry_t,bcm_ip6_t,bcm_ip6_t);
extern int bcm_client_field_qualify_InnerSrcIp6High(int,bcm_field_entry_t,bcm_ip6_t,bcm_ip6_t);
extern int bcm_client_field_qualify_InnerSrcIp6High_get(int,bcm_field_entry_t,bcm_ip6_t *,bcm_ip6_t *);
extern int bcm_client_field_qualify_InnerSrcIp6_get(int,bcm_field_entry_t,bcm_ip6_t *,bcm_ip6_t *);
extern int bcm_client_field_qualify_InnerSrcIp_get(int,bcm_field_entry_t,bcm_ip_t *,bcm_ip_t *);
extern int bcm_client_field_qualify_InnerSrcMac(int,bcm_field_entry_t,bcm_mac_t,bcm_mac_t);
extern int bcm_client_field_qualify_InnerSrcMac_get(int,bcm_field_entry_t,bcm_mac_t *,bcm_mac_t *);
extern int bcm_client_field_qualify_InnerTos(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_InnerTos_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_InnerTpid(int,bcm_field_entry_t,uint16);
extern int bcm_client_field_qualify_InnerTpid_get(int,bcm_field_entry_t,uint16 *);
extern int bcm_client_field_qualify_InnerTtl(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_InnerTtl_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_InnerVlan(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_InnerVlanActionRange(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_InnerVlanActionRange_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_InnerVlanCfi(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_InnerVlanCfi_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_InnerVlanId(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_InnerVlanId_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_InnerVlanPri(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_InnerVlanPri_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_InnerVlan_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_IntCongestionNotification(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IntCongestionNotification_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IntPriority(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IntPriority_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_InterfaceClassL2(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_InterfaceClassL2_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_InterfaceClassL3(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_InterfaceClassL3_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_InterfaceClassPort(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_InterfaceClassPort_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_InterfaceClassProcessingPort(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_InterfaceClassProcessingPort_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_InterfaceClassVPort(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_InterfaceClassVPort_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_Ip6FlowLabel(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_Ip6FlowLabel_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_Ip6HopLimit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_Ip6HopLimit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_Ip6NextHeader(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_Ip6NextHeader_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_Ip6TrafficClass(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_Ip6TrafficClass_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IpAddrsNormalized(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IpAddrsNormalized_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IpAuth(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IpAuth_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IpFlags(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IpFlags_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IpFrag(int,bcm_field_entry_t,bcm_field_IpFrag_t);
extern int bcm_client_field_qualify_IpFrag_get(int,bcm_field_entry_t,bcm_field_IpFrag_t *);
extern int bcm_client_field_qualify_IpInfo(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_IpInfo_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_IpProtocol(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IpProtocolCommon(int,bcm_field_entry_t,bcm_field_IpProtocolCommon_t);
extern int bcm_client_field_qualify_IpProtocolCommon_get(int,bcm_field_entry_t,bcm_field_IpProtocolCommon_t *);
extern int bcm_client_field_qualify_IpProtocol_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IpTunnelHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IpTunnelHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IpTunnelValue(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_IpTunnelValue_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_IpType(int,bcm_field_entry_t,bcm_field_IpType_t);
extern int bcm_client_field_qualify_IpType_get(int,bcm_field_entry_t,bcm_field_IpType_t *);
extern int bcm_client_field_qualify_IpmcHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IpmcHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IpmcStarGroupHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IpmcStarGroupHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_IpmcStarGroupValue(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_IpmcStarGroupValue_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_IpmcValue(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_IpmcValue_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_IsEqualValue(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_IsEqualValue_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L2CacheHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L2CacheHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L2DestHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L2DestHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L2DestValue(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_L2DestValue_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_L2Format(int,bcm_field_entry_t,bcm_field_L2Format_t);
extern int bcm_client_field_qualify_L2Format_get(int,bcm_field_entry_t,bcm_field_L2Format_t *);
extern int bcm_client_field_qualify_L2GreFlowId(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L2GreFlowId_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L2GreProtocolType(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_L2GreProtocolType_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_L2GreSrcIpHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L2GreSrcIpHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L2GreVfiHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L2GreVfiHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L2GreVsid(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_L2GreVsid_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_L2Learn(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L2Learn_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L2PayloadFirstEightBytes(int,bcm_field_entry_t,uint32,uint32,uint32,uint32);
extern int bcm_client_field_qualify_L2PayloadFirstEightBytes_get(int,bcm_field_entry_t,uint32 *,uint32 *,uint32 *,uint32 *);
extern int bcm_client_field_qualify_L2SrcHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L2SrcHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L2SrcStatic(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L2SrcStatic_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L2SrcValue(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_L2SrcValue_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_L2StationMove(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L2StationMove_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L3DestHostHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L3DestHostHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L3DestRouteHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L3DestRouteHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L3DestRouteValue(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_L3DestRouteValue_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_L3Ingress(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_L3Ingress_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_L3Routable(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L3Routable_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L3SrcBind(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L3SrcBind_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L3SrcHostHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L3SrcHostHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L3SrcRouteHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L3SrcRouteHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L3SrcRouteValue(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_L3SrcRouteValue_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_L4DstPort(int,bcm_field_entry_t,bcm_l4_port_t,bcm_l4_port_t);
extern int bcm_client_field_qualify_L4DstPort_get(int,bcm_field_entry_t,bcm_l4_port_t *,bcm_l4_port_t *);
extern int bcm_client_field_qualify_L4PortRangeCheck(int,bcm_field_entry_t,bcm_field_range_t,int);
extern int bcm_client_field_qualify_L4PortRangeCheck_get(int,bcm_field_entry_t,int,bcm_field_range_t *,int *,int *);
extern int bcm_client_field_qualify_L4Ports(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_L4Ports_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_L4SrcPort(int,bcm_field_entry_t,bcm_l4_port_t,bcm_l4_port_t);
extern int bcm_client_field_qualify_L4SrcPort_get(int,bcm_field_entry_t,bcm_l4_port_t *,bcm_l4_port_t *);
extern int bcm_client_field_qualify_LearnSrcMac(int,bcm_field_entry_t,bcm_mac_t,bcm_mac_t);
extern int bcm_client_field_qualify_LearnSrcMac_get(int,bcm_field_entry_t,bcm_mac_t *,bcm_mac_t *);
extern int bcm_client_field_qualify_LearnSrcPort(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_LearnSrcPort_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_LearnVlan(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_LearnVlan_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_Llc(int,bcm_field_entry_t,bcm_field_llc_header_t,bcm_field_llc_header_t);
extern int bcm_client_field_qualify_Llc_get(int,bcm_field_entry_t,bcm_field_llc_header_t *,bcm_field_llc_header_t *);
extern int bcm_client_field_qualify_LlidValue(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_LlidValue_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_Loopback(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_LoopbackType(int,bcm_field_entry_t,bcm_field_LoopbackType_t);
extern int bcm_client_field_qualify_LoopbackType_get(int,bcm_field_entry_t,bcm_field_LoopbackType_t *);
extern int bcm_client_field_qualify_Loopback_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MHOpcode(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MHOpcode_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MacAddrsNormalized(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MacAddrsNormalized_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MimSrcGportHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MimSrcGportHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MimVfiHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MimVfiHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MimVlanCfi(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MimVlanCfi_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MimVlanPri(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MimVlanPri_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MirrorCopy(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MirrorCopy_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MirrorEgressDisabled(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MirrorEgressDisabled_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsBos(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsBos_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsControlWord(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_MplsControlWordValid(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsControlWordValid_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsControlWord_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_MplsForwardingLabel(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_MplsForwardingLabelAction(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsForwardingLabelAction32(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_MplsForwardingLabelAction32_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_MplsForwardingLabelAction_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsForwardingLabelBos(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsForwardingLabelBos_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsForwardingLabelExp(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsForwardingLabelExp_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsForwardingLabelId(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_MplsForwardingLabelId_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_MplsForwardingLabelPayload(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_MplsForwardingLabelPayload_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_MplsForwardingLabelTtl(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsForwardingLabelTtl_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsForwardingLabel_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_MplsLabel1(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_MplsLabel1Bos(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsLabel1Bos_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsLabel1Exp(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsLabel1Exp_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsLabel1Hit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsLabel1Hit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsLabel1Id(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_MplsLabel1Id_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_MplsLabel1Ttl(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsLabel1Ttl_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsLabel1_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_MplsLabel2(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_MplsLabel2Bos(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsLabel2Bos_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsLabel2Exp(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsLabel2Exp_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsLabel2Hit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsLabel2Hit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsLabel2Id(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_MplsLabel2Id_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_MplsLabel2Ttl(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsLabel2Ttl_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsLabel2_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_MplsLabel3(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_MplsLabel3Bos(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsLabel3Bos_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsLabel3Exp(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsLabel3Exp_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsLabel3Id(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_MplsLabel3Id_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_MplsLabel3Ttl(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsLabel3Ttl_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsLabel3_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_MplsOuterLabelPop(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsOuterLabelPop_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsStationHitTunnelUnterminated(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsStationHitTunnelUnterminated_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsTerminated(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsTerminatedHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MplsTerminatedHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MplsTerminatedValue(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_MplsTerminatedValue_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_MplsTerminated_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_MyStationHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_MyStationHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_NatDstRealmId(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_NatDstRealmId_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_NatNeeded(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_NatNeeded_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_NatSrcRealmId(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_NatSrcRealmId_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_NativeVSwitch(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_NativeVSwitchValid(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_NativeVSwitchValid_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_NativeVSwitch_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_OamMdl(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_OamMdl_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_OutPort(int,bcm_field_entry_t,bcm_port_t,bcm_port_t);
extern int bcm_client_field_qualify_OutPort_get(int,bcm_field_entry_t,bcm_port_t *,bcm_port_t *);
extern int bcm_client_field_qualify_OutPorts(int,bcm_field_entry_t,bcm_pbmp_t,bcm_pbmp_t);
extern int bcm_client_field_qualify_OutPorts_get(int,bcm_field_entry_t,bcm_pbmp_t *,bcm_pbmp_t *);
extern int bcm_client_field_qualify_OutVPort(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_OutVPort32(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_OutVPort32_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_OutVPort_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_OuterTpid(int,bcm_field_entry_t,uint16);
extern int bcm_client_field_qualify_OuterTpid_get(int,bcm_field_entry_t,uint16 *);
extern int bcm_client_field_qualify_OuterVlan(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_OuterVlanActionRange(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_OuterVlanActionRange_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_OuterVlanCfi(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_OuterVlanCfi_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_OuterVlanId(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_OuterVlanId_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_OuterVlanPri(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_OuterVlanPri_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_OuterVlan_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_PacketLengthRangeCheck(int,bcm_field_entry_t,bcm_field_range_t,int);
extern int bcm_client_field_qualify_PacketLengthRangeCheck_get(int,bcm_field_entry_t,int,bcm_field_range_t *,int *,int *);
extern int bcm_client_field_qualify_PacketRes(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_PacketRes_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_PacketSize(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_PacketSize_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_PacketTerminatedBytes(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_PacketTerminatedBytes_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_PolicerIntPrio(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_PolicerIntPrio_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_PortOrientation(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_PortOrientation_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_Ptch(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_Ptch_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_RangeCheck(int,bcm_field_entry_t,bcm_field_range_t,int);
extern int bcm_client_field_qualify_RangeCheck_get(int,bcm_field_entry_t,int,bcm_field_range_t *,int *,int *);
extern int bcm_client_field_qualify_RecoverableDrop(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_RecoverableDrop_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_RepCopy(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_RepCopy_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_ReplicantAny(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ReplicantAny_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_ReplicantFirst(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_ReplicantFirst_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_RouterAlertLabelValid(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_RouterAlertLabelValid_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_Rtag7AHashLower(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_Rtag7AHashLower_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_Rtag7AHashUpper(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_Rtag7AHashUpper_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_Rtag7BHashLower(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_Rtag7BHashLower_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_Rtag7BHashUpper(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_Rtag7BHashUpper_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_RxTrapCode(int,bcm_field_entry_t,bcm_rx_trap_t);
extern int bcm_client_field_qualify_RxTrapCodeForSnoop(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_RxTrapCodeForSnoop_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_RxTrapCode_get(int,bcm_field_entry_t,bcm_rx_trap_t *);
extern int bcm_client_field_qualify_RxTrapData(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_RxTrapData_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_Snap(int,bcm_field_entry_t,bcm_field_snap_header_t,bcm_field_snap_header_t);
extern int bcm_client_field_qualify_Snap_get(int,bcm_field_entry_t,bcm_field_snap_header_t *,bcm_field_snap_header_t *);
extern int bcm_client_field_qualify_SnoopCopy(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_SnoopCopy_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_SrcClassField(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_SrcClassField_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_SrcClassL2(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_SrcClassL2_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_SrcClassL3(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_SrcClassL3_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_SrcGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_SrcGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_SrcIp(int,bcm_field_entry_t,bcm_ip_t,bcm_ip_t);
extern int bcm_client_field_qualify_SrcIp6(int,bcm_field_entry_t,bcm_ip6_t,bcm_ip6_t);
extern int bcm_client_field_qualify_SrcIp6High(int,bcm_field_entry_t,bcm_ip6_t,bcm_ip6_t);
extern int bcm_client_field_qualify_SrcIp6High_get(int,bcm_field_entry_t,bcm_ip6_t *,bcm_ip6_t *);
extern int bcm_client_field_qualify_SrcIp6Low(int,bcm_field_entry_t,bcm_ip6_t,bcm_ip6_t);
extern int bcm_client_field_qualify_SrcIp6Low_get(int,bcm_field_entry_t,bcm_ip6_t *,bcm_ip6_t *);
extern int bcm_client_field_qualify_SrcIp6_get(int,bcm_field_entry_t,bcm_ip6_t *,bcm_ip6_t *);
extern int bcm_client_field_qualify_SrcIpEqualDstIp(int,bcm_field_entry_t,uint32);
extern int bcm_client_field_qualify_SrcIpEqualDstIp_get(int,bcm_field_entry_t,uint32 *);
extern int bcm_client_field_qualify_SrcIp_get(int,bcm_field_entry_t,bcm_ip_t *,bcm_ip_t *);
extern int bcm_client_field_qualify_SrcMac(int,bcm_field_entry_t,bcm_mac_t,bcm_mac_t);
extern int bcm_client_field_qualify_SrcMac_get(int,bcm_field_entry_t,bcm_mac_t *,bcm_mac_t *);
extern int bcm_client_field_qualify_SrcMimGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_SrcMimGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_SrcModPortGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_SrcModPortGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_SrcModuleGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_SrcModuleGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_SrcMplsGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_SrcMplsGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_SrcNivGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_SrcNivGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_SrcPort(int,bcm_field_entry_t,bcm_module_t,bcm_module_t,bcm_port_t,bcm_port_t);
extern int bcm_client_field_qualify_SrcPort_get(int,bcm_field_entry_t,bcm_module_t *,bcm_module_t *,bcm_port_t *,bcm_port_t *);
extern int bcm_client_field_qualify_SrcTrunk(int,bcm_field_entry_t,bcm_trunk_t,bcm_trunk_t);
extern int bcm_client_field_qualify_SrcTrunkMemberGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_SrcTrunkMemberGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_SrcTrunk_get(int,bcm_field_entry_t,bcm_trunk_t *,bcm_trunk_t *);
extern int bcm_client_field_qualify_SrcVirtualPortValid(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_SrcVirtualPortValid_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_SrcVxlanGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_SrcVxlanGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_SrcWlanGport(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_SrcWlanGport_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_Stage(int,bcm_field_entry_t,bcm_field_stage_t);
extern int bcm_client_field_qualify_Stage_get(int,bcm_field_entry_t,bcm_field_stage_t *);
extern int bcm_client_field_qualify_SubportPktTag(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_SubportPktTag_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_TcpControl(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TcpControl_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TcpHeaderSize(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TcpHeaderSize_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TcpSequenceZero(int,bcm_field_entry_t,uint32);
extern int bcm_client_field_qualify_TcpSequenceZero_get(int,bcm_field_entry_t,uint32 *);
extern int bcm_client_field_qualify_Tos(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_Tos_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TranslatedInnerVlan(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_TranslatedInnerVlanCfi(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TranslatedInnerVlanCfi_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TranslatedInnerVlanId(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_TranslatedInnerVlanId_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_TranslatedInnerVlanPri(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TranslatedInnerVlanPri_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TranslatedInnerVlan_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_TranslatedOuterVlan(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_TranslatedOuterVlanCfi(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TranslatedOuterVlanCfi_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TranslatedOuterVlanId(int,bcm_field_entry_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_field_qualify_TranslatedOuterVlanId_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_TranslatedOuterVlanPri(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TranslatedOuterVlanPri_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TranslatedOuterVlan_get(int,bcm_field_entry_t,bcm_vlan_t *,bcm_vlan_t *);
extern int bcm_client_field_qualify_TranslatedVlanFormat(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TranslatedVlanFormat_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TrillEgressRbridge(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_TrillEgressRbridgeHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TrillEgressRbridgeHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TrillEgressRbridge_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_TrillHopCount(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TrillHopCount_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TrillIVersion(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TrillIVersion_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TrillIngressRbridge(int,bcm_field_entry_t,uint16,uint16);
extern int bcm_client_field_qualify_TrillIngressRbridgeHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TrillIngressRbridgeHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TrillIngressRbridge_get(int,bcm_field_entry_t,uint16 *,uint16 *);
extern int bcm_client_field_qualify_TrillMultiDestination(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TrillMultiDestination_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TrillOpLength(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TrillOpLength_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TrillPayload(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_TrillPayload_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_TrunkHashResult(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_TrunkHashResult_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_Ttl(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_Ttl_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TunnelId(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_TunnelId_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_TunnelTerminated(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TunnelTerminatedHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_TunnelTerminatedHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TunnelTerminatedValue(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_TunnelTerminatedValue_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_TunnelTerminated_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_TunnelType(int,bcm_field_entry_t,bcm_field_TunnelType_t);
extern int bcm_client_field_qualify_TunnelType_get(int,bcm_field_entry_t,bcm_field_TunnelType_t *);
extern int bcm_client_field_qualify_VPortRangeCheck(int,bcm_field_entry_t,bcm_field_range_t,int);
extern int bcm_client_field_qualify_VPortRangeCheck_get(int,bcm_field_entry_t,int,bcm_field_range_t *,int *,int *);
extern int bcm_client_field_qualify_VlanFormat(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_VlanFormat_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_VlanTranslationHit(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_VlanTranslationHit_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_VlanTranslationValue(int,bcm_field_entry_t,uint64,uint64);
extern int bcm_client_field_qualify_VlanTranslationValue_get(int,bcm_field_entry_t,uint64 *,uint64 *);
extern int bcm_client_field_qualify_VnTag(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_VnTag_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_Vpn(int,bcm_field_entry_t,bcm_vpn_t,bcm_vpn_t);
extern int bcm_client_field_qualify_VpnUnknownDstMacDstPort(int,bcm_field_entry_t,bcm_gport_t);
extern int bcm_client_field_qualify_VpnUnknownDstMacDstPort_get(int,bcm_field_entry_t,bcm_gport_t *);
extern int bcm_client_field_qualify_Vpn_get(int,bcm_field_entry_t,bcm_vpn_t *,bcm_vpn_t *);
extern int bcm_client_field_qualify_Vrf(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_Vrf_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_VxlanFlags(int,bcm_field_entry_t,uint8,uint8);
extern int bcm_client_field_qualify_VxlanFlags_get(int,bcm_field_entry_t,uint8 *,uint8 *);
extern int bcm_client_field_qualify_VxlanNetworkId(int,bcm_field_entry_t,uint32,uint32);
extern int bcm_client_field_qualify_VxlanNetworkId_get(int,bcm_field_entry_t,uint32 *,uint32 *);
extern int bcm_client_field_qualify_clear(int,bcm_field_entry_t);
extern int bcm_client_field_qualify_data(int,bcm_field_entry_t,int,uint8 *,uint8 *,uint16);
extern int bcm_client_field_qualify_data_get(int,bcm_field_entry_t,int,uint16,uint8 *,uint8 *,uint16 *);
extern int bcm_client_field_qualify_udf(int,bcm_field_entry_t,bcm_udf_id_t,int,uint8 *,uint8 *);
extern int bcm_client_field_qualify_udf_get(int,bcm_field_entry_t,bcm_udf_id_t,int,uint8 *,uint8 *,int *);
extern int bcm_client_field_range_create(int,bcm_field_range_t *,uint32,bcm_l4_port_t,bcm_l4_port_t);
extern int bcm_client_field_range_create_id(int,bcm_field_range_t,uint32,bcm_l4_port_t,bcm_l4_port_t);
extern int bcm_client_field_range_destroy(int,bcm_field_range_t);
extern int bcm_client_field_range_get(int,bcm_field_range_t,uint32 *,bcm_l4_port_t *,bcm_l4_port_t *);
extern int bcm_client_field_range_group_create(int,bcm_field_range_t *,uint32,bcm_l4_port_t,bcm_l4_port_t,bcm_if_group_t);
extern int bcm_client_field_range_group_create_id(int,bcm_field_range_t,uint32,bcm_l4_port_t,bcm_l4_port_t,bcm_if_group_t);
extern int bcm_client_field_range_multi_create(int,bcm_field_range_t *,uint32,int,uint32 *,uint32 *,uint32 *);
extern int bcm_client_field_range_multi_get(int,bcm_field_range_t,int,uint32 *,uint32 *,uint32 *,int *);
extern int bcm_client_field_resync(int);
#ifdef	BROADCOM_DEBUG
/* bcm_field_show mapped to bcm_e_unavail */
/* bcm_field_snap_header_t_init not dispatchable */
#endif	/* BROADCOM_DEBUG */
extern int bcm_client_field_stage_info_get(int,bcm_field_stage_t,bcm_field_stage_info_t *);
extern int bcm_client_field_stat_all_set(int,int,uint64);
extern int bcm_client_field_stat_all_set32(int,int,uint32);
extern int bcm_client_field_stat_attach(int,bcm_field_group_t,uint32,uint32 *);
extern int bcm_client_field_stat_config_get(int,int,int,bcm_field_stat_t *);
extern int bcm_client_field_stat_counter_get(int,uint32,bcm_field_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_field_stat_counter_set(int,uint32,bcm_field_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_field_stat_counter_sync_get(int,uint32,bcm_field_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_field_stat_create(int,bcm_field_group_t,int,bcm_field_stat_t *,int *);
extern int bcm_client_field_stat_create_id(int,bcm_field_group_t,int,bcm_field_stat_t *,int);
extern int bcm_client_field_stat_destroy(int,int);
extern int bcm_client_field_stat_detach(int,uint32);
extern int bcm_client_field_stat_get(int,int,bcm_field_stat_t,uint64 *);
extern int bcm_client_field_stat_get32(int,int,bcm_field_stat_t,uint32 *);
extern int bcm_client_field_stat_id_get(int,bcm_field_group_t,uint32,uint32 *);
extern int bcm_client_field_stat_multi_get(int,int,int,bcm_field_stat_t *,uint64 *);
extern int bcm_client_field_stat_multi_get32(int,int,int,bcm_field_stat_t *,uint32 *);
extern int bcm_client_field_stat_set(int,int,bcm_field_stat_t,uint64);
extern int bcm_client_field_stat_set32(int,int,bcm_field_stat_t,uint32);
extern int bcm_client_field_stat_size(int,int,int *);
extern int bcm_client_field_stat_sync_get(int,int,bcm_field_stat_t,uint64 *);
extern int bcm_client_field_stat_sync_get32(int,int,bcm_field_stat_t,uint32 *);
/* bcm_field_udf_spec_t_init not dispatchable */
/* bcm_find not dispatchable */
#ifdef	INCLUDE_I2C
/* bcm_i2c_ioctl mapped to bcm_e_unavail */
/* bcm_i2c_open mapped to bcm_e_unavail */
/* bcm_i2c_read mapped to bcm_e_unavail */
/* bcm_i2c_write mapped to bcm_e_unavail */
#endif	/* INCLUDE_I2C */
extern int bcm_client_info_get(int,bcm_info_t *);
/* bcm_info_t_init not dispatchable */
extern int bcm_client_init(int);
extern int bcm_client_init_check(int);
extern int bcm_client_init_selective(int,uint32);
/* bcm_ip6_mask_create not dispatchable */
/* bcm_ip6_mask_length not dispatchable */
/* bcm_ip_mask_create not dispatchable */
/* bcm_ip_mask_length not dispatchable */
extern int bcm_client_ipfix_config_get(int,bcm_ipfix_stage_t,bcm_port_t,bcm_ipfix_config_t *);
extern int bcm_client_ipfix_config_set(int,bcm_ipfix_stage_t,bcm_port_t,bcm_ipfix_config_t *);
/* bcm_ipfix_config_t_init not dispatchable */
extern int bcm_client_ipfix_mirror_config_get(int,bcm_ipfix_stage_t,bcm_gport_t,bcm_ipfix_mirror_config_t *);
extern int bcm_client_ipfix_mirror_config_set(int,bcm_ipfix_stage_t,bcm_gport_t,bcm_ipfix_mirror_config_t *);
/* bcm_ipfix_mirror_config_t_init not dispatchable */
extern int bcm_client_ipfix_mirror_port_dest_add(int,bcm_ipfix_stage_t,bcm_gport_t,bcm_gport_t);
extern int bcm_client_ipfix_mirror_port_dest_delete(int,bcm_ipfix_stage_t,bcm_gport_t,bcm_gport_t);
extern int bcm_client_ipfix_mirror_port_dest_delete_all(int,bcm_ipfix_stage_t,bcm_gport_t);
extern int bcm_client_ipfix_mirror_port_dest_get(int,bcm_ipfix_stage_t,bcm_gport_t,int,bcm_gport_t *,int *);
extern int bcm_client_ipfix_rate_create(int,bcm_ipfix_rate_t *);
extern int bcm_client_ipfix_rate_destroy(int,bcm_ipfix_rate_id_t);
extern int bcm_client_ipfix_rate_destroy_all(int);
extern int bcm_client_ipfix_rate_get(int,bcm_ipfix_rate_t *);
extern int bcm_client_ipfix_rate_mirror_add(int,bcm_ipfix_rate_id_t,bcm_gport_t);
extern int bcm_client_ipfix_rate_mirror_delete(int,bcm_ipfix_rate_id_t,bcm_gport_t);
extern int bcm_client_ipfix_rate_mirror_delete_all(int,bcm_ipfix_rate_id_t);
extern int bcm_client_ipfix_rate_mirror_get(int,bcm_ipfix_rate_id_t,int,bcm_gport_t *,int *);
/* bcm_ipfix_rate_t_init not dispatchable */
extern int bcm_client_ipfix_rate_traverse(int,bcm_ipfix_rate_traverse_cb,void *);
/* bcm_ipfix_register mapped to bcm_e_unavail */
/* bcm_ipfix_unregister mapped to bcm_e_unavail */
#ifdef	INCLUDE_L3
extern int bcm_client_ipmc_add(int,bcm_ipmc_addr_t *);
/* bcm_ipmc_addr_t_init not dispatchable */
/* bcm_ipmc_age mapped to bcm_e_unavail */
extern int bcm_client_ipmc_bitmap_del(int,int,bcm_port_t,bcm_pbmp_t);
extern int bcm_client_ipmc_bitmap_get(int,int,bcm_port_t,bcm_pbmp_t *);
extern int bcm_client_ipmc_bitmap_max_get(int,int *);
extern int bcm_client_ipmc_bitmap_set(int,int,bcm_port_t,bcm_pbmp_t);
extern int bcm_client_ipmc_counters_get(int,bcm_port_t,bcm_ipmc_counters_t *);
/* bcm_ipmc_counters_t_init not dispatchable */
extern int bcm_client_ipmc_detach(int);
extern int bcm_client_ipmc_egress_port_get(int,bcm_port_t,bcm_mac_t,int *,bcm_vlan_t *,int *);
extern int bcm_client_ipmc_egress_port_init(int);
extern int bcm_client_ipmc_egress_port_set(int,bcm_port_t,const bcm_mac_t,int,bcm_vlan_t,int);
extern int bcm_client_ipmc_enable(int,int);
extern int bcm_client_ipmc_find(int,bcm_ipmc_addr_t *);
extern int bcm_client_ipmc_init(int);
extern int bcm_client_ipmc_range_add(int,int *,bcm_ipmc_range_t *);
extern int bcm_client_ipmc_range_delete(int,int);
extern int bcm_client_ipmc_range_delete_all(int);
extern int bcm_client_ipmc_range_get(int,int,bcm_ipmc_range_t *);
extern int bcm_client_ipmc_range_size_get(int,int *);
/* bcm_ipmc_range_t_init not dispatchable */
extern int bcm_client_ipmc_remove(int,bcm_ipmc_addr_t *);
extern int bcm_client_ipmc_remove_all(int);
extern int bcm_client_ipmc_rp_add(int,int,bcm_if_t);
extern int bcm_client_ipmc_rp_create(int,uint32,int *);
extern int bcm_client_ipmc_rp_delete(int,int,bcm_if_t);
extern int bcm_client_ipmc_rp_delete_all(int,int);
extern int bcm_client_ipmc_rp_destroy(int,int);
extern int bcm_client_ipmc_rp_get(int,int,int,bcm_if_t *,int *);
extern int bcm_client_ipmc_rp_set(int,int,int,bcm_if_t *);
extern int bcm_client_ipmc_stat_attach(int,bcm_ipmc_addr_t *,uint32);
extern int bcm_client_ipmc_stat_counter_get(int,bcm_ipmc_addr_t *,bcm_ipmc_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_ipmc_stat_counter_set(int,bcm_ipmc_addr_t *,bcm_ipmc_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_ipmc_stat_counter_sync_get(int,bcm_ipmc_addr_t *,bcm_ipmc_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_ipmc_stat_detach(int,bcm_ipmc_addr_t *);
extern int bcm_client_ipmc_stat_id_get(int,bcm_ipmc_addr_t *,bcm_ipmc_stat_t,uint32 *);
extern int bcm_client_ipmc_stat_multi_get(int,bcm_ipmc_addr_t *,int,bcm_ipmc_stat_t *,uint64 *);
extern int bcm_client_ipmc_stat_multi_get32(int,bcm_ipmc_addr_t *,int,bcm_ipmc_stat_t *,uint32 *);
extern int bcm_client_ipmc_stat_multi_set(int,bcm_ipmc_addr_t *,int,bcm_ipmc_stat_t *,uint64 *);
extern int bcm_client_ipmc_stat_multi_set32(int,bcm_ipmc_addr_t *,int,bcm_ipmc_stat_t *,uint32 *);
extern int bcm_client_ipmc_traverse(int,uint32,bcm_ipmc_traverse_cb,void *);
#endif	/* INCLUDE_L3 */
/* bcm_knet_cleanup mapped to bcm_e_unavail */
/* bcm_knet_filter_create mapped to bcm_e_unavail */
/* bcm_knet_filter_destroy mapped to bcm_e_unavail */
/* bcm_knet_filter_get mapped to bcm_e_unavail */
/* bcm_knet_filter_t_init not dispatchable */
/* bcm_knet_filter_traverse mapped to bcm_e_unavail */
/* bcm_knet_init mapped to bcm_e_unavail */
/* bcm_knet_netif_create mapped to bcm_e_unavail */
/* bcm_knet_netif_destroy mapped to bcm_e_unavail */
/* bcm_knet_netif_get mapped to bcm_e_unavail */
/* bcm_knet_netif_t_init not dispatchable */
/* bcm_knet_netif_traverse mapped to bcm_e_unavail */
extern int bcm_client_l2_addr_add(int,bcm_l2_addr_t *);
extern int bcm_client_l2_addr_delete(int,bcm_mac_t,bcm_vlan_t);
extern int bcm_client_l2_addr_delete_by_mac(int,bcm_mac_t,uint32);
extern int bcm_client_l2_addr_delete_by_mac_port(int,bcm_mac_t,bcm_module_t,bcm_port_t,uint32);
extern int bcm_client_l2_addr_delete_by_port(int,bcm_module_t,bcm_port_t,uint32);
extern int bcm_client_l2_addr_delete_by_trunk(int,bcm_trunk_t,uint32);
extern int bcm_client_l2_addr_delete_by_vlan(int,bcm_vlan_t,uint32);
extern int bcm_client_l2_addr_delete_by_vlan_gport_multi(int,uint32,int,bcm_vlan_t *,bcm_gport_t *);
extern int bcm_client_l2_addr_delete_by_vlan_port(int,bcm_vlan_t,bcm_module_t,bcm_port_t,uint32);
extern int bcm_client_l2_addr_delete_by_vlan_trunk(int,bcm_vlan_t,bcm_trunk_t,uint32);
/* bcm_l2_addr_distribute_t_init not dispatchable */
/* bcm_l2_addr_dump not dispatchable */
extern int bcm_client_l2_addr_freeze(int);
extern int bcm_client_l2_addr_get(int,bcm_mac_t,bcm_vlan_t,bcm_l2_addr_t *);
extern int bcm_client_l2_addr_msg_distribute_get(int,bcm_l2_addr_distribute_t *);
extern int bcm_client_l2_addr_msg_distribute_set(int,bcm_l2_addr_distribute_t *);
extern int bcm_client_l2_addr_register(int,bcm_l2_addr_callback_t,void *);
/* bcm_l2_addr_t_init not dispatchable */
extern int bcm_client_l2_addr_thaw(int);
extern int bcm_client_l2_addr_unregister(int,bcm_l2_addr_callback_t,void *);
extern int bcm_client_l2_age_timer_get(int,int *);
extern int bcm_client_l2_age_timer_set(int,int);
extern int bcm_client_l2_auth_add(int,bcm_l2_auth_addr_t *);
/* bcm_l2_auth_addr_t_init not dispatchable */
extern int bcm_client_l2_auth_delete(int,bcm_l2_auth_addr_t *);
extern int bcm_client_l2_auth_delete_all(int);
extern int bcm_client_l2_auth_get(int,bcm_l2_auth_addr_t *);
extern int bcm_client_l2_auth_traverse(int,bcm_l2_auth_traverse_cb,void *);
/* bcm_l2_cache_addr_t_init not dispatchable */
extern int bcm_client_l2_cache_delete(int,int);
extern int bcm_client_l2_cache_delete_all(int);
extern int bcm_client_l2_cache_get(int,int,bcm_l2_cache_addr_t *);
extern int bcm_client_l2_cache_init(int);
extern int bcm_client_l2_cache_set(int,int,bcm_l2_cache_addr_t *,int *);
extern int bcm_client_l2_cache_size_get(int,int *);
extern int bcm_client_l2_clear(int);
extern int bcm_client_l2_conflict_get(int,bcm_l2_addr_t *,bcm_l2_addr_t *,int,int *);
extern int bcm_client_l2_detach(int);
extern int bcm_client_l2_egress_create(int,bcm_l2_egress_t *);
extern int bcm_client_l2_egress_destroy(int,bcm_if_t);
extern int bcm_client_l2_egress_find(int,bcm_l2_egress_t *,bcm_if_t *);
extern int bcm_client_l2_egress_get(int,bcm_if_t,bcm_l2_egress_t *);
/* bcm_l2_egress_t_init not dispatchable */
extern int bcm_client_l2_egress_traverse(int,bcm_l2_egress_traverse_cb,void *);
extern int bcm_client_l2_gport_forward_info_get(int,int,bcm_l2_gport_forward_info_t *);
/* bcm_l2_gport_forward_info_t_init not dispatchable */
extern int bcm_client_l2_init(int);
/* bcm_l2_key_dump mapped to bcm_e_unavail */
extern int bcm_client_l2_learn_class_get(int,int,int *,uint32 *);
extern int bcm_client_l2_learn_class_set(int,int,int,uint32);
extern int bcm_client_l2_learn_limit_get(int,bcm_l2_learn_limit_t *);
extern int bcm_client_l2_learn_limit_set(int,bcm_l2_learn_limit_t *);
/* bcm_l2_learn_limit_t_init not dispatchable */
extern int bcm_client_l2_learn_msgs_config_get(int,bcm_l2_learn_msgs_config_t *);
extern int bcm_client_l2_learn_msgs_config_set(int,bcm_l2_learn_msgs_config_t *);
/* bcm_l2_learn_msgs_config_t_init not dispatchable */
extern int bcm_client_l2_learn_port_class_get(int,bcm_gport_t,int *);
extern int bcm_client_l2_learn_port_class_set(int,bcm_gport_t,int);
extern int bcm_client_l2_mac_port_create(int,bcm_l2_mac_port_t *);
extern int bcm_client_l2_mac_port_destroy(int,bcm_gport_t);
extern int bcm_client_l2_mac_port_destroy_all(int);
extern int bcm_client_l2_mac_port_get(int,bcm_l2_mac_port_t *);
/* bcm_l2_mac_port_t_init not dispatchable */
extern int bcm_client_l2_mac_port_traverse(int,bcm_l2_mac_port_traverse_cb,void *);
extern int bcm_client_l2_match_masked_traverse(int,uint32,bcm_l2_addr_t *,bcm_l2_addr_t *,bcm_l2_traverse_cb,void *);
extern int bcm_client_l2_matched_traverse(int,uint32,bcm_l2_addr_t *,bcm_l2_traverse_cb,void *);
extern int bcm_client_l2_port_native(int,int,int);
extern int bcm_client_l2_replace(int,uint32,bcm_l2_addr_t *,bcm_module_t,bcm_port_t,bcm_trunk_t);
extern int bcm_client_l2_replace_match(int,uint32,bcm_l2_addr_t *,bcm_l2_addr_t *,bcm_l2_addr_t *,bcm_l2_addr_t *);
extern int bcm_client_l2_ring_replace(int,bcm_l2_ring_t *);
/* bcm_l2_ring_t_init not dispatchable */
extern int bcm_client_l2_stat_enable_set(int,bcm_l2_addr_t *,int);
extern int bcm_client_l2_stat_get(int,bcm_l2_addr_t *,bcm_l2_stat_t,uint64 *);
extern int bcm_client_l2_stat_get32(int,bcm_l2_addr_t *,bcm_l2_stat_t,uint32 *);
extern int bcm_client_l2_stat_set(int,bcm_l2_addr_t *,bcm_l2_stat_t,uint64);
extern int bcm_client_l2_stat_set32(int,bcm_l2_addr_t *,bcm_l2_stat_t,uint32);
extern int bcm_client_l2_station_add(int,int *,bcm_l2_station_t *);
extern int bcm_client_l2_station_delete(int,int);
extern int bcm_client_l2_station_delete_all(int);
extern int bcm_client_l2_station_get(int,int,bcm_l2_station_t *);
extern int bcm_client_l2_station_size_get(int,int *);
/* bcm_l2_station_t_init not dispatchable */
extern int bcm_client_l2_traverse(int,bcm_l2_traverse_cb,void *);
extern int bcm_client_l2_tunnel_add(int,bcm_mac_t,bcm_vlan_t);
extern int bcm_client_l2_tunnel_delete(int,bcm_mac_t,bcm_vlan_t);
extern int bcm_client_l2_tunnel_delete_all(int);
#ifdef	INCLUDE_L3
extern int bcm_client_l2gre_cleanup(int);
extern int bcm_client_l2gre_init(int);
extern int bcm_client_l2gre_port_add(int,bcm_vpn_t,bcm_l2gre_port_t *);
extern int bcm_client_l2gre_port_delete(int,bcm_vpn_t,bcm_gport_t);
extern int bcm_client_l2gre_port_delete_all(int,bcm_vpn_t);
extern int bcm_client_l2gre_port_get(int,bcm_vpn_t,bcm_l2gre_port_t *);
extern int bcm_client_l2gre_port_get_all(int,bcm_vpn_t,int,bcm_l2gre_port_t *,int *);
/* bcm_l2gre_port_t_init not dispatchable */
extern int bcm_client_l2gre_stat_attach(int,bcm_gport_t,bcm_vpn_t,uint32);
extern int bcm_client_l2gre_stat_counter_get(int,bcm_gport_t,bcm_vpn_t,bcm_l2gre_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l2gre_stat_counter_set(int,bcm_gport_t,bcm_vpn_t,bcm_l2gre_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l2gre_stat_counter_sync_get(int,bcm_gport_t,bcm_vpn_t,bcm_l2gre_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l2gre_stat_detach(int,bcm_gport_t,bcm_vpn_t);
extern int bcm_client_l2gre_stat_id_get(int,bcm_gport_t,bcm_vpn_t,bcm_l2gre_stat_t,uint32 *);
extern int bcm_client_l2gre_stat_multi_get(int,bcm_gport_t,bcm_vpn_t,int,bcm_l2gre_stat_t *,uint64 *);
extern int bcm_client_l2gre_stat_multi_get32(int,bcm_gport_t,bcm_vpn_t,int,bcm_l2gre_stat_t *,uint32 *);
extern int bcm_client_l2gre_stat_multi_set(int,bcm_gport_t,bcm_vpn_t,int,bcm_l2gre_stat_t *,uint64 *);
extern int bcm_client_l2gre_stat_multi_set32(int,bcm_gport_t,bcm_vpn_t,int,bcm_l2gre_stat_t *,uint32 *);
extern int bcm_client_l2gre_tunnel_initiator_create(int,bcm_tunnel_initiator_t *);
extern int bcm_client_l2gre_tunnel_initiator_destroy(int,bcm_gport_t);
extern int bcm_client_l2gre_tunnel_initiator_destroy_all(int);
extern int bcm_client_l2gre_tunnel_initiator_get(int,bcm_tunnel_initiator_t *);
extern int bcm_client_l2gre_tunnel_initiator_traverse(int,bcm_tunnel_initiator_traverse_cb,void *);
extern int bcm_client_l2gre_tunnel_terminator_create(int,bcm_tunnel_terminator_t *);
extern int bcm_client_l2gre_tunnel_terminator_destroy(int,bcm_gport_t);
extern int bcm_client_l2gre_tunnel_terminator_destroy_all(int);
extern int bcm_client_l2gre_tunnel_terminator_get(int,bcm_tunnel_terminator_t *);
extern int bcm_client_l2gre_tunnel_terminator_traverse(int,bcm_tunnel_terminator_traverse_cb,void *);
extern int bcm_client_l2gre_tunnel_terminator_update(int,bcm_tunnel_terminator_t *);
/* bcm_l2gre_vpn_config_t_init not dispatchable */
extern int bcm_client_l2gre_vpn_create(int,bcm_l2gre_vpn_config_t *);
extern int bcm_client_l2gre_vpn_destroy(int,bcm_vpn_t);
extern int bcm_client_l2gre_vpn_destroy_all(int);
extern int bcm_client_l2gre_vpn_get(int,bcm_vpn_t,bcm_l2gre_vpn_config_t *);
extern int bcm_client_l2gre_vpn_traverse(int,bcm_l2gre_vpn_traverse_cb,void *);
extern int bcm_client_l3_cleanup(int);
extern int bcm_client_l3_egress_create(int,uint32,bcm_l3_egress_t *,bcm_if_t *);
extern int bcm_client_l3_egress_destroy(int,bcm_if_t);
extern int bcm_client_l3_egress_ecmp_add(int,bcm_l3_egress_ecmp_t *,bcm_if_t);
extern int bcm_client_l3_egress_ecmp_create(int,bcm_l3_egress_ecmp_t *,int,bcm_if_t *);
extern int bcm_client_l3_egress_ecmp_delete(int,bcm_l3_egress_ecmp_t *,bcm_if_t);
extern int bcm_client_l3_egress_ecmp_destroy(int,bcm_l3_egress_ecmp_t *);
extern int bcm_client_l3_egress_ecmp_ethertype_get(int,uint32 *,int,int *,int *);
extern int bcm_client_l3_egress_ecmp_ethertype_set(int,uint32,int,int *);
extern int bcm_client_l3_egress_ecmp_find(int,int,bcm_if_t *,bcm_l3_egress_ecmp_t *);
extern int bcm_client_l3_egress_ecmp_get(int,bcm_l3_egress_ecmp_t *,int,bcm_if_t *,int *);
extern int bcm_client_l3_egress_ecmp_member_status_get(int,bcm_if_t,int *);
extern int bcm_client_l3_egress_ecmp_member_status_set(int,bcm_if_t,int);
extern int bcm_client_l3_egress_ecmp_resilient_replace(int,uint32,bcm_l3_egress_ecmp_resilient_entry_t *,int *,bcm_l3_egress_ecmp_resilient_entry_t *);
extern int bcm_client_l3_egress_ecmp_resilient_traverse(int,uint32,bcm_l3_egress_ecmp_resilient_entry_t *,bcm_l3_egress_ecmp_resilient_traverse_cb,void *);
/* bcm_l3_egress_ecmp_t_init not dispatchable */
extern int bcm_client_l3_egress_ecmp_traverse(int,bcm_l3_egress_ecmp_traverse_cb,void *);
extern int bcm_client_l3_egress_find(int,bcm_l3_egress_t *,bcm_if_t *);
extern int bcm_client_l3_egress_get(int,bcm_if_t,bcm_l3_egress_t *);
extern int bcm_client_l3_egress_multipath_add(int,bcm_if_t,bcm_if_t);
extern int bcm_client_l3_egress_multipath_create(int,uint32,int,bcm_if_t *,bcm_if_t *);
extern int bcm_client_l3_egress_multipath_delete(int,bcm_if_t,bcm_if_t);
extern int bcm_client_l3_egress_multipath_destroy(int,bcm_if_t);
extern int bcm_client_l3_egress_multipath_find(int,int,bcm_if_t *,bcm_if_t *);
extern int bcm_client_l3_egress_multipath_get(int,bcm_if_t,int,bcm_if_t *,int *);
extern int bcm_client_l3_egress_multipath_max_create(int,uint32,int,int,bcm_if_t *,bcm_if_t *);
extern int bcm_client_l3_egress_multipath_traverse(int,bcm_l3_egress_multipath_traverse_cb,void *);
extern int bcm_client_l3_egress_stat_attach(int,bcm_if_t,uint32);
extern int bcm_client_l3_egress_stat_counter_get(int,bcm_if_t,bcm_l3_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_egress_stat_counter_set(int,bcm_if_t,bcm_l3_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_egress_stat_counter_sync_get(int,bcm_if_t,bcm_l3_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_egress_stat_detach(int,bcm_if_t);
extern int bcm_client_l3_egress_stat_enable_set(int,bcm_l3_egress_t *,int);
extern int bcm_client_l3_egress_stat_get(int,bcm_l3_egress_t *,bcm_l3_stat_t,uint64 *);
extern int bcm_client_l3_egress_stat_get32(int,bcm_l3_egress_t *,bcm_l3_stat_t,uint32 *);
extern int bcm_client_l3_egress_stat_id_get(int,bcm_if_t,bcm_l3_stat_t,uint32 *);
extern int bcm_client_l3_egress_stat_set(int,bcm_l3_egress_t *,bcm_l3_stat_t,uint64);
extern int bcm_client_l3_egress_stat_set32(int,bcm_l3_egress_t *,bcm_l3_stat_t,uint32);
/* bcm_l3_egress_t_init not dispatchable */
extern int bcm_client_l3_egress_traverse(int,bcm_l3_egress_traverse_cb,void *);
extern int bcm_client_l3_enable_set(int,int);
extern int bcm_client_l3_host_add(int,bcm_l3_host_t *);
/* bcm_l3_host_age mapped to bcm_e_unavail */
extern int bcm_client_l3_host_conflict_get(int,bcm_l3_key_t *,bcm_l3_key_t *,int,int *);
extern int bcm_client_l3_host_delete(int,bcm_l3_host_t *);
extern int bcm_client_l3_host_delete_all(int,bcm_l3_host_t *);
extern int bcm_client_l3_host_delete_by_interface(int,bcm_l3_host_t *);
extern int bcm_client_l3_host_delete_by_network(int,bcm_l3_route_t *);
extern int bcm_client_l3_host_find(int,bcm_l3_host_t *);
extern int bcm_client_l3_host_invalidate_entry(int,bcm_ip_t);
extern int bcm_client_l3_host_stat_attach(int,bcm_l3_host_t *,uint32);
extern int bcm_client_l3_host_stat_counter_get(int,bcm_l3_host_t *,bcm_l3_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_host_stat_counter_set(int,bcm_l3_host_t *,bcm_l3_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_host_stat_counter_sync_get(int,bcm_l3_host_t *,bcm_l3_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_host_stat_detach(int,bcm_l3_host_t *);
extern int bcm_client_l3_host_stat_enable_set(int,bcm_l3_host_t *,int);
extern int bcm_client_l3_host_stat_get(int,bcm_l3_host_t *,bcm_l3_stat_t,uint64 *);
extern int bcm_client_l3_host_stat_get32(int,bcm_l3_host_t *,bcm_l3_stat_t,uint32 *);
extern int bcm_client_l3_host_stat_id_get(int,bcm_l3_host_t *,bcm_l3_stat_t,uint32 *);
extern int bcm_client_l3_host_stat_set(int,bcm_l3_host_t *,bcm_l3_stat_t,uint64);
extern int bcm_client_l3_host_stat_set32(int,bcm_l3_host_t *,bcm_l3_stat_t,uint32);
/* bcm_l3_host_t_init not dispatchable */
extern int bcm_client_l3_host_traverse(int,uint32,uint32,uint32,bcm_l3_host_traverse_cb,void *);
extern int bcm_client_l3_host_validate_entry(int,bcm_ip_t);
extern int bcm_client_l3_info(int,bcm_l3_info_t *);
/* bcm_l3_info_t_init not dispatchable */
extern int bcm_client_l3_ingress_create(int,bcm_l3_ingress_t *,bcm_if_t *);
extern int bcm_client_l3_ingress_destroy(int,bcm_if_t);
extern int bcm_client_l3_ingress_find(int,bcm_l3_ingress_t *,bcm_if_t *);
extern int bcm_client_l3_ingress_get(int,bcm_if_t,bcm_l3_ingress_t *);
extern int bcm_client_l3_ingress_stat_attach(int,bcm_if_t,uint32);
extern int bcm_client_l3_ingress_stat_counter_get(int,bcm_if_t,bcm_l3_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_ingress_stat_counter_set(int,bcm_if_t,bcm_l3_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_ingress_stat_counter_sync_get(int,bcm_if_t,bcm_l3_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_ingress_stat_detach(int,bcm_if_t);
extern int bcm_client_l3_ingress_stat_id_get(int,bcm_if_t,bcm_l3_stat_t,uint32 *);
/* bcm_l3_ingress_t_init not dispatchable */
extern int bcm_client_l3_ingress_traverse(int,bcm_l3_ingress_traverse_cb,void *);
extern int bcm_client_l3_init(int);
extern int bcm_client_l3_intf_create(int,bcm_l3_intf_t *);
extern int bcm_client_l3_intf_delete(int,bcm_l3_intf_t *);
extern int bcm_client_l3_intf_delete_all(int);
extern int bcm_client_l3_intf_find(int,bcm_l3_intf_t *);
extern int bcm_client_l3_intf_find_vlan(int,bcm_l3_intf_t *);
extern int bcm_client_l3_intf_get(int,bcm_l3_intf_t *);
/* bcm_l3_intf_t_init not dispatchable */
extern int bcm_client_l3_ip4_options_action_get(int,int,int,bcm_l3_ip4_options_action_t *);
extern int bcm_client_l3_ip4_options_action_set(int,int,int,bcm_l3_ip4_options_action_t);
extern int bcm_client_l3_ip4_options_profile_create(int,uint32,bcm_l3_ip4_options_action_t,int *);
extern int bcm_client_l3_ip4_options_profile_destroy(int,int);
extern int bcm_client_l3_ip6_prefix_map_add(int,bcm_ip6_t);
extern int bcm_client_l3_ip6_prefix_map_delete(int,bcm_ip6_t);
extern int bcm_client_l3_ip6_prefix_map_delete_all(int);
extern int bcm_client_l3_ip6_prefix_map_get(int,int,bcm_ip6_t *,int *);
/* bcm_l3_key_t_init not dispatchable */
extern int bcm_client_l3_nat_egress_add(int,bcm_l3_nat_egress_t *);
extern int bcm_client_l3_nat_egress_delete(int,bcm_l3_nat_id_t);
extern int bcm_client_l3_nat_egress_get(int,bcm_l3_nat_egress_t *);
extern int bcm_client_l3_nat_egress_stat_attach(int,bcm_l3_nat_egress_t *,uint32);
extern int bcm_client_l3_nat_egress_stat_counter_get(int,bcm_l3_nat_egress_t *,bcm_l3_nat_egress_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_nat_egress_stat_counter_set(int,bcm_l3_nat_egress_t *,bcm_l3_nat_egress_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_nat_egress_stat_counter_sync_get(int,bcm_l3_nat_egress_t *,bcm_l3_nat_egress_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_nat_egress_stat_detach(int,bcm_l3_nat_egress_t *);
extern int bcm_client_l3_nat_egress_stat_id_get(int,bcm_l3_nat_egress_t *,bcm_l3_nat_egress_stat_t,uint32 *);
extern int bcm_client_l3_nat_egress_stat_multi_get(int,bcm_l3_nat_egress_t *,int,bcm_l3_nat_egress_stat_t *,uint64 *);
extern int bcm_client_l3_nat_egress_stat_multi_get32(int,bcm_l3_nat_egress_t *,int,bcm_l3_nat_egress_stat_t *,uint32 *);
extern int bcm_client_l3_nat_egress_stat_multi_set(int,bcm_l3_nat_egress_t *,int,bcm_l3_nat_egress_stat_t *,uint64 *);
extern int bcm_client_l3_nat_egress_stat_multi_set32(int,bcm_l3_nat_egress_t *,int,bcm_l3_nat_egress_stat_t *,uint32 *);
/* bcm_l3_nat_egress_t_init not dispatchable */
extern int bcm_client_l3_nat_egress_traverse(int,uint32,uint32,uint32,bcm_l3_nat_egress_traverse_cb,void *);
extern int bcm_client_l3_nat_ingress_add(int,bcm_l3_nat_ingress_t *);
/* bcm_l3_nat_ingress_age mapped to bcm_e_unavail */
extern int bcm_client_l3_nat_ingress_delete(int,bcm_l3_nat_ingress_t *);
extern int bcm_client_l3_nat_ingress_delete_all(int,bcm_l3_nat_ingress_t *);
extern int bcm_client_l3_nat_ingress_find(int,bcm_l3_nat_ingress_t *);
/* bcm_l3_nat_ingress_t_init not dispatchable */
extern int bcm_client_l3_nat_ingress_traverse(int,uint32,uint32,uint32,bcm_l3_nat_ingress_traverse_cb,void *);
extern int bcm_client_l3_route_add(int,bcm_l3_route_t *);
/* bcm_l3_route_age mapped to bcm_e_unavail */
extern int bcm_client_l3_route_delete(int,bcm_l3_route_t *);
extern int bcm_client_l3_route_delete_all(int,bcm_l3_route_t *);
extern int bcm_client_l3_route_delete_by_interface(int,bcm_l3_route_t *);
extern int bcm_client_l3_route_find(int,bcm_l3_host_t *,bcm_l3_route_t *);
extern int bcm_client_l3_route_get(int,bcm_l3_route_t *);
extern int bcm_client_l3_route_max_ecmp_get(int,int *);
extern int bcm_client_l3_route_max_ecmp_set(int,int);
extern int bcm_client_l3_route_multipath_get(int,bcm_l3_route_t *,bcm_l3_route_t *,int,int *);
extern int bcm_client_l3_route_stat_attach(int,bcm_l3_route_t *,uint32);
extern int bcm_client_l3_route_stat_counter_get(int,bcm_l3_route_t *,bcm_l3_route_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_route_stat_counter_set(int,bcm_l3_route_t *,bcm_l3_route_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_route_stat_counter_sync_get(int,bcm_l3_route_t *,bcm_l3_route_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_route_stat_detach(int,bcm_l3_route_t *);
extern int bcm_client_l3_route_stat_enable_set(int,bcm_l3_route_t *,int);
extern int bcm_client_l3_route_stat_get(int,bcm_l3_route_t *,bcm_l3_stat_t,uint64 *);
extern int bcm_client_l3_route_stat_get32(int,bcm_l3_route_t *,bcm_l3_stat_t,uint32 *);
extern int bcm_client_l3_route_stat_id_get(int,bcm_l3_route_t *,bcm_l3_route_stat_t,uint32 *);
extern int bcm_client_l3_route_stat_multi_get(int,bcm_l3_route_t *,int,bcm_l3_route_stat_t *,uint64 *);
extern int bcm_client_l3_route_stat_multi_get32(int,bcm_l3_route_t *,int,bcm_l3_route_stat_t *,uint32 *);
extern int bcm_client_l3_route_stat_multi_set(int,bcm_l3_route_t *,int,bcm_l3_route_stat_t *,uint64 *);
extern int bcm_client_l3_route_stat_multi_set32(int,bcm_l3_route_t *,int,bcm_l3_route_stat_t *,uint32 *);
extern int bcm_client_l3_route_stat_set(int,bcm_l3_route_t *,bcm_l3_stat_t,uint64);
extern int bcm_client_l3_route_stat_set32(int,bcm_l3_route_t *,bcm_l3_stat_t,uint32);
/* bcm_l3_route_t_init not dispatchable */
extern int bcm_client_l3_route_traverse(int,uint32,uint32,uint32,bcm_l3_route_traverse_cb,void *);
extern int bcm_client_l3_source_bind_add(int,bcm_l3_source_bind_t *);
extern int bcm_client_l3_source_bind_delete(int,bcm_l3_source_bind_t *);
extern int bcm_client_l3_source_bind_delete_all(int);
extern int bcm_client_l3_source_bind_enable_get(int,bcm_port_t,int *);
extern int bcm_client_l3_source_bind_enable_set(int,bcm_port_t,int);
extern int bcm_client_l3_source_bind_get(int,bcm_l3_source_bind_t *);
/* bcm_l3_source_bind_t_init not dispatchable */
extern int bcm_client_l3_source_bind_traverse(int,bcm_l3_source_bind_traverse_cb,void *);
extern int bcm_client_l3_subnet_route_find(int,bcm_l3_route_t *,bcm_l3_route_t *);
extern int bcm_client_l3_vrf_stat_attach(int,bcm_vrf_t,uint32);
extern int bcm_client_l3_vrf_stat_counter_get(int,bcm_vrf_t,bcm_l3_vrf_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_vrf_stat_counter_set(int,bcm_vrf_t,bcm_l3_vrf_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_vrf_stat_counter_sync_get(int,bcm_vrf_t,bcm_l3_vrf_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_l3_vrf_stat_detach(int,bcm_vrf_t);
extern int bcm_client_l3_vrf_stat_enable_set(int,bcm_vrf_t,int);
extern int bcm_client_l3_vrf_stat_get(int,bcm_vrf_t,bcm_l3_vrf_stat_t,uint64 *);
extern int bcm_client_l3_vrf_stat_get32(int,bcm_vrf_t,bcm_l3_vrf_stat_t,uint32 *);
extern int bcm_client_l3_vrf_stat_id_get(int,bcm_vrf_t,bcm_l3_vrf_stat_t,uint32 *);
extern int bcm_client_l3_vrf_stat_multi_get(int,bcm_vrf_t,int,bcm_l3_vrf_stat_t *,uint64 *);
extern int bcm_client_l3_vrf_stat_multi_get32(int,bcm_vrf_t,int,bcm_l3_vrf_stat_t *,uint32 *);
extern int bcm_client_l3_vrf_stat_multi_set(int,bcm_vrf_t,int,bcm_l3_vrf_stat_t *,uint64 *);
extern int bcm_client_l3_vrf_stat_multi_set32(int,bcm_vrf_t,int,bcm_l3_vrf_stat_t *,uint32 *);
extern int bcm_client_l3_vrf_stat_set(int,bcm_vrf_t,bcm_l3_vrf_stat_t,uint64);
extern int bcm_client_l3_vrf_stat_set32(int,bcm_vrf_t,bcm_l3_vrf_stat_t,uint32);
extern int bcm_client_l3_vrf_stat_sync_get(int,bcm_vrf_t,bcm_l3_vrf_stat_t,uint64 *);
extern int bcm_client_l3_vrf_stat_sync_get32(int,bcm_vrf_t,bcm_l3_vrf_stat_t,uint32 *);
extern int bcm_client_l3_vrrp_add(int,bcm_vlan_t,uint32);
extern int bcm_client_l3_vrrp_config_add(int,uint32,bcm_vlan_t,uint32);
extern int bcm_client_l3_vrrp_config_delete(int,uint32,bcm_vlan_t,uint32);
extern int bcm_client_l3_vrrp_config_delete_all(int,uint32,bcm_vlan_t);
extern int bcm_client_l3_vrrp_config_get(int,uint32,bcm_vlan_t,uint32,uint32 *,uint32 *);
extern int bcm_client_l3_vrrp_delete(int,bcm_vlan_t,uint32);
extern int bcm_client_l3_vrrp_delete_all(int,bcm_vlan_t);
extern int bcm_client_l3_vrrp_get(int,bcm_vlan_t,int,int *,int *);
#endif	/* INCLUDE_L3 */
extern int bcm_client_link_change(int,bcm_pbmp_t);
extern int bcm_client_link_wait(int,bcm_pbmp_t *,int);
extern int bcm_client_linkscan_detach(int);
#ifdef	BROADCOM_DEBUG
extern int bcm_client_linkscan_dump(int);
#endif	/* BROADCOM_DEBUG */
extern int bcm_client_linkscan_enable_get(int,int *);
extern int bcm_client_linkscan_enable_port_get(int,bcm_port_t);
extern int bcm_client_linkscan_enable_set(int,int);
extern int bcm_client_linkscan_init(int);
extern int bcm_client_linkscan_mode_get(int,bcm_port_t,int *);
extern int bcm_client_linkscan_mode_set(int,bcm_port_t,int);
extern int bcm_client_linkscan_mode_set_pbm(int,bcm_pbmp_t,int);
/* bcm_linkscan_port_register mapped to bcm_e_unavail */
/* bcm_linkscan_port_unregister mapped to bcm_e_unavail */
extern int bcm_client_linkscan_register(int,bcm_linkscan_handler_t);
extern int bcm_client_linkscan_unregister(int,bcm_linkscan_handler_t);
extern int bcm_client_linkscan_update(int,bcm_pbmp_t);
#ifdef	INCLUDE_MACSEC
/* bcm_macsec_event_enable_get mapped to bcm_e_unavail */
/* bcm_macsec_event_enable_set mapped to bcm_e_unavail */
/* bcm_macsec_event_register mapped to bcm_e_unavail */
/* bcm_macsec_event_unregister mapped to bcm_e_unavail */
/* bcm_macsec_flow_create mapped to bcm_e_unavail */
/* bcm_macsec_flow_destroy mapped to bcm_e_unavail */
/* bcm_macsec_flow_get mapped to bcm_e_unavail */
/* bcm_macsec_flow_traverse mapped to bcm_e_unavail */
/* bcm_macsec_port_capability_get mapped to bcm_e_unavail */
/* bcm_macsec_port_config_get mapped to bcm_e_unavail */
/* bcm_macsec_port_config_set mapped to bcm_e_unavail */
/* bcm_macsec_port_traverse mapped to bcm_e_unavail */
/* bcm_macsec_secure_assoc_create mapped to bcm_e_unavail */
/* bcm_macsec_secure_assoc_destroy mapped to bcm_e_unavail */
/* bcm_macsec_secure_assoc_get mapped to bcm_e_unavail */
/* bcm_macsec_secure_assoc_traverse mapped to bcm_e_unavail */
/* bcm_macsec_secure_chan_create mapped to bcm_e_unavail */
/* bcm_macsec_secure_chan_destroy mapped to bcm_e_unavail */
/* bcm_macsec_secure_chan_get mapped to bcm_e_unavail */
/* bcm_macsec_secure_chan_traverse mapped to bcm_e_unavail */
/* bcm_macsec_stat_clear mapped to bcm_e_unavail */
/* bcm_macsec_stat_get mapped to bcm_e_unavail */
/* bcm_macsec_stat_get32 mapped to bcm_e_unavail */
/* bcm_macsec_stat_set mapped to bcm_e_unavail */
/* bcm_macsec_stat_set32 mapped to bcm_e_unavail */
#endif	/* INCLUDE_MACSEC */
extern int bcm_client_mcast_addr_add(int,bcm_mcast_addr_t *);
extern int bcm_client_mcast_addr_add_w_l2mcindex(int,bcm_mcast_addr_t *);
extern int bcm_client_mcast_addr_remove(int,bcm_mac_t,bcm_vlan_t);
extern int bcm_client_mcast_addr_remove_w_l2mcindex(int,bcm_mcast_addr_t *);
/* bcm_mcast_addr_t_init not dispatchable */
extern int bcm_client_mcast_bitmap_del(int,int,bcm_port_t,bcm_pbmp_t);
extern int bcm_client_mcast_bitmap_get(int,int,bcm_port_t,bcm_pbmp_t *);
extern int bcm_client_mcast_bitmap_max_get(int,int *);
extern int bcm_client_mcast_bitmap_set(int,int,bcm_port_t,bcm_pbmp_t);
extern int bcm_client_mcast_init(int);
extern int bcm_client_mcast_join(int,bcm_mac_t,bcm_vlan_t,int,bcm_mcast_addr_t *,bcm_pbmp_t *);
extern int bcm_client_mcast_leave(int,bcm_mac_t,bcm_vlan_t,int);
extern int bcm_client_mcast_port_add(int,bcm_mcast_addr_t *);
extern int bcm_client_mcast_port_get(int,bcm_mac_t,bcm_vlan_t,bcm_mcast_addr_t *);
extern int bcm_client_mcast_port_remove(int,bcm_mcast_addr_t *);
#ifdef	INCLUDE_L3
extern int bcm_client_mim_detach(int);
extern int bcm_client_mim_init(int);
extern int bcm_client_mim_lookup_id_stat_attach(int,int,uint32);
extern int bcm_client_mim_lookup_id_stat_counter_get(int,int,bcm_mim_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mim_lookup_id_stat_counter_set(int,int,bcm_mim_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mim_lookup_id_stat_counter_sync_get(int,int,bcm_mim_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mim_lookup_id_stat_detach(int,int);
extern int bcm_client_mim_lookup_id_stat_id_get(int,int,bcm_mim_stat_t,uint32 *);
extern int bcm_client_mim_port_add(int,bcm_mim_vpn_t,bcm_mim_port_t *);
extern int bcm_client_mim_port_delete(int,bcm_mim_vpn_t,bcm_gport_t);
extern int bcm_client_mim_port_delete_all(int,bcm_mim_vpn_t);
extern int bcm_client_mim_port_get(int,bcm_mim_vpn_t,bcm_mim_port_t *);
extern int bcm_client_mim_port_get_all(int,bcm_mim_vpn_t,int,bcm_mim_port_t *,int *);
/* bcm_mim_port_t_init not dispatchable */
/* bcm_mim_vpn_config_t_init not dispatchable */
extern int bcm_client_mim_vpn_create(int,bcm_mim_vpn_config_t *);
extern int bcm_client_mim_vpn_destroy(int,bcm_mim_vpn_t);
extern int bcm_client_mim_vpn_destroy_all(int);
extern int bcm_client_mim_vpn_get(int,bcm_mim_vpn_t,bcm_mim_vpn_config_t *);
extern int bcm_client_mim_vpn_stat_attach(int,bcm_mim_vpn_t,uint32);
extern int bcm_client_mim_vpn_stat_counter_get(int,bcm_mim_vpn_t,bcm_mim_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mim_vpn_stat_counter_set(int,bcm_mim_vpn_t,bcm_mim_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mim_vpn_stat_counter_sync_get(int,bcm_mim_vpn_t,bcm_mim_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mim_vpn_stat_detach(int,bcm_mim_vpn_t);
extern int bcm_client_mim_vpn_stat_id_get(int,bcm_mim_vpn_t,bcm_mim_stat_t,uint32 *);
extern int bcm_client_mim_vpn_traverse(int,bcm_mim_vpn_traverse_cb,void *);
#endif	/* INCLUDE_L3 */
extern int bcm_client_mirror_destination_create(int,bcm_mirror_destination_t *);
extern int bcm_client_mirror_destination_destroy(int,bcm_gport_t);
extern int bcm_client_mirror_destination_get(int,bcm_gport_t,bcm_mirror_destination_t *);
/* bcm_mirror_destination_t_init not dispatchable */
extern int bcm_client_mirror_destination_traverse(int,bcm_mirror_destination_traverse_cb,void *);
extern int bcm_client_mirror_egress_get(int,bcm_port_t,int *);
extern int bcm_client_mirror_egress_set(int,bcm_port_t,int);
extern int bcm_client_mirror_ingress_get(int,bcm_port_t,int *);
extern int bcm_client_mirror_ingress_set(int,bcm_port_t,int);
extern int bcm_client_mirror_init(int);
extern int bcm_client_mirror_mode_get(int,int *);
extern int bcm_client_mirror_mode_set(int,int);
/* bcm_mirror_options_t_init not dispatchable */
/* bcm_mirror_pkt_header_updates_t_init not dispatchable */
extern int bcm_client_mirror_port_dest_add(int,bcm_port_t,uint32,bcm_gport_t);
extern int bcm_client_mirror_port_dest_delete(int,bcm_port_t,uint32,bcm_gport_t);
extern int bcm_client_mirror_port_dest_delete_all(int,bcm_port_t,uint32);
extern int bcm_client_mirror_port_dest_get(int,bcm_port_t,uint32,int,bcm_gport_t *,int *);
/* bcm_mirror_port_destination_add mapped to bcm_e_unavail */
/* bcm_mirror_port_destination_get mapped to bcm_e_unavail */
extern int bcm_client_mirror_port_get(int,bcm_port_t,bcm_module_t *,bcm_port_t *,uint32 *);
extern int bcm_client_mirror_port_info_get(int,bcm_port_t,uint32,bcm_mirror_port_info_t *);
extern int bcm_client_mirror_port_info_set(int,bcm_port_t,uint32,bcm_mirror_port_info_t *);
/* bcm_mirror_port_info_t_init not dispatchable */
extern int bcm_client_mirror_port_set(int,bcm_port_t,bcm_module_t,bcm_port_t,uint32);
extern int bcm_client_mirror_port_vlan_dest_add(int,bcm_port_t,bcm_vlan_t,uint32,bcm_gport_t);
extern int bcm_client_mirror_port_vlan_dest_delete(int,bcm_port_t,bcm_vlan_t,uint32,bcm_gport_t);
extern int bcm_client_mirror_port_vlan_dest_delete_all(int,bcm_port_t,bcm_vlan_t,uint32);
extern int bcm_client_mirror_port_vlan_dest_get(int,bcm_port_t,bcm_vlan_t,uint32,uint32,bcm_gport_t *,uint32 *);
/* bcm_mirror_port_vlan_destination_add mapped to bcm_e_unavail */
/* bcm_mirror_port_vlan_destination_get mapped to bcm_e_unavail */
extern int bcm_client_mirror_port_vlan_get(int,bcm_port_t,bcm_vlan_t,bcm_gport_t *,uint32 *);
extern int bcm_client_mirror_port_vlan_set(int,bcm_port_t,bcm_vlan_t,bcm_gport_t,uint32);
extern int bcm_client_mirror_to_get(int,bcm_port_t *);
extern int bcm_client_mirror_to_pbmp_get(int,bcm_port_t,bcm_pbmp_t *);
extern int bcm_client_mirror_to_pbmp_set(int,bcm_port_t,bcm_pbmp_t);
extern int bcm_client_mirror_to_set(int,bcm_port_t);
extern int bcm_client_mirror_vlan_get(int,bcm_port_t,uint16 *,uint16 *);
extern int bcm_client_mirror_vlan_set(int,bcm_port_t,uint16,uint16);
/* bcm_module_name not dispatchable */
#ifdef	INCLUDE_L3
extern int bcm_client_mpls_cleanup(int);
/* bcm_mpls_egress_label_t_init not dispatchable */
extern int bcm_client_mpls_exp_map_create(int,uint32,int *);
extern int bcm_client_mpls_exp_map_destroy(int,int);
extern int bcm_client_mpls_exp_map_get(int,int,bcm_mpls_exp_map_t *);
extern int bcm_client_mpls_exp_map_set(int,int,bcm_mpls_exp_map_t *);
/* bcm_mpls_exp_map_t_init not dispatchable */
extern int bcm_client_mpls_init(int);
extern int bcm_client_mpls_label_stat_attach(int,bcm_mpls_label_t,bcm_gport_t,uint32);
extern int bcm_client_mpls_label_stat_clear(int,bcm_mpls_label_t,bcm_gport_t,bcm_mpls_stat_t);
extern int bcm_client_mpls_label_stat_counter_get(int,bcm_mpls_label_t,bcm_gport_t,bcm_mpls_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mpls_label_stat_counter_set(int,bcm_mpls_label_t,bcm_gport_t,bcm_mpls_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mpls_label_stat_counter_sync_get(int,bcm_mpls_label_t,bcm_gport_t,bcm_mpls_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mpls_label_stat_detach(int,bcm_mpls_label_t,bcm_gport_t);
extern int bcm_client_mpls_label_stat_enable_set(int,bcm_mpls_label_t,bcm_gport_t,int);
extern int bcm_client_mpls_label_stat_get(int,bcm_mpls_label_t,bcm_gport_t,bcm_mpls_stat_t,uint64 *);
extern int bcm_client_mpls_label_stat_get32(int,bcm_mpls_label_t,bcm_gport_t,bcm_mpls_stat_t,uint32 *);
extern int bcm_client_mpls_label_stat_id_get(int,bcm_mpls_label_t,bcm_gport_t,bcm_mpls_stat_t,uint32 *);
extern int bcm_client_mpls_label_stat_sync_get(int,bcm_mpls_label_t,bcm_gport_t,bcm_mpls_stat_t,uint64 *);
extern int bcm_client_mpls_label_stat_sync_get32(int,bcm_mpls_label_t,bcm_gport_t,bcm_mpls_stat_t,uint32 *);
extern int bcm_client_mpls_port_add(int,bcm_vpn_t,bcm_mpls_port_t *);
extern int bcm_client_mpls_port_delete(int,bcm_vpn_t,bcm_gport_t);
extern int bcm_client_mpls_port_delete_all(int,bcm_vpn_t);
extern int bcm_client_mpls_port_get(int,bcm_vpn_t,bcm_mpls_port_t *);
extern int bcm_client_mpls_port_get_all(int,bcm_vpn_t,int,bcm_mpls_port_t *,int *);
extern int bcm_client_mpls_port_stat_attach(int,bcm_vpn_t,bcm_gport_t,uint32);
extern int bcm_client_mpls_port_stat_counter_get(int,bcm_vpn_t,bcm_gport_t,bcm_mpls_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mpls_port_stat_counter_set(int,bcm_vpn_t,bcm_gport_t,bcm_mpls_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mpls_port_stat_counter_sync_get(int,bcm_vpn_t,bcm_gport_t,bcm_mpls_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_mpls_port_stat_detach(int,bcm_vpn_t,bcm_gport_t);
extern int bcm_client_mpls_port_stat_enable_set(int,bcm_gport_t,int);
extern int bcm_client_mpls_port_stat_get(int,bcm_gport_t,bcm_cos_t,bcm_mpls_port_stat_t,uint64 *);
extern int bcm_client_mpls_port_stat_get32(int,bcm_gport_t,bcm_cos_t,bcm_mpls_port_stat_t,uint32 *);
extern int bcm_client_mpls_port_stat_id_get(int,bcm_vpn_t,bcm_gport_t,bcm_mpls_stat_t,uint32 *);
extern int bcm_client_mpls_port_stat_set(int,bcm_gport_t,bcm_cos_t,bcm_mpls_port_stat_t,uint64);
extern int bcm_client_mpls_port_stat_set32(int,bcm_gport_t,bcm_cos_t,bcm_mpls_port_stat_t,uint32);
/* bcm_mpls_port_t_init not dispatchable */
extern int bcm_client_mpls_tunnel_initiator_clear(int,bcm_if_t);
extern int bcm_client_mpls_tunnel_initiator_clear_all(int);
extern int bcm_client_mpls_tunnel_initiator_create(int,bcm_if_t,int,bcm_mpls_egress_label_t *);
extern int bcm_client_mpls_tunnel_initiator_get(int,bcm_if_t,int,bcm_mpls_egress_label_t *,int *);
extern int bcm_client_mpls_tunnel_initiator_set(int,bcm_if_t,int,bcm_mpls_egress_label_t *);
extern int bcm_client_mpls_tunnel_switch_add(int,bcm_mpls_tunnel_switch_t *);
extern int bcm_client_mpls_tunnel_switch_create(int,bcm_mpls_tunnel_switch_t *);
extern int bcm_client_mpls_tunnel_switch_delete(int,bcm_mpls_tunnel_switch_t *);
extern int bcm_client_mpls_tunnel_switch_delete_all(int);
extern int bcm_client_mpls_tunnel_switch_get(int,bcm_mpls_tunnel_switch_t *);
/* bcm_mpls_tunnel_switch_t_init not dispatchable */
extern int bcm_client_mpls_tunnel_switch_traverse(int,bcm_mpls_tunnel_switch_traverse_cb,void *);
/* bcm_mpls_vpn_config_t_init not dispatchable */
extern int bcm_client_mpls_vpn_id_create(int,bcm_mpls_vpn_config_t *);
extern int bcm_client_mpls_vpn_id_destroy(int,bcm_vpn_t);
extern int bcm_client_mpls_vpn_id_destroy_all(int);
extern int bcm_client_mpls_vpn_id_get(int,bcm_vpn_t,bcm_mpls_vpn_config_t *);
extern int bcm_client_mpls_vpn_traverse(int,bcm_mpls_vpn_traverse_cb,void *);
#endif	/* INCLUDE_L3 */
extern int bcm_client_multicast_add(int,bcm_multicast_t,uint32,int,bcm_multicast_replication_t *);
extern int bcm_client_multicast_control_get(int,bcm_multicast_t,bcm_multicast_control_t,int *);
extern int bcm_client_multicast_control_set(int,bcm_multicast_t,bcm_multicast_control_t,int);
extern int bcm_client_multicast_create(int,uint32,bcm_multicast_t *);
extern int bcm_client_multicast_delete(int,bcm_multicast_t,uint32,int,bcm_multicast_replication_t *);
extern int bcm_client_multicast_destroy(int,bcm_multicast_t);
extern int bcm_client_multicast_detach(int);
extern int bcm_client_multicast_egress_add(int,bcm_multicast_t,bcm_gport_t,bcm_if_t);
extern int bcm_client_multicast_egress_delete(int,bcm_multicast_t,bcm_gport_t,bcm_if_t);
extern int bcm_client_multicast_egress_delete_all(int,bcm_multicast_t);
extern int bcm_client_multicast_egress_get(int,bcm_multicast_t,int,bcm_gport_t *,bcm_if_t *,int *);
extern int bcm_client_multicast_egress_object_encap_get(int,bcm_multicast_t,bcm_if_t,bcm_if_t *);
extern int bcm_client_multicast_egress_set(int,bcm_multicast_t,int,bcm_gport_t *,bcm_if_t *);
extern int bcm_client_multicast_egress_subscriber_add(int,bcm_multicast_t,bcm_gport_t,bcm_if_t,bcm_gport_t);
extern int bcm_client_multicast_egress_subscriber_delete(int,bcm_multicast_t,bcm_gport_t,bcm_if_t,bcm_gport_t);
extern int bcm_client_multicast_egress_subscriber_get(int,bcm_multicast_t,int,bcm_gport_t *,bcm_if_t *,bcm_gport_t *,int *);
extern int bcm_client_multicast_egress_subscriber_set(int,bcm_multicast_t,int,bcm_gport_t *,bcm_if_t *,bcm_gport_t *);
extern int bcm_client_multicast_extender_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_gport_t,bcm_if_t *);
extern int bcm_client_multicast_fabric_distribution_get(int,bcm_multicast_t,bcm_fabric_distribution_t *);
extern int bcm_client_multicast_fabric_distribution_set(int,bcm_multicast_t,bcm_fabric_distribution_t);
extern int bcm_client_multicast_get(int,bcm_multicast_t,uint32,int,bcm_multicast_replication_t *,int *);
extern int bcm_client_multicast_group_free_range_get(int,uint32,bcm_multicast_t *,bcm_multicast_t *);
extern int bcm_client_multicast_group_get(int,bcm_multicast_t,uint32 *);
extern int bcm_client_multicast_group_is_free(int,bcm_multicast_t);
extern int bcm_client_multicast_group_traverse(int,bcm_multicast_group_traverse_cb_t,uint32,void *);
extern int bcm_client_multicast_ingress_add(int,bcm_multicast_t,bcm_gport_t,bcm_if_t);
extern int bcm_client_multicast_ingress_delete(int,bcm_multicast_t,bcm_gport_t,bcm_if_t);
extern int bcm_client_multicast_ingress_delete_all(int,bcm_multicast_t);
extern int bcm_client_multicast_ingress_get(int,bcm_multicast_t,int,bcm_gport_t *,bcm_if_t *,int *);
extern int bcm_client_multicast_ingress_set(int,bcm_multicast_t,int,bcm_gport_t *,bcm_if_t *);
extern int bcm_client_multicast_init(int);
extern int bcm_client_multicast_l2_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_vlan_t,bcm_if_t *);
extern int bcm_client_multicast_l2gre_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_gport_t,bcm_if_t *);
extern int bcm_client_multicast_l3_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_if_t,bcm_if_t *);
extern int bcm_client_multicast_mac_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_gport_t,bcm_if_t *);
extern int bcm_client_multicast_mim_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_gport_t,bcm_if_t *);
extern int bcm_client_multicast_niv_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_gport_t,bcm_if_t *);
extern int bcm_client_multicast_repl_get(int,int,bcm_port_t,bcm_vlan_vector_t);
extern int bcm_client_multicast_repl_set(int,int,bcm_port_t,bcm_vlan_vector_t);
/* bcm_multicast_replication_t_init not dispatchable */
extern int bcm_client_multicast_set(int,bcm_multicast_t,uint32,int,bcm_multicast_replication_t *);
extern int bcm_client_multicast_subport_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_gport_t,bcm_if_t *);
extern int bcm_client_multicast_trill_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_if_t,bcm_if_t *);
extern int bcm_client_multicast_vlan_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_gport_t,bcm_if_t *);
extern int bcm_client_multicast_vpls_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_gport_t,bcm_if_t *);
extern int bcm_client_multicast_vxlan_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_gport_t,bcm_if_t *);
extern int bcm_client_multicast_wlan_encap_get(int,bcm_multicast_t,bcm_gport_t,bcm_gport_t,bcm_if_t *);
#ifdef	INCLUDE_L3
extern int bcm_client_niv_cleanup(int);
extern int bcm_client_niv_egress_add(int,bcm_gport_t,bcm_niv_egress_t *);
extern int bcm_client_niv_egress_delete(int,bcm_gport_t,bcm_niv_egress_t *);
extern int bcm_client_niv_egress_delete_all(int,bcm_gport_t);
extern int bcm_client_niv_egress_get(int,bcm_gport_t,int,bcm_niv_egress_t *,int *);
extern int bcm_client_niv_egress_set(int,bcm_gport_t,int,bcm_niv_egress_t *);
/* bcm_niv_egress_t_init not dispatchable */
extern int bcm_client_niv_forward_add(int,bcm_niv_forward_t *);
extern int bcm_client_niv_forward_delete(int,bcm_niv_forward_t *);
extern int bcm_client_niv_forward_delete_all(int);
extern int bcm_client_niv_forward_get(int,bcm_niv_forward_t *);
/* bcm_niv_forward_t_init not dispatchable */
extern int bcm_client_niv_forward_traverse(int,bcm_niv_forward_traverse_cb,void *);
extern int bcm_client_niv_init(int);
extern int bcm_client_niv_port_add(int,bcm_niv_port_t *);
extern int bcm_client_niv_port_delete(int,bcm_gport_t);
extern int bcm_client_niv_port_delete_all(int);
extern int bcm_client_niv_port_get(int,bcm_niv_port_t *);
/* bcm_niv_port_t_init not dispatchable */
extern int bcm_client_niv_port_traverse(int,bcm_niv_port_traverse_cb,void *);
#endif	/* INCLUDE_L3 */
extern int bcm_client_oam_control_get(int,bcm_oam_control_type_t,uint64 *);
extern int bcm_client_oam_control_set(int,bcm_oam_control_type_t,uint64);
extern int bcm_client_oam_delay_add(int,bcm_oam_delay_t *);
extern int bcm_client_oam_delay_delete(int,bcm_oam_delay_t *);
extern int bcm_client_oam_delay_get(int,bcm_oam_delay_t *);
/* bcm_oam_delay_t_init not dispatchable */
extern int bcm_client_oam_detach(int);
extern int bcm_client_oam_endpoint_action_set(int,bcm_oam_endpoint_t,bcm_oam_endpoint_action_t *);
extern int bcm_client_oam_endpoint_create(int,bcm_oam_endpoint_info_t *);
extern int bcm_client_oam_endpoint_destroy(int,bcm_oam_endpoint_t);
extern int bcm_client_oam_endpoint_destroy_all(int,bcm_oam_group_t);
extern int bcm_client_oam_endpoint_get(int,bcm_oam_endpoint_t,bcm_oam_endpoint_info_t *);
/* bcm_oam_endpoint_info_t_init not dispatchable */
extern int bcm_client_oam_endpoint_traverse(int,bcm_oam_group_t,bcm_oam_endpoint_traverse_cb,void *);
extern int bcm_client_oam_event_register(int,bcm_oam_event_types_t,bcm_oam_event_cb,void *);
extern int bcm_client_oam_event_unregister(int,bcm_oam_event_types_t,bcm_oam_event_cb);
extern int bcm_client_oam_group_create(int,bcm_oam_group_info_t *);
extern int bcm_client_oam_group_destroy(int,bcm_oam_group_t);
extern int bcm_client_oam_group_destroy_all(int);
extern int bcm_client_oam_group_get(int,bcm_oam_group_t,bcm_oam_group_info_t *);
/* bcm_oam_group_info_t_init not dispatchable */
extern int bcm_client_oam_group_traverse(int,bcm_oam_group_traverse_cb,void *);
extern int bcm_client_oam_init(int);
extern int bcm_client_oam_loopback_add(int,bcm_oam_loopback_t *);
extern int bcm_client_oam_loopback_delete(int,bcm_oam_loopback_t *);
extern int bcm_client_oam_loopback_get(int,bcm_oam_loopback_t *);
/* bcm_oam_loopback_t_init not dispatchable */
extern int bcm_client_oam_loss_add(int,bcm_oam_loss_t *);
extern int bcm_client_oam_loss_delete(int,bcm_oam_loss_t *);
extern int bcm_client_oam_loss_get(int,bcm_oam_loss_t *);
/* bcm_oam_loss_t_init not dispatchable */
extern int bcm_client_oam_opcode_map_get(int,int,int *);
extern int bcm_client_oam_opcode_map_set(int,int,int);
extern int bcm_client_oam_psc_add(int,bcm_oam_psc_t *);
extern int bcm_client_oam_psc_delete(int,bcm_oam_psc_t *);
extern int bcm_client_oam_psc_get(int,bcm_oam_psc_t *);
/* bcm_oam_psc_t_init not dispatchable */
extern int bcm_client_oam_pw_status_add(int,bcm_oam_pw_status_t *);
extern int bcm_client_oam_pw_status_delete(int,bcm_oam_pw_status_t *);
extern int bcm_client_oam_pw_status_get(int,bcm_oam_pw_status_t *);
/* bcm_oam_pw_status_t_init not dispatchable */
/* bcm_phy_config_t_init not dispatchable */
/* bcm_pkt_alloc not dispatchable */
/* bcm_pkt_blk_alloc not dispatchable */
/* bcm_pkt_blk_free not dispatchable */
/* bcm_pkt_blk_t_init not dispatchable */
/* bcm_pkt_byte_index not dispatchable */
/* bcm_pkt_clear not dispatchable */
/* bcm_pkt_flags_init not dispatchable */
/* bcm_pkt_flags_len_setup not dispatchable */
/* bcm_pkt_free not dispatchable */
/* bcm_pkt_memcpy not dispatchable */
/* bcm_pkt_rx_alloc not dispatchable */
/* bcm_pkt_rx_free not dispatchable */
/* bcm_pkt_t_init not dispatchable */
extern int bcm_client_policer_action_add(int,uint32,bcm_policer_action_t,uint32);
extern int bcm_client_policer_action_attach(int,bcm_policer_t,uint32);
extern int bcm_client_policer_action_attach_get(int,bcm_policer_t,uint32 *);
extern int bcm_client_policer_action_create(int,uint32 *);
extern int bcm_client_policer_action_destroy(int,uint32);
extern int bcm_client_policer_action_detach(int,bcm_policer_t,uint32);
extern int bcm_client_policer_action_get(int,uint32,bcm_policer_action_t,uint32 *);
/* bcm_policer_config_t_init not dispatchable */
extern int bcm_client_policer_create(int,bcm_policer_config_t *,bcm_policer_t *);
extern int bcm_client_policer_destroy(int,bcm_policer_t);
extern int bcm_client_policer_destroy_all(int);
extern int bcm_client_policer_envelop_create(int,uint32,bcm_policer_t,bcm_policer_t *);
extern int bcm_client_policer_envelop_group_create(int,uint32,bcm_policer_group_mode_t,bcm_policer_t,bcm_policer_t *,int *);
extern int bcm_client_policer_get(int,bcm_policer_t,bcm_policer_config_t *);
extern int bcm_client_policer_group_create(int,bcm_policer_group_mode_t,bcm_policer_t *,int *);
extern int bcm_client_policer_init(int);
extern int bcm_client_policer_set(int,bcm_policer_t,bcm_policer_config_t *);
extern int bcm_client_policer_stat_enable_get(int,bcm_policer_t,int *);
extern int bcm_client_policer_stat_enable_set(int,bcm_policer_t,int);
extern int bcm_client_policer_stat_get(int,bcm_policer_t,bcm_cos_t,bcm_policer_stat_t,uint64 *);
extern int bcm_client_policer_stat_get32(int,bcm_policer_t,bcm_cos_t,bcm_policer_stat_t,uint32 *);
extern int bcm_client_policer_stat_set(int,bcm_policer_t,bcm_cos_t,bcm_policer_stat_t,uint64);
extern int bcm_client_policer_stat_set32(int,bcm_policer_t,bcm_cos_t,bcm_policer_stat_t,uint32);
extern int bcm_client_policer_traverse(int,bcm_policer_traverse_cb,void *);
extern int bcm_client_port_ability_advert_get(int,bcm_port_t,bcm_port_ability_t *);
extern int bcm_client_port_ability_advert_set(int,bcm_port_t,bcm_port_ability_t *);
extern int bcm_client_port_ability_get(int,bcm_port_t,bcm_port_abil_t *);
extern int bcm_client_port_ability_local_get(int,bcm_port_t,bcm_port_ability_t *);
extern int bcm_client_port_ability_remote_get(int,bcm_port_t,bcm_port_ability_t *);
/* bcm_port_ability_t_init not dispatchable */
extern int bcm_client_port_advert_get(int,bcm_port_t,bcm_port_abil_t *);
extern int bcm_client_port_advert_remote_get(int,bcm_port_t,bcm_port_abil_t *);
extern int bcm_client_port_advert_set(int,bcm_port_t,bcm_port_abil_t);
extern int bcm_client_port_autoneg_get(int,bcm_port_t,int *);
extern int bcm_client_port_autoneg_set(int,bcm_port_t,int);
extern int bcm_client_port_bpdu_enable_get(int,bcm_port_t,int *);
extern int bcm_client_port_bpdu_enable_set(int,bcm_port_t,int);
extern int bcm_client_port_cable_diag(int,bcm_port_t,bcm_port_cable_diag_t *);
extern int bcm_client_port_cfi_color_get(int,bcm_port_t,int,bcm_color_t *);
extern int bcm_client_port_cfi_color_set(int,bcm_port_t,int,bcm_color_t);
extern int bcm_client_port_class_get(int,bcm_port_t,bcm_port_class_t,uint32 *);
extern int bcm_client_port_class_set(int,bcm_port_t,bcm_port_class_t,uint32);
extern int bcm_client_port_clear(int);
extern int bcm_client_port_config_get(int,bcm_port_config_t *);
extern int bcm_client_port_config_phy_oam_get(int,bcm_port_t,bcm_port_config_phy_oam_t *);
extern int bcm_client_port_config_phy_oam_set(int,bcm_port_t,bcm_port_config_phy_oam_t *);
/* bcm_port_config_t_init not dispatchable */
extern int bcm_client_port_congestion_config_get(int,bcm_gport_t,bcm_port_congestion_config_t *);
extern int bcm_client_port_congestion_config_set(int,bcm_gport_t,bcm_port_congestion_config_t *);
/* bcm_port_congestion_config_t_init not dispatchable */
extern int bcm_client_port_congestion_get(int,bcm_gport_t,bcm_gport_t,uint32,int *);
extern int bcm_client_port_congestion_set(int,bcm_gport_t,bcm_gport_t,uint32,int);
extern int bcm_client_port_control_get(int,bcm_port_t,bcm_port_control_t,int *);
extern int bcm_client_port_control_phy_oam_get(int,bcm_port_t,bcm_port_control_phy_oam_t,uint64 *);
extern int bcm_client_port_control_phy_oam_set(int,bcm_port_t,bcm_port_control_phy_oam_t,uint64);
extern int bcm_client_port_control_phy_timesync_get(int,bcm_port_t,bcm_port_control_phy_timesync_t,uint64 *);
extern int bcm_client_port_control_phy_timesync_set(int,bcm_port_t,bcm_port_control_phy_timesync_t,uint64);
extern int bcm_client_port_control_set(int,bcm_port_t,bcm_port_control_t,int);
extern int bcm_client_port_detach(int,bcm_pbmp_t,bcm_pbmp_t *);
extern int bcm_client_port_discard_get(int,bcm_port_t,int *);
extern int bcm_client_port_discard_set(int,bcm_port_t,int);
extern int bcm_client_port_dscp_map_get(int,bcm_port_t,int,int *,int *);
extern int bcm_client_port_dscp_map_mode_get(int,bcm_port_t,int *);
extern int bcm_client_port_dscp_map_mode_set(int,bcm_port_t,int);
extern int bcm_client_port_dscp_map_set(int,bcm_port_t,int,int,int);
extern int bcm_client_port_dscp_unmap_get(int,bcm_port_t,int,bcm_color_t,int *);
extern int bcm_client_port_dscp_unmap_set(int,bcm_port_t,int,bcm_color_t,int);
extern int bcm_client_port_dtag_mode_get(int,bcm_port_t,int *);
extern int bcm_client_port_dtag_mode_set(int,bcm_port_t,int);
extern int bcm_client_port_duplex_get(int,bcm_port_t,int *);
extern int bcm_client_port_duplex_set(int,bcm_port_t,int);
extern int bcm_client_port_egress_get(int,bcm_port_t,int,bcm_pbmp_t *);
extern int bcm_client_port_egress_policer_set(int,bcm_port_t,bcm_policer_t);
extern int bcm_client_port_egress_set(int,bcm_port_t,int,bcm_pbmp_t);
extern int bcm_client_port_enable_get(int,bcm_port_t,int *);
extern int bcm_client_port_enable_set(int,bcm_port_t,int);
extern int bcm_client_port_encap_config_get(int,bcm_gport_t,bcm_port_encap_config_t *);
extern int bcm_client_port_encap_config_set(int,bcm_gport_t,bcm_port_encap_config_t *);
/* bcm_port_encap_config_t_init not dispatchable */
extern int bcm_client_port_encap_get(int,bcm_port_t,int *);
extern int bcm_client_port_encap_map_get(int,uint32,bcm_if_t,bcm_gport_t *);
extern int bcm_client_port_encap_map_set(int,uint32,bcm_if_t,bcm_gport_t);
extern int bcm_client_port_encap_set(int,bcm_port_t,int);
extern int bcm_client_port_fault_get(int,bcm_port_t,uint32 *);
extern int bcm_client_port_flood_block_get(int,bcm_port_t,bcm_port_t,uint32 *);
extern int bcm_client_port_flood_block_set(int,bcm_port_t,bcm_port_t,uint32);
extern int bcm_client_port_force_dest_get(int,bcm_gport_t,bcm_port_dest_info_t *);
extern int bcm_client_port_force_dest_set(int,bcm_gport_t,bcm_port_dest_info_t *);
extern int bcm_client_port_force_forward_get(int,bcm_port_t,bcm_port_t *,int *);
extern int bcm_client_port_force_forward_mode_get(int,bcm_port_t,bcm_port_t *,uint32 *);
extern int bcm_client_port_force_forward_mode_set(int,bcm_port_t,bcm_port_t,uint32);
extern int bcm_client_port_force_forward_set(int,bcm_port_t,bcm_port_t,int);
extern int bcm_client_port_force_vlan_get(int,bcm_port_t,bcm_vlan_t *,int *,uint32 *);
extern int bcm_client_port_force_vlan_set(int,bcm_port_t,bcm_vlan_t,int,uint32);
extern int bcm_client_port_frame_max_get(int,bcm_port_t,int *);
extern int bcm_client_port_frame_max_set(int,bcm_port_t,int);
extern int bcm_client_port_gport_free_range_get(int,uint32,bcm_gport_t *,bcm_gport_t *);
extern int bcm_client_port_gport_get(int,bcm_port_t,bcm_gport_t *);
extern int bcm_client_port_gport_is_free(int,bcm_gport_t);
extern int bcm_client_port_ifg_get(int,bcm_port_t,int,bcm_port_duplex_t,int *);
extern int bcm_client_port_ifg_set(int,bcm_port_t,int,bcm_port_duplex_t,int);
extern int bcm_client_port_ifilter_get(int,bcm_port_t,int *);
extern int bcm_client_port_ifilter_set(int,bcm_port_t,int);
extern int bcm_client_port_info_get(int,bcm_port_t,bcm_port_info_t *);
extern int bcm_client_port_info_restore(int,bcm_port_t,bcm_port_info_t *);
extern int bcm_client_port_info_save(int,bcm_port_t,bcm_port_info_t *);
extern int bcm_client_port_info_set(int,bcm_port_t,bcm_port_info_t *);
/* bcm_port_info_t_init not dispatchable */
extern int bcm_client_port_init(int);
extern int bcm_client_port_inner_tpid_get(int,bcm_port_t,uint16 *);
extern int bcm_client_port_inner_tpid_set(int,bcm_port_t,uint16);
extern int bcm_client_port_interface_config_get(int,bcm_port_t,bcm_port_interface_config_t *);
extern int bcm_client_port_interface_config_set(int,bcm_port_t,bcm_port_interface_config_t *);
/* bcm_port_interface_config_t_init not dispatchable */
extern int bcm_client_port_interface_get(int,bcm_port_t,bcm_port_if_t *);
extern int bcm_client_port_interface_set(int,bcm_port_t,bcm_port_if_t);
extern int bcm_client_port_internal_get(int,uint32,int,bcm_gport_t *,int *);
extern int bcm_client_port_ipmc_modify_get(int,bcm_port_t,uint32 *);
extern int bcm_client_port_ipmc_modify_set(int,bcm_port_t,uint32);
extern int bcm_client_port_jam_get(int,bcm_port_t,int *);
extern int bcm_client_port_jam_set(int,bcm_port_t,int);
extern int bcm_client_port_l3_enable_get(int,bcm_port_t,int *);
extern int bcm_client_port_l3_enable_set(int,bcm_port_t,int);
extern int bcm_client_port_l3_modify_get(int,bcm_port_t,uint32 *);
extern int bcm_client_port_l3_modify_set(int,bcm_port_t,uint32);
extern int bcm_client_port_l3_mtu_get(int,bcm_port_t,int *);
extern int bcm_client_port_l3_mtu_set(int,bcm_port_t,int);
extern int bcm_client_port_learn_get(int,bcm_port_t,uint32 *);
extern int bcm_client_port_learn_modify(int,bcm_port_t,uint32,uint32);
extern int bcm_client_port_learn_set(int,bcm_port_t,uint32);
extern int bcm_client_port_link_failed_clear(int,bcm_port_t);
extern int bcm_client_port_link_state_get(int,bcm_port_t,uint32,bcm_port_link_state_t *);
extern int bcm_client_port_link_status_get(int,bcm_port_t,int *);
extern int bcm_client_port_linkscan_get(int,bcm_port_t,int *);
extern int bcm_client_port_linkscan_set(int,bcm_port_t,int);
extern int bcm_client_port_local_get(int,bcm_gport_t,bcm_port_t *);
extern int bcm_client_port_loopback_get(int,bcm_port_t,int *);
extern int bcm_client_port_loopback_set(int,bcm_port_t,int);
extern int bcm_client_port_management_packet_config_get(int,bcm_port_t,bcm_port_management_packet_config_t *,int,int *);
extern int bcm_client_port_management_packet_config_set(int,bcm_port_t,bcm_port_management_packet_config_t *);
extern int bcm_client_port_master_get(int,bcm_port_t,int *);
extern int bcm_client_port_master_set(int,bcm_port_t,int);
extern int bcm_client_port_match_add(int,bcm_gport_t,bcm_port_match_info_t *);
extern int bcm_client_port_match_delete(int,bcm_gport_t,bcm_port_match_info_t *);
extern int bcm_client_port_match_delete_all(int,bcm_gport_t);
/* bcm_port_match_info_t_init not dispatchable */
extern int bcm_client_port_match_multi_get(int,bcm_gport_t,int,bcm_port_match_info_t *,int *);
extern int bcm_client_port_match_replace(int,bcm_gport_t,bcm_port_match_info_t *,bcm_port_match_info_t *);
extern int bcm_client_port_match_set(int,bcm_gport_t,int,bcm_port_match_info_t *);
extern int bcm_client_port_mdix_get(int,bcm_port_t,bcm_port_mdix_t *);
extern int bcm_client_port_mdix_set(int,bcm_port_t,bcm_port_mdix_t);
extern int bcm_client_port_mdix_status_get(int,bcm_port_t,bcm_port_mdix_status_t *);
extern int bcm_client_port_medium_config_get(int,bcm_port_t,bcm_port_medium_t,bcm_phy_config_t *);
extern int bcm_client_port_medium_config_set(int,bcm_port_t,bcm_port_medium_t,bcm_phy_config_t *);
extern int bcm_client_port_medium_get(int,bcm_port_t,bcm_port_medium_t *);
/* bcm_port_medium_status_register mapped to bcm_e_unavail */
/* bcm_port_medium_status_unregister mapped to bcm_e_unavail */
extern int bcm_client_port_modid_egress_get(int,bcm_port_t,bcm_module_t,bcm_pbmp_t *);
extern int bcm_client_port_modid_egress_set(int,bcm_port_t,bcm_module_t,bcm_pbmp_t);
extern int bcm_client_port_modid_enable_get(int,bcm_port_t,int,int *);
extern int bcm_client_port_modid_enable_set(int,bcm_port_t,int,int);
extern int bcm_client_port_pause_addr_get(int,bcm_port_t,bcm_mac_t);
extern int bcm_client_port_pause_addr_set(int,bcm_port_t,bcm_mac_t);
extern int bcm_client_port_pause_get(int,bcm_port_t,int *,int *);
extern int bcm_client_port_pause_set(int,bcm_port_t,int,int);
extern int bcm_client_port_pause_sym_get(int,bcm_port_t,int *);
extern int bcm_client_port_pause_sym_set(int,bcm_port_t,int);
extern int bcm_client_port_pfm_get(int,bcm_port_t,int *);
extern int bcm_client_port_pfm_set(int,bcm_port_t,int);
extern int bcm_client_port_phy_control_get(int,bcm_port_t,bcm_port_phy_control_t,uint32 *);
extern int bcm_client_port_phy_control_set(int,bcm_port_t,bcm_port_phy_control_t,uint32);
/* bcm_port_phy_drv_name_get mapped to bcm_e_unavail */
extern int bcm_client_port_phy_firmware_set(int,bcm_port_t,uint32,int,uint8 *,int);
extern int bcm_client_port_phy_get(int,bcm_port_t,uint32,uint32,uint32 *);
extern int bcm_client_port_phy_modify(int,bcm_port_t,uint32,uint32,uint32,uint32);
extern int bcm_client_port_phy_multi_get(int,bcm_port_t,uint32,uint32,uint32,int,uint8 *,int *);
extern int bcm_client_port_phy_reset(int,bcm_port_t);
/* bcm_port_phy_reset_register mapped to bcm_e_unavail */
/* bcm_port_phy_reset_unregister mapped to bcm_e_unavail */
extern int bcm_client_port_phy_set(int,bcm_port_t,uint32,uint32,uint32);
extern int bcm_client_port_phy_timesync_config_get(int,bcm_port_t,bcm_port_phy_timesync_config_t *);
extern int bcm_client_port_phy_timesync_config_set(int,bcm_port_t,bcm_port_phy_timesync_config_t *);
/* bcm_port_phy_timesync_config_t_init not dispatchable */
extern int bcm_client_port_phy_timesync_enhanced_capture_get(int,bcm_port_t,bcm_port_phy_timesync_enhanced_capture_t *);
extern int bcm_client_port_policer_get(int,bcm_port_t,bcm_policer_t *);
extern int bcm_client_port_policer_set(int,bcm_port_t,bcm_policer_t);
extern int bcm_client_port_pon_info_get(int,bcm_port_t,bcm_port_pon_info_t *);
extern int bcm_client_port_pon_info_set(int,bcm_port_t,bcm_port_pon_info_t *);
extern int bcm_client_port_pon_tunnel_add(int,bcm_gport_t,uint32,bcm_gport_t *);
extern int bcm_client_port_pon_tunnel_map_get(int,bcm_gport_t,bcm_tunnel_id_t,bcm_gport_t *);
extern int bcm_client_port_pon_tunnel_map_set(int,bcm_gport_t,bcm_tunnel_id_t,bcm_gport_t);
extern int bcm_client_port_pon_tunnel_remove(int,bcm_gport_t);
extern int bcm_client_port_priority_color_get(int,bcm_port_t,int,bcm_color_t *);
extern int bcm_client_port_priority_color_set(int,bcm_port_t,int,bcm_color_t);
extern int bcm_client_port_probe(int,bcm_pbmp_t,bcm_pbmp_t *);
extern int bcm_client_port_protocol_vlan_add(int,bcm_port_t,bcm_port_frametype_t,bcm_port_ethertype_t,bcm_vlan_t);
extern int bcm_client_port_protocol_vlan_delete(int,bcm_port_t,bcm_port_frametype_t,bcm_port_ethertype_t);
extern int bcm_client_port_protocol_vlan_delete_all(int,bcm_port_t);
extern int bcm_client_port_queued_count_get(int,bcm_port_t,uint32 *);
extern int bcm_client_port_rate_egress_get(int,bcm_port_t,uint32 *,uint32 *);
extern int bcm_client_port_rate_egress_pps_get(int,bcm_port_t,uint32 *,uint32 *);
extern int bcm_client_port_rate_egress_pps_set(int,bcm_port_t,uint32,uint32);
extern int bcm_client_port_rate_egress_set(int,bcm_port_t,uint32,uint32);
extern int bcm_client_port_rate_egress_traffic_get(int,bcm_port_t,uint32 *,uint32 *,uint32 *);
extern int bcm_client_port_rate_egress_traffic_set(int,bcm_port_t,uint32,uint32,uint32);
extern int bcm_client_port_rate_ingress_get(int,bcm_port_t,uint32 *,uint32 *);
extern int bcm_client_port_rate_ingress_set(int,bcm_port_t,uint32,uint32);
extern int bcm_client_port_rate_pause_get(int,bcm_port_t,uint32 *,uint32 *);
extern int bcm_client_port_rate_pause_set(int,bcm_port_t,uint32,uint32);
extern int bcm_client_port_sample_rate_get(int,bcm_port_t,int *,int *);
extern int bcm_client_port_sample_rate_set(int,bcm_port_t,int,int);
extern int bcm_client_port_selective_get(int,bcm_port_t,bcm_port_info_t *);
extern int bcm_client_port_selective_set(int,bcm_port_t,bcm_port_info_t *);
extern int bcm_client_port_speed_get(int,bcm_port_t,int *);
extern int bcm_client_port_speed_max(int,bcm_port_t,int *);
extern int bcm_client_port_speed_set(int,bcm_port_t,int);
extern int bcm_client_port_stat_attach(int,bcm_gport_t,uint32);
extern int bcm_client_port_stat_counter_get(int,bcm_gport_t,bcm_port_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_port_stat_counter_set(int,bcm_gport_t,bcm_port_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_port_stat_counter_sync_get(int,bcm_gport_t,bcm_port_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_port_stat_detach(int,bcm_gport_t);
extern int bcm_client_port_stat_detach_with_id(int,bcm_gport_t,uint32);
extern int bcm_client_port_stat_enable_set(int,bcm_gport_t,int);
extern int bcm_client_port_stat_get(int,bcm_gport_t,bcm_port_stat_t,uint64 *);
extern int bcm_client_port_stat_get32(int,bcm_gport_t,bcm_port_stat_t,uint32 *);
extern int bcm_client_port_stat_id_get(int,bcm_gport_t,bcm_port_stat_t,uint32 *);
extern int bcm_client_port_stat_multi_get(int,bcm_gport_t,int,bcm_port_stat_t *,uint64 *);
extern int bcm_client_port_stat_multi_get32(int,bcm_gport_t,int,bcm_port_stat_t *,uint32 *);
extern int bcm_client_port_stat_multi_set(int,bcm_gport_t,int,bcm_port_stat_t *,uint64 *);
extern int bcm_client_port_stat_multi_set32(int,bcm_gport_t,int,bcm_port_stat_t *,uint32 *);
extern int bcm_client_port_stat_set(int,bcm_gport_t,bcm_port_stat_t,uint64);
extern int bcm_client_port_stat_set32(int,bcm_gport_t,bcm_port_stat_t,uint32);
extern int bcm_client_port_stat_sync_get(int,bcm_gport_t,bcm_port_stat_t,uint64 *);
extern int bcm_client_port_stat_sync_get32(int,bcm_gport_t,bcm_port_stat_t,uint32 *);
extern int bcm_client_port_stp_get(int,bcm_port_t,int *);
extern int bcm_client_port_stp_set(int,bcm_port_t,int);
extern int bcm_client_port_subsidiary_ports_get(int,bcm_port_t,bcm_pbmp_t *);
#ifdef	INCLUDE_CES
extern int bcm_client_port_tdm_cas_abcd_get(int,bcm_port_t,bcm_tdm_port_cas_status_t,uint8 *);
extern int bcm_client_port_tdm_cas_status_get(int,bcm_port_t,uint32 *);
extern int bcm_client_port_tdm_ces_ports_get(int,bcm_port_t,uint32 *,uint32 [BCM_CES_SLOT_MAX]);
extern int bcm_client_port_tdm_config_get(int,bcm_port_t,bcm_tdm_port_config_t *);
extern int bcm_client_port_tdm_config_set(int,bcm_port_t,bcm_tdm_port_config_t *);
#endif	/* INCLUDE_CES */
extern int bcm_client_port_tgid_get(int,bcm_port_t,int *,int *);
extern int bcm_client_port_tgid_set(int,bcm_port_t,int,int);
extern int bcm_client_port_timesync_config_get(int,bcm_port_t,int,bcm_port_timesync_config_t *,int *);
extern int bcm_client_port_timesync_config_set(int,bcm_port_t,int,bcm_port_timesync_config_t *);
/* bcm_port_timesync_config_t_init not dispatchable */
extern int bcm_client_port_tpid_add(int,bcm_port_t,uint16,int);
extern int bcm_client_port_tpid_class_get(int,bcm_port_tpid_class_t *);
extern int bcm_client_port_tpid_class_set(int,bcm_port_tpid_class_t *);
/* bcm_port_tpid_class_t_init not dispatchable */
extern int bcm_client_port_tpid_delete(int,bcm_port_t,uint16);
extern int bcm_client_port_tpid_delete_all(int,bcm_port_t);
extern int bcm_client_port_tpid_get(int,bcm_port_t,uint16 *);
extern int bcm_client_port_tpid_get_all(int,bcm_port_t,int,uint16 *,int *,int *);
extern int bcm_client_port_tpid_set(int,bcm_port_t,uint16);
extern int bcm_client_port_trunk_index_get(int,bcm_port_t,int *);
extern int bcm_client_port_trunk_index_set(int,bcm_port_t,int);
extern int bcm_client_port_untagged_priority_get(int,bcm_port_t,int *);
extern int bcm_client_port_untagged_priority_set(int,bcm_port_t,int);
extern int bcm_client_port_untagged_vlan_get(int,bcm_port_t,bcm_vlan_t *);
extern int bcm_client_port_untagged_vlan_set(int,bcm_port_t,bcm_vlan_t);
extern int bcm_client_port_update(int,bcm_port_t,int);
extern int bcm_client_port_vlan_dscp_map_get(int,bcm_port_t,bcm_vlan_t,int,int *,bcm_color_t *);
extern int bcm_client_port_vlan_dscp_map_set(int,bcm_port_t,bcm_vlan_t,int,int,bcm_color_t);
extern int bcm_client_port_vlan_inner_tag_get(int,bcm_port_t,uint16 *);
extern int bcm_client_port_vlan_inner_tag_set(int,bcm_port_t,uint16);
extern int bcm_client_port_vlan_member_get(int,bcm_port_t,uint32 *);
extern int bcm_client_port_vlan_member_set(int,bcm_port_t,uint32);
extern int bcm_client_port_vlan_pri_map_get(int,bcm_port_t,bcm_vlan_t,int,int,int *,bcm_color_t *);
extern int bcm_client_port_vlan_pri_map_set(int,bcm_port_t,bcm_vlan_t,int,int,int,bcm_color_t);
extern int bcm_client_port_vlan_priority_map_get(int,bcm_port_t,int,int,int *,bcm_color_t *);
extern int bcm_client_port_vlan_priority_map_set(int,bcm_port_t,int,int,int,bcm_color_t);
extern int bcm_client_port_vlan_priority_mapping_get(int,bcm_port_t,bcm_vlan_t,int,int,bcm_priority_mapping_t *);
extern int bcm_client_port_vlan_priority_mapping_set(int,bcm_port_t,bcm_vlan_t,int,int,bcm_priority_mapping_t *);
extern int bcm_client_port_vlan_priority_unmap_get(int,bcm_port_t,int,bcm_color_t,int *,int *);
extern int bcm_client_port_vlan_priority_unmap_set(int,bcm_port_t,int,bcm_color_t,int,int);
extern int bcm_client_port_vlan_vector_get(int,bcm_gport_t,bcm_vlan_vector_t);
extern int bcm_client_port_vlan_vector_set(int,bcm_gport_t,bcm_vlan_vector_t);
/* bcm_priority_mapping_t_init not dispatchable */
#ifdef	INCLUDE_L3
extern int bcm_client_proxy_cleanup(int);
extern int bcm_client_proxy_client_set(int,bcm_port_t,bcm_proxy_proto_type_t,bcm_module_t,bcm_port_t,int);
extern int bcm_client_proxy_egress_create(int,uint32,bcm_proxy_egress_t *,bcm_if_t *);
extern int bcm_client_proxy_egress_destroy(int,bcm_if_t);
extern int bcm_client_proxy_egress_get(int,bcm_if_t,bcm_proxy_egress_t *);
/* bcm_proxy_egress_t_init not dispatchable */
extern int bcm_client_proxy_egress_traverse(int,bcm_proxy_egress_traverse_cb,void *);
extern int bcm_client_proxy_init(int);
extern int bcm_client_proxy_server_get(int,bcm_port_t,bcm_proxy_mode_t,int *);
extern int bcm_client_proxy_server_port_get(int,bcm_gport_t,bcm_proxy_server_t *,int *);
extern int bcm_client_proxy_server_port_set(int,bcm_gport_t,bcm_proxy_server_t *,int);
extern int bcm_client_proxy_server_set(int,bcm_port_t,bcm_proxy_mode_t,int);
/* bcm_proxy_server_t_init not dispatchable */
#endif	/* INCLUDE_L3 */
#ifdef	INCLUDE_PTP
/* bcm_ptp_acceptable_master_add mapped to bcm_e_unavail */
/* bcm_ptp_acceptable_master_enabled_get mapped to bcm_e_unavail */
/* bcm_ptp_acceptable_master_enabled_set mapped to bcm_e_unavail */
/* bcm_ptp_acceptable_master_list mapped to bcm_e_unavail */
/* bcm_ptp_acceptable_master_remove mapped to bcm_e_unavail */
/* bcm_ptp_acceptable_master_table_clear mapped to bcm_e_unavail */
/* bcm_ptp_acceptable_master_table_size_get mapped to bcm_e_unavail */
/* bcm_ptp_cb_register mapped to bcm_e_unavail */
/* bcm_ptp_cb_unregister mapped to bcm_e_unavail */
/* bcm_ptp_clock_accuracy_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_accuracy_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_create mapped to bcm_e_unavail */
/* bcm_ptp_clock_current_dataset_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_default_dataset_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_domain_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_domain_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_parent_dataset_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_announce_receipt_timeout_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_announce_receipt_timeout_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_configure mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_dataset_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_delay_mechanism_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_delay_mechanism_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_disable mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_enable mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_identity_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_info_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_latency_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_log_announce_interval_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_log_announce_interval_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_log_min_delay_req_interval_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_log_min_delay_req_interval_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_log_min_pdelay_req_interval_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_log_min_pdelay_req_interval_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_log_sync_interval_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_log_sync_interval_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_mac_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_protocol_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_type_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_port_version_number_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_priority1_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_priority1_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_priority2_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_priority2_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_slaveonly_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_slaveonly_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_time_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_time_properties_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_time_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_timescale_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_timescale_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_traceability_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_traceability_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_user_description_set mapped to bcm_e_unavail */
/* bcm_ptp_clock_utc_get mapped to bcm_e_unavail */
/* bcm_ptp_clock_utc_set mapped to bcm_e_unavail */
/* bcm_ptp_ctdev_alarm_callback_register mapped to bcm_e_unavail */
/* bcm_ptp_ctdev_alarm_callback_unregister mapped to bcm_e_unavail */
/* bcm_ptp_ctdev_alpha_get mapped to bcm_e_unavail */
/* bcm_ptp_ctdev_alpha_set mapped to bcm_e_unavail */
/* bcm_ptp_ctdev_enable_get mapped to bcm_e_unavail */
/* bcm_ptp_ctdev_enable_set mapped to bcm_e_unavail */
/* bcm_ptp_ctdev_verbose_get mapped to bcm_e_unavail */
/* bcm_ptp_ctdev_verbose_set mapped to bcm_e_unavail */
extern int bcm_client_ptp_detach(int);
/* bcm_ptp_foreign_master_dataset_get mapped to bcm_e_unavail */
extern int bcm_client_ptp_init(int);
/* bcm_ptp_input_channel_precedence_mode_set mapped to bcm_e_unavail */
/* bcm_ptp_input_channel_switching_mode_set mapped to bcm_e_unavail */
/* bcm_ptp_input_channels_get mapped to bcm_e_unavail */
/* bcm_ptp_input_channels_set mapped to bcm_e_unavail */
/* bcm_ptp_modular_enable_get mapped to bcm_e_unavail */
/* bcm_ptp_modular_enable_set mapped to bcm_e_unavail */
/* bcm_ptp_modular_phyts_get mapped to bcm_e_unavail */
/* bcm_ptp_modular_phyts_set mapped to bcm_e_unavail */
/* bcm_ptp_modular_portbitmap_get mapped to bcm_e_unavail */
/* bcm_ptp_modular_portbitmap_set mapped to bcm_e_unavail */
/* bcm_ptp_modular_verbose_get mapped to bcm_e_unavail */
/* bcm_ptp_modular_verbose_set mapped to bcm_e_unavail */
/* bcm_ptp_packet_counters_get mapped to bcm_e_unavail */
/* bcm_ptp_peer_dataset_get mapped to bcm_e_unavail */
/* bcm_ptp_primary_domain_get mapped to bcm_e_unavail */
/* bcm_ptp_primary_domain_set mapped to bcm_e_unavail */
/* bcm_ptp_servo_configuration_get mapped to bcm_e_unavail */
/* bcm_ptp_servo_configuration_set mapped to bcm_e_unavail */
/* bcm_ptp_servo_status_get mapped to bcm_e_unavail */
/* bcm_ptp_signal_output_get mapped to bcm_e_unavail */
/* bcm_ptp_signal_output_remove mapped to bcm_e_unavail */
/* bcm_ptp_signal_output_set mapped to bcm_e_unavail */
/* bcm_ptp_signaled_unicast_master_add mapped to bcm_e_unavail */
/* bcm_ptp_signaled_unicast_master_remove mapped to bcm_e_unavail */
/* bcm_ptp_signaled_unicast_slave_list mapped to bcm_e_unavail */
/* bcm_ptp_signaled_unicast_slave_table_clear mapped to bcm_e_unavail */
/* bcm_ptp_stack_create mapped to bcm_e_unavail */
/* bcm_ptp_static_unicast_master_add mapped to bcm_e_unavail */
/* bcm_ptp_static_unicast_master_list mapped to bcm_e_unavail */
/* bcm_ptp_static_unicast_master_remove mapped to bcm_e_unavail */
/* bcm_ptp_static_unicast_master_table_clear mapped to bcm_e_unavail */
/* bcm_ptp_static_unicast_master_table_size_get mapped to bcm_e_unavail */
/* bcm_ptp_static_unicast_slave_add mapped to bcm_e_unavail */
/* bcm_ptp_static_unicast_slave_list mapped to bcm_e_unavail */
/* bcm_ptp_static_unicast_slave_remove mapped to bcm_e_unavail */
/* bcm_ptp_static_unicast_slave_table_clear mapped to bcm_e_unavail */
/* bcm_ptp_sync_phy mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_init mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_network_option_get mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_network_option_set mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_packet_master_add mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_packet_master_best_get mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_packet_master_get mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_packet_master_list mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_packet_master_lockout_set mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_packet_master_non_reversion_set mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_packet_master_priority_override mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_packet_master_priority_set mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_packet_master_remove mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_packet_master_wait_duration_set mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_pktstats_thresholds_get mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_pktstats_thresholds_set mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_quality_level_set mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_receipt_timeout_get mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_receipt_timeout_set mapped to bcm_e_unavail */
/* bcm_ptp_telecom_g8265_shutdown mapped to bcm_e_unavail */
/* bcm_ptp_time_format_set mapped to bcm_e_unavail */
/* bcm_ptp_timesource_input_status_get mapped to bcm_e_unavail */
/* bcm_ptp_tod_input_sources_get mapped to bcm_e_unavail */
/* bcm_ptp_tod_input_sources_set mapped to bcm_e_unavail */
/* bcm_ptp_tod_output_get mapped to bcm_e_unavail */
/* bcm_ptp_tod_output_remove mapped to bcm_e_unavail */
/* bcm_ptp_tod_output_set mapped to bcm_e_unavail */
/* bcm_ptp_transparent_clock_default_dataset_get mapped to bcm_e_unavail */
/* bcm_ptp_transparent_clock_port_dataset_get mapped to bcm_e_unavail */
extern int bcm_client_ptp_unicast_request_duration_get(int,bcm_ptp_stack_id_t,int,int,uint32 *);
extern int bcm_client_ptp_unicast_request_duration_max_get(int,bcm_ptp_stack_id_t,int,int,uint32 *);
extern int bcm_client_ptp_unicast_request_duration_max_set(int,bcm_ptp_stack_id_t,int,int,uint32);
extern int bcm_client_ptp_unicast_request_duration_min_get(int,bcm_ptp_stack_id_t,int,int,uint32 *);
extern int bcm_client_ptp_unicast_request_duration_min_set(int,bcm_ptp_stack_id_t,int,int,uint32);
extern int bcm_client_ptp_unicast_request_duration_set(int,bcm_ptp_stack_id_t,int,int,uint32);
#endif	/* INCLUDE_PTP */
extern int bcm_client_qos_detach(int);
extern int bcm_client_qos_init(int);
extern int bcm_client_qos_map_add(int,uint32,bcm_qos_map_t *,int);
extern int bcm_client_qos_map_create(int,uint32,int *);
extern int bcm_client_qos_map_delete(int,uint32,bcm_qos_map_t *,int);
extern int bcm_client_qos_map_destroy(int,int);
extern int bcm_client_qos_map_multi_get(int,uint32,int,int,bcm_qos_map_t *,int *);
/* bcm_qos_map_t_init not dispatchable */
extern int bcm_client_qos_multi_get(int,int,int *,int *,int *);
extern int bcm_client_qos_port_map_get(int,bcm_gport_t,int *,int *);
extern int bcm_client_qos_port_map_set(int,bcm_gport_t,int,int);
extern int bcm_client_qos_port_map_type_get(int,bcm_gport_t,uint32,int *);
extern int bcm_client_qos_port_vlan_map_get(int,bcm_port_t,bcm_vlan_t,int *,int *);
extern int bcm_client_qos_port_vlan_map_set(int,bcm_port_t,bcm_vlan_t,int,int);
extern int bcm_client_rate_bandwidth_get(int,bcm_port_t,int,uint32 *,uint32 *);
extern int bcm_client_rate_bandwidth_set(int,bcm_port_t,int,uint32,uint32);
extern int bcm_client_rate_bcast_get(int,int *,int *,int);
extern int bcm_client_rate_bcast_set(int,int,int,int);
extern int bcm_client_rate_dlfbc_get(int,int *,int *,int);
extern int bcm_client_rate_dlfbc_set(int,int,int,int);
extern int bcm_client_rate_get(int,int *,int *);
/* bcm_rate_limit_t_init not dispatchable */
extern int bcm_client_rate_mcast_get(int,int *,int *,int);
extern int bcm_client_rate_mcast_set(int,int,int,int);
extern int bcm_client_rate_set(int,int,int);
extern int bcm_client_rate_type_get(int,bcm_rate_limit_t *);
extern int bcm_client_rate_type_set(int,bcm_rate_limit_t *);
#ifdef	INCLUDE_REGEX
/* bcm_regex_config_get mapped to bcm_e_unavail */
/* bcm_regex_config_set mapped to bcm_e_unavail */
/* bcm_regex_config_t_init not dispatchable */
/* bcm_regex_engine_config_t_init not dispatchable */
/* bcm_regex_engine_create mapped to bcm_e_unavail */
/* bcm_regex_engine_destroy mapped to bcm_e_unavail */
/* bcm_regex_engine_get mapped to bcm_e_unavail */
/* bcm_regex_engine_info_get mapped to bcm_e_unavail */
/* bcm_regex_engine_traverse mapped to bcm_e_unavail */
/* bcm_regex_exclude_add mapped to bcm_e_unavail */
/* bcm_regex_exclude_delete mapped to bcm_e_unavail */
/* bcm_regex_exclude_delete_all mapped to bcm_e_unavail */
/* bcm_regex_exclude_get mapped to bcm_e_unavail */
/* bcm_regex_get_match_id mapped to bcm_e_unavail */
/* bcm_regex_get_sig_id mapped to bcm_e_unavail */
/* bcm_regex_info_get mapped to bcm_e_unavail */
/* bcm_regex_init mapped to bcm_e_unavail */
/* bcm_regex_match_check mapped to bcm_e_unavail */
/* bcm_regex_match_set mapped to bcm_e_unavail */
/* bcm_regex_match_t_init not dispatchable */
/* bcm_regex_policy_action_add mapped to bcm_e_unavail */
/* bcm_regex_policy_action_delete mapped to bcm_e_unavail */
/* bcm_regex_policy_action_get mapped to bcm_e_unavail */
/* bcm_regex_policy_action_mac_add mapped to bcm_e_unavail */
/* bcm_regex_policy_action_mac_get mapped to bcm_e_unavail */
/* bcm_regex_policy_action_ports_add mapped to bcm_e_unavail */
/* bcm_regex_policy_action_ports_get mapped to bcm_e_unavail */
/* bcm_regex_policy_action_remove mapped to bcm_e_unavail */
/* bcm_regex_policy_action_remove_all mapped to bcm_e_unavail */
/* bcm_regex_policy_create mapped to bcm_e_unavail */
/* bcm_regex_policy_destroy mapped to bcm_e_unavail */
/* bcm_regex_policy_destroy_all mapped to bcm_e_unavail */
/* bcm_regex_policy_install mapped to bcm_e_unavail */
/* bcm_regex_policy_policer_attach mapped to bcm_e_unavail */
/* bcm_regex_policy_policer_detach mapped to bcm_e_unavail */
/* bcm_regex_policy_policer_detach_all mapped to bcm_e_unavail */
/* bcm_regex_policy_policer_get mapped to bcm_e_unavail */
/* bcm_regex_policy_remove mapped to bcm_e_unavail */
/* bcm_regex_policy_stat_attach mapped to bcm_e_unavail */
/* bcm_regex_policy_stat_detach mapped to bcm_e_unavail */
/* bcm_regex_policy_stat_get mapped to bcm_e_unavail */
/* bcm_regex_report_register mapped to bcm_e_unavail */
/* bcm_regex_report_t_init not dispatchable */
/* bcm_regex_report_unregister mapped to bcm_e_unavail */
/* bcm_regex_session_add mapped to bcm_e_unavail */
/* bcm_regex_session_delete mapped to bcm_e_unavail */
/* bcm_regex_session_delete_all mapped to bcm_e_unavail */
/* bcm_regex_session_get mapped to bcm_e_unavail */
/* bcm_regex_session_key_t_init not dispatchable */
/* bcm_regex_session_policy_update mapped to bcm_e_unavail */
/* bcm_regex_session_t_init not dispatchable */
extern int bcm_client_regex_session_traverse(int,int,bcm_regex_session_traverse_cb,void *);
/* bcm_regex_stat_create mapped to bcm_e_unavail */
/* bcm_regex_stat_destroy mapped to bcm_e_unavail */
/* bcm_regex_stat_get mapped to bcm_e_unavail */
/* bcm_regex_stat_set mapped to bcm_e_unavail */
#endif	/* INCLUDE_REGEX */
extern int bcm_client_rx_active(int);
extern int bcm_client_rx_alloc(int,int,uint32,void **);
extern int bcm_client_rx_burst_get(int,int *);
extern int bcm_client_rx_burst_set(int,int);
extern int bcm_client_rx_cfg_get(int,bcm_rx_cfg_t *);
extern int bcm_client_rx_cfg_init(int);
/* bcm_rx_cfg_t_init not dispatchable */
extern int bcm_client_rx_channels_running(int,uint32 *);
extern int bcm_client_rx_clear(int);
extern int bcm_client_rx_control_get(int,bcm_rx_control_t,int *);
extern int bcm_client_rx_control_set(int,bcm_rx_control_t,int);
extern int bcm_client_rx_cos_burst_get(int,int,int *);
extern int bcm_client_rx_cos_burst_set(int,int,int);
extern int bcm_client_rx_cos_max_len_get(int,int,int *);
extern int bcm_client_rx_cos_max_len_set(int,int,int);
extern int bcm_client_rx_cos_rate_get(int,int,int *);
extern int bcm_client_rx_cos_rate_set(int,int,int);
extern int bcm_client_rx_cosq_mapping_delete(int,int);
extern int bcm_client_rx_cosq_mapping_get(int,int,bcm_rx_reasons_t *,bcm_rx_reasons_t *,uint8 *,uint8 *,uint32 *,uint32 *,bcm_cos_queue_t *);
extern int bcm_client_rx_cosq_mapping_reasons_get(int,bcm_rx_reasons_t *);
extern int bcm_client_rx_cosq_mapping_set(int,int,bcm_rx_reasons_t,bcm_rx_reasons_t,uint8,uint8,uint32,uint32,bcm_cos_queue_t);
extern int bcm_client_rx_cosq_mapping_size_get(int,int *);
extern int bcm_client_rx_cpu_rate_get(int,int *);
extern int bcm_client_rx_cpu_rate_set(int,int);
extern int bcm_client_rx_free(int,void *);
extern int bcm_client_rx_free_enqueue(int,void *);
extern int bcm_client_rx_init(int);
/* bcm_rx_pool_alloc not dispatchable */
/* bcm_rx_pool_cleanup not dispatchable */
/* bcm_rx_pool_dump not dispatchable */
/* bcm_rx_pool_free not dispatchable */
/* bcm_rx_pool_free_verify not dispatchable */
/* bcm_rx_pool_own not dispatchable */
/* bcm_rx_pool_report not dispatchable */
/* bcm_rx_pool_setup not dispatchable */
/* bcm_rx_pool_setup_done not dispatchable */
extern int bcm_client_rx_queue_channel_get(int,bcm_cos_queue_t,bcm_rx_chan_t *);
extern int bcm_client_rx_queue_channel_set(int,bcm_cos_queue_t,bcm_rx_chan_t);
extern int bcm_client_rx_queue_max_get(int,bcm_cos_queue_t *);
extern int bcm_client_rx_queue_packet_count_get(int,bcm_cos_queue_t,int *);
extern int bcm_client_rx_queue_rate_limit_status_get(int,bcm_cos_queue_t,int *);
extern int bcm_client_rx_queue_register(int,const char *,bcm_cos_queue_t,bcm_rx_cb_f,uint8,void *,uint32);
extern int bcm_client_rx_queue_unregister(int,bcm_cos_queue_t,bcm_rx_cb_f,uint8);
extern int bcm_client_rx_rate_get(int,int *);
extern int bcm_client_rx_rate_set(int,int);
extern int bcm_client_rx_reasons_get(int,bcm_rx_reasons_t *);
extern int bcm_client_rx_reasons_policer_set(int,bcm_rx_reasons_t,bcm_policer_t);
/* bcm_rx_reasons_t_init not dispatchable */
extern int bcm_client_rx_redirect_reasons_get(int,bcm_rx_redirect_t,bcm_rx_reasons_t *);
extern int bcm_client_rx_redirect_reasons_set(int,bcm_rx_redirect_t,bcm_rx_reasons_t);
extern int bcm_client_rx_register(int,const char *,bcm_rx_cb_f,uint8,void *,uint32);
/* bcm_rx_remote_pkt_alloc not dispatchable */
extern int bcm_client_rx_remote_pkt_enqueue(int,bcm_pkt_t *);
/* bcm_rx_remote_pkt_free not dispatchable */
extern int bcm_client_rx_sched_register(int,bcm_rx_sched_cb);
extern int bcm_client_rx_sched_unregister(int);
#ifdef	BROADCOM_DEBUG
/* bcm_rx_show mapped to bcm_e_unavail */
/* bcm_rx_snoop_config_t_init not dispatchable */
#endif	/* BROADCOM_DEBUG */
extern int bcm_client_rx_snoop_create(int,int,int *);
extern int bcm_client_rx_snoop_destroy(int,int,int);
extern int bcm_client_rx_snoop_get(int,int,bcm_rx_snoop_config_t *);
extern int bcm_client_rx_snoop_set(int,int,bcm_rx_snoop_config_t *);
extern int bcm_client_rx_start(int,bcm_rx_cfg_t *);
extern int bcm_client_rx_stop(int,bcm_rx_cfg_t *);
/* bcm_rx_trap_config_t_init not dispatchable */
extern int bcm_client_rx_trap_get(int,int,bcm_rx_trap_config_t *);
extern int bcm_client_rx_trap_set(int,int,bcm_rx_trap_config_t *);
extern int bcm_client_rx_trap_type_create(int,int,bcm_rx_trap_t,int *);
extern int bcm_client_rx_trap_type_destroy(int,int);
extern int bcm_client_rx_unit_next_get(int,int *);
extern int bcm_client_rx_unregister(int,bcm_rx_cb_f,uint8);
extern int bcm_client_sat_endpoint_create(int,bcm_sat_endpoint_info_t *);
extern int bcm_client_sat_endpoint_destroy(int,bcm_sat_endpoint_t,uint32);
extern int bcm_client_sat_endpoint_destroy_all(int,uint32);
extern int bcm_client_sat_endpoint_get(int,bcm_sat_endpoint_t,uint32,bcm_sat_endpoint_info_t *);
extern int bcm_client_sat_endpoint_traverse(int,uint32,bcm_sat_endpoint_traverse_cb,void *);
extern int bcm_client_stat_clear(int,bcm_port_t);
extern int bcm_client_stat_custom_add(int,bcm_port_t,bcm_stat_val_t,bcm_custom_stat_trigger_t);
extern int bcm_client_stat_custom_check(int,bcm_port_t,bcm_stat_val_t,bcm_custom_stat_trigger_t,int *);
extern int bcm_client_stat_custom_delete(int,bcm_port_t,bcm_stat_val_t,bcm_custom_stat_trigger_t);
extern int bcm_client_stat_custom_delete_all(int,bcm_port_t,bcm_stat_val_t);
extern int bcm_client_stat_custom_get(int,bcm_port_t,bcm_stat_val_t,uint32 *);
extern int bcm_client_stat_custom_group_create(int,uint32,bcm_stat_object_t,uint32 *,uint32 *);
extern int bcm_client_stat_custom_set(int,bcm_port_t,bcm_stat_val_t,uint32);
extern int bcm_client_stat_flex_pool_info_multi_get(int,bcm_stat_flex_direction_t,uint32,uint32 *,bcm_stat_flex_pool_stat_info_t *);
extern int bcm_client_stat_get(int,bcm_port_t,bcm_stat_val_t,uint64 *);
extern int bcm_client_stat_get32(int,bcm_port_t,bcm_stat_val_t,uint32 *);
extern int bcm_client_stat_group_create(int,bcm_stat_object_t,bcm_stat_group_mode_t,uint32 *,uint32 *);
extern int bcm_client_stat_group_destroy(int,uint32);
extern int bcm_client_stat_group_dump(int,bcm_stat_object_t,bcm_stat_group_mode_t);
extern int bcm_client_stat_group_dump_all(int);
/* bcm_stat_group_mode_attr_selector_t_init not dispatchable */
extern int bcm_client_stat_group_mode_id_create(int,uint32,uint32,uint32,bcm_stat_group_mode_attr_selector_t *,uint32 *);
extern int bcm_client_stat_group_mode_id_destroy(int,uint32);
extern int bcm_client_stat_group_mode_id_get(int,uint32,uint32 *,uint32 *,uint32,bcm_stat_group_mode_attr_selector_t *,uint32 *);
extern int bcm_client_stat_id_get_all(int,bcm_stat_object_t,int,uint32 *,int *);
extern int bcm_client_stat_init(int);
extern int bcm_client_stat_multi_get(int,bcm_port_t,int,bcm_stat_val_t *,uint64 *);
extern int bcm_client_stat_multi_get32(int,bcm_port_t,int,bcm_stat_val_t *,uint32 *);
extern int bcm_client_stat_sync(int);
extern int bcm_client_stat_sync_get(int,bcm_port_t,bcm_stat_val_t,uint64 *);
extern int bcm_client_stat_sync_get32(int,bcm_port_t,bcm_stat_val_t,uint32 *);
extern int bcm_client_stat_sync_multi_get(int,bcm_port_t,int,bcm_stat_val_t *,uint64 *);
extern int bcm_client_stat_sync_multi_get32(int,bcm_port_t,int,bcm_stat_val_t *,uint32 *);
extern int bcm_client_stat_threshold_get(int,bcm_port_t,bcm_stat_val_t,bcm_stat_threshold_t *);
extern int bcm_client_stat_threshold_set(int,bcm_port_t,bcm_stat_val_t,bcm_stat_threshold_t *);
/* bcm_stat_value_t_init not dispatchable */
extern int bcm_client_stg_clear(int);
extern int bcm_client_stg_count_get(int,int *);
extern int bcm_client_stg_create(int,bcm_stg_t *);
extern int bcm_client_stg_create_id(int,bcm_stg_t);
extern int bcm_client_stg_default_get(int,bcm_stg_t *);
extern int bcm_client_stg_default_set(int,bcm_stg_t);
extern int bcm_client_stg_destroy(int,bcm_stg_t);
extern int bcm_client_stg_init(int);
/* bcm_stg_list mapped to bcm_e_unavail */
/* bcm_stg_list_destroy mapped to bcm_e_unavail */
extern int bcm_client_stg_stp_get(int,bcm_stg_t,bcm_port_t,int *);
extern int bcm_client_stg_stp_set(int,bcm_stg_t,bcm_port_t,int);
extern int bcm_client_stg_vlan_add(int,bcm_stg_t,bcm_vlan_t);
/* bcm_stg_vlan_list mapped to bcm_e_unavail */
/* bcm_stg_vlan_list_destroy mapped to bcm_e_unavail */
extern int bcm_client_stg_vlan_remove(int,bcm_stg_t,bcm_vlan_t);
extern int bcm_client_stg_vlan_remove_all(int,bcm_stg_t);
extern int bcm_client_stk_domain_stk_trunk_add(int,int,bcm_trunk_t);
extern int bcm_client_stk_domain_stk_trunk_delete(int,int,bcm_trunk_t);
extern int bcm_client_stk_domain_stk_trunk_get(int,bcm_trunk_t,int,int *,int *);
extern int bcm_client_stk_fabric_map_get(int,bcm_gport_t,bcm_gport_t *);
extern int bcm_client_stk_fabric_map_set(int,bcm_gport_t,bcm_gport_t);
extern int bcm_client_stk_fmod_lmod_mapping_get(int,bcm_port_t,bcm_module_t *,bcm_module_t *);
extern int bcm_client_stk_fmod_lmod_mapping_set(int,bcm_port_t,bcm_module_t,bcm_module_t);
extern int bcm_client_stk_fmod_smod_mapping_get(int,bcm_port_t,bcm_module_t,bcm_module_t *,bcm_port_t *,uint32 *);
extern int bcm_client_stk_fmod_smod_mapping_set(int,bcm_port_t,bcm_module_t,bcm_module_t,bcm_port_t,uint32);
extern int bcm_client_stk_gport_sysport_get(int,bcm_gport_t,bcm_gport_t *);
extern int bcm_client_stk_init(int);
extern int bcm_client_stk_mode_get(int,uint32 *);
extern int bcm_client_stk_mode_set(int,uint32);
extern int bcm_client_stk_modid_config_get(int,bcm_stk_modid_config_t *);
extern int bcm_client_stk_modid_config_set(int,bcm_stk_modid_config_t *);
extern int bcm_client_stk_modid_count(int,int *);
extern int bcm_client_stk_modid_domain_add(int,int,int);
extern int bcm_client_stk_modid_domain_delete(int,int,int);
extern int bcm_client_stk_modid_domain_get(int,int,int,int *,int *);
extern int bcm_client_stk_modid_get(int,int *);
extern int bcm_client_stk_modid_set(int,int);
extern int bcm_client_stk_modmap_enable_get(int,bcm_port_t,int *);
extern int bcm_client_stk_modmap_enable_set(int,bcm_port_t,int);
extern int bcm_client_stk_modmap_map(int,int,bcm_module_t,bcm_port_t,bcm_module_t *,bcm_port_t *);
/* bcm_stk_modmap_register mapped to bcm_e_unavail */
/* bcm_stk_modmap_unregister mapped to bcm_e_unavail */
extern int bcm_client_stk_modport_add(int,int,bcm_port_t);
extern int bcm_client_stk_modport_clear(int,int);
extern int bcm_client_stk_modport_clear_all(int);
extern int bcm_client_stk_modport_delete(int,int,bcm_port_t);
extern int bcm_client_stk_modport_get(int,int,int *);
extern int bcm_client_stk_modport_get_all(int,int,int,int *,int *);
extern int bcm_client_stk_modport_remote_map_get(int,bcm_gport_t,uint32,int *,bcm_port_t *);
extern int bcm_client_stk_modport_remote_map_set(int,bcm_gport_t,uint32,int,bcm_port_t);
extern int bcm_client_stk_modport_set(int,int,int);
extern int bcm_client_stk_module_control_get(int,uint32,bcm_module_t,bcm_stk_module_control_t,int *);
extern int bcm_client_stk_module_control_set(int,uint32,bcm_module_t,bcm_stk_module_control_t,int);
extern int bcm_client_stk_module_enable(int,bcm_module_t,int,int);
extern int bcm_client_stk_module_max_get(int,uint32,bcm_module_t *);
extern int bcm_client_stk_module_max_set(int,uint32,bcm_module_t);
extern int bcm_client_stk_module_protocol_get(int,bcm_module_t,bcm_module_protocol_t *);
extern int bcm_client_stk_module_protocol_set(int,bcm_module_t,bcm_module_protocol_t);
extern int bcm_client_stk_my_modid_get(int,int *);
extern int bcm_client_stk_my_modid_set(int,int);
extern int bcm_client_stk_pbmp_get(int,bcm_pbmp_t *,bcm_pbmp_t *);
/* bcm_stk_port_get mapped to bcm_e_unavail */
/* bcm_stk_port_modmap_group_get mapped to bcm_e_unavail */
/* bcm_stk_port_modmap_group_max_get mapped to bcm_e_unavail */
/* bcm_stk_port_modmap_group_set mapped to bcm_e_unavail */
extern int bcm_client_stk_port_modport_add(int,bcm_port_t,bcm_module_t,bcm_port_t);
extern int bcm_client_stk_port_modport_clear(int,bcm_port_t,bcm_module_t);
extern int bcm_client_stk_port_modport_clear_all(int,bcm_port_t);
extern int bcm_client_stk_port_modport_delete(int,bcm_port_t,bcm_module_t,bcm_port_t);
extern int bcm_client_stk_port_modport_get(int,bcm_port_t,bcm_module_t,bcm_port_t *);
extern int bcm_client_stk_port_modport_get_all(int,bcm_port_t,bcm_module_t,int,bcm_port_t *,int *);
extern int bcm_client_stk_port_modport_set(int,bcm_port_t,bcm_module_t,bcm_port_t);
/* bcm_stk_port_set mapped to bcm_e_unavail */
extern int bcm_client_stk_steering_clear(int,int);
extern int bcm_client_stk_steering_clear_all(int);
extern int bcm_client_stk_steering_multicast_set(int,int,bcm_multicast_t,bcm_multicast_t,int,bcm_gport_t *);
extern int bcm_client_stk_steering_unicast_set(int,int,bcm_module_t,bcm_module_t,int,bcm_gport_t *);
extern int bcm_client_stk_sysport_gport_get(int,bcm_gport_t,bcm_gport_t *);
extern int bcm_client_stk_sysport_gport_set(int,bcm_gport_t,bcm_gport_t);
extern int bcm_client_stk_system_gport_map_create(int,bcm_stk_system_gport_map_t *);
extern int bcm_client_stk_system_gport_map_destroy(int,bcm_gport_t);
extern int bcm_client_stk_system_gport_map_get(int,bcm_stk_system_gport_map_t *);
extern int bcm_client_stk_ucbitmap_del(int,bcm_port_t,int,bcm_pbmp_t);
extern int bcm_client_stk_ucbitmap_get(int,int,int,bcm_pbmp_t *);
extern int bcm_client_stk_ucbitmap_set(int,int,int,bcm_pbmp_t);
/* bcm_stk_update_callback_register mapped to bcm_e_unavail */
/* bcm_stk_update_callback_unregister mapped to bcm_e_unavail */
extern int bcm_client_subport_cleanup(int);
/* bcm_subport_config_t_init not dispatchable */
/* bcm_subport_group_config_t_init not dispatchable */
extern int bcm_client_subport_group_create(int,bcm_subport_group_config_t *,bcm_gport_t *);
extern int bcm_client_subport_group_destroy(int,bcm_gport_t);
extern int bcm_client_subport_group_get(int,bcm_gport_t,bcm_subport_group_config_t *);
extern int bcm_client_subport_group_linkphy_config_get(int,bcm_gport_t,bcm_subport_group_linkphy_config_t *);
extern int bcm_client_subport_group_linkphy_config_set(int,bcm_gport_t,bcm_subport_group_linkphy_config_t *);
/* bcm_subport_group_linkphy_config_t_init not dispatchable */
extern int bcm_client_subport_group_traverse(int,bcm_gport_t,bcm_subport_port_traverse_cb,void *);
extern int bcm_client_subport_init(int);
extern int bcm_client_subport_port_add(int,bcm_subport_config_t *,bcm_gport_t *);
extern int bcm_client_subport_port_delete(int,bcm_gport_t);
extern int bcm_client_subport_port_get(int,bcm_gport_t,bcm_subport_config_t *);
extern int bcm_client_subport_port_stat_get(int,bcm_gport_t,int,bcm_subport_stat_t,uint64 *);
extern int bcm_client_subport_port_stat_set(int,bcm_gport_t,int,bcm_subport_stat_t,uint64);
extern int bcm_client_subport_port_traverse(int,bcm_subport_port_traverse_cb,void *);
extern int bcm_client_switch_control_get(int,bcm_switch_control_t,int *);
extern int bcm_client_switch_control_port_get(int,bcm_port_t,bcm_switch_control_t,int *);
extern int bcm_client_switch_control_port_set(int,bcm_port_t,bcm_switch_control_t,int);
extern int bcm_client_switch_control_set(int,bcm_switch_control_t,int);
extern int bcm_client_switch_event_control_get(int,bcm_switch_event_t,bcm_switch_event_control_t,uint32 *);
extern int bcm_client_switch_event_control_set(int,bcm_switch_event_t,bcm_switch_event_control_t,uint32);
/* bcm_switch_event_register mapped to bcm_e_unavail */
/* bcm_switch_event_unregister mapped to bcm_e_unavail */
extern int bcm_client_switch_hash_banks_config_get(int,bcm_switch_hash_table_t,uint32,int *,uint32 *);
extern int bcm_client_switch_hash_banks_config_set(int,bcm_switch_hash_table_t,uint32,int,uint32);
extern int bcm_client_switch_hash_banks_max_get(int,bcm_switch_hash_table_t,uint32 *);
extern int bcm_client_switch_hash_entry_create(int,bcm_field_group_t,bcm_hash_entry_t *);
extern int bcm_client_switch_hash_entry_create_qset(int,bcm_field_qset_t,bcm_hash_entry_t *);
extern int bcm_client_switch_hash_entry_destroy(int,bcm_hash_entry_t);
extern int bcm_client_switch_hash_entry_install(int,bcm_hash_entry_t,uint32);
extern int bcm_client_switch_hash_entry_reinstall(int,bcm_hash_entry_t,uint32);
extern int bcm_client_switch_hash_entry_remove(int,bcm_hash_entry_t);
extern int bcm_client_switch_hash_qualify_data(int,bcm_hash_entry_t,int,uint32,uint32);
extern int bcm_client_switch_ipv6_reserved_multicast_addr_get(int,bcm_ip6_t *,bcm_ip6_t *);
extern int bcm_client_switch_ipv6_reserved_multicast_addr_set(int,bcm_ip6_t,bcm_ip6_t);
extern int bcm_client_switch_l3_protocol_group_get(int,uint32 *,bcm_l3_protocol_group_id_t *);
extern int bcm_client_switch_l3_protocol_group_set(int,uint32,bcm_l3_protocol_group_id_t);
extern int bcm_client_switch_network_group_config_get(int,bcm_switch_network_group_t,bcm_switch_network_group_config_t *);
extern int bcm_client_switch_network_group_config_set(int,bcm_switch_network_group_t,bcm_switch_network_group_config_t *);
/* bcm_switch_network_group_config_t_init not dispatchable */
extern int bcm_client_switch_object_count_get(int,bcm_switch_object_t,int *);
extern int bcm_client_switch_object_count_multi_get(int,int,bcm_switch_object_t *,int *);
extern int bcm_client_switch_pkt_info_hash_get(int,bcm_switch_pkt_info_t *,bcm_gport_t *,bcm_if_t *);
/* bcm_switch_pkt_info_t_init not dispatchable */
/* bcm_switch_profile_mapping_t_init not dispatchable */
extern int bcm_client_switch_rcpu_decap_priority_map_get(int,int,int *);
extern int bcm_client_switch_rcpu_decap_priority_map_set(int,int,int);
extern int bcm_client_switch_rcpu_encap_priority_map_get(int,uint32,int,int *);
extern int bcm_client_switch_rcpu_encap_priority_map_set(int,uint32,int,int);
/* bcm_switch_service_config_t_init not dispatchable */
extern int bcm_client_switch_service_get(int,bcm_switch_service_t,bcm_switch_service_config_t *);
extern int bcm_client_switch_service_set(int,bcm_switch_service_t,bcm_switch_service_config_t *);
/* bcm_switch_stable_register mapped to bcm_e_unavail */
/* bcm_switch_temperature_monitor_get mapped to bcm_e_unavail */
extern int bcm_client_switch_user_buffer_read(int,uint32,bcm_switch_user_buffer_type_t,uint8 *,int,int);
extern int bcm_client_switch_user_buffer_write(int,uint32,bcm_switch_user_buffer_type_t,uint8 *,int,int);
#ifdef	INCLUDE_PTP
/* bcm_tdpll_dpll_bandwidth_get mapped to bcm_e_unavail */
/* bcm_tdpll_dpll_bandwidth_set mapped to bcm_e_unavail */
/* bcm_tdpll_dpll_bindings_get mapped to bcm_e_unavail */
/* bcm_tdpll_dpll_bindings_set mapped to bcm_e_unavail */
/* bcm_tdpll_dpll_phase_control_get mapped to bcm_e_unavail */
/* bcm_tdpll_dpll_phase_control_set mapped to bcm_e_unavail */
/* bcm_tdpll_dpll_reference_get mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_holdover_ql_get mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_holdover_ql_set mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_mac_get mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_mac_set mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_ql_get mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_ql_set mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_rx_enable_get mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_rx_enable_set mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_rx_portbitmap_get mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_rx_portbitmap_set mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_rx_state_machine mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_tx_enable_get mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_tx_enable_set mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_tx_portbitmap_get mapped to bcm_e_unavail */
/* bcm_tdpll_esmc_tx_portbitmap_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_best_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_control mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_enable_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_enable_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_frequency_error_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_frequency_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_frequency_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_l1mux_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_l1mux_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_lockout_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_lockout_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_mac_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_mac_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_monitor_callback_register mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_monitor_callback_unregister mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_monitor_interval_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_monitor_interval_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_monitor_threshold_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_monitor_threshold_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_priority_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_priority_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_ql_enabled_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_ql_enabled_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_ql_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_ql_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_revertive_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_revertive_set mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_selector_callback_register mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_selector_callback_unregister mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_threshold_state_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_valid_get mapped to bcm_e_unavail */
/* bcm_tdpll_input_clock_valid_set mapped to bcm_e_unavail */
/* bcm_tdpll_output_clock_deriv_frequency_get mapped to bcm_e_unavail */
/* bcm_tdpll_output_clock_deriv_frequency_set mapped to bcm_e_unavail */
/* bcm_tdpll_output_clock_enable_get mapped to bcm_e_unavail */
/* bcm_tdpll_output_clock_enable_set mapped to bcm_e_unavail */
/* bcm_tdpll_output_clock_holdover_data_get mapped to bcm_e_unavail */
/* bcm_tdpll_output_clock_holdover_frequency_set mapped to bcm_e_unavail */
/* bcm_tdpll_output_clock_holdover_mode_get mapped to bcm_e_unavail */
/* bcm_tdpll_output_clock_holdover_mode_set mapped to bcm_e_unavail */
/* bcm_tdpll_output_clock_holdover_reset mapped to bcm_e_unavail */
/* bcm_tdpll_output_clock_synth_frequency_get mapped to bcm_e_unavail */
/* bcm_tdpll_output_clock_synth_frequency_set mapped to bcm_e_unavail */
#endif	/* INCLUDE_PTP */
extern int bcm_client_time_capture_get(int,bcm_time_if_t,bcm_time_capture_t *);
/* bcm_time_capture_t_init not dispatchable */
extern int bcm_client_time_deinit(int);
extern int bcm_client_time_heartbeat_enable_get(int,bcm_time_if_t,int *);
extern int bcm_client_time_heartbeat_enable_set(int,bcm_time_if_t,int);
/* bcm_time_heartbeat_register mapped to bcm_e_unavail */
extern int bcm_client_time_heartbeat_unregister(int,bcm_time_if_t);
extern int bcm_client_time_init(int);
extern int bcm_client_time_interface_add(int,bcm_time_interface_t *);
extern int bcm_client_time_interface_delete(int,bcm_time_if_t);
extern int bcm_client_time_interface_delete_all(int);
extern int bcm_client_time_interface_get(int,bcm_time_interface_t *);
/* bcm_time_interface_t_init not dispatchable */
extern int bcm_client_time_interface_traverse(int,bcm_time_interface_traverse_cb,void *);
/* bcm_time_spec_t_init not dispatchable */
extern int bcm_client_time_trigger_enable_get(int,bcm_time_if_t,uint32 *);
extern int bcm_client_time_trigger_enable_set(int,bcm_time_if_t,uint32);
/* bcm_topo_map_get not dispatchable */
/* bcm_topo_map_set not dispatchable */
extern int bcm_client_topo_port_get(int,int,bcm_port_t *);
#ifdef	INCLUDE_L3
extern int bcm_client_trill_cleanup(int);
extern int bcm_client_trill_init(int);
extern int bcm_client_trill_multicast_adjacency_add(int,bcm_trill_multicast_adjacency_t *);
extern int bcm_client_trill_multicast_adjacency_delete(int,bcm_trill_multicast_adjacency_t *);
extern int bcm_client_trill_multicast_adjacency_delete_all(int);
extern int bcm_client_trill_multicast_adjacency_traverse(int,bcm_trill_multicast_adjacency_traverse_cb,void *);
extern int bcm_client_trill_multicast_delete_all(int,bcm_trill_name_t);
extern int bcm_client_trill_multicast_entry_add(int,bcm_trill_multicast_entry_t *);
extern int bcm_client_trill_multicast_entry_delete(int,bcm_trill_multicast_entry_t *);
extern int bcm_client_trill_multicast_entry_get(int,bcm_trill_multicast_entry_t *);
/* bcm_trill_multicast_entry_t_init not dispatchable */
extern int bcm_client_trill_multicast_entry_traverse(int,bcm_trill_multicast_entry_traverse_cb,void *);
extern int bcm_client_trill_multicast_source_add(int,bcm_trill_name_t,bcm_trill_name_t,bcm_gport_t,bcm_if_t);
extern int bcm_client_trill_multicast_source_delete(int,bcm_trill_name_t,bcm_trill_name_t,bcm_gport_t,bcm_if_t);
extern int bcm_client_trill_multicast_source_get(int,bcm_trill_name_t,bcm_trill_name_t,bcm_gport_t *);
extern int bcm_client_trill_multicast_source_traverse(int,bcm_trill_multicast_source_traverse_cb,void *);
extern int bcm_client_trill_port_add(int,bcm_trill_port_t *);
extern int bcm_client_trill_port_delete(int,bcm_gport_t);
extern int bcm_client_trill_port_delete_all(int);
extern int bcm_client_trill_port_get(int,bcm_trill_port_t *);
extern int bcm_client_trill_port_get_all(int,int,bcm_trill_port_t *,int *);
/* bcm_trill_port_t_init not dispatchable */
extern int bcm_client_trill_rbridge_entry_add(int,bcm_trill_rbridge_t *);
extern int bcm_client_trill_rbridge_entry_delete(int,bcm_trill_rbridge_t *);
extern int bcm_client_trill_rbridge_entry_get(int,bcm_trill_rbridge_t *);
extern int bcm_client_trill_stat_clear(int,bcm_port_t,bcm_trill_stat_t);
extern int bcm_client_trill_stat_get(int,bcm_port_t,bcm_trill_stat_t,uint64 *);
extern int bcm_client_trill_stat_get32(int,bcm_port_t,bcm_trill_stat_t,uint32 *);
/* bcm_trill_vpn_config_t_init not dispatchable */
extern int bcm_client_trill_vpn_create(int,bcm_trill_vpn_config_t *);
extern int bcm_client_trill_vpn_destroy(int,bcm_vpn_t);
extern int bcm_client_trill_vpn_destroy_all(int);
extern int bcm_client_trill_vpn_get(int,bcm_vpn_t,bcm_trill_vpn_config_t *);
extern int bcm_client_trill_vpn_traverse(int,bcm_trill_vpn_traverse_cb,void *);
#endif	/* INCLUDE_L3 */
extern int bcm_client_trunk_bitmap_expand(int,bcm_pbmp_t *);
extern int bcm_client_trunk_chip_info_get(int,bcm_trunk_chip_info_t *);
/* bcm_trunk_chip_info_t_init not dispatchable */
extern int bcm_client_trunk_create(int,uint32,bcm_trunk_t *);
extern int bcm_client_trunk_destroy(int,bcm_trunk_t);
extern int bcm_client_trunk_detach(int);
extern int bcm_client_trunk_egress_get(int,bcm_trunk_t,bcm_pbmp_t *);
extern int bcm_client_trunk_egress_set(int,bcm_trunk_t,bcm_pbmp_t);
extern int bcm_client_trunk_ethertype_get(int,uint32 *,int,int *,int *);
extern int bcm_client_trunk_ethertype_set(int,uint32,int,int *);
extern int bcm_client_trunk_failover_get(int,bcm_trunk_t,bcm_gport_t,int *,uint32 *,int,bcm_gport_t *,int *);
extern int bcm_client_trunk_failover_set(int,bcm_trunk_t,bcm_gport_t,int,uint32,int,bcm_gport_t *);
extern int bcm_client_trunk_find(int,bcm_module_t,bcm_port_t,bcm_trunk_t *);
extern int bcm_client_trunk_get(int,bcm_trunk_t,bcm_trunk_info_t *,int,bcm_trunk_member_t *,int *);
/* bcm_trunk_info_t_init not dispatchable */
extern int bcm_client_trunk_init(int);
extern int bcm_client_trunk_mcast_join(int,bcm_trunk_t,bcm_vlan_t,bcm_mac_t);
extern int bcm_client_trunk_member_add(int,bcm_trunk_t,bcm_trunk_member_t *);
extern int bcm_client_trunk_member_delete(int,bcm_trunk_t,bcm_trunk_member_t *);
extern int bcm_client_trunk_member_delete_all(int,bcm_trunk_t);
extern int bcm_client_trunk_member_status_get(int,bcm_gport_t,int *);
extern int bcm_client_trunk_member_status_set(int,bcm_gport_t,int);
/* bcm_trunk_member_t_init not dispatchable */
extern int bcm_client_trunk_override_ipmc_get(int,bcm_port_t,bcm_trunk_t,int,int *);
extern int bcm_client_trunk_override_ipmc_set(int,bcm_port_t,bcm_trunk_t,int,int);
extern int bcm_client_trunk_override_mcast_get(int,bcm_port_t,bcm_trunk_t,int,int *);
extern int bcm_client_trunk_override_mcast_set(int,bcm_port_t,bcm_trunk_t,int,int);
extern int bcm_client_trunk_override_ucast_get(int,bcm_port_t,bcm_trunk_t,int,int *);
extern int bcm_client_trunk_override_ucast_set(int,bcm_port_t,bcm_trunk_t,int,int);
extern int bcm_client_trunk_override_vlan_get(int,bcm_port_t,bcm_trunk_t,bcm_vlan_t,int *);
extern int bcm_client_trunk_override_vlan_set(int,bcm_port_t,bcm_trunk_t,bcm_vlan_t,int);
extern int bcm_client_trunk_pool_get(int,bcm_port_t,bcm_trunk_t,int *,int [BCM_TRUNK_MAX_PORTCNT]);
extern int bcm_client_trunk_pool_set(int,bcm_port_t,bcm_trunk_t,int,const int [BCM_TRUNK_MAX_PORTCNT]);
extern int bcm_client_trunk_psc_get(int,bcm_trunk_t,int *);
extern int bcm_client_trunk_psc_set(int,bcm_trunk_t,int);
extern int bcm_client_trunk_resilient_replace(int,uint32,bcm_trunk_resilient_entry_t *,int *,bcm_trunk_resilient_entry_t *);
extern int bcm_client_trunk_resilient_traverse(int,uint32,bcm_trunk_resilient_entry_t *,bcm_trunk_resilient_traverse_cb,void *);
extern int bcm_client_trunk_set(int,bcm_trunk_t,bcm_trunk_info_t *,int,bcm_trunk_member_t *);
#ifdef	INCLUDE_L3
extern int bcm_client_tunnel_config_get(int,bcm_tunnel_config_t *);
extern int bcm_client_tunnel_config_set(int,bcm_tunnel_config_t *);
/* bcm_tunnel_config_t_init not dispatchable */
extern int bcm_client_tunnel_dscp_map_create(int,uint32,int *);
extern int bcm_client_tunnel_dscp_map_destroy(int,int);
extern int bcm_client_tunnel_dscp_map_get(int,int,bcm_tunnel_dscp_map_t *);
extern int bcm_client_tunnel_dscp_map_port_get(int,bcm_port_t,bcm_tunnel_dscp_map_t *);
extern int bcm_client_tunnel_dscp_map_port_set(int,bcm_port_t,bcm_tunnel_dscp_map_t *);
extern int bcm_client_tunnel_dscp_map_set(int,int,bcm_tunnel_dscp_map_t *);
/* bcm_tunnel_dscp_map_t_init not dispatchable */
extern int bcm_client_tunnel_initiator_clear(int,bcm_l3_intf_t *);
extern int bcm_client_tunnel_initiator_create(int,bcm_l3_intf_t *,bcm_tunnel_initiator_t *);
extern int bcm_client_tunnel_initiator_get(int,bcm_l3_intf_t *,bcm_tunnel_initiator_t *);
extern int bcm_client_tunnel_initiator_set(int,bcm_l3_intf_t *,bcm_tunnel_initiator_t *);
/* bcm_tunnel_initiator_t_init not dispatchable */
extern int bcm_client_tunnel_initiator_traverse(int,bcm_tunnel_initiator_traverse_cb,void *);
extern int bcm_client_tunnel_terminator_add(int,bcm_tunnel_terminator_t *);
extern int bcm_client_tunnel_terminator_create(int,bcm_tunnel_terminator_t *);
extern int bcm_client_tunnel_terminator_delete(int,bcm_tunnel_terminator_t *);
extern int bcm_client_tunnel_terminator_get(int,bcm_tunnel_terminator_t *);
/* bcm_tunnel_terminator_t_init not dispatchable */
extern int bcm_client_tunnel_terminator_traverse(int,bcm_tunnel_terminator_traverse_cb,void *);
extern int bcm_client_tunnel_terminator_update(int,bcm_tunnel_terminator_t *);
extern int bcm_client_tunnel_terminator_vlan_get(int,bcm_gport_t,bcm_vlan_vector_t *);
extern int bcm_client_tunnel_terminator_vlan_set(int,bcm_gport_t,bcm_vlan_vector_t);
#endif	/* INCLUDE_L3 */
extern int bcm_client_tx(int,bcm_pkt_t *,void *);
extern int bcm_client_tx_array(int,bcm_pkt_t **,int,bcm_pkt_cb_f,void *);
/* bcm_tx_cpu_tunnel not dispatchable */
/* bcm_tx_cpu_tunnel_get not dispatchable */
/* bcm_tx_cpu_tunnel_set not dispatchable */
#ifdef	BROADCOM_DEBUG
/* bcm_tx_dv_dump mapped to bcm_e_unavail */
#endif	/* BROADCOM_DEBUG */
extern int bcm_client_tx_init(int);
extern int bcm_client_tx_list(int,bcm_pkt_t *,bcm_pkt_cb_f,void *);
/* bcm_tx_pkt_l2_map mapped to bcm_e_unavail */
extern int bcm_client_tx_pkt_setup(int,bcm_pkt_t *);
#ifdef	BROADCOM_DEBUG
/* bcm_tx_show mapped to bcm_e_unavail */
#endif	/* BROADCOM_DEBUG */
/* bcm_txbeacon_destroy mapped to bcm_e_unavail */
/* bcm_txbeacon_init mapped to bcm_e_unavail */
/* bcm_txbeacon_pkt_get mapped to bcm_e_unavail */
/* bcm_txbeacon_pkt_setup mapped to bcm_e_unavail */
/* bcm_txbeacon_start mapped to bcm_e_unavail */
/* bcm_txbeacon_stop mapped to bcm_e_unavail */
/* bcm_txbeacon_traverse mapped to bcm_e_unavail */
/* bcm_udf_alloc_hints_t_init not dispatchable */
extern int bcm_client_udf_create(int,bcm_udf_alloc_hints_t *,bcm_udf_t *,bcm_udf_id_t *);
extern int bcm_client_udf_destroy(int,bcm_udf_id_t);
extern int bcm_client_udf_detach(int);
extern int bcm_client_udf_get(int,bcm_udf_id_t,bcm_udf_t *);
extern int bcm_client_udf_get_all(int,int,bcm_udf_id_t *,int *);
extern int bcm_client_udf_init(int);
extern int bcm_client_udf_pkt_format_add(int,bcm_udf_id_t,bcm_udf_pkt_format_id_t);
extern int bcm_client_udf_pkt_format_create(int,bcm_udf_pkt_format_options_t,bcm_udf_pkt_format_info_t *,bcm_udf_pkt_format_id_t *);
extern int bcm_client_udf_pkt_format_delete(int,bcm_udf_id_t,bcm_udf_pkt_format_id_t);
extern int bcm_client_udf_pkt_format_delete_all(int,bcm_udf_id_t);
extern int bcm_client_udf_pkt_format_destroy(int,bcm_udf_pkt_format_id_t);
extern int bcm_client_udf_pkt_format_get(int,bcm_udf_pkt_format_id_t,int,bcm_udf_id_t *,int *);
extern int bcm_client_udf_pkt_format_get_all(int,bcm_udf_id_t,int,bcm_udf_pkt_format_id_t *,int *);
extern int bcm_client_udf_pkt_format_info_get(int,bcm_udf_pkt_format_id_t,bcm_udf_pkt_format_info_t *);
/* bcm_udf_pkt_format_info_t_init not dispatchable */
/* bcm_udf_t_init not dispatchable */
/* bcm_unit_local not dispatchable */
/* bcm_unit_max not dispatchable */
/* bcm_unit_remote not dispatchable */
/* bcm_unit_remote_unit_get not dispatchable */
/* bcm_unit_subtype_get not dispatchable */
/* bcm_unit_valid not dispatchable */
/* bcm_vlan_action_set_t_init not dispatchable */
extern int bcm_client_vlan_block_get(int,bcm_vlan_t,bcm_vlan_block_t *);
extern int bcm_client_vlan_block_set(int,bcm_vlan_t,bcm_vlan_block_t *);
/* bcm_vlan_block_t_init not dispatchable */
extern int bcm_client_vlan_control_get(int,bcm_vlan_control_t,int *);
extern int bcm_client_vlan_control_port_get(int,int,bcm_vlan_control_port_t,int *);
extern int bcm_client_vlan_control_port_set(int,int,bcm_vlan_control_port_t,int);
extern int bcm_client_vlan_control_set(int,bcm_vlan_control_t,int);
extern int bcm_client_vlan_control_vlan_get(int,bcm_vlan_t,bcm_vlan_control_vlan_t *);
extern int bcm_client_vlan_control_vlan_selective_get(int,bcm_vlan_t,uint32,bcm_vlan_control_vlan_t *);
extern int bcm_client_vlan_control_vlan_selective_set(int,bcm_vlan_t,uint32,bcm_vlan_control_vlan_t *);
extern int bcm_client_vlan_control_vlan_set(int,bcm_vlan_t,bcm_vlan_control_vlan_t);
/* bcm_vlan_control_vlan_t_init not dispatchable */
extern int bcm_client_vlan_create(int,bcm_vlan_t);
extern int bcm_client_vlan_cross_connect_add(int,bcm_vlan_t,bcm_vlan_t,bcm_gport_t,bcm_gport_t);
extern int bcm_client_vlan_cross_connect_delete(int,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_vlan_cross_connect_delete_all(int);
extern int bcm_client_vlan_cross_connect_traverse(int,bcm_vlan_cross_connect_traverse_cb,void *);
/* bcm_vlan_data_t_init not dispatchable */
extern int bcm_client_vlan_default_get(int,bcm_vlan_t *);
extern int bcm_client_vlan_default_set(int,bcm_vlan_t);
extern int bcm_client_vlan_destroy(int,bcm_vlan_t);
extern int bcm_client_vlan_destroy_all(int);
extern int bcm_client_vlan_dtag_add(int,int,bcm_vlan_t,bcm_vlan_t,int);
extern int bcm_client_vlan_dtag_delete(int,int,bcm_vlan_t);
extern int bcm_client_vlan_dtag_delete_all(int);
extern int bcm_client_vlan_dtag_get(int,int,bcm_vlan_t,bcm_vlan_t *,int *);
extern int bcm_client_vlan_dtag_range_add(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,int);
extern int bcm_client_vlan_dtag_range_delete(int,int,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_vlan_dtag_range_delete_all(int);
extern int bcm_client_vlan_dtag_range_get(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t *,int *);
extern int bcm_client_vlan_dtag_range_traverse(int,bcm_vlan_dtag_range_traverse_cb,void *);
extern int bcm_client_vlan_dtag_traverse(int,bcm_vlan_dtag_traverse_cb,void *);
extern int bcm_client_vlan_egress_policer_get(int,bcm_vlan_t,bcm_policer_t *);
extern int bcm_client_vlan_egress_policer_set(int,bcm_vlan_t,bcm_policer_t);
extern int bcm_client_vlan_gport_add(int,bcm_vlan_t,bcm_gport_t,int);
extern int bcm_client_vlan_gport_delete(int,bcm_vlan_t,bcm_gport_t);
extern int bcm_client_vlan_gport_delete_all(int,bcm_vlan_t);
extern int bcm_client_vlan_gport_get(int,bcm_vlan_t,bcm_gport_t,int *);
extern int bcm_client_vlan_gport_get_all(int,bcm_vlan_t,int,bcm_gport_t *,int *,int *);
extern int bcm_client_vlan_gport_info_get(int,bcm_vlan_gport_info_t *);
/* bcm_vlan_gport_info_t_init not dispatchable */
extern int bcm_client_vlan_init(int);
extern int bcm_client_vlan_ip_action_add(int,bcm_vlan_ip_t *,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_ip_action_delete(int,bcm_vlan_ip_t *);
extern int bcm_client_vlan_ip_action_delete_all(int);
extern int bcm_client_vlan_ip_action_get(int,bcm_vlan_ip_t *,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_ip_action_traverse(int,bcm_vlan_ip_action_traverse_cb,void *);
extern int bcm_client_vlan_ip_add(int,bcm_vlan_ip_t *);
extern int bcm_client_vlan_ip_delete(int,bcm_vlan_ip_t *);
extern int bcm_client_vlan_ip_delete_all(int);
/* bcm_vlan_ip_t_init not dispatchable */
/* bcm_vlan_list mapped to bcm_e_unavail */
/* bcm_vlan_list_by_pbmp mapped to bcm_e_unavail */
/* bcm_vlan_list_destroy mapped to bcm_e_unavail */
extern int bcm_client_vlan_mac_action_add(int,bcm_mac_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_mac_action_delete(int,bcm_mac_t);
extern int bcm_client_vlan_mac_action_delete_all(int);
extern int bcm_client_vlan_mac_action_get(int,bcm_mac_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_mac_action_traverse(int,bcm_vlan_mac_action_traverse_cb,void *);
extern int bcm_client_vlan_mac_add(int,bcm_mac_t,bcm_vlan_t,int);
extern int bcm_client_vlan_mac_delete(int,bcm_mac_t);
extern int bcm_client_vlan_mac_delete_all(int);
extern int bcm_client_vlan_mcast_flood_get(int,bcm_vlan_t,bcm_vlan_mcast_flood_t *);
extern int bcm_client_vlan_mcast_flood_set(int,bcm_vlan_t,bcm_vlan_mcast_flood_t);
extern int bcm_client_vlan_policer_get(int,bcm_vlan_t,bcm_policer_t *);
extern int bcm_client_vlan_policer_set(int,bcm_vlan_t,bcm_policer_t);
extern int bcm_client_vlan_port_add(int,bcm_vlan_t,bcm_pbmp_t,bcm_pbmp_t);
extern int bcm_client_vlan_port_create(int,bcm_vlan_port_t *);
extern int bcm_client_vlan_port_default_action_delete(int,bcm_port_t);
extern int bcm_client_vlan_port_default_action_get(int,bcm_port_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_port_default_action_set(int,bcm_port_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_port_destroy(int,bcm_gport_t);
extern int bcm_client_vlan_port_egress_default_action_delete(int,bcm_port_t);
extern int bcm_client_vlan_port_egress_default_action_get(int,bcm_port_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_port_egress_default_action_set(int,bcm_port_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_port_egress_policer_get(int,bcm_vlan_t,bcm_port_t,bcm_policer_t *);
extern int bcm_client_vlan_port_egress_policer_set(int,bcm_vlan_t,bcm_port_t,bcm_policer_t);
extern int bcm_client_vlan_port_find(int,bcm_vlan_port_t *);
extern int bcm_client_vlan_port_get(int,bcm_vlan_t,bcm_pbmp_t *,bcm_pbmp_t *);
extern int bcm_client_vlan_port_policer_get(int,bcm_vlan_t,bcm_port_t,bcm_policer_t *);
extern int bcm_client_vlan_port_policer_set(int,bcm_vlan_t,bcm_port_t,bcm_policer_t);
extern int bcm_client_vlan_port_protocol_action_add(int,bcm_port_t,bcm_port_frametype_t,bcm_port_ethertype_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_port_protocol_action_delete(int,bcm_port_t,bcm_port_frametype_t,bcm_port_ethertype_t);
extern int bcm_client_vlan_port_protocol_action_delete_all(int,bcm_port_t);
extern int bcm_client_vlan_port_protocol_action_get(int,bcm_port_t,bcm_port_frametype_t,bcm_port_ethertype_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_port_protocol_action_traverse(int,bcm_vlan_port_protocol_action_traverse_cb,void *);
extern int bcm_client_vlan_port_remove(int,bcm_vlan_t,bcm_pbmp_t);
extern int bcm_client_vlan_port_stat_enable_get(int,bcm_vlan_t,bcm_port_t,int *);
extern int bcm_client_vlan_port_stat_enable_set(int,bcm_vlan_t,bcm_port_t,int);
extern int bcm_client_vlan_port_stat_get(int,bcm_vlan_t,bcm_port_t,bcm_cos_t,bcm_vlan_stat_t,uint64 *);
extern int bcm_client_vlan_port_stat_get32(int,bcm_vlan_t,bcm_port_t,bcm_cos_t,bcm_vlan_stat_t,uint32 *);
extern int bcm_client_vlan_port_stat_multi_get(int,bcm_vlan_t,bcm_port_t,bcm_cos_t,int,bcm_vlan_stat_t *,uint64 *);
extern int bcm_client_vlan_port_stat_multi_get32(int,bcm_vlan_t,bcm_port_t,bcm_cos_t,int,bcm_vlan_stat_t *,uint32 *);
extern int bcm_client_vlan_port_stat_multi_set(int,bcm_vlan_t,bcm_port_t,bcm_cos_t,int,bcm_vlan_stat_t *,uint64 *);
extern int bcm_client_vlan_port_stat_multi_set32(int,bcm_vlan_t,bcm_port_t,bcm_cos_t,int,bcm_vlan_stat_t *,uint32 *);
extern int bcm_client_vlan_port_stat_set(int,bcm_vlan_t,bcm_port_t,bcm_cos_t,bcm_vlan_stat_t,uint64);
extern int bcm_client_vlan_port_stat_set32(int,bcm_vlan_t,bcm_port_t,bcm_cos_t,bcm_vlan_stat_t,uint32);
/* bcm_vlan_port_t_init not dispatchable */
extern int bcm_client_vlan_port_translation_get(int,bcm_vlan_port_translation_t *);
extern int bcm_client_vlan_port_translation_set(int,bcm_vlan_port_translation_t *);
/* bcm_vlan_port_translation_t_init not dispatchable */
extern int bcm_client_vlan_queue_map_attach(int,bcm_vlan_t,int);
extern int bcm_client_vlan_queue_map_attach_get(int,bcm_vlan_t,int *);
extern int bcm_client_vlan_queue_map_create(int,uint32,int *);
extern int bcm_client_vlan_queue_map_destroy(int,int);
extern int bcm_client_vlan_queue_map_destroy_all(int);
extern int bcm_client_vlan_queue_map_detach(int,bcm_vlan_t);
extern int bcm_client_vlan_queue_map_detach_all(int);
extern int bcm_client_vlan_queue_map_get(int,int,int,int,int *,int *);
extern int bcm_client_vlan_queue_map_set(int,int,int,int,int,int);
extern int bcm_client_vlan_stat_attach(int,bcm_vlan_t,uint32);
extern int bcm_client_vlan_stat_counter_get(int,bcm_vlan_t,bcm_vlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vlan_stat_counter_set(int,bcm_vlan_t,bcm_vlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vlan_stat_counter_sync_get(int,bcm_vlan_t,bcm_vlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vlan_stat_detach(int,bcm_vlan_t);
extern int bcm_client_vlan_stat_detach_with_id(int,bcm_vlan_t,uint32);
extern int bcm_client_vlan_stat_enable_set(int,bcm_vlan_t,int);
extern int bcm_client_vlan_stat_get(int,bcm_vlan_t,bcm_cos_t,bcm_vlan_stat_t,uint64 *);
extern int bcm_client_vlan_stat_get32(int,bcm_vlan_t,bcm_cos_t,bcm_vlan_stat_t,uint32 *);
extern int bcm_client_vlan_stat_id_get(int,bcm_vlan_t,bcm_vlan_stat_t,uint32 *);
extern int bcm_client_vlan_stat_multi_get(int,bcm_vlan_t,bcm_cos_t,int,bcm_vlan_stat_t *,uint64 *);
extern int bcm_client_vlan_stat_multi_get32(int,bcm_vlan_t,bcm_cos_t,int,bcm_vlan_stat_t *,uint32 *);
extern int bcm_client_vlan_stat_multi_set(int,bcm_vlan_t,bcm_cos_t,int,bcm_vlan_stat_t *,uint64 *);
extern int bcm_client_vlan_stat_multi_set32(int,bcm_vlan_t,bcm_cos_t,int,bcm_vlan_stat_t *,uint32 *);
extern int bcm_client_vlan_stat_set(int,bcm_vlan_t,bcm_cos_t,bcm_vlan_stat_t,uint64);
extern int bcm_client_vlan_stat_set32(int,bcm_vlan_t,bcm_cos_t,bcm_vlan_stat_t,uint32);
extern int bcm_client_vlan_stat_sync_get(int,bcm_vlan_t,bcm_cos_t,bcm_vlan_stat_t,uint64 *);
extern int bcm_client_vlan_stat_sync_get32(int,bcm_vlan_t,bcm_cos_t,bcm_vlan_stat_t,uint32 *);
extern int bcm_client_vlan_stg_get(int,bcm_vlan_t,bcm_stg_t *);
extern int bcm_client_vlan_stg_set(int,bcm_vlan_t,bcm_stg_t);
extern int bcm_client_vlan_stp_get(int,bcm_vlan_t,bcm_port_t,int *);
extern int bcm_client_vlan_stp_set(int,bcm_vlan_t,bcm_port_t,int);
extern int bcm_client_vlan_translate_action_add(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_translate_action_class_get(int,bcm_vlan_translate_action_class_t *);
extern int bcm_client_vlan_translate_action_class_set(int,bcm_vlan_translate_action_class_t *);
/* bcm_vlan_translate_action_class_t_init not dispatchable */
extern int bcm_client_vlan_translate_action_create(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_translate_action_delete(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_vlan_translate_action_get(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_translate_action_id_create(int,uint32,int *);
extern int bcm_client_vlan_translate_action_id_destroy(int,uint32,int);
extern int bcm_client_vlan_translate_action_id_destroy_all(int,uint32);
extern int bcm_client_vlan_translate_action_id_get(int,uint32,int,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_translate_action_id_set(int,uint32,int,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_translate_action_range_add(int,bcm_gport_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_translate_action_range_delete(int,bcm_gport_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_vlan_translate_action_range_delete_all(int);
extern int bcm_client_vlan_translate_action_range_get(int,bcm_gport_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_translate_action_range_traverse(int,bcm_vlan_translate_action_range_traverse_cb,void *);
extern int bcm_client_vlan_translate_action_traverse(int,bcm_vlan_translate_action_traverse_cb,void *);
extern int bcm_client_vlan_translate_add(int,int,bcm_vlan_t,bcm_vlan_t,int);
extern int bcm_client_vlan_translate_delete(int,int,bcm_vlan_t);
extern int bcm_client_vlan_translate_delete_all(int);
extern int bcm_client_vlan_translate_egress_action_add(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_translate_egress_action_delete(int,int,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_vlan_translate_egress_action_get(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_action_set_t *);
extern int bcm_client_vlan_translate_egress_action_traverse(int,bcm_vlan_translate_egress_action_traverse_cb,void *);
extern int bcm_client_vlan_translate_egress_add(int,int,bcm_vlan_t,bcm_vlan_t,int);
extern int bcm_client_vlan_translate_egress_delete(int,int,bcm_vlan_t);
extern int bcm_client_vlan_translate_egress_delete_all(int);
extern int bcm_client_vlan_translate_egress_get(int,int,bcm_vlan_t,bcm_vlan_t *,int *);
extern int bcm_client_vlan_translate_egress_stat_attach(int,int,bcm_vlan_t,bcm_vlan_t,uint32);
extern int bcm_client_vlan_translate_egress_stat_counter_get(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vlan_translate_egress_stat_counter_set(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vlan_translate_egress_stat_counter_sync_get(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vlan_translate_egress_stat_detach(int,int,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_vlan_translate_egress_stat_enable_set(int,int,bcm_vlan_t,bcm_vlan_t,int);
extern int bcm_client_vlan_translate_egress_stat_get(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint64 *);
extern int bcm_client_vlan_translate_egress_stat_get32(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32 *);
extern int bcm_client_vlan_translate_egress_stat_id_get(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32 *);
extern int bcm_client_vlan_translate_egress_stat_multi_get(int,int,bcm_vlan_t,bcm_vlan_t,int,bcm_vlan_stat_t *,uint64 *);
extern int bcm_client_vlan_translate_egress_stat_multi_get32(int,int,bcm_vlan_t,bcm_vlan_t,int,bcm_vlan_stat_t *,uint32 *);
extern int bcm_client_vlan_translate_egress_stat_multi_set(int,int,bcm_vlan_t,bcm_vlan_t,int,bcm_vlan_stat_t *,uint64 *);
extern int bcm_client_vlan_translate_egress_stat_multi_set32(int,int,bcm_vlan_t,bcm_vlan_t,int,bcm_vlan_stat_t *,uint32 *);
extern int bcm_client_vlan_translate_egress_stat_set(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint64);
extern int bcm_client_vlan_translate_egress_stat_set32(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32);
extern int bcm_client_vlan_translate_egress_stat_sync_get(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint64 *);
extern int bcm_client_vlan_translate_egress_stat_sync_get32(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32 *);
extern int bcm_client_vlan_translate_egress_traverse(int,bcm_vlan_translate_egress_traverse_cb,void *);
extern int bcm_client_vlan_translate_get(int,int,bcm_vlan_t,bcm_vlan_t *,int *);
extern int bcm_client_vlan_translate_range_add(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,int);
extern int bcm_client_vlan_translate_range_delete(int,int,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_vlan_translate_range_delete_all(int);
extern int bcm_client_vlan_translate_range_get(int,int,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t *,int *);
extern int bcm_client_vlan_translate_range_traverse(int,bcm_vlan_translate_range_traverse_cb,void *);
extern int bcm_client_vlan_translate_stat_attach(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,uint32);
extern int bcm_client_vlan_translate_stat_counter_get(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vlan_translate_stat_counter_set(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vlan_translate_stat_counter_sync_get(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vlan_translate_stat_detach(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_client_vlan_translate_stat_enable_set(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,int);
extern int bcm_client_vlan_translate_stat_get(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint64 *);
extern int bcm_client_vlan_translate_stat_get32(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32 *);
extern int bcm_client_vlan_translate_stat_id_get(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32 *);
extern int bcm_client_vlan_translate_stat_multi_get(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,int,bcm_vlan_stat_t *,uint64 *);
extern int bcm_client_vlan_translate_stat_multi_get32(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,int,bcm_vlan_stat_t *,uint32 *);
extern int bcm_client_vlan_translate_stat_multi_set(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,int,bcm_vlan_stat_t *,uint64 *);
extern int bcm_client_vlan_translate_stat_multi_set32(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,int,bcm_vlan_stat_t *,uint32 *);
extern int bcm_client_vlan_translate_stat_set(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint64);
extern int bcm_client_vlan_translate_stat_set32(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32);
extern int bcm_client_vlan_translate_stat_sync_get(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint64 *);
extern int bcm_client_vlan_translate_stat_sync_get32(int,bcm_gport_t,bcm_vlan_translate_key_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_stat_t,uint32 *);
extern int bcm_client_vlan_translate_traverse(int,bcm_vlan_translate_traverse_cb,void *);
extern int bcm_client_vlan_vector_flags_set(int,bcm_vlan_vector_t,uint32,uint32);
extern int bcm_client_vlan_vector_stp_set(int,bcm_vlan_vector_t,bcm_port_t,int);
extern int bcm_client_vswitch_create(int,bcm_vlan_t *);
extern int bcm_client_vswitch_create_with_id(int,bcm_vlan_t);
extern int bcm_client_vswitch_cross_connect_add(int,bcm_vswitch_cross_connect_t *);
extern int bcm_client_vswitch_cross_connect_delete(int,bcm_vswitch_cross_connect_t *);
extern int bcm_client_vswitch_cross_connect_delete_all(int);
extern int bcm_client_vswitch_cross_connect_get(int,bcm_vswitch_cross_connect_t *);
/* bcm_vswitch_cross_connect_t_init not dispatchable */
extern int bcm_client_vswitch_cross_connect_traverse(int,bcm_vswitch_cross_connect_traverse_cb,void *);
extern int bcm_client_vswitch_destroy(int,bcm_vlan_t);
extern int bcm_client_vswitch_destroy_all(int);
extern int bcm_client_vswitch_detach(int);
extern int bcm_client_vswitch_init(int);
extern int bcm_client_vswitch_port_add(int,bcm_vlan_t,bcm_gport_t);
extern int bcm_client_vswitch_port_delete(int,bcm_vlan_t,bcm_gport_t);
extern int bcm_client_vswitch_port_delete_all(int,bcm_vlan_t);
extern int bcm_client_vswitch_port_get(int,bcm_gport_t,bcm_vlan_t *);
extern int bcm_client_vswitch_port_traverse(int,bcm_vlan_t,bcm_vswitch_port_traverse_cb,void *);
#ifdef	INCLUDE_L3
extern int bcm_client_vxlan_cleanup(int);
extern int bcm_client_vxlan_dip_stat_attach(int,bcm_ip_t,uint32);
extern int bcm_client_vxlan_dip_stat_counter_get(int,bcm_ip_t,bcm_vxlan_dip_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vxlan_dip_stat_counter_set(int,bcm_ip_t,bcm_vxlan_dip_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vxlan_dip_stat_detach(int,bcm_ip_t);
extern int bcm_client_vxlan_dip_stat_id_get(int,bcm_ip_t,bcm_vxlan_dip_stat_t,uint32 *);
extern int bcm_client_vxlan_dip_stat_multi_get(int,bcm_ip_t,int,bcm_vxlan_dip_stat_t *,uint64 *);
extern int bcm_client_vxlan_dip_stat_multi_get32(int,bcm_ip_t,int,bcm_vxlan_dip_stat_t *,uint32 *);
extern int bcm_client_vxlan_dip_stat_multi_set(int,bcm_ip_t,int,bcm_vxlan_dip_stat_t *,uint64 *);
extern int bcm_client_vxlan_dip_stat_multi_set32(int,bcm_ip_t,int,bcm_vxlan_dip_stat_t *,uint32 *);
extern int bcm_client_vxlan_init(int);
extern int bcm_client_vxlan_port_add(int,bcm_vpn_t,bcm_vxlan_port_t *);
extern int bcm_client_vxlan_port_delete(int,bcm_vpn_t,bcm_gport_t);
extern int bcm_client_vxlan_port_delete_all(int,bcm_vpn_t);
extern int bcm_client_vxlan_port_get(int,bcm_vpn_t,bcm_vxlan_port_t *);
extern int bcm_client_vxlan_port_get_all(int,bcm_vpn_t,int,bcm_vxlan_port_t *,int *);
/* bcm_vxlan_port_t_init not dispatchable */
extern int bcm_client_vxlan_stat_attach(int,bcm_gport_t,bcm_vpn_t,uint32);
extern int bcm_client_vxlan_stat_counter_get(int,bcm_gport_t,bcm_vpn_t,bcm_vxlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vxlan_stat_counter_set(int,bcm_gport_t,bcm_vpn_t,bcm_vxlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vxlan_stat_counter_sync_get(int,bcm_gport_t,bcm_vpn_t,bcm_vxlan_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_client_vxlan_stat_detach(int,bcm_gport_t,bcm_vpn_t);
extern int bcm_client_vxlan_stat_enable_set(int,bcm_gport_t,bcm_vpn_t,int);
extern int bcm_client_vxlan_stat_id_get(int,bcm_gport_t,bcm_vpn_t,bcm_vxlan_stat_t,uint32 *);
extern int bcm_client_vxlan_stat_multi_get(int,bcm_gport_t,bcm_vpn_t,int,bcm_vxlan_stat_t *,uint64 *);
extern int bcm_client_vxlan_stat_multi_get32(int,bcm_gport_t,bcm_vpn_t,int,bcm_vxlan_stat_t *,uint32 *);
extern int bcm_client_vxlan_stat_multi_set(int,bcm_gport_t,bcm_vpn_t,int,bcm_vxlan_stat_t *,uint64 *);
extern int bcm_client_vxlan_stat_multi_set32(int,bcm_gport_t,bcm_vpn_t,int,bcm_vxlan_stat_t *,uint32 *);
extern int bcm_client_vxlan_tunnel_initiator_create(int,bcm_tunnel_initiator_t *);
extern int bcm_client_vxlan_tunnel_initiator_destroy(int,bcm_gport_t);
extern int bcm_client_vxlan_tunnel_initiator_destroy_all(int);
extern int bcm_client_vxlan_tunnel_initiator_get(int,bcm_tunnel_initiator_t *);
extern int bcm_client_vxlan_tunnel_initiator_traverse(int,bcm_tunnel_initiator_traverse_cb,void *);
extern int bcm_client_vxlan_tunnel_terminator_create(int,bcm_tunnel_terminator_t *);
extern int bcm_client_vxlan_tunnel_terminator_destroy(int,bcm_gport_t);
extern int bcm_client_vxlan_tunnel_terminator_destroy_all(int);
extern int bcm_client_vxlan_tunnel_terminator_get(int,bcm_tunnel_terminator_t *);
extern int bcm_client_vxlan_tunnel_terminator_traverse(int,bcm_tunnel_terminator_traverse_cb,void *);
extern int bcm_client_vxlan_tunnel_terminator_update(int,bcm_tunnel_terminator_t *);
/* bcm_vxlan_vpn_config_t_init not dispatchable */
extern int bcm_client_vxlan_vpn_create(int,bcm_vxlan_vpn_config_t *);
extern int bcm_client_vxlan_vpn_destroy(int,bcm_vpn_t);
extern int bcm_client_vxlan_vpn_destroy_all(int);
extern int bcm_client_vxlan_vpn_get(int,bcm_vpn_t,bcm_vxlan_vpn_config_t *);
extern int bcm_client_vxlan_vpn_traverse(int,bcm_vxlan_vpn_traverse_cb,void *);
extern int bcm_client_wlan_client_add(int,bcm_wlan_client_t *);
extern int bcm_client_wlan_client_delete(int,bcm_mac_t);
extern int bcm_client_wlan_client_delete_all(int);
extern int bcm_client_wlan_client_get(int,bcm_mac_t,bcm_wlan_client_t *);
/* bcm_wlan_client_t_init not dispatchable */
extern int bcm_client_wlan_client_traverse(int,bcm_wlan_client_traverse_cb,void *);
extern int bcm_client_wlan_detach(int);
extern int bcm_client_wlan_init(int);
extern int bcm_client_wlan_port_add(int,bcm_wlan_port_t *);
extern int bcm_client_wlan_port_delete(int,bcm_gport_t);
extern int bcm_client_wlan_port_delete_all(int);
extern int bcm_client_wlan_port_get(int,bcm_gport_t,bcm_wlan_port_t *);
/* bcm_wlan_port_t_init not dispatchable */
extern int bcm_client_wlan_port_traverse(int,bcm_wlan_port_traverse_cb,void *);
extern int bcm_client_wlan_tunnel_initiator_create(int,bcm_tunnel_initiator_t *);
extern int bcm_client_wlan_tunnel_initiator_destroy(int,bcm_gport_t);
extern int bcm_client_wlan_tunnel_initiator_get(int,bcm_tunnel_initiator_t *);
#endif	/* INCLUDE_L3 */
extern int bcm_e_unavail(void);

#endif	/* BCM_RPC_SUPPORT */
#endif	/* !_BCM_INT_CLIENT_DISPATCH_H */

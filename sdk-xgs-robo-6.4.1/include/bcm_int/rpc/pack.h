/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * $Id: 2e1b90334b655f3b44385db9154b5d2df3424366 $
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 *
 * File:	pack.h
 * Purpose:	BCM API Type Packers
 * Generator:	mkdispatch 1.54
 * Generated:	Tue Jun 10 12:44:17 2014
 */

#ifndef	_BCM_INT_RPC_PACK_H
#define	_BCM_INT_RPC_PACK_H

#include <bcm/types.h>
#include <bcm/auth.h>
#include <bcm/bfd.h>
#include <bcm/bregex.h>
#include <bcm/ces.h>
#include <bcm/cosq.h>
#include <bcm/custom.h>
#include <bcm/eav.h>
#include <bcm/ecn.h>
#include <bcm/error.h>
#include <bcm/extender.h>
#include <bcm/fabric.h>
#include <bcm/failover.h>
#include <bcm/fcmap.h>
#include <bcm/fcoe.h>
#include <bcm/field.h>
#include <bcm/init.h>
#include <bcm/ipfix.h>
#include <bcm/ipmc.h>
#include <bcm/knet.h>
#include <bcm/l2.h>
#include <bcm/l2gre.h>
#include <bcm/l3.h>
#include <bcm/link.h>
#include <bcm/macsec.h>
#include <bcm/mcast.h>
#include <bcm/mim.h>
#include <bcm/mirror.h>
#include <bcm/mpls.h>
#include <bcm/multicast.h>
#include <bcm/nat.h>
#include <bcm/niv.h>
#include <bcm/oam.h>
#include <bcm/pkt.h>
#include <bcm/policer.h>
#include <bcm/port.h>
#include <bcm/proxy.h>
#include <bcm/ptp.h>
#include <bcm/qos.h>
#include <bcm/rate.h>
#include <bcm/rx.h>
#include <bcm/sat.h>
#include <bcm/stack.h>
#include <bcm/stat.h>
#include <bcm/stg.h>
#include <bcm/subport.h>
#include <bcm/switch.h>
#include <bcm/time.h>
#include <bcm/topo.h>
#include <bcm/trill.h>
#include <bcm/trunk.h>
#include <bcm/tunnel.h>
#include <bcm/tx.h>
#include <bcm/txbeacon.h>
#include <bcm/udf.h>
#include <bcm/vlan.h>
#include <bcm/vswitch.h>
#include <bcm/vxlan.h>
#include <bcm/wlan.h>

#ifdef	BCM_RPC_SUPPORT

/* basic type pack and unpack macros */

#define	BCM_PACKLEN_U8		1
#define	BCM_PACKLEN_U16		2
#define	BCM_PACKLEN_U32		4

#define	BCM_PACK_U8(_buf, _var) \
		*_buf++ = (_var)
#define	BCM_UNPACK_U8(_buf, _var) \
		_var = *_buf++

#define	BCM_PACK_U16(_buf, _var) \
		*_buf++ = ((_var) >> 8) & 0xff; \
		*_buf++ = (_var) & 0xff;
#define	BCM_UNPACK_U16(_buf, _var) \
		_var  = *_buf++ << 8; \
		_var |= *_buf++; 

#define	BCM_PACK_U32(_buf, _var) \
		*_buf++ = ((_var) >> 24) & 0xff; \
		*_buf++ = ((_var) >> 16) & 0xff; \
		*_buf++ = ((_var) >> 8) & 0xff; \
		*_buf++ = (_var) & 0xff;
#define	BCM_UNPACK_U32(_buf, _var) \
		_var  = *_buf++ << 24; \
		_var |= *_buf++ << 16; \
		_var |= *_buf++ << 8; \
		_var |= *_buf++; 

/* declare typedef pack and unpack routines */

#ifdef	INCLUDE_BFD
#define	BCM_PACKLEN_BFD_AUTH_SHA1		25
#define	BCM_PACKLEN_BFD_AUTH_SIMPLE_PASSWORD		17
#define	BCM_PACKLEN_BFD_ENDPOINT_INFO		281
#define	BCM_PACKLEN_BFD_ENDPOINT_STAT		16
#endif	/* INCLUDE_BFD */
#ifdef	INCLUDE_CES
#define	BCM_PACKLEN_CES_CAS_PACKET_CONTROL		8
#define	BCM_PACKLEN_CES_CCLK_CONFIG		44
#define	BCM_PACKLEN_CES_MAC_CMD_CONFIG		72
#define	BCM_PACKLEN_CES_RCLOCK_CONFIG		8
#define	BCM_PACKLEN_CES_SERVICE_CONFIG		16838
#define	BCM_PACKLEN_CES_SERVICE_EGRESS_STATUS		16
#define	BCM_PACKLEN_CES_SERVICE_PM_STATS		72
#endif	/* INCLUDE_CES */
#define	BCM_PACKLEN_COS_PON_LINK_SLA		16
#define	BCM_PACKLEN_COSQ_CLASSIFIER		40
#define	BCM_PACKLEN_COSQ_CONGESTION_INFO		16
#define	BCM_PACKLEN_COSQ_DELAY_TOLERANCE		60
#define	BCM_PACKLEN_COSQ_EGRESS_MULTICAST_CONFIG		16
#define	BCM_PACKLEN_COSQ_FC_ENDPOINT		20
#define	BCM_PACKLEN_COSQ_GPORT_CONNECTION		16
#define	BCM_PACKLEN_COSQ_GPORT_DISCARD		28
#define	BCM_PACKLEN_COSQ_GPORT_INFO_CORE		16
#define	BCM_PACKLEN_COSQ_GPORT_INFO		12
#define	BCM_PACKLEN_COSQ_GPORT_PRIORITY_PROFILE		8
#define	BCM_PACKLEN_COSQ_GPORT_SIZE		12
#define	BCM_PACKLEN_COSQ_GPORT_STAT_PROFILE		8
#define	BCM_PACKLEN_COSQ_PFC_CONFIG		28
#define	BCM_PACKLEN_COSQ_QCN_CONFIG		56
#define	BCM_PACKLEN_COSQ_REPORT_THRESHOLD		16
#define	BCM_PACKLEN_COSQ_SERVICE_POOL		8
#define	BCM_PACKLEN_COSQ_SUBSCRIBER_MAP		18
#define	BCM_PACKLEN_COSQ_THRESHOLD		28
#define	BCM_PACKLEN_COSQ_VSQ_INFO		24
#define	BCM_PACKLEN_ECN_TRAFFIC_ACTION_CONFIG		26
#define	BCM_PACKLEN_ECN_TRAFFIC_MAP_INFO		9
#ifdef	INCLUDE_L3
#define	BCM_PACKLEN_EXTENDER_ENCAP		10
#define	BCM_PACKLEN_EXTENDER_FORWARD		20
#define	BCM_PACKLEN_EXTENDER_PORT		46
#endif	/* INCLUDE_L3 */
#define	BCM_PACKLEN_FABRIC_ACTION_INFO		120
#define	BCM_PACKLEN_FABRIC_BANDWIDTH_PROFILE		12
#define	BCM_PACKLEN_FABRIC_CONFIG_DISCARD		16
#define	BCM_PACKLEN_FABRIC_LINK_CONNECTIVITY		12
#define	BCM_PACKLEN_FABRIC_LINK_REMOTE_PIPE_MAPPING		12
#define	BCM_PACKLEN_FABRIC_MODULE_VECTOR		16
#define	BCM_PACKLEN_FABRIC_PREDICATE_ACTION_INFO		20
#define	BCM_PACKLEN_FABRIC_PREDICATE_INFO		28
#define	BCM_PACKLEN_FABRIC_ROUTE		12
#define	BCM_PACKLEN_FABRIC_TDM_DIRECT_ROUTING		260
#define	BCM_PACKLEN_FABRIC_TDM_EDITING		30
#ifdef	INCLUDE_L3
#define	BCM_PACKLEN_FAILOVER_ELEMENT		16
#endif	/* INCLUDE_L3 */
#define	BCM_PACKLEN_FAILOVER_RING		524
#define	BCM_PACKLEN_FCOE_INTF_CONFIG		25
#define	BCM_PACKLEN_FCOE_ROUTE		42
#define	BCM_PACKLEN_FCOE_VSAN_ACTION_SET		49
#define	BCM_PACKLEN_FCOE_VSAN		12
#define	BCM_PACKLEN_FCOE_VSAN_TRANSLATE_KEY_CONFIG		20
#define	BCM_PACKLEN_FCOE_ZONE_ENTRY		28
#define	BCM_PACKLEN_FIELD_ASET		48
#define	BCM_PACKLEN_FIELD_DATA_ETHERTYPE		14
#define	BCM_PACKLEN_FIELD_DATA_IP_PROTOCOL		11
#define	BCM_PACKLEN_FIELD_DATA_PACKET_FORMAT		24
#define	BCM_PACKLEN_FIELD_DATA_QUALIFIER		26
#define	BCM_PACKLEN_FIELD_ENTRY_OPER		8
#define	BCM_PACKLEN_FIELD_EXTRACTION_ACTION		8
#define	BCM_PACKLEN_FIELD_EXTRACTION_FIELD		20
#define	BCM_PACKLEN_FIELD_GROUP_CONFIG		177
#define	BCM_PACKLEN_FIELD_GROUP_STATUS		44
#define	BCM_PACKLEN_FIELD_PRESEL_SET		8
#define	BCM_PACKLEN_FIELD_QSET		72
#define	BCM_PACKLEN_FIELD_SNAP_HEADER		6
#define	BCM_PACKLEN_FIELD_STAGE_INFO		8
#define	BCM_PACKLEN_INFO		16
#define	BCM_PACKLEN_IP6		16
#define	BCM_PACKLEN_IPFIX_CONFIG		168
#define	BCM_PACKLEN_IPFIX_MIRROR_CONFIG		10
#define	BCM_PACKLEN_IPFIX_RATE		33
#ifdef	INCLUDE_L3
#define	BCM_PACKLEN_IPMC_ADDR		90
#define	BCM_PACKLEN_IPMC_COUNTERS		48
#define	BCM_PACKLEN_IPMC_RANGE		60
#endif	/* INCLUDE_L3 */
#define	BCM_PACKLEN_L2_ADDR_DISTRIBUTE		6
#define	BCM_PACKLEN_L2_ADDR		73
#define	BCM_PACKLEN_L2_AUTH_ADDR		16
#define	BCM_PACKLEN_L2_CACHE_ADDR		82
#define	BCM_PACKLEN_L2_EGRESS		43
#define	BCM_PACKLEN_L2_GPORT_FORWARD_INFO		8
#define	BCM_PACKLEN_L2_LEARN_LIMIT		22
#define	BCM_PACKLEN_L2_LEARN_MSGS_CONFIG		32
#define	BCM_PACKLEN_L2_MAC_PORT		18
#define	BCM_PACKLEN_L2_RING		524
#define	BCM_PACKLEN_L2_STATION		32
#ifdef	INCLUDE_L3
#define	BCM_PACKLEN_L2GRE_PORT		46
#define	BCM_PACKLEN_L2GRE_VPN_CONFIG		28
#define	BCM_PACKLEN_L3_EGRESS_ECMP_RESILIENT_ENTRY		48
#define	BCM_PACKLEN_L3_EGRESS_ECMP		36
#define	BCM_PACKLEN_L3_EGRESS		83
#define	BCM_PACKLEN_L3_HOST		70
#define	BCM_PACKLEN_L3_INFO		88
#define	BCM_PACKLEN_L3_INGRESS		30
#define	BCM_PACKLEN_L3_INTF		99
#define	BCM_PACKLEN_L3_KEY		50
#define	BCM_PACKLEN_L3_NAT_EGRESS		28
#define	BCM_PACKLEN_L3_NAT_INGRESS		31
#define	BCM_PACKLEN_L3_ROUTE		92
#define	BCM_PACKLEN_L3_SOURCE_BIND		58
#endif	/* INCLUDE_L3 */
#define	BCM_PACKLEN_MAC		6
#define	BCM_PACKLEN_MCAST_ADDR		66
#ifdef	INCLUDE_L3
#define	BCM_PACKLEN_MIM_PORT		95
#define	BCM_PACKLEN_MIM_VPN_CONFIG		39
#endif	/* INCLUDE_L3 */
#define	BCM_PACKLEN_MIRROR_DESTINATION		165
#define	BCM_PACKLEN_MPLS_EGRESS_LABEL		28
#ifdef	INCLUDE_L3
#define	BCM_PACKLEN_MPLS_EXP_MAP		12
#define	BCM_PACKLEN_MPLS_PORT		144
#define	BCM_PACKLEN_MPLS_TUNNEL_SWITCH		102
#define	BCM_PACKLEN_MPLS_VPN_CONFIG		90
#endif	/* INCLUDE_L3 */
#define	BCM_PACKLEN_MULTICAST_REPLICATION		16
#ifdef	INCLUDE_L3
#define	BCM_PACKLEN_NIV_EGRESS		34
#define	BCM_PACKLEN_NIV_FORWARD		16
#define	BCM_PACKLEN_NIV_PORT		22
#endif	/* INCLUDE_L3 */
#define	BCM_PACKLEN_OAM_DELAY		134
#define	BCM_PACKLEN_OAM_ENDPOINT_ACTION		48
#define	BCM_PACKLEN_OAM_ENDPOINT_INFO		181
#define	BCM_PACKLEN_OAM_GROUP_INFO		72
#define	BCM_PACKLEN_OAM_LOOPBACK		78
#define	BCM_PACKLEN_OAM_LOSS		89
#define	BCM_PACKLEN_OAM_PSC		39
#define	BCM_PACKLEN_OAM_PW_STATUS		26
#define	BCM_PACKLEN_PBMP		21
#define	BCM_PACKLEN_PHY_CONFIG		72
#define	BCM_PACKLEN_POLICER_CONFIG		48
#define	BCM_PACKLEN_PORT_ABILITY		40
#define	BCM_PACKLEN_PORT_CABLE_DIAG		44
#define	BCM_PACKLEN_PORT_CONFIG_PHY_OAM		16
#define	BCM_PACKLEN_PORT_CONFIG		441
#define	BCM_PACKLEN_PORT_CONGESTION_CONFIG		49
#define	BCM_PACKLEN_PORT_DEST_INFO		16
#define	BCM_PACKLEN_PORT_ENCAP_CONFIG		37
#define	BCM_PACKLEN_PORT_INFO		272
#define	BCM_PACKLEN_PORT_INTERFACE_CONFIG		16
#define	BCM_PACKLEN_PORT_LINK_STATE		8
#define	BCM_PACKLEN_PORT_MANAGEMENT_PACKET_CONFIG		12
#define	BCM_PACKLEN_PORT_MATCH_INFO		199
#define	BCM_PACKLEN_PORT_PHY_TIMESYNC_CONFIG		283
#define	BCM_PACKLEN_PORT_PHY_TIMESYNC_ENHANCED_CAPTURE		40
#define	BCM_PACKLEN_PORT_PON_INFO		58
#define	BCM_PACKLEN_PORT_TIMESYNC_CONFIG		26
#define	BCM_PACKLEN_PORT_TPID_CLASS		26
#define	BCM_PACKLEN_PRIORITY_MAPPING		20
#ifdef	INCLUDE_L3
#define	BCM_PACKLEN_PROXY_EGRESS		8
#define	BCM_PACKLEN_PROXY_SERVER		12
#endif	/* INCLUDE_L3 */
#define	BCM_PACKLEN_QOS_MAP		40
#define	BCM_PACKLEN_RATE_LIMIT		16
#define	BCM_PACKLEN_RX_REASONS		20
#define	BCM_PACKLEN_RX_SNOOP_CONFIG		36
#define	BCM_PACKLEN_RX_TRAP_CONFIG		44
#define	BCM_PACKLEN_SAT_ENDPOINT_INFO		45
#define	BCM_PACKLEN_STAT_FLEX_POOL_STAT_INFO		28
#define	BCM_PACKLEN_STAT_GROUP_MODE_ATTR_SELECTOR		12
#define	BCM_PACKLEN_STAT_THRESHOLD		16
#define	BCM_PACKLEN_STAT_VALUE		20
#define	BCM_PACKLEN_STK_MODID_CONFIG		8
#define	BCM_PACKLEN_STK_SYSTEM_GPORT_MAP		16
#define	BCM_PACKLEN_SUBPORT_CONFIG		34
#define	BCM_PACKLEN_SUBPORT_GROUP_CONFIG		18
#define	BCM_PACKLEN_SUBPORT_GROUP_LINKPHY_CONFIG		54
#define	BCM_PACKLEN_SWITCH_EVENT_CONTROL		12
#define	BCM_PACKLEN_SWITCH_NETWORK_GROUP_CONFIG		8
#define	BCM_PACKLEN_SWITCH_PKT_INFO		85
#define	BCM_PACKLEN_SWITCH_PROFILE_MAPPING		8
#define	BCM_PACKLEN_SWITCH_SERVICE_CONFIG		8
#ifdef	INCLUDE_CES
#define	BCM_PACKLEN_TDM_PORT_CONFIG		52
#endif	/* INCLUDE_CES */
#define	BCM_PACKLEN_TIME_CAPTURE		69
#define	BCM_PACKLEN_TIME_INTERFACE		59
#ifdef	INCLUDE_L3
#define	BCM_PACKLEN_TRILL_MULTICAST_ADJACENCY		12
#define	BCM_PACKLEN_TRILL_MULTICAST_ENTRY		26
#define	BCM_PACKLEN_TRILL_PORT		40
#define	BCM_PACKLEN_TRILL_RBRIDGE		20
#define	BCM_PACKLEN_TRILL_VPN_CONFIG		22
#endif	/* INCLUDE_L3 */
#define	BCM_PACKLEN_TRUNK_CHIP_INFO		40
#define	BCM_PACKLEN_TRUNK_INFO		40
#define	BCM_PACKLEN_TRUNK_MEMBER		16
#define	BCM_PACKLEN_TRUNK_RESILIENT_ENTRY		28
#ifdef	INCLUDE_L3
#define	BCM_PACKLEN_TUNNEL_CONFIG		20
#define	BCM_PACKLEN_TUNNEL_DSCP_MAP		12
#define	BCM_PACKLEN_TUNNEL_INITIATOR		106
#define	BCM_PACKLEN_TUNNEL_TERMINATOR		159
#endif	/* INCLUDE_L3 */
#define	BCM_PACKLEN_UDF_ALLOC_HINTS		80
#define	BCM_PACKLEN_UDF_PKT_FORMAT_INFO		36
#define	BCM_PACKLEN_UDF		16
#define	BCM_PACKLEN_VLAN_ACTION_SET		159
#define	BCM_PACKLEN_VLAN_BLOCK		84
#define	BCM_PACKLEN_VLAN_CONTROL_VLAN		152
#define	BCM_PACKLEN_VLAN_GPORT_INFO		12
#define	BCM_PACKLEN_VLAN_IP		38
#define	BCM_PACKLEN_VLAN_PORT		80
#define	BCM_PACKLEN_VLAN_PORT_TRANSLATION		20
#define	BCM_PACKLEN_VLAN_TRANSLATE_ACTION_CLASS		14
#define	BCM_PACKLEN_VLAN_VECTOR		512
#define	BCM_PACKLEN_VSWITCH_CROSS_CONNECT		20
#ifdef	INCLUDE_L3
#define	BCM_PACKLEN_VXLAN_PORT		46
#define	BCM_PACKLEN_VXLAN_VPN_CONFIG		92
#define	BCM_PACKLEN_WLAN_CLIENT		22
#define	BCM_PACKLEN_WLAN_PORT		40
#endif	/* INCLUDE_L3 */
#define	BCM_PACKLEN_INT_aBCM_COS_COUNT		32
#define	BCM_PACKLEN_INT_aBCM_TRUNK_MAX_PORTCNT		1024
#define	BCM_PACKLEN_UINT32_aBCM_CES_SLOT_MAX		128
#define	BCM_PACKLEN_UINT64		8

#ifdef	INCLUDE_BFD
extern uint8 *_bcm_pack_bfd_auth_sha1(uint8 *, bcm_bfd_auth_sha1_t *);
extern uint8 *_bcm_unpack_bfd_auth_sha1(uint8 *, bcm_bfd_auth_sha1_t *);
extern uint8 *_bcm_pack_bfd_auth_simple_password(uint8 *, bcm_bfd_auth_simple_password_t *);
extern uint8 *_bcm_unpack_bfd_auth_simple_password(uint8 *, bcm_bfd_auth_simple_password_t *);
extern uint8 *_bcm_pack_bfd_endpoint_info(uint8 *, bcm_bfd_endpoint_info_t *);
extern uint8 *_bcm_unpack_bfd_endpoint_info(uint8 *, bcm_bfd_endpoint_info_t *);
extern uint8 *_bcm_pack_bfd_endpoint_stat(uint8 *, bcm_bfd_endpoint_stat_t *);
extern uint8 *_bcm_unpack_bfd_endpoint_stat(uint8 *, bcm_bfd_endpoint_stat_t *);
#endif	/* INCLUDE_BFD */
#ifdef	INCLUDE_CES
extern uint8 *_bcm_pack_ces_cas_packet_control(uint8 *, bcm_ces_cas_packet_control_t *);
extern uint8 *_bcm_unpack_ces_cas_packet_control(uint8 *, bcm_ces_cas_packet_control_t *);
extern uint8 *_bcm_pack_ces_cclk_config(uint8 *, bcm_ces_cclk_config_t *);
extern uint8 *_bcm_unpack_ces_cclk_config(uint8 *, bcm_ces_cclk_config_t *);
extern uint8 *_bcm_pack_ces_mac_cmd_config(uint8 *, bcm_ces_mac_cmd_config_t *);
extern uint8 *_bcm_unpack_ces_mac_cmd_config(uint8 *, bcm_ces_mac_cmd_config_t *);
extern uint8 *_bcm_pack_ces_rclock_config(uint8 *, bcm_ces_rclock_config_t *);
extern uint8 *_bcm_unpack_ces_rclock_config(uint8 *, bcm_ces_rclock_config_t *);
extern uint8 *_bcm_pack_ces_service_config(uint8 *, bcm_ces_service_config_t *);
extern uint8 *_bcm_unpack_ces_service_config(uint8 *, bcm_ces_service_config_t *);
extern uint8 *_bcm_pack_ces_service_egress_status(uint8 *, bcm_ces_service_egress_status_t *);
extern uint8 *_bcm_unpack_ces_service_egress_status(uint8 *, bcm_ces_service_egress_status_t *);
extern uint8 *_bcm_pack_ces_service_pm_stats(uint8 *, bcm_ces_service_pm_stats_t *);
extern uint8 *_bcm_unpack_ces_service_pm_stats(uint8 *, bcm_ces_service_pm_stats_t *);
#endif	/* INCLUDE_CES */
extern uint8 *_bcm_pack_cos_pon_link_sla(uint8 *, bcm_cos_pon_link_sla_t *);
extern uint8 *_bcm_unpack_cos_pon_link_sla(uint8 *, bcm_cos_pon_link_sla_t *);
extern uint8 *_bcm_pack_cosq_classifier(uint8 *, bcm_cosq_classifier_t *);
extern uint8 *_bcm_unpack_cosq_classifier(uint8 *, bcm_cosq_classifier_t *);
extern uint8 *_bcm_pack_cosq_congestion_info(uint8 *, bcm_cosq_congestion_info_t *);
extern uint8 *_bcm_unpack_cosq_congestion_info(uint8 *, bcm_cosq_congestion_info_t *);
extern uint8 *_bcm_pack_cosq_delay_tolerance(uint8 *, bcm_cosq_delay_tolerance_t *);
extern uint8 *_bcm_unpack_cosq_delay_tolerance(uint8 *, bcm_cosq_delay_tolerance_t *);
extern uint8 *_bcm_pack_cosq_egress_multicast_config(uint8 *, bcm_cosq_egress_multicast_config_t *);
extern uint8 *_bcm_unpack_cosq_egress_multicast_config(uint8 *, bcm_cosq_egress_multicast_config_t *);
extern uint8 *_bcm_pack_cosq_fc_endpoint(uint8 *, bcm_cosq_fc_endpoint_t *);
extern uint8 *_bcm_unpack_cosq_fc_endpoint(uint8 *, bcm_cosq_fc_endpoint_t *);
extern uint8 *_bcm_pack_cosq_gport_connection(uint8 *, bcm_cosq_gport_connection_t *);
extern uint8 *_bcm_unpack_cosq_gport_connection(uint8 *, bcm_cosq_gport_connection_t *);
extern uint8 *_bcm_pack_cosq_gport_discard(uint8 *, bcm_cosq_gport_discard_t *);
extern uint8 *_bcm_unpack_cosq_gport_discard(uint8 *, bcm_cosq_gport_discard_t *);
extern uint8 *_bcm_pack_cosq_gport_info_core(uint8 *, bcm_cosq_gport_info_core_t *);
extern uint8 *_bcm_unpack_cosq_gport_info_core(uint8 *, bcm_cosq_gport_info_core_t *);
extern uint8 *_bcm_pack_cosq_gport_info(uint8 *, bcm_cosq_gport_info_t *);
extern uint8 *_bcm_unpack_cosq_gport_info(uint8 *, bcm_cosq_gport_info_t *);
extern uint8 *_bcm_pack_cosq_gport_priority_profile(uint8 *, bcm_cosq_gport_priority_profile_t *);
extern uint8 *_bcm_unpack_cosq_gport_priority_profile(uint8 *, bcm_cosq_gport_priority_profile_t *);
extern uint8 *_bcm_pack_cosq_gport_size(uint8 *, bcm_cosq_gport_size_t *);
extern uint8 *_bcm_unpack_cosq_gport_size(uint8 *, bcm_cosq_gport_size_t *);
extern uint8 *_bcm_pack_cosq_gport_stat_profile(uint8 *, bcm_cosq_gport_stat_profile_t *);
extern uint8 *_bcm_unpack_cosq_gport_stat_profile(uint8 *, bcm_cosq_gport_stat_profile_t *);
extern uint8 *_bcm_pack_cosq_pfc_config(uint8 *, bcm_cosq_pfc_config_t *);
extern uint8 *_bcm_unpack_cosq_pfc_config(uint8 *, bcm_cosq_pfc_config_t *);
extern uint8 *_bcm_pack_cosq_qcn_config(uint8 *, bcm_cosq_qcn_config_t *);
extern uint8 *_bcm_unpack_cosq_qcn_config(uint8 *, bcm_cosq_qcn_config_t *);
extern uint8 *_bcm_pack_cosq_report_threshold(uint8 *, bcm_cosq_report_threshold_t *);
extern uint8 *_bcm_unpack_cosq_report_threshold(uint8 *, bcm_cosq_report_threshold_t *);
extern uint8 *_bcm_pack_cosq_service_pool(uint8 *, bcm_cosq_service_pool_t *);
extern uint8 *_bcm_unpack_cosq_service_pool(uint8 *, bcm_cosq_service_pool_t *);
extern uint8 *_bcm_pack_cosq_subscriber_map(uint8 *, bcm_cosq_subscriber_map_t *);
extern uint8 *_bcm_unpack_cosq_subscriber_map(uint8 *, bcm_cosq_subscriber_map_t *);
extern uint8 *_bcm_pack_cosq_threshold(uint8 *, bcm_cosq_threshold_t *);
extern uint8 *_bcm_unpack_cosq_threshold(uint8 *, bcm_cosq_threshold_t *);
extern uint8 *_bcm_pack_cosq_vsq_info(uint8 *, bcm_cosq_vsq_info_t *);
extern uint8 *_bcm_unpack_cosq_vsq_info(uint8 *, bcm_cosq_vsq_info_t *);
extern uint8 *_bcm_pack_ecn_traffic_action_config(uint8 *, bcm_ecn_traffic_action_config_t *);
extern uint8 *_bcm_unpack_ecn_traffic_action_config(uint8 *, bcm_ecn_traffic_action_config_t *);
extern uint8 *_bcm_pack_ecn_traffic_map_info(uint8 *, bcm_ecn_traffic_map_info_t *);
extern uint8 *_bcm_unpack_ecn_traffic_map_info(uint8 *, bcm_ecn_traffic_map_info_t *);
#ifdef	INCLUDE_L3
extern uint8 *_bcm_pack_extender_encap(uint8 *, bcm_extender_encap_t *);
extern uint8 *_bcm_unpack_extender_encap(uint8 *, bcm_extender_encap_t *);
extern uint8 *_bcm_pack_extender_forward(uint8 *, bcm_extender_forward_t *);
extern uint8 *_bcm_unpack_extender_forward(uint8 *, bcm_extender_forward_t *);
extern uint8 *_bcm_pack_extender_port(uint8 *, bcm_extender_port_t *);
extern uint8 *_bcm_unpack_extender_port(uint8 *, bcm_extender_port_t *);
#endif	/* INCLUDE_L3 */
extern uint8 *_bcm_pack_fabric_action_info(uint8 *, bcm_fabric_action_info_t *);
extern uint8 *_bcm_unpack_fabric_action_info(uint8 *, bcm_fabric_action_info_t *);
extern uint8 *_bcm_pack_fabric_bandwidth_profile(uint8 *, bcm_fabric_bandwidth_profile_t *);
extern uint8 *_bcm_unpack_fabric_bandwidth_profile(uint8 *, bcm_fabric_bandwidth_profile_t *);
extern uint8 *_bcm_pack_fabric_config_discard(uint8 *, bcm_fabric_config_discard_t *);
extern uint8 *_bcm_unpack_fabric_config_discard(uint8 *, bcm_fabric_config_discard_t *);
extern uint8 *_bcm_pack_fabric_link_connectivity(uint8 *, bcm_fabric_link_connectivity_t *);
extern uint8 *_bcm_unpack_fabric_link_connectivity(uint8 *, bcm_fabric_link_connectivity_t *);
extern uint8 *_bcm_pack_fabric_link_remote_pipe_mapping(uint8 *, bcm_fabric_link_remote_pipe_mapping_t *);
extern uint8 *_bcm_unpack_fabric_link_remote_pipe_mapping(uint8 *, bcm_fabric_link_remote_pipe_mapping_t *);
extern uint8 *_bcm_pack_fabric_module_vector(uint8 *, bcm_fabric_module_vector_t);
extern uint8 *_bcm_unpack_fabric_module_vector(uint8 *, bcm_fabric_module_vector_t);
extern uint8 *_bcm_pack_fabric_predicate_action_info(uint8 *, bcm_fabric_predicate_action_info_t *);
extern uint8 *_bcm_unpack_fabric_predicate_action_info(uint8 *, bcm_fabric_predicate_action_info_t *);
extern uint8 *_bcm_pack_fabric_predicate_info(uint8 *, bcm_fabric_predicate_info_t *);
extern uint8 *_bcm_unpack_fabric_predicate_info(uint8 *, bcm_fabric_predicate_info_t *);
extern uint8 *_bcm_pack_fabric_route(uint8 *, bcm_fabric_route_t *);
extern uint8 *_bcm_unpack_fabric_route(uint8 *, bcm_fabric_route_t *);
extern uint8 *_bcm_pack_fabric_tdm_direct_routing(uint8 *, bcm_fabric_tdm_direct_routing_t *);
extern uint8 *_bcm_unpack_fabric_tdm_direct_routing(uint8 *, bcm_fabric_tdm_direct_routing_t *);
extern uint8 *_bcm_pack_fabric_tdm_editing(uint8 *, bcm_fabric_tdm_editing_t *);
extern uint8 *_bcm_unpack_fabric_tdm_editing(uint8 *, bcm_fabric_tdm_editing_t *);
#ifdef	INCLUDE_L3
extern uint8 *_bcm_pack_failover_element(uint8 *, bcm_failover_element_t *);
extern uint8 *_bcm_unpack_failover_element(uint8 *, bcm_failover_element_t *);
#endif	/* INCLUDE_L3 */
extern uint8 *_bcm_pack_failover_ring(uint8 *, bcm_failover_ring_t *);
extern uint8 *_bcm_unpack_failover_ring(uint8 *, bcm_failover_ring_t *);
extern uint8 *_bcm_pack_fcoe_intf_config(uint8 *, bcm_fcoe_intf_config_t *);
extern uint8 *_bcm_unpack_fcoe_intf_config(uint8 *, bcm_fcoe_intf_config_t *);
extern uint8 *_bcm_pack_fcoe_route(uint8 *, bcm_fcoe_route_t *);
extern uint8 *_bcm_unpack_fcoe_route(uint8 *, bcm_fcoe_route_t *);
extern uint8 *_bcm_pack_fcoe_vsan_action_set(uint8 *, bcm_fcoe_vsan_action_set_t *);
extern uint8 *_bcm_unpack_fcoe_vsan_action_set(uint8 *, bcm_fcoe_vsan_action_set_t *);
extern uint8 *_bcm_pack_fcoe_vsan(uint8 *, bcm_fcoe_vsan_t *);
extern uint8 *_bcm_unpack_fcoe_vsan(uint8 *, bcm_fcoe_vsan_t *);
extern uint8 *_bcm_pack_fcoe_vsan_translate_key_config(uint8 *, bcm_fcoe_vsan_translate_key_config_t *);
extern uint8 *_bcm_unpack_fcoe_vsan_translate_key_config(uint8 *, bcm_fcoe_vsan_translate_key_config_t *);
extern uint8 *_bcm_pack_fcoe_zone_entry(uint8 *, bcm_fcoe_zone_entry_t *);
extern uint8 *_bcm_unpack_fcoe_zone_entry(uint8 *, bcm_fcoe_zone_entry_t *);
extern uint8 *_bcm_pack_field_aset(uint8 *, bcm_field_aset_t *);
extern uint8 *_bcm_unpack_field_aset(uint8 *, bcm_field_aset_t *);
extern uint8 *_bcm_pack_field_data_ethertype(uint8 *, bcm_field_data_ethertype_t *);
extern uint8 *_bcm_unpack_field_data_ethertype(uint8 *, bcm_field_data_ethertype_t *);
extern uint8 *_bcm_pack_field_data_ip_protocol(uint8 *, bcm_field_data_ip_protocol_t *);
extern uint8 *_bcm_unpack_field_data_ip_protocol(uint8 *, bcm_field_data_ip_protocol_t *);
extern uint8 *_bcm_pack_field_data_packet_format(uint8 *, bcm_field_data_packet_format_t *);
extern uint8 *_bcm_unpack_field_data_packet_format(uint8 *, bcm_field_data_packet_format_t *);
extern uint8 *_bcm_pack_field_data_qualifier(uint8 *, bcm_field_data_qualifier_t *);
extern uint8 *_bcm_unpack_field_data_qualifier(uint8 *, bcm_field_data_qualifier_t *);
extern uint8 *_bcm_pack_field_entry_oper(uint8 *, bcm_field_entry_oper_t *);
extern uint8 *_bcm_unpack_field_entry_oper(uint8 *, bcm_field_entry_oper_t *);
extern uint8 *_bcm_pack_field_extraction_action(uint8 *, bcm_field_extraction_action_t *);
extern uint8 *_bcm_unpack_field_extraction_action(uint8 *, bcm_field_extraction_action_t *);
extern uint8 *_bcm_pack_field_extraction_field(uint8 *, bcm_field_extraction_field_t *);
extern uint8 *_bcm_unpack_field_extraction_field(uint8 *, bcm_field_extraction_field_t *);
extern uint8 *_bcm_pack_field_group_config(uint8 *, bcm_field_group_config_t *);
extern uint8 *_bcm_unpack_field_group_config(uint8 *, bcm_field_group_config_t *);
extern uint8 *_bcm_pack_field_group_status(uint8 *, bcm_field_group_status_t *);
extern uint8 *_bcm_unpack_field_group_status(uint8 *, bcm_field_group_status_t *);
extern uint8 *_bcm_pack_field_presel_set(uint8 *, bcm_field_presel_set_t *);
extern uint8 *_bcm_unpack_field_presel_set(uint8 *, bcm_field_presel_set_t *);
extern uint8 *_bcm_pack_field_qset(uint8 *, bcm_field_qset_t *);
extern uint8 *_bcm_unpack_field_qset(uint8 *, bcm_field_qset_t *);
extern uint8 *_bcm_pack_field_snap_header(uint8 *, bcm_field_snap_header_t *);
extern uint8 *_bcm_unpack_field_snap_header(uint8 *, bcm_field_snap_header_t *);
extern uint8 *_bcm_pack_field_stage_info(uint8 *, bcm_field_stage_info_t *);
extern uint8 *_bcm_unpack_field_stage_info(uint8 *, bcm_field_stage_info_t *);
extern uint8 *_bcm_pack_info(uint8 *, bcm_info_t *);
extern uint8 *_bcm_unpack_info(uint8 *, bcm_info_t *);
extern uint8 *_bcm_pack_ip6(uint8 *, bcm_ip6_t);
extern uint8 *_bcm_unpack_ip6(uint8 *, bcm_ip6_t);
extern uint8 *_bcm_pack_ipfix_config(uint8 *, bcm_ipfix_config_t *);
extern uint8 *_bcm_unpack_ipfix_config(uint8 *, bcm_ipfix_config_t *);
extern uint8 *_bcm_pack_ipfix_mirror_config(uint8 *, bcm_ipfix_mirror_config_t *);
extern uint8 *_bcm_unpack_ipfix_mirror_config(uint8 *, bcm_ipfix_mirror_config_t *);
extern uint8 *_bcm_pack_ipfix_rate(uint8 *, bcm_ipfix_rate_t *);
extern uint8 *_bcm_unpack_ipfix_rate(uint8 *, bcm_ipfix_rate_t *);
#ifdef	INCLUDE_L3
extern uint8 *_bcm_pack_ipmc_addr(uint8 *, bcm_ipmc_addr_t *);
extern uint8 *_bcm_unpack_ipmc_addr(uint8 *, bcm_ipmc_addr_t *);
extern uint8 *_bcm_pack_ipmc_counters(uint8 *, bcm_ipmc_counters_t *);
extern uint8 *_bcm_unpack_ipmc_counters(uint8 *, bcm_ipmc_counters_t *);
extern uint8 *_bcm_pack_ipmc_range(uint8 *, bcm_ipmc_range_t *);
extern uint8 *_bcm_unpack_ipmc_range(uint8 *, bcm_ipmc_range_t *);
#endif	/* INCLUDE_L3 */
extern uint8 *_bcm_pack_l2_addr_distribute(uint8 *, bcm_l2_addr_distribute_t *);
extern uint8 *_bcm_unpack_l2_addr_distribute(uint8 *, bcm_l2_addr_distribute_t *);
extern uint8 *_bcm_pack_l2_addr(uint8 *, bcm_l2_addr_t *);
extern uint8 *_bcm_unpack_l2_addr(uint8 *, bcm_l2_addr_t *);
extern uint8 *_bcm_pack_l2_auth_addr(uint8 *, bcm_l2_auth_addr_t *);
extern uint8 *_bcm_unpack_l2_auth_addr(uint8 *, bcm_l2_auth_addr_t *);
extern uint8 *_bcm_pack_l2_cache_addr(uint8 *, bcm_l2_cache_addr_t *);
extern uint8 *_bcm_unpack_l2_cache_addr(uint8 *, bcm_l2_cache_addr_t *);
extern uint8 *_bcm_pack_l2_egress(uint8 *, bcm_l2_egress_t *);
extern uint8 *_bcm_unpack_l2_egress(uint8 *, bcm_l2_egress_t *);
extern uint8 *_bcm_pack_l2_gport_forward_info(uint8 *, bcm_l2_gport_forward_info_t *);
extern uint8 *_bcm_unpack_l2_gport_forward_info(uint8 *, bcm_l2_gport_forward_info_t *);
extern uint8 *_bcm_pack_l2_learn_limit(uint8 *, bcm_l2_learn_limit_t *);
extern uint8 *_bcm_unpack_l2_learn_limit(uint8 *, bcm_l2_learn_limit_t *);
extern uint8 *_bcm_pack_l2_learn_msgs_config(uint8 *, bcm_l2_learn_msgs_config_t *);
extern uint8 *_bcm_unpack_l2_learn_msgs_config(uint8 *, bcm_l2_learn_msgs_config_t *);
extern uint8 *_bcm_pack_l2_mac_port(uint8 *, bcm_l2_mac_port_t *);
extern uint8 *_bcm_unpack_l2_mac_port(uint8 *, bcm_l2_mac_port_t *);
extern uint8 *_bcm_pack_l2_ring(uint8 *, bcm_l2_ring_t *);
extern uint8 *_bcm_unpack_l2_ring(uint8 *, bcm_l2_ring_t *);
extern uint8 *_bcm_pack_l2_station(uint8 *, bcm_l2_station_t *);
extern uint8 *_bcm_unpack_l2_station(uint8 *, bcm_l2_station_t *);
#ifdef	INCLUDE_L3
extern uint8 *_bcm_pack_l2gre_port(uint8 *, bcm_l2gre_port_t *);
extern uint8 *_bcm_unpack_l2gre_port(uint8 *, bcm_l2gre_port_t *);
extern uint8 *_bcm_pack_l2gre_vpn_config(uint8 *, bcm_l2gre_vpn_config_t *);
extern uint8 *_bcm_unpack_l2gre_vpn_config(uint8 *, bcm_l2gre_vpn_config_t *);
extern uint8 *_bcm_pack_l3_egress_ecmp_resilient_entry(uint8 *, bcm_l3_egress_ecmp_resilient_entry_t *);
extern uint8 *_bcm_unpack_l3_egress_ecmp_resilient_entry(uint8 *, bcm_l3_egress_ecmp_resilient_entry_t *);
extern uint8 *_bcm_pack_l3_egress_ecmp(uint8 *, bcm_l3_egress_ecmp_t *);
extern uint8 *_bcm_unpack_l3_egress_ecmp(uint8 *, bcm_l3_egress_ecmp_t *);
extern uint8 *_bcm_pack_l3_egress(uint8 *, bcm_l3_egress_t *);
extern uint8 *_bcm_unpack_l3_egress(uint8 *, bcm_l3_egress_t *);
extern uint8 *_bcm_pack_l3_host(uint8 *, bcm_l3_host_t *);
extern uint8 *_bcm_unpack_l3_host(uint8 *, bcm_l3_host_t *);
extern uint8 *_bcm_pack_l3_info(uint8 *, bcm_l3_info_t *);
extern uint8 *_bcm_unpack_l3_info(uint8 *, bcm_l3_info_t *);
extern uint8 *_bcm_pack_l3_ingress(uint8 *, bcm_l3_ingress_t *);
extern uint8 *_bcm_unpack_l3_ingress(uint8 *, bcm_l3_ingress_t *);
extern uint8 *_bcm_pack_l3_intf(uint8 *, bcm_l3_intf_t *);
extern uint8 *_bcm_unpack_l3_intf(uint8 *, bcm_l3_intf_t *);
extern uint8 *_bcm_pack_l3_key(uint8 *, bcm_l3_key_t *);
extern uint8 *_bcm_unpack_l3_key(uint8 *, bcm_l3_key_t *);
extern uint8 *_bcm_pack_l3_nat_egress(uint8 *, bcm_l3_nat_egress_t *);
extern uint8 *_bcm_unpack_l3_nat_egress(uint8 *, bcm_l3_nat_egress_t *);
extern uint8 *_bcm_pack_l3_nat_ingress(uint8 *, bcm_l3_nat_ingress_t *);
extern uint8 *_bcm_unpack_l3_nat_ingress(uint8 *, bcm_l3_nat_ingress_t *);
extern uint8 *_bcm_pack_l3_route(uint8 *, bcm_l3_route_t *);
extern uint8 *_bcm_unpack_l3_route(uint8 *, bcm_l3_route_t *);
extern uint8 *_bcm_pack_l3_source_bind(uint8 *, bcm_l3_source_bind_t *);
extern uint8 *_bcm_unpack_l3_source_bind(uint8 *, bcm_l3_source_bind_t *);
#endif	/* INCLUDE_L3 */
extern uint8 *_bcm_pack_mac(uint8 *, bcm_mac_t);
extern uint8 *_bcm_unpack_mac(uint8 *, bcm_mac_t);
extern uint8 *_bcm_pack_mcast_addr(uint8 *, bcm_mcast_addr_t *);
extern uint8 *_bcm_unpack_mcast_addr(uint8 *, bcm_mcast_addr_t *);
#ifdef	INCLUDE_L3
extern uint8 *_bcm_pack_mim_port(uint8 *, bcm_mim_port_t *);
extern uint8 *_bcm_unpack_mim_port(uint8 *, bcm_mim_port_t *);
extern uint8 *_bcm_pack_mim_vpn_config(uint8 *, bcm_mim_vpn_config_t *);
extern uint8 *_bcm_unpack_mim_vpn_config(uint8 *, bcm_mim_vpn_config_t *);
#endif	/* INCLUDE_L3 */
extern uint8 *_bcm_pack_mirror_destination(uint8 *, bcm_mirror_destination_t *);
extern uint8 *_bcm_unpack_mirror_destination(uint8 *, bcm_mirror_destination_t *);
extern uint8 *_bcm_pack_mpls_egress_label(uint8 *, bcm_mpls_egress_label_t *);
extern uint8 *_bcm_unpack_mpls_egress_label(uint8 *, bcm_mpls_egress_label_t *);
#ifdef	INCLUDE_L3
extern uint8 *_bcm_pack_mpls_exp_map(uint8 *, bcm_mpls_exp_map_t *);
extern uint8 *_bcm_unpack_mpls_exp_map(uint8 *, bcm_mpls_exp_map_t *);
extern uint8 *_bcm_pack_mpls_port(uint8 *, bcm_mpls_port_t *);
extern uint8 *_bcm_unpack_mpls_port(uint8 *, bcm_mpls_port_t *);
extern uint8 *_bcm_pack_mpls_tunnel_switch(uint8 *, bcm_mpls_tunnel_switch_t *);
extern uint8 *_bcm_unpack_mpls_tunnel_switch(uint8 *, bcm_mpls_tunnel_switch_t *);
extern uint8 *_bcm_pack_mpls_vpn_config(uint8 *, bcm_mpls_vpn_config_t *);
extern uint8 *_bcm_unpack_mpls_vpn_config(uint8 *, bcm_mpls_vpn_config_t *);
#endif	/* INCLUDE_L3 */
extern uint8 *_bcm_pack_multicast_replication(uint8 *, bcm_multicast_replication_t *);
extern uint8 *_bcm_unpack_multicast_replication(uint8 *, bcm_multicast_replication_t *);
#ifdef	INCLUDE_L3
extern uint8 *_bcm_pack_niv_egress(uint8 *, bcm_niv_egress_t *);
extern uint8 *_bcm_unpack_niv_egress(uint8 *, bcm_niv_egress_t *);
extern uint8 *_bcm_pack_niv_forward(uint8 *, bcm_niv_forward_t *);
extern uint8 *_bcm_unpack_niv_forward(uint8 *, bcm_niv_forward_t *);
extern uint8 *_bcm_pack_niv_port(uint8 *, bcm_niv_port_t *);
extern uint8 *_bcm_unpack_niv_port(uint8 *, bcm_niv_port_t *);
#endif	/* INCLUDE_L3 */
extern uint8 *_bcm_pack_oam_delay(uint8 *, bcm_oam_delay_t *);
extern uint8 *_bcm_unpack_oam_delay(uint8 *, bcm_oam_delay_t *);
extern uint8 *_bcm_pack_oam_endpoint_action(uint8 *, bcm_oam_endpoint_action_t *);
extern uint8 *_bcm_unpack_oam_endpoint_action(uint8 *, bcm_oam_endpoint_action_t *);
extern uint8 *_bcm_pack_oam_endpoint_info(uint8 *, bcm_oam_endpoint_info_t *);
extern uint8 *_bcm_unpack_oam_endpoint_info(uint8 *, bcm_oam_endpoint_info_t *);
extern uint8 *_bcm_pack_oam_group_info(uint8 *, bcm_oam_group_info_t *);
extern uint8 *_bcm_unpack_oam_group_info(uint8 *, bcm_oam_group_info_t *);
extern uint8 *_bcm_pack_oam_loopback(uint8 *, bcm_oam_loopback_t *);
extern uint8 *_bcm_unpack_oam_loopback(uint8 *, bcm_oam_loopback_t *);
extern uint8 *_bcm_pack_oam_loss(uint8 *, bcm_oam_loss_t *);
extern uint8 *_bcm_unpack_oam_loss(uint8 *, bcm_oam_loss_t *);
extern uint8 *_bcm_pack_oam_psc(uint8 *, bcm_oam_psc_t *);
extern uint8 *_bcm_unpack_oam_psc(uint8 *, bcm_oam_psc_t *);
extern uint8 *_bcm_pack_oam_pw_status(uint8 *, bcm_oam_pw_status_t *);
extern uint8 *_bcm_unpack_oam_pw_status(uint8 *, bcm_oam_pw_status_t *);
extern uint8 *_bcm_pack_pbmp(uint8 *, bcm_pbmp_t *);
extern uint8 *_bcm_unpack_pbmp(uint8 *, bcm_pbmp_t *);
extern uint8 *_bcm_pack_phy_config(uint8 *, bcm_phy_config_t *);
extern uint8 *_bcm_unpack_phy_config(uint8 *, bcm_phy_config_t *);
extern uint8 *_bcm_pack_policer_config(uint8 *, bcm_policer_config_t *);
extern uint8 *_bcm_unpack_policer_config(uint8 *, bcm_policer_config_t *);
extern uint8 *_bcm_pack_port_ability(uint8 *, bcm_port_ability_t *);
extern uint8 *_bcm_unpack_port_ability(uint8 *, bcm_port_ability_t *);
extern uint8 *_bcm_pack_port_cable_diag(uint8 *, bcm_port_cable_diag_t *);
extern uint8 *_bcm_unpack_port_cable_diag(uint8 *, bcm_port_cable_diag_t *);
extern uint8 *_bcm_pack_port_config_phy_oam(uint8 *, bcm_port_config_phy_oam_t *);
extern uint8 *_bcm_unpack_port_config_phy_oam(uint8 *, bcm_port_config_phy_oam_t *);
extern uint8 *_bcm_pack_port_config(uint8 *, bcm_port_config_t *);
extern uint8 *_bcm_unpack_port_config(uint8 *, bcm_port_config_t *);
extern uint8 *_bcm_pack_port_congestion_config(uint8 *, bcm_port_congestion_config_t *);
extern uint8 *_bcm_unpack_port_congestion_config(uint8 *, bcm_port_congestion_config_t *);
extern uint8 *_bcm_pack_port_dest_info(uint8 *, bcm_port_dest_info_t *);
extern uint8 *_bcm_unpack_port_dest_info(uint8 *, bcm_port_dest_info_t *);
extern uint8 *_bcm_pack_port_encap_config(uint8 *, bcm_port_encap_config_t *);
extern uint8 *_bcm_unpack_port_encap_config(uint8 *, bcm_port_encap_config_t *);
extern uint8 *_bcm_pack_port_info(uint8 *, bcm_port_info_t *);
extern uint8 *_bcm_unpack_port_info(uint8 *, bcm_port_info_t *);
extern uint8 *_bcm_pack_port_interface_config(uint8 *, bcm_port_interface_config_t *);
extern uint8 *_bcm_unpack_port_interface_config(uint8 *, bcm_port_interface_config_t *);
extern uint8 *_bcm_pack_port_link_state(uint8 *, bcm_port_link_state_t *);
extern uint8 *_bcm_unpack_port_link_state(uint8 *, bcm_port_link_state_t *);
extern uint8 *_bcm_pack_port_management_packet_config(uint8 *, bcm_port_management_packet_config_t *);
extern uint8 *_bcm_unpack_port_management_packet_config(uint8 *, bcm_port_management_packet_config_t *);
extern uint8 *_bcm_pack_port_match_info(uint8 *, bcm_port_match_info_t *);
extern uint8 *_bcm_unpack_port_match_info(uint8 *, bcm_port_match_info_t *);
extern uint8 *_bcm_pack_port_phy_timesync_config(uint8 *, bcm_port_phy_timesync_config_t *);
extern uint8 *_bcm_unpack_port_phy_timesync_config(uint8 *, bcm_port_phy_timesync_config_t *);
extern uint8 *_bcm_pack_port_phy_timesync_enhanced_capture(uint8 *, bcm_port_phy_timesync_enhanced_capture_t *);
extern uint8 *_bcm_unpack_port_phy_timesync_enhanced_capture(uint8 *, bcm_port_phy_timesync_enhanced_capture_t *);
extern uint8 *_bcm_pack_port_pon_info(uint8 *, bcm_port_pon_info_t *);
extern uint8 *_bcm_unpack_port_pon_info(uint8 *, bcm_port_pon_info_t *);
extern uint8 *_bcm_pack_port_timesync_config(uint8 *, bcm_port_timesync_config_t *);
extern uint8 *_bcm_unpack_port_timesync_config(uint8 *, bcm_port_timesync_config_t *);
extern uint8 *_bcm_pack_port_tpid_class(uint8 *, bcm_port_tpid_class_t *);
extern uint8 *_bcm_unpack_port_tpid_class(uint8 *, bcm_port_tpid_class_t *);
extern uint8 *_bcm_pack_priority_mapping(uint8 *, bcm_priority_mapping_t *);
extern uint8 *_bcm_unpack_priority_mapping(uint8 *, bcm_priority_mapping_t *);
#ifdef	INCLUDE_L3
extern uint8 *_bcm_pack_proxy_egress(uint8 *, bcm_proxy_egress_t *);
extern uint8 *_bcm_unpack_proxy_egress(uint8 *, bcm_proxy_egress_t *);
extern uint8 *_bcm_pack_proxy_server(uint8 *, bcm_proxy_server_t *);
extern uint8 *_bcm_unpack_proxy_server(uint8 *, bcm_proxy_server_t *);
#endif	/* INCLUDE_L3 */
extern uint8 *_bcm_pack_qos_map(uint8 *, bcm_qos_map_t *);
extern uint8 *_bcm_unpack_qos_map(uint8 *, bcm_qos_map_t *);
extern uint8 *_bcm_pack_rate_limit(uint8 *, bcm_rate_limit_t *);
extern uint8 *_bcm_unpack_rate_limit(uint8 *, bcm_rate_limit_t *);
extern uint8 *_bcm_pack_rx_reasons(uint8 *, bcm_rx_reasons_t *);
extern uint8 *_bcm_unpack_rx_reasons(uint8 *, bcm_rx_reasons_t *);
extern uint8 *_bcm_pack_rx_snoop_config(uint8 *, bcm_rx_snoop_config_t *);
extern uint8 *_bcm_unpack_rx_snoop_config(uint8 *, bcm_rx_snoop_config_t *);
extern uint8 *_bcm_pack_rx_trap_config(uint8 *, bcm_rx_trap_config_t *);
extern uint8 *_bcm_unpack_rx_trap_config(uint8 *, bcm_rx_trap_config_t *);
extern uint8 *_bcm_pack_sat_endpoint_info(uint8 *, bcm_sat_endpoint_info_t *);
extern uint8 *_bcm_unpack_sat_endpoint_info(uint8 *, bcm_sat_endpoint_info_t *);
extern uint8 *_bcm_pack_stat_flex_pool_stat_info(uint8 *, bcm_stat_flex_pool_stat_info_t *);
extern uint8 *_bcm_unpack_stat_flex_pool_stat_info(uint8 *, bcm_stat_flex_pool_stat_info_t *);
extern uint8 *_bcm_pack_stat_group_mode_attr_selector(uint8 *, bcm_stat_group_mode_attr_selector_t *);
extern uint8 *_bcm_unpack_stat_group_mode_attr_selector(uint8 *, bcm_stat_group_mode_attr_selector_t *);
extern uint8 *_bcm_pack_stat_threshold(uint8 *, bcm_stat_threshold_t *);
extern uint8 *_bcm_unpack_stat_threshold(uint8 *, bcm_stat_threshold_t *);
extern uint8 *_bcm_pack_stat_value(uint8 *, bcm_stat_value_t *);
extern uint8 *_bcm_unpack_stat_value(uint8 *, bcm_stat_value_t *);
extern uint8 *_bcm_pack_stk_modid_config(uint8 *, bcm_stk_modid_config_t *);
extern uint8 *_bcm_unpack_stk_modid_config(uint8 *, bcm_stk_modid_config_t *);
extern uint8 *_bcm_pack_stk_system_gport_map(uint8 *, bcm_stk_system_gport_map_t *);
extern uint8 *_bcm_unpack_stk_system_gport_map(uint8 *, bcm_stk_system_gport_map_t *);
extern uint8 *_bcm_pack_subport_config(uint8 *, bcm_subport_config_t *);
extern uint8 *_bcm_unpack_subport_config(uint8 *, bcm_subport_config_t *);
extern uint8 *_bcm_pack_subport_group_config(uint8 *, bcm_subport_group_config_t *);
extern uint8 *_bcm_unpack_subport_group_config(uint8 *, bcm_subport_group_config_t *);
extern uint8 *_bcm_pack_subport_group_linkphy_config(uint8 *, bcm_subport_group_linkphy_config_t *);
extern uint8 *_bcm_unpack_subport_group_linkphy_config(uint8 *, bcm_subport_group_linkphy_config_t *);
extern uint8 *_bcm_pack_switch_event_control(uint8 *, bcm_switch_event_control_t *);
extern uint8 *_bcm_unpack_switch_event_control(uint8 *, bcm_switch_event_control_t *);
extern uint8 *_bcm_pack_switch_network_group_config(uint8 *, bcm_switch_network_group_config_t *);
extern uint8 *_bcm_unpack_switch_network_group_config(uint8 *, bcm_switch_network_group_config_t *);
extern uint8 *_bcm_pack_switch_pkt_info(uint8 *, bcm_switch_pkt_info_t *);
extern uint8 *_bcm_unpack_switch_pkt_info(uint8 *, bcm_switch_pkt_info_t *);
extern uint8 *_bcm_pack_switch_profile_mapping(uint8 *, bcm_switch_profile_mapping_t *);
extern uint8 *_bcm_unpack_switch_profile_mapping(uint8 *, bcm_switch_profile_mapping_t *);
extern uint8 *_bcm_pack_switch_service_config(uint8 *, bcm_switch_service_config_t *);
extern uint8 *_bcm_unpack_switch_service_config(uint8 *, bcm_switch_service_config_t *);
#ifdef	INCLUDE_CES
extern uint8 *_bcm_pack_tdm_port_config(uint8 *, bcm_tdm_port_config_t *);
extern uint8 *_bcm_unpack_tdm_port_config(uint8 *, bcm_tdm_port_config_t *);
#endif	/* INCLUDE_CES */
extern uint8 *_bcm_pack_time_capture(uint8 *, bcm_time_capture_t *);
extern uint8 *_bcm_unpack_time_capture(uint8 *, bcm_time_capture_t *);
extern uint8 *_bcm_pack_time_interface(uint8 *, bcm_time_interface_t *);
extern uint8 *_bcm_unpack_time_interface(uint8 *, bcm_time_interface_t *);
#ifdef	INCLUDE_L3
extern uint8 *_bcm_pack_trill_multicast_adjacency(uint8 *, bcm_trill_multicast_adjacency_t *);
extern uint8 *_bcm_unpack_trill_multicast_adjacency(uint8 *, bcm_trill_multicast_adjacency_t *);
extern uint8 *_bcm_pack_trill_multicast_entry(uint8 *, bcm_trill_multicast_entry_t *);
extern uint8 *_bcm_unpack_trill_multicast_entry(uint8 *, bcm_trill_multicast_entry_t *);
extern uint8 *_bcm_pack_trill_port(uint8 *, bcm_trill_port_t *);
extern uint8 *_bcm_unpack_trill_port(uint8 *, bcm_trill_port_t *);
extern uint8 *_bcm_pack_trill_rbridge(uint8 *, bcm_trill_rbridge_t *);
extern uint8 *_bcm_unpack_trill_rbridge(uint8 *, bcm_trill_rbridge_t *);
extern uint8 *_bcm_pack_trill_vpn_config(uint8 *, bcm_trill_vpn_config_t *);
extern uint8 *_bcm_unpack_trill_vpn_config(uint8 *, bcm_trill_vpn_config_t *);
#endif	/* INCLUDE_L3 */
extern uint8 *_bcm_pack_trunk_chip_info(uint8 *, bcm_trunk_chip_info_t *);
extern uint8 *_bcm_unpack_trunk_chip_info(uint8 *, bcm_trunk_chip_info_t *);
extern uint8 *_bcm_pack_trunk_info(uint8 *, bcm_trunk_info_t *);
extern uint8 *_bcm_unpack_trunk_info(uint8 *, bcm_trunk_info_t *);
extern uint8 *_bcm_pack_trunk_member(uint8 *, bcm_trunk_member_t *);
extern uint8 *_bcm_unpack_trunk_member(uint8 *, bcm_trunk_member_t *);
extern uint8 *_bcm_pack_trunk_resilient_entry(uint8 *, bcm_trunk_resilient_entry_t *);
extern uint8 *_bcm_unpack_trunk_resilient_entry(uint8 *, bcm_trunk_resilient_entry_t *);
#ifdef	INCLUDE_L3
extern uint8 *_bcm_pack_tunnel_config(uint8 *, bcm_tunnel_config_t *);
extern uint8 *_bcm_unpack_tunnel_config(uint8 *, bcm_tunnel_config_t *);
extern uint8 *_bcm_pack_tunnel_dscp_map(uint8 *, bcm_tunnel_dscp_map_t *);
extern uint8 *_bcm_unpack_tunnel_dscp_map(uint8 *, bcm_tunnel_dscp_map_t *);
extern uint8 *_bcm_pack_tunnel_initiator(uint8 *, bcm_tunnel_initiator_t *);
extern uint8 *_bcm_unpack_tunnel_initiator(uint8 *, bcm_tunnel_initiator_t *);
extern uint8 *_bcm_pack_tunnel_terminator(uint8 *, bcm_tunnel_terminator_t *);
extern uint8 *_bcm_unpack_tunnel_terminator(uint8 *, bcm_tunnel_terminator_t *);
#endif	/* INCLUDE_L3 */
extern uint8 *_bcm_pack_udf_alloc_hints(uint8 *, bcm_udf_alloc_hints_t *);
extern uint8 *_bcm_unpack_udf_alloc_hints(uint8 *, bcm_udf_alloc_hints_t *);
extern uint8 *_bcm_pack_udf_pkt_format_info(uint8 *, bcm_udf_pkt_format_info_t *);
extern uint8 *_bcm_unpack_udf_pkt_format_info(uint8 *, bcm_udf_pkt_format_info_t *);
extern uint8 *_bcm_pack_udf(uint8 *, bcm_udf_t *);
extern uint8 *_bcm_unpack_udf(uint8 *, bcm_udf_t *);
extern uint8 *_bcm_pack_vlan_action_set(uint8 *, bcm_vlan_action_set_t *);
extern uint8 *_bcm_unpack_vlan_action_set(uint8 *, bcm_vlan_action_set_t *);
extern uint8 *_bcm_pack_vlan_block(uint8 *, bcm_vlan_block_t *);
extern uint8 *_bcm_unpack_vlan_block(uint8 *, bcm_vlan_block_t *);
extern uint8 *_bcm_pack_vlan_control_vlan(uint8 *, bcm_vlan_control_vlan_t *);
extern uint8 *_bcm_unpack_vlan_control_vlan(uint8 *, bcm_vlan_control_vlan_t *);
extern uint8 *_bcm_pack_vlan_gport_info(uint8 *, bcm_vlan_gport_info_t *);
extern uint8 *_bcm_unpack_vlan_gport_info(uint8 *, bcm_vlan_gport_info_t *);
extern uint8 *_bcm_pack_vlan_ip(uint8 *, bcm_vlan_ip_t *);
extern uint8 *_bcm_unpack_vlan_ip(uint8 *, bcm_vlan_ip_t *);
extern uint8 *_bcm_pack_vlan_port(uint8 *, bcm_vlan_port_t *);
extern uint8 *_bcm_unpack_vlan_port(uint8 *, bcm_vlan_port_t *);
extern uint8 *_bcm_pack_vlan_port_translation(uint8 *, bcm_vlan_port_translation_t *);
extern uint8 *_bcm_unpack_vlan_port_translation(uint8 *, bcm_vlan_port_translation_t *);
extern uint8 *_bcm_pack_vlan_translate_action_class(uint8 *, bcm_vlan_translate_action_class_t *);
extern uint8 *_bcm_unpack_vlan_translate_action_class(uint8 *, bcm_vlan_translate_action_class_t *);
extern uint8 *_bcm_pack_vlan_vector(uint8 *, bcm_vlan_vector_t);
extern uint8 *_bcm_unpack_vlan_vector(uint8 *, bcm_vlan_vector_t);
extern uint8 *_bcm_pack_vswitch_cross_connect(uint8 *, bcm_vswitch_cross_connect_t *);
extern uint8 *_bcm_unpack_vswitch_cross_connect(uint8 *, bcm_vswitch_cross_connect_t *);
#ifdef	INCLUDE_L3
extern uint8 *_bcm_pack_vxlan_port(uint8 *, bcm_vxlan_port_t *);
extern uint8 *_bcm_unpack_vxlan_port(uint8 *, bcm_vxlan_port_t *);
extern uint8 *_bcm_pack_vxlan_vpn_config(uint8 *, bcm_vxlan_vpn_config_t *);
extern uint8 *_bcm_unpack_vxlan_vpn_config(uint8 *, bcm_vxlan_vpn_config_t *);
extern uint8 *_bcm_pack_wlan_client(uint8 *, bcm_wlan_client_t *);
extern uint8 *_bcm_unpack_wlan_client(uint8 *, bcm_wlan_client_t *);
extern uint8 *_bcm_pack_wlan_port(uint8 *, bcm_wlan_port_t *);
extern uint8 *_bcm_unpack_wlan_port(uint8 *, bcm_wlan_port_t *);
#endif	/* INCLUDE_L3 */
extern uint8 *_bcm_pack_int_aBCM_COS_COUNT(uint8 *, int *);
extern uint8 *_bcm_unpack_int_aBCM_COS_COUNT(uint8 *, int *);
extern uint8 *_bcm_pack_int_aBCM_TRUNK_MAX_PORTCNT(uint8 *, int *);
extern uint8 *_bcm_unpack_int_aBCM_TRUNK_MAX_PORTCNT(uint8 *, int *);
extern uint8 *_bcm_pack_uint32_aBCM_CES_SLOT_MAX(uint8 *, uint32 *);
extern uint8 *_bcm_unpack_uint32_aBCM_CES_SLOT_MAX(uint8 *, uint32 *);
extern uint8 *_bcm_pack_uint64(uint8 *, uint64 *);
extern uint8 *_bcm_unpack_uint64(uint8 *, uint64 *);

#endif	/* BCM_RPC_SUPPORT */

#endif	/* !_BCM_INT_RPC_PACK_H */

/*
 * $Id: 2dca612d749e8dd65979ec3b116d8b06ed8a2f80 $
 * 
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef __BCMX_TRILL_H__
#define __BCMX_TRILL_H__

#if defined(INCLUDE_L3)

#include <bcm/types.h>
#include <bcmx/bcmx.h>
#include <bcm/trill.h>

/* TRILL Port structure. */
typedef bcm_trill_port_t bcmx_trill_port_t;

/* TRILL Multicast Entry structure. */
typedef bcm_trill_multicast_entry_t bcmx_trill_multicast_entry_t;

/* Initialize the TRILL Port structure. */
extern void bcmx_trill_port_t_init(
    bcmx_trill_port_t *trill_port);

/* Initialize the TRILL Multicast Entry structure. */
extern void bcmx_trill_multicast_entry_t_init(
    bcm_trill_multicast_entry_t *trill_multicast_entry);

/* Initialize TRILL module. */
extern int bcmx_trill_init(void);

/* Detach TRILL module. */
extern int bcmx_trill_cleanup(void);

/* Add Trill port to TRILL Cloud. */
extern int bcmx_trill_port_add(
    bcmx_trill_port_t *trill_port);

/* Delete Trill port from TRILL Cloud. */
extern int bcmx_trill_port_delete(
    bcm_gport_t trill_port_id);

/* Delete all Trill ports from TRILL Cloud. */
extern int bcmx_trill_port_delete_all(void);

/* Get a TRILL port */
extern int bcmx_trill_port_get(
    bcmx_trill_port_t *trill_port);

/* Get all TRILL ports */
extern int bcmx_trill_port_get_all(
    int port_max, 
    bcmx_trill_port_t *port_array, 
    int *port_count);

/* Add TRILL multicast entry */
extern int bcmx_trill_multicast_entry_add(
    bcm_trill_multicast_entry_t *trill_mc_entry);

/* Delete TRILL multicast entry */
extern int bcmx_trill_multicast_entry_delete(
    bcm_trill_multicast_entry_t *trill_mc_entry);

/* Delete all TRILL multicast entries */
extern int bcmx_trill_multicast_delete_all(
    bcm_trill_name_t root_name);

/* Get TRILL multicast entry */
extern int bcmx_trill_multicast_entry_get(
    bcm_trill_multicast_entry_t *trill_mc_entry);

/* Add TRILL multicast RPF entry */
extern int bcmx_trill_multicast_source_add(
    bcm_trill_name_t root_name, 
    bcm_trill_name_t source_rbridge_name, 
    bcm_gport_t port, 
    bcm_if_t encap_intf);

/* Delete TRILL multicast RPF entry */
extern int bcmx_trill_multicast_source_delete(
    bcm_trill_name_t root_name, 
    bcm_trill_name_t source_rbridge_name, 
    bcm_gport_t port, 
    bcm_if_t encap_intf);

/* Get TRILL Multicast RPF entry */
extern int bcmx_trill_multicast_source_get(
    bcm_trill_name_t root_name, 
    bcm_trill_name_t source_rbridge_name, 
    bcm_gport_t *port);

/* bcm_trill_stat_get */
extern int bcmx_trill_stat_get(
    bcm_gport_t port, 
    bcm_trill_stat_t stat, 
    uint64 *val);

/* bcm_trill_stat_get32 */
extern int bcmx_trill_stat_get32(
    bcm_gport_t port, 
    bcm_trill_stat_t stat, 
    uint32 *val);

/* bcm_trill_stat_clear */
extern int bcmx_trill_stat_clear(
    bcm_gport_t port, 
    bcm_trill_stat_t stat);

#endif /* defined(INCLUDE_L3) */

#endif /* __BCMX_TRILL_H__ */

/*
 * $Id: 14487a19499acd9f0f08ee421f034dbea263b3bc $
 * 
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef __BCMX_MCAST_H__
#define __BCMX_MCAST_H__

#include <bcm/types.h>
#include <bcmx/bcmx.h>
#include <bcmx/lplist.h>
#include <bcm/mcast.h>

/* Device-independent L2 multicast address. */
typedef struct bcmx_mcast_addr_s {
    bcm_mac_t mac;              /* 802.3 MAC address. */
    bcm_vlan_t vid;             /* VLAN identifier. */
    bcm_cos_t cos_dst;          /* COS based on destination address. */
    bcmx_lplist_t ports;        /* Port list. */
    bcmx_lplist_t untag_ports;  /* Untagged port bitmap. */
    uint32 l2mc_index;          /* XGS: L2MC index. */
} bcmx_mcast_addr_t;

/* Initialize bcmx_mcast_addr_t and allocate port lists. */
extern void bcmx_mcast_addr_t_init(
    bcmx_mcast_addr_t *mcaddr, 
    bcm_mac_t mac, 
    bcm_vlan_t vid);

/* Backward compatibility. */
#define bcmx_mcast_addr_init    bcmx_mcast_addr_t_init 

/* Deallocate port lists in bcmx_mcast_addr_t. */
extern void bcmx_mcast_addr_t_free(
    bcmx_mcast_addr_t *mcaddr);

/* Backward compatibility. */
#define bcmx_mcast_addr_free    bcmx_mcast_addr_t_free 

/* Initialize the L2 multicast module. */
extern int bcmx_mcast_init(void);

/* Add/Remove an entry in the multicast table. */
extern int bcmx_mcast_addr_add(
    bcmx_mcast_addr_t *mcaddr);

/* Add/Remove an entry in the multicast table. */
extern int bcmx_mcast_addr_remove(
    bcm_mac_t mac, 
    bcm_vlan_t vid);

/* 
 * Get untagged and tagged membership port bit maps for a Multicast
 * group.
 */
extern int bcmx_mcast_port_get(
    bcm_mac_t mac, 
    bcm_vlan_t vid, 
    bcmx_mcast_addr_t *mcaddr);

/* Add a given port to the membership of a given multicast group. */
extern int bcmx_mcast_join(
    bcm_mac_t mac, 
    bcm_vlan_t vid, 
    bcmx_lport_t port, 
    bcmx_mcast_addr_t *mcaddr, 
    bcmx_lplist_t *allrtr);

/* Remove a given port from the membership of a given multicast group. */
extern int bcmx_mcast_leave(
    bcm_mac_t mac, 
    bcm_vlan_t vid, 
    bcmx_lport_t port);

/* Add/Remove ports to/from an existing entry in the multicast table. */
extern int bcmx_mcast_port_remove(
    bcmx_mcast_addr_t *mcaddr);

/* Add/Remove ports to/from an existing entry in the multicast table. */
extern int bcmx_mcast_port_add(
    bcmx_mcast_addr_t *mcaddr);

#endif /* __BCMX_MCAST_H__ */

/*
 * $Id: d2186c69d8534395030338c62d396ff83e10b21b $
 * 
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef __BCM_TX_H__
#define __BCM_TX_H__

#include <bcm/pkt.h>

/* Setup a packet for default transmit on the given unit. */
typedef int (*bcm_tx_pkt_setup_f)(
    int unit, 
    bcm_pkt_t *tx_pkt);

/* Function prototype to send out a packet. */
typedef int (*bcm_tx_f)(
    int unit, 
    bcm_pkt_t *tx_pkt, 
    void *cookie);

/* Function prototype to send out an array of packets. */
typedef int (*bcm_tx_array_f)(
    int unit, 
    bcm_pkt_t **pkt_array, 
    int count, 
    bcm_pkt_cb_f all_done_cb, 
    void *cookie);

/* Function prototype to send out a list of packets. */
typedef int (*bcm_tx_list_f)(
    int unit, 
    bcm_pkt_t *pkt_list, 
    bcm_pkt_cb_f all_done_cb, 
    void *cookie);

#ifndef BCM_HIDE_DISPATCHABLE

/* Initialize the BCM TX software module. */
extern int bcm_tx_init(
    int unit);

/* Transmit one or more packets. */
extern int bcm_tx(
    int unit, 
    bcm_pkt_t *tx_pkt, 
    void *cookie);

/* Transmit one or more packets. */
extern int bcm_tx_array(
    int unit, 
    bcm_pkt_t **pkt, 
    int count, 
    bcm_pkt_cb_f all_done_cb, 
    void *cookie);

/* Transmit one or more packets. */
extern int bcm_tx_list(
    int unit, 
    bcm_pkt_t *pkt, 
    bcm_pkt_cb_f all_done_cb, 
    void *cookie);

/* Set up a packet for transmit. */
extern int bcm_tx_pkt_setup(
    int unit, 
    bcm_pkt_t *tx_pkt);

/* 
 * Update a packet based on a look up of the Layer 2 Forwarding Database
 * (deprecated, unimplemented).
 */
extern int bcm_tx_pkt_l2_map(
    int unit, 
    bcm_pkt_t *pkt, 
    bcm_mac_t dest_mac, 
    int vid);

#endif /* BCM_HIDE_DISPATCHABLE */

/* 
 * TX Tunneling:
 * 
 * This is the prototype to forward a packet to a remote CPU for transmit
 * on a remote device. A function of this type may be registered with BCM
 * TX to allow automatic forwarding to remote unit numbers.
 */
#if defined(BCM_RPC_SUPPORT)
typedef int (*bcm_tx_cpu_tunnel_f)(
    bcm_pkt_t *pkt, 
    int dest_unit, 
    int remote_port, 
    uint32 flags, 
    bcm_cpu_tunnel_mode_t mode);
#endif

#if defined(BCM_RPC_SUPPORT)
/* Encapsulate and forward a packet to a different CPU. */
extern int bcm_tx_cpu_tunnel_get(
    bcm_tx_cpu_tunnel_f *f);
#endif

#if defined(BCM_RPC_SUPPORT)
/* Encapsulate and forward a packet to a different CPU. */
extern int bcm_tx_cpu_tunnel_set(
    bcm_tx_cpu_tunnel_f f);
#endif

#if defined(BCM_RPC_SUPPORT)
/* Encapsulate and forward a packet to a different CPU. */
extern int bcm_tx_cpu_tunnel(
    bcm_pkt_t *pkt, 
    int dest_unit, 
    int remote_port, 
    uint32 flags, 
    bcm_cpu_tunnel_mode_t mode);
#endif

#if defined(BCM_RPC_SUPPORT)
/* DEPRECATED:  bcm_tx_tunnel. Use bcm_tx_cpu_tunnel */
#define bcm_tx_tunnel           bcm_tx_cpu_tunnel 
#endif

#ifndef BCM_HIDE_DISPATCHABLE

#if defined(BROADCOM_DEBUG)
/* bcm_tx_dv_dump */
extern int bcm_tx_dv_dump(
    int unit, 
    void *dv_p);
#endif

#if defined(BROADCOM_DEBUG)
/* bcm_tx_show */
extern int bcm_tx_show(
    int unit);
#endif

#endif /* BCM_HIDE_DISPATCHABLE */

#endif /* __BCM_TX_H__ */

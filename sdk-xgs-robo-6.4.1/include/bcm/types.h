/*
 * $Id: 06e94b2bfa6da026401933d803f4522ece7f7b11 $
 * 
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef __BCM_TYPES_H__
#define __BCM_TYPES_H__

#include <sal/types.h>
#include <shared/bitop.h>
#include <shared/pbmp.h>
#include <shared/types.h>
#include <shared/util.h>
#include <shared/gport.h>
#include <shared/cosq.h>
#include <shared/mpls.h>
#include <shared/l3.h>

/* IP constants. */
#define BCM_IP4_ADDRLEN         (_SHR_L3_IP_ADDRLEN) 
#define BCM_IP6_ADDRLEN         (_SHR_L3_IP6_ADDRLEN) 

/* bcm_multicast_t */
typedef int bcm_multicast_t;

#if !defined(BCM_LOCAL_UNITS_MAX)
#define BCM_LOCAL_UNITS_MAX     18         
#endif

#define BCM_MAX_NUM_UNITS       BCM_LOCAL_UNITS_MAX 

#if !defined(BCM_UNITS_MAX)
#define BCM_UNITS_MAX           128        
#endif

#define BCM_PBMP_PORT_MAX       _SHR_PBMP_PORT_MAX 

#define BCM_PBMP_CLEAR(pbm)     _SHR_PBMP_CLEAR(pbm) 
#define BCM_PBMP_MEMBER(bmp, port)  _SHR_PBMP_MEMBER((bmp), (port)) 
#define BCM_PBMP_ITER(bmp, port)  _SHR_PBMP_ITER((bmp), (port)) 
#define BCM_PBMP_COUNT(pbm, count)  _SHR_PBMP_COUNT(pbm, count) 

#define BCM_PBMP_IS_NULL(pbm)   _SHR_PBMP_IS_NULL(pbm) 
#define BCM_PBMP_NOT_NULL(pbm)  _SHR_PBMP_NOT_NULL(pbm) 
#define BCM_PBMP_EQ(pbm_a, pbm_b)  _SHR_PBMP_EQ(pbm_a, pbm_b) 
#define BCM_PBMP_NEQ(pbm_a, pbm_b)  _SHR_PBMP_NEQ(pbm_a, pbm_b) 

/* Assignment operators */
#define BCM_PBMP_ASSIGN(dst, src)  _SHR_PBMP_ASSIGN(dst, src) 
#define BCM_PBMP_AND(pbm_a, pbm_b)  _SHR_PBMP_AND(pbm_a, pbm_b) 
#define BCM_PBMP_OR(pbm_a, pbm_b)  _SHR_PBMP_OR(pbm_a, pbm_b) 
#define BCM_PBMP_XOR(pbm_a, pbm_b)  _SHR_PBMP_XOR(pbm_a, pbm_b) 
#define BCM_PBMP_REMOVE(pbm_a, pbm_b)  _SHR_PBMP_REMOVE(pbm_a, pbm_b) 
#define BCM_PBMP_NEGATE(pbm_a, pbm_b)  _SHR_PBMP_NEGATE(pbm_a, pbm_b) 

/* Port PBMP operators */
#define BCM_PBMP_PORT_SET(pbm, port)  _SHR_PBMP_PORT_SET(pbm, port) 
#define BCM_PBMP_PORT_ADD(pbm, port)  _SHR_PBMP_PORT_ADD(pbm, port) 
#define BCM_PBMP_PORT_REMOVE(pbm, port)  _SHR_PBMP_PORT_REMOVE(pbm, port) 
#define BCM_PBMP_PORT_FLIP(pbm, port)  _SHR_PBMP_PORT_FLIP(pbm, port) 

/* Set the default tag protocol ID (TPID) for the specified port. */
typedef int bcm_port_t;

/* bcm_pbmp_t */
typedef _shr_pbmp_t bcm_pbmp_t;

/* bcm_mac_t */
typedef uint8 bcm_mac_t[6];

#define BCM_MAC_IS_MCAST(_mac_)  \
    (_mac_[0] & 0x1) 

#define BCM_MAC_IS_ZERO(_mac_)  \
    (((_mac_)[0] | (_mac_)[1] | (_mac_)[2] | \
      (_mac_)[3] | (_mac_)[4] | (_mac_)[5]) == 0) 

/* bcm_ip_t */
typedef uint32 bcm_ip_t;

/* bcm_ip6_t */
typedef uint8 bcm_ip6_t[16];

/* bcm_if_t */
typedef int bcm_if_t;

/* bcm_trill_name_t */
typedef int bcm_trill_name_t;

#define BCM_IF_INVALID          0xffffffff 

/* bcm_l4_port_t */
typedef int bcm_l4_port_t;

/* bcm_if_group_t */
typedef int bcm_if_group_t;

/* bcm_vrf_t */
typedef int bcm_vrf_t;

/* bcm_mpls_label_t */
typedef uint32 bcm_mpls_label_t;

/* bcm_l3_nat_id_t */
typedef uint32 bcm_l3_nat_id_t;

#define BCM_MPLS_LABEL_INVALID  0xffffffff 

#define BCM_VLAN_NONE           ((bcm_vlan_t)0x0000) 
#define BCM_VLAN_ALL            ((bcm_vlan_t)0xffff) 
#define BCM_VLAN_DEFAULT        ((bcm_vlan_t)0x0001) 
#define BCM_VLAN_INVALID        ((bcm_vlan_t)0x1000) 

#define BCM_VLAN_VALID(id)      \
    ((id) >= BCM_VLAN_DEFAULT && \
     (id) < BCM_VLAN_INVALID) 

#define BCM_VLAN_CTRL(prio, cfi, id)  \
    (((prio) & 0x007) << 13 | \
     ((cfi ) & 0x001) << 12 | \
     ((id  ) & 0xfff) << 0) 

#define BCM_VLAN_CTRL_PRIO(c)   ((c) >> 13 & 0x007) 
#define BCM_VLAN_CTRL_CFI(c)    ((c) >> 12 & 0x001) 
#define BCM_VLAN_CTRL_ID(c)     ((c) >>  0 & 0xfff) 

/* bcm_vlan_t */
typedef uint16 bcm_vlan_t;

/* bcm_ethertype_t */
typedef uint16 bcm_ethertype_t;

/* bcm_vpn_t */
typedef bcm_vlan_t bcm_vpn_t;

/* bcm_mim_vpn_t */
typedef bcm_vlan_t bcm_mim_vpn_t;

/* bcm_policer_t */
typedef int bcm_policer_t;

/* bcm_vlan_tag_t */
typedef uint32 bcm_vlan_tag_t;

/* bcm_tunnel_id_t */
typedef uint32 bcm_tunnel_id_t;

#define BCM_VLAN_MIN            0          
#define BCM_VLAN_MAX            4095       
#define BCM_VLAN_COUNT          (BCM_VLAN_MAX - BCM_VLAN_MIN + 1) 
#define BCM_VLAN_UNTAG          0xfff      

#define _BCM_MAX_VLANS          BCM_VLAN_COUNT /* For backward compatibility */

/* bcm_vlan_vector_t */
typedef uint32 bcm_vlan_vector_t[_SHR_BITDCLSIZE(BCM_VLAN_COUNT)];

#define BCM_VLAN_VEC_GET(vec, n)  SHR_BITGET(vec, n) 
#define BCM_VLAN_VEC_SET(vec, n)  SHR_BITSET(vec, n) 
#define BCM_VLAN_VEC_CLR(vec, n)  SHR_BITCLR(vec, n) 
#define BCM_VLAN_VEC_ZERO(vec)  \
    sal_memset(vec, 0, \
                    SHR_BITALLOCSIZE(BCM_VLAN_COUNT)) 

/* bcm_cos_t */
typedef int bcm_cos_t;

/* bcm_cos_queue_t */
typedef int bcm_cos_queue_t;

#define BCM_COS_MIN             0          
#define BCM_COS_MAX             7          
#define BCM_COS_COUNT           8          
#define BCM_COS_DEFAULT         4          
#define BCM_COS_INVALID         -1         

#define BCM_PRIO_MIN            0          
#define BCM_PRIO_MAX            7          
#define BCM_PRIO_RED            0x100      
#define BCM_PRIO_YELLOW         0x200      
#define BCM_PRIO_DROP_FIRST     BCM_PRIO_RED 
#define BCM_PRIO_MASK           0xff       
#define BCM_PRIO_GREEN          0x400      
#define BCM_PRIO_DROP_LAST      0x800      
#define BCM_PRIO_PRESERVE       BCM_PRIO_DROP_LAST 
#define BCM_PRIO_STAG           0x100      
#define BCM_PRIO_CTAG           0x200      
#define BCM_DSCP_ECN            0x100      
#define BCM_PRIO_BLACK          0x1000     

/* bcm_module_t */
typedef int bcm_module_t;

#define BCM_MODID_INVALID       ((bcm_module_t) -1) 

#define BCM_TRUNK_INVALID       ((bcm_trunk_t) -1) 

/* bcm_trunk_t */
typedef int bcm_trunk_t;

/* 
 * GPORT (generic port) definitions.
 * See shared/gport.h for more details.
 */
typedef int bcm_gport_t;

/* System-wide port types */
#define BCM_GPORT_TYPE_NONE                 _SHR_GPORT_NONE 
#define BCM_GPORT_INVALID                   _SHR_GPORT_INVALID 
#define BCM_GPORT_TYPE_LOCAL                _SHR_GPORT_TYPE_LOCAL 
#define BCM_GPORT_TYPE_MODPORT              _SHR_GPORT_TYPE_MODPORT 
#define BCM_GPORT_TYPE_TRUNK                _SHR_GPORT_TYPE_TRUNK 
#define BCM_GPORT_TYPE_BLACK_HOLE           _SHR_GPORT_TYPE_BLACK_HOLE 
#define BCM_GPORT_TYPE_LOCAL_CPU            _SHR_GPORT_TYPE_LOCAL_CPU 
#define BCM_GPORT_MPLS_PORT                 _SHR_GPORT_TYPE_MPLS_PORT 
#define BCM_GPORT_SUBPORT_GROUP             _SHR_GPORT_TYPE_SUBPORT_GROUP 
#define BCM_GPORT_SUBPORT_PORT              _SHR_GPORT_TYPE_SUBPORT_PORT 
#define BCM_GPORT_TYPE_UCAST_QUEUE_GROUP    _SHR_GPORT_TYPE_UCAST_QUEUE_GROUP 
#define BCM_GPORT_TYPE_DESTMOD_QUEUE_GROUP  _SHR_GPORT_TYPE_DESTMOD_QUEUE_GROUP 
#define BCM_GPORT_TYPE_MCAST                _SHR_GPORT_TYPE_MCAST 
#define BCM_GPORT_TYPE_MCAST_QUEUE_GROUP    _SHR_GPORT_TYPE_MCAST_QUEUE_GROUP 
#define BCM_GPORT_TYPE_SCHEDULER            _SHR_GPORT_TYPE_SCHEDULER 
#define BCM_GPORT_TYPE_SPECIAL              _SHR_GPORT_TYPE_SPECIAL 
#define BCM_GPORT_TYPE_MIRROR               _SHR_GPORT_TYPE_MIRROR 
#define BCM_GPORT_MIM_PORT                  _SHR_GPORT_TYPE_MIM_PORT 
#define BCM_GPORT_VLAN_PORT                 _SHR_GPORT_TYPE_VLAN_PORT 
#define BCM_GPORT_WLAN_PORT                 _SHR_GPORT_TYPE_WLAN_PORT 
#define BCM_GPORT_TRILL_PORT                _SHR_GPORT_TYPE_TRILL_PORT 
#define BCM_GPORT_NIV_PORT                  _SHR_GPORT_TYPE_NIV_PORT 
#define BCM_GPORT_L2GRE_PORT                _SHR_GPORT_TYPE_L2GRE_PORT 
#define BCM_GPORT_VXLAN_PORT                _SHR_GPORT_TYPE_VXLAN_PORT 
#define BCM_GPORT_EXTENDER_PORT             _SHR_GPORT_TYPE_EXTENDER_PORT 
#define BCM_EXTENDER_GPORT_TYPE_PORT        _SHR_EXTENDER_GPORT_TYPE_PORT 
#define BCM_EXTENDER_GPORT_TYPE_FORWARD     _SHR_EXTENDER_GPORT_TYPE_FORWARD 
#define BCM_EXTENDER_GPORT_TYPE_ENCAP       _SHR_EXTENDER_GPORT_TYPE_ENCAP 
#define BCM_GPORT_MAC_PORT                  _SHR_GPORT_TYPE_MAC_PORT 
#define BCM_GPORT_TYPE_TUNNEL               _SHR_GPORT_TYPE_TUNNEL 
#define BCM_GPORT_TYPE_CHILD                _SHR_GPORT_TYPE_CHILD 
#define BCM_GPORT_TYPE_EGRESS_GROUP         _SHR_GPORT_TYPE_EGRESS_GROUP 
#define BCM_GPORT_TYPE_EGRESS_CHILD         _SHR_GPORT_TYPE_EGRESS_CHILD 
#define BCM_GPORT_TYPE_EGRESS_MODPORT       _SHR_GPORT_TYPE_EGRESS_MODPORT 
#define BCM_GPORT_TYPE_UCAST_SUBSCRIBER_QUEUE_GROUP _SHR_GPORT_TYPE_UCAST_SUBSCRIBER_QUEUE_GROUP 
#define BCM_GPORT_TYPE_MCAST_SUBSCRIBER_QUEUE_GROUP _SHR_GPORT_TYPE_MCAST_SUBSCRIBER_QUEUE_GROUP 
#define BCM_GPORT_TYPE_CONGESTION           _SHR_GPORT_TYPE_CONGESTION 
#define BCM_GPORT_TYPE_SYSTEM_PORT          _SHR_GPORT_TYPE_SYSTEM_PORT 
#define BCM_GPORT_TYPE_COSQ                 _SHR_GPORT_TYPE_COSQ 
#define BCM_COSQ_GPORT_TYPE_VOQ_CONNECTOR   _SHR_COSQ_GPORT_TYPE_VOQ_CONNECTOR 
#define BCM_COSQ_GPORT_TYPE_COMPOSITE_SF2   _SHR_COSQ_GPORT_TYPE_COMPOSITE_SF2 
#define BCM_COSQ_GPORT_TYPE_UCAST_EGRESS_QUEUE _SHR_COSQ_GPORT_TYPE_UCAST_EGRESS_QUEUE 
#define BCM_COSQ_GPORT_TYPE_MCAST_EGRESS_QUEUE _SHR_COSQ_GPORT_TYPE_MCAST_EGRESS_QUEUE 
#define BCM_COSQ_GPORT_TYPE_VSQ             _SHR_COSQ_GPORT_TYPE_VSQ 
#define BCM_COSQ_GPORT_TYPE_E2E_PORT        _SHR_COSQ_GPORT_TYPE_E2E_PORT 
#define BCM_COSQ_GPORT_TYPE_ISQ             _SHR_COSQ_GPORT_TYPE_ISQ 
#define BCM_COSQ_GPORT_TYPE_MULTIPATH       _SHR_COSQ_GPORT_TYPE_MULTIPATH 
#define BCM_COSQ_GPORT_TYPE_SCHED_CIR       _SHR_COSQ_GPORT_TYPE_SCHED_CIR 
#define BCM_COSQ_GPORT_TYPE_SCHED_PIR       _SHR_COSQ_GPORT_TYPE_SCHED_PIR 
#define BCM_COSQ_GPORT_TYPE_PORT_TC         _SHR_COSQ_GPORT_TYPE_PORT_TC 
#define BCM_COSQ_GPORT_TYPE_PORT_TCG        _SHR_COSQ_GPORT_TYPE_PORT_TCG 
#define BCM_COSQ_GPORT_TYPE_E2E_PORT_TC     _SHR_COSQ_GPORT_TYPE_E2E_PORT_TC 
#define BCM_COSQ_GPORT_TYPE_E2E_PORT_TCG    _SHR_COSQ_GPORT_TYPE_E2E_PORT_TCG 
#define BCM_COSQ_GPORT_TYPE_SYSTEM_RED      _SHR_COSQ_GPORT_TYPE_SYSTEM_RED 
#define BCM_COSQ_GPORT_TYPE_FABRIC          _SHR_COSQ_GPORT_TYPE_FABRIC 
#define BCM_GPORT_TYPE_EPON_LINK            _SHR_GPORT_TYPE_EPON_LINK 
#define BCM_GPORT_TYPE_PHY                  _SHR_GPORT_TYPE_PHY 
#define BCM_PHY_GPORT_TYPE_LANE_PORT        _SHR_PHY_GPORT_TYPE_LANE_PORT 
#define BCM_PHY_GPORT_TYPE_PHYN_PORT        _SHR_PHY_GPORT_TYPE_PHYN_PORT 
#define BCM_PHY_GPORT_TYPE_PHYN_LANE_PORT   _SHR_PHY_GPORT_TYPE_PHYN_LANE_PORT 
#define BCM_PHY_GPORT_TYPE_PHYN_SYS_SIDE_PORT _SHR_PHY_GPORT_TYPE_PHYN_SYS_SIDE_PORT 
#define BCM_PHY_GPORT_TYPE_PHYN_SYS_SIDE_LANE_PORT _SHR_PHY_GPORT_TYPE_PHYN_SYS_SIDE_LANE_PORT 
#define BCM_GPORT_TYPE_PROXY                _SHR_GPORT_TYPE_PROXY 
#define BCM_GPORT_TYPE_FORWARD_PORT         _SHR_GPORT_TYPE_FORWARD_PORT 
#define BCM_GPORT_TYPE_VP_GROUP             _SHR_GPORT_TYPE_VP_GROUP 
#define BCM_COSQ_GPORT_TYPE_SRC_QUEUE       _SHR_COSQ_GPORT_TYPE_SRC_QUEUE 
#define BCM_COSQ_GPORT_TYPE_DST_QUEUE       _SHR_COSQ_GPORT_TYPE_DST_QUEUE 
#define BCM_GPORT_TYPE_PROFILE              _SHR_GPORT_TYPE_PROFILE 

#define BCM_GPORT_IS_SET(_gport)            _SHR_GPORT_IS_SET(_gport) 
#define BCM_GPORT_IS_LOCAL(_gport)          _SHR_GPORT_IS_LOCAL(_gport) 
#define BCM_GPORT_IS_MODPORT(_gport)        _SHR_GPORT_IS_MODPORT(_gport) 
#define BCM_GPORT_IS_TRUNK(_gport)          _SHR_GPORT_IS_TRUNK(_gport) 
#define BCM_GPORT_IS_UCAST_QUEUE_GROUP(_gport)  _SHR_GPORT_IS_UCAST_QUEUE_GROUP(_gport) 
#define BCM_GPORT_IS_DESTMOD_QUEUE_GROUP(_gport)  _SHR_GPORT_IS_DESTMOD_QUEUE_GROUP(_gport) 
#define BCM_GPORT_IS_UCAST_SUBSCRIBER_QUEUE_GROUP(_gport)  _SHR_GPORT_IS_UCAST_SUBSCRIBER_QUEUE_GROUP(_gport) 
#define BCM_GPORT_IS_MCAST(_gport)          _SHR_GPORT_IS_MCAST(_gport) 
#define BCM_GPORT_IS_MCAST_QUEUE_GROUP(_gport)  _SHR_GPORT_IS_MCAST_QUEUE_GROUP(_gport) 
#define BCM_GPORT_IS_MCAST_SUBSCRIBER_QUEUE_GROUP(_gport)  _SHR_GPORT_IS_MCAST_SUBSCRIBER_QUEUE_GROUP(_gport) 
#define BCM_GPORT_IS_BLACK_HOLE(_gport)     _SHR_GPORT_IS_BLACK_HOLE(_gport) 
#define BCM_GPORT_IS_LOCAL_CPU(_gport)      _SHR_GPORT_IS_LOCAL_CPU(_gport) 
#define BCM_GPORT_IS_MPLS_PORT(_gport)      _SHR_GPORT_IS_MPLS_PORT(_gport) 
#define BCM_GPORT_IS_SUBPORT_GROUP(_gport)  _SHR_GPORT_IS_SUBPORT_GROUP(_gport) 
#define BCM_GPORT_IS_SUBPORT_PORT(_gport)   _SHR_GPORT_IS_SUBPORT_PORT(_gport) 
#define BCM_GPORT_IS_SCHEDULER(_gport)      _SHR_GPORT_IS_SCHEDULER(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS(_gport)    _SHR_GPORT_IS_FABRIC_CLOS(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_UNICAST_LOCAL(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_UNICAST_LOCAL(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_UNICAST_LOCAL_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_UNICAST_LOCAL_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_UNICAST_LOCAL_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_UNICAST_LOCAL_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_FABRIC(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_FABRIC(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_FABRIC_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_FABRIC_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_FABRIC_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_FABRIC_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_FMQ_GUARANTEED(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_FMQ_GUARANTEED(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_FMQ_BESTEFFORT(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_FMQ_BESTEFFORT(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_LOCAL(_gport)  _SHR_GPORT_IS_FABRIC_MESH_LOCAL(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV1(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV1(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV2(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV2(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV3(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV3(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV4(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV4(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV5(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV5(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV6(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV6(_gport) 
#define BCM_GPORT_IS_EPON_LINK(_gport)      _SHR_GPORT_IS_EPON_LINK(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV7(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV7(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH(_gport)    _SHR_GPORT_IS_FABRIC_MESH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_COMMON_LOCAL0(_gport)  _SHR_GPORT_IS_FABRIC_MESH_COMMON_LOCAL0(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_COMMON_LOCAL1(_gport)  _SHR_GPORT_IS_FABRIC_MESH_COMMON_LOCAL1(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_COMMON_DEV1(_gport)  _SHR_GPORT_IS_FABRIC_MESH_COMMON_DEV1(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_COMMON_DEV2(_gport)  _SHR_GPORT_IS_FABRIC_MESH_COMMON_DEV2(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_COMMON_DEV3(_gport)  _SHR_GPORT_IS_FABRIC_MESH_COMMON_DEV3(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_COMMON_MC(_gport)  _SHR_GPORT_IS_FABRIC_MESH_COMMON_MC(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_COMMON_LOCAL0(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_COMMON_LOCAL0(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_COMMON_LOCAL1(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_COMMON_LOCAL1(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_COMMON_FABRIC(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_COMMON_FABRIC(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_COMMON_UNICAST_FABRIC(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_COMMON_UNICAST_FABRIC(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_COMMON_MULTICAST_FABRIC(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_COMMON_MULTICAST_FABRIC(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_LOCAL0_OCB_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_LOCAL0_OCB_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_LOCAL0_OCB_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_LOCAL0_OCB_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_LOCAL0_MIX_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_LOCAL0_MIX_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_LOCAL0_MIX_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_LOCAL0_MIX_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_LOCAL1_OCB_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_LOCAL1_OCB_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_LOCAL1_OCB_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_LOCAL1_OCB_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_LOCAL1_MIX_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_LOCAL1_MIX_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_LOCAL1_MIX_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_LOCAL1_MIX_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV1_OCB_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV1_OCB_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV1_OCB_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV1_OCB_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV1_MIX_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV1_MIX_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV1_MIX_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV1_MIX_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV2_OCB_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV2_OCB_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV2_OCB_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV2_OCB_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV2_MIX_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV2_MIX_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV2_MIX_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV2_MIX_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV3_OCB_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV3_OCB_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV3_OCB_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV3_OCB_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV3_MIX_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV3_MIX_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_DEV3_MIX_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_DEV3_MIX_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_MC_OCB_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_MC_OCB_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_MC_OCB_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_MC_OCB_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_MC_MIX_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_MESH_MC_MIX_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_MC_MIX_LOW(_gport)  _SHR_GPORT_IS_FABRIC_MESH_MC_MIX_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_LOCAL0(_gport)  _SHR_GPORT_IS_FABRIC_MESH_LOCAL0(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_LOCAL1(_gport)  _SHR_GPORT_IS_FABRIC_MESH_LOCAL1(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_MC(_gport)  _SHR_GPORT_IS_FABRIC_MESH_MC(_gport) 
#define BCM_GPORT_IS_FABRIC_MESH_SCOPE(_gport)  _SHR_GPORT_IS_FABRIC_MESH_SCOPE(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL0_OCB_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL0_OCB_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL0_OCB_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL0_OCB_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL0_MIX_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL0_MIX_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL0_MIX_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL0_MIX_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL1_OCB_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL1_OCB_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL1_OCB_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL1_OCB_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL1_MIX_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL1_MIX_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL1_MIX_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL1_MIX_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_OCB_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_OCB_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_OCB_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_OCB_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_MIX_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_MIX_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_MIX_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_UNICAST_FABRIC_MIX_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_FMQ_GUARANTEED_OCB(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_FMQ_GUARANTEED_OCB(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_FMQ_BEST_EFFORT_OCB(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_FMQ_BEST_EFFORT_OCB(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_FMQ_GUARANTEED_MIX(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_FMQ_GUARANTEED_MIX(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_FMQ_BEST_EFFORT_MIX(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_FMQ_BEST_EFFORT_MIX(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL0(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL0(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL1(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL1(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL0_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL0_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL0_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL0_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL1_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL1_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_LOCAL1_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_LOCAL1_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_OCB_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_OCB_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_MIX_HIGH(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_MIX_HIGH(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_OCB_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_OCB_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_MIX_LOW(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_MIX_LOW(_gport) 
#define BCM_GPORT_IS_FABRIC_CLOS_SCOPE(_gport)  _SHR_GPORT_IS_FABRIC_CLOS_SCOPE(_gport) 
#define BCM_GPORT_IS_DEVPORT(_gport)        _SHR_GPORT_IS_DEVPORT(_gport) 
#define BCM_GPORT_IS_SPECIAL(_gport)        _SHR_GPORT_IS_SPECIAL(_gport) 
#define BCM_GPORT_IS_MIRROR(_gport)         _SHR_GPORT_IS_MIRROR(_gport) 
#define BCM_GPORT_IS_MIM_PORT(_gport)       _SHR_GPORT_IS_MIM_PORT(_gport) 
#define BCM_GPORT_IS_VLAN_PORT(_gport)      _SHR_GPORT_IS_VLAN_PORT(_gport) 
#define BCM_GPORT_IS_WLAN_PORT(_gport)      _SHR_GPORT_IS_WLAN_PORT(_gport) 
#define BCM_GPORT_IS_TRILL_PORT(_gport)     _SHR_GPORT_IS_TRILL_PORT(_gport) 
#define BCM_GPORT_IS_NIV_PORT(_gport)       _SHR_GPORT_IS_NIV_PORT(_gport) 
#define BCM_GPORT_IS_L2GRE_PORT(_gport)     _SHR_GPORT_IS_L2GRE_PORT(_gport) 
#define BCM_GPORT_IS_VXLAN_PORT(_gport)     _SHR_GPORT_IS_VXLAN_PORT(_gport) 
#define BCM_GPORT_IS_EXTENDER_PORT(_gport)  _SHR_GPORT_IS_EXTENDER_PORT(_gport) 
#define BCM_EXTENDER_GPORT_IS_PORT(_gport)  _SHR_EXTENDER_GPORT_IS_PORT(_gport) 
#define BCM_EXTENDER_GPORT_IS_FORWARD(_gport)  _SHR_EXTENDER_GPORT_IS_FORWARD(_gport) 
#define BCM_EXTENDER_GPORT_IS_ENCAP(_gport)  _SHR_EXTENDER_GPORT_IS_ENCAP(_gport) 
#define BCM_GPORT_IS_MAC_PORT(_gport)       _SHR_GPORT_IS_MAC_PORT(_gport) 
#define BCM_GPORT_IS_TUNNEL(_gport)         _SHR_GPORT_IS_TUNNEL(_gport) 
#define BCM_GPORT_IS_CHILD(_gport)          _SHR_GPORT_IS_CHILD(_gport) 
#define BCM_GPORT_IS_EGRESS_GROUP(_gport)   _SHR_GPORT_IS_EGRESS_GROUP(_gport) 
#define BCM_GPORT_IS_EGRESS_CHILD(_gport)   _SHR_GPORT_IS_EGRESS_CHILD(_gport) 
#define BCM_GPORT_IS_EGRESS_MODPORT(_gport)  _SHR_GPORT_IS_EGRESS_MODPORT(_gport) 
#define BCM_GPORT_IS_CONGESTION(_gport)     _SHR_GPORT_IS_CONGESTION(_gport) 
#define BCM_GPORT_IS_SYSTEM_PORT(_gport)    _SHR_GPORT_IS_SYSTEM_PORT(_gport) 
#define BCM_GPORT_IS_COSQ(_gport)           _SHR_GPORT_IS_COSQ(_gport) 
#define BCM_COSQ_GPORT_IS_ISQ(_gport)       _SHR_COSQ_GPORT_IS_ISQ(_gport) 
#define BCM_COSQ_GPORT_IS_VOQ_CONNECTOR(_gport)  _SHR_COSQ_GPORT_IS_VOQ_CONNECTOR(_gport) 
#define BCM_COSQ_GPORT_IS_SRC_QUEUE(_gport)  _SHR_COSQ_GPORT_IS_SRC_QUEUE(_gport) 
#define BCM_COSQ_GPORT_IS_DST_QUEUE(_gport)  _SHR_COSQ_GPORT_IS_DST_QUEUE(_gport) 
#define BCM_COSQ_GPORT_IS_COMPOSITE_SF2(_gport)  _SHR_COSQ_GPORT_IS_COMPOSITE_SF2(_gport) 
#define BCM_COSQ_GPORT_IS_UCAST_EGRESS_QUEUE(_gport)  _SHR_COSQ_GPORT_IS_UCAST_EGRESS_QUEUE(_gport) 
#define BCM_COSQ_GPORT_IS_MCAST_EGRESS_QUEUE(_gport)  _SHR_COSQ_GPORT_IS_MCAST_EGRESS_QUEUE(_gport) 
#define BCM_COSQ_GPORT_IS_VSQ(_gport)       _SHR_COSQ_GPORT_IS_VSQ(_gport) 
#define BCM_COSQ_GPORT_IS_E2E_PORT(_gport)  _SHR_COSQ_GPORT_IS_E2E_PORT(_gport) 
#define BCM_COSQ_GPORT_IS_MULTIPATH(_gport)  _SHR_COSQ_GPORT_IS_MULTIPATH(_gport) 
#define BCM_COSQ_GPORT_IS_SCHED_CIR(_gport)  _SHR_COSQ_GPORT_IS_SCHED_CIR(_gport) 
#define BCM_COSQ_GPORT_IS_SCHED_PIR(_gport)  _SHR_COSQ_GPORT_IS_SCHED_PIR(_gport) 
#define BCM_COSQ_GPORT_IS_PORT_TC(_gport)   _SHR_COSQ_GPORT_IS_PORT_TC(_gport) 
#define BCM_COSQ_GPORT_IS_PORT_TCG(_gport)  _SHR_COSQ_GPORT_IS_PORT_TCG(_gport) 
#define BCM_COSQ_GPORT_IS_E2E_PORT_TC(_gport)  _SHR_COSQ_GPORT_IS_E2E_PORT_TC(_gport) 
#define BCM_COSQ_GPORT_IS_E2E_PORT_TCG(_gport)  _SHR_COSQ_GPORT_IS_E2E_PORT_TCG(_gport) 
#define BCM_COSQ_GPORT_IS_ISQ_ROOT(_gport)  _SHR_COSQ_GPORT_IS_ISQ_ROOT(_gport) 
#define BCM_COSQ_GPORT_IS_FMQ_ROOT(_gport)  _SHR_COSQ_GPORT_IS_FMQ_ROOT(_gport) 
#define BCM_COSQ_GPORT_IS_FMQ_GUARANTEED(_gport)  _SHR_COSQ_GPORT_IS_FMQ_GUARANTEED(_gport) 
#define BCM_COSQ_GPORT_IS_FMQ_BESTEFFORT_AGR(_gport)  _SHR_COSQ_GPORT_IS_FMQ_BESTEFFORT_AGR(_gport) 
#define BCM_COSQ_GPORT_IS_FMQ_BESTEFFORT0(_gport)  _SHR_COSQ_GPORT_IS_FMQ_BESTEFFORT0(_gport) 
#define BCM_COSQ_GPORT_IS_FMQ_BESTEFFORT1(_gport)  _SHR_COSQ_GPORT_IS_FMQ_BESTEFFORT1(_gport) 
#define BCM_COSQ_GPORT_IS_FMQ_BESTEFFORT2(_gport)  _SHR_COSQ_GPORT_IS_FMQ_BESTEFFORT2(_gport) 
#define BCM_COSQ_GPORT_IS_FMQ_CLASS(_gport)  _SHR_COSQ_GPORT_IS_FMQ_CLASS(_gport) 
#define BCM_COSQ_GPORT_IS_SYSTEM_RED(_gport)  _SHR_COSQ_GPORT_IS_SYSTEM_RED(_gport) 
#define BCM_COSQ_GPORT_IS_FABRIC_PIPE(_gport)  _SHR_COSQ_GPORT_IS_FABRIC_PIPE(_gport) 
#define BCM_COSQ_GPORT_IS_FABRIC_PIPE_INGRESS(_gport)  _SHR_COSQ_GPORT_IS_FABRIC_PIPE_INGRESS(_gport) 
#define BCM_COSQ_GPORT_IS_FABRIC_PIPE_EGRESS(_gport)  _SHR_COSQ_GPORT_IS_FABRIC_PIPE_EGRESS(_gport) 
#define BCM_COSQ_GPORT_IS_FABRIC_PIPE_MIDDLE(_gport)  _SHR_COSQ_GPORT_IS_FABRIC_PIPE_MIDDLE(_gport) 
#define BCM_GPORT_IS_PHY(_gport)            _SHR_GPORT_IS_PHY(_gport) 
#define BCM_PHY_GPORT_IS_LANE(_gport)       _SHR_PHY_GPORT_IS_LANE(_gport) 
#define BCM_PHY_GPORT_IS_PHYN(_gport)       _SHR_PHY_GPORT_IS_PHYN(_gport) 
#define BCM_PHY_GPORT_IS_PHYN_LANE(_gport)  _SHR_PHY_GPORT_IS_PHYN_LANE(_gport) 
#define BCM_PHY_GPORT_IS_PHYN_SYS_SIDE(_gport)  _SHR_PHY_GPORT_IS_PHYN_SYS_SIDE(_gport) 
#define BCM_PHY_GPORT_IS_PHYN_SYS_SIDE_LANE(_gport)  _SHR_PHY_GPORT_IS_PHYN_SYS_SIDE_LANE(_gport) 
#define BCM_GPORT_IS_PROXY(_gport)          _SHR_GPORT_IS_PROXY(_gport) 
#define BCM_GPORT_IS_FORWARD_PORT(_gport)   _SHR_GPORT_IS_FORWARD_PORT(_gport) 
#define BCM_GPORT_IS_VP_GROUP(_gport)       _SHR_GPORT_IS_VP_GROUP(_gport) 
#define BCM_GPORT_IS_PROFILE(_gport)        _SHR_GPORT_IS_PROFILE(_gport) 
#define BCM_ENCAP_REMOTE_SET(_encap_id)     _SHR_ENCAP_REMOTE_SET(_encap_id) 
#define BCM_ENCAP_REMOTE_GET(_encap_id)     _SHR_ENCAP_REMOTE_GET(_encap_id) 
#define BCM_ENCAP_ID_SET(_encap_id, _id)    _SHR_ENCAP_ID_SET(_encap_id, _id) 
#define BCM_ENCAP_ID_GET(_encap_id)         _SHR_ENCAP_ID_GET(_encap_id) 

#define BCM_GPORT_LOCAL_SET(_gport, _port)  \
    _SHR_GPORT_LOCAL_SET(_gport, _port) 

#define BCM_GPORT_LOCAL_GET(_gport)  \
    (!_SHR_GPORT_IS_LOCAL(_gport) ? -1 : \
    _SHR_GPORT_LOCAL_GET(_gport)) 

#define BCM_GPORT_MODPORT_SET(_gport, _module, _port)  \
    _SHR_GPORT_MODPORT_SET(_gport, _module, _port) 

#define BCM_GPORT_MODPORT_MODID_GET(_gport)  \
    (!_SHR_GPORT_IS_MODPORT(_gport) ? -1 : \
    _SHR_GPORT_MODPORT_MODID_GET(_gport)) 

#define BCM_GPORT_MODPORT_PORT_GET(_gport)  \
    (!_SHR_GPORT_IS_MODPORT(_gport) ? -1 : \
    _SHR_GPORT_MODPORT_PORT_GET(_gport)) 

#define BCM_GPORT_TRUNK_SET(_gport, _trunk_id)  \
    _SHR_GPORT_TRUNK_SET(_gport, _trunk_id) 

#define BCM_GPORT_VP_GROUP_SET(_gport, _vp_group)  \
    _SHR_GPORT_VP_GROUP_SET(_gport, _vp_group) 

#define BCM_GPORT_PROFILE_SET(_gport, _profile)  \
    _SHR_GPORT_PROFILE_SET(_gport, _profile) 

#define BCM_GPORT_VP_GROUP_GET(_gport)  \
    (!_SHR_GPORT_IS_VP_GROUP(_gport) ? -1 : \
    _SHR_GPORT_VP_GROUP_GET(_gport)) 

#define BCM_GPORT_PROFILE_GET(_gport)  \
    (!_SHR_GPORT_IS_PROFILE(_gport) ? -1 : \
    _SHR_GPORT_PROFILE_GET(_gport)) 

#define BCM_GPORT_TRAP_SET(_gport, _trap_id, _trap_strength, _snoop_strength)  \
   _SHR_GPORT_TRAP_SET(_gport, _trap_id, _trap_strength, _snoop_strength) 

#define BCM_GPORT_TRAP_GET_ID(_gport)  \
     (!_SHR_GPORT_IS_TRAP(_gport) ? -1 : \
   _SHR_GPORT_TRAP_GET_ID(_gport)) 

#define BCM_GPORT_TRAP_GET_STRENGTH(_gport)  \
   _SHR_GPORT_TRAP_GET_STRENGTH(_gport) 

#define BCM_GPORT_TRAP_GET_SNOOP_STRENGTH(_gport)  \
   _SHR_GPORT_TRAP_GET_SNOOP_STRENGTH(_gport) 

#define BCM_GPORT_IS_TRAP(_gport)  \
   _SHR_GPORT_IS_TRAP(_gport)         

#define BCM_GPORT_TRUNK_GET(_gport)  \
    (!_SHR_GPORT_IS_TRUNK(_gport) ? BCM_TRUNK_INVALID : \
    _SHR_GPORT_TRUNK_GET(_gport)) 

#define BCM_GPORT_UCAST_QUEUE_GROUP_SET(_gport, _qid)  \
         _SHR_GPORT_UCAST_QUEUE_GROUP_SET(_gport, _qid) 

#define BCM_GPORT_UCAST_QUEUE_GROUP_SYSQID_SET(_gport, _sysport_id, _qid)  \
         _SHR_GPORT_UCAST_QUEUE_GROUP_SYSQID_SET(_gport, _sysport_id, _qid) 

#define BCM_GPORT_UCAST_QUEUE_GROUP_SYSPORTID_GET(_gport)  \
            (!_SHR_GPORT_IS_UCAST_QUEUE_GROUP(_gport) ? -1 :  \
        _SHR_GPORT_UCAST_QUEUE_GROUP_SYSPORTID_GET(_gport))
 

#define BCM_GPORT_UCAST_QUEUE_GROUP_QID_GET(_gport)  \
            (!_SHR_GPORT_IS_UCAST_QUEUE_GROUP(_gport) ? -1 :  \
        _SHR_GPORT_UCAST_QUEUE_GROUP_QID_GET(_gport))
 

#define BCM_GPORT_DESTMOD_QUEUE_GROUP_SET(_gport, _qid)  \
         _SHR_GPORT_DESTMOD_QUEUE_GROUP_SET(_gport, _qid) 

#define BCM_GPORT_DESTMOD_QUEUE_GROUP_SYSQID_SET(_gport, _sysport_id, _qid)  \
         _SHR_GPORT_DESTMOD_QUEUE_GROUP_SYSQID_SET(_gport, _sysport_id, _qid) 

#define BCM_GPORT_DESTMOD_QUEUE_GROUP_SYSPORTID_GET(_gport)  \
            (!_SHR_GPORT_IS_DESTMOD_QUEUE_GROUP(_gport) ? -1 :  \
        _SHR_GPORT_DESTMOD_QUEUE_GROUP_SYSPORTID_GET(_gport))
 

#define BCM_GPORT_DESTMOD_QUEUE_GROUP_QID_GET(_gport)  \
            (!_SHR_GPORT_IS_DESTMOD_QUEUE_GROUP(_gport) ? -1 :  \
        _SHR_GPORT_DESTMOD_QUEUE_GROUP_QID_GET(_gport))
 

#define BCM_GPORT_UNICAST_QUEUE_GROUP_SET(_gport, _qid)  \
         _SHR_GPORT_UNICAST_QUEUE_GROUP_SET(_gport, _qid) 

#define BCM_GPORT_UNICAST_QUEUE_GROUP_CORE_QUEUE_SET(_gport, _core, _qid)  \
         _SHR_GPORT_UNICAST_QUEUE_GROUP_CORE_QUEUE_SET(_gport, _core, _qid) 

#define BCM_GPORT_UNICAST_QUEUE_GROUP_QID_GET(_gport)  \
         (!_SHR_GPORT_IS_UCAST_QUEUE_GROUP(_gport) ? -1 : \
         _SHR_GPORT_UNICAST_QUEUE_GROUP_QID_GET(_gport)) 

#define BCM_GPORT_UNICAST_QUEUE_GROUP_CORE_GET(_gport)  \
         (!_SHR_GPORT_IS_UCAST_QUEUE_GROUP(_gport) ? -1 : \
         _SHR_GPORT_UNICAST_QUEUE_GROUP_CORE_GET(_gport))
 

#define BCM_GPORT_UCAST_SUBSCRIBER_QUEUE_GROUP_QID_SET(_gport, _qid)  \
         _SHR_GPORT_UCAST_SUBSCRIBER_QUEUE_GROUP_QID_SET(_gport, _qid) 

#define BCM_GPORT_UCAST_SUBSCRIBER_QUEUE_GROUP_QID_GET(_gport)  \
            (!_SHR_GPORT_IS_UCAST_SUBSCRIBER_QUEUE_GROUP(_gport) ? -1 :  \
        _SHR_GPORT_UCAST_SUBSCRIBER_QUEUE_GROUP_QID_GET(_gport))
 

#define BCM_GPORT_MCAST_SET(_gport, _mcast_id)  \
        (_SHR_GPORT_MCAST_SET(_gport, _mcast_id))
 

#define BCM_GPORT_MCAST_GET(_gport)  \
            (!_SHR_GPORT_IS_MCAST(_gport) ? -1 :  \
        _SHR_GPORT_MCAST_GET(_gport))
 

#define BCM_GPORT_MCAST_DS_ID_SET(_gport, _ds_id)  \
     _SHR_GPORT_MCAST_DS_ID_SET(_gport,_ds_id)
 

#define BCM_GPORT_MCAST_DS_ID_GET(_gport)  \
            (!_SHR_GPORT_IS_MCAST(_gport) ? -1 :  \
        _SHR_GPORT_MCAST_DS_ID_GET(_gport))
 

#define BCM_GPORT_MCAST_QUEUE_GROUP_SET(_gport, _qid)  \
         _SHR_GPORT_MCAST_QUEUE_GROUP_SET(_gport, _qid)
 

#define BCM_GPORT_MCAST_QUEUE_GROUP_GET(_gport)  \
            (!_SHR_GPORT_IS_MCAST_QUEUE_GROUP(_gport) ? -1 :  \
        _SHR_GPORT_MCAST_QUEUE_GROUP_GET(_gport))
 

#define BCM_GPORT_MCAST_QUEUE_GROUP_SYSQID_SET(_gport, _sysport_id, _qid)  \
     _SHR_GPORT_MCAST_QUEUE_GROUP_SYSQID_SET(_gport, _sysport_id, _qid)
 

#define BCM_GPORT_MCAST_QUEUE_GROUP_SYSPORTID_GET(_gport)  \
            (!_SHR_GPORT_IS_MCAST_QUEUE_GROUP(_gport) ? -1 :  \
        _SHR_GPORT_MCAST_QUEUE_GROUP_SYSPORTID_GET(_gport))
 

#define BCM_GPORT_MCAST_QUEUE_GROUP_QID_GET(_gport)  \
            (!_SHR_GPORT_IS_MCAST_QUEUE_GROUP(_gport) ? -1 :  \
        _SHR_GPORT_MCAST_QUEUE_GROUP_QID_GET(_gport)) 

/* for multicast queue gports representing queue ID + core ID */
#define BCM_GPORT_MCAST_QUEUE_GROUP_QUEUE_SET(_gport, _qid)  \
         _SHR_GPORT_MCAST_QUEUE_GROUP_QUEUE_SET(_gport, _qid) 
#define BCM_GPORT_MCAST_QUEUE_GROUP_CORE_QUEUE_SET(_gport, _core, _qid)  \
         _SHR_GPORT_MCAST_QUEUE_GROUP_CORE_QUEUE_SET(_gport, _core, _qid) 
#define BCM_GPORT_MCAST_QUEUE_GROUP_QUEUE_GET(_gport)  \
         (!_SHR_GPORT_IS_MCAST_QUEUE_GROUP(_gport) ? -1 : \
         _SHR_GPORT_MCAST_QUEUE_GROUP_QUEUE_GET(_gport)) 
#define BCM_GPORT_MCAST_QUEUE_GROUP_CORE_GET(_gport)  \
         (!_SHR_GPORT_IS_MCAST_QUEUE_GROUP(_gport) ? -1 : \
         _SHR_GPORT_MCAST_QUEUE_GROUP_CORE_GET(_gport))
 

#define BCM_GPORT_MCAST_SUBSCRIBER_QUEUE_GROUP_QID_SET(_gport, _qid)  \
         _SHR_GPORT_MCAST_SUBSCRIBER_QUEUE_GROUP_QID_SET(_gport, _qid) 

#define BCM_GPORT_MCAST_SUBSCRIBER_QUEUE_GROUP_QID_GET(_gport)  \
            (!_SHR_GPORT_IS_MCAST_SUBSCRIBER_QUEUE_GROUP(_gport) ? -1 :  \
        _SHR_GPORT_MCAST_SUBSCRIBER_QUEUE_GROUP_QID_GET(_gport))
 

#define BCM_GPORT_SCHEDULER_SET(_gport, _scheduler_id)  \
    _SHR_GPORT_SCHEDULER_SET(_gport, _scheduler_id) 

#define BCM_GPORT_SCHEDULER_NODE_SET(_gport, _scheduler_level, _scheduler_id)  \
    _SHR_GPORT_SCHEDULER_NODE_SET(_gport, _scheduler_level,_scheduler_id) 

#define BCM_GPORT_SCHEDULER_GET(_gport)  \
    _SHR_GPORT_SCHEDULER_GET(_gport) 

#define BCM_GPORT_SCHEDULER_CORE_GET(_gport)  \
    _SHR_GPORT_SCHEDULER_CORE_GET(_gport) 

#define BCM_GPORT_SCHEDULER_CORE_SET(_gport, _scheduler_id, _core_id)  \
    _SHR_GPORT_SCHEDULER_SET(_gport, _scheduler_id) 

#define BCM_GPORT_MPLS_PORT_ID_SET(_gport, _id)  \
    _SHR_GPORT_MPLS_PORT_ID_SET(_gport, _id) 

#define BCM_GPORT_MPLS_PORT_ID_GET(_gport)  \
    (!_SHR_GPORT_IS_MPLS_PORT(_gport) ? -1 :  \
    _SHR_GPORT_MPLS_PORT_ID_GET(_gport)) 

#define BCM_GPORT_VLAN_PORT_ID_SET(_gport, _id)  \
    _SHR_GPORT_VLAN_PORT_ID_SET(_gport, _id) 

#define BCM_GPORT_VLAN_PORT_ID_GET(_gport)  \
    (!_SHR_GPORT_IS_VLAN_PORT(_gport) ? -1 :  \
    _SHR_GPORT_VLAN_PORT_ID_GET(_gport)) 

#define BCM_GPORT_SUBPORT_GROUP_SET(_gport, _id)  \
    _SHR_GPORT_SUBPORT_GROUP_SET(_gport, _id) 

#define BCM_GPORT_SUBPORT_GROUP_GET(_gport)  \
    (!_SHR_GPORT_IS_SUBPORT_GROUP(_gport) ? -1 :  \
    _SHR_GPORT_SUBPORT_GROUP_GET(_gport)) 

#define BCM_GPORT_SUBPORT_PORT_SET(_gport, _id)  \
    _SHR_GPORT_SUBPORT_PORT_SET(_gport, _id) 

#define BCM_GPORT_SUBPORT_PORT_GET(_gport)  \
    (!_SHR_GPORT_IS_SUBPORT_PORT(_gport) ? -1 :  \
    _SHR_GPORT_SUBPORT_PORT_GET(_gport)) 

#define BCM_GPORT_CHILD_SET(_gport, _modid, _port)  \
    _SHR_GPORT_CHILD_SET(_gport, _modid, _port) 

#define BCM_GPORT_CHILD_MODID_GET(_gport)  \
    (!_SHR_GPORT_IS_CHILD(_gport) ? -1 :  \
    _SHR_GPORT_CHILD_MODID_GET(_gport)) 

#define BCM_GPORT_CHILD_PORT_GET(_gport)  \
    (!_SHR_GPORT_IS_CHILD(_gport) ? -1 :  \
    _SHR_GPORT_CHILD_PORT_GET(_gport)) 

#define BCM_GPORT_EGRESS_GROUP_SET(_egress_group_gport, _child_modid, _egress_child)  \
    _SHR_GPORT_EGRESS_GROUP_SET(_egress_group_gport, _child_modid, _egress_child) 

#define BCM_GPORT_EGRESS_GROUP_MODID_GET(_egress_group_gport)  \
    (!_SHR_GPORT_IS_EGRESS_GROUP(_egress_group_gport) ? -1 :  \
    _SHR_GPORT_EGRESS_GROUP_MODID_GET(_egress_group_gport)) 

#define BCM_GPORT_EGRESS_GROUP_GET(_egress_group_gport)  \
    (!_SHR_GPORT_IS_EGRESS_GROUP(_egress_group_gport) ? -1 :  \
    _SHR_GPORT_EGRESS_GROUP_GET(_egress_group_gport)) 

#define BCM_GPORT_EGRESS_CHILD_SET(_egress_child_gport, _child_modid, _child_port)  \
    _SHR_GPORT_EGRESS_CHILD_SET(_egress_child_gport, _child_modid, _child_port) 

#define BCM_GPORT_EGRESS_CHILD_MODID_GET(_egress_child_gport)  \
    (!_SHR_GPORT_IS_EGRESS_CHILD(_egress_child_gport) ? -1 :  \
    _SHR_GPORT_EGRESS_CHILD_MODID_GET(_egress_child_gport)) 

#define BCM_GPORT_EGRESS_CHILD_PORT_GET(_egress_child_gport)  \
    (!_SHR_GPORT_IS_EGRESS_CHILD(_egress_child_gport) ? -1 :  \
    _SHR_GPORT_EGRESS_CHILD_PORT_GET(_egress_child_gport)) 

#define BCM_GPORT_EGRESS_MODPORT_SET(_gport, _module, _port)  \
    _SHR_GPORT_EGRESS_MODPORT_SET(_gport, _module, _port) 

#define BCM_GPORT_EGRESS_MODPORT_MODID_GET(_gport)  \
    (!_SHR_GPORT_IS_EGRESS_MODPORT(_gport) ? -1 :  \
    _SHR_GPORT_EGRESS_MODPORT_MODID_GET(_gport)) 

#define BCM_GPORT_EGRESS_MODPORT_PORT_GET(_gport)  \
    (!_SHR_GPORT_IS_EGRESS_MODPORT(_gport) ? -1 :  \
    _SHR_GPORT_EGRESS_MODPORT_PORT_GET(_gport)) 

#define BCM_GPORT_CONGESTION_SET(_gport, _port)  \
    _SHR_GPORT_CONGESTION_SET(_gport, _port) 

#define BCM_GPORT_CONGESTION_GET(_gport)  \
    (!_SHR_GPORT_IS_CONGESTION(_gport) ? -1 : \
    _SHR_GPORT_CONGESTION_GET(_gport)) 

#define BCM_GPORT_SYSTEM_PORT_ID_SET(_gport, _id)  \
    _SHR_GPORT_SYSTEM_PORT_ID_SET(_gport, _id) 

#define BCM_GPORT_SYSTEM_PORT_ID_GET(_gport)  \
    (!_SHR_GPORT_IS_SYSTEM_PORT(_gport) ? -1 :  \
    _SHR_GPORT_SYSTEM_PORT_ID_GET(_gport)) 

#define BCM_COSQ_GPORT_ISQ_ROOT_SET(_gport)  \
    _SHR_COSQ_GPORT_ISQ_ROOT_SET(_gport) 

#define BCM_COSQ_GPORT_FMQ_ROOT_SET(_gport)  \
    _SHR_COSQ_GPORT_FMQ_ROOT_SET(_gport) 

#define BCM_COSQ_GPORT_FMQ_GUARANTEED_SET(_gport)  \
    _SHR_COSQ_GPORT_FMQ_GUARANTEED_SET(_gport) 

#define BCM_COSQ_GPORT_FMQ_BESTEFFORT_AGR_SET(_gport)  \
    _SHR_COSQ_GPORT_FMQ_BESTEFFORT_AGR_SET(_gport) 

#define BCM_COSQ_GPORT_FMQ_BESTEFFORT0_SET(_gport)  \
    _SHR_COSQ_GPORT_FMQ_BESTEFFORT0_SET(_gport) 

#define BCM_COSQ_GPORT_FMQ_BESTEFFORT1_SET(_gport)  \
    _SHR_COSQ_GPORT_FMQ_BESTEFFORT1_SET(_gport) 

#define BCM_COSQ_GPORT_FMQ_BESTEFFORT2_SET(_gport)  \
    _SHR_COSQ_GPORT_FMQ_BESTEFFORT2_SET(_gport) 

#define BCM_COSQ_GPORT_FMQ_CLASS_SET(_gport, _class)  \
    _SHR_COSQ_GPORT_FMQ_CLASS_SET(_gport, _class) 

#define BCM_COSQ_GPORT_FABRIC_MESH_LOCAL_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_LOCAL_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV_SET(_gport, _dev_id)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV_SET(_gport, _dev_id) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_UNICAST_LOCAL_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_UNICAST_LOCAL_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_UNICAST_LOCAL_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_UNICAST_LOCAL_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_UNICAST_LOCAL_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_UNICAST_LOCAL_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_FABRIC_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_FABRIC_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_FABRIC_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_FABRIC_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_FABRIC_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_FABRIC_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_FMQ_GUARANTEED_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_FMQ_GUARANTEED_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_FMQ_BESTEFFORT_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_FMQ_BESTEFFORT_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_COMMON_LOCAL0_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_COMMON_LOCAL0_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_COMMON_LOCAL1_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_COMMON_LOCAL1_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_COMMON_DEV1_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_COMMON_DEV1_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_COMMON_DEV2_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_COMMON_DEV2_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_COMMON_DEV3_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_COMMON_DEV3_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_COMMON_MC_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_COMMON_MC_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_COMMON_LOCAL0_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_COMMON_LOCAL0_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_COMMON_LOCAL1_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_COMMON_LOCAL1_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_COMMON_FABRIC_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_COMMON_FABRIC_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_COMMON_UNICAST_FABRIC_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_COMMON_UNICAST_FABRIC_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_COMMON_MULTICAST_FABRIC_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_COMMON_MULTICAST_FABRIC_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_LOCAL0_OCB_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_LOCAL0_OCB_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_LOCAL0_OCB_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_LOCAL0_OCB_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_LOCAL0_MIX_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_LOCAL0_MIX_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_LOCAL0_MIX_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_LOCAL0_MIX_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_LOCAL1_OCB_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_LOCAL1_OCB_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_LOCAL1_OCB_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_LOCAL1_OCB_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_LOCAL1_MIX_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_LOCAL1_MIX_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_LOCAL1_MIX_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_LOCAL1_MIX_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV1_OCB_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV1_OCB_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV1_OCB_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV1_OCB_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV1_MIX_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV1_MIX_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV1_MIX_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV1_MIX_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV2_OCB_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV2_OCB_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV2_OCB_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV2_OCB_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV2_MIX_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV2_MIX_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV2_MIX_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV2_MIX_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV3_OCB_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV3_OCB_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV3_OCB_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV3_OCB_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV3_MIX_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV3_MIX_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_DEV3_MIX_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_DEV3_MIX_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_MC_OCB_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_MC_OCB_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_MC_OCB_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_MC_OCB_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_MC_MIX_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_MC_MIX_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_MC_MIX_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_MC_MIX_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_LOCAL0_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_LOCAL0_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_LOCAL1_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_LOCAL1_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_MC_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_MC_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_MESH_SCOPE_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_MESH_SCOPE_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL0_OCB_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL0_OCB_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL0_OCB_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL0_OCB_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL0_MIX_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL0_MIX_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL0_MIX_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL0_MIX_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL1_OCB_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL1_OCB_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL1_OCB_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL1_OCB_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL1_MIX_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL1_MIX_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL1_MIX_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL1_MIX_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_OCB_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_OCB_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_OCB_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_OCB_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_MIX_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_MIX_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_MIX_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_UNICAST_FABRIC_MIX_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_FMQ_GUARANTEED_OCB_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_FMQ_GUARANTEED_OCB_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_FMQ_BEST_EFFORT_OCB_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_FMQ_BEST_EFFORT_OCB_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_FMQ_GUARANTEED_MIX_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_FMQ_GUARANTEED_MIX_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_FMQ_BEST_EFFORT_MIX_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_FMQ_BEST_EFFORT_MIX_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL0_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL0_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL1_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL1_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL0_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL0_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL0_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL0_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL1_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL1_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_LOCAL1_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_LOCAL1_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_OCB_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_OCB_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_MIX_HIGH_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_MIX_HIGH_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_OCB_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_OCB_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_MIX_LOW_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_MIX_LOW_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_CLOS_SCOPE_SET(_gport)  \
    _SHR_COSQ_GPORT_FABRIC_CLOS_SCOPE_SET(_gport) 

#define BCM_COSQ_GPORT_COMPOSITE_SF2_SET(_gport_sf2, _gport)  \
    _SHR_COSQ_GPORT_COMPOSITE_SF2_SET(_gport_sf2, _gport) 

#define BCM_COSQ_GPORT_COMPOSITE_SF2_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_COMPOSITE_SF2(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_COMPOSITE_SF2_GET(_gport)) 

#define BCM_COSQ_GPORT_UCAST_EGRESS_QUEUE_SET(_gport, _port)  \
    _SHR_COSQ_GPORT_UCAST_EGRESS_QUEUE_SET(_gport, _port) 

#define BCM_COSQ_GPORT_UCAST_EGRESS_QUEUE_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_UCAST_EGRESS_QUEUE(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_UCAST_EGRESS_QUEUE_GET(_gport)) 

#define BCM_COSQ_GPORT_MCAST_EGRESS_QUEUE_SET(_gport, _port)  \
    _SHR_COSQ_GPORT_MCAST_EGRESS_QUEUE_SET(_gport, _port) 

#define BCM_COSQ_GPORT_MCAST_EGRESS_QUEUE_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_MCAST_EGRESS_QUEUE(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_MCAST_EGRESS_QUEUE_GET(_gport)) 

#define BCM_COSQ_GPORT_VSQ_SET(_gport, _type, _type_info)  \
    _SHR_COSQ_GPORT_VSQ_SET(_gport, _type, _type_info) 

#define BCM_COSQ_GPORT_VSQ_TYPE_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_VSQ(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_VSQ_TYPE_GET(_gport)) 

#define BCM_COSQ_GPORT_VSQ_TYPE_INFO_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_VSQ(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_VSQ_TYPE_INFO_GET(_gport)) 

#define BCM_COSQ_VSQ_TYPE_INFO_GROUPA_SET(_type_info, _category)  \
    _SHR_COSQ_VSQ_TYPE_INFO_GROUPA_SET(_type_info, _category) 

#define BCM_COSQ_GPORT_VSQ_TYPE_INFO_GROUPA_CATEGORY_GET(_type_info)  \
    (_SHR_COSQ_VSQ_TYPE_INFO_GROUPA_CATEGORY_GET(_type_info)) 

#define BCM_COSQ_VSQ_TYPE_INFO_GROUPB_SET(_type_info, _category, _tc)  \
    _SHR_COSQ_VSQ_TYPE_INFO_GROUPB_SET(_type_info, _category, _tc) 

#define BCM_COSQ_GPORT_VSQ_TYPE_INFO_GROUPB_CATEGORY_GET(_type_info)  \
    (_SHR_COSQ_VSQ_TYPE_INFO_GROUPB_CATEGORY_GET(_type_info)) 

#define BCM_COSQ_GPORT_VSQ_TYPE_INFO_GROUPB_TC_GET(_type_info)  \
    (_SHR_COSQ_VSQ_TYPE_INFO_GROUPB_TC_GET(_type_info)) 

#define BCM_COSQ_VSQ_TYPE_INFO_GROUPC_SET(_type_info, _category, _connection)  \
    _SHR_COSQ_VSQ_TYPE_INFO_GROUPC_SET(_type_info, _category, _connection) 

#define BCM_COSQ_GPORT_VSQ_TYPE_INFO_GROUPC_CATEGORY_GET(_type_info)  \
    (_SHR_COSQ_VSQ_TYPE_INFO_GROUPC_CATEGORY_GET(_type_info)) 

#define BCM_COSQ_GPORT_VSQ_TYPE_INFO_GROUPC_CONNECTION_GET(_type_info)  \
    (_SHR_COSQ_VSQ_TYPE_INFO_GROUPC_CONNECTION_GET(_type_info)) 

#define BCM_COSQ_VSQ_TYPE_INFO_GROUPD_SET(_type_info, _statistics_tag)  \
    (_SHR_COSQ_VSQ_TYPE_INFO_GROUPD_SET(_type_info, _statistics_tag)) 

#define BCM_COSQ_GPORT_VSQ_TYPE_INFO_GROUPD_STATISTICS_TAG_GET(_type_info)  \
    (_SHR_COSQ_VSQ_TYPE_INFO_GROUPD_STATISTICS_TAG_GET(_type_info)) 

#define BCM_COSQ_VSQ_TYPE_INFO_GROUPE_SET(_type_info, _src_port, _tc)  \
    _SHR_COSQ_VSQ_TYPE_INFO_GROUPE_SET(_type_info, _src_port, _tc) 

#define BCM_COSQ_GPORT_VSQ_TYPE_INFO_GROUPE_SRC_PORT_GET(_type_info)  \
    (_SHR_COSQ_VSQ_TYPE_INFO_GROUPE_SRC_PORT_GET(_type_info)) 

#define BCM_COSQ_GPORT_VSQ_TYPE_INFO_GROUPE_TC_GET(_type_info)  \
    (_SHR_COSQ_VSQ_TYPE_INFO_GROUPE_TC_GET(_type_info)) 

#define BCM_COSQ_VSQ_TYPE_INFO_GROUPF_SET(_type_info, _src_port)  \
    _SHR_COSQ_VSQ_TYPE_INFO_GROUPF_SET(_type_info, _src_port) 

#define BCM_COSQ_GPORT_VSQ_TYPE_INFO_GROUPF_SRC_PORT_GET(_type_info)  \
    (_SHR_COSQ_VSQ_TYPE_INFO_GROUPF_SRC_PORT_GET(_type_info)) 

#define BCM_COSQ_GPORT_E2E_PORT_SET(_gport, _port)  \
    _SHR_COSQ_GPORT_E2E_PORT_SET(_gport, _port) 

#define BCM_COSQ_GPORT_E2E_PORT_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_E2E_PORT(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_E2E_PORT_GET(_gport)) 

#define BCM_COSQ_GPORT_ISQ_SET(_gport, _qid)  \
    _SHR_COSQ_GPORT_ISQ_SET(_gport, _qid) 

#define BCM_COSQ_GPORT_ISQ_CORE_QUEUE_SET(_gport, _core, _qid)  \
         _SHR_COSQ_GPORT_ISQ_CORE_QUEUE_SET(_gport, _core, _qid) 

#define BCM_COSQ_GPORT_ISQ_QID_GET(_gport)  \
         (!_SHR_COSQ_GPORT_IS_ISQ(_gport) ? -1 :  \
         _SHR_COSQ_GPORT_ISQ_QID_GET(_gport)) 

#define BCM_COSQ_GPORT_ISQ_CORE_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_ISQ(_gport) ? -1 : \
    _SHR_COSQ_GPORT_ISQ_CORE_GET(_gport)) 

#define BCM_COSQ_GPORT_VOQ_CONNECTOR_SET(_gport, _cid)  \
    _SHR_COSQ_GPORT_VOQ_CONNECTOR_SET(_gport, _cid) 

#define BCM_COSQ_GPORT_VOQ_CONNECTOR_ID_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_VOQ_CONNECTOR(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_VOQ_CONNECTOR_ID_GET(_gport)) 

#define BCM_COSQ_GPORT_SRC_QUEUE_SET(_gport, _qid)  \
    _SHR_COSQ_GPORT_SRC_QUEUE_SET(_gport, _qid) 

#define BCM_COSQ_GPORT_SRC_QUEUE_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_SRC_QUEUE(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_SRC_QUEUE_GET(_gport)) 

#define BCM_COSQ_GPORT_DST_QUEUE_SET(_gport, _qid)  \
    _SHR_COSQ_GPORT_DST_QUEUE_SET(_gport, _qid) 

#define BCM_COSQ_GPORT_DST_QUEUE_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_DST_QUEUE(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_DST_QUEUE_GET(_gport)) 

#define BCM_COSQ_GPORT_MULTIPATH_SET(_gport, _id)  \
    _SHR_COSQ_GPORT_MULTIPATH_SET(_gport, _id) 

#define BCM_COSQ_GPORT_MULTIPATH_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_MULTIPATH(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_MULTIPATH_GET(_gport)) 

#define BCM_COSQ_GPORT_SCHED_CIR_SET(_gport_cir, _gport)  \
    _SHR_COSQ_GPORT_SCHED_CIR_SET(_gport_cir, _gport) 

#define BCM_COSQ_GPORT_SCHED_CIR_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_SCHED_CIR(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_SCHED_CIR_GET(_gport)) 

#define BCM_COSQ_GPORT_SCHED_PIR_SET(_gport_pir, _gport)  \
    _SHR_COSQ_GPORT_SCHED_PIR_SET(_gport_pir, _gport) 

#define BCM_COSQ_GPORT_SCHED_PIR_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_SCHED_PIR(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_SCHED_PIR_GET(_gport)) 

#define BCM_COSQ_GPORT_PORT_TC_SET(_gport, _port)  \
    _SHR_COSQ_GPORT_PORT_TC_SET(_gport, _port) 

#define BCM_COSQ_GPORT_PORT_TC_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_PORT_TC(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_PORT_TC_GET(_gport)) 

#define BCM_COSQ_GPORT_PORT_TCG_SET(_gport, _port)  \
    _SHR_COSQ_GPORT_PORT_TCG_SET(_gport, _port) 

#define BCM_COSQ_GPORT_PORT_TCG_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_PORT_TCG(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_PORT_TCG_GET(_gport)) 

#define BCM_COSQ_GPORT_E2E_PORT_TC_SET(_gport, _port)  \
    _SHR_COSQ_GPORT_E2E_PORT_TC_SET(_gport, _port) 

#define BCM_COSQ_GPORT_E2E_PORT_TC_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_E2E_PORT_TC(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_E2E_PORT_TC_GET(_gport)) 

#define BCM_COSQ_GPORT_E2E_PORT_TCG_SET(_gport, _port)  \
    _SHR_COSQ_GPORT_E2E_PORT_TCG_SET(_gport, _port) 

#define BCM_COSQ_GPORT_E2E_PORT_TCG_GET(_gport)  \
    (!_SHR_COSQ_GPORT_IS_E2E_PORT_TCG(_gport) ? -1 :  \
    _SHR_COSQ_GPORT_E2E_PORT_TCG_GET(_gport)) 

#define BCM_COSQ_GPORT_SYSTEM_RED_SET(_gport)  \
    _SHR_COSQ_GPORT_SYSTEM_RED_SET(_gport) 

#define BCM_COSQ_GPORT_FABRIC_PIPE_SET(_gport, _fabric_port, _fabric_pipe)  \
    _SHR_COSQ_GPORT_FABRIC_PIPE_SET(_gport, _fabric_port, _fabric_pipe) 

#define BCM_COSQ_GPORT_FABRIC_PIPE_INGRESS_SET(_gport, _fabric_port, _fabric_pipe)  \
    _SHR_COSQ_GPORT_FABRIC_PIPE_INGRESS_SET(_gport, _fabric_port, _fabric_pipe) 

#define BCM_COSQ_GPORT_FABRIC_PIPE_EGRESS_SET(_gport, _fabric_port, _fabric_pipe)  \
    _SHR_COSQ_GPORT_FABRIC_PIPE_EGRESS_SET(_gport, _fabric_port, _fabric_pipe) 

#define BCM_COSQ_GPORT_FABRIC_PIPE_MIDDLE_SET(_gport, _fabric_port, _fabric_pipe)  \
    _SHR_COSQ_GPORT_FABRIC_PIPE_MIDDLE_SET(_gport, _fabric_port, _fabric_pipe) 

#define BCM_COSQ_GPORT_FABRIC_PIPE_PIPE_GET(_gport)  \
    ((!_SHR_COSQ_GPORT_IS_FABRIC_PIPE(_gport) &&  !_SHR_COSQ_GPORT_IS_FABRIC_PIPE_EGRESS(_gport) && \
      !_SHR_COSQ_GPORT_IS_FABRIC_PIPE_INGRESS(_gport) && !_SHR_COSQ_GPORT_IS_FABRIC_PIPE_MIDDLE(_gport)) ? -1 : _SHR_COSQ_GPORT_FABRIC_PIPE_PIPE_GET(_gport)) 

#define BCM_COSQ_GPORT_FABRIC_PIPE_PORT_GET(_gport)  \
    ((!_SHR_COSQ_GPORT_IS_FABRIC_PIPE(_gport) &&  !_SHR_COSQ_GPORT_IS_FABRIC_PIPE_EGRESS(_gport) && \
      !_SHR_COSQ_GPORT_IS_FABRIC_PIPE_INGRESS(_gport) && !_SHR_COSQ_GPORT_IS_FABRIC_PIPE_MIDDLE(_gport)) ? -1 : _SHR_COSQ_GPORT_FABRIC_PIPE_PORT_GET(_gport)) 

/* Multicast distribution set */
typedef int bcm_fabric_distribution_t;

/* Failover Object */
typedef int bcm_failover_t;

#define BCM_GPORT_DEVPORT(_device, _port)  \
    _SHR_GPORT_DEVPORT(_device, _port) 

#define BCM_GPORT_DEVPORT_SET(_gport, _device, _port)  \
    _SHR_GPORT_DEVPORT_SET(_gport, _device, _port) 

#define BCM_GPORT_DEVPORT_DEVID_GET(_gport)  \
    (!_SHR_GPORT_IS_DEVPORT(_gport) ? -1 : \
    _SHR_GPORT_DEVPORT_DEVID_GET(_gport)) 

#define BCM_GPORT_DEVPORT_PORT_GET(_gport)  \
    (!_SHR_GPORT_IS_DEVPORT(_gport) ? -1 : \
    _SHR_GPORT_DEVPORT_PORT_GET(_gport)) 

#define BCM_GPORT_LOCAL_CPU     _SHR_GPORT_LOCAL_CPU 

#define BCM_GPORT_BLACK_HOLE    _SHR_GPORT_BLACK_HOLE 

#define BCM_GPORT_SPECIAL(_value)  \
    _SHR_GPORT_SPECIAL(_value) 

#define BCM_GPORT_SPECIAL_SET(_gport, _value)  \
    _SHR_GPORT_SPECIAL_SET(_gport, _value) 

#define BCM_GPORT_SPECIAL_GET(_gport)  \
    (!_SHR_GPORT_IS_SPECIAL(_gport) ? -1 : \
    _SHR_GPORT_SPECIAL_GET(_gport)) 

#define BCM_GPORT_MIRROR_MIRROR_SET(_gport, _value)  \
     BCM_GPORT_MIRROR_SET(_gport, _value)  

#define BCM_GPORT_MIRROR_SNOOP_SET(_gport, _value)  \
     _SHR_GPORT_MIRROR_SNOOP_SET(_gport, _value)  

#define BCM_GPORT_IS_MIRROR_MIRROR(_gport)  \
     _SHR_GPORT_IS_MIRROR_MIRROR(_gport)  

#define BCM_GPORT_IS_MIRROR_SNOOP(_gport)  \
     _SHR_GPORT_IS_MIRROR_SNOOP(_gport)  

#define BCM_GPORT_MIRROR_SUBTYPE_VAL_MIRROR _SHR_GPORT_MIRROR_SUBTYPE_VAL_MIRROR 
#define BCM_GPORT_MIRROR_SUBTYPE_VAL_SNOOP  _SHR_GPORT_MIRROR_SUBTYPE_VAL_SNOOP 

#define BCM_GPORT_MIRROR_FULL_SET(_gport, _value, _mir_subtype)  \
      _SHR_GPORT_MIRROR_FULL_SET(_gport, _value, _mir_subtype)  

#define BCM_GPORT_MIRROR_SUBTYPE_GET(_gport)  \
       _SHR_GPORT_MIRROR_SUBTYPE_GET(_gport)  

#define BCM_GPORT_MIRROR_SET(_gport, _value)  \
    _SHR_GPORT_MIRROR_SET(_gport, _value) 

#define BCM_GPORT_MIRROR_GET(_gport)  \
    (!_SHR_GPORT_IS_MIRROR(_gport) ? -1 : \
    _SHR_GPORT_MIRROR_GET(_gport)) 

#define BCM_COSQ_CONTROL_FABRIC_CONNECT_MIN_UTILIZATION_SET(whole_utilization, fractional_utilization)  \
    _SHR_COSQ_CONTROL_FABRIC_CONNECT_MIN_UTILIZATION_SET(whole_utilization, fractional_utilization) 

#define BCM_COSQ_CONTROL_FABRIC_CONNECT_MIN_UTILIZATION_WHOLE_GET(utilization)  \
    _SHR_COSQ_CONTROL_FABRIC_CONNECT_MIN_UTILIZATION_WHOLE_GET(utilization) 

#define BCM_COSQ_CONTROL_FABRIC_CONNECT_MIN_UTILIZATION_FRACTIONAL_GET(utilization)  \
    _SHR_COSQ_CONTROL_FABRIC_CONNECT_MIN_UTILIZATION_FRACTIONAL_GET(utilization) 

#define BCM_GPORT_MIM_PORT_ID_SET(_gport, _id)  \
    _SHR_GPORT_MIM_PORT_ID_SET(_gport, _id) 

#define BCM_GPORT_MIM_PORT_ID_GET(_gport)  \
    (!_SHR_GPORT_IS_MIM_PORT(_gport) ? -1 :  \
    _SHR_GPORT_MIM_PORT_ID_GET(_gport)) 

#define BCM_GPORT_WLAN_PORT_ID_SET(_gport, _id)  \
    _SHR_GPORT_WLAN_PORT_ID_SET(_gport, _id) 

#define BCM_GPORT_WLAN_PORT_ID_GET(_gport)  \
    (!_SHR_GPORT_IS_WLAN_PORT(_gport) ? -1 :  \
    _SHR_GPORT_WLAN_PORT_ID_GET(_gport)) 

#define BCM_GPORT_TRILL_PORT_ID_SET(_gport, _id)  \
    _SHR_GPORT_TRILL_PORT_ID_SET(_gport, _id) 

#define BCM_GPORT_EPON_LINK_SET(_gport, _num)  \
    _SHR_GPORT_EPON_LINK_SET(_gport, _num) 

#define BCM_GPORT_EPON_LINK_GET(_gport)  \
    (!_SHR_GPORT_IS_EPON_LINK(_gport) ? -1 :  \
    _SHR_GPORT_EPON_LINK_GET(_gport)) 

#define BCM_GPORT_TRILL_PORT_ID_GET(_gport)  \
    (!_SHR_GPORT_IS_TRILL_PORT(_gport) ? -1 :  \
    _SHR_GPORT_TRILL_PORT_ID_GET(_gport)) 

#define BCM_GPORT_NIV_PORT_ID_SET(_gport, _id)  \
    _SHR_GPORT_NIV_PORT_ID_SET(_gport, _id) 

#define BCM_GPORT_NIV_PORT_ID_GET(_gport)  \
    (!_SHR_GPORT_IS_NIV_PORT(_gport) ? -1 :  \
    _SHR_GPORT_NIV_PORT_ID_GET(_gport)) 

#define BCM_GPORT_L2GRE_PORT_ID_SET(_gport, _id)  \
    _SHR_GPORT_L2GRE_PORT_ID_SET(_gport, _id) 

#define BCM_GPORT_L2GRE_PORT_ID_GET(_gport)  \
    (!_SHR_GPORT_IS_L2GRE_PORT(_gport) ? -1 :  \
    _SHR_GPORT_L2GRE_PORT_ID_GET(_gport)) 

#define BCM_GPORT_VXLAN_PORT_ID_SET(_gport, _id)  \
    _SHR_GPORT_VXLAN_PORT_ID_SET(_gport, _id) 

#define BCM_GPORT_VXLAN_PORT_ID_GET(_gport)  \
    (!_SHR_GPORT_IS_VXLAN_PORT(_gport) ? -1 :  \
    _SHR_GPORT_VXLAN_PORT_ID_GET(_gport)) 

#define BCM_EXTENDER_GPORT_PORT_SET(_gport, _id)  \
    _SHR_EXTENDER_GPORT_PORT_SET(_gport, _id) 

#define BCM_EXTENDER_GPORT_FORWARD_SET(_gport, _id)  \
    _SHR_EXTENDER_GPORT_FORWARD_SET(_gport, _id) 

#define BCM_EXTENDER_GPORT_ENCAP_SET(_gport, _id)  \
    _SHR_EXTENDER_GPORT_ENCAP_SET(_gport, _id) 

#define BCM_GPORT_EXTENDER_PORT_ID_SET(_gport, _id)  \
    _SHR_GPORT_EXTENDER_PORT_ID_SET(_gport, _id) 

#define BCM_GPORT_EXTENDER_PORT_ID_GET(_gport)  \
    (!_SHR_GPORT_IS_EXTENDER_PORT(_gport) ? -1 :  \
    _SHR_GPORT_EXTENDER_PORT_ID_GET(_gport)) 

#define BCM_GPORT_MAC_PORT_ID_SET(_gport, _id)  \
    _SHR_GPORT_MAC_PORT_ID_SET(_gport, _id) 

#define BCM_GPORT_MAC_PORT_ID_GET(_gport)  \
    (!_SHR_GPORT_IS_MAC_PORT(_gport) ? -1 :  \
    _SHR_GPORT_MAC_PORT_ID_GET(_gport)) 

#define BCM_GPORT_TUNNEL_ID_SET(_gport, _tunnel_id)  \
        (_SHR_GPORT_TUNNEL_ID_SET(_gport, _tunnel_id))
 

#define BCM_GPORT_TUNNEL_ID_GET(_gport)  \
            (!_SHR_GPORT_IS_TUNNEL(_gport) ? -1 :  \
        _SHR_GPORT_TUNNEL_ID_GET(_gport))
 

#define BCM_PHY_GPORT_LANE_PORT_SET(_gport, _phy_lane, _port)  \
        (_SHR_PHY_GPORT_LANE_PORT_SET(_gport, _phy_lane, _port)) 

#define BCM_PHY_GPORT_LANE_PORT_LANE_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_LANE(_gport) ? -1 :  \
        _SHR_PHY_GPORT_LANE_PORT_LANE_GET(_gport))
 

#define BCM_PHY_GPORT_LANE_PORT_PORT_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_LANE(_gport) ? -1 :  \
        _SHR_PHY_GPORT_LANE_PORT_PORT_GET(_gport))
 

#define BCM_PHY_GPORT_PHYN_PORT_SET(_gport, _phyn, _port)  \
        (_SHR_PHY_GPORT_PHYN_PORT_SET(_gport, _phyn, _port)) 

#define BCM_PHY_GPORT_PHYN_PORT_PHYN_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_PHYN(_gport) ? -1 :  \
        _SHR_PHY_GPORT_PHYN_PORT_PHYN_GET(_gport))
 

#define BCM_PHY_GPORT_PHYN_PORT_PORT_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_PHYN(_gport) ? -1 :  \
        _SHR_PHY_GPORT_PHYN_PORT_PORT_GET(_gport))
 

#define BCM_PHY_GPORT_PHYN_LANE_PORT_SET(_gport, _phyn, _lane, _port)  \
        (_SHR_PHY_GPORT_PHYN_LANE_PORT_SET(_gport, _phyn, _lane, _port)) 

#define BCM_PHY_GPORT_PHYN_LANE_PORT_PHYN_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_PHYN_LANE(_gport) ? -1 :  \
        _SHR_PHY_GPORT_PHYN_LANE_PORT_PHYN_GET(_gport))
 

#define BCM_PHY_GPORT_PHYN_LANE_PORT_LANE_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_PHYN_LANE(_gport) ? -1 :  \
        _SHR_PHY_GPORT_PHYN_LANE_PORT_LANE_GET(_gport))
 

#define BCM_PHY_GPORT_PHYN_LANE_PORT_PORT_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_PHYN_LANE(_gport) ? -1 :  \
        _SHR_PHY_GPORT_PHYN_LANE_PORT_PORT_GET(_gport))
 

#define BCM_PHY_GPORT_PHYN_SYS_SIDE_PORT_SET(_gport, _phyn, _port)  \
        (_SHR_PHY_GPORT_PHYN_SYS_SIDE_PORT_SET(_gport, _phyn, _port)) 

#define BCM_PHY_GPORT_PHYN_SYS_SIDE_PORT_PHYN_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_PHYN_SYS_SIDE(_gport) ? -1 :  \
        _SHR_PHY_GPORT_PHYN_SYS_SIDE_PORT_PHYN_GET(_gport))
 

#define BCM_PHY_GPORT_PHYN_SYS_SIDE_PORT_PORT_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_PHYN_SYS_SIDE(_gport) ? -1 :  \
        _SHR_PHY_GPORT_PHYN_SYS_SIDE_PORT_PORT_GET(_gport))
 

#define BCM_PHY_GPORT_PHYN_SYS_SIDE_LANE_PORT_SET(_gport, _phyn, _lane, _port)  \
        (_SHR_PHY_GPORT_PHYN_SYS_SIDE_LANE_PORT_SET(_gport, _phyn, _lane, _port)) 

#define BCM_PHY_GPORT_PHYN_SYS_SIDE_LANE_PORT_PHYN_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_PHYN_SYS_SIDE_LANE(_gport) ? -1 :  \
        _SHR_PHY_GPORT_PHYN_SYS_SIDE_LANE_PORT_PHYN_GET(_gport))
 

#define BCM_PHY_GPORT_PHYN_SYS_SIDE_LANE_PORT_LANE_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_PHYN_SYS_SIDE_LANE(_gport) ? -1 :  \
        _SHR_PHY_GPORT_PHYN_SYS_SIDE_LANE_PORT_LANE_GET(_gport))
 

#define BCM_PHY_GPORT_PHYN_SYS_SIDE_LANE_PORT_PORT_GET(_gport)  \
            (!_SHR_PHY_GPORT_IS_PHYN_SYS_SIDE_LANE(_gport) ? -1 :  \
        _SHR_PHY_GPORT_PHYN_SYS_SIDE_LANE_PORT_PORT_GET(_gport))
 

#define BCM_GPORT_PROXY_SET(_gport, _module, _port)  \
    _SHR_GPORT_PROXY_SET(_gport, _module, _port) 

#define BCM_GPORT_PROXY_MODID_GET(_gport)  \
    (!_SHR_GPORT_IS_PROXY(_gport) ? -1 : \
    _SHR_GPORT_PROXY_MODID_GET(_gport)) 

#define BCM_GPORT_PROXY_PORT_GET(_gport)  \
    (!_SHR_GPORT_IS_PROXY(_gport) ? -1 : \
    _SHR_GPORT_PROXY_PORT_GET(_gport)) 

#define BCM_GPORT_FORWARD_PORT_GET(_gport)  \
    (!_SHR_GPORT_IS_FORWARD_PORT(_gport) ? -1 : \
    _SHR_GPORT_FORWARD_PORT_GET(_gport)) 

#define BCM_GPORT_FORWARD_PORT_SET(_gport, _id)  \
    _SHR_GPORT_FORWARD_PORT_SET(_gport, _id) 

#define BCM_STG_DEFAULT         ((bcm_stg_t) 1) 
#define BCM_STG_INVALID         ((bcm_stg_t) -1)
 
#define BCM_CORE_ALL            _SHR_CORE_ALL 

/* bcm_stg_t */
typedef int bcm_stg_t;

/* bcm_dma_chan_t */
typedef _shr_dma_chan_t bcm_dma_chan_t;

/* IPFIX flow rate meter identifier */
typedef int bcm_ipfix_rate_id_t;

/* bcm_mod_port_t */
typedef struct bcm_mod_port_s {
    bcm_module_t mod; 
    bcm_port_t port; 
} bcm_mod_port_t;

/* bcm_color_t */
typedef enum bcm_color_e {
    bcmColorGreen = 0, 
    bcmColorYellow = 1, 
    bcmColorRed = 2, 
    bcmColorDropFirst = bcmColorRed, 
    bcmColorBlack = 3, 
    bcmColorPreserve = 4, 
    bcmColorCount = 5 
} bcm_color_t;

typedef struct bcm_priority_mapping_s {
    int internal_pri;           /* Internal priority */
    bcm_color_t color;          /* (internal) color or drop precedence */
    int remark_internal_pri;    /* (internal) remarking priority */
    bcm_color_t remark_color;   /* (internal) remarking color or drop precedence */
    int policer_offset;         /* Offset based on pri/cos to fetch a policer */
} bcm_priority_mapping_t;

#if defined(LE_HOST)
#define bcm_htonl(_l)           _shr_swap32(_l) 
#define bcm_htons(_s)           _shr_swap16(_s) 
#define bcm_ntohl(_l)           _shr_swap32(_l) 
#define bcm_ntohs(_s)           _shr_swap16(_s) 
#else
#define bcm_htonl(_l)           (_l)       
#define bcm_htons(_s)           (_s)       
#define bcm_ntohl(_l)           (_l)       
#define bcm_ntohs(_s)           (_s)       
#endif

/* Base time structure. */
typedef struct bcm_time_spec_s {
    uint8 isnegative;   /* Sign identifier. */
    uint64 seconds;     /* Seconds absolute value. */
    uint32 nanoseconds; /* Nanoseconds absolute value. */
} bcm_time_spec_t;

/* bcm_unit_bmp_t */
typedef uint32 bcm_unit_bmp_t[_SHR_BITDCLSIZE(BCM_UNITS_MAX)];

#define BCM_UNIT_BMP_CLEAR(_bmp)  \
    sal_memset(_bmp, 0, \
    SHR_BITALLOCSIZE(BCM_UNITS_MAX)) 

#define BCM_UNIT_BMP_ADD(_bmp, _u)  SHR_BITSET(_bmp, _u) 
#define BCM_UNIT_BMP_REMOVE(_bmp, _u)  SHR_BITCLR(_bmp, _u) 
#define BCM_UNIT_BMP_TEST(_bmp, _u)  SHR_BITGET(_bmp, _u) 

/* bcm_unit_valid */
extern int bcm_unit_valid(
    int unit);

/* bcm_unit_local */
extern int bcm_unit_local(
    int unit);

/* bcm_unit_max */
extern int bcm_unit_max(
    void );

/* bcm_unit_remote */
extern int bcm_unit_remote(
    int unit);

/* bcm_unit_remote_unit_get */
extern int bcm_unit_remote_unit_get(
    int unit, 
    int *remunit);

/* bcm_unit_subtype_get */
extern int bcm_unit_subtype_get(
    int unit, 
    char *subtype, 
    int maxlen);

/* Creates IPv6 mask. */
extern int bcm_ip6_mask_create(
    bcm_ip6_t ip6, 
    int len);

/* Calculates bit length of the IPv6 network address mask. */
extern int bcm_ip6_mask_length(
    bcm_ip6_t mask);

/* Creates IPv4 mask for a specific prefix length. */
extern bcm_ip_t bcm_ip_mask_create(
    int len);

/* Calculates bit length of the IPv4 network address mask. */
extern int bcm_ip_mask_length(
    bcm_ip_t ip);

#define BCM_IP4_MASKLEN_TO_ADDR(_ml_)  \
        ((_ml_) ? (~((0x1 << (32 - (_ml_))) - 1)) : 0) 

#define BCM_TTL_VALID(_ttl_)    \
        (((_ttl_) >= 0) && ((_ttl_) <= 0xff)) 

#define BCM_PRIORITY_VALID(_pri_)  \
        (((_pri_) >= 0) && ((_pri_) <= 0x7)) 

#define BCM_FOREACH_LOCAL_UNIT(_unit)  \
    for (_unit = 0; _unit < bcm_unit_max(); _unit++) \
        if (bcm_unit_local(_unit)) 

#define BCM_FOREACH_UNIT(_unit)  \
    for (_unit = 0; _unit < bcm_unit_max(); _unit++) \
        if (bcm_unit_valid(_unit)) 

/* VLAN TPID Action definitions. */
typedef enum bcm_vlan_tpid_action_e {
    bcmVlanTpidActionNone = 0,  /* Do not modify. */
    bcmVlanTpidActionModify = 1 /* Set to given value. */
} bcm_vlan_tpid_action_t;

/* VLAN Pcp Action definitions. */
typedef enum bcm_vlan_pcp_action_e {
    bcmVlanPcpActionNone = 0,           /* Do not modify. */
    bcmVlanPcpActionMapped = 1,         /* Use TC/DP mapped PCP. */
    bcmVlanPcpActionIngressInnerPcp = 2, /* Use incoming packet's CTag PCP. */
    bcmVlanPcpActionIngressOuterPcp = 3, /* Use incoming packet's Stag PCP. */
    bcmVlanPcpActionPortDefault = 4     /* Use port default PCP. */
} bcm_vlan_pcp_action_t;

/* VLAN Action definitions. */
typedef enum bcm_vlan_action_e {
    bcmVlanActionNone = 0,          /* Do not modify. */
    bcmVlanActionAdd = 1,           /* Add VLAN tag. */
    bcmVlanActionReplace = 2,       /* Replace VLAN tag. */
    bcmVlanActionDelete = 3,        /* Delete VLAN tag. */
    bcmVlanActionCopy = 4,          /* Copy VLAN tag. */
    bcmVlanActionCompressed = 5,    /* Set VLAN compress tag. */
    bcmVlanActionMappedAdd = 6,     /* Add a new VLAN tag according to Mapped
                                       VLAN. */
    bcmVlanActionMappedReplace = 7, /* Replace existing VLAN tag according to
                                       Mapped VLAN. */
    bcmVlanActionOuterAdd = 8,      /* Add a new VLAN tag with the Outer VLAN
                                       tag value. */
    bcmVlanActionInnerAdd = 9,      /* Add a new VLAN tag with the Inner VLAN
                                       tag value. */
    bcmVlanActionCopyVsan = 10,     /* Copy VSAN and Pri. */
    bcmVlanActionReplaceVsan = 11   /* Replace VSAN and Pri. */
} bcm_vlan_action_t;

/* Initialize a VLAN tag action set structure. */
typedef struct bcm_vlan_action_set_s {
    bcm_vlan_t new_outer_vlan;          /* New outer VLAN for Add/Replace
                                           actions. */
    bcm_vlan_t new_inner_vlan;          /* New inner VLAN for Add/Replace
                                           actions. */
    uint8 new_inner_pkt_prio;           /* New inner packet priority for
                                           Add/Replace actions. */
    uint8 new_outer_cfi;                /* New outer packet CFI for Add/Replace
                                           actions. */
    uint8 new_inner_cfi;                /* New inner packet CFI for Add/Replace
                                           actions. */
    bcm_if_t ingress_if;                /* L3 Ingress Interface. */
    int priority;                       /* Internal or packet priority. */
    bcm_vlan_action_t dt_outer;         /* Outer-tag action for double-tagged
                                           packets. */
    bcm_vlan_action_t dt_outer_prio;    /* Outer-priority-tag action for
                                           double-tagged packets. */
    bcm_vlan_action_t dt_outer_pkt_prio; /* Outer packet priority action for
                                           double-tagged packets. */
    bcm_vlan_action_t dt_outer_cfi;     /* Outer packet CFI action for
                                           double-tagged packets. */
    bcm_vlan_action_t dt_inner;         /* Inner-tag action for double-tagged
                                           packets. */
    bcm_vlan_action_t dt_inner_prio;    /* Inner-priority-tag action for
                                           double-tagged packets. */
    bcm_vlan_action_t dt_inner_pkt_prio; /* Inner packet priority action for
                                           double-tagged packets. */
    bcm_vlan_action_t dt_inner_cfi;     /* Inner packet CFI action for
                                           double-tagged packets. */
    bcm_vlan_action_t ot_outer;         /* Outer-tag action for
                                           single-outer-tagged packets. */
    bcm_vlan_action_t ot_outer_prio;    /* Outer-priority-tag action for
                                           single-outer-tagged packets. */
    bcm_vlan_action_t ot_outer_pkt_prio; /* Outer packet priority action for
                                           single-outer-tagged packets. */
    bcm_vlan_action_t ot_outer_cfi;     /* Outer packet CFI action for
                                           single-outer-tagged packets. */
    bcm_vlan_action_t ot_inner;         /* Inner-tag action for
                                           single-outer-tagged packets. */
    bcm_vlan_action_t ot_inner_pkt_prio; /* Inner packet priority action for
                                           single-outer-tagged packets. */
    bcm_vlan_action_t ot_inner_cfi;     /* Inner packet CFI action for
                                           single-outer-tagged packets. */
    bcm_vlan_action_t it_outer;         /* Outer-tag action for
                                           single-inner-tagged packets. */
    bcm_vlan_action_t it_outer_pkt_prio; /* Outer packet priority action for
                                           single-inner-tagged packets. */
    bcm_vlan_action_t it_outer_cfi;     /* Outer packet CFI action for
                                           single-inner-tagged packets. */
    bcm_vlan_action_t it_inner;         /* Inner-tag action for
                                           single-inner-tagged packets. */
    bcm_vlan_action_t it_inner_prio;    /* Inner-priority-tag action for
                                           single-inner-tagged packets. */
    bcm_vlan_action_t it_inner_pkt_prio; /* Inner packet priority action for
                                           single-inner-tagged packets. */
    bcm_vlan_action_t it_inner_cfi;     /* Inner packet CFI action for
                                           single-inner-tagged packets. */
    bcm_vlan_action_t ut_outer;         /* Outer-tag action for untagged
                                           packets. */
    bcm_vlan_action_t ut_outer_pkt_prio; /* Outer packet priority action for
                                           untagged packets. */
    bcm_vlan_action_t ut_outer_cfi;     /* Outer packet CFI action for untagged
                                           packets. */
    bcm_vlan_action_t ut_inner;         /* Inner-tag action for untagged
                                           packets. */
    bcm_vlan_action_t ut_inner_pkt_prio; /* Inner packet priority action for
                                           untagged packets. */
    bcm_vlan_action_t ut_inner_cfi;     /* Inner packet CFI action for untagged
                                           packets. */
    bcm_vlan_pcp_action_t outer_pcp;    /* Outer tag's pcp field action of
                                           outgoing packets. */
    bcm_vlan_pcp_action_t inner_pcp;    /* Inner tag's pcp field action of
                                           outgoing packets. */
    bcm_policer_t policer_id;           /* Base policer to be used */
    uint16 outer_tpid;                  /* New outer-tag's tpid field for modify
                                           action */
    uint16 inner_tpid;                  /* New inner-tag's tpid field for modify
                                           action */
    bcm_vlan_tpid_action_t outer_tpid_action; /* Action of outer-tag's tpid field */
    bcm_vlan_tpid_action_t inner_tpid_action; /* Action of inner-tag's tpid field */
    int action_id;                      /* Action Set index */
    uint32 flags;                       /* BCM_VLAN_ACTION_SET_xxx. */
} bcm_vlan_action_set_t;

/* bcm_fcoe_vsan_id_t */
typedef uint32 bcm_fcoe_vsan_id_t;

/* bcm_service_pool_id_t */
typedef int bcm_service_pool_id_t;

/* UDF Id */
typedef int bcm_udf_id_t;

/* Packet format ID */
typedef int bcm_udf_pkt_format_id_t;

/* Packet Format: L2 */
#define BCM_PKT_FORMAT_L2_ANY       (0x0)      /* All packet types */
#define BCM_PKT_FORMAT_L2_ETH_II    (1 << 0)   /* L2 Eth-II packet */
#define BCM_PKT_FORMAT_L2_SNAP      (1 << 1)   /* L2 SNAP packet */
#define BCM_PKT_FORMAT_L2_LLC       (1 << 2)   /* L2 LLC packet */

/* Packet Format: Vlan Tag */
#define BCM_PKT_FORMAT_VLAN_TAG_ANY     (0x0)      /* Any packet */
#define BCM_PKT_FORMAT_VLAN_TAG_NONE    (1 << 0)   /* Vlan untagged packet */
#define BCM_PKT_FORMAT_VLAN_TAG_SINGLE  (1 << 1)   /* Vlan single tagged packet */
#define BCM_PKT_FORMAT_VLAN_TAG_DOUBLE  (1 << 2)   /* Vlan double tagged packet */

/* Packet Format: IP */
#define BCM_PKT_FORMAT_IP_ANY           (0x0)      /* Any packet */
#define BCM_PKT_FORMAT_IP_NONE          (1 << 0)   /* NON IP packets */
#define BCM_PKT_FORMAT_IP4              (1 << 1)   /* IPv4 packets */
#define BCM_PKT_FORMAT_IP6              (1 << 2)   /* IPv6 packets */
#define BCM_PKT_FORMAT_IP4_WITH_OPTIONS (1 << 3)   /* IPv4 packets with IP
                                                      options */
#define BCM_PKT_FORMAT_IP6_WITH_OPTIONS (1 << 4)   /* IPv6 packets with IP
                                                      options */

/* Packet Format: MPLS */
#define BCM_PKT_FORMAT_MPLS_ANY             (0x0)      /* Any packet */
#define BCM_PKT_FORMAT_MPLS_ONE_LABEL       (1 << 0)   /* Packet with 1 MPLS
                                                          Label */
#define BCM_PKT_FORMAT_MPLS_TWO_LABELS      (1 << 1)   /* Packet with 2 MPLS
                                                          Label */
#define BCM_PKT_FORMAT_MPLS_THREE_LABELS    (1 << 2)   /* Packet with 3 MPLS
                                                          Label */
#define BCM_PKT_FORMAT_MPLS_FOUR_LABELS     (1 << 3)   /* Packet with 4 MPLS
                                                          Label */
#define BCM_PKT_FORMAT_MPLS_FIVE_LABELS     (1 << 4)   /* Packet with 5 MPLS
                                                          Label */

/* Packet Format: FCOE */
#define BCM_PKT_FORMAT_FIBRE_CHAN_ANY       (0x0)      /* Any packet */
#define BCM_PKT_FORMAT_FIBRE_CHAN           (1 << 0)   /* Standard fibre-channel
                                                          header */
#define BCM_PKT_FORMAT_FIBRE_CHAN_ENCAP     (1 << 1)   /* FC Encapsulation
                                                          header */
#define BCM_PKT_FORMAT_FIBRE_CHAN_VIRTUAL   (1 << 2)   /* FC Virtual fabric tag
                                                          (VFT) header */
#define BCM_PKT_FORMAT_FIBRE_CHAN_ROUTED    (1 << 3)   /* FC Interfabric routing
                                                          (IFR) header */

/* Packet Format: Tunnels */
#define BCM_PKT_FORMAT_TUNNEL_ANY       (0x0)      /* Any packet */
#define BCM_PKT_FORMAT_TUNNEL_NONE      (1 << 0)   /* Non tunneled packet */
#define BCM_PKT_FORMAT_TUNNEL_IP_IN_IP  (1 << 1)   /* IP in IP tunneled packet */
#define BCM_PKT_FORMAT_TUNNEL_GRE       (1 << 2)   /* GRE tunneled packet */
#define BCM_PKT_FORMAT_TUNNEL_MPLS      (1 << 3)   /* MPLS tunneled packet */
#define BCM_PKT_FORMAT_TUNNEL_FCOE      (1 << 4)   /* FCOE tunneled packet */
#define BCM_PKT_FORMAT_TUNNEL_FCOE_INIT (1 << 5)   /* FCOE initialization
                                                      proptocol (FIP) packet */

/* Packet Format: HIGIG */
#define BCM_PKT_FORMAT_HIGIG_ANY        (0x0)      /* Any HIGIG packet */
#define BCM_PKT_FORMAT_HIGIG_PRESENT    (1 << 0)   /* HIGIG packets only */
#define BCM_PKT_FORMAT_HIGIG_NONE       (1 << 1)   /* Non-HIGIG packets only */

/* Packet Format: NIV */
#define BCM_PKT_FORMAT_VNTAG_ANY        (0x0)      /* Any NIV packet */
#define BCM_PKT_FORMAT_VNTAG_PRESENT    (1 << 0)   /* NIV packets only */
#define BCM_PKT_FORMAT_VNTAG_NONE       (1 << 1)   /* Non-NIV packets only */

/* Packet Format: Extender tag */
#define BCM_PKT_FORMAT_ETAG_ANY     (0x0)      /* Any Extender tagged packets */
#define BCM_PKT_FORMAT_ETAG_PRESENT (1 << 0)   /* Extender tagged packets only */
#define BCM_PKT_FORMAT_ETAG_NONE    (1 << 1)   /* Non-Extender tagged packets
                                                  only */

/* Packet Format: CNTAG */
#define BCM_PKT_FORMAT_CNTAG_ANY        (0x0)      /* Any CNTAG packet */
#define BCM_PKT_FORMAT_CNTAG_PRESENT    (1 << 0)   /* CNTAG packets only */
#define BCM_PKT_FORMAT_CNTAG_NONE       (1 << 1)   /* Non-CNTAG packets only */

/* Packet Format: ICNM */
#define BCM_PKT_FORMAT_ICNM_ANY     (0x0)      /* Any ICNM packets */
#define BCM_PKT_FORMAT_ICNM_PRESENT (1 << 0)   /* ICNM packets only */
#define BCM_PKT_FORMAT_ICNM_NONE    (1 << 1)   /* Non-ICNM packets only */

/* Packet Format: Subport Tag */
#define BCM_PKT_FORMAT_SUBPORT_TAG_ANY      (0x0)      /* Any subport tagged
                                                          packet */
#define BCM_PKT_FORMAT_SUBPORT_TAG_PRESENT  (1 << 0)   /* Subport tagged packets
                                                          only */
#define BCM_PKT_FORMAT_SUBPORT_TAG_NONE     (1 << 1)   /* Non-Subport tagged
                                                          packets only */

#endif /* __BCM_TYPES_H__ */

/*
 * $Id: da004ca8a8dc647fe9799290b2a54c1c30481374 $
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * SOC Property Names (Autogenerated)
 * 
 * DO NOT EDIT THIS FILE. Your changes will be lost
 */
#ifndef _SOC_PROPERTY_H
#define _SOC_PROPERTY_H


/*
 * Station MAC address used for management through the switch ports
 * itself. If using the CPU network interface, the NVRAM setting is used
 * for MAC address assignment.
 */
#define spn_STATION_MAC_ADDRESS  "station_mac_address"
/*
 * Enable polled IRQ mode (useful for board bringup and debugging).
 * IRQs will be polled from a dedicated thread and hardware interrupts
 * will remain disabled.
 */
#define spn_POLLED_IRQ_MODE  "polled_irq_mode"
/*
 * The priority of the IRQ poll thread as well as the minimum delay
 * between IRQ polls can be configured if needed.
 */
#define spn_POLLED_IRQ_DELAY  "polled_irq_delay"
/*
 * The priority of the IRQ poll thread as well as the minimum delay
 * between IRQ polls can be configured if needed.
 */
#define spn_POLLED_IRQ_PRIORITY  "polled_irq_priority"
/*
 * Allow filtering to be disabled in hardware if not being used.
 * Also, tables will not be cleared which can save time in simulation.
 */
#define spn_FILTER_ENABLE  "filter_enable"

/* Initial number of CoS queues bcm_init() configures the chip for. */
#define spn_BCM_NUM_COS  "bcm_num_cos"

/* Clear the filter table for 10/100Mb ports during initialization */
#define spn_BCM_FILTER_CLEAR_FE  "bcm_filter_clear_fe"

/* Clear the filter table for 1000Mb ports during initialization */
#define spn_BCM_FILTER_CLEAR_GE  "bcm_filter_clear_ge"

/* Clear the filter table for 10GE ports during initialization */
#define spn_BCM_FILTER_CLEAR_XE  "bcm_filter_clear_xe"
/*
 * Linkscan:
 * Specify ports on which bcm_init will run linkscan (default all).
 */
#define spn_BCM_LINKSCAN_PBMP  "bcm_linkscan_pbmp"
/*
 * Linkscan interval in microseconds.
 * If non-zero, bcm_init() will start linkscan
 */
#define spn_BCM_LINKSCAN_INTERVAL  "bcm_linkscan_interval"
/*
 * The number of port update errors which will cause the bcm_linkscan module
 * to suspend a port from update processing for the period of time set in
 * "bcm_linkscan_errdelay".
 */
#define spn_BCM_LINKSCAN_MAXERR  "bcm_linkscan_maxerr"
/*
 * The amount of time in microseconds for which the bcm_linkscan module
 * will suspend a port from further update processing after
 * "bcm_linkscan_maxerr" errors are detected.  After this delay, the
 * error state for the port is cleared and normal linkscan processing
 *  resumes on the port.
 */
#define spn_BCM_LINKSCAN_ERRDELAY  "bcm_linkscan_errdelay"
/*
 * BCM Statistics Collection:
 * Set bitmap of ports on which stat collection will be enabled.
 * Default is all ports.
 */
#define spn_BCM_STAT_PBMP  "bcm_stat_pbmp"
/*
 * Set stat collection interval in microseconds.
 * Setting this to 0 will prevent counters from being started.
 */
#define spn_BCM_STAT_INTERVAL  "bcm_stat_interval"

/* Timeout delay in microseconds before bcm_stat_sync returns BCM_E_TIMEOUT */
#define spn_BCM_STAT_SYNC_TIMEOUT  "bcm_stat_sync_timeout"
/*
 * Flag values to be ORd together:
 *    0x0 indicates that counter DMA should NOT be used
 *    0x1 indicates that counter DMA should be used (default).
 */
#define spn_BCM_STAT_FLAGS  "bcm_stat_flags"
/*
 * Threshold value for oversize (*OVR) frame size.
 * Values over 1518 affect the *OVR statistics computation
 */
#define spn_BCM_STAT_JUMBO  "bcm_stat_jumbo"

/* Selection of recovery clock lane for CAUI port. values: 0-3 */
#define spn_CAUI_RX_CLOCK_RECOVERY_LANE  "caui_rx_clock_recovery_lane"

/* Specified if port use 1 Byte preamble */
#define spn_PREAMBLE_SOP_ONLY  "preamble_sop_only"

/* Specifies the priority of the BCM TX thread */
#define spn_BCM_TX_THREAD_PRI  "bcm_tx_thread_pri"

/* Specifies the priority of the BCM RX thread */
#define spn_BCM_RX_THREAD_PRI  "bcm_rx_thread_pri"

/* Specifies the priority of the BCM Linkscan thread */
#define spn_LINKSCAN_THREAD_PRI  "linkscan_thread_pri"

/* Specifies the priority of the BCM Portmon thread */
#define spn_PORTMON_THREAD_PRI  "portmon_thread_pri"

/* Specifies the priority of the bcm_bst_sync_thread */
#define spn_BST_SYNC_THREAD_PRI  "bst_sync_thread_pri"

/* Specifies the priority of the bcmBHH thread */
#define spn_BHH_THREAD_PRI  "bhh_thread_pri"

/* Specifies the priority of the bcmIbodSync thread */
#define spn_IBOD_SYNC_THREAD_PRI  "ibod_sync_thread_pri"

/* Specifies the priority of the bcmFtExportDma thread */
#define spn_BCM_FT_REPORT_THREAD_PRI  "bcm_ft_report_thread_pri"

/* Specifies the priority of the bcmBFD thread */
#define spn_BFD_THREAD_PRI  "bfd_thread_pri"

/* Specifies the priority of the dma monitor thread thread(bcmDmaIntrM) */
#define spn_SOC_DMA_MONITOR_THREAD_PRI  "soc_dma_monitor_thread_pri"

/* Specifies the priority of the SOC KNET RX thread */
#define spn_SOC_KNET_RX_THREAD_PRI  "soc_knet_rx_thread_pri"

/* Specifies the priority of the bcmPSCAN thread */
#define spn_BCM_ESW_PSCAN_THREAD_PRI  "bcm_esw_pscan_thread_pri"

/* Specifies the priority of the socdmadesc thread */
#define spn_SBUS_DMA_DESC_THREAD_PRI  "sbus_dma_desc_thread_pri"

/* Specifies the priority of the esm_recovery thread */
#define spn_ESM_RECOVERY_THREAD_PRI  "esm_recovery_thread_pri"

/* Packet DMA abort timeout */
#define spn_PDMA_TIMEOUT_USEC  "pdma_timeout_usec"

/* Counter DMA collection pass timeout in microseconds */
#define spn_CDMA_TIMEOUT_USEC  "cdma_timeout_usec"
/*
 * Manually collect the HOLD register in the counter DMA thread on
 * BCM568xx and BCM567xx devices.
 */
#define spn_CDMA_PIO_HOLD_ENABLE  "cdma_pio_hold_enable"

/* Table DMA operation timeout in microseconds */
#define spn_TDMA_TIMEOUT_USEC  "tdma_timeout_usec"

/* Table DMA operation should use interrupt rather than poll for completion */
#define spn_TDMA_INTR_ENABLE  "tdma_intr_enable"

/* Table SLAM DMA operation timeout in microseconds */
#define spn_TSLAM_TIMEOUT_USEC  "tslam_timeout_usec"

/* Table SLAM DMA operation should use interrupt rather than poll for completion */
#define spn_TSLAM_INTR_ENABLE  "tslam_intr_enable"

/* CCM DMA operation timeout in microseconds */
#define spn_CCMDMA_TIMEOUT_USEC  "ccmdma_timeout_usec"

/* CCM DMA operation should use interrupt rather than poll for completion */
#define spn_CCMDMA_INTR_ENABLE  "ccmdma_intr_enable"

/* SBUSDMA descriptor mode operation timeout in microseconds */
#define spn_DMA_DESC_TIMEOUT_USEC  "dma_desc_timeout_usec"

/* SBUSDMA descriptor mode operation should use interrupt rather than poll for completion */
#define spn_DMA_DESC_INTR_ENABLE  "dma_desc_intr_enable"

/* Packet DMA interrupts should be mitigated to improve performance */
#define spn_DCB_INTR_MITIGATE_ENABLE  "dcb_intr_mitigate_enable"
/*
 * Maximum number of consecutive S-channel errors the counter collection
 * code will tolerate before the counter thread gives up and exits.
 */
#define spn_SOC_CTR_MAXERR  "soc_ctr_maxerr"
/*
 * stat info will include the specific priotity and higher priorities
 * possible values: LOW_LEVEL, MEDIUM_LEVEL, HIGH_LEVEL.
 */
#define spn_SOC_COUNTER_CONTROL_LEVEL  "soc_counter_control_level"
/*
 * Skip hardware reset (CMIC_CONFIG.RESET_CPS) when calling soc_reset().
 * This means that e.g. 'init soc' will NOT perform a hard reset.
 */
#define spn_SOC_SKIP_RESET  "soc_skip_reset"

/* Miscellaneous thread priorities; 0 is highest and 255 is lowest */
#define spn_COUNTER_THREAD_PRI  "counter_thread_pri"

/* Check callback return code and abort on error. */
#define spn_CB_ABORT_ON_ERR  "cb_abort_on_err"
/*
 * When a link goes down for any reason, the driver waits for all packets
 * to that port to drain from the MMU before continuing.  There is a
 * timeout in case the packet count is non-zero AND non-decrementing.
 * This is only for devices with UniMAC and TriMAC.
 */
#define spn_LCCDRAIN_TIMEOUT_USEC  "lccdrain_timeout_usec"
#define spn_SOC_SCOREBOARD_ENABLE  "soc_scoreboard_enable"
#define spn_SOC_SCOREBOARD_INTERVAL  "soc_scoreboard_interval"

/* L3 switching enable */
#define spn_L3_ENABLE  "l3_enable"

/* IMPC switching enable */
#define spn_IPMC_ENABLE  "ipmc_enable"

/* Include the VLAN as part of the hash key for L3 IPMC */
#define spn_IPMC_DO_VLAN  "ipmc_do_vlan"

/* EXTEND maximum number of front panel trunk groups  from 32 to 128 */
#define spn_TRUNK_EXTEND  "trunk_extend"
/*
 * Delay this long after an ARL message overrun before a lengthy ARL-
 * resync process.  Setting to 0 to disables resync, in peril of getting
 * an inconsistent ARL message stream and/or corrupt L2 shadow table.
 */
#define spn_ARL_RESYNC_DELAY  "arl_resync_delay"

/* Enable L2X shadowing into AVL tree. */
#define spn_L2XMSG_AVL  "l2xmsg_avl"
/*
 * Mode control to select L2 Table DMA mode aka L2MODE_POLL (0) or
 * L2MOD_FIFO mechanism aka L2MODE_FIFO (1) for L2 table change notification.
 */
#define spn_L2XMSG_MODE  "l2xmsg_mode"
/*
 * Priority of the _soc_l2x_thread, that is used to synchronize
 * shadow copy of the L2 entry with the HW table
 */
#define spn_L2XMSG_THREAD_PRI  "l2xmsg_thread_pri"
/*
 * Period between synchronizations of the software L2X shadow table
 * with the hardware (5690 only).  The thread actually runs every
 * l2xmsg_thread_usec/l2xmsg_chunks microseconds.
 */
#define spn_L2XMSG_THREAD_USEC  "l2xmsg_thread_usec"
/*
 * The l2xmsg thread will call back to the user any time an L2X address
 * is added, removed, or changed.  However, if only the hit bit changes,
 * it will not call back unless l2xmsg_shadow_hit_bits is set to 1.
 */
#define spn_L2XMSG_SHADOW_HIT_BITS  "l2xmsg_shadow_hit_bits"
/*
 * The l2xmsg thread will call back to the user any time an L2X address
 * is added, removed, or changed.  However, if only the source hit bit changes,
 * it will not call back unless l2xmsg_shadow_hit_bits is set to 0 and
 * l2xmsg_shadow_hit_src is set to 1.
 */
#define spn_L2XMSG_SHADOW_HIT_SRC  "l2xmsg_shadow_hit_src"
/*
 * The l2xmsg thread will call back to the user any time an L2X address
 * is added, removed, or changed.  However, if only the destination hit bit changes,
 * it will not call back unless l2xmsg_shadow_hit_bits is set to 0 and
 * l2xmsg_shadow_hit_dst is set to 1.
 */
#define spn_L2XMSG_SHADOW_HIT_DST  "l2xmsg_shadow_hit_dst"
/*
 * Synchronize the L2X table in chunks to spread out the work over
 * time and save memory on size of DMA buffer.  Must be power of 2.
 */
#define spn_L2XMSG_CHUNKS  "l2xmsg_chunks"

/* Size of the buffer that is used to drain L2 FIFO when working in the L2 FIFO mode */
#define spn_L2XMSG_HOSTBUF_SIZE  "l2xmsg_hostbuf_size"
/*
 * Timeout for hardware-accelerated ARL delete operations including:
 * delete by port, delete by port+modid, delete by VLAN, delete by trunk.
 */
#define spn_ARL_CLEAN_TIMEOUT_USEC  "arl_clean_timeout_usec"

/* Specifies the priority of the memory scanning and error correction thread */
#define spn_MEM_SCAN_THREAD_PRI  "mem_scan_thread_pri"
/*
 * Specifies the number of table entries to be retrieved at a time
 * during memory scanning.
 */
#define spn_MEM_SCAN_CHUNK_SIZE  "mem_scan_chunk_size"

/* Control to automatically run background memory scan. */
#define spn_MEM_SCAN_ENABLE  "mem_scan_enable"

/* Specifies the memory scan rate in terms of entries per pass. */
#define spn_MEM_SCAN_RATE  "mem_scan_rate"

/* Specifies the memory scan repeat interval. */
#define spn_MEM_SCAN_INTERVAL  "mem_scan_interval"
/*
 * S-Channel operation timeout in microseconds.  Note that ARL
 * insert/delete messages can take a while if the ARL is highly active.
 */
#define spn_SCHAN_TIMEOUT_USEC  "schan_timeout_usec"

/* MIIM operation timeout in microseconds */
#define spn_MIIM_TIMEOUT_USEC  "miim_timeout_usec"

/* Memory Built-In-Self-Test (BIST) timeout in milliseconds */
#define spn_BIST_TIMEOUT_MSEC  "bist_timeout_msec"
/*
 * Normally, the system will use polling for register/memory S-Channel
 * operations and interrupts for time-consuming operations such as ARL
 * insert/delete.  If this schan_intr_enable is set to 0, polling will be
 * used for ALL operations.
 */
#define spn_SCHAN_INTR_ENABLE  "schan_intr_enable"
/*
 * Length of time to block the S-Channel error interrupt after one occurs.
 * Prevents monopolizing the CPU (use 0 to disable any blocking).
 */
#define spn_SCHAN_ERROR_BLOCK_USEC  "schan_error_block_usec"
/*
 * If miim_intr_enable variable is set to 1, the system will use
 * interrupts for MII operations since they take a while (70 usec or so).
 * If this variable is set to 0, polling will be used for all MII
 * operations.
 */
#define spn_MIIM_INTR_ENABLE  "miim_intr_enable"
/*
 * Limit the number of ARL messages/sec the software will process, to
 * keep it from hogging the CPU.  Set to 0 to disable.
 * Does not apply to L2X shadow table (see l2xmsg_thread_usec instead).
 */
#define spn_ARL_RATE_LIMIT  "arl_rate_limit"

/* MMU SDRAM configuration */
#define spn_MMU_SDRAM_ENABLE  "mmu_sdram_enable"
/*
 * Diagnostics loopback (tr 17 through tr 24) timeout in seconds for
 * loopback packet reception
 */
#define spn_DIAG_LB_PACKET_TIMEOUT  "diag_lb_packet_timeout"
/*
 * Diagnostics loopback - if set to TRUE, all receive buffers are filled
 * with 0xdeadbeef before DMAing into them.  It is slow, but then you will
 * know if loopback miscompares are due to skipped PCI writes.
 */
#define spn_DIAG_LB_FILL_RX  "diag_lb_fill_rx"

/* Packet watcher thread priority */
#define spn_DIAG_PW_THREAD_PRI  "diag_pw_thread_pri"
/*
 * When set to >= 68, packet watcher will run in truncating mode,
 * allocating smaller Rx buffers and accepting oversized packets on
 * all Rx DMA channels.
 */
#define spn_DIAG_PW_BUFFER_SIZE  "diag_pw_buffer_size"

/* Select memory tests run by cfapinit (default MT_PAT_FIVES and MT_PAT_AS) */
#define spn_CFAP_TESTS  "cfap_tests"
/*
 * If phy_enable is set to 0, all ports will use the null PHY driver.
 * This is useful for simulations on Quickturn.
 */
#define spn_PHY_ENABLE  "phy_enable"
/*
 * If phy_null_<port> is set to 1, the port will use the null PHY driver.
 * This is useful for configuring direct-connect GMII links such as the
 * chip-to-chip links on a 48-port board (example shown for 48 port board).
 */
#define spn_PHY_NULL  "phy_null"

/* If phy_simul_<port> is set to 1, the port will use the simulation. */
#define spn_PHY_SIMUL  "phy_simul"

/* Fiber vs. copper autodetection enable. */
#define spn_PHY_AUTOMEDIUM  "phy_automedium"
/*
 * Fiber vs. copper preference
 * When automedium is enabled, phy_fiber_pref indicates which medium to
 * prefer if BOTH are active.  Selects fiber (1) or copper (0).
 * When automedium is disabled, phy_fiber_pref indicates which medium to
 * use.  Selects fiber (1) or copper (0).
 */
#define spn_PHY_FIBER_PREF  "phy_fiber_pref"
/*
 *  Fiber de-glitch: some GBICs may cause a brief fiber energy detect
 *  when inserted, even without a link.  This could cause the copper link
 *  to be dropped, so an energy detect de-glitch is provided.  The
 *  phy_fiber_deglitch_usecs is the de-glitch time in usec. This is
 *  only applied to BCM5421S PHY device.
 */
#define spn_PHY_FIBER_DEGLITCH_USECS  "phy_fiber_deglitch_usecs"

/* Per-port parameter on maximum time to wait for PHY autoneg busy condition. */
#define spn_PHY_AUTONEG_TIMEOUT  "phy_autoneg_timeout"
#define spn_PHY_SERDES  "phy_serdes"
/*
 * Serdes Autonegotiation configuration
 * This per-port parameter specifies what will happen if autonegotiation is
 * on but the remote partner is not autonegotiating.  If the value is zero,
 * we will not link.  If the value is non-zero, we will link.
 */
#define spn_PHY_SERDES_AUTOS  "phy_serdes_autos"

/* This specifies the external PHY device is BCM5464S. */
#define spn_PHY_5464S  "phy_5464S"

/* This specifies the external PHY device is BCM5690. */
#define spn_PHY_5690  "phy_5690"

/* This specifies the external PHY device is BCM8706 and equivalent. */
#define spn_PHY_8706  "phy_8706"

/* This specifies the external PHY device is BCM8072 and equivalent. */
#define spn_PHY_8072  "phy_8072"

/* This specifies the external PHY device is BCM84740. */
#define spn_PHY_84740  "phy_84740"

/* This specifies the external PHY device is BCM84752. */
#define spn_PHY_84752  "phy_84752"

/* This specifies the external PHY device is BCM84753. */
#define spn_PHY_84753  "phy_84753"

/* This specifies the external PHY device is BCM84754. */
#define spn_PHY_84754  "phy_84754"

/* This specifies the external PHY device is BCM84064. */
#define spn_PHY_84064  "phy_84064"

/* Specify the physical lane number corresponding to the logical lane0 . */
#define spn_PHY_LANE0_L2P_MAP  "phy_lane0_l2p_map"

/* This controls the clause 72  enable(1), disable(0). */
#define spn_PHY_AN_C72  "phy_an_c72"

/* This controls the clause 74(FEC)  enable(1), disable(0). */
#define spn_PHY_AN_FEC  "phy_an_fec"

/* This controls the clause 73 auto-negotiation, enable(1), disable(0). */
#define spn_PHY_AN_C73  "phy_an_c73"
/*
 * This controls the clause 37 auto-negotiation.
 *  Disable cl37(0),
 *  Enable cl37_and_c37bam(1),
 *  Enable cl37_wo_c37bam(2).
 */
#define spn_PHY_AN_C37  "phy_an_c37"
/*
 * This config enables  TX FIFO RESET routine in Warpcore
 * firmware. The routine performs a targeted reset of the
 * tx_os8_fifo whenever the CL73 arbitration FSM enters
 * either the TX_DISABLE or the AN_GOOD_CHECK states.
 * When enabled this config applies to independent
 * channel mode when CL73 AN is enabled.
 * The config is relevant to Warpcore B0/C0/..
 * By default, the routine is disabled in firmware.
 */
#define spn_SERDES_AN_C73_TX_FIFO_RESET_ENABLE  "serdes_an_c73_tx_fifo_reset_enable"
/*
 * This controls whether to load the external ROM microcode to the
 *  applicable PHY devices, load(1), not load(0).
 */
#define spn_PHY_EXT_ROM_BOOT  "phy_ext_rom_boot"
/*
 * This controls whether to force firmware load during PHY init of
 *  applicable PHY devices, force (1), may skip load(0).
 */
#define spn_PHY_FORCE_FIRMWARE_LOAD  "phy_force_firmware_load"
/*
 * This indicates whether the long cable is used on the external PHY device
 *  with XFI interface, By default XFI cannot drive long distance cables.
 *  TX preemphasis needs to be adjusted if long cables are used on the XFI side.
 */
#define spn_PHY_LONG_XFI  "phy_long_xfi"

/* this controls half power mode for applicable PHY devices, enable(1), disable(0). */
#define spn_PHY_HALF_POWER  "phy_half_power"
/*
 * set BCM5488 family PHY to operate in class A/B low power mode.
 *  Accept value 0(lowest power) to 7(highest power).
 */
#define spn_PHY_LOW_POWER_MODE  "phy_low_power_mode"

/* indicate which port is the first port of the octal PHY. */
#define spn_PHY_OCTAL_PORT_FIRST  "phy_octal_port_first"
/*
 * Set the given XGXS control mode in independent channel mode for
 *  Hyperlite/Hypercore/Warpcore serdes. Valid value 4,5, and 6
 */
#define spn_PHY_HL65_1LANE_MODE  "phy_hl65_1lane_mode"
/*
 * phy53115_a0 sw-workaround for the link issue at AN+100TX mode.
 *     0 - disable this SW workaround.
 *     1 - enable this SW workaround.
 */
#define spn_PHY_53115_AN100TX_WAR  "phy_53115_an100tx_war"
/*
 * phy53115_b0 sw-workaround for the interoperability issue.
 *     0 - disable this SW workaround.
 *     1 - enable this SW workaround.
 * --- This SW-WAR also active for fixing bcm53118_a0 at IOP problem.
 */
#define spn_PHY_53115_B0_IOP_WAR  "phy_53115_b0_iop_war"
/*
 * Specify switch port on BCM8040. The switch port is the port
 *  connecting to MAC side device.
 */
#define spn_PHY_8040_SWITCH_PORT  "phy_8040_switch_port"

/* Specify mux port0 on BCM8040. A mux port will connect to another PHY device. */
#define spn_PHY_8040_MUX_PORT0  "phy_8040_mux_port0"

/* Specify mux port1 on BCM8040. A mux port will connect to another PHY device. */
#define spn_PHY_8040_MUX_PORT1  "phy_8040_mux_port1"
/*
 * Specify mux port2 on BCM8040. A mux port will connect to another PHY device.
 * The port is treated as invalid if there is no PHY device connecting to
 */
#define spn_PHY_8040_MUX_PORT2  "phy_8040_mux_port2"

/* Specify 53314 PHY device operating frequency as 156.25MHz. */
#define spn_PHY_53314_CLK156  "phy_53314_clk156"

/* Specify the external PHY device uses I2C bus instead of MDIO bus */
#define spn_PHY_BUS_I2C  "phy_bus_i2c"

/* Specify the external PHY device is a copper SFP PHY */
#define spn_PHY_COPPER_SFP  "phy_copper_sfp"

/* The PHY has a fiber medium in addition to a copper medium */
#define spn_PHY_FIBER_CAPABLE  "phy_fiber_capable"
/*
 * Bypass the PCS retimer function to provide better latency.
 * However it requires a more clean input clock than in retimer mode
 */
#define spn_PHY_PCS_REPEATER  "phy_pcs_repeater"

/* Specify the sytem side interface to be configured for the PHY */
#define spn_PHY_SYS_INTERFACE  "phy_sys_interface"

/* Specify tx disable to not be wired to LPMODE pin from the PHY to the cage */
#define spn_PHY_TX_DISABLE_NO_LPMODE  "phy_tx_disable_no_lpmode"

/* gig port i/o voltage control on BCM5615 and similar devices */
#define spn_GIG_IOV  "gig_iov"

/* Force the port into TBI(10-bit interface) mode */
#define spn_IF_TBI  "if_tbi"

/* Set 10G+ stack ports to default to B5632 encapsulation instead of Higig format */
#define spn_BCM5632_MODE  "bcm5632_mode"

/* Reset meters for 10/100Mb ports during initialization */
#define spn_BCM_METER_CLEAR_FE  "bcm_meter_clear_fe"

/* Reset meters for 1000Mb ports during initialization */
#define spn_BCM_METER_CLEAR_GE  "bcm_meter_clear_ge"

/* Reset meters for 10GE ports during initialization */
#define spn_BCM_METER_CLEAR_XE  "bcm_meter_clear_xe"
/*
 * Fusion/Uni core preemphasis, driver current and  pre-driver current
 * values 0-15 (can be changed per-port)
 */
#define spn_XGXS_PREEMPHASIS  "xgxs_preemphasis"

/* Configure the given driver current value for applicable XGXS serdes devices. */
#define spn_XGXS_DRIVER_CURRENT  "xgxs_driver_current"

/* Configure the given pre driver current value for applicable XGXS serdes devices. */
#define spn_XGXS_PRE_DRIVER_CURRENT  "xgxs_pre_driver_current"

/* Fusion PLL lock range value 0-15 (can be changed per-port) */
#define spn_XGXS_PLLLOCK  "xgxs_plllock"

/* Set the specific RX equalizer control value for applicable XGXS devices */
#define spn_XGXS_EQUALIZER  "xgxs_equalizer"
/*
 * Set the specific offset which is part of RX equalizer control value
 *  for applicable XGXS devices
 */
#define spn_XGXS_OFFSET  "xgxs_offset"

/* Use crystal input for LCPLL */
#define spn_XGXS_LCPLL_XTAL_REFCLK  "xgxs_lcpll_xtal_refclk"

/* Use crystal input for WCPLL */
#define spn_XGXS_WCPLL_XTAL_REFCLK  "xgxs_wcpll_xtal_refclk"

/* Use crystal input for QGPLL */
#define spn_XGXS_QGPLL_XTAL_REFCLK  "xgxs_qgpll_xtal_refclk"

/* phy pll divider */
#define spn_XGXS_PHY_PLL_DIVIDER  "xgxs_phy_pll_divider"

/* phy oversample mode */
#define spn_XGXS_PHY_OVERSAMPLE_MODE  "xgxs_phy_oversample_mode"
/*
 * Fusion core reference clock selection
 *  External Clock = 0, Internal LCPLL = 1
 */
#define spn_XGXS_LCPLL  "xgxs_lcpll"
/*
 * this property is for debug and diagnostic purpose.
 * byte0:
 * 0: not loading WC firmware
 * 1: load from MDIO. default method.
 * 2: load from parallel bus if applicable. Provide fast downloading time
 *  
 * byte1:
 * 0: inform uC not to perform checksum calculation(default). Save ~70ms for WC init time
 * 1: inform uC to perform checksum calculation. 
 */
#define spn_LOAD_FIRMWARE  "load_firmware"

/* Fusion core LCPLL clock speed selection - 10Gbps = 0, 12Gbps = 1 */
#define spn_XGXS_LCPLL_12GBPS  "xgxs_lcpll_12gbps"

/* Unicore 10G parallel detect (10/12 Gbps legacy speed detection) */
#define spn_XGXS_PDETECT_10G  "xgxs_pdetect_10g"

/* Remap XGXS tx lanes to desired mapping. See xgxs_rx_lane_map */
#define spn_XGXS_TX_LANE_MAP  "xgxs_tx_lane_map"
/*
 * Remap XGXS rx lanes to desired mapping. Four bits were used for
 * specifying each lane in the format of Lane 0 (bit 15-12), Lane 1 (bit 11-8),
 * lane 2 (bit 7-4), and lane 3 (bit 3-0).
 * For example, to reverse the rx lane mapping in 3, 2, 1, 0 order,
 * set xgxs_rx_lane_map=0x3210.
 * However for Warpcore serdes device, the format is in reversed order, that is,  
 * Lane 3 (bit 15-12), Lane 2 (bit 11-8),lane 1 (bit 7-4), and lane 0 (bit 3-0),
 * The example above will be: set xgxs_rx_lane_map=0x0123.
 */
#define spn_XGXS_RX_LANE_MAP  "xgxs_rx_lane_map"
/*
 * Remap ESM serdes tx lanes to desired mapping.
 * Four bits were used for specifying each lane in the 
 * format of Lane 3 (bit 15-12), Lane 2 (bit 11-8),
 * lane 1 (bit 7-4), and lane 0 (bit 3-0).
 * For ex: To reverse the rx lane mapping in 0-1-2-3 order,
 * set esm_serdes_tx_lane_map_core0=0x0123.
 * set esm_serdes_tx_lane_map_core1=0x0123, for core1 and so on
 */
#define spn_ESM_SERDES_TX_LANE_MAP  "esm_serdes_tx_lane_map"
/*
 * Remap ESM serdes rx lanes to desired mapping.
 * Four bits were used for specifying each lane in the 
 * format of Lane 3 (bit 15-12), Lane 2 (bit 11-8),
 * lane 1 (bit 7-4), and lane 0 (bit 3-0).
 * For ex: To reverse the rx lane mapping in 0-1-2-3 order,
 * set esm_serdes_rx_lane_map_core0=0x0123.
 * set esm_serdes_rx_lane_map_core1=0x0123, for core1 and so on
 */
#define spn_ESM_SERDES_RX_LANE_MAP  "esm_serdes_rx_lane_map"
/*
 * Select a serdes for master clock source among/for a group of
 * serdes devices
 * For ex: set esm_serdes_master_clk_src=2, to select 3rd serdes(0,1,->2<-)
 */
#define spn_ESM_SERDES_MASTER_CLK_SRC  "esm_serdes_master_clk_src"
/*
 * Serdes reference clock selection External Clock = 0,
 *  Internal LCPLL = 1
 */
#define spn_SERDES_LCPLL  "serdes_lcpll"

/* Serdes core preemphasis. values 0-15 (can be changed per-port) */
#define spn_SERDES_PREEMPHASIS  "serdes_preemphasis"

/* Serdes core pre-driver current. values 0-15 (can be changed per-port) */
#define spn_SERDES_PRE_DRIVER_CURRENT  "serdes_pre_driver_current"

/* Serdes core driver current. values 0-15 (can be changed per-port) */
#define spn_SERDES_DRIVER_CURRENT  "serdes_driver_current"

/* Serdes core post 2 driver current. values 0-15 (can be changed per-port) */
#define spn_SERDES_POST2_DRIVER_CURRENT  "serdes_post2_driver_current"

/* Serdes micro controller firmware mode */
#define spn_SERDES_FIRMWARE_MODE  "serdes_firmware_mode"

/* Serdes scrambler enable */
#define spn_SERDES_SCRAMBLER_ENABLE  "serdes_scrambler_enable"

/* Serdes over sampling mode */
#define spn_SERDES_OS_MODE  "serdes_os_mode"

/* Serdes enocde mode */
#define spn_SERDES_ENC_MODE  "serdes_enc_mode"

/* Serdes PLL divider value */
#define spn_SERDES_PLL_DIV  "serdes_pll_div"

/* Serdes number of lanes per port */
#define spn_SERDES_NUM_LANE  "serdes_num_lane"
/*
 * Configure signal auto-detection between SGMII and fiber
 *  Note this only works when auto-negotiation is enabled.
 */
#define spn_SERDES_AUTOMEDIUM  "serdes_automedium"

/* This manually select the port interface type like SFI, XFI, GMII, SGMII, XAUI, XLAUI */
#define spn_SERDES_IF_TYPE  "serdes_if_type"

/* This manually selects either fiber or SGMII when auto-detection is off */
#define spn_SERDES_FIBER_PREF  "serdes_fiber_pref"

/* switch serdes SGMII master/slave mode configuration.  Default is slave. */
#define spn_SERDES_SGMII_MASTER  "serdes_sgmii_master"
/*
 * In QSGMII serdes, this overrides the SGMII/QSGMII mode
 *  0 = HW default (OTP/Strap Selected) , 1 = QSGMII, 2 = SGMII. 
 */
#define spn_SERDES_QSGMII_SGMII_OVERRIDE  "serdes_qsgmii_sgmii_override"

/* Enable/disable two lane XAUI interface on applicable serdes devices */
#define spn_SERDES_2WIRE_XAUI  "serdes_2wire_xaui"

/* Enable serdes Loss Of Signal(LOS) function. 0 disable, 1 enable */
#define spn_SERDES_RX_LOS  "serdes_rx_los"

/* Invert serdes LOS signal level. 0 not invert, 1 invert */
#define spn_SERDES_RX_LOS_INVERT  "serdes_rx_los_invert"

/* Enable Asymmetric fixed speed mode. 1 enable */
#define spn_SERDES_ASYMMETRIC_SPEED_MODE  "serdes_asymmetric_speed_mode"

/* Serdes pcs speed HTO pma over sample mode */
#define spn_SERDES_PCS_SPEED_HTO_PMA_OS  "serdes_pcs_speed_hto_pma_os"

/* Serdes pcs speed HTO scramble mode */
#define spn_SERDES_PCS_SPEED_HTO_SCR_MODE  "serdes_pcs_speed_hto_scr_mode"

/* Serdes pcs speed HTO encode mode */
#define spn_SERDES_PCS_SPEED_HTO_ENCODE_MODE  "serdes_pcs_speed_hto_encode_mode"

/* Serdes pcs speed HTO CL48 checkend mode */
#define spn_SERDES_PCS_SPEED_HTO_CL48_CHECK_END  "serdes_pcs_speed_hto_cl48_check_end"

/* Serdes pcs speed HTO block sync mode */
#define spn_SERDES_PCS_SPEED_HTO_BLK_SYNC_END  "serdes_pcs_speed_hto_blk_sync_end"

/* Serdes pcs speed HTO reorder mode */
#define spn_SERDES_PCS_SPEED_HTO_REORDER_MODE  "serdes_pcs_speed_hto_reorder_mode"

/* Serdes pcs speed HTO cl36 enable mode */
#define spn_SERDES_PCS_SPEED_HTO_CL36_EN  "serdes_pcs_speed_hto_cl36_en"

/* Serdes pcs speed HTO descramble reg1 mode */
#define spn_SERDES_PCS_SPEED_HTO_DESCR1_MODE  "serdes_pcs_speed_hto_descr1_mode"

/* Serdes pcs speed HTO decode reg1 mode */
#define spn_SERDES_PCS_SPEED_HTO_DEC1_MODE  "serdes_pcs_speed_hto_dec1_mode"

/* Serdes pcs speed HTO deskew mode */
#define spn_SERDES_PCS_SPEED_HTO_DESKEW_MODE  "serdes_pcs_speed_hto_deskew_mode"

/* Serdes pcs speed HTO descramble reg2 mode */
#define spn_SERDES_PCS_SPEED_HTO_DESC2_MODE  "serdes_pcs_speed_hto_desc2_mode"

/* Serdes pcs speed HTO descramble reg2 byte delete mode */
#define spn_SERDES_PCS_SPEED_HTO_DESC2_BYTE_DEL  "serdes_pcs_speed_hto_desc2_byte_del"

/* Serdes pcs speed HTO BRCM 64/66 descrmable mode */
#define spn_SERDES_PCS_SPEED_HTO_BRCM64B66_DESCR  "serdes_pcs_speed_hto_brcm64b66_descr"

/* Serdes pcs speed HTO SGMII mode */
#define spn_SERDES_PCS_SPEED_HTO_SGMII_MODE  "serdes_pcs_speed_hto_sgmii_mode"

/* Serdes pcs speed HTO clock counter0 value */
#define spn_SERDES_PCS_SPEED_HTO_CLKCNT0  "serdes_pcs_speed_hto_clkcnt0"

/* Serdes pcs speed HTO clock counter1 value */
#define spn_SERDES_PCS_SPEED_HTO_CLKCNT1  "serdes_pcs_speed_hto_clkcnt1"

/* Serdes pcs speed HTO loop counter0 value */
#define spn_SERDES_PCS_SPEED_HTO_LPCNT0  "serdes_pcs_speed_hto_lpcnt0"

/* Serdes pcs speed HTO loop counter1 value */
#define spn_SERDES_PCS_SPEED_HTO_LPCNT1  "serdes_pcs_speed_hto_lpcnt1"

/* Serdes pcs speed HTO MAC CGC value */
#define spn_SERDES_PCS_SPEED_HTO_MAC_CGC  "serdes_pcs_speed_hto_mac_cgc"

/* Serdes pcs speed HTO PCS repeat count */
#define spn_SERDES_PCS_SPEED_HTO_PCS_REPCNT  "serdes_pcs_speed_hto_pcs_repcnt"

/* Serdes pcs speed HTO PCS credit enable */
#define spn_SERDES_PCS_SPEED_HTO_PCS_CRDTEN  "serdes_pcs_speed_hto_pcs_crdten"

/* Serdes pcs speed HTO PCS clock count */
#define spn_SERDES_PCS_SPEED_HTO_PCS_CLKCNT  "serdes_pcs_speed_hto_pcs_clkcnt"

/* Serdes pcs speed HTO PCS CGC value */
#define spn_SERDES_PCS_SPEED_HTO_PCS_CGC  "serdes_pcs_speed_hto_pcs_cgc"

/* Serdes pcs speed HTO CL72 enable */
#define spn_SERDES_PCS_SPEED_HTO_CL72_ENABLE  "serdes_pcs_speed_hto_cl72_enable"

/* Enable different speed rates in the same serdes. 1 enable */
#define spn_SERDES_MIXED_RATE_ENABLE  "serdes_mixed_rate_enable"

/* Enable 1000X at 6.25G vco. default is running at 10.3125G  1 enable */
#define spn_SERDES_1000X_AT_6250_VCO  "serdes_1000x_at_6250_vco"
/*
 * Selects the primary L1 clock recovery port.
 * Choose a non-cpu port that does not have an external phy.
 */
#define spn_L1_PRIMARY_CLK_RECOVERY_PORT  "L1_primary_clk_recovery_port"
/*
 * Selects the backup L1 clock recovery port.
 * Choose a non-cpu port that does not have an external phy.
 */
#define spn_L1_BACKUP_CLK_RECOVERY_PORT  "L1_backup_clk_recovery_port"
/*
 * BCM5665L and BCM5666L support
 * The BCM5665L and BCM5666L device IDs are 0x5665, same as the BCM5665.
 * However, these devices do not support the upper 24 FE ports.
 * The following property must be used to invalidate them.
 */
#define spn_PBMP_VALID  "pbmp_valid"
/*
 * Configure the memory tests run during BCM5670 initialization
 * (using MT_PAT_* flags)
 */
#define spn_LLA_TESTS  "lla_tests"
#define spn_STACK_ENABLE  "stack_enable"
#define spn_STACK_SIMPLEX  "stack_simplex"

/* Stack master priority for stacking examples. */
#define spn_STACK_CPU_PRIORITY  "stack_cpu_priority"
/*
 * By default, 5670 will be configured to accept the maximum number of
 * packets per port, but may drop them if resources are oversubscribed due
 * to activity from other ports.  If lossless mode is enabled, 5670 will
 * instead be configured to accept packets only if sufficient processing
 * resources are guaranteed for all ports.  This may decrease overall
 * throughput, but no accepted packets will be dropped.
 */
#define spn_LOSSLESS_MODE  "lossless_mode"
/*
 * Allow a BCM5675 fabric device to mirror using the same method as
 * a BCM5670 fabric.
 */
#define spn_MIRROR_5670_MODE  "mirror_5670_mode"

/* Configure a BCM5675 fabric device to to operate with a 12G core clock. */
#define spn_CORE_CLOCK_12G  "core_clock_12G"
/*
 * BCM5675 HOL blocking avoidance mode (jitter and hysteresis)
 * Set this to 1 to enable jitter for comparing low cell/packet count thresholds
 */
#define spn_MMU_HOL_JITTER  "mmu_hol_jitter"

/* Set this to 1 to enable hysteresis with recommended default low thresholds */
#define spn_MMU_HOL_HYSTERESIS  "mmu_hol_hysteresis"

/* Specify IEEE MII reset timeout value for copper PHY devices */
#define spn_PHY_RESET_TIMEOUT  "phy_reset_timeout"
/*
 * 24c64 EEPROM and XFP share the same I2C slave address. Set this to
 * 1 to treat the device found at this slave address as XFP.
 */
#define spn_I2C_NVRAM_SKIP  "i2c_nvram_skip"
/*
 * PCF8574 lpt2 and LTC4258 poe3 share the same I2C slave address. Set
 * this to 1 to treat the device found at this slave address as POE.
 */
#define spn_I2C_HCLK_SKIP  "i2c_hclk_skip"
/*
 * PD63000 init power setting. Set this to 1 for 100W; otherwise
 * default of 37W is used.
 */
#define spn_I2C_POE_POWER  "i2c_poe_power"
/*
 * The maximum wait time for a I2C transaction to complete in
 * interrupt-driven mode.
 */
#define spn_I2C_TIMEOUT_USEC  "i2c_timeout_usec"

/* Swap XGXS device tx lane 0, 1, 2, 3 to lane 3, 2, 1, 0 on 10G PHYs */
#define spn_PHY_XAUI_TX_LANE_SWAP  "phy_xaui_tx_lane_swap"

/* Swap XGXS device rx lane 0, 1, 2, 3 to lane 3, 2, 1, 0 on 10G PHYs */
#define spn_PHY_XAUI_RX_LANE_SWAP  "phy_xaui_rx_lane_swap"

/* Swap MLD lane tx lane 0 through 23 */
#define spn_MLD_LANE_SWAP  "mld_lane_swap"

/* specify port ot run at pcs bypass or not */
#define spn_PHY_PCS_BYPASS  "phy_pcs_bypass"

/* specify rxaui mode */
#define spn_SERDES_RXAUI_MODE  "serdes_rxaui_mode"

/* To disable the logic of proxy removal */
#define spn_SERDES_USE_PROXY_REMOVAL  "serdes_use_proxy_removal"

/* To set customers specific alignment marker */
#define spn_SERDES_PCS_20G_ALIGNMENT_MARKER_RESERVED  "serdes_pcs_20g_alignment_marker_reserved"
/*
 * Flip XAUI lane TX polarity on applicable serdes devices
 * value of 1 - Flip TX polarity on all lane(s) of the port.
 * value of 0x000F - Flip TX polarity on lane 0.
 * value of 0x00F0 - Flip TX polarity on lane 1.
 * value of 0x0F00 - Flip TX polarity on lane 2.
 * value of 0xF000 - Flip TX polarity on lane 3.
 */
#define spn_PHY_XAUI_TX_POLARITY_FLIP  "phy_xaui_tx_polarity_flip"

/* Flip XAUI lane RX polarity. See phy_xaui_tx_polarity_flip for values */
#define spn_PHY_XAUI_RX_POLARITY_FLIP  "phy_xaui_rx_polarity_flip"
/*
 * Flip PHY lane TX polarity on applicable PHY devices
 * value of 1 - Flip TX polarity on all lane(s) of the port.
 * value of 0x000F - Flip TX polarity on lane 0.
 * value of 0x00F0 - Flip TX polarity on lane 1.
 * value of 0x0F00 - Flip TX polarity on lane 2.
 * value of 0xF000 - Flip TX polarity on lane 3.
 */
#define spn_PHY_TX_POLARITY_FLIP  "phy_tx_polarity_flip"

/* Flip PHY lane RX polarity. See phy_tx_polarity_flip for values */
#define spn_PHY_RX_POLARITY_FLIP  "phy_rx_polarity_flip"

/* Flip PCS lane TX polarity. See phy_xaui_tx_polarity_flip for values */
#define spn_PHY_PCS_TX_POLARITY_FLIP  "phy_pcs_tx_polarity_flip"

/* Flip PCS lane RX polarity. See phy_xaui_tx_polarity_flip for values */
#define spn_PHY_PCS_RX_POLARITY_FLIP  "phy_pcs_rx_polarity_flip"
/*
 * Flip ESM serdes lane TX polarity.
 * Each lane is represented by a single bit.
 * For ex: Bit0 represents Lane0, Bit1 represents Lane1
 * value of 0x0001 - Flip TX polarity on lane 0.
 * value of 0x0002 - Flip TX polarity on lane 1.
 * value of 0x0004 - Flip TX polarity on lane 2.
 * value of 0x0008 - Flip TX polarity on lane 3.
 * value of 0x000f - Flip TX polarity on lane 3,2,1,0.
 */
#define spn_ESM_SERDES_TX_POLARITY_FLIP  "esm_serdes_tx_polarity_flip"
/*
 * Flip ESM serdes lane RX polarity.
 * Each lane is represented by a single bit.
 * For ex: Bit0 represents Lane0, Bit1 represents Lane1
 * value of 0x0001 - Flip RX polarity on lane 0.
 * value of 0x0002 - Flip RX polarity on lane 1.
 * value of 0x0004 - Flip RX polarity on lane 2.
 * value of 0x0008 - Flip RX polarity on lane 3.
 * value of 0x000f - Flip TX polarity on lane 3,2,1,0.
 */
#define spn_ESM_SERDES_RX_POLARITY_FLIP  "esm_serdes_rx_polarity_flip"

/* Transform CX4 pinout to Higig pinout on 5650x/5660x */
#define spn_CX4_TO_HIGIG  "cx4_to_higig"
/*
 * Set serdes device CX4 mode or Higig mode for 10G speed. 
 * Value TRUE is CX4 mode, FALSE is Higig mode.
 */
#define spn_10G_IS_CX4  "10g_is_cx4"

/* Control Active Laser Loss of light level. */
#define spn_FORCE_OPTRXLOSLVL  "force_optrxloslvl"
/*
 * The following optical controls manage to force various PHY signal on
 * BCM8703/4/5
 * Control Active Optical Enable output level.
 */
#define spn_FORCE_OPTTXENBLVL  "force_opttxenblvl"

/* Control Active Optical Reset output level. */
#define spn_FORCE_OPTTXRSTLVL  "force_opttxrstlvl"

/* Control Active Laser Bias Fault level. */
#define spn_FORCE_OPTBIASFLTLVL  "force_optbiasfltlvl"

/* Control Active Temperature level. */
#define spn_FORCE_OPTTEMPFLTLVL  "force_opttempfltlvl"

/* Control Active Laser Power Fault level. */
#define spn_FORCE_OPTPRFLTLVL  "force_optprfltlvl"

/* Control Active TX fault level. */
#define spn_FORCE_OPTTXFLLVL  "force_opttxfllvl"

/* Control Active RX fault level. */
#define spn_FORCE_OPTRXFLTLVL  "force_optrxfltlvl"

/* Control Active TX on level. */
#define spn_FORCE_OPTTXONLVL  "force_opttxonlvl"
/*
 * BCM5665 family debug mode - bypass MCU, allows diagnostics such as
 * loopback to be run without initializing the MCU (but requires small
 * packet sizes and counts).
 */
#define spn_BYPASS_MCU  "bypass_mcu"
/*
 * Allow external MDIO master access.  Otherwise, the switch device
 * is the MDIO master.
 */
#define spn_MDIO_EXTERNAL_MASTER  "mdio_external_master"
/*
 * Per-port phy LED control values (currently only used by 546x phy driver)
 * see 546x phy data sheets:
 * ledN_mode are LED selector values from phy reg 0x1x[011101, 01110]
 * led_ctrl is phy reg 0x1x[01001]
 */
#define spn_PHY_LED1_MODE  "phy_led1_mode"

/* See description of phy_led1_mode */
#define spn_PHY_LED2_MODE  "phy_led2_mode"

/* See description of phy_led1_mode */
#define spn_PHY_LED3_MODE  "phy_led3_mode"

/* See description of phy_led1_mode */
#define spn_PHY_LED4_MODE  "phy_led4_mode"

/* Control the LED function on 546x phy device. */
#define spn_PHY_LED_CTRL  "phy_led_ctrl"

/* select the multi-color LED display pattern on 546x phy device. */
#define spn_PHY_LED_SELECT  "phy_led_select"
/*
 * Any LED programmed to linkspd(0) or linkspd(1) indicate 
 * the link and speed status of the copper interface. The 
 * phy has a feature that allows different interpretations 
 * of speed and link based on linkspd(0) and linkspd(1).
 * Use this config to select one of the following modes-
 * DEFAULT(0), LINK_LED_MODE(1) & LINK_SPEED_MODE(2)
 */
#define spn_PHY_LED_LINK_SPEED_MODE  "phy_led_link_speed_mode"
/*
 * Control the behavior of an LED in the phy to access 
 * the TOP_MISC_SPARE_REG_0 to set bit 1 for LOS signal.
 * Need to set bit 1 in this reg on the first port of the chip.
 */
#define spn_PHY_LED3_OUTPUT_DISABLE  "phy_led3_output_disable"
/*
 * Per-port control of fiber signal detection (for 546x phys)
 *     0    use the phy's default as signal detect
 *     1    use PECL SD as signal detect (default on 5461)
 *     4    use LED4 as signal detect (default on 5464)
 * 10    use EN_10B as signal detect
 * Negating value treats signal detect as loss of signal without
 * needing an external inverter on the board
 */
#define spn_PHY_FIBER_DETECT  "phy_fiber_detect"
/*
 * MCU properties are available to tune DDR memory interfaces on devices
 * with external packet buffers.  The device value controlled by each
 * property is indicated in that property.  Note that such devices
 * typically have multiple channels to the packet buffer memory, so these
 * properties may be configured with the base name to control all channels,
 * or with the suffix "_ch#" to configure a specific channel.
 * A channel-specific property value will override an existing non-channel
 * value for the appropriate channel.
 * Please refer to the device documentation for additional details.
 */

/* BCM566x/5x: MCU_CHN#_MODE.DRV_STR_0 */
#define spn_MCU_DRV_STR0  "mcu_drv_str0"

/* BCM566x/5x: MCU_CHN#_MODE.DRV_STR_1 */
#define spn_MCU_DRV_STR1  "mcu_drv_str1"

/* BCM566x/5x: MCU_CHN#_PAD_CTL.DATA_CLASS_2 */
#define spn_MCU_PAD_DATA_CLASS2  "mcu_pad_data_class2"

/* BCM566x/5x: MCU_CHN#_PAD_CTL.DATA_PAD_DRIVE */
#define spn_MCU_PAD_DATA_DRIVE  "mcu_pad_data_drive"

/* BCM566x/5x: MCU_CHN#_PAD_CTL.DATA_PAD_SLEW */
#define spn_MCU_PAD_DATA_SLEW  "mcu_pad_data_slew"

/* BCM566x/5x: MCU_CHN#_PAD_CTL.ADDR_CLASS_2 */
#define spn_MCU_PAD_ADDR_CLASS2  "mcu_pad_addr_class2"

/* BCM566x/5x: MCU_CHN#_PAD_CTL.ADDR_PAD_DRIVE */
#define spn_MCU_PAD_ADDR_DRIVE  "mcu_pad_addr_drive"

/* BCM566x/5x: MCU_CHN#_PAD_CTL.ADDR_PAD_SLEW */
#define spn_MCU_PAD_ADDR_SLEW  "mcu_pad_addr_slew"

/* BCM566x/5x: MCU_CHN#_DELAY_CTL.DQI_ADJ_DIR */
#define spn_MCU_DELAY_DQI_ADJ_DIR  "mcu_delay_dqi_adj_dir"

/* BCM566x/5x: MCU_CHN#_DELAY_CTL.DQI_ADJ_VAL */
#define spn_MCU_DELAY_DQI_ADJ_VAL  "mcu_delay_dqi_adj_val"

/* BCM566x/5x: MCU_CHN#_DELAY_CTL.ADDR_ADJ_DIR */
#define spn_MCU_DELAY_ADDR_ADJ_DIR  "mcu_delay_addr_adj_dir"

/* BCM566x/5x: MCU_CHN#_DELAY_CTL.ADDR_ADJ_VAL */
#define spn_MCU_DELAY_ADDR_ADJ_VAL  "mcu_delay_addr_adj_val"

/* BCM5665 MCU 16bit DDR configuration */
#define spn_MCU_16BIT_DDR  "mcu_16bit_ddr"

/* Default speed that the port will initialize with */
#define spn_PORT_INIT_SPEED  "port_init_speed"

/* overwrite the default port max speed */
#define spn_PORT_MAX_SPEED  "port_max_speed"

/* Default duplex mode the port will initialize with */
#define spn_PORT_INIT_DUPLEX  "port_init_duplex"

/* Default local advertisement settings for a port */
#define spn_PORT_INIT_ADV  "port_init_adv"

/* Default auto negotiation state of the port */
#define spn_PORT_INIT_AUTONEG  "port_init_autoneg"

/* PHY address of a port. Used also to specify the MDIO address of non-switching interfaces, such as external tcams in the format port_phy_addr_ext_tcam# */
#define spn_PORT_PHY_ADDR  "port_phy_addr"

/* First part of a uniqe PHY identifier, if not specified in register */
#define spn_PORT_PHY_ID0  "port_phy_id0"

/* Second part of a uniqe PHY identifier, if not specified in register */
#define spn_PORT_PHY_ID1  "port_phy_id1"

/* Configures 3 additional MDIO addresses for the mux port with 8040 type phy */
#define spn_PORT_PHY_ADDR1  "port_phy_addr1"

/* MDIO Bus Property to select the MDIO access mechanism (CLAUSE22 / CLAUSE45) */
#define spn_PORT_PHY_CLAUSE  "port_phy_clause"
/*
 * This controls whether to precondition this port 
 * before probing of PHY on this port for 
 * applicable PHY devices, precondition(1)/not(0).
 */
#define spn_PORT_PHY_PRECONDITION_BEFORE_PROBE  "port_phy_precondition_before_probe"

/* Enable MAC to check 802.3 frame length field */
#define spn_MAC_LENGTH_CHECK_ENABLE  "mac_length_check_enable"
/*
 * L2 table is DMAed into memory to search for entries to delete
 * when no hardware assists are available.  DMA is done in smaller
 * parts to minimize memory use.  Must be port of 2.
 */
#define spn_L2DELETE_CHUNKS  "l2delete_chunks"

/* Size of chunks to read at once while iterating over VLAN XLATE memory */
#define spn_VLANDELETE_CHUNKS  "vlandelete_chunks"
/*
 * BCM5665 family filter sizes
 * The FE port filters on 5665/50/55 may be configured for two mask/rule sizes
 * 256 rules and 16 masks (default)
 * 128 rules and 24 masks
 * Use this to select the 128/24 configuration for the chip.
 */
#define spn_FILTER_RESIZE  "filter_resize"
/*
 * Spread the XQs across all CoSqs as dictated by the weight properties.
 * This will allow use of all CoSqs. However, if some CoSqs are later
 * disabled, the XQs allocated here to those disabled CoSQs will be
 * unavailable for use.
 * This property configures all CoSq identically.  To specify the value
 * for a single CoSq, use the suffix "_cos#".  A CoSq-specific value
 * will override an generic property value.
 */
#define spn_MMU_XQ_WEIGHT  "mmu_xq_weight"
/*
 * Configure per-XQ packet aging for the various CoSQs. The shortest age
 * allowed by H/W is 250 microseconds. The longest age allowed is 7.162
 * seconds (7162 msec). The maximum ratio between the longest age and
 * the shortest(nonzero) age is 7:2.
 * This property configures all CoSq identically.  To specify the value
 * for a single CoSq, use the suffix "_cos#".  A CoSq-specific value
 * will override an generic property value.
 */
#define spn_MMU_XQ_AGING  "mmu_xq_aging"
/*
 * On 568xx devices, the XPORT block defaults to XE ports.  Uncomment the
 * following line to change all ports to HG ports.  A specific bitmap
 * may be provided to select some XE and some HG ports, with the set
 * bits initialized to HG ports.  Note that HG and XE ports may be
 * exchanged through the bcm_port_encap_set API.
 */
#define spn_PBMP_XPORT_XE  "pbmp_xport_xe"
/*
 * Some BCM56xxx devices, such as the BCM568xx series, allow the XPORTs
 * to be configured as XE, HG, and GE ports.  XPORTs set in this bitmap
 * will be GE ports.
 */
#define spn_PBMP_XPORT_GE  "pbmp_xport_ge"
/*
 * Uncomment the following line instead to set all GE ports as regular
 * front panel Ethernet ports.
 */
#define spn_PBMP_GPORT_STACK  "pbmp_gport_stack"
/*
 * pbmp_loopback is used to specify if a HIGIG/HIGIG-LITE port is
 * configured as loopback port
 * Uncomment the following line instead to set all HIGIG/HIGIG-LITE ports as regular
 * front panel Ethernet ports.
 */
#define spn_PBMP_LOOPBACK  "pbmp_loopback"

/* Port bitmap for ports in oversubscribe mode */
#define spn_PBMP_OVERSUBSCRIBE  "pbmp_oversubscribe"
/*
 * Port bitmap for ports in LinkPHY channelization mode
 * For BCM56450 the ports in blocks [27,32,33,34] and
 * [28,29,30,31] can be member of this port bitmap.
 * For example, to set ports [27,32,33,34] in LinkPHY
 * channelization mode set pbmp_linkphy=0x708000000
 */
#define spn_PBMP_LINKPHY  "pbmp_linkphy"

/* Command memory controls */
#define spn_MEMCMD_TIMEOUT_USEC  "memcmd_timeout_usec"
#define spn_MEMCMD_INTR_ENABLE  "memcmd_intr_enable"
#define spn_IPFIX_INTR_ENABLE  "ipfix_intr_enable"
#define spn_FLOW_TRACKER_INTR_ENABLE  "flow_tracker_intr_enable"
#define spn_L2MOD_DMA_INTR_ENABLE  "l2mod_dma_intr_enable"
/*
 * ER_SEER_CFG_NO_EXT
 * ER_SEER_CFG_L2_512_EXT
 * ER_SEER_CFG_LPM_256_EXT
 * ER_SEER_CFG_L4_192_EXT
 * ER_SEER_CFG_L4_96_EXT
 * ER_SEER_CFG_LPM_256_L4_128_EXT
 * ER_SEER_CFG_LPM_384_L4_64_EXT
 * ER_SEER_CFG_LPM_128_L4_64_EXT
 * ER_SEER_CFG_LPM_192_L4_32_EXT
 * ER_SEER_CFG_LPM_448_EXT
 * ER_SEER_CFG_LPM_896_EXT
 */
#define spn_SEER_EXT_TABLE_CFG  "seer_ext_table_cfg"

/* External TCAM type */
#define spn_SEER_EXT_TCAM_SELECT  "seer_ext_tcam_select"

/* All V6 */
#define spn_SEER_HOST_HASH_TABLE_CFG  "seer_host_hash_table_cfg"

/* All MYSTATION */
#define spn_SEER_MVL_HASH_TABLE_CFG  "seer_mvl_hash_table_cfg"

/* HSE tuning parameters generated by extt command */
#define spn_SEER_HSE_EM_LATENCY7  "seer_hse_em_latency7"

/* CSE tuning parameters generated by extt command */
#define spn_SEER_CSE_EM_LATENCY7  "seer_cse_em_latency7"
/*
 * 8704 and 8705 XFP clock
 * 8704 and 8705 can provide the clock for the XFPs (thus eliminating the need
 * for an external clock. By default we enable it, but if you are not using it,
 * it should be disabled.
 */
#define spn_PHY_XFP_CLOCK  "phy_xfp_clock"
/*
 * Per-port parameter indicating the only PHY is 56XXX SERDES directly
 * connected to a fiber module.  This is needed on boards which have
 * resistors configuration to bypass external 5434/5464.
 * SERDES is used automatically if no PHY is detected on the MDIO.
 */
#define spn_PHY_56XXX  "phy_56xxx"

/* Enable Loss Of Signal(LOS) function. 0 disable, 1 enable */
#define spn_PHY_RX_LOS  "phy_rx_los"

/* Invert PHYs LOS signal level. 0 not invert, 1 invert */
#define spn_PHY_RX_LOS_INVERT  "phy_rx_los_invert"

/* Enable the module absent signalling function. 0 disable, 1 enable */
#define spn_PHY_MOD_ABS  "phy_mod_abs"

/* Invert PHYs MOD_ABS signal level. 0 not invert, 1 invert */
#define spn_PHY_MOD_ABS_INVERT  "phy_mod_abs_invert"
/*
 * Enable module auto detection for devices that are able to detect
 * when a module is inserted or removed. 0 disable, 1 enable
 */
#define spn_PHY_MOD_AUTO_DETECT  "phy_mod_auto_detect"
#define spn_TCAM_RESET_USEC  "tcam_reset_usec"
/*
 * On BCM5660x devices, track end-to-end flow control on 64 modules of
 * 16 ports, instead of 32 modules of 32 ports.
 */
#define spn_E2E_64_MODULES  "e2e_64_modules"

/* Timeout value in microseconds for BCM5660x search engine initialization */
#define spn_SEER_INIT_TIMEOUT_USEC  "seer_init_timeout_usec"

/* Control to disable parity messages */
#define spn_PARITY_ENABLE  "parity_enable"

/* Control to disable parity correction */
#define spn_PARITY_CORRECTION  "parity_correction"

/* Control to clear or restore(last value accumulated in s/w) counter on parity error */
#define spn_PARITY_COUNTER_CLEAR  "parity_counter_clear"

/* Set BCM5660x external packet buffer to 500 MHz instead of 600 MHz */
#define spn_PLL600_SLOWCLK  "pll600_slowclk"

/* For MCU Channel 0 only (0x2 for Channel 1 only) */
#define spn_MCU_CHANNEL_BITMAP  "mcu_channel_bitmap"

/* BCM5660x: MCU_CHN#_TIMING_32.TCRD */
#define spn_MCU_TCRD  "mcu_tcrd"

/* BCM5660x: MCU_CHN#_TIMING_32.TCWD */
#define spn_MCU_TCWD  "mcu_tcwd"

/* BCM5660x: MCU_CHN#_TIMING_32.TWL */
#define spn_MCU_TWL  "mcu_twl"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_DLL90_OFFSET_TX  "mcu_dll90_offset_tx"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_DLL90_OFFSET3  "mcu_dll90_offset3"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_DLL90_OFFSET2  "mcu_dll90_offset2"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_DLL90_OFFSET1  "mcu_dll90_offset1"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_DLL90_OFFSET0_QK  "mcu_dll90_offset0_qk"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_DLL90_OFFSET_QKB  "mcu_dll90_offset_qkb"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_OVRD_SM_EN  "mcu_ovrd_sm_en"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_PHASE_SEL  "mcu_phase_sel"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_SEL_EARLY2_3  "mcu_sel_early2_3"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_SEL_EARLY1_3  "mcu_sel_early1_3"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_SEL_EARLY2_2  "mcu_sel_early2_2"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_SEL_EARLY1_2  "mcu_sel_early1_2"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_SEL_EARLY2_1  "mcu_sel_early2_1"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_SEL_EARLY1_1  "mcu_sel_early1_1"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_SEL_EARLY2_0  "mcu_sel_early2_0"

/* MCU tuning parameters generated by extt command */
#define spn_MCU_SEL_EARLY1_0  "mcu_sel_early1_0"
/*
 * This setting may be used to change the number of LPM entries caches
 * when performing traversals of the tables.  Increasing this number
 * uses more memory for increased speed.
 */
#define spn_SEER_LPM_TRAVERSE_ENTRIES  "seer_lpm_traverse_entries"
/*
 * The maximum number of MMU/MCU initialization failures allowed before
 * aborting on XGS devices with external packet buffers.
 */
#define spn_MMU_RESET_TRIES  "mmu_reset_tries"
/*
 * The number of MMU DLL lock checks performed to insure that the interface
 * is stable on XGS devices with external packet buffers.
 */
#define spn_MMU_PLL_LOCK_TESTS  "mmu_pll_lock_tests"
#define spn_MCU_ODT_IMP_ENABLE  "mcu_odt_imp_enable"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_DLL90_OFFSET_TX  "ddr72_dll90_offset_tx"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_DLL90_OFFSET3  "ddr72_dll90_offset3"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_DLL90_OFFSET2  "ddr72_dll90_offset2"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_DLL90_OFFSET1  "ddr72_dll90_offset1"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_DLL90_OFFSET0_QK  "ddr72_dll90_offset0_qk"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_DLL90_OFFSET_QKB  "ddr72_dll90_offset_qkb"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_OVRD_SM_EN  "ddr72_ovrd_sm_en"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_PHASE_SEL  "ddr72_phase_sel"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_SEL_EARLY2_3  "ddr72_sel_early2_3"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_SEL_EARLY1_3  "ddr72_sel_early1_3"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_SEL_EARLY2_2  "ddr72_sel_early2_2"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_SEL_EARLY1_2  "ddr72_sel_early1_2"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_SEL_EARLY2_1  "ddr72_sel_early2_1"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_SEL_EARLY1_1  "ddr72_sel_early1_1"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_SEL_EARLY2_0  "ddr72_sel_early2_0"

/* HSE tuning parameters generated by extt command */
#define spn_DDR72_SEL_EARLY1_0  "ddr72_sel_early1_0"

/* CSE tuning parameters generated by extt command */
#define spn_QDR36_DLL90_OFFSET_TX  "qdr36_dll90_offset_tx"

/* CSE tuning parameters generated by extt command */
#define spn_QDR36_DLL90_OFFSET_QK  "qdr36_dll90_offset_qk"

/* CSE tuning parameters generated by extt command */
#define spn_QDR36_DLL90_OFFSET_QKB  "qdr36_dll90_offset_qkb"

/* CSE tuning parameters generated by extt command */
#define spn_QDR36_OVRD_SM_EN  "qdr36_ovrd_sm_en"

/* CSE tuning parameters generated by extt command */
#define spn_QDR36_PHASE_SEL  "qdr36_phase_sel"

/* CSE tuning parameters generated by extt command */
#define spn_QDR36_SEL_EARLY2_1  "qdr36_sel_early2_1"

/* CSE tuning parameters generated by extt command */
#define spn_QDR36_SEL_EARLY1_1  "qdr36_sel_early1_1"

/* CSE tuning parameters generated by extt command */
#define spn_QDR36_SEL_EARLY2_0  "qdr36_sel_early2_0"

/* CSE tuning parameters generated by extt command */
#define spn_QDR36_SEL_EARLY1_0  "qdr36_sel_early1_0"

/* BCAM tuning */
#define spn_SEER_TUNNEL_SAM  "seer_tunnel_sam"

/* Master device of shared external TCAM */
#define spn_EXT_TCAM_SHARING_MASTER  "ext_tcam_sharing_master"

/* Slave device of shared external TCAM */
#define spn_EXT_TCAM_SHARING_SLAVE  "ext_tcam_sharing_slave"
/*
 * The size in bytes of memory to be used when clearing a table using bulk
 * table operations.  The number of table entries cleared in one operation
 * will vary by table entry width.
 */
#define spn_MEM_CLEAR_CHUNK_SIZE  "mem_clear_chunk_size"

/* Clear tables using the fastest method supported by the device. */
#define spn_MEM_CLEAR_HW_ACCELERATION  "mem_clear_hw_acceleration"

/* Check for mem max override properties and reconfigure memories. */
#define spn_MEM_CHECK_MAX_OVERRIDE  "mem_check_max_override"

/* Check for mem no-cache override properties and avoid caching. */
#define spn_MEM_CHECK_NOCACHE_OVERRIDE  "mem_check_nocache_override"
/*
 * For BCM5660x devices, determines whether the L2 multicast port bitmap
 * should be stored within the L2 table, rather than in a separate table.
 * May be helpful when external memory is used to increase L2 resources.
 */
#define spn_L2MC_IN_L2ENTRY  "l2mc_in_l2entry"

/* 8705 PHY supports both LAN and WAN mode. The default setting is LAN mode. */
#define spn_PHY_WAN_MODE  "phy_wan_mode"

/* 8705 PHY reference clock input selection. This should be set to TRUE in WAN mode. */
#define spn_PHY_XCLKSEL_OVRD  "phy_xclksel_ovrd"

/* Invert PCS TX output to PMD. Supported only on BCM8705 PHY. */
#define spn_PHY_TX_INVERT  "phy_tx_invert"

/* Invert PCS RX output to PMD. Supported only on BCM8705 PHY. */
#define spn_PHY_RX_INVERT  "phy_rx_invert"
/*
 * BCM5651x and BCM5632x devices allow the L2 table to be reduced to a
 * smaller size.  This value will be rounded up to provide the maximum
 * table index corresponding to a table size which is a power of 2.
 */
#define spn_L2_TABLE_SIZE  "l2_table_size"
/*
 * BCM5651x and BCM5632x devices allow the L3 table to be reduced to a
 * smaller size.  This value will be rounded up to provide the maximum
 * table index corresponding to a table size which is a power of 2.
 */
#define spn_L3_TABLE_SIZE  "l3_table_size"
/*
 * BCM5651x and BCM5632x devices allow the STG table to be reduced to a
 * smaller size.  This value will be rounded up to provide the maximum
 * table index corresponding to a table size which is a power of 2.
 */
#define spn_STG_TABLE_SIZE  "stg_table_size"

/* Total TCAM (CFP) entries could be used for the ROBO family. */
#define spn_BCM_FIELD_ENTRY_SZ  "bcm_field_entry_sz"

/* Unlock CFP key pattern for some ROBO family. */
#define spn_BCM_FIELD_KEY_PATTERN  "bcm_field_key_pattern"

/* VLAN ID to be reserved for RCPU traffic */
#define spn_RCPU_VLAN  "rcpu_vlan"

/* Use OOB (out of band) channel for sending/receiving rcpu packets */
#define spn_RCPU_USE_OOB  "rcpu_use_oob"

/* Channel number to use during OOB (out of band) sending/receiving RCPU packets */
#define spn_RCPU_OOB_CHANNEL  "rcpu_oob_channel"
/*
 * MAC driver/unit to use
 * rcpu_oob_channel
 * Valid ports on which RCPU packets can be received by slave device.
 */
#define spn_RCPU_RX_PBMP  "rcpu_rx_pbmp"

/* switch port connected to slave RCPU device. */
#define spn_RCPU_PORT  "rcpu_port"

/* RCPU master unit. This is unit which is used to inject pkts to slave rcpu device. */
#define spn_RCPU_MASTER_UNIT  "rcpu_master_unit"

/* modid assigned to a slave RCPU unit in the system */
#define spn_RCPU_SLAVE_MODID  "rcpu_slave_modid"

/* modid assigned to a master RCPU unit in the system */
#define spn_RCPU_MASTER_MODID  "rcpu_master_modid"
#define spn_RCPU_HIGIG_PORT  "rcpu_higig_port"

/* Indication that a switch can be control through RCPU mechanism only */
#define spn_RCPU_ONLY  "rcpu_only"

/* Indication that RCPU unit is present on a device */
#define spn_PCI2EB_OVERRIDE  "pci2eb_override"

/* Set global default maximum number of entry moves for all dual hash tables */
#define spn_DUAL_HASH_RECURSE_DEPTH  "dual_hash_recurse_depth"

/* Set default maximum number of entry moves for dual hash L2 table */
#define spn_DUAL_HASH_RECURSE_DEPTH_L2X  "dual_hash_recurse_depth_l2x"

/* Set default maximum number of entry moves for dual hash VLAN table */
#define spn_DUAL_HASH_RECURSE_DEPTH_VLAN  "dual_hash_recurse_depth_vlan"

/* Set default maximum number of entry moves for dual hash MPLS table */
#define spn_DUAL_HASH_RECURSE_DEPTH_MPLS  "dual_hash_recurse_depth_mpls"

/* Set default maximum number of entry moves for dual hash egress VLAN table */
#define spn_DUAL_HASH_RECURSE_DEPTH_EGRESS_VLAN  "dual_hash_recurse_depth_egress_vlan"

/* Set default maximum number of entry moves for all dual hash L3 tables */
#define spn_DUAL_HASH_RECURSE_DEPTH_L3X  "dual_hash_recurse_depth_l3x"

/* Set default maximum number of entry moves for dual hash DNAT Pool table */
#define spn_DUAL_HASH_RECURSE_DEPTH_DNAT_POOL  "dual_hash_recurse_depth_dnat_pool"

/* Set global default maximum number of entry moves for all dual hash tables */
#define spn_MULTI_HASH_RECURSE_DEPTH  "multi_hash_recurse_depth"

/* Set default maximum number of entry moves for multi hash L2 table */
#define spn_MULTI_HASH_RECURSE_DEPTH_L2  "multi_hash_recurse_depth_l2"

/* Set default maximum number of entry moves for multi hash VLAN table */
#define spn_MULTI_HASH_RECURSE_DEPTH_VLAN  "multi_hash_recurse_depth_vlan"

/* Set default maximum number of entry moves for multi hash MPLS table */
#define spn_MULTI_HASH_RECURSE_DEPTH_MPLS  "multi_hash_recurse_depth_mpls"

/* Set default maximum number of entry moves for multi hash egress VLAN table */
#define spn_MULTI_HASH_RECURSE_DEPTH_EGRESS_VLAN  "multi_hash_recurse_depth_egress_vlan"

/* Set default maximum number of entry moves for all multi hash L3 tables */
#define spn_MULTI_HASH_RECURSE_DEPTH_L3  "multi_hash_recurse_depth_l3"

/* Enable ALPM for L3 Prefix routes. Set to 1 for parallel search mode, 2 for combined search mode. */
#define spn_L3_ALPM_ENABLE  "l3_alpm_enable"

/* Enable IPv6 128b prefix LPM routes. */
#define spn_IPV6_LPM_128B_ENABLE  "ipv6_lpm_128b_enable"

/* Configure the number of 128b prefix LPM routes. */
#define spn_NUM_IPV6_LPM_128B_ENTRIES  "num_ipv6_lpm_128b_entries"

/* Mode of operation of the route table. */
#define spn_L3_LPM_MODE  "l3_lpm_mode"

/* Control the scalability of ECMP groups */
#define spn_L3_MAX_ECMP_MODE  "l3_max_ecmp_mode"

/* Percentage of per-port cells usable before flow control starts */
#define spn_MMU_FLOW_PERCENT  "mmu_flow_percent"

/* Number of simultaneous senders to each port for flow control purposes */
#define spn_MMU_FLOW_FANIN  "mmu_flow_fanin"
/*
 * Percentage of per-port/per-cos packets used before
 * red packets will be dropped
 */
#define spn_MMU_RED_DROP_PERCENT  "mmu_red_drop_percent"
/*
 * Percentage of per-port/per-cos packets used before
 * yellow packets will be dropped
 */
#define spn_MMU_YELLOW_DROP_PERCENT  "mmu_yellow_drop_percent"
/*
 * Per-port/per-cos static reserved limit.
 * Rounded up from bytes to next cell size.
 * Remaining cells are put in dynamic pool.
 * If 0, then mmu_static_percent is used.
 */
#define spn_MMU_STATIC_BYTES  "mmu_static_bytes"
/*
 * Percentage of per-port/per-cos cells to
 * use as static reserved limit.
 * Remaining cells are put in dynamic pool.
 * Only used if mmu_static_bytes is 0.
 */
#define spn_MMU_STATIC_PERCENT  "mmu_static_percent"
/*
 * (1536 * 2)
 * offset from dynamic cell set limits for
 * reset (enable) limits.
 * Rounded up from bytes to next cell size.
 */
#define spn_MMU_RESET_BYTES  "mmu_reset_bytes"

/* Non-stack port overcommit factor for dynamic pool */
#define spn_MMU_OVERCOMMIT  "mmu_overcommit"

/* Stack port overcommit factor for dynamic pool */
#define spn_MMU_OVERCOMMIT_STACK  "mmu_overcommit_stack"
/*
 * On BCM56601 C0 devices, the valid bit of the L3 IPMC table may be used
 * instead as a hit bit.  In such a case, an invalid entry is judged by
 * empty L2 and L3 port bitmaps.
 */
#define spn_L3_IPMC_VALID_AS_HIT  "l3_ipmc_valid_as_hit"

/* ESM SRAM tuning result generated by extt command */
#define spn_EXT_SRAM_TUNING  "ext_sram_tuning"

/* ESM SRAM tuning statistics generated by extt command */
#define spn_EXT_SRAM_TUNING_STATS  "ext_sram_tuning_stats"

/* ESM SRAM tuning statistics generated by extt2 command */
#define spn_EXT_SRAM_TUNING2_STATS  "ext_sram_tuning2_stats"

/* ESM SRAM tuning result generated by extt command */
#define spn_EXT_SRAM_PVT  "ext_sram_pvt"

/* ESM TCAM tuning result generated by extt command */
#define spn_EXT_TCAM_TUNING  "ext_tcam_tuning"

/* ESM TCAM tuning statistics generated by extt command */
#define spn_EXT_TCAM_TUNING_STATS  "ext_tcam_tuning_stats"

/* ESM TCAM tuning result generated by extt command */
#define spn_EXT_TCAM_PVT  "ext_tcam_pvt"

/* For ESM based L2 memory, transition to using hardware based replace mechanism after this threshold for the number of entries to process is reached. */
#define spn_EXT_L2_USE_HARDWARE_REPLACE_THRESHOLD  "ext_l2_use_hardware_replace_threshold"

/* Disable copying External L2 table into shadow copy */
#define spn_EXT_L2_SHADOW_DISABLE  "ext_l2_shadow_disable"

/* 72-bit(tr2)/80-bit(tr3) external L2 forward table */
#define spn_EXT_L2_FWD_TABLE_SIZE  "ext_l2_fwd_table_size"

/* 80-bit external wide L2 forward table */
#define spn_EXT_L2_WIDE_FWD_TABLE_SIZE  "ext_l2_wide_fwd_table_size"

/* 72-bit(tr2)/80-bit(tr3)/var(Arad) external IPv4 forward table */
#define spn_EXT_IP4_FWD_TABLE_SIZE  "ext_ip4_fwd_table_size"

/* 80-bit external IPv4 host forward table */
#define spn_EXT_IP4_HOST_FWD_TABLE_SIZE  "ext_ip4_host_fwd_table_size"

/* 80-bit external IPv4 host wide forward table */
#define spn_EXT_IP4_HOST_WIDE_FWD_TABLE_SIZE  "ext_ip4_host_wide_fwd_table_size"

/* 72-bit(tr2)/80-bit(tr3) external IPv6 64-bit prefix length forward table */
#define spn_EXT_IP6U_FWD_TABLE_SIZE  "ext_ip6u_fwd_table_size"

/* 144-bit(tr2)/160-bit(tr3)/var(Arad) external IPv6 128-bit/var(Arad) prefix length forward table */
#define spn_EXT_IP6_FWD_TABLE_SIZE  "ext_ip6_fwd_table_size"

/* 160-bit(tr3) external IPv6 128-bit host forward table */
#define spn_EXT_IP6_HOST_FWD_TABLE_SIZE  "ext_ip6_host_fwd_table_size"

/* 160-bit(tr3) external IPv6 128-bit host wide forward table */
#define spn_EXT_IP6_HOST_WIDE_FWD_TABLE_SIZE  "ext_ip6_host_wide_fwd_table_size"

/* 288-bit external L2 ACL table */
#define spn_EXT_L2_ACL_TABLE_SIZE  "ext_l2_acl_table_size"

/* 288-bit external L2 ACL table policy width(multiples of 35 bits). Allowed values are 1, 2, 3, 4, 6 */
#define spn_EXT_L2_ACL_TABLE_POLICY_WIDTH  "ext_l2_acl_table_policy_width"

/* Number of entries in the 288-bit external L2 ACL table to reserve for use as warm-start scache.  If a value is not specified, no entries are reserved, and the regular external scache is used for level-2 warm start.  If a value is specified, that number of entries are reserved for use as the level-2 warm start scache.  If the value specified is 0, an optimal number of reserved entries is calculated such that the reserved space will hold all usable entries. */
#define spn_EXT_L2_ACL_TABLE_SCACHE_SIZE  "ext_l2_acl_table_scache_size"

/* 288-bit external IPv4 ACL table */
#define spn_EXT_IP4_ACL_TABLE_SIZE  "ext_ip4_acl_table_size"

/* 288-bit external IPv4 ACL table policy width(multiples of 35 bits).Allowed values are 1, 2, 3, 4, 6 */
#define spn_EXT_IP4_ACL_TABLE_POLICY_WIDTH  "ext_ip4_acl_table_policy_width"

/* Number of entries in the 288-bit external IPv4 ACL table to reserve for use as warm-start scache.  If a value is not specified, no entries are reserved, and the regular external scache is used for level-2 warm start.  If a value is specified, that number of entries are reserved for use as the level-2 warm start scache.  If the value specified is 0, an optimal number of reserved entries is calculated such that the reserved space will hold all usable entries. */
#define spn_EXT_IP4_ACL_TABLE_SCACHE_SIZE  "ext_ip4_acl_table_scache_size"

/* 360-bit external IPv6 ACL table */
#define spn_EXT_IP6S_ACL_TABLE_SIZE  "ext_ip6s_acl_table_size"

/* 360-bit external IPv6 ACL table policy width(multiples of 35 bits). Allowed values are 1, 2, 3, 4, 6 */
#define spn_EXT_IP6S_ACL_TABLE_POLICY_WIDTH  "ext_ip6s_acl_table_policy_width"

/* Number of entries in the 360-bit external IPv6 ACL table to reserve for use as warm-start scache.  If a value is not specified, no entries are reserved, and the regular external scache is used for level-2 warm start.  If a value is specified, that number of entries are reserved for use as the level-2 warm start scache.  If the value specified is 0, an optimal number of reserved entries is calculated such that the reserved space will hold all usable entries. */
#define spn_EXT_IP6S_ACL_TABLE_SCACHE_SIZE  "ext_ip6s_acl_table_scache_size"

/* 432-bit external IPv6 ACL table */
#define spn_EXT_IP6F_ACL_TABLE_SIZE  "ext_ip6f_acl_table_size"

/* 432-bit external IPv6 ACL table policy width(multiples of 35 bits). Allowed values are 1, 2, 3, 4, 6 */
#define spn_EXT_IP6F_ACL_TABLE_POLICY_WIDTH  "ext_ip6f_acl_table_policy_width"

/* Number of entries in the 432-bit external IPv6 ACL table to reserve for use as warm-start scache.  If a value is not specified, no entries are reserved, and the regular external scache is used for level-2 warm start.  If a value is specified, that number of entries are reserved for use as the level-2 warm start scache.  If the value specified is 0, an optimal number of reserved entries is calculated such that the reserved space will hold all usable entries. */
#define spn_EXT_IP6F_ACL_TABLE_SCACHE_SIZE  "ext_ip6f_acl_table_scache_size"

/* 144-bit external L2 ACL table */
#define spn_EXT_L2C_ACL_TABLE_SIZE  "ext_l2c_acl_table_size"

/* 144-bit external L2 ACL table policy width(multiples of 35 bits). Allowed values are 1, 2, 3, 4, 6 */
#define spn_EXT_L2C_ACL_TABLE_POLICY_WIDTH  "ext_l2c_acl_table_policy_width"

/* Number of entries in the 144-bit external L2 ACL table to reserve for use as warm-start scache.  If a value is not specified, no entries are reserved, and the regular external scache is used for level-2 warm start.  If a value is specified, that number of entries are reserved for use as the level-2 warm start scache.  If the value specified is 0, an optimal number of reserved entries is calculated such that the reserved space will hold all usable entries. */
#define spn_EXT_L2C_ACL_TABLE_SCACHE_SIZE  "ext_l2c_acl_table_scache_size"

/* 144-bit external IPv4 ACL table */
#define spn_EXT_IP4C_ACL_TABLE_SIZE  "ext_ip4c_acl_table_size"

/* 144-bit external IPv4 ACL table policy width(multiples of 35 bits). Allowed values are 1, 2, 3, 4, 6 */
#define spn_EXT_IP4C_ACL_TABLE_POLICY_WIDTH  "ext_ip4c_acl_table_policy_width"

/* Number of entries in the 144-bit external IPv4 ACL table to reserve for use as warm-start scache.  If a value is not specified, no entries are reserved, and the regular external scache is used for level-2 warm start.  If a value is specified, that number of entries are reserved for use as the level-2 warm start scache.  If the value specified is 0, an optimal number of reserved entries is calculated such that the reserved space will hold all usable entries. */
#define spn_EXT_IP4C_ACL_TABLE_SCACHE_SIZE  "ext_ip4c_acl_table_scache_size"

/* 144-bit external IPv6 ACL table */
#define spn_EXT_IP6C_ACL_TABLE_SIZE  "ext_ip6c_acl_table_size"

/* 144-bit external IPv6 ACL table policy width(multiples of 35 bits). Allowed values are 1, 2, 3, 4, 6 */
#define spn_EXT_IP6C_ACL_TABLE_POLICY_WIDTH  "ext_ip6c_acl_table_policy_width"

/* Number of entries in the 144-bit external IPv6 ACL table to reserve for use as warm-start scache.  If a value is not specified, no entries are reserved, and the regular external scache is used for level-2 warm start.  If a value is specified, that number of entries are reserved for use as the level-2 warm start scache.  If the value specified is 0, an optimal number of reserved entries is calculated such that the reserved space will hold all usable entries. */
#define spn_EXT_IP6C_ACL_TABLE_SCACHE_SIZE  "ext_ip6c_acl_table_scache_size"

/* 432-bit external L2 + IPv4 ACL table */
#define spn_EXT_L2IP4_ACL_TABLE_SIZE  "ext_l2ip4_acl_table_size"

/* 432-bit external L2 + IPv4 ACL table policy width(multiples of 35 bits). Allowed values are 1, 2, 3, 4, 6 */
#define spn_EXT_L2IP4_ACL_TABLE_POLICY_WIDTH  "ext_l2ip4_acl_table_policy_width"

/* Number of entries in the 432-bit external L2 + IPv4 ACL table to reserve for use as warm-start scache.  If a value is not specified, no entries are reserved, and the regular external scache is used for level-2 warm start.  If a value is specified, that number of entries are reserved for use as the level-2 warm start scache.  If the value specified is 0, an optimal number of reserved entries is calculated such that the reserved space will hold all usable entries. */
#define spn_EXT_L2IP4_ACL_TABLE_SCACHE_SIZE  "ext_l2ip4_acl_table_scache_size"

/* 432-bit external L2 + IPv6 ACL table */
#define spn_EXT_L2IP6_ACL_TABLE_SIZE  "ext_l2ip6_acl_table_size"

/* 432-bit external L2 + IPv6 ACL table policy width(multiples of 35 bits). Allowed values are 1, 2, 3, 4, 6 */
#define spn_EXT_L2IP6_ACL_TABLE_POLICY_WIDTH  "ext_l2ip6_acl_table_policy_width"

/* Number of entries in the 432-bit external L2 + IPv6 ACL table to reserve for use as warm-start scache.  If a value is not specified, no entries are reserved, and the regular external scache is used for level-2 warm start.  If a value is specified, that number of entries are reserved for use as the level-2 warm start scache.  If the value specified is 0, an optimal number of reserved entries is calculated such that the reserved space will hold all usable entries. */
#define spn_EXT_L2IP6_ACL_TABLE_SCACHE_SIZE  "ext_l2ip6_acl_table_scache_size"

/* 80-bit external ACL table */
#define spn_EXT_ACL80_TABLE_SIZE  "ext_acl80_table_size"

/* 160-bit external ACL table */
#define spn_EXT_ACL160_TABLE_SIZE  "ext_acl160_table_size"

/* 320-bit external ACL table */
#define spn_EXT_ACL320_TABLE_SIZE  "ext_acl320_table_size"

/* 480-bit external ACL table */
#define spn_EXT_ACL480_TABLE_SIZE  "ext_acl480_table_size"

/* External L2 forward table is duplicated */
#define spn_EXT_L2_TABLE_DUPLICATED  "ext_l2_table_duplicated"

/* External IPv4 forward table is duplicated */
#define spn_EXT_IP4_TABLE_DUPLICATED  "ext_ip4_table_duplicated"

/* External IPV6 64 bit prefix forward table is duplicated */
#define spn_EXT_IP6U_TABLE_DUPLICATED  "ext_ip6u_table_duplicated"

/* External IPV6 128 bit forward table is duplicated */
#define spn_EXT_IP6_TABLE_DUPLICATED  "ext_ip6_table_duplicated"

/* ESM TCAM operating frequency */
#define spn_EXT_TCAM_FREQ  "ext_tcam_freq"

/* ESM TCAM mode, 0 for 6 cycles per packet, 1 for 4 cycles per packet */
#define spn_EXT_TCAM_MODE  "ext_tcam_mode"
#define spn_EXT_TCAM_DEV_TYPE  "ext_tcam_dev_type"

/* Number of TCAM banks in the ESM TCAM module */
#define spn_EXT_TCAM_BANKS  "ext_tcam_banks"

/* ESM SRAM operating frequency */
#define spn_EXT_SRAM_FREQ  "ext_sram_freq"

/* ESM SRAM mode, 0 for 1.5 clock latency, 1 for 2 clock latency */
#define spn_EXT_SRAM_MODE  "ext_sram_mode"
#define spn_EXT_SRAM_SPEED  "ext_sram_speed"
#define spn_EXT_SRAM0_PRESENT  "ext_sram0_present"
#define spn_EXT_SRAM1_PRESENT  "ext_sram1_present"
/*
 * External associated data mode:
 * 1: 250 MHz, L2 table in ES0
 * 2: 250 MHz, L2 table in ES1
 * 3: 250 MHz, L3 table in ES0
 * 4: 250 MHz, L3 table in ES1
 * 5: 250 MHz, L2 and L3 table in ES0
 * 6: 250 MHz, L2 and L3 table in ES1
 * 7: 334 MHz, ACL table in ES0
 * 8: 334 MHz, ACL table in ES1
 * 9: 250 MHz, ACL table in both ES0 and ES1
 * 10: 250 MHz, L2 and ACL table in both ES0 and ES1
 * 11: 250 MHz, L3 and ACL table in both ES0 and ES1
 * 12: 334 MHz, L2 and L3 and ACL table in both ES0 and ES1
 */
#define spn_EXT_AD_MODE  "ext_ad_mode"
/*
 * External IPv6 forwarding search key selection
 * 0 for 72-bit, 1 for 144-bit
 */
#define spn_EXT_IP6_FWD_KEY  "ext_ip6_fwd_key"
/*
 * External ACL search key selection for L2 packet
 * 0 for disable, 1 for 288-bit, 2 for 144-bit
 */
#define spn_EXT_L2_ACL_KEY  "ext_l2_acl_key"
/*
 * External ACL search key selection for IPv4 packet
 * 0 for disable, 1 for 288-bit, 2 for 144-bit, 3 for using both L2 and IP4 key,
 * 4 for using L2 key
 */
#define spn_EXT_IP4_ACL_KEY  "ext_ip4_acl_key"
/*
 * External ACL search key selection for IPV6 packet
 * 0 for disable, 1 for 360-bit, 2 for 432-bit, 3 for 144-bit,
 * 4 for using both L2 and IP6 key, 5 for using L2 key
 */
#define spn_EXT_IP6_ACL_KEY  "ext_ip6_acl_key"
/*
 * On BCM5662x devices, enable external TCAM lookup on XPORT block
 * (back-panel ports) instead of XGPORT block (front-panel ports)
 */
#define spn_EXT_LOOKUP_ON_XPORT  "ext_lookup_on_xport"

/* External IPv4 Unicast with RPF forward table size */
#define spn_EXT_IP4_UC_RPF_FWD_TABLE_SIZE  "ext_ip4_uc_rpf_fwd_table_size"

/* External IPv4 Multicast forward table size */
#define spn_EXT_IP4_MC_FWD_TABLE_SIZE  "ext_ip4_mc_fwd_table_size"

/* External IPv6 Unicast with RPF forward table size */
#define spn_EXT_IP6_UC_RPF_FWD_TABLE_SIZE  "ext_ip6_uc_rpf_fwd_table_size"

/* External IPv6 Multicast forward table size */
#define spn_EXT_IP6_MC_FWD_TABLE_SIZE  "ext_ip6_mc_fwd_table_size"

/* External Trill Unicast forward table size */
#define spn_EXT_TRILL_UC_FWD_TABLE_SIZE  "ext_trill_uc_fwd_table_size"

/* External Trill Multicast forward table size */
#define spn_EXT_TRILL_MC_FWD_TABLE_SIZE  "ext_trill_mc_fwd_table_size"

/* External Mpls label forward table size */
#define spn_EXT_MPLS_FWD_TABLE_SIZE  "ext_mpls_fwd_table_size"

/* External coupling Mpls label forward table size */
#define spn_EXT_COUP_MPLS_FWD_TABLE_SIZE  "ext_coup_mpls_fwd_table_size"

/* External Transparent P2P mim (Mac in Mac) forward table size */
#define spn_EXT_TP2P_MIM_FWD_TABLE_SIZE  "ext_tp2p_mim_fwd_table_size"

/* External Transparent P2P mpls forward table size */
#define spn_EXT_TP2P_MPLS_FWD_TABLE_SIZE  "ext_tp2p_mpls_fwd_table_size"

/* External Transparent P2P vlan forward table size */
#define spn_EXT_TP2P_VLAN_FWD_TABLE_SIZE  "ext_tp2p_vlan_fwd_table_size"
/*
 * Enable SGMII autonegotiation between the serdes and PHY if the 
 * serdes supports SGMII autonegotiation.
 */
#define spn_PHY_SGMII_AUTONEG  "phy_sgmii_autoneg"

/* Priority assigned to CoS number 0 on a remote unit in RCPU system */
#define spn_RCPU_DOT1PRI_COS0  "rcpu_dot1pri_cos0"

/* Priority assigned to CoS number 1 on a remote unit in RCPU system */
#define spn_RCPU_DOT1PRI_COS1  "rcpu_dot1pri_cos1"

/* Priority assigned to CoS number 2 on a remote unit in RCPU system */
#define spn_RCPU_DOT1PRI_COS2  "rcpu_dot1pri_cos2"

/* Priority assigned to CoS number 3 on a remote unit in RCPU system */
#define spn_RCPU_DOT1PRI_COS3  "rcpu_dot1pri_cos3"

/* Priority assigned to CoS number 4 on a remote unit in RCPU system */
#define spn_RCPU_DOT1PRI_COS4  "rcpu_dot1pri_cos4"

/* Priority assigned to CoS number 5 on a remote unit in RCPU system */
#define spn_RCPU_DOT1PRI_COS5  "rcpu_dot1pri_cos5"

/* Priority assigned to CoS number 6 on a remote unit in RCPU system */
#define spn_RCPU_DOT1PRI_COS6  "rcpu_dot1pri_cos6"

/* Priority assigned to CoS number 7 on a remote unit in RCPU system */
#define spn_RCPU_DOT1PRI_COS7  "rcpu_dot1pri_cos7"

/* Module Header Traffic Class value for CoS number 0 */
#define spn_RCPU_MH_TC_COS0  "rcpu_mh_tc_cos0"

/* Module Header Traffic Class value for CoS number 1 */
#define spn_RCPU_MH_TC_COS1  "rcpu_mh_tc_cos1"

/* Module Header Traffic Class value for CoS number 2 */
#define spn_RCPU_MH_TC_COS2  "rcpu_mh_tc_cos2"

/* Module Header Traffic Class value for CoS number 3 */
#define spn_RCPU_MH_TC_COS3  "rcpu_mh_tc_cos3"

/* Module Header Traffic Class value for CoS number 4 */
#define spn_RCPU_MH_TC_COS4  "rcpu_mh_tc_cos4"

/* Module Header Traffic Class value for CoS number 5 */
#define spn_RCPU_MH_TC_COS5  "rcpu_mh_tc_cos5"

/* Module Header Traffic Class value for CoS number 6 */
#define spn_RCPU_MH_TC_COS6  "rcpu_mh_tc_cos6"

/* Module Header Traffic Class value for CoS number 7 */
#define spn_RCPU_MH_TC_COS7  "rcpu_mh_tc_cos7"

/* CPU Traffic Class to be added to the remote CPU packet for CoS number 0 */
#define spn_RCPU_CPU_TC_COS0  "rcpu_cpu_tc_cos0"

/* CPU Traffic Class to be added to the remote CPU packet for CoS number 1 */
#define spn_RCPU_CPU_TC_COS1  "rcpu_cpu_tc_cos1"

/* CPU Traffic Class to be added to the remote CPU packet for CoS number 2 */
#define spn_RCPU_CPU_TC_COS2  "rcpu_cpu_tc_cos2"

/* CPU Traffic Class to be added to the remote CPU packet for CoS number 3 */
#define spn_RCPU_CPU_TC_COS3  "rcpu_cpu_tc_cos3"

/* CPU Traffic Class to be added to the remote CPU packet for CoS number 4 */
#define spn_RCPU_CPU_TC_COS4  "rcpu_cpu_tc_cos4"

/* CPU Traffic Class to be added to the remote CPU packet for CoS number 5 */
#define spn_RCPU_CPU_TC_COS5  "rcpu_cpu_tc_cos5"

/* CPU Traffic Class to be added to the remote CPU packet for CoS number 6 */
#define spn_RCPU_CPU_TC_COS6  "rcpu_cpu_tc_cos6"

/* CPU Traffic Class to be added to the remote CPU packet for CoS number 7 */
#define spn_RCPU_CPU_TC_COS7  "rcpu_cpu_tc_cos7"

/* CPU queue ID to be used for RCPU packets */
#define spn_RCPU_CPU_QUEUE  "rcpu_cpu_queue"

/* Pick up the Module Header SRC_PID value from the PBE bus for RCPU packets */
#define spn_RCPU_MH_SRC_PID_ENABLE  "rcpu_mh_src_pid_enable"

/* Add CPU Traffic Class to the RCPU packet */
#define spn_RCPU_MH_CPU_COS_ENABLE  "rcpu_mh_cpu_cos_enable"

/* Add Module Header Traffic Class to the RCPU packet */
#define spn_RCPU_MH_TC_MAP_ENABLE  "rcpu_mh_tc_map_enable"

/* CoS Priority is enable on RCPU packet */
#define spn_RCPU_DOT1PRI_MAP_ENABLE  "rcpu_dot1pri_map_enable"
/*
 * On BCM5651x devices, select which of the 10G ports should be run in
 * single-lane serdes mode at 1/4 speed.  This bitmap consists of four
 * bits corresponding to the 10G ports.
 */
#define spn_LMD_ENABLE_PBMP  "lmd_enable_pbmp"

/* Number of IPFIX export entries allocated for the FIFO DMA host buffer */
#define spn_IPFIX_HOSTBUF_SIZE  "ipfix_hostbuf_size"

/* IPFIX export fifo thread priorities; 0 is highest and 255 is lowest */
#define spn_IPFIX_THREAD_PRI  "ipfix_thread_pri"

/* Set the Receive Status Vector (RSV) mask for the Unimac */
#define spn_GPORT_RSV_MASK  "gport_rsv_mask"

/* Enable post initialization for FE ports on BCM56024 and BCM56018 */
#define spn_POST_INIT_ENABLE  "post_init_enable"

/* Device that can support more than 32 ports per single modid will operate in configuration where all ports are mapped to the base modid */
#define spn_MODULE_64PORTS  "module_64ports"

/* Configure the number of module id used by the device */
#define spn_MODULE_NUM_MODIDS  "module_num_modids"

/* All API will return port numbers in GPORT encodings */
#define spn_GPORT  "bcm_use_gport"
/*
 * Multicast ranges
 * The Higig2 header format concatenates the broadcast, multicast, and
 * IP multicast indices into one generic multicast index.  The mapping
 * between the individual indices and the combined index is specified by
 * these.  The default values are indicated.
 * This value sets the allowed range of broadcast indices in the Higig2
 * header for stack ports.
 */
#define spn_HIGIG2_MULTICAST_VLAN_RANGE  "higig2_multicast_vlan_range"
/*
 * Multicast ranges
 * This value sets the allowed range of multicast indices in the Higig2
 * header for stack ports.
 */
#define spn_HIGIG2_MULTICAST_L2_RANGE  "higig2_multicast_l2_range"
/*
 * Multicast ranges
 * This value sets the allowed range of IP multicast indices in the Higig2
 * header for stack ports.
 */
#define spn_HIGIG2_MULTICAST_L3_RANGE  "higig2_multicast_l3_range"

/* Uncomment the following line to make all HG ports default to HiGig2. */
#define spn_HIGIG2_HDR_MODE  "higig2_hdr_mode"
/*
 * In BCM568xx and BCM567xx devices, some L2 and L3 multicast
 * information is stored in a shared resource.  This value describes
 * the number of resource entries devoted to L2 multicast.
 */
#define spn_MULTICAST_L2_RANGE  "multicast_l2_range"
/*
 * In BCM568xx and BCM567xx devices, some L2 and L3 multicast
 * information is stored in a shared resource.  This value describes
 * the number of resource entries devoted to IP multicast.
 */
#define spn_MULTICAST_L3_RANGE  "multicast_l3_range"

/* Destination (and CUD) encoding in the ingress Multicast table. */
#define spn_MULTICAST_DESTINATION_ENCODING  "multicast_destination_encoding"

/* Enable/Disable SLAM DMA */
#define spn_TSLAM_DMA_ENABLE  "tslam_dma_enable"

/* Enable/Disable TABLE DMA */
#define spn_TABLE_DMA_ENABLE  "table_dma_enable"

/* Enable/Disable CCM DMA */
#define spn_CCM_DMA_ENABLE  "ccm_dma_enable"
/*
 * The rate divisor/dividend properties allow a specific function clock
 * to be adjusted with respect to the device core clock.  If the core
 * clock speed is altered from the default, then use these settings to
 * tune the function clock to the required frequency range.
 * The calculation is (core clock) * dividend / divisor = (function clock).
 */

/* I2C clock rate divisor */
#define spn_RATE_I2C_DIVISOR  "rate_i2c_divisor"

/* I2C clock rate dividend */
#define spn_RATE_I2C_DIVIDEND  "rate_i2c_dividend"

/* Statistics DMA clock rate divisor */
#define spn_RATE_STDMA_DIVISOR  "rate_stdma_divisor"

/* Statistics DMA clock rate dividend */
#define spn_RATE_STDMA_DIVIDEND  "rate_stdma_dividend"

/* External MDIO clock rate divisor */
#define spn_RATE_EXT_MDIO_DIVISOR  "rate_ext_mdio_divisor"

/* External MDIO clock rate dividend */
#define spn_RATE_EXT_MDIO_DIVIDEND  "rate_ext_mdio_dividend"

/* Internal MDIO clock rate divisor */
#define spn_RATE_INT_MDIO_DIVISOR  "rate_int_mdio_divisor"

/* Internal MDIO clock rate dividend */
#define spn_RATE_INT_MDIO_DIVIDEND  "rate_int_mdio_dividend"

/* External MDIO clock rate divisor during f/w download */
#define spn_RATE_EXT_DOWNLOAD_MDIO_DIVISOR  "rate_ext_download_mdio_divisor"

/* External MDIO clock rate dividend during f/w download */
#define spn_RATE_EXT_DOWNLOAD_MDIO_DIVIDEND  "rate_ext_download_mdio_dividend"
/*
 * Specifiers the priority
 * of the OAM thread
 */
#define spn_BCM_OAM_THREAD_PRI  "bcm_oam_thread_pri"

/* Specifies the port bitmap of the ports on which system snake should be skipped. */
#define spn_SS_IGNORE_PBMP  "ss_ignore_pbmp"
/*
 * On BCM5682x and BCM5672x devices, some of the switching logic may be
 * skipped to decrease traffic latency.  The three modes available are:
 * 0 - normal operation
 * 1 - Skip L3 switch logic
 * 2 - Skip L3 and FP switch logic
 */
#define spn_SWITCH_BYPASS_MODE  "switch_bypass_mode"
/*
 * Use a bulk memory operation when writing multiple table entries
 * in the CLI.
 */
#define spn_DIAG_SHELL_USE_SLAM  "diag_shell_use_slam"
#define spn_RLINK_L2_REMOTE_MAX  "rlink_l2_remote_max"
#define spn_RLINK_L2_LOCAL_MAX  "rlink_l2_local_max"
#define spn_RLINK_LINK_REMOTE_MAX  "rlink_link_remote_max"
#define spn_RLINK_LINK_LOCAL_MAX  "rlink_link_local_max"
#define spn_RLINK_AUTH_REMOTE_MAX  "rlink_auth_remote_max"
#define spn_RLINK_AUTH_LOCAL_MAX  "rlink_auth_local_max"
#define spn_RLINK_RX0_REMOTE_MAX  "rlink_rx0_remote_max"
#define spn_RLINK_RX1_REMOTE_MAX  "rlink_rx1_remote_max"
#define spn_RLINK_RX2_REMOTE_MAX  "rlink_rx2_remote_max"
#define spn_RLINK_RX3_REMOTE_MAX  "rlink_rx3_remote_max"
#define spn_RLINK_RX4_REMOTE_MAX  "rlink_rx4_remote_max"
#define spn_RLINK_RX5_REMOTE_MAX  "rlink_rx5_remote_max"
#define spn_RLINK_RX6_REMOTE_MAX  "rlink_rx6_remote_max"
#define spn_RLINK_RX7_REMOTE_MAX  "rlink_rx7_remote_max"

/* Specifies the max number of queued notifications in server side */
#define spn_RLINK_OAM_REMOTE_MAX  "rlink_oam_remote_max"

/* Specifies the max number of queued notifications in client side */
#define spn_RLINK_OAM_LOCAL_MAX  "rlink_oam_local_max"

/* Specifies the max number of queued fabric notifications in server side */
#define spn_RLINK_FABRIC_REMOTE_MAX  "rlink_fabric_remote_max"

/* Specifies the max number of queued fabric notifications in client side */
#define spn_RLINK_FABRIC_LOCAL_MAX  "rlink_fabric_local_max"
/*
 * Enable diag shell port mapping. Port names will be assigned in
 * dport order, and the BCM shell will list multiple ports in
 * dport order regardless of the internal port numbering.
 */
#define spn_DPORT_MAP_ENABLE  "dport_map_enable"
/*
 * Port names for each port type (fe, ge, etc.) will increment
 * by one starting at zero, e.g. if a switch has four xe ports
 * with dport numbers 24, 25, 26, and 27, they will be named
 * xe0, xe1, xe2, and xe3. In non-indexed mode the ports would
 * be named xe24, xe25, xe26, and xe27.
 */
#define spn_DPORT_MAP_INDEXED  "dport_map_indexed"
/*
 * Traditionally, specifying a raw number instead of a port name
 * in the diag shell will be parsed as if port numbers are counted
 * from 1 up to the number of enabled ports. Typically this would
 * mean that for a gigabit switch, port 1 would correspond to ge0,
 * and so forth. Setting this flag causes raw port numbers to be
 * parsed as internal port numbers.
 */
#define spn_DPORT_MAP_DIRECT  "dport_map_direct"

/* Map dport number <dport> to internal port number <port>. dport_map_port_<port>=<dport> */
#define spn_DPORT_MAP_PORT  "dport_map_port"
/*
 * Interval (in usecs) at which the port monitor thread will run.
 * The port monitor can be used to handle workarounds which are
 * required only with specific equipment configurations.
 */
#define spn_PORTMON_INTERVAL  "portmon_interval"
/*
 * Select whether to always attach the corresponding Serdes shadow
 * driver for Raptor and Raven devices. Note that when deciding
 * which driver to attach, MDIO accesses are also verified independently
 * and checked for corruption. If corruption is detected, the
 * shadow driver is attached regardless of this property.
 * To always attach the shadow driver for a port:
 * serdes_shadow_driver_<port>=1
 */
#define spn_SERDES_SHADOW_DRIVER  "serdes_shadow_driver"
/*
 * Configure a BCM56725 device for 16-16G ports, instead of the default
 * 8-21G + 4-16G ports
 */
#define spn_BCM56725_16X16  "bcm56725_16x16"
/*
 * Configure a BCM56822 device for 8-16G + 12-10G + 4-1G ports, instead
 * of the default 4-21G + 2-16G + 12-10G + 4-1G ports
 */
#define spn_BCM56822_8X16  "bcm56822_8x16"
/*
 * Configure a BCM56821 device for 20-12G + 4-1G ports, instead
 * of the default 8-16G + 12-10G + 4-1G ports
 */
#define spn_BCM56821_20X12  "bcm56821_20x12"

/* L2 Caching of BPDU MAC addresses will be turned off */
#define spn_SKIP_L2_USER_ENTRY  "skip_L2_USER_ENTRY"

/* Enable Bigmac and Unimac on the XGPORT blocks of BCM56626 and BCM56628 */
#define spn_FLEX_XGPORT  "flex_xgport"

/* Enable the 40GE mode of BCM56629 */
#define spn_BCM56629_40GE  "bcm56629_40ge"

/* Enable the 28GE and 7x10G Higig mode of BCM56639 */
#define spn_BCM56639_28G_7X10  "bcm56639_28g_7x10"

/* Enable the 8x12G Higig mode (with loopback) of BCM56638 */
#define spn_BCM56638_8X12  "bcm56638_8x12"

/* Enable the 4x12G and 2x24G Higig mode (with loopback) of BCM56638 */
#define spn_BCM56638_4X12_2X24  "bcm56638_4x12_2x24"

/* Enable the 24GE and 6x12G Higig mode (with loopback) of BCM56636 */
#define spn_BCM56636_24G_6X12  "bcm56636_24g_6x12"

/* Enable the 24GE and 2x12G Higig and 2x24G Higig mode (with loopback) of BCM56636 */
#define spn_BCM56636_2X12_2X24  "bcm56636_2x12_2x24"

/* Enable the 48GE and 4x12G Higig mode (with loopback) of BCM56634 */
#define spn_BCM56634_48G_4X12  "bcm56634_48g_4x12"

/* Enable the 48GE and 2x24G Higig mode (with loopback) of BCM56634 */
#define spn_BCM56634_48G_2X24  "bcm56634_48g_2x24"

/* Enable the 48GE and 4x12G Higig mode (with loopback) of BCM56538 */
#define spn_BCM56538_48G_4X12  "bcm56538_48g_4x12"

/* Enable the 48GE and 2x24G Higig mode (with loopback) of BCM56538 */
#define spn_BCM56538_48G_2X24  "bcm56538_48g_2x24"

/* Enable the 24GE and 2x12G Higig and 2x24G Higig mode (with loopback) of BCM56630 */
#define spn_BCM56630_2X12_2X24  "bcm56630_2x12_2x24"

/* Enable the 24GE and 2x12G Higig and 2x24G Higig mode (with loopback) of BCM56521 */
#define spn_BCM56521_2X12_2X24  "bcm56521_2x12_2x24"

/* Enable the 24GE and 2x12G Higig and 2x24G Higig mode (with loopback) of BCM56524 */
#define spn_BCM56524_2X12_2X24  "bcm56524_2x12_2x24"

/* Enable the 24GE and 2x12G Higig and 2x24G Higig mode (with loopback) of BCM56534 */
#define spn_BCM56534_2X12_2X24  "bcm56534_2x12_2x24"

/* Enable the 28GE and 2x12G Higig and 4x16G Higig mode (with loopback) of BCM56526 */
#define spn_BCM56526_2X12_4X16  "bcm56526_2x12_4x16"
#define spn_BCM5614X_CONFIG  "bcm5614x_config"
#define spn_BCM5615X_CONFIG  "bcm5615x_config"

/* Enable mixed mode speed (10G+1G, 1G+10G) on XQPorts of hypercore in BCM5614x */
#define spn_BCM5614X_HYPERCORE_MIXED_MODE  "bcm5614x_hypercore_mixed_mode"
#define spn_BCM5644X_CONFIG  "bcm5644x_config"

/* Enable the 12G Higig mode on BCM56630, BCM56521, BCM56522, BCM56524 or BCM56534 by setting the value to 12000 */
#define spn_HIGIG_MAX_SPEED  "higig_max_speed"
#define spn_FRONT_PANEL_ESM  "front_panel_esm"

/* L2 and VLAN module initialization will be skipped */
#define spn_SKIP_L2_VLAN_INIT  "skip_l2_vlan_init"
/*
 * Convenience variable that can be used to turn off both physical
 * and system port mapping. This variable overrides the dedicated
 * variables described above.
 */
#define spn_BCM_XLATE_PORT_ENABLE  "bcm_xlate_port_enable"
/*
 * Enable translation of physical port numbers within the BCM layer.
 * This feature allows a new device to emulate an older similar
 * device even if the physical port map is different. Note that
 * translation support must be compiled in as well.
 */
#define spn_BCM_XLATE_API_PORT_ENABLE  "bcm_xlate_api_port_enable"
/*
 * Enable translation of system port numbers to physical port numbers
 * in hardware (if supported by the switch device). This feature may
 * be used to complement the BCM API translation feature, but can
 * also be used to limit the use of module IDs on devices with 32 or
 * fewer ports in case some physical port numbers reside beyond 31.
 */
#define spn_BCM_XLATE_SYSPORT_ENABLE  "bcm_xlate_sysport_enable"

/* String identification of port mapping function to be used. */
#define spn_BCM_XLATE_PORT_MAP  "bcm_xlate_port_map"

/* Indication if the port should be remapped given a mapping function */
#define spn_BCM_XLATE_PORT  "bcm_xlate_port"

/* Configure the PHY address(es) for the flex-ports */
#define spn_FLEX_PORT_PHY_ADDR  "flex_port_phy_addr"
/*
 * Display the usage information for a CLI command when "help <cmd>",
 * "? <cmd>", or "<cmd> {unrecognized parameters}" is entered.  To suppress
 * the usage message, set this property to 0.
 */
#define spn_HELP_CLI_ENABLE  "help_cli_enable"
/*
 * Display table information when the "listmem" CLI command is used.
 * To suppress the table listing, set this property to 0.
 */
#define spn_MEMLIST_ENABLE  "memlist_enable"
/*
 * Display register information when the "listreg" CLI command is used.
 * To suppress the register listing, set this property to 0.
 */
#define spn_REGLIST_ENABLE  "reglist_enable"

/* Enable lane0 IEEE MII reset on Hyperlite/Hypercore serdes. */
#define spn_SERDES_LANE0_RESET  "serdes_lane0_reset"

/* BCM5321 / BCM5320 Selection */
#define spn_PBMP_FE_100FX  "pbmp_fe_100fx"
/*
 * Specify the group numbers which could be supported in the INGRESS stage for the ROBO family.
 * In ROBO FP architecture, all entries are shared for all slices. Group numbers are not
 * limited by slice numbers. TCAM_SLICE could be used to specify the group numbers for the ROBO family.
 */
#define spn_ROBO_INGRESS_TCAM_SLICE  "robo_ingress_tcam_slice"

/* Specify the group numbers which could be supported in the EGRESS stage for the ROBO family. */
#define spn_ROBO_EGRESS_TCAM_SLICE  "robo_egress_tcam_slice"

/* Specify the group numbers which could be supported in the LOOKUP stage for the ROBO family. */
#define spn_ROBO_LOOKUP_TCAM_SLICE  "robo_lookup_tcam_slice"
/*
 *  BCM5321 / BCM5320 Selection
 * Select either BCM5321 or BCM5320(16 / 8 ports of BCM5324 family)
 * It is BCM5321
 */
#define spn_BCM5321  "bcm5321"

/* It is BCM5320 */
#define spn_BCM5320  "bcm5320"
/*
 * Specifies the Logical to physical port mapping and bandwidth allocation.
 * portmap_<port>=<physical port number>:<bandwidth in Gb>\[:<queue config>\].
 * Applicable to BCM56840 and BCM56740 device family
 */
#define spn_PORTMAP  "portmap"
/*
 * Specifies the number of lanes used by each port in the flex port group.
 * portgroup_<port group>=<number of lanes>.
 * Applicable to BCM566xx and BCM565xx device family
 */
#define spn_PORTGROUP  "portgroup"
/*
 * SBX properties
 * UCODE Port Properties
 * 
 * The following properties are for FE to convey mapping
 * from microcode port to physical port.
 * 
 *    ucode_num_ports - defines the maximum number of microcode visible
 *                      ports on any module.
 * 
 *    ucode_port_<number> = <b-type><b-num>[.<b-port>:<s-type><s-num>.<s-port>]
 * 
 *  where,
 *    <b-type> is the front-panel block type: ge, xe, spi, pci
 *    <b-num>  is the front-panel block number (0-1)
 *    <b-port> is the front-panel port number (within the block)
 *    <s-type> is the system-side block type: spi
 *    <s-num>  is the system-side block number (0-1)
 *    <s-port> is the system-side port number (within the block)
 * 
 *  Notes:
 *  Mapping for a SPI bus port or PCI port should only contain the
 *  fields <b-type> and <b-num>.
 * 
 *  Examples:
 *    ucode_num_ports.1    = 32
 *    ucode_port.port1.1   = ge0.0:spi1.0    <-- Front panel GE port
 *    ucode_port.port27.1  = spi0.0:spi1.1   <-- Front panel SPI subport
 *    ucode_port.port31.1  = spi0            <-- SPI port (for SPI0)
 *    ucode_port.port32.1  = pci0            <-- CPU port
 * 
 *  Usage for BCM8803x Series
 *   ucode_port.<UPNUM>=<LINE_INFO>:<FABRIC_INFO>
 *    Where,
 *     <LINE_INFO>  = <BT><BN>.<IT>.<INST>.<PORT>-[FC]-[NUMQ/SQ/DQ/NUMDEST]
 *     <FABRIC_INFO>= <BT><BN>.<IT>.<INST>.<PORT>-[FC]-[NUMQ/SQ/DQ/NUMDEST]
 *     <UPNUM> = port<NUMBER>
 * 
 *     <BT>    = Block Type
 *     <BN>    = Block Num
 *     <IT>    = Interface Type (ce/xe/xle/ge/hg10/hg25/hg126/il100/il50)
 *     <INST>  = Instance
 *     <PORT>  = Port
 *     <FC>    = Flow Control, on/oob/off, default is off, optional
 *     <NUMQ> = No of queues, optional
 *     <SQ>    = Squeue, optional
 *     <DQ>    = Dqueue, optional
 *     <NUMDEST> = No of dest queues, optional
 * 
 */
#define spn_UCODE_NUM_PORTS  "ucode_num_ports"
#define spn_UCODE_PORT  "ucode_port"

/* Block types for ucode port property <b-type> <s-type> */
#define spn_UCODE_PORT_TYPE_GE  "ge"
#define spn_UCODE_PORT_TYPE_XE  "xe"
#define spn_UCODE_PORT_TYPE_SPI  "spi"
#define spn_UCODE_PORT_TYPE_PCI  "pci"
#define spn_UCODE_PORT_TYPE_HG  "hg"
/*
 * This property is valid on FE
 * It selects a particular packet buffer for a port
 */
#define spn_PORT_PB_SELECT  "pb_select"

/* bcm_rx parses out the sbx Egress Route header when set */
#define spn_RX_PARSE_ERH  "rx_parse_erh"

/* defines the number of FTEs used for local gports, default: SBX_MAX_GPORTS */
#define spn_FTE_NUM_LOCAL_GPORTS  "fte_num_local_gports"
/*
 *  Following properties are global
 *    spn_FABRIC_CONFIGURATION
 *       - fabric mode
 *         0: DMode (qe2000 + bm3200 system)
 *         1:
 *         2:
 *    spn_MTU_SIZE
 *       - MTU size in bytes used for wred calculation
 *    spn_BIST_ENABLE
 *       - 0: not run self test, 1: run self test
 *    spn_HALF_BUS_MODE
 *       - 0: full-bus mode system, 1: half-bus mode system
 *    spn_ACTIVE_SWITCH_CONTROLLER_ID
 *       - 0: Switch controller 0 is active, 1: Switch controller 1 is active
 *    spn_REDUNDANCY_MODE
 *       - 0:     manual mode
 *         1:     1+1 control and data plane
 *         2:     1+1 control and Load sharing data plane
 *         3:     1+1 control and Enhanced Load sharing data plane
 *         4:     Load sharing data plane
 *         5:     Enhanced load sharing data plane
 *    spn_MAX_FAILED_LINKS
 *       - max number of failed links before QE is mapped out, used for
 *         load sharing data plane redundancy mode
 *    spn_HYBRID_MODE
 *       - System configuration is Hybrid mode. 1 indicates hybrid mode
 *    spn_NUM_MAX_FABRIC_PORTS_ON_MODULE
 *       - maximim fabric ports on any module. Required for Hybrid mode.
 *       - Required on each FE for all modes; must be set to the maximum number
 *         of fabric ports on any one line card present in the system.
 *    spn_NUM_MIN_FABRIC_PORTS_ON_MODULE
 *       - minimum fabric ports on any module. Required for Hybrid mode.
 *    spn_ARBPORT_ALLOC_MODE
 *    spn_QE_TME_MODE
 *       - specifies if the QE is running in TME mode.
 *         1 means TME
 *         2 means Hybrid
 *         3 means TME bypass  (Sportster)
 * 
 *  Following properties are global but required for sirius and polaris only
 *    spn_40G_PIPE_MODE
 *    spn_BACKPLANE_SERDES_SPEED
 *    spn_BACKPLANE_SERDES_ENCODING
 * 
 *    spn_SCI_PORT_MODID
 *       - specifies the modid associated with a SCI port
 * 
 */
#define spn_FABRIC_CONFIGURATION  "fabric_configuration"
#define spn_DISCARD_MTU_SIZE  "discard_mtu_size"
#define spn_DISCARD_QUEUE_SIZE  "discard_queue_size"
#define spn_BIST_ENABLE  "bist_enable"
#define spn_HALF_BUS_MODE  "half_bus_mode"
/*
 * backplane serdes speed. Supported on SBX fabric
 * 
 * 3125: 3.125 GHz
 * 6250: 6.250 GHz
 * 6500: 6.500 GHz
 */
#define spn_BACKPLANE_SERDES_SPEED  "backplane_serdes_speed"
/*
 * backplane serdes encoding. Supported on SBX fabric
 * 
 * 1: 8b10b encoding
 * 0: 64b66b encoding.
 * 
 * On DNX Devices this property can be defined per port.
 * The following values supported for DFE:
 * 0: 8b9b Legacy FEC encoding
 * 1: 8b10b encoding
 * 2: 64b66b FEC encoding
 * 3: 64b66b BEC encoding.
 * 4: 64b66b encoding
 */
#define spn_BACKPLANE_SERDES_ENCODING  "backplane_serdes_encoding"
#define spn_ACTIVE_SWITCH_CONTROLLER_ID  "active_switch_controller_id"
#define spn_REDUNDANCY_MODE  "redundancy_mode"
#define spn_MAX_FAILED_LINKS  "max_failed_links"
#define spn_QE_TME_MODE  "qe_tme_mode"
#define spn_HOLD_PRI_NUM_TIMESLOTS  "hold_pri_num_timeslots"
#define spn_HYBRID_MODE  "hybrid_mode"
#define spn_NUM_MAX_FABRIC_PORTS_ON_MODULE  "num_max_fabric_ports_on_module"

/* Maximum number of SFI links used to connect to a QE2K device */
#define spn_QE2K_LINKS  "qe2k_links"

/* Maximum number of SFI links used to connect to a Sirius device */
#define spn_SIRIUS_LINKS  "sirius_links"
#define spn_SCI_PORT_MODID  "sci_port_modid"

/* defines if the chassis has this module type. 1 => TRUE, 0 => FALSE */
#define spn_SYSTEM_IS_MODULE_CUSTOM1_IN_SYSTEM  "system_is_module_custom1_in_system"

/* defines the logical crossbar links for this module */
#define spn_MODULE_CUSTOM1_LINKS  "module_custom1_links"
/*
 * L2 Aging Cycles
 * 
 * Indicates the number of cycles in an L2 aging interval.  This value
 * affects the number of L2 entries to be processed by the aging engine
 * during a run.
 * A value of 1 results in processing the entire L2 table during
 * an age run cycle.
 */
#define spn_L2_AGE_CYCLES  "l2_age_cycles"

/* L2 s/w aging cycle recurrence interval in seconds */
#define spn_L2_SW_AGING_INTERVAL  "l2_sw_aging_interval"

/* Priority of the s/w based L2 aging thread */
#define spn_L2AGE_THREAD_PRI  "l2age_thread_pri"

/* Run s/w based L2 aging thread by default */
#define spn_RUN_L2_SW_AGING  "run_l2_sw_aging"

/* Enable L2 overflow event processing by default */
#define spn_L2_OVERFLOW_EVENT  "l2_overflow_event"

/* Enable/Disable Memory table cache */
#define spn_MEM_CACHE_ENABLE  "mem_cache_enable"

/* Defines the maximum number of l2 cache entries */
#define spn_L2CACHE_MAX  "l2cache_max_idx"
/*
 * On SBX QE devices Local McGroup resources start from the following index.
 *     - VLANS McGroup  => 0-4095
 *     - Global McGroup => 4096 - (value indicated by (spn_MC_GROUP_LOCAL_START_INDEX - 1))
 *     - Local McGroup  => (value indicated by spn_MC_GROUP_LOCAL_START_INDEX) - (max device limit)
 */
#define spn_MC_GROUP_LOCAL_START_INDEX  "mcast_group_local_start_index"
#define spn_PORT_IS_SCI  "port_is_sci"
#define spn_PORT_IS_SFI  "port_is_sfi"
#define spn_LINK_THRESHOLD  "link_threshold"
#define spn_LINK_DRIVER_STRENGTH  "link_driver_strength"
#define spn_LINK_DRIVER_EQUALIZATION  "link_driver_equalization"
/*
 * Following properties are valid on QE only
 *   spn_NUM_MODULES
 *      - specifies the number of QEs in the system
 *   spn_NUM_MODULES_00_31_MASK
 *      - mask of queues with module/node 00 - 31
 *   spn_NUM_MODULES_32_63_MASK
 *      - mask of queues with module/node 32 - 63
 *   spn_NUM_MODULES_64_95_MASK
 *      - mask of queues with module/node 64 - 95
 *   spn_SPI_0_REF_CLOCK_SPEED
 *      - Reference Clock speed in KHz for SPI port 0.
 *   spn_SPI_0_CLOCK_SPEED
 *      - Clock speed specified in KHz for SPI port 0.
 *   spn_SPI_1_REF_CLOCK_SPEED
 *      - Reference Clock speed in KHz for SPI port 1.
 *   spn_SPI_1_CLOCK_SPEED
 *      - Clock speed specified in KHz for SPI port 1.
 *   spn_QE_SPI_0_SUBPORTS
 *      - specifies the number of sub-ports on SPI port 0
 *   spn_QE_SPI_1_SUBPORTS
 *      - specifies the number of sub-ports on SPI port 1
 *   spn_SPI_0_NUM_TX_SUBPORTS
 *      - specifies the number of Tx sub-ports on SPI port 0
 *        If not specified this defaults to the value of spn_QE_SPI_0_SUBPORTS.
 *        The SPI calender is set for these number of ports. The SPI "cal_length"
 *        configuration is set to a value one less then the number of ports.
 *   spn_SPI_0_NUM_RX_SUBPORTS
 *      - specifies the number of Rx sub-ports on SPI port 0
 *        If not specified this defaults to the value of spn_QE_SPI_0_SUBPORTS.
 *        The SPI calender is set for these number of ports. The SPI "cal_length"
 *        configuration is set to a value one less then the number of ports.
 *   spn_SPI_1_NUM_TX_SUBPORTS
 *      - specifies the number of Tx sub-ports on SPI port 1
 *        If not specified this defaults to the value of spn_QE_SPI_1_SUBPORTS.
 *        The SPI calender is set for these number of ports. The SPI "cal_length"
 *        configuration is set to a value one less then the number of ports.
 *   spn_SPI_1_NUM_RX_SUBPORTS
 *      - specifies the number of Rx sub-ports on SPI port 1
 *        If not specified this defaults to the value of spn_QE_SPI_1_SUBPORTS.
 *        The SPI calender is set for these number of ports. The SPI "cal_length"
 *        configuration is set to a value one less then the number of ports.
 *   spn_SPI_0_TX_CAL_STATUS_REP_CNT
 *      - specifies Tx cal_m for SPI Port 0
 *        This is the repeatition count for status. This value maps directly to SPI
 *        "cal_m" configuraton.
 *   spn_SPI_0_RX_CAL_STATUS_REP_CNT
 *      - specifies Rx cal_m for SPI Port 0
 *        This is the repeatition count for status. This value maps directly to SPI
 *        "cal_m" configuraton.
 *   spn_SPI_1_TX_CAL_STATUS_REP_CNT
 *      - specifies Tx cal_m for SPI Port 1
 *        This is the repeatition count for status. This value maps directly to SPI
 *        "cal_m" configuraton.
 *   spn_SPI_1_RX_CAL_STATUS_REP_CNT
 *      - specifies Rx cal_m for SPI Port 0
 *        This is the repeatition count for status. This value maps directly to SPI
 *        "cal_m" configuraton.
 *   spn_QE_SPI_0_SUBPORT_SPEED
 *      - specifies the SPI 0 subport speed in Mbps
 *        if not specified, default to 1Gbps if spn_QE_SPI_0_SUBPORTS
 *        has more than 1 subport, otherwise default to 10 Gbps
 *   spn_QE_SPI_1_SUBPORT_SPEED
 *      - specifies the SPI 1 subport speed in Mbps
 *        if not specified, default to 1Gbps if spn_QE_SPI_1_SUBPORTS
 *        has more than 1 subport, otherwise default to 10 Gbps
 *   spn_QE_SPI_0_SUBPORT_IS_REQUEUE
 *      - specifies the SPI 0 subport is in requeue mode (for hybrid mode)
 *   spn_QE_SPI_1_SUBPORT_IS_REQUEUE
 *      - specifies the SPI 1 subport is in requeue mode (for hybrid mode)
 *   spn_QE_MEMORY_PART
 *      - specifies the memory part
 *        0:256mb DDR2 memory   , 2: 512mb DDR2 memory
 *   spn_QE_MAX_ARRIVAL_RATE
 *      - max arrival rate in Mbps
 *   spn_QE_CLOCK_SPEED
 *      - qe device clock speed in Mhz
 *   spn_QE_LONG_DDR_MEMTEST
 *      -
 *   spn_QE_2_5GBPS_LINKS
 *      -
 *   spn_QE_EG_MVT_SIZE
 *      - Number of MVT entries. Valid range (0,1,2)
 *        0: 12k entries.  1: 24k entries.  2: 48k entries
 *   spn_QE_MVR_MAX_SIZE
 *      - Maximum size of MVR in MDB elements.  Valid range = [1..5]
 *   spn_QE_EG_MC_DROP_ON_FULL
 *      -
 *   spn_QE_EI_PORT_TIMEOUT
 *      -
 *   spn_QE_GLOBAL_SHAPING_ADJUST
 *      -
 *   spn_QE_EGR_SHAPING_ADJUST
 *      - port or global parameter on Sirius units
 *        From Sirius specs: cell length adjustment.  It is an unsigned
 *        positive value added to cell length at packet SOP.
 *        Valid range is 0..31
 *   spn_QE_MIX_HIGH_LOW_RATE_FLOWS
 *      -
 *   spn_QE_SPI_0_FULL_PACKET_MODE
 *      - SPI 0 interface full packet mode
 *        0: Burst Interleaved
 *        1: Packet Interleaved, N:1 channel sharing mode
 *        2: Packet interleaved, full packet mode
 *   spn_QE_SPI_1_FULL_PACKET_MODE
 *      - SPI 1 interface full packet mode
 *        0: Burst Interleaved
 *        1: Packet Interleaved, N:1 channel sharing mode
 *        2: Packet interleaved, full packet mode
 *   spn_SPI_0_EI_LINES
 *      - Maximum of lines to use in EI buffer for port 0
 *   spn_SPI_1_EI_LINES
 *      - Maximum of lines to use in EI buffer for port 1
 *   spn_QE_QUEUES_PER_INGRESS_SHAPER
 *      - Number of queues for each ingress shaper. Valid Range(1,4,8,16)
 *   spn_QE_SC_TXDMA_SOT_DELAY_CLOCKS
 *      -
 *   spn_QE_SFI_TIMESLOT_OFFSET_CLOCKS
 *      -
 *   spn_QE_EP_DISABLE                 "qe_ep_disable"
 *      - Set to 1 to disable EP
 *   spn_QE_ERH_TYPE                   "qe_erh_type"
 *      - Set to 0 for C2-QE2K native G2P3 
 *      - Set to 1 for C2-Sirius header format
 *      - Set to 2 for C2-QE2K-Sirius interop header format
 *   spn_QE_MVT_FORMAT                 "qe_mvt_format"
 *      - Indicates EP format (MVTDA, MVTDB), Reference "encap_id" parameter
 *        of multicast Group API.
 *        0 -> Format required by gu2k, 1 -> 0-13 bits are mvtda, and 14-17 bits are mvtdb
 *   spn_QE_GRANT_OFFSET               "qe_grant_offset"
 *      - Number of clock cycles to wait after Start of Timeslot signal.
 *        Valid range (0-31), Default to 0xE
 *   spn_EGRESS_MC_EF_TIMEOUT
 *      - Timeout specified in micro-seconds
 *        A value of 0 indicates no timeout
 *   spn_EGRESS_MC_NEF_TIMEOUT
 *      - Timeout specified in micro-seconds
 *        A value of 0 indicates no timeout
 *   spn_EGRESS_FIFO_INDEPENDENT_FC
 *      - Egress FIFO independent flow control, 1 -> single bit full status mode,
 *                                              0 -> double bit full status mode
 *   spn_UNICAST_QUEUE_RESOURCE_ALLOCATION_MODE
 *      - Egress queue resource managment,      1 -> Do not allocate sysport and fcd
 *                                              0 -> Allocate sysport and fcd
 *   spn_DEMAND_SCALE
 *      - Scaling factor during bandwidth management to achieve better accuracy
 *                                              0 -> no scale
 *                                              n -> scale down 2^n
 *   spn_BCM_COSQ_SP_MODE
 *      - Specifies the Strict Priority (SP) mode. Following are the options
 *        0 -> SP is in BAG (BME) and queue type (on QE) indicates Hungry/Satisfied protocol.
 *        1 -> SP is in BAG (BME) for accounting purposes and queue Type (on QE) indicates
 *             Global SP.
 * 
 *   spn_FABRIC_CONNECT_MIN_UTILIZATION
 *      - Fabric minimum utilization (anemic watermark setting). this is specified
 *        as a percentage.
 *   spn_FABRIC_CONNECT_MAX_AGE_TIME
 *      - Fabric conection age time (anemic age timeout). This is specified
 *        in micro-seconds.
 *   spn_FABRIC_QOS_OPTIMIZE
 *      - QoS optimization.
 *        0 -> no optimization
 *        1 -> optimization
 */
#define spn_CORE_CLOCK_SPEED  "core_clock_speed"
#define spn_NUM_MODULES  "num_modules"
#define spn_NUM_MODULES_00_31_MASK  "num_modules_00_31_mask"
#define spn_NUM_MODULES_32_63_MASK  "num_modules_32_63_mask"
#define spn_NUM_MODULES_64_95_MASK  "num_modules_64_95_mask"
#define spn_SPI_0_REF_CLOCK_SPEED  "spi_0_ref_clock_speed"
#define spn_SPI_0_CLOCK_SPEED  "spi_0_clock_speed"
#define spn_SPI_1_REF_CLOCK_SPEED  "spi_1_ref_clock_speed"
#define spn_SPI_1_CLOCK_SPEED  "spi_1_clock_speed"
#define spn_QE_SPI_0_SUBPORTS  "qe_spi_0"
#define spn_QE_SPI_1_SUBPORTS  "qe_spi_1"
#define spn_SPI_0_NUM_TX_SUBPORTS  "spi_0_num_tx_subports"
#define spn_SPI_0_NUM_RX_SUBPORTS  "spi_0_num_rx_subports"
#define spn_SPI_1_NUM_TX_SUBPORTS  "spi_1_num_tx_subports"
#define spn_SPI_1_NUM_RX_SUBPORTS  "spi_1_num_rx_subports"
#define spn_SPI_0_TX_CAL_STATUS_REP_CNT  "spi_0_tx_cal_status_rep_cnt"
#define spn_SPI_0_RX_CAL_STATUS_REP_CNT  "spi_0_rx_cal_status_rep_cnt"
#define spn_SPI_1_TX_CAL_STATUS_REP_CNT  "spi_1_tx_cal_status_rep_cnt"
#define spn_SPI_1_RX_CAL_STATUS_REP_CNT  "spi_1_rx_cal_status_rep_cnt"
#define spn_SPI_INTERLEAVE_BURST_SIZE  "spi_interleave_burst_size"
#define spn_QE_SPI_0_SUBPORT_SPEED  "qe_spi_0_subport_speed"
#define spn_QE_SPI_1_SUBPORT_SPEED  "qe_spi_1_subport_speed"
#define spn_QE_SPI_0_SUBPORT_IS_REQUEUE  "qe_spi_0_subport_is_requeue"
#define spn_QE_SPI_1_SUBPORT_IS_REQUEUE  "qe_spi_1_subport_is_requeue"
#define spn_QE_HALF_BUS_MODE  "qe_half_bus_mode"
#define spn_QE_MEMORY_PART  "qe_memory_part"
#define spn_QE_MAX_ARRIVAL_RATE  "qe_max_arrival_rate"
#define spn_QE_CLOCK_SPEED  "qe_clock_speed"
#define spn_QE_LONG_DDR_MEMTEST  "qe_long_ddr_memtest"
#define spn_QE_2_5GBPS_LINKS  "qe_2_5gbps_links"
#define spn_QE_EG_MVT_SIZE  "qe_eg_mvt_size"

/* Specify dense-mode MVR size on devices that have variable-size MVR support. */
#define spn_QE_MVR_MAX_SIZE  "qe_mvr_max_size"

/* Nonzero to set dual-lookup mode for multicast, where OI translation space is split, providing an encapId and a Subscriber lookup per replicant. */
#define spn_QE_MC_DUAL_LOOKUP  "qe_mc_dual_lookup"

/* Nonzero to have the device redistribute unicast frames across aggregates based upon LBID, overriding the front-panel device distribution decision. */
#define spn_QE_LAG_UC_REDIST  "qe_lag_uc_redist"

/* Default is 0 (FALSE, normal).  Set to 1 (TRUE) to indicate diagnostic mode.  In diagnostic mode, some devices require additonal information (such as inserted header). */
#define spn_PORT_DIAG_MODE  "port_diag_mode"

/* Default is zero length string.  Specifies header to be inserted in diagnostic mode, expressed as a string of hexadecimal nybbles (two per byte).  Length may vary according to device requirements. */
#define spn_PORT_DIAG_HEADER  "port_diag_header"
#define spn_QE_EG_MC_DROP_ON_FULL  "qe_eg_mc_drop_on_full"
#define spn_QE_EI_PORT_TIMEOUT  "qe_ei_port_timeout"
#define spn_QE_ERH_TYPE  "qe_erh_type"
#define spn_QE_GLOBAL_SHAPING_ADJUST  "qe_global_shaping_adjust"
#define spn_QE_EGR_SHAPING_ADJUST  "qe_egr_shaping_adjust"
#define spn_QE_MIX_HIGH_LOW_RATE_FLOWS  "qe_mix_high_low_rate_flows"
#define spn_QE_SPI_0_FULL_PACKET_MODE  "qe_spi_0_full_packet_mode"
#define spn_QE_SPI_1_FULL_PACKET_MODE  "qe_spi_1_full_packet_mode"
#define spn_QE_SPI_0_EI_LINES  "qe_spi_0_ei_lines"
#define spn_QE_SPI_1_EI_LINES  "qe_spi_1_ei_lines"
#define spn_QE_QUEUES_PER_INGRESS_SHAPER  "qe_queues_per_ingress_shaper"
#define spn_QE_SC_TXDMA_SOT_DELAY_CLOCKS  "qe_sc_txdma_sot_delay_clocks"
#define spn_QE_SFI_TIMESLOT_OFFSET_CLOCKS  "qe_sfi_timeslot_offset_clocks"
#define spn_QE_EP_DISABLE  "qe_ep_disable"
#define spn_QE_MVT_FORMAT  "qe_mvt_format"
#define spn_QE_GRANT_OFFSET  "qe_grant_offset"
#define spn_EGRESS_MC_EF_TIMEOUT  "egress_mc_ef_timeout"
#define spn_EGRESS_MC_NEF_TIMEOUT  "egress_mc_nef_timeout"
#define spn_EGRESS_FIFO_INDEPENDENT_FC  "egress_fifo_independent_fc"
#define spn_UNICAST_QUEUE_RESOURCE_ALLOCATION_MODE  "unicast_queue_resource_allocation_mode"
#define spn_DEMAND_SCALE  "demand_scale"
#define spn_BCM_COSQ_SP_MODE  "bcm_cosq_sp_mode"
#define spn_IF_SUBPORTS  "if_subports"
#define spn_IF_SUBPORTS_CREATE  "if_subports_create"
/*
 * When set to 1, SDK setup the child gport ingress scheduler hierarchy
 * When set to 0, Application code is required to explicitly hook up 
 *                child gport in the ingress scheduler hierarchy
 */
#define spn_TM_FABRIC_PORT_HIERARCHY_SETUP  "tm_fabric_port_hierarchy_setup"
/*
 * When set to 1, SDK setup the child gport egress scheduler hierarchy
 * When set to 0, Application code is required to explicitly hook up 
 *                child gport in the egress scheduler hierarchy
 */
#define spn_ES_FABRIC_PORT_HIERARCHY_SETUP  "es_fabric_port_hierarchy_setup"
/*
 * Apply to bcm88235 chips.
 * Set to 1 when bcm88235 interops with XGS device family.
 * Set to 0, when bcm88235 interops with XCore device family.
 */
#define spn_IF_PROTOCOL  "if_protocol"
#define spn_FABRIC_EGRESS_SETUP  "fabric_egress_setup"
#define spn_FABRIC_CONNECT_MIN_UTILIZATION  "fabric_connect_min_utilization"
#define spn_FABRIC_CONNECT_MAX_AGE_TIME  "fabric_connect_max_age_time"
#define spn_FABRIC_QOS_OPTIMIZE  "fabric_qos_optimize"
#define spn_QE_MVT_OLD_CONFIGURATION  "qe_mvt_old_configuration"
/*
 * Supported only on QE2000. 4 FIFO Model. The first two are depricated.
 *    0: Multicast, Unicast EF, Unicast NEF
 *    1: Unicast EF, Multicast, Unicast NEF (Default for Multcast EF)
 *    2: Unicast EF, Unicast NEF, Multicast (Default for Multicast NEF)
 *  Multicast EF has higher priority then Mulicast NEF.
 */
#define spn_QE_HI_MC_PRIORITY  "qe_hi_mc_priority"
#define spn_QE_LO_MC_PRIORITY  "qe_lo_mc_priority"
#define spn_QE_THRESH_DROP_LIMIT  "qe_thresh_drop_limit"
#define spn_EGRESS_MCAST_EF_PRI  "egress_mcast_ef_pri"
#define spn_EGRESS_MCAST_NEF_PRI  "egress_mcast_nef_pri"
/*
 * Defines the QE2000 "len_adj" location in Route header
 *    0: Word 2, Bits  7-10
 *    1: Word 2, bits 12-15
 */
#define spn_PACKET_ADJUST_FORMAT  "packet_adjust_format"
/*
 * Valid on QE2000 only: Egress mcast descriptor size properties for EF and non-EF
 * the size is 2^n so, if set to 5, the size is 32 entries
 * the maximum size is 64 or n=6  minimum size is n=3
 * 
 * can be set for all units
 * egress_mcast_ef_desc=5
 * 
 * can be set for a particular unit (4)
 * egress_mcast_ef_desc.4=5
 * 
 * can be set for a particular port (2) on a particular unit (4)
 * egress_mcast_ef_desc.port2.4=5
 * 
 * if this property is not set the descriptors are distributed equally
 * based on the total number of SPI subports used - derived from qe_spi_0
 * and qe_spi_1
 */
#define spn_EGRESS_MCAST_EF_DESC_SZ  "egress_mcast_ef_desc_sz"
#define spn_EGRESS_MCAST_NEF_DESC_SZ  "egress_mcast_nef_desc_sz"

/* scheduling template for local queues */
#define spn_TM_LOCAL_SCHED_DISCIPLINE_TEMPLATE  "tm_local_sched_discipline_template"

/* scheduling template for nodes higher up in hierarchy */
#define spn_TM_SCHED_DISCIPLINE_TEMPLATE  "tm_sched_discipline_template"
/*
 * Following properties are valid on BME or SE or LCM or BME+SE device
 *     spn_BM_DEVICE_MODE
 *        - specifies mode the BM device is running with
 *          0: BME only
 *          1: SE only
 *          2: BME+SE
 *          3: LCM only
 */
#define spn_BM_DEVICE_MODE  "bm_device_mode"
/*
 * Following properties are vaild on BME
 *     spn_BME_SWITCH_CONTROLLER_ID
 *   - switch controller ID for the BME
 *     spn_BME_NUM_ESETS
 *        - Number of ESETS. Relevant for Polaris/QE2000 configuration.
 *          This configuration allows 1024 ESETS. ESETS above 128 require
 *          special VOQ allocation algorithm.
 */
#define spn_BME_SWITCH_CONTROLLER_ID  "bme_switch_controller_id"
#define spn_BME_NUM_ESETS  "bme_num_esets"

/* number of resources to be allocated for user visible ESET. 0: default mode, 4: 4 Mc FIFOs/ESET Resources */
#define spn_BME_NUM_RESOURCES_PER_ESET  "bme_num_resources_per_eset"
/*
 * valid for SBX devices.
 * Relevant for specific configurations (i.e has associated constraints).
 * Setting it to 1 overrides the errata that requires the sysport/eset
 * name space to not overlap. Setting it to 1 is relavent if grants will
 * be issued to either unicast queues or multicast queues.
 * e.g. this mode (allowing overlap) can be used to acheive 1+1 node
 * protection for unicast packets. On Ingress packets are queued to
 * Multicast queues (allowing fabric replication) and on egress packets
 * are treated as unicast.
 */
#define spn_BCM8823X_ALLOW_UCAST_MCAST_RESOURCE_OVERLAP  "bcm8823X_allow_ucast_mcast_resource_overlap"
#define spn_ENABLE_ALL_MODULE_ARBITRATION  "enable_all_module_arbitration"
/*
 * 64 => arbitration port algorithm reserves odd buckets for nef
 *       (optimized for Nodes)
 * 32 => arbitration port algorithm reserves odd entries from same bucket
 *       for nef (optimized for ports)
 */
#define spn_ARBITRATION_PORT_MAX_NODES  "arbitration_port_max_nodes"
#define spn_SBX_MC_QID_BASE  "sbx_mc_qid_base"

/* Following properties are valid on sirius */

/* Define number of external ram (ddr) devices used */
#define spn_EXT_RAM_PRESENT  "ext_ram_present"

/* Define number of columns of external ram (ddr) devices used */
#define spn_EXT_RAM_COLUMNS  "ext_ram_columns"

/* Define number of rows of external ram (ddr) devices used */
#define spn_EXT_RAM_ROWS  "ext_ram_rows"

/* Define number of banks of external ram (ddr) devices used */
#define spn_EXT_RAM_BANKS  "ext_ram_banks"
#define spn_SIRIUS_DDR_HW_TRAIN  "sirius_ddr_hw_train"
#define spn_SIRIUS_DDR_SW_DDR_TRAIN_INTERVAL  "sirius_ddr_sw_ddr_train_interval"
#define spn_SIRIUS_SW_DDR_TRAIN_THREAD_PRI  "sirius_sw_ddr_train_thread_pri"
#define spn_SIRIUS_DDR3_CLOCK_MHZ  "sirius_ddr3_clock_mhz"
#define spn_SIRIUS_DDR3_MEM_GRADE  "sirius_ddr3_mem_grade"
#define spn_SIRIUS_DDR3_DQ_ADJUST  "sirius_ddr3_dq_adjust"
#define spn_SIRIUS_DDR3_CTL_ADJUST  "sirius_ddr3_ctl_adjust"
#define spn_SIRIUS_DDR3_RD_EN_ADJUST  "sirius_ddr3_rd_en_adjust"
#define spn_SIRIUS_DDR3_TREAD_ENB  "sirius_ddr3_tread_enb"
#define spn_SIRIUS_DDR3_READ_DLY  "sirius_ddr3_read_dly"
#define spn_SIRIUS_DDR3_READ_EN_VDL  "sirius_ddr3_read_en_vdl"
#define spn_SIRIUS_DDR3_READ_VDL  "sirius_ddr3_read_vdl"
/*
 * Following properties are vaild on LCM
 *     spn_LCM_PASSTHROUGH_MODE
 *        - 1 for passthrough mode, 0 for 1+1 mode
 *     spn_LCM_ACTIVE_PLANE_ID
 *        - 0/1 specify active data plane id
 *     spn_LCM_DATAPLANE_0_MAP
 *       - per port(link) property, specify the destination port(link) for the port on
 *          dataplane 0
 *     spn_LCM_DATAPLANE_1_MAP
 *        - per port(link) property, specify the destination port(link) for the port on
 *          dataplane 1
 *     spn_LCM_XCFG_AB_INPUT_POLARITY_REVERSED
 */
#define spn_LCM_PASSTHROUGH_MODE  "lcm_passthrough_mode"
#define spn_LCM_DATAPLANE_0_MAP  "lcm_dataplane_0_map"
#define spn_LCM_DATAPLANE_1_MAP  "lcm_dataplane_1_map"
#define spn_LCM_XCFG_AB_INPUT_POLARITY_REVERSED  "lcm_xcfg_ab_input_polarity_reversed"
/*
 * Following properties are used by the diag shell only
 *     spn_DIAG_CHASSIS
 *        - defines the chassis type, 0 standalone
 *          1 fabric card + line cards
 *     spn_DIAG_COSQ_INIT
 *        - diag shell performs gport adds. Must be used with bcm_cosq_init=0
 */
#define spn_DIAG_CHASSIS  "diag_chassis"
#define spn_DIAG_SERDES_MASK  "diag_serdes_mask"
#define spn_DIAG_NODES_MASK  "diag_nodes_mask"
#define spn_DIAG_SLAVE_FC  "diag_slave_fc"
#define spn_DIAG_SLOT  "diag_slot"
#define spn_DIAG_COSQ_INIT  "diag_cosq_init"
#define spn_DIAG_EASY_RELOAD  "diag_easy_reload"
#define spn_DIAG_DISABLE_INTERRUPTS  "diag_disable_interrupts"
/*
 *  Specifies to enable or disable MACSEC feature on the 
 *  specified port. MACSEC feature might be provided by a PHY device attached to 
 *  switch port. (Default is to disable MACSEC)
 * 
 */
#define spn_MACSEC_ENABLE  "macsec_enable"

/*  specifies the MDIO address for the MACSEC PHY device. */
#define spn_MACSEC_DEV_ADDR  "macsec_dev_addr"

/*  specifies Port index within the multi-port MACSEC PHY device. */
#define spn_MACSEC_PORT_INDEX  "macsec_port_index"

/*  Specifies to enable MACSEC fixed latency mode. */
#define spn_MACSEC_FIXED_LATENCY_ENABLE  "macsec_fixed_latency_enable"

/* Tab width for diagnostics (especially 'show counters') */
#define spn_DIAG_TABS  "diag_tabs"
/*
 * ASCII comma character for show counters
 * Use 44 for comma, 46 for period, 0 for none
 */
#define spn_DIAG_COMMA  "diag_comma"
#define spn_SRP_ACK_AGING_ON  "SRP_ACK_AGING_ON"
#define spn_EAV_SRP_INTERVAL  "EAV_SRP_INTERVAL"
#define spn_EAV_DISCOVERY_SRC_MAC  "EAV_DISCOVERY_SRC_MAC"
#define spn_EAV_TIMESYNC_MONITOR_PBMP  "EAV_TIMESYNC_MONITOR_PBMP"
#define spn_EAV_DISCOVERY_MASTER  "EAV_DISCOVERY_MASTER"
#define spn_EAV_TIMESYNC_INTERVAL  "EAV_TIMESYNC_INTERVAL"
#define spn_EAV_TIMESYNC_SPECIAL_LOOP_PBMP  "EAV_TIMESYNC_SPECIAL_LOOP_PBMP"
#define spn_EAV_TIMESYNC_DISABLE_PDELAY  "EAV_TIMESYNC_DISABLE_PDELAY"
#define spn_DIAG_EMULATOR_PARTIAL_INIT  "diag_emulator_partial_init"
/*
 * PCI device ID override allows you to pretend you are running
 * on a different chip (e.g. force 56504 driver to run on 56514)
 * NOTE: this one is actually in sysconf.c, not the driver.
 */
#define spn_PCI_OVERRIDE_DEV  "pci_override_dev"
/*
 * PCI revision ID override allows you to pretend you are running
 * on a different revision of a chip (e.g. force 56504 A0 driver to run on 56504 B0)
 * NOTE: this one is actually in sysconf.c, not the driver.
 */
#define spn_PCI_OVERRIDE_REV  "pci_override_rev"
#define spn_DIAG_ASSIGN_SYSPORT  "diag_assign_sysport"
#define spn_DEFIP_CAM_TM  "defip_cam_tm"
#define spn_FP_CAM_TM  "fp_cam_tm"
#define spn_VFP_CAM_TM  "vfp_cam_tm"
#define spn_EFP_CAM_TM  "efp_cam_tm"
#define spn_EMULATION_REGS  "emulation_regs"
#define spn_OTP_MEM_REPAIR_REG  "otp_mem_repair_reg"
#define spn_OTP_MEM_REPAIR_VAL  "otp_mem_repair_val"
#define spn_FIFO_DELAY_VALUE  "fifo_delay_value"
#define spn_BCM56840_CONFIG  "bcm56840_config"
#define spn_BCM56640_CONFIG  "bcm56640_config"

/* Enable 1x100GE + 1xHG[127] mode for BCM56640 */
#define spn_BCM56640_1X100_1X127  "bcm56640_1x100_1x127"

/* Enable 1x100GE + 4xHG[32] mode for BCM56640 */
#define spn_BCM56640_1X100_4X32  "bcm56640_1x100_4x32"

/* Enable 1x100GE + 8xHGduo[16] mode for BCM56640 */
#define spn_BCM56640_1X100_8X16  "bcm56640_1x100_8x16"

/* Enable 1x100GE + 3xFlex.HG[42] mode for BCM56640 */
#define spn_BCM56640_1X100_3X42  "bcm56640_1x100_3x42"

/* Enable 3xFlex.HG[42] + 1xHG[127] mode for BCM56640 */
#define spn_BCM56640_3X42_1X127  "bcm56640_3x42_1x127"

/* Enable 3xFlex.HG[42] + 4xHG[32] mode for BCM56640 */
#define spn_BCM56640_3X42_4X32  "bcm56640_3x42_4x32"

/* Enable 3xFlex.HG[42] + 8xHGduo[16] mode for BCM56640 */
#define spn_BCM56640_3X42_8X16  "bcm56640_3x42_8x16"

/* Enable 3xFlex.40GE + 3xFlex.HG[42] mode for BCM56640, BCM56045 */
#define spn_BCM56640_3X40_3X42  "bcm56640_3x40_3x42"

/* Enable 3xFlex.HG[42] + 3xFlex.40GE mode for BCM56640, BCM56045 */
#define spn_BCM56640_3X42_3X40  "bcm56640_3x42_3x40"

/* Enable 3xFlex.40GE + 2Flex.HG[42] mode for BCM56046 */
#define spn_BCM56640_3X40_2X42  "bcm56640_3x40_2x42"

/* Enable 3xFlex.HG[42] + 2xFlex.40GE mode for BCM56046 */
#define spn_BCM56640_3X42_2X40  "bcm56640_3x42_2x40"

/* Enable 48xGE + 8xXFI mode */
#define spn_BCM56640_8X10  "bcm56640_8x10"

/* Enable 48xGE (or 28xGE) + 1x40GE + 4xHG[42] mode for BCM56643, BCM56648 (or BCM56649) */
#define spn_BCM56640_1X40_4X42  "bcm56640_1x40_4x42"

/* Enable 48xGE (or 28xGE) + 4xXFI + 1xHG[127] mode for BCM56643, BCM56648 (or BCM56649) */
#define spn_BCM56640_4X10_1X127  "bcm56640_4x10_1x127"

/* Enable 36xGE (or 28xGE) + 4xXFI + 2xHG[42] + 2xFlex.HG[42] mode for BCM56643, BCM56648 (or BCM56649) */
#define spn_BCM56640_4X10_4X42  "bcm56640_4x10_4x42"

/* Enable 36xGE (or 28xGE) + 4xXFI + 2xFlex.HG[42] + 2xHG[42] +  mode for BCM56643, BCM56648 (or BCM56649) */
#define spn_BCM56643_4X10_4X42  "bcm56643_4x10_4x42"

/* Enable 24GE(line rate encap) + 2xHG[25] + 2xHG[25] mode for BCM56644 */
#define spn_BCM56644_24G  "bcm56644_24g"

/* Enable 48xGE (or 28xGE) + 4xXFI + 2xHG[42] mode for BCM56540, BCM56545 (or BCM56541, BCM56546) */
#define spn_BCM56540_4X10_2X42  "bcm56540_4x10_2x42"

/* Enable 48xGE (or 28xGE) + 8xXFI mode for BCM56540, BCM56545 (or BCM56541, BCM56546) */
#define spn_BCM56540_8X10  "bcm56540_8x10"

/* Enable 24xGE + 4xXAUI + 2xXFI + 2xHG[12] mode for BCM56545 */
#define spn_BCM56545_24G  "bcm56545_24g"

/* Enable 28xGE + 2xF.XAUI/2x10GE + 2xF.HG[42] + 2xF.HG[21] mode for BCM56542 */
#define spn_BCM56542_2X10_2X42_2X21  "bcm56542_2x10_2x42_2x21"

/* Enable 10xFlex.XAUI + 4xXFI mode for BCM56544 */
#define spn_BCM56544_10X10_4X10  "bcm56544_10x10_4x10"

/* Enable 10xFlex.XAUI + 2xHG[42] mode for BCM56544 */
#define spn_BCM56544_10X10_2X42  "bcm56544_10x10_2x42"

/* Enable 4xXAUI + 12xXFI mode for BCM56544 */
#define spn_BCM56544_4X10_12X10  "bcm56544_4x10_12x10"

/* Enable 10xF.QSGMII + 3xF.HG[42] + 1GE mode for BCM56547 */
#define spn_BCM56547_3X42  "bcm56547_3x42"

/* Enable 12xF.QSGMII + 2xF.HG[42] + 1GE mode for BCM56547 */
#define spn_BCM56547_2X42  "bcm56547_2x42"

/* Enable 12xF.QSGMII + 2xFlex[4x10] + 1GE mode for BCM56344 */
#define spn_BCM56344_2X10  "bcm56344_2x10"

/* Enable 12xF.QSGMII + Flex[4x10] + 2xHG[21] + 1GE mode for BCM56340 */
#define spn_BCM56340_4X10  "bcm56340_4x10"

/* Enable 12xF.QSGMII + 2xFlex[4x10] + 1GE mode for BCM56340 */
#define spn_BCM56340_2X10  "bcm56340_2x10"
#define spn_BCM56340_CONFIG  "bcm56340_config"
#define spn_BCM5645X_CONFIG  "bcm5645x_config"
#define spn_TCAM_DAC_VALUE  "tcam_dac_value"
#define spn_TCAM_PTR_DIST  "tcam_ptr_dist"
#define spn_EXT_TCAM_USE_MIDL  "ext_tcam_use_midl"
/*
 * Greyhound(bcm 53400) could support varities of port configurations
 * including SKU options and flexible port configuration in TSCx for some SKUs.
 * SKU options and flexible port configuration on TSCx could be configured 
 * via bcm53400_init_port_config=<sku option> and the extended suffix _tsc[x].
 * i.e. bcm53400_init_port_config_tsc<# of TSC 0-5> = <SINGLE/XAUI/RXAUI>
 * SINGLE: Initialize 4 GE/XE ports in TSCx.
 * XAUI: Initialize 1 XAUI port in TSCx.
 * RXAUI: Initialize 2 RXAUI ports in TSCx.
 * Note: The Value or String will be valid only when the 
 * configurations (sku options and port configurations in TSCx) 
 * are listed in the Data sheet.
 */
#define spn_BCM53400_INIT_PORT_CONFIG  "bcm53400_init_port_config"

/* Enable hardware cable diagnostic function on 546x PHY devices */
#define spn_CABLE_DIAG_HW  "cable_diag_hw"
#define spn_LRP_BYPASS  "lrp_bypass"
#define spn_SPI_LOOPBACK  "spi_loopback"
#define spn_BCM88025_HPP_FREQ  "bcm88025_hpp_freq"
#define spn_BCM88025_SWS_FREQ  "bcm88025_sws_freq"
#define spn_BCM88025_UCODE  "bcm88025_ucode"
#define spn_BCM88030_UCODE  "bcm88030_ucode"
#define spn_BCM88025_DDR_TYPE  "bcm88025_ddr_type"
#define spn_BCM88025_SPI_FREQ  "bcm88025_spi_freq"
#define spn_DDR_TRAIN_NUM_ADDRS  "ddr_train_num_addrs"
#define spn_SEED  "seed"
#define spn_WIDE_SRAM0_X18  "wide_sram0_x18"
#define spn_NP0_ADDR_WIDTH  "np0_addr_width"
#define spn_NP0_DATA_WIDTH  "np0_data_width"
#define spn_NP1_ADDR_WIDTH  "np1_addr_width"
#define spn_NP1_DATA_WIDTH  "np1_data_width"
#define spn_WP_ADDR_WIDTH  "wp_addr_width"
#define spn_WP_DATA_WIDTH  "wp_data_width"
#define spn_WIDE_SRAM1_X18  "wide_sram1_x18"
/*
 * This configuration selects sws TDM config.
 * Valid only on BCM 8803x series.
 * SDK automatically determines TDM based on ports
 * This config allows user to override/specify a particular TDM
 */
#define spn_BCM88030_CONFIG  "bcm88030_config"
/*
 * This configuration allows specification/override source queue config.
 * Valid only on BCM 8803x series.
 * The parameter is per queue so has to be used in conjunction with Queue id
 * The value is comma seperated set of following parameters in a single line
 *     {max_pages},{de1_threshold},{de2_threshold},
 *     {fc_treshold},{min_data_pages},{min_hdr_pages}
 * Example: config_queue100=100,80,75,60,10,10
 */
#define spn_CONFIG_QUEUE  "config_queue"
/*
 * This configuration applies universal PR buffer profile .
 * Valid only on BCM 8803x series.
 * Valid values are
 *     1 (Config uses CLPORT and XTPORT)
 *     2 (Config uses CLPORT only)
 * This config is required if Hotswap feature is used
 */
#define spn_LINE_PR_BUFFER_PROFILE  "line_pr_buffer_profile"
/*
 * This configuration allows override for PT Line side Client Calendar.
 * Valid only on BCM 8803x series.
 * The value is a comma seperated list of Client calendar entries
 * Each entry ranges from 0-6, 6 specifies that slot is to be skipped
 * Maximum number of entries is 255
 */
#define spn_LINE_CLIENT_CALENDAR  "line_client_calendar"
/*
 * This configuration allows override for PT Line side Port Calendar.
 * Valid only on BCM 8803x series.
 * The value is a comma seperated list of Port calendar entries
 * Each entry ranges from 0-51, -1 specifies that slot is to be skipped
 * Maximum number of entries is 255
 */
#define spn_LINE_PORT_CALENDAR  "line_port_calendar"
/*
 * This configuration allows override for PT Fabric side Client Calendar.
 * Valid only on BCM 8803x series.
 * The value is a comma seperated list of Client calendar entries
 * Each entry ranges from 0-5, -1 specifies that slot is to be skipped
 * Maximum number of entries is 255
 */
#define spn_FABRIC_CLIENT_CALENDAR  "fabric_client_calendar"
/*
 * This configuration allows override for PT Fabric side Port Calendar.
 * Valid only on BCM 8803x series.
 * The value is a comma seperated list of Port calendar entries
 * Each entry ranges from 0-11, -1 specifies that slot is to be skipped
 * Maximum number of entries is 255
 */
#define spn_FABRIC_PORT_CALENDAR  "fabric_port_calendar"
/*
 * This configuration allows override for PT Port Fifo Allocation.
 * Valid only on BCM 8803x series.
 * This is typically per port configuration, unless all the ports are the same type
 * Each entry is the number of 32B pages, There is a total of 102 such pages
 * These are typically allocated to each port according to the speed
 * SDK automatically allocates if this parameter is omitted
 */
#define spn_TX_FIFO_SIZE  "tx_fifo_size"
/*
 * This configuration allows override for WDRR weight assigned to queues
 * This config is per queue, if the given queue is source queue, the weight is applied to HPTE WDRR
 * If the given queue is destination queue, the weight is applied to IPTE WDRR
 * Valid only on BCM 8803x series.
 */
#define spn_WDRR_WEIGHT_QUEUE  "wdrr_weight_queue"
/*
 * This configuration allows override for Ingress Source Queues allocated to XLPORT.
 * Valid only on BCM 8803x series.
 */
#define spn_XL_INGRESS_SQUEUE  "xl_ingress_squeue"
/*
 * This configuration allows override for Ingress Destination Queues allocated to XLPORT.
 * Valid only on BCM 8803x series.
 */
#define spn_XL_INGRESS_DQUEUE  "xl_ingress_dqueue"
/*
 * This configuration allows override for Egress Source Queues allocated to XLPORT.
 * Valid only on BCM 8803x series.
 */
#define spn_XL_EGRESS_SQUEUE  "xl_egress_squeue"
/*
 * This configuration allows override for Egress Destination Queues allocated to XLPORT.
 * Valid only on BCM 8803x series.
 */
#define spn_XL_EGRESS_DQUEUE  "xl_egress_dqueue"
/*
 * This configuration allows override for Ingress Source Queues allocated to CMIC Port.
 * Valid only on BCM 8803x series.
 */
#define spn_CMIC_INGRESS_SQUEUE  "cmic_ingress_squeue"
/*
 * This configuration allows override for Ingress Destination Queues allocated to CMIC Port.
 * Valid only on BCM 8803x series.
 */
#define spn_CMIC_INGRESS_DQUEUE  "cmic_ingress_dqueue"
/*
 * This configuration allows override for Egress Source Queues allocated to CMIC Port.
 * Valid only on BCM 8803x series.
 */
#define spn_CMIC_EGRESS_SQUEUE  "cmic_egress_squeue"
/*
 * This configuration allows override for Egress Destination Queues allocated to CMIC Port.
 * Valid only on BCM 8803x series.
 */
#define spn_CMIC_EGRESS_DQUEUE  "cmic_egress_dqueue"
/*
 * This configuration allows override for Strict Priority Queue0
 * Max of 2 strict priority queues are allowed Queue0 and Queue1
 * Valid only on BCM 8803x series.
 */
#define spn_SPRI0_QID  "spri0_qid"
/*
 * This configuration allows override for Strict Priority Queue1
 * Max of 2 strict priority queues are allowed Queue0 and Queue1
 * Valid only on BCM 8803x series.
 */
#define spn_SPRI1_QID  "spri1_qid"
/*
 * This configuration allows override for ingress redirect queues
 * Max of 2 redirects are allowed Queue0 and Queue1
 * Valid only on BCM 8803x series.
 */
#define spn_INGRESS_TO_EGRESS_REDIRECT_QID0  "ingress_to_egress_redirect_qid0"
/*
 * This configuration allows override for ingress redirect queues
 * Max of 2 redirects are allowed Queue0 and Queue1
 * Valid only on BCM 8803x series.
 */
#define spn_INGRESS_TO_EGRESS_REDIRECT_QID1  "ingress_to_egress_redirect_qid1"
/*
 * This configuration allows override for egress redirect queues
 * Max of 2 redirects are allowed Queue0 and Queue1
 * Valid only on BCM 8803x series.
 */
#define spn_EGRESS_TO_INGRESS_REDIRECT_QID0  "egress_to_ingress_redirect_qid0"
/*
 * This configuration allows override for egress redirect queues
 * Max of 2 redirects are allowed Queue0 and Queue1
 * Valid only on BCM 8803x series.
 */
#define spn_EGRESS_TO_INGRESS_REDIRECT_QID1  "egress_to_ingress_redirect_qid1"
/*
 * This configuration allows override for ingress bubble queues
 * Valid only on BCM 8803x series.
 */
#define spn_INGRESS_BUBBLE_QID  "ingress_bubble_qid"
/*
 * This configuration allows override for egress bubble queues
 * Valid only on BCM 8803x series.
 */
#define spn_EGRESS_BUBBLE_QID  "egress_bubble_qid"
/*
 * This configuration allows allocation of application specific queues
 * Queue range is 0-255
 * Valid only on BCM 8803x series.
 */
#define spn_APP_QUEUES_START  "app_queues_start"
/*
 * This configuration specifies the number of application specific queues
 * Only usable with app_queue_start
 * Valid only on BCM 8803x series.
 */
#define spn_APP_QUEUES_NUM  "app_queues_num"
/*
 * This configuration allows override for NUM_PAGES_RESERVED global parameter.
 * Valid only on BCM 8803x series.
 */
#define spn_NUM_PAGES_RESERVED  "num_pages_reserved"
/*
 * This configuration allows override for TOTAL_BUFF_MAX_PAGES global parameter.
 * Valid only on BCM 8803x series.
 */
#define spn_TOTAL_BUFF_MAX_PAGES  "total_buff_max_pages"
/*
 * This configuration allows override for TOTAL_BUFF_HYSTERESIS_DELTA global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_TOTAL_BUFF_HYSTERESIS_DELTA  "total_buff_hysteresis_delta"
/*
 * This configuration allows override for TOTAL_BUFF_DROP_THRES_DE1 global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_TOTAL_BUFF_DROP_THRES_DE1  "total_buff_drop_thres_de1"
/*
 * This configuration allows override for TOTAL_BUFF_DROP_THRES_DE2 global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_TOTAL_BUFF_DROP_THRES_DE2  "total_buff_drop_thres_de2"
/*
 * This configuration allows override for INGRESS_MAX_PAGES global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_INGRESS_MAX_PAGES  "ingress_max_pages"
/*
 * This configuration allows override for INGRESS_HYSTERESIS_DELTA global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_INGRESS_HYSTERESIS_DELTA  "ingress_hysteresis_delta"
/*
 * This configuration allows override for INGRESS_DROP_THRES_DE1 global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_INGRESS_DROP_THRES_DE1  "ingress_drop_thres_de1"
/*
 * This configuration allows override for INGRESS_DROP_THRES_DE2 global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_INGRESS_DROP_THRES_DE2  "ingress_drop_thres_de2"
/*
 * This configuration allows override for EGRESS_HYSTERESIS_DELTA global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_EGRESS_HYSTERESIS_DELTA  "egress_hysteresis_delta"
/*
 * This configuration allows override for EGRESS_MAX_PAGES global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_EGRESS_MAX_PAGES  "egress_max_pages"
/*
 * This configuration allows override for EGRESS_DROP_THRES_DE1 global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_EGRESS_DROP_THRES_DE1  "egress_drop_thres_de1"
/*
 * This configuration allows override for EGRESS_DROP_THRES_DE2 global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_EGRESS_DROP_THRES_DE2  "egress_drop_thres_de2"
/*
 * This configuration allows override for FC_TOTAL_BUFFER_XOFF_THRESH global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_FC_TOTAL_BUFFER_XOFF_THRESH  "fc_total_buffer_xoff_thresh"
/*
 * This configuration allows override for FC_INGRESS_XOFF_THRESH global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_FC_INGRESS_XOFF_THRESH  "fc_ingress_xoff_thresh"
/*
 * This configuration allows override for FC_EGRESS_XOFF_THRESH global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_FC_EGRESS_XOFF_THRESH  "fc_egress_xoff_thresh"
/*
 * This configuration allows override for PER_QUEUE_DROP_HYSTERESIS_DELTA global parameter
 * Valid only on BCM 8803x series.
 */
#define spn_PER_QUEUE_DROP_HYSTERESIS_DELTA  "per_queue_drop_hysteresis_delta"
/*
 * This configuration allows enable/disable of Flow control global config
 * Valid only on BCM 8803x series.
 */
#define spn_FC_ENABLE  "fc_enable"
/*
 * Valid only on BCM 88025 chip.
 * This configuration enables IPv6 feature.
 * Requires microcode that supports IPv6
 * Cannot coexist with Mac-in-Mac feature
 */
#define spn_IPV6_ENABLE  "ipv6_enable"
/*
 * Valid only on BCM 88025 chip.
 * This configuration enables Mac-in-Mac feature.
 * Requires microcode that supports MiM.
 * Cannot coexist with IPv6 feature.
 */
#define spn_MIM_ENABLE  "mim_enable"
/*
 * Valid only on BCM 88020 and 88025 chip.
 * When set to 1, this configuration allows multiple device with same device 
 * id to share certain host memory tables to reduce host memory footprint.
 */
#define spn_HOST_MEMORY_TABLE_SHARE  "host_memory_table_share"
/*
 * Valid only on BCM 88025 chip.
 * This configuration controls size of host memory allocated for LPM operations
 */
#define spn_L3_LPM_HOST_SRAM_FACTOR  "l3_lpm_host_sram_factor"
/*
 * Valid only on BCM 88025 chip.
 * This configuration sets the size of Level2 IPv4 Destination Address LPM table.
 * If not set, system determines size to allocate based on free memory remaining.
 */
#define spn_L3_V4UC_DA_DEV_MEMSIZE  "l3_v4uc_da_dev_memsize"
/*
 * Valid only on BCM 88025 chip.
 * This configuration sets the size of Level2 IPv4 Source Address LPM table.
 * If set, must be less than size of Ipv4 DA LPM table.
 * If not set, system allocates 250f size configured for IPv4 DA LPM Table.
 * If set to 0, allocates 0 memory for SA Table.
 */
#define spn_L3_V4UC_SA_DEV_MEMSIZE  "l3_v4uc_sa_dev_memsize"
/*
 * Valid only on BCM 88025 chip.
 * This configuration sets the size of Level2 IPv6 Destination Address LPM table.
 * If not set, system determines size to allocate based on free memory remaining.
 */
#define spn_L3_V6UC_DA_DEV_MEMSIZE  "l3_v6uc_da_dev_memsize"
/*
 * Valid only on BCM 88025 chip.
 * This configuration sets the size of Level2 IPv6 Source Address LPM table.
 * If set, must be less than size of Ipv6 DA LPM table.
 * If not set, system allocates 250f size configured for IPv6 DA LPM Table.
 * If set to 0, allocates 0 memory for SA Table.
 */
#define spn_L3_V6UC_SA_DEV_MEMSIZE  "l3_v6uc_sa_dev_memsize"
/*
 * Valid only on BCM 88025 chip.
 * This configuration sets the size of Level2 MAC Lookup Table.
 * If not set, system determines size to allocate based on free memory remaining.
 */
#define spn_MAC_DEV_MEMSIZE  "mac_dev_memsize"

/* Number of widest VLAN xlate mem entries. */
#define spn_VLAN_XLATE_MEM_ENTRIES  "vlan_xlate_mem_entries"

/* Number of widest l2 mem entries. */
#define spn_L2_MEM_ENTRIES  "l2_mem_entries"

/* Number of widest l3 mem entries. */
#define spn_L3_MEM_ENTRIES  "l3_mem_entries"

/* Number of widest egress VLAN xlate mem entries. */
#define spn_EGR_VLAN_XLATE_MEM_ENTRIES  "egr_vlan_xlate_mem_entries"

/* Number of widest MPLS mem entries. */
#define spn_MPLS_MEM_ENTRIES  "mpls_mem_entries"
/*
 * Valid on BCM 88020 and 88025 chips.
 * This switch turns on and off OAM reception by enabling or disabling
 * the PPE rules that detect OAM packets.
 */
#define spn_OAM_RX_ENABLE  "oam_rx_enable"
/*
 * Valid on BCM 88020 and 88025 chips.
 * This switch turns on and off OAM transmission by enabling or disabling
 * the LRP Service Processor bubble generation.
 */
#define spn_OAM_TX_ENABLE  "oam_tx_enable"
/*
 * The oam_spi_lb_port and oam_spi_lb_queue soc properties allow for run-time
 * configuration of the loopback SPI port used by OAM for up MEPs.  This only
 * needs to be specified if the default port configuration in fe2000.c is
 * over-ridden with port assignments in the config.bcm.
 */
#define spn_OAM_SPI_LB_PORT  "oam_spi_lb_port"
/*
 * The oam_spi_lb_port and oam_spi_lb_queue soc properties allow for run-time
 * configuration of the loopback SPI port used by OAM for up MEPs.  This queue
 * number can be determined by running bcm.user with the oam_spi_lb_port
 * specified and using g2util swsdump to print out all the queue numbers.
 * Then update the config specifying the first (of two) QID associated with
 * the SPI loopback port.
 */
#define spn_OAM_SPI_LB_QUEUE  "oam_spi_lb_queue"

/* Enables fifo dma mode */
#define spn_OAMP_FIFO_DMA_ENABLE  "oamp_fifo_dma_enable"
/*
 * Size of the host memory stored allocated by the CPU.
 * Value 0 indicates that the size will be determined by the threshold
 */
#define spn_OAMP_FIFO_DMA_BUFFER_SIZE  "oamp_fifo_dma_buffer_size"
/*
 * The amount of time in microseconds that passes from the first write by the DMA until a timeout based interrupt is triggered.
 * Value 0 disables timeout based interrupts.
 */
#define spn_OAMP_FIFO_DMA_TIMEOUT  "oamp_fifo_dma_timeout"

/* The number of writes by the DMA until a threshold based interrupt is triggered. */
#define spn_OAMP_FIFO_DMA_THRESHOLD  "oamp_fifo_dma_threshold"

/* Port used for L2 Reflector (swap DA with SA) */
#define spn_RFC2544_REFLECTOR_MAC_SWAP_PORT  "RFC2544_reflector_mac_swap_port"

/* Port used for L3 Reflector (swap DA with SA, SIP with DIP) */
#define spn_RFC2544_REFLECTOR_MAC_AND_IP_SWAP_PORT  "RFC2544_reflector_mac_and_ip_swap_port"
#define spn_V4MC_STR_SEL  "v4mc_str_sel"
#define spn_V4UC_STR_SEL  "v4uc_str_sel"
#define spn_BCM88020_UCODE  "bcm88020_ucode"
#define spn_SMAC_PYLD_PERCENT  "smac_pyld_percent"
#define spn_DMAC_PYLD_PERCENT  "dmac_pyld_percent"
#define spn_IPV4_SA_PYLD_PERCENT  "ipv4_sa_pyld_percent"
#define spn_IPV4_DA_PYLD_PERCENT  "ipv4_da_pyld_percent"
#define spn_IPV4MC_SG_PYLD_PERCENT  "ipv4mc_sg_pyld_percent"
#define spn_IPV4MC_G_PYLD_PERCENT  "ipv4mc_g_pyld_percent"
#define spn_IPV6_SA_PYLD_PERCENT  "ipv6_sa_pyld_percent"
#define spn_IPV6_SA_LPM_PYLD_PERCENT  "ipv6_sa_lpm_pyld_percent"
#define spn_IPV6_DA_PYLD_PERCENT  "ipv6_da_pyld_percent"
#define spn_IPV6_DA_LPM_PYLD_PERCENT  "ipv6_da_lpm_pyld_percent"
#define spn_IPV6_MC_PYLD_PERCENT  "ipv6_mc_pyld_percent"
#define spn_IPV6_MC_EM_PERCENT  "ipv6_mc_em_percent"
#define spn_INGR_COUNTER_PERCENT  "ingr_counter_percent"
#define spn_EGR_COUNTER_PERCENT  "egr_counter_percent"
#define spn_EXC_COUNTER_PERCENT  "exc_counter_percent"
#define spn_FTE_PERCENT  "fte_percent"
#define spn_ETE_PERCENT  "ete_percent"
#define spn_FTE_PREALLOTMENT  "fte_preallotment"
#define spn_ETE_PREALLOTMENT  "ete_preallotment"
#define spn_IGMP_PROXY_MODE  "igmp_proxy_mode"
#define spn_POLICER_BASE_RATE  "policer_base_rate"
/*
 * Valid only on BCM 88025 Chips.
 * Config sets the size of IPv6 Destination Address Exact Match table
 */
#define spn_BCM88025_V6_DHOSTS  "bcm88025_v6_dhosts"
/*
 * Valid only on BCM 88025 Chips.
 * Config sets the size of IPv6 Source Address Exact Match table
 */
#define spn_BCM88025_V6_SHOSTS  "bcm88025_v6_shosts"
/*
 * Valid only on BCM 88025 Chips.
 * Config reserves hw resource for VPWS AC gports
 */
#define spn_SBX_VPWS_PW_GPORTS_LOW  "sbx_vpws_pw_gports_low"
/*
 * Valid only on BCM 88025 Chips.
 * Config reserves hw resource for VPWS AC gports
 */
#define spn_SBX_VPWS_PW_GPORTS_HIGH  "sbx_vpws_pw_gports_high"
/*
 * Valid only on BCM 88025 Chips.
 * Config reserves resource for VPWS VPN
 */
#define spn_SBX_VPWS_VPN_LOW  "sbx_vpws_vpn_low"
/*
 * Valid only on BCM 88025 Chips.
 * Config reserves resources for VPWS VPN
 */
#define spn_SBX_VPWS_VPN_HIGH  "sbx_vpws_vpn_high"
#define spn_DIAG_HG_AS_GE  "diag_hg_as_ge"
#define spn_DIAG_HG_AS_XE  "diag_hg_as_xe"
/*
 * ThunderBolt flow ID size for user config
 * flow ID > tb_flow_id_size will be reserved
 * for internal use
 */
#define spn_TB_FLOW_ID_SIZE  "tb_flow_id_size"

/* Board driver name */
#define spn_BOARD_NAME  "board_name"

/* Board driver start flags */
#define spn_BOARD_FLAGS  "board_flags"

/* WAN ports select */
#define spn_PBMP_WAN_PORT  "pbmp_wan_port"

/* Dual IMP ports enable */
#define spn_DUAL_IMP_ENABLE  "dual_imp_enable"

/* Auto enable MAC Low Power mode */
#define spn_AUTO_ENABLE_MAC_LOW_POWER  "auto_enable_mac_low_power"

/* Configure port as standalone/egress only */
#define spn_8802X_EGRESS_ONLY  "8802x_egress_only"

/* Configure field processor for atomic updates */
#define spn_FIELD_ATOMIC_UPDATE  "field_atomic_update"

/* Field Class ID size. Units: bits. */
#define spn_FIELD_CLASS_ID_SIZE  "field_class_id_size"

/* Define the bitmask for destination port data in the module/port info field */
#define spn_HIGIG_DESTPORT_MASK  "higig_destport_mask"

/* Configure mapping from fabric destination port in the module/port info field to destination ucode port */
#define spn_88025_HG_DESTPORT  "88025_hg_destport"

/* Specify the stable cache option for Warm Boot operations */
#define spn_STABLE_LOCATION  "stable_location"

/* Specify the stable cache flags to configure Warm Boot operations */
#define spn_STABLE_FLAGS  "stable_flags"

/* Specify the stable cache size in bytes used for Warm boot operations */
#define spn_STABLE_SIZE  "stable_size"
/*
 * If the stable cache location is BCM_SWITCH_STABLE_APPLICATION, the local
 * file system will be used to save the stable cache data with this filename
 */
#define spn_STABLE_FILENAME  "stable_filename"

/* NSE SYNC_IN divider */
#define spn_PHY_1588_TS_DIVIDER  "phy_1588_ts_divider"

/* IEEE1588 DPLL coeff. K1 */
#define spn_PHY_1588_DPLL_K1  "phy_1588_dpll_k1"

/* IEEE1588 DPLL coeff. K2 */
#define spn_PHY_1588_DPLL_K2  "phy_1588_dpll_k2"

/* IEEE1588 DPLL coeff. K3 */
#define spn_PHY_1588_DPLL_K3  "phy_1588_dpll_k3"

/* Initial phase values for the IEEE1588 DPLL, lower 32 bits */
#define spn_PHY_1588_DPLL_PHASE_INITIAL_LO  "phy_1588_dpll_phase_initial_lo"

/* Initial phase values for the IEEE1588 DPLL, upper 32 bits */
#define spn_PHY_1588_DPLL_PHASE_INITIAL_HI  "phy_1588_dpll_phase_initial_hi"

/* IEEE1588 DPLL mode, 0 - phase lock, 1 - frequency lock */
#define spn_PHY_1588_DPLL_FREQUENCY_LOCK  "phy_1588_dpll_frequency_lock"
/*
 * Phy operating in the reverse direction.
 * To set reverse mode for phy84728 and phy8706
 * set port_phy_mode_reverse_phy84728 and 
 * set port_phy_mode_reverse_phy8706
 */
#define spn_PORT_PHY_MODE_REVERSE  "port_phy_mode_reverse"
/*
 * Device Interconnect Mode (PCI-EB3/VLI).
 * Currently used for BCM88732
 * 0 = PCI, 1 = EB3/VLI
 */
#define spn_DEVICE_EB_VLI  "device_eb_vli"
/*
 * BCM88732(Shadow) Flow Control Mode
 * 0 = InBand(IB), 1 = OutofBand(OOB)
 * Default is OOB for Shadow         
 */
#define spn_BCM88732_USE_OOB  "bcm88732_use_oob"
/*
 * BCM88732(Shadow) Device Mode
 * 0 = XGS, 1 = PETRAB
 */
#define spn_BCM88732_DEVICE_MODE  "bcm88732_device_mode"
/*
 * Shadow Port Configuration
 * Front Panel ports:2X40G Switch Panel ports(Interlaken):2X40
 */
#define spn_BCM88732_2X40_2X40  "bcm88732_2x40_2x40"
/*
 * Shadow Port Configuration
 * Front Panel ports:2x40G Switch Panel ports(Interlaken):1x40G
 */
#define spn_BCM88732_2X40_1X40  "bcm88732_2x40_1x40"
/*
 * Shadow Port Configuration
 * Front Panel ports:8x10G Switch Panel ports(Interlaken):1x40G
 */
#define spn_BCM88732_8X10_1X40  "bcm88732_8x10_1x40"
/*
 * Shadow Port Configuration
 * Front Panel ports:8x10G Switch Panel ports(Interlaken):2x40G
 */
#define spn_BCM88732_8X10_2X40  "bcm88732_8x10_2x40"
/*
 * Shadow Port Configuration
 * Front Panel ports:1X40G(XLAUI) Switch Panel(XAUI) ports:4X10G
 */
#define spn_BCM88732_1X40_4X10  "bcm88732_1x40_4x10"
/*
 * Shadow Port Configuration
 * Front Panel ports:4x10G(XFI/SFI) Switch Panel ports(XAUI):4x10G
 */
#define spn_BCM88732_4X10_4X10  "bcm88732_4x10_4x10"
/*
 * Shadow Port Configuration
 * Front Panel ports:2x40G Switch Panel ports(Interlaken):2x40G
 */
#define spn_BCM88732_2X40_2X40E  "bcm88732_2x40_2x40E"
/*
 * Shadow Port Configuration
 * Front Panel ports:2x40G Switch Panel ports:8x12G
 */
#define spn_BCM88732_2X40_8X12  "bcm88732_2x40_8x12"
/*
 * Shadow Port Configuration
 * Front Panel ports:8x10G Switch Panel ports:8x12G
 */
#define spn_BCM88732_8X10_8X12  "bcm88732_8x10_8x12"
/*
 * Shadow Port Configuration
 * Front Panel ports:1x40G,4x10G Switch Panel ports:8x12G
 */
#define spn_BCM88732_1X40_4X10_8X12  "bcm88732_1x40_4x10_8x12"
/*
 * Shadow Port Configuration
 * Front Panel ports:4x10G,1x40G Switch Panel ports:8x12G
 */
#define spn_BCM88732_4X10_1X40_8X12  "bcm88732_4x10_1x40_8x12"
/*
 * Shadow Port Configuration
 * Front Panel ports:1x40G Switch Panel ports:4x12G
 */
#define spn_BCM88732_8X10_4X12  "bcm88732_8x10_4x12"
/*
 * Shadow Port Configuration
 * Front Panel ports:8x10G Switch Panel ports:2x12G
 */
#define spn_BCM88732_8X10_2X12  "bcm88732_8x10_2x12"
/*
 * Shadow Port Configuration
 * Front Panel ports:6x10G Switch Panel ports:2x12G
 */
#define spn_BCM88732_6X10_2X12  "bcm88732_6x10_2x12"
/*
 * Shadow Port Configuration
 * Front Panel ports:2X40G Switch Panel ports(XFI):8x10
 */
#define spn_BCM88732_2X40_8X10  "bcm88732_2x40_8x10"
/*
 * Shadow Port Configuration
 * Front Panel ports:8X10G Switch Panel ports(XFI):8x10
 */
#define spn_BCM88732_8X10_8X10  "bcm88732_8x10_8x10"
/*
 * CMC in CMICm used by the microController
 * suffix with _pci _uc0 etc..
 */
#define spn_CMC  "cmc"

/* CMC in CMICm used by the PCI Host */
#define spn_PCI_CMC  "pci_cmc"

/* Enable Fast SCHAN present in CMICm */
#define spn_FSCHAN_ENABLE  "fschan_enable"
/*
 * On 5644x devices MMU, the ports can have its packet buffer either
 * the Internal memory or the External DRAM. Set the following pbmp to
 * configure specific ports for external memory.
 */
#define spn_PBMP_EXT_MEM  "pbmp_ext_mem"
/*
 *  Specifies to enable or disable FCMAP feature on the 
 *  specified port. FCMAP feature might be provided by a PHY device attached to 
 *  switch port. (Default is to disable FCMAP)
 * 
 */
#define spn_FCMAP_ENABLE  "fcmap_enable"

/*  specifies the MDIO address for the FCMAP PHY device. */
#define spn_FCMAP_DEV_ADDR  "fcmap_dev_addr"

/*  specifies Port index within the multi-port FCMAP PHY device. */
#define spn_FCMAP_PORT_INDEX  "fcmap_port_index"

/* MMU config tool prefix */
#define spn_BUF  "buf"

/* MMU config tool prefix */
#define spn_MAP  "map"

/* MMU config tool object name */
#define spn_PRI  "pri"

/* MMU config tool object name */
#define spn_DEVICE  "device"

/* MMU config tool object name */
#define spn_POOL  "pool"

/* MMU config tool object name */
#define spn_INGPORTPOOL  "ingportpool"

/* MMU config tool object name */
#define spn_PORT  "port"

/* MMU config tool object name */
#define spn_PRIGROUP  "prigroup"

/* MMU config tool object name */
#define spn_QUEUE  "queue"

/* MMU config tool object name */
#define spn_MQUEUE  "mqueue"

/* MMU config tool attribute name */
#define spn_QGROUP  "qgroup"

/* MMU config tool object name */
#define spn_EQUEUE  "equeue"

/* MMU config tool attribute name */
#define spn_SIZE  "size"

/* MMU config tool attribute name */
#define spn_NUMQ  "numq"

/* MMU config tool attribute name */
#define spn_YELLOW_SIZE  "yellow_size"

/* MMU config tool attribute name */
#define spn_RED_SIZE  "red_size"

/* MMU config tool attribute name */
#define spn_GUARANTEE  "guarantee"

/* MMU config tool attribute name */
#define spn_HEADROOM  "headroom"

/* MMU config tool attribute name */
#define spn_QGROUP_ID  "qgroup_id"

/* MMU config tool attribute name */
#define spn_QGROUP_GUARANTEE  "qgroup_guarantee"

/* MMU config tool attribute name */
#define spn_QGROUP_GUARANTEE_ENABLE  "qgroup_guarantee_enable"

/* MMU config tool attribute name */
#define spn_USER_DELAY  "user_delay"

/* MMU config tool attribute name */
#define spn_SWITCH_DELAY  "switch_delay"

/* MMU config tool attribute name */
#define spn_POOL_SCALE  "pool_scale"

/* MMU config tool attribute name */
#define spn_POOL_LIMIT  "pool_limit"

/* MMU config tool attribute name */
#define spn_POOL_RESUME  "pool_resume"

/* MMU config tool attribute name */
#define spn_POOL_FLOOR  "pool_floor"

/* MMU config tool attribute name */
#define spn_YELLOW_LIMIT  "yellow_limit"

/* MMU config tool attribute name */
#define spn_YELLOW_RESUME  "yellow_resume"

/* MMU config tool attribute name */
#define spn_RED_LIMIT  "red_limit"

/* MMU config tool attribute name */
#define spn_RED_RESUME  "red_resume"

/* MMU config tool attribute name */
#define spn_DEVICE_HEADROOM_ENABLE  "device_headroom_enable"

/* MMU config tool attribute name */
#define spn_PORT_GUARANTEE_ENABLE  "port_guarantee_enable"

/* MMU config tool attribute name */
#define spn_PORT_MAX_ENABLE  "port_max_enable"

/* MMU config tool attribute name */
#define spn_FLOW_CONTROL_ENABLE  "flow_control_enable"

/* MMU config tool attribute name */
#define spn_DISCARD_ENABLE  "discard_enable"

/* MMU config tool attribute name */
#define spn_COLOR_DISCARD_ENABLE  "color_discard_enable"

/* MMU config tool attribute name */
#define spn_PKT_SIZE  "pkt_size"

/* UC0 Messaging control */
#define spn_UC_MSG_CTRL_0  "uc_msg_ctrl_0"

/* UC1 Messaging control */
#define spn_UC_MSG_CTRL_1  "uc_msg_ctrl_1"

/* UC Messaging thread priority */
#define spn_UC_MSG_THREAD_PRI  "uc_msg_thread_pri"

/* UC Messaging ctl mutex timeout in microsecs */
#define spn_UC_MSG_CTL_TIMEOUT  "uc_msg_ctl_timeout"

/* UC Messaging send queue timeout in microsecs */
#define spn_UC_MSG_QUEUE_TIMEOUT  "uc_msg_queue_timeout"

/* UC Messaging send timeout in microsecs */
#define spn_UC_MSG_SEND_TIMEOUT  "uc_msg_send_timeout"

/* UC Messaging send retry delay in microseconds */
#define spn_UC_MSG_SEND_RETRY_DELAY  "uc_msg_send_retry_delay"

/* TX beacon messaging timeout in microsecs */
#define spn_UC_MSG_TX_BEACON_TIMEOUT  "uc_msg_tx_beacon_timeout"
/*
 * In 5644x, 48 queues will be shared across host CPU and
 * other micro controllers, this variable can be configured
 * suffix with _pci _uc0 etc..
 */
#define spn_NUM_QUEUES  "num_queues"

/* Valid Micro controllers bit map */
#define spn_UC_VALID_BMP  "uc_valid_bmp"

/* MMU configuration of maximum number of queues */
#define spn_MMU_MAX_QUEUES  "mmu_max_queues"

/* MMU configuration of maximum number of aggregate nodes */
#define spn_MMU_MAX_NODES  "mmu_max_nodes"

/* CoS levels per subscriber */
#define spn_MMU_SUBSCRIBER_NUM_COS_LEVEL  "mmu_subscriber_num_cos_level"

/* Enable Extended Queues */
#define spn_MMU_EXT_QUEUES_ENABLED  "mmu_ext_queues_enabled"

/* MMU configuration of maximum number of classic queues */
#define spn_MMU_MAX_CLASSIC_QUEUES  "mmu_max_classic_queues"

/* MMU configuration of number of dmvoq queues */
#define spn_MMU_NUM_DMVOQ_QUEUES  "mmu_num_dmvoq_queues"

/* BFD CoS queue */
#define spn_BFD_COSQ  "bfd_cosq"

/* PTP CoS queue */
#define spn_PTP_COSQ  "ptp_cosq"

/* Memory allocated for BFD encapsulation data (in bytes) */
#define spn_BFD_ENCAP_MEMORY_SIZE  "bfd_encap_memory_size"

/* Number of BFD simple password authentication keys */
#define spn_BFD_SIMPLE_PASSWORD_KEYS  "bfd_simple_password_keys"

/* Number of BFD SHA1 authentication keys */
#define spn_BFD_SHA1_KEYS  "bfd_sha1_keys"

/* Number of BFD sessions */
#define spn_BFD_NUM_SESSIONS  "bfd_num_sessions"

/* PTP frequency synthesizer DFPLL value for state 1 and k1 filter parameter */
#define spn_PTP_SYNTH_1_K1  "ptp_synth_1_k1"

/* PTP frequency synthesizer DFPLL value for state 1 and k1k2 filter parameter */
#define spn_PTP_SYNTH_1_K1K2  "ptp_synth_1_k1k2"

/* PTP frequency synthesizer DFPLL value for state 1 and k1k3 filter parameter */
#define spn_PTP_SYNTH_1_K1K3  "ptp_synth_1_k1k3"

/* PTP frequency synthesizer DFPLL value for state 1 and k4 filter parameter */
#define spn_PTP_SYNTH_1_K4  "ptp_synth_1_k4"

/* PTP frequency synthesizer DFPLL value for state 1 and valid_thresh parameter */
#define spn_PTP_SYNTH_1_VALID_THRESH  "ptp_synth_1_valid_thresh"

/* PTP frequency synthesizer DFPLL value for state 1 and invalid_thresh parameter */
#define spn_PTP_SYNTH_1_INVALID_THRESH  "ptp_synth_1_invalid_thresh"

/* PTP frequency synthesizer DFPLL value for state 2 and k1 filter parameter */
#define spn_PTP_SYNTH_2_K1  "ptp_synth_2_k1"

/* PTP frequency synthesizer DFPLL value for state 2 and k1k2 filter parameter */
#define spn_PTP_SYNTH_2_K1K2  "ptp_synth_2_k1k2"

/* PTP frequency synthesizer DFPLL value for state 2 and k1k3 filter parameter */
#define spn_PTP_SYNTH_2_K1K3  "ptp_synth_2_k1k3"

/* PTP frequency synthesizer DFPLL value for state 2 and k4 filter parameter */
#define spn_PTP_SYNTH_2_K4  "ptp_synth_2_k4"

/* PTP frequency synthesizer DFPLL value for state 2 and valid_thresh parameter */
#define spn_PTP_SYNTH_2_VALID_THRESH  "ptp_synth_2_valid_thresh"

/* PTP frequency synthesizer DFPLL value for for state 2 and invalid_thresh parameter */
#define spn_PTP_SYNTH_2_INVALID_THRESH  "ptp_synth_2_invalid_thresh"

/* PTP frequency synthesizer DFPLL value for valid_input parameter */
#define spn_PTP_SYNTH_VALID_INPUT_THRESH  "ptp_synth_valid_input_thresh"

/* PTP frequency synthesizer DFPLL value for nominal_period parameter */
#define spn_PTP_SYNTH_NOMINAL_PERIOD  "ptp_synth_nominal_period"

/* PTP backplane DFPLL value for state 1 and k1 filter parameter */
#define spn_PTP_BACKPLANE_1_K1  "ptp_backplane_1_k1"

/* PTP backplane DFPLL value for state 1 and k1k2 filter parameter */
#define spn_PTP_BACKPLANE_1_K1K2  "ptp_backplane_1_k1k2"

/* PTP backplane DFPLL value for state 1 and k1k3 filter parameter */
#define spn_PTP_BACKPLANE_1_K1K3  "ptp_backplane_1_k1k3"

/* PTP backplane DFPLL value for state 1 and k4 filter parameter */
#define spn_PTP_BACKPLANE_1_K4  "ptp_backplane_1_k4"

/* PTP backplane DFPLL value for state 1 and valid_thresh parameter */
#define spn_PTP_BACKPLANE_1_VALID_THRESH  "ptp_backplane_1_valid_thresh"

/* PTP backplane DFPLL value for state 1 and invalid_thresh parameter */
#define spn_PTP_BACKPLANE_1_INVALID_THRESH  "ptp_backplane_1_invalid_thresh"

/* PTP backplane DFPLL value for state 2 and k1 filter parameter */
#define spn_PTP_BACKPLANE_2_K1  "ptp_backplane_2_k1"

/* PTP backplane DFPLL value for state 2 and k1k2 filter parameter */
#define spn_PTP_BACKPLANE_2_K1K2  "ptp_backplane_2_k1k2"

/* PTP backplane DFPLL value for state 2 and k1k3 filter parameter */
#define spn_PTP_BACKPLANE_2_K1K3  "ptp_backplane_2_k1k3"

/* PTP backplane DFPLL value for state 2 and k4 filter parameter */
#define spn_PTP_BACKPLANE_2_K4  "ptp_backplane_2_k4"

/* PTP backplane DFPLL value for state 2 and valid_thresh parameter */
#define spn_PTP_BACKPLANE_2_VALID_THRESH  "ptp_backplane_2_valid_thresh"

/* PTP backplane DFPLL value for state 2 and invalid_thresh parameter */
#define spn_PTP_BACKPLANE_2_INVALID_THRESH  "ptp_backplane_2_invalid_thresh"

/* PTP backplane DFPLL value for valid_input parameter */
#define spn_PTP_BACKPLANE_VALID_INPUT_THRESH  "ptp_backplane_valid_input_thresh"

/* PTP backplane DFPLL value for nominal_period parameter */
#define spn_PTP_BACKPLANE_NOMINAL_PERIOD  "ptp_backplane_nominal_period"

/* PTP Timestamping PLL value for fref parameter */
#define spn_PTP_TS_PLL_FREF  "ptp_ts_pll_fref"

/* PTP Timestamping PLL value for pdiv parameter */
#define spn_PTP_TS_PLL_PDIV  "ptp_ts_pll_pdiv"

/* PTP Timestamping PLL value for n parameter */
#define spn_PTP_TS_PLL_N  "ptp_ts_pll_n"

/* pPTP Timestamping PLL value for mndiv ch0 parameter */
#define spn_PTP_TS_PLL_MNDIV  "ptp_ts_pll_mndiv"

/* pPTP Timestamping PLL value for mndiv ch1 parameter */
#define spn_PTP_TS_PLL_MNDIV1  "ptp_ts_pll_mndiv1"

/* PTP Timestamping PLL value for ka parameter */
#define spn_PTP_TS_KA  "ptp_ts_ka"

/* PTP Timestamping PLL value for k1 parameter */
#define spn_PTP_TS_KI  "ptp_ts_ki"

/* PTP Timestamping PLL value for kp parameter */
#define spn_PTP_TS_KP  "ptp_ts_kp"

/* PTP Timestamping PLL value for vco_div2 parameter */
#define spn_PTP_TS_VCO_DIV2  "ptp_ts_vco_div2"

/* PTP BroadSync/10Mhz PLL value for fref parameter */
#define spn_PTP_BS_FREF  "ptp_bs_fref"

/* PTP BroadSync/10Mhz PLL value for pdiv parameter */
#define spn_PTP_BS_PDIV  "ptp_bs_pdiv"

/* PTP BroadSync/10Mhz PLL value for ndiv parameter */
#define spn_PTP_BS_NDIV_INT  "ptp_bs_ndiv_int"

/* PTP BroadSync/10Mhz PLL value for ndiv_frac parameter */
#define spn_PTP_BS_NDIV_FRAC  "ptp_bs_ndiv_frac"

/* PTP BroadSync/10Mhz PLL value for mndiv parameter */
#define spn_PTP_BS_MNDIV  "ptp_bs_mndiv"

/* PTP BroadSync/10Mhz PLL value for ka parameter */
#define spn_PTP_BS_KA  "ptp_bs_ka"

/* PTP BroadSync/10Mhz PLL value for k1 parameter */
#define spn_PTP_BS_KI  "ptp_bs_ki"

/* PTP BroadSync/10Mhz PLL value for kp parameter */
#define spn_PTP_BS_KP  "ptp_bs_kp"

/* PTP BroadSync/10Mhz PLL value for clk_dur_high parameter */
#define spn_PTP_BS_CLK_DUR_HIGH  "ptp_bs_clk_dur_high"

/* PTP BroadSync/10Mhz PLL value for clk_dur_low parameter */
#define spn_PTP_BS_CLK_DUR_LOW  "ptp_bs_clk_dur_low"

/* PTP BroadSync/10Mhz PLL value for hb_dur_high parameter */
#define spn_PTP_BS_HB_DUR_HIGH  "ptp_bs_hb_dur_high"

/* PTP BroadSync/10Mhz PLL value for hb_dur_low parameter */
#define spn_PTP_BS_HB_DUR_LOW  "ptp_bs_hb_dur_low"

/* PTP BroadSync/10Mhz PLL value for vco_div2 parameter */
#define spn_PTP_BS_VCO_DIV2  "ptp_bs_vco_div2"

/* PTP servo oscillator type */
#define spn_PTP_SERVO_OSC_TYPE  "ptp_servo_osc_type"

/* PTP servo transport type */
#define spn_PTP_SERVO_TRANSPORT_TYPE  "ptp_servo_transport_type"

/* PTP servo phase mode */
#define spn_PTP_SERVO_PHASE_MODE  "ptp_servo_phase_mode"

/* PTP servo bridge time */
#define spn_PTP_SERVO_BRIDGE_TIME  "ptp_servo_bridge_time"

/* Register Warm Boot event handler callback routine */
#define spn_WARMBOOT_EVENT_HANDLER_ENABLE  "warmboot_event_handler_enable"

/* Selects the TDM protocol to be used on all of the CES TDM ports. Valid protocols are either T1 or E1, the default is T1. */
#define spn_CES_PORT_TDM_PROTO  "ces_port_tdm_proto"

/* Sets the MAC address of the CES MII. If this is not specified then a default MAC of 00:F1:F2:F3:F4:F5 is used. */
#define spn_CES_MII_MAC  "ces_mii_mac"

/* Sets the CES MII port number. Default value is 0 */
#define spn_CES_MII_PORT_NUMBER  "ces_mii_port_number"

/* Sets the CES IPv4 address. Default value is 0 */
#define spn_CES_IPV4_ADDRESS  "ces_ipv4_address"

/* Sets the CES IPv6 address. Default value is 0 */
#define spn_CES_IPV6_ADDRESS  "ces_ipv6_address"

/* Specifies the CES system clock rate in Hz. Default value is 25000000 */
#define spn_CES_SYSTEM_CLOCK_RATE  "ces_system_clock_rate"

/* Specifies the CES PLL reference clock rate in Hz. Default value is 25000000 */
#define spn_CES_PLL_REFERENCE_CLOCK_RATE  "ces_pll_reference_clock_rate"

/* Specifies the CES common reference clock rate in Hz. Default value is 1544000 */
#define spn_CES_COMMON_REF_CLOCK_RATE  "ces_common_ref_clock_rate"
/*
 * For EA SDK only: describe EA unit X connected to Switch unit Y and its port Z.
 * 
 * ea_attach.portZ.Y=X 
 * 
 * For single EA unit attaches to switch unit 0, port25,
 * ea_attach.port25.0=0
 * 
 * For multiple EA units,
 * ea_attach.port25.0=0
 * ea_attach.port26.0=1
 * 
 * For EA unit that does not attach to switch,
 * ea_attach.port0.-1=0
 */
#define spn_EA_ATTACH  "ea_attach"

/* Memory Grade written in Hex Value. eg. 10-10-10 grade = 0x101010 */
#define spn_DDR3_MEM_GRADE  "ddr3_mem_grade"

/* Memory Speed in MHz */
#define spn_DDR3_CLOCK_MHZ  "ddr3_clock_mhz"

/* PLL Freq in MHz, For Underclocking */
#define spn_DDR3_PLL_MHZ  "ddr3_pll_mhz"

/* To Override the DDR Refresh Interval */
#define spn_DDR3_REFRESH_INTVL_OVERRIDE  "ddr3_refresh_intvl_override"

/* Autorun Shmoo Tuning on Init */
#define spn_DDR3_AUTO_TUNE  "ddr3_auto_tune"
/*
 * Following properties are used to store DDR3 Auto Tuning Values.
 * Restores these values only if Auto-Tune is Off
 */
#define spn_DDR3_TUNE_RD_DATA_DLY  "ddr3_tune_rd_data_dly"
#define spn_DDR3_TUNE_RD_EN  "ddr3_tune_rd_en"
#define spn_DDR3_TUNE_RD_DQ_WL0_RP  "ddr3_tune_rd_dq_wl0_rp"
#define spn_DDR3_TUNE_RD_DQ_WL1_RP  "ddr3_tune_rd_dq_wl1_rp"
#define spn_DDR3_TUNE_RD_DQ_WL0_RN  "ddr3_tune_rd_dq_wl0_rn"
#define spn_DDR3_TUNE_RD_DQ_WL1_RN  "ddr3_tune_rd_dq_wl1_rn"
#define spn_DDR3_TUNE_RD_DQS  "ddr3_tune_rd_dqs"
#define spn_DDR3_TUNE_VREF  "ddr3_tune_vref"
#define spn_DDR3_TUNE_WR_DQ  "ddr3_tune_wr_dq"
#define spn_DDR3_TUNE_WR_DQ_WL0  "ddr3_tune_wr_dq_wl0"
#define spn_DDR3_TUNE_WR_DQ_WL1  "ddr3_tune_wr_dq_wl1"
#define spn_DDR3_TUNE_ADDRC  "ddr3_tune_addrc"

/* Following properties are for DDR3 Tuning Overrides */
#define spn_DDR3_TREAD_ENB  "ddr3_tread_enb"
#define spn_DDR3_BANK_UNAVAIL_RD  "ddr3_bank_unavail_rd"
#define spn_DDR3_BANK_UNAVAIL_WR  "ddr3_bank_unavail_wr"
#define spn_DDR3_TRP_READ  "ddr3_trp_read"
#define spn_DDR3_TRP_WRITE  "ddr3_trp_write"
#define spn_DDR3_ROUND_ROBIN_READ  "ddr3_round_robin_read"
#define spn_DDR3_ROUND_ROBIN_WRITE  "ddr3_round_robin_write"
/*
 * Following properties are used to store COMBO28 Auto Tuning Values.
 * Restores these values only if Auto-Tune is Off
 * 
 * Write data min delay - bit0 - bit 7
 */
#define spn_COMBO28_TUNE_DQ_WR_MIN_VDL  "combo28_tune_dq_wr_min_vdl"

/* Write data min delay - DBI Bit */
#define spn_COMBO28_TUNE_DQ_WR_MIN_VDL_DBI  "combo28_tune_dq_wr_min_vdl_dbi"

/* Write data min delay - EDC Bit */
#define spn_COMBO28_TUNE_DQ_WR_MIN_VDL_EDC  "combo28_tune_dq_wr_min_vdl_edc"

/* Write data max delay - Non-DQS Bits */
#define spn_COMBO28_TUNE_DQ_WR_MAX_VDL_DATA  "combo28_tune_dq_wr_max_vdl_data"

/* Write data max delay - DQS Bit */
#define spn_COMBO28_TUNE_DQ_WR_MAX_VDL_DQS  "combo28_tune_dq_wr_max_vdl_dqs"

/* Read data min delay - bit0 - bit 7 */
#define spn_COMBO28_TUNE_DQ_RD_MIN_VDL  "combo28_tune_dq_rd_min_vdl"

/* Read data min delay - DBI Bit */
#define spn_COMBO28_TUNE_DQ_RD_MIN_VDL_DBI  "combo28_tune_dq_rd_min_vdl_dbi"

/* Read data min delay - EDC Bit */
#define spn_COMBO28_TUNE_DQ_RD_MIN_VDL_EDC  "combo28_tune_dq_rd_min_vdl_edc"

/* Read data max delay - DQSP Bit */
#define spn_COMBO28_TUNE_DQ_RD_MAX_VDL_DQSP  "combo28_tune_dq_rd_max_vdl_dqsp"

/* Read data max delay - DQSN Bit */
#define spn_COMBO28_TUNE_DQ_RD_MAX_VDL_DQSN  "combo28_tune_dq_rd_max_vdl_dqsn"

/* REN FIFO configuration per DQ macro */
#define spn_COMBO28_TUNE_DQ_REN_FIFO_CONFIG  "combo28_tune_dq_ren_fifo_config"

/* EDCEN FIFO configuration per DQ macro */
#define spn_COMBO28_TUNE_DQ_EDCEN_FIFO_CONFIG  "combo28_tune_dq_edcen_fifo_config"

/* Read FSM max delay */
#define spn_COMBO28_TUNE_DQ_READ_MAX_VDL_FSM  "combo28_tune_dq_read_max_vdl_fsm"

/* Vref DAC configuration per DQ macro */
#define spn_COMBO28_TUNE_DQ_VREF_DAC_CONFIG  "combo28_tune_dq_vref_dac_config"

/* Address max delay - Address/Command Bits of Lower Macro */
#define spn_COMBO28_TUNE_AQ_L_MAX_VDL_ADDR  "combo28_tune_aq_l_max_vdl_addr"

/* Address max delay - Control Bits of Lower Macro */
#define spn_COMBO28_TUNE_AQ_L_MAX_VDL_CTRL  "combo28_tune_aq_l_max_vdl_ctrl"

/* Address max delay - Address/Command Bits of Upper Macro */
#define spn_COMBO28_TUNE_AQ_U_MAX_VDL_ADDR  "combo28_tune_aq_u_max_vdl_addr"

/* Address max delay - Control Bits of Upper Macro */
#define spn_COMBO28_TUNE_AQ_U_MAX_VDL_CTRL  "combo28_tune_aq_u_max_vdl_ctrl"

/* Clock configuration for reads */
#define spn_COMBO28_TUNE_CONTROL_REGS_READ_CLOCK_CONFIG  "combo28_tune_control_regs_read_clock_config"

/* Shift register configuration for inputs */
#define spn_COMBO28_TUNE_CONTROL_REGS_INPUT_SHIFT_CTRL  "combo28_tune_control_regs_input_shift_ctrl"

/* REN FIFO configuration initializer */
#define spn_COMBO28_TUNE_CONTROL_REGS_REN_FIFO_CENTRAL_INITIALIZER  "combo28_tune_control_regs_ren_fifo_central_initializer"

/* EDCEN FIFO configuration initializer */
#define spn_COMBO28_TUNE_CONTROL_REGS_EDCEN_FIFO_CENTRAL_INIT  "combo28_tune_control_regs_edcen_fifo_central_init"

/* Shared Vref DAC configuration - AQ & Common macros */
#define spn_COMBO28_TUNE_CONTROL_REGS_SHARED_VREF_DAC_CONFIG  "combo28_tune_control_regs_shared_vref_dac_config"

/* Enable Service Meter */
#define spn_GLOBAL_METER_CONTROL  "global_meter_control"
/*
 * Sets the MAC address of RCPU master. If this is not specified then a
 * default MAC of 00:aa:bb:22:33:00 is used. Note local CPU MAC address
 * is used in case of OOB RCPU master even this property is specified.
 */
#define spn_RCPU_SRC_MAC  "rcpu_src_mac"
/*
 * Sets the MAC address used by RCPU slave units. If this is not specified
 * then a default MAC of 00:00:11:22:33:00 is used. And the last octet is
 * replaced with unit number.
 */
#define spn_RCPU_LMAC  "rcpu_lmac"

/* This controls whether to extract the recovered clock or not. (same as SyncE) */
#define spn_PHY_CLOCK_ENABLE  "phy_clock_enable"
/*
 * Number of clock delay between the rising edge of MDC
 * and the starting data of MDIO
 */
#define spn_MDIO_OUTPUT_DELAY  "mdio_output_delay"

/* MDIO IO voltage select. 0: 1.2 V, 1: 2.5 V, 2: 3.3 V */
#define spn_MDIO_IO_VOLTAGE  "mdio_io_voltage"
/*
 * Specifies the base port and phy index of a multi slice phy chip.
 * phy_port_primary_and_offset_<port>=0xPPOO 0xPP=primary port number 0xOO=offset of the slice
 * For example,for ports ge0-ge3 Primary Port number is 02 (base port)
 * phy_port_primary_and_offset_ge0=0x0200 primary port number=0x02 offset=00
 * phy_port_primary_and_offset_ge1=0x0201 primary port number=0x02 offset=01
 * phy_port_primary_and_offset_ge2=0x0202 primary port number=0x02 offset=02
 * phy_port_primary_and_offset_ge3=0x0203 primary port number=0x02 offset=03
 */
#define spn_PHY_PORT_PRIMARY_AND_OFFSET  "phy_port_primary_and_offset"

/* Specifies the mapping of physical pairs in an MDI interface. Value 0 means do not change pair mapping */
#define spn_PHY_MDI_PAIR_MAP  "phy_mdi_pair_map"

/* Enable VLAN queues */
#define spn_VLAN_QUEUE_ENABLE  "vlan_queue_enable"

/* Maximum levels for VLAN queues */
#define spn_VLAN_QUEUE_LEVELS_MAX  "vlan_queue_levels_max"
/*
 * cos mode. Supported on 88640 device
 * 
 * 0: Simple mode. Hierarchy setup by SDK
 * 1: Flexible mode. Hierarchy setup by application
 * 2: Hybrid mode. Hierarchy setup by SDK and application can add to it
 */
#define spn_COS_MODE  "cos_mode"

/* credit worth size. Configuration units are in bytes. Supported on 88640 and 88650 devices */
#define spn_CREDIT_SIZE  "credit_size"

/* If set, the link state sent to the scheduler is masked by the accessability of the local FAP and by the all-reachable vector  */
#define spn_SCHEDULER_FABRIC_LINKS_ADAPTATION_ENABLE  "scheduler_fabric_links_adaptation_enable"
/*
 * multicast fabric enhanced mode. Supported on 88640 device
 * 
 * 0: Traffic Class only mode
 * 1: {Traffic class, group} mode
 */
#define spn_MULTICAST_SCHEDULER_MODE  "multicast_scheduler_mode"

/* Number of multicast full Dbuffs. Supported on 88640 device */
#define spn_MULTICAST_NBR_FULL_DBUFF  "multicast_nbr_full_dbuff"

/* Number of multicast mini Dbuffs. Supported on 88640 device */
#define spn_MULTICAST_NBR_MINI_DBUFF   "multicast_nbr_mini_dbuff "
/*
 * port egress cos mode. Global configuration. Supported on 88640 device
 * 
 * 0: 2 unicast and 2 multicast queues per port.
 * 1: 8 unicast and 8 multicast queues per port. Not to be initially supported 
 */
#define spn_PORT_EGRESS_COS_MODE  "port_egress_cos_mode"
/*
 * port egress scheduler configuration. Supported on 88640 device
 * 
 * 0: OFFP port scheduler Configuration A.
 * 1: OFFP port scheduler Configuration B..
 */
#define spn_PORT_EGRESS_SCHEDULER_CONFGURATION   "port_egress_scheduler_confguration "
/*
 * Port egress recycling scheduler configuration. Supported on 88640 and 88650 device
 * 
 * 0: Strict Priority Scheduler.
 * 1: Round Robin Scheduler.
 */
#define spn_PORT_EGRESS_RECYCLING_SCHEDULER_CONFIGURATION  "port_egress_recycling_scheduler_configuration"
/*
 * this property is prefixed by the region number ("_#"). The value that is assigned to this property configures the region mode
 * 
 * 0: queue connectors only (InterDigitated = FALSE, OddEven = TRUE)
 * 1: queue connectors, SE (InterDigitated =TRUE, OddEven = TRUE)
 * 2: queue connectors, SE (InterDigitated =TRUE, OddEven = FALSE)
 */
#define spn_DTM_FLOW_MAPPING_MODE_REGION  "dtm_flow_mapping_mode_region"
/*
 * this property is prefixed by the region number ("_#"). The value that is assigned to this property configures the queue region mode
 * 
 * 0: queue region corresponding to connector region with attribute InterDigitated = FALSE
 * 1: queue region corresponding to connector region with attribute InterDigitated = TRUE
 */
#define spn_DTM_QUEUE_MAPPING_MODE_REGION  "dtm_queue_mapping_mode_region"

/* Following properties are valid on Petra only */
#define spn_PORT_NIF_TYPE  "port_nif_type"
/*
 * SINGLE_STAGE_FE2, 
 * MULTI_STAGE_FE2, 
 * MULTI_STAGE_FE13, or
 * REPEATER
 */
#define spn_FABRIC_DEVICE_MODE  "fabric_device_mode"

/* Specify Single (0) or Dual (1) context mode */
#define spn_IS_DUAL_MODE  "is_dual_mode"

/* Specify number of fabric pipes */
#define spn_FABRIC_NUM_PIPES  "fabric_num_pipes"

/* Specify mapping of uc,mc and number of priortiy to fabric pipe */
#define spn_FABRIC_PIPE_MAP  "fabric_pipe_map"

/* Whether local routing from FE1 to FE3 is enabled */
#define spn_FABRIC_LOCAL_ROUTING_ENABLE  "fabric_local_routing_enable"

/* Whether there is a device in multi-pipe mode in system */
#define spn_SYSTEM_CONTAINS_MULTIPLE_PIPE_DEVICE  "system_contains_multiple_pipe_device"

/* Whether there is a device in VCS128 mode in system */
#define spn_SYSTEM_IS_VCS_128_IN_SYSTEM  "system_is_vcs_128_in_system"

/* Whether there is a device in the in dual mode system. */
#define spn_SYSTEM_IS_DUAL_MODE_IN_SYSTEM  "system_is_dual_mode_in_system"

/* Whether there is a device in the in single mode system. */
#define spn_SYSTEM_IS_SINGLE_MODE_IN_SYSTEM  "system_is_single_mode_in_system"

/* Whether there is an FE600 device in the system. */
#define spn_SYSTEM_IS_FE600_IN_SYSTEM  "system_is_fe600_in_system"

/* Whether there is a Petra B device in the system. */
#define spn_SYSTEM_IS_PETRA_B_IN_SYSTEM  "system_is_petra_b_in_system"
/*
 * 225 - 666 
 * System reference core clock. 
 * If there are FE600 devices in the system it must match their frequency. If  there are Peter-A devices in the system it must match their frequency or 2/3 of their frequency
 */
#define spn_SYSTEM_REF_CORE_CLOCK  "system_ref_core_clock"
/*
 * BCM88X4X has a mode to send successive 128B cell on the link. The BCM88X5X can merge this to a single 256B that is processed more efficiently.
 * This mode is set if all VSC128 link are sourced by BCM88X4X.  
 */
#define spn_FABRIC_MERGE_CELLS  "fabric_merge_cells"
/*
 * DIRECT or 
 *  INDIRECT. 
 * Indirect mode is used when the maximal FAP module ID is higher than 127. In this case the per-multicast destination IDs bitmap doesn't represent module IDs, rather FAP group IDs, or internal FAP IDs.
 */
#define spn_FABRIC_MULTICAST_MODE  "fabric_multicast_mode"
/*
 * The multicast table access can be configured to work at a round robin between all requestors
 * or to give priority to the secondary pipe when used for TDM.
 * 0 - use round robin mode between all requesting queries when accessing table.
 * 1  - use strict priority to secondary pipe, to be used in TDM/Non-TDM pipe splitting.
 */
#define spn_MC_TABLE_ENABLE_TDM_PRIORITY  "mc_table_enable_TDM_priority"
/*
 * Select load balancing mode: 
 * NORMAL_LOAD_BALANCE, 
 * DESTINATION_UNREACHABLE, or 
 * BALANCED_INPUT
 */
#define spn_FABRIC_LOAD_BALANCING_MODE  "fabric_load_balancing_mode"

/* Number of good cells that add a token to the bucket. Value is set to 2^fabric_mac_bucket_fill_rate. Range valid for BCM88750: 0-11 */
#define spn_FABRIC_MAC_BUCKET_FILL_RATE  "fabric_mac_bucket_fill_rate"
/*
 * Per port cell format
 * VSC128 or VSC256
 */
#define spn_FABRIC_CELL_FORMAT  "fabric_cell_format"

/* Enables fabric cell fifo dma mode */
#define spn_FABRIC_CELL_FIFO_DMA_ENABLE  "fabric_cell_fifo_dma_enable"

/* Size of the host memory stored allocated by the CPU */
#define spn_FABRIC_CELL_FIFO_DMA_BUFFER_SIZE  "fabric_cell_fifo_dma_buffer_size"
/*
 * The amount of time in microseconds that passes from the first write by the DMA until a timeout based interrupt is triggered. 
 * Value 0 disables timeout based interrupts. 
 */
#define spn_FABRIC_CELL_FIFO_DMA_TIMEOUT  "fabric_cell_fifo_dma_timeout"

/* The number of writes by the DMA until a threshold based interrupt is triggered. */
#define spn_FABRIC_CELL_FIFO_DMA_THRESHOLD  "fabric_cell_fifo_dma_threshold"

/* Drop multicast best effort according to Delete-FIFO available resources (number of packet descriptors which can be added to Delete-FIFO).  */
#define spn_EGRESS_FABRIC_DROP_THRESHOLD_MULTICAST_LOW  "egress_fabric_drop_threshold_multicast_low"

/* Drop multicast according to Delete-FIFO available resources (number of packet descriptors which can be added to Delete-FIFO). */
#define spn_EGRESS_FABRIC_DROP_THRESHOLD_MULTICAST  "egress_fabric_drop_threshold_multicast"

/*   Drop all traffic according to Delete-FIFO available resources (number of packet descriptors which can be added to Delete-FIFO). */
#define spn_EGRESS_FABRIC_DROP_THRESHOLD_ALL  "egress_fabric_drop_threshold_all"

/* Initialize port with CL72 enabled */
#define spn_PORT_INIT_CL72  "port_init_cl72"

/* In repeater mode: set destination for link */
#define spn_REPEATER_LINK_DEST  "repeater_link_dest"

/* If set, the link is connected to a fabric in a repeater mode. */
#define spn_REPEATER_LINK_ENABLE  "repeater_link_enable"

/* Used to define the fragment number used for TDM identification */
#define spn_FABRIC_TDM_FRAGMENT  "fabric_tdm_fragment"

/* Allows single pipe device to send TDM traffic over the fabric primary pipe.  */
#define spn_FABRIC_TDM_OVER_PRIMARY_PIPE  "fabric_tdm_over_primary_pipe"

/* Configures a specific fabric priority (and all higher priorities) as TDM */
#define spn_FABRIC_TDM_PRIORITY_MIN  "fabric_tdm_priority_min"

/* Defines the priority for VCS128 unicast cells  */
#define spn_VCS128_UNICAST_PRIORITY  "vcs128_unicast_priority"

/* If the BCM88750 is connected with links 0 - 11, 16 - 27, 32 - 43, 48 - 59, 64 - 75, 80 - 91, 96 - 107, 112 - 123 (first 12 in every 16 links group), and the secondary switch is used, then its secondary TX FIFOs can use the memory of the unused links, thus increasing their capacity by 33% to 144 entries.  */
#define spn_FABRIC_OPTIMIZE_PARTIAL_LINKS  "fabric_optimize_partial_links"

/* Set range of MC IDs */
#define spn_FE_MC_ID_RANGE  "fe_mc_id_range"

/* Enable mapping internal multicast priority from priority field. */
#define spn_FE_MC_PRIORITY_MAP_ENABLE  "fe_mc_priority_map_enable"

/* High voltage driver strap. If 0, connected to 1.4V supply; if 1, connected to 1V mode. */
#define spn_SRD_TX_DRV_HV_DISABLE  "srd_tx_drv_hv_disable"
/*
 * If True, then Packets coming from this TM Port have a
 * Statistic Tag header. The Statistic Header position is
 * defined globally according to the pb_itm_stag_set
 * API. Relevant only if the header type is TM.
 */
#define spn_STAG_ENABLE  "stag_enable"
/*
 * If True, then Packets coming from this TM Port have a
 * first header to strip before any processing. For
 * example, in the Fat Pipe processing a Sequence Number
 * header (2 Bytes) must be stripped.
 * For injected packets, the PTCH Header must be
 * removed (4 Bytes).
 * Units: Bytes. Range: 0 - 63.
 */
#define spn_FIRST_HEADER_SIZE  "first_header_size"
/*
 * If True, then ITMH packets arriving from this port have their header stripped
 * length according to the SOC property
 */
#define spn_POST_HEADERS_SIZE  "post_headers_size"
/*
 * Flow control type:
 * NONE
 * LL: Link-level.
 * CB2: Class-Based Flow Control (2 classes).
 * CB8: Class-Based Flow Control (8 classes).
 */
#define spn_FLOW_CONTROL_TYPE  "flow_control_type"
/*
 * If True, then Packets coming from this TM Port are snooped
 * according to the ITMH. Snoop action command
 */
#define spn_SNOOP_ENABLE  "snoop_enable"
/*
 * Inbound mirroring action command (i.e., its profile) for this
 * PP Port. Range: 0 - 15.
 * Relevant only if the header type is not Ethernet.
 */
#define spn_MIRROR_PROFILE  "mirror_profile"
/*
 * If True, then TM Packets can come with an Ingress Shaping header
 * before the ITMH. Relevant only if the header type is TM.
 */
#define spn_TM_INGRESS_SHAPING_ENABLE  "tm_ingress_shaping_enable"
/*
 * If True, then TM Packets can come with a PPH header
 * after the ITMH (the PPH-present bit in the ITMH can be set).
 * Relevant only if the header type is TM.
 */
#define spn_TM_PPH_PPH_PRESENT_ENABLE  "tm_pph_pph_present_enable"

/* bcm local port to BCM88X4X tm port mapping. */
#define spn_LOCAL_TO_TM_PORT  "local_to_tm_port"

/* bcm local port to BCM88X4X pp port mapping. */
#define spn_LOCAL_TO_PP_PORT  "local_to_pp_port"
/*
 * System cell format.
 * Allowed values:
 * FCS: Fixed cell size
 * VSC128: Variable cell size 128B
 */
#define spn_SYSTEM_CELL_FORMAT  "system_cell_format"
/*
 * If TRUE, fabric segmentation will be performed to
 * improve the fabric performance.
 */
#define spn_FABRIC_SEGMENTATION_ENABLE  "fabric_segmentation_enable"
/*
 * FTMH load balancing mode.
 * Valid values:
 * DISABLED
 * 8B_LB_KEY_8B_STACKING_ROUTE_HISTORY: load balancing
 * key and an 8-bit stacking route history bitmap.
 * 16B_STACKING_ROUTE_HISTORY: stacking route history.
 * STANDBY_MC_LB: supported in ARAD+.
 */
#define spn_SYSTEM_FTMH_LOAD_BALANCING_EXT_MODE  "system_ftmh_load_balancing_ext_mode"
/*
 * Fap device mode:
 * TM: only traffic management features are enabled.
 * PP: packet processing mode.
 * TDM_OPTIMIZED: TDM Cells traffic mode with an Optimized FTMH Header
 *    format. If set, all the devices this device can
 *    communicate with must be configured with the same mode.
 *    Invalid for ARAD.
 * TDM_STANDARD: TDM Cells traffic mode with a Standard FTMH Header
 *   format. In this mode, the device can communicate with
 *   devices (other devices should be configured in TM/PP/TDM_STANDARD mode).
 *   Invalid for ARAD.
 */
#define spn_FAP_DEVICE_MODE  "fap_device_mode"
/*
 * supported on ARAD device. If non 0 TDM packets bypass Queuing is enabled
 * operation when in hybrid mode (i.e both data packets and TDM packets).
 * TDM_OPTIMIZED: TDM Cells traffic mode with an Optimized FTMH Header
 *    format. If set, all the devices this device can
 *    communicate with must be configured with the same mode.
 * TDM_STANDARD: TDM Cells traffic mode with a Standard FTMH Header
 *   format. In this mode, the device can communicate with
 *   devices (other devices should be configured in TM/PP/TDM_STANDARD mode).
 */
#define spn_FAP_TDM_BYPASS  "fap_tdm_bypass"
/*
 * Supported on ARAD devices.Used to support sending TDM (OTN/CBR) packets from multiple FAPs to a FAP
 * which supports a smaller size of such packets. Like when sending packets
 * from Arad to Petra. The packet source FAP ID will be set tothe ID of the
 * source FAP plus the offset specified here. The resulting value needs to be
 * different than all FAP IDs and different then all other source FAP IDs.
 */
#define spn_TDM_SOURCE_FAP_ID_OFFSET  "tdm_source_fap_id_offset"
/*
 * If TRUE, fap20 devices exist in the system. This imposes
 * certain limitations on the device behavior (e.g. fabric
 * cells must be fixed size, fap20-compatible fabric header
 * must be used etc.).
 */
#define spn_SYSTEM_HAS_FAP20  "system_has_fap20"
/*
 * If TRUE, fap21 devices exist in the system. This imposes certain
 * limitations on the device behavior (e.g. fabric cells must be fixed size etc.).
 */
#define spn_SYSTEM_HAS_FAP21  "system_has_fap21"
/*
 * If TRUE, Petra Rev-A devices exist in the system. This imposes
 * certain limitations on the device behavior (e.g. PPH is in
 * Petra-A compatible mode).
 */
#define spn_SYSTEM_HAS_PETRA_REV_A  "system_has_petra_rev_a"

/* Whether there is an FE1600 device in the system. */
#define spn_SYSTEM_IS_FE1600_IN_SYSTEM  "system_is_fe1600_in_system"
/*
 * Per DRAM interface, defines if exists and needs to be configured.
 * Note: The following number of DRAM interfaces can be configured: 2, 3, 4, 6
 */
#define spn_EXT_RAM_PRESENT  "ext_ram_present"

/* DRAM type. Values: DDR2/DDR3/GDDR3. */
#define spn_EXT_RAM_TYPE  "ext_ram_type"
/*
 * If set, a 16b CRC is appended to the end of the packet in the DRAM
 * (aligned to the last two bytes of a 32B word).
 */
#define spn_EXT_RAM_PACKET_CRC_ENABLE  "ext_ram_packet_crc_enable"

/* Number of Banks. */
#define spn_EXT_RAM_BANKS  "ext_ram_banks"

/* Number of DRAM columns. Possible values: 256/512/1024/2048/4096/8192      */
#define spn_EXT_RAM_COLUMNS  "ext_ram_columns"

/* Summarized DRAM size of all DRAM interfaces. Units: Mbytes. */
#define spn_EXT_RAM_TOTAL_SIZE  "ext_ram_total_size"

/* Autorun Shmoo Tuning on Init */
#define spn_EXT_RAM_AUTO_TUNE  "ext_ram_auto_tune"

/* Total buffer size allocated for User buffer. Units: Mbytes. */
#define spn_USER_BUFFER_SIZE  "user_buffer_size"
/*
 * The size of a single data buffer in the DRAM
 * Allowed values: 256/512/1024/2048
 */
#define spn_EXT_RAM_DBUFF_SIZE  "ext_ram_dbuff_size"

/* DRAM frequency */
#define spn_EXT_RAM_FREQ  "ext_ram_freq"
/*
 * Auto precharge bit position. Determines the position of the Auto
 * Precharge bit in the address going to the DRAM
 */
#define spn_EXT_RAM_AP_BIT_POS  "ext_ram_ap_bit_pos"

/* Dram burst size. May be 16 or 32 bytes. Must be set according to the dram's burst size */
#define spn_EXT_RAM_BURST_SIZE  "ext_ram_burst_size"
/*
 * Column Address Strobe latency. The period (clocks) between READ command and valid
 * read data presented on the data out pins of the dram.
 */
#define spn_EXT_RAM_C_CAS_LATENCY  "ext_ram_c_cas_latency"

/* The period (clocks) between WRITE command and write data set on the dram data in pins. */
#define spn_EXT_RAM_C_WR_LATENCY  "ext_ram_c_wr_latency"
/*
 * Refresh Cycle. Period (ps) between the active to the active/auto refresh commands.
 * By default this period is stated in terms of picoseconds. To state it in terms of
 * number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_RC  "ext_ram_t_rc"
/*
 * Row Refresh Cycle. Auto refresh command period. The minimal period (ps) between
 * the refresh command and the next active command. By default this period is stated
 * in terms of picoseconds. To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_RFC  "ext_ram_t_rfc"
/*
 * Row Address Strobe. The minimal period (ps) needed to access a certain row of data
 * in RAM between the data request and the precharge command. By default this period is
 * stated in terms of picoseconds. To state it in terms of number of clocks add",
                     "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_RAS  "ext_ram_t_ras"
/*
 * Four Active Window. No more than four banks may be activated in a rolling window. By
 * default this period is stated in terms of picoseconds. To state it in terms of number
 * of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_FAW  "ext_ram_t_faw"
/*
 * Row address to Column address Delay. The minimal period (ps) needed between
 * RAS and CAS. It is the time required between row activation and read access
 * to the column of the given memory block. By default this period is stated in
 * terms of picoseconds. To state it in terms of number of clocks add
 * "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_RCD_RD  "ext_ram_t_rcd_rd"
/*
 * Row address to Column address Delay. The minimal period (ps) needed between
 * RAS and CAS. It is the time required between row activation and write access
 * to the column of the given memory block. By default this period is stated in
 * terms of picoseconds. To state it in terms of number of clocks add
 * "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_RCD_WR  "ext_ram_t_rcd_wr"
/*
 * RAS To RAS delay. Active bank a to active bank command. By default this
 * period is stated in terms of picoseconds. To state it in terms of number
 * of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_RRD  "ext_ram_t_rrd"
/*
 * Row Precharge. The minimal period between pre-charge action of a certain
 * Row and the next consecutive action to the same bank/row. By default this
 * period is stated in terms of picoseconds. To state it in terms of number
 * of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_RP  "ext_ram_t_rp"
/*
 * Write Recovery Time. Specifies the period (ps) that must elapse after
 * the completion of a valid write operation, before a pre-charge command
 * can be issued. By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_WR  "ext_ram_t_wr"
/*
 * Average periodic refresh interval.
 * By default this period is stated in terms of picoseconds. To state
 * The value 0 disables the auto refresh mechanism.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_REF  "ext_ram_t_ref"
/*
 * Write To Read Delay. The minimal period (ps) that must elapse between the
 * last valid write operation and the next read command to the same internal
 * bank of the DDR device. By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_WTR  "ext_ram_t_wtr"
/*
 * Read To Precharge Delay. By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks)
 */
#define spn_EXT_RAM_T_RTP  "ext_ram_t_rtp"

/* Jedec - Joint Electron Devices Engineering Council. */
#define spn_EXT_RAM_JEDEC  "ext_ram_jedec"
/*
 * RAS To RAS delay (Same).
 * ACTIVATE to ACTIVATE Command delay to same bank group (tRRD_L).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_RRD_L  "ext_ram_t_rrd_l"
/*
 * RAS To RAS delay (Diff).
 * ACTIVATE to ACTIVATE Command delay to different bank group (tRRD_S).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_RRD_S  "ext_ram_t_rrd_s"
/*
 * Thirty two bank activate window.
 * No more than 32 banks may be activated in a rolling t32AW window. (t32AW).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_32AW  "ext_ram_t_32aw"
/*
 * READ to PRECHARGE command delay same bank with bank groups enabled (tRTP_L).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_RTP_L  "ext_ram_t_rtp_l"
/*
 * READ to PRECHARGE command delay different bank with bank groups enabled (tRTP_S).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_RTP_S  "ext_ram_t_rtp_s"
/*
 * Write To Read Delay (Same).
 * The minimal period that must elapse between the last valid write operation and the next read command to the same internal bank of the DDR device (tWTR_L).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_WTR_L  "ext_ram_t_wtr_l"
/*
 * Write To Read Delay (Diff).
 * The minimal period that must elapse between the last valid write operation and the next read command to the different internal bank of the DDR device (tWTR_S).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_WTR_S  "ext_ram_t_wtr_s"
/*
 * RD/WR bank A to RD/WR bank B command delay same bank group (tCCD_L).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_CCD_L  "ext_ram_t_ccd_l"
/*
 * RD/WR bank A to RD/WR bank B command delay different bank group (tCCD_S).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_CCD_S  "ext_ram_t_ccd_s"
/*
 * Normal operation Short calibration time (tZQCS).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_ZQCS  "ext_ram_t_zqcs"
/*
 * CRC error to ALERT_n latency (tCRC_ALERT.)
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_CRC_ALERT  "ext_ram_t_crc_alert"
/*
 * Number of clocks to wait after reset (tRST).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_RST  "ext_ram_t_rst"
/*
 * Additive latency add to user (tAL).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_AL  "ext_ram_t_al"
/*
 * CRC Read Latency (tCRCRL).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_CRC_RD_LATENCY  "ext_ram_t_crc_rd_latency"
/*
 * CRC Write Latency (tCRCWL).
 * By default this period is stated in terms of picoseconds.
 * To state it in terms of number of clocks add "c" suffix to the value (e.g. 1000 is 1000 ps, and 1000c is 1000 clocks).
 */
#define spn_EXT_RAM_T_CRC_WR_LATENCY  "ext_ram_t_crc_wr_latency"

/* Wait period (Clocks) between commands during INIT sequence. Range: 0-0x3ff. Default: 0x3ff. */
#define spn_EXT_RAM_INIT_WAIT_PERIOD  "ext_ram_init_wait_period"
/*
 * Dram Gear down mode.
 * Valid values: 0 - Enable, 1 - Disable. Default: 0x0.
 */
#define spn_EXT_RAM_GEAR_DOWN_MODE  "ext_ram_gear_down_mode"
/*
 * Dram Address bus inversion.
 * Valid values: 0 - Enable, 1 - Disable. Default: 0x0.
 */
#define spn_EXT_RAM_ABI  "ext_ram_abi"
/*
 * Data bus inversion on write direction.
 * Valid values: 0 - Enable, 1 - Disable. Default: 0x0.
 */
#define spn_EXT_RAM_WRITE_DBI  "ext_ram_write_dbi"
/*
 * Data bus inversion on read direction.
 * Valid values: 0 - Enable, 1 - Disable. Default: 0x0.
 */
#define spn_EXT_RAM_READ_DBI  "ext_ram_read_dbi"
/*
 * Command parity latency.
 * Valid values: 0 - Enable, 1 - Disable. Default: 0x0.
 */
#define spn_EXT_RAM_CMD_PAR_LATENCY  "ext_ram_cmd_par_latency"
/*
 * Enable write CRC 
 * Valid values: 0 - Enable, 1 - Disable. Default: 0x0.
 */
#define spn_EXT_RAM_WRITE_CRC  "ext_ram_write_crc"
/*
 * Enable read CRC (DDR4 does not support read CRC)
 * Valid values: 0 - Enable, 1 - Disable. Default: 0x0.
 */
#define spn_EXT_RAM_READ_CRC  "ext_ram_read_crc"
/*
 * Dram DQ Swap.
 * Format: ext_ram_dq_swap_dramX_byteY_bitZ=M. Means, In dram X, Byte Y swap DQ Z and M.
 * Default: No swapping.
 */
#define spn_EXT_RAM_DQ_SWAP  "ext_ram_dq_swap"

/* DDR2 - MRS0 (1st write) */
#define spn_EXT_RAM_DDR2_MRS0_WR1  "ext_ram_ddr2_mrs0_wr1"

/* DDR2 - MRS0 (2nd write) */
#define spn_EXT_RAM_DDR2_MRS0_WR2  "ext_ram_ddr2_mrs0_wr2"

/* DDR2 - EMR0 (1st write) */
#define spn_EXT_RAM_DDR2_EMR0_WR1  "ext_ram_ddr2_emr0_wr1"

/* DDR2 - EMR0 (2nd write) */
#define spn_EXT_RAM_DDR2_EMR0_WR2  "ext_ram_ddr2_emr0_wr2"

/* DDR2 - EMR0 (3rd write) */
#define spn_EXT_RAM_DDR2_EMR0_WR3  "ext_ram_ddr2_emr0_wr3"

/* DDR2 - EMR1 (1st write) */
#define spn_EXT_RAM_DDR2_EMR1_WR1  "ext_ram_ddr2_emr1_wr1"

/* DDR2 - EMR2 (1st write) */
#define spn_EXT_RAM_DDR2_EMR2_WR1  "ext_ram_ddr2_emr2_wr1"

/* DDR3 - MRS0 (1st write) */
#define spn_EXT_RAM_DDR3_MRS0_WR1  "ext_ram_ddr3_mrs0_wr1"

/* DDR3 - MRS0 (2nd write) */
#define spn_EXT_RAM_DDR3_MRS0_WR2  "ext_ram_ddr3_mrs0_wr2"

/* DDR3 - MRS1 (1st write) */
#define spn_EXT_RAM_DDR3_MRS1_WR1  "ext_ram_ddr3_mrs1_wr1"

/* DDR3 - MRS2 (1st write) */
#define spn_EXT_RAM_DDR3_MRS2_WR1  "ext_ram_ddr3_mrs2_wr1"

/* DDR3 - MRS3 (1st write) */
#define spn_EXT_RAM_DDR3_MRS3_WR1  "ext_ram_ddr3_mrs3_wr1"

/* GDD3 - MRS0 (1st write) */
#define spn_EXT_RAM_GDDR3_MRS0_WR1  "ext_ram_gddr3_mrs0_wr1"

/* GDD3 - EMR0 (1st write) */
#define spn_EXT_RAM_GDDR3_EMR0_WR1  "ext_ram_gddr3_emr0_wr1"
/*
 * Petra-B DRAM PLL.
 * Must be set for Petra-B revision A1 and above.
 * In this case, the PETRA_HW_PLL_PARAMS structure of the dram HW_ADJUSTMENTS
 * configuration is ignored
 * The DRAM frequency is derived from the following formula:
 * F-out = F-Ref*(2*(f+1)/[(r+1)*2^q]), where F-out is twice the DRAM frequency.
 * Limitations:
 * 75MHz   <= F-ref    <= 175MHz
 * 25MHz   <= F-ref/r+1 <= 45MHz
 * 1600MHz <= F-vco    <= 3200MHz
 * 
 * Valid range for r: 0-7.
 */
#define spn_EXT_RAM_PLL_R  "ext_ram_pll_r"

/* Range: 17 - 63. */
#define spn_EXT_RAM_PLL_F  "ext_ram_pll_f"

/* Range: 1 - 4. */
#define spn_EXT_RAM_PLL_Q  "ext_ram_pll_q"
/*
 * Select Parity or ECC protection type.
 * Values: PARITY/ECC.
 */
#define spn_EXT_QDR_PROTECTION_TYPE  "ext_qdr_protection_type"

/* If TRUE, the 250Mhz Core clock is used as QDR reference clock. Otherwise (lower frequency) - QDR clock is used. In the later case, pll configuration must be set. */
#define spn_EXT_QDR_USE_CORE_CLOCK_FREQ  "ext_qdr_use_core_clock_freq"
/*
 * QDR type. Allowed values:
 * QDR: QDR type 2. This is the default QDR type
 *   and can typically be used also for QDR type 2-plus and
 *   QDR type 3
 * QDR2P: QDR type 2-plus. Choosing this value
 *   may be needed if using this QDR type
 * QDR3: QDR type 3. Choosing this value
 *   may be needed if using this QDR type
 * NONE: No QDR is used.
 */
#define spn_EXT_QDR_TYPE  "ext_qdr_type"
/*
 * QDR Pll configuration as derived from the QDR reference
 * clock. Note: this field is only relevant if
 * is_core_clock_freq is FALSE - ignored otherwise.
 * CAUTION: it is a misconfiguration to use QDR clock,
 * configured to the Core clock frequency (250Mhz) or above!
 */
#define spn_EXT_QDR_PLL_M  "ext_qdr_pll_m"

/* Pll-N */
#define spn_EXT_QDR_PLL_N  "ext_qdr_pll_n"

/* Pll-P */
#define spn_EXT_QDR_PLL_P  "ext_qdr_pll_p"
/*
 * Total QDR SRAM memory size
 * Units: Mbits.
 */
#define spn_EXT_QDR_SIZE_MBIT  "ext_qdr_size_mbit"

/* MPLS ELSP Minimum label range */
#define spn_MPLS_ELSP_LABEL_RANGE_MIN  "mpls_elsp_label_range_min"

/* MPLS ELSP Maximum label range */
#define spn_MPLS_ELSP_LABEL_RANGE_MAX  "mpls_elsp_label_range_max"
/*
 * The reference clock that feeds the Fabric CMU-s. Units: KHz.
 * If m/n are not forced to zero, only the below values
 * are valid:
 * 12500/156250/200000/212500/218750/312500
 */
#define spn_FABRIC_REF_CLOCK  "fabric_ref_clock"
/*
 * Force m/n divisors, when referring serdes rate from reference clock.
 * Add suffix _fabric0/_combo0/_nif0 to choose which clock domain to configure.
 */
#define spn_FORCE_CLK_M_N_DIVISORS_ZERO  "force_clk_m_n_divisors_zero"
/*
 * Number of ticks the 88640 and 88650 devices clock ticks per second (about a tick every
 * 4.00 nanoseconds).Default value 88640: 250. Default value 88650: 600. Units: MHz.
 * Range for 88640: 150 - 300. For 88650: 150-900
 */
#define spn_CORE_CLOCK_SPEED  "core_clock_speed"

/* Enable statistics interface */
#define spn_STAT_IF_ENABLE  "stat_if_enable"
/*
 * Enable statistics reports on EnQueue.
 * Valid valued: 0/1.
 * Default: '1'.
 */
#define spn_STAT_IF_REPORT_ENQUEUE_ENABLE  "stat_if_report_enqueue_enable"
/*
 * Enable statistics reports on DeQueue.
 * Valid valued: 0/1.
 * Default: '1'.
 */
#define spn_STAT_IF_REPORT_DEQUEUE_ENABLE  "stat_if_report_dequeue_enable"
/*
 * Statistics interface phase.
 * Valid valued: 0/90/180/270.
 */
#define spn_STAT_IF_PHASE  "stat_if_phase"
/*
 * If False, no idle period and set to 0 (StBillNullPrd & StQszIdlePrd) otherwise, to the maximum value
 * Valid valued: TRUE/FALSE
 */
#define spn_STAT_IF_IDLE_REPORTS_PRESENT  "stat_if_idle_reports_present"
/*
 * If True, then only a single copy per multicast packet
 * (for ingress replication multicast packets) is reported.
 * Otherwise, all the packets are reported.
 */
#define spn_STAT_IF_REPORT_MULTICAST_SINGLE_COPY  "stat_if_report_multicast_single_copy"
/*
 * Statistics-Report (packet) size.
 * Valid valued: 65B/126B/248B/492B (Queue-Size), 64B/128B/256B/512B/1024B (Billing).
 */
#define spn_STAT_IF_PKT_SIZE  "stat_if_pkt_size"
/*
 * Selective report Queue range
 * Reports will be generated for traffic transferred through these queues
 * Valid valued: 0-96K-1
 */
#define spn_STAT_IF_SELECTIVE_REPORT_QUEUE_MIN  "stat_if_selective_report_queue_min"
/*
 * Selective report Queue range
 * Reports will be generated for traffic transferred through these queues
 * Valid valued: 0-96K-1
 */
#define spn_STAT_IF_SELECTIVE_REPORT_QUEUE_MAX  "stat_if_selective_report_queue_max"
/*
 * Scrubber Queue range
 * Valid valued: 0/96K-1
 */
#define spn_STAT_IF_SCRUBBER_QUEUE_MIN  "stat_if_scrubber_queue_min"
/*
 * Scrubber Queue range
 * Valid valued: 0/96K-1
 */
#define spn_STAT_IF_SCRUBBER_QUEUE_MAX  "stat_if_scrubber_queue_max"
/*
 * Scrubber Rate
 * Valid valued: more than 0
 */
#define spn_STAT_IF_SCRUBBER_RATE_MIN  "stat_if_scrubber_rate_min"
/*
 * Scrubber Rate
 * Valid valued: more than 0
 */
#define spn_STAT_IF_SCRUBBER_RATE_MAX  "stat_if_scrubber_rate_max"
/*
 * Buffer descriptor threshold
 * -1 - ignore threshold
 */
#define spn_STAT_IF_SCRUBBER_BUFFER_DESCR_TH  "stat_if_scrubber_buffer_descr_th"
/*
 * Buffer descriptor buffers (BDBs) threshold
 * -1 - ignore threshold
 */
#define spn_STAT_IF_SCRUBBER_BDB_TH  "stat_if_scrubber_bdb_th"
/*
 * unicast DRAM buffers threshold
 * -1 - ignore threshold
 */
#define spn_STAT_IF_SCRUBBER_UC_DRAM_BUFFER_TH  "stat_if_scrubber_uc_dram_buffer_th"

/* If set, enable Statistics interface Scrubber functionality. */
#define spn_STAT_IF_SCRUBBER_ENABLE  "stat_if_scrubber_enable"

/* Statistics report mode. Valid values: BILLING/FAP20V/QSIZE. */
#define spn_STAT_IF_REPORT_MODE  "stat_if_report_mode"
/*
 * Select between Packet-size and Queue-size formats.
 * Valid values: QUEUE/PACKET.
 */
#define spn_STAT_IF_REPORT_FAP20V_MODE  "stat_if_report_fap20v_mode"
/*
 * Multicast report format for the Fabric Multicast: report
 * of the copies with their Queue number or with their
 * Multicast-Ids. Valid only if the mode is PACKET.
 * Valid values: QUEUE_NUM/MC_ID.
 */
#define spn_STAT_IF_REPORT_FAP20V_FABRIC_MC  "stat_if_report_fap20v_fabric_mc"
/*
 * Multicast report format for the Ingress Replication
 * Multicast: report of the copies with their Queue number
 * or with their Multicast-Ids. Valid only if the mode is
 * PKT_SIZE.
 * Valid values: QUEUE_NUM/MC_ID.
 */
#define spn_STAT_IF_REPORT_FAP20V_ING_MC  "stat_if_report_fap20v_ing_mc"
/*
 * Applicable for Petra-B only. TRUE - snoop/mirror packets
 * are also counted in the Copy-Count
 */
#define spn_STAT_IF_REPORT_FAP20V_COUNT_SNOOP  "stat_if_report_fap20v_count_snoop"
/*
 * If True, then the reported packet size is the one at the
 * packet reception. Otherwise, the reported packet size is
 * the one after the header editing.
 */
#define spn_STAT_IF_REPORT_ORIGINAL_PKT_SIZE  "stat_if_report_original_pkt_size"
/*
 * If True, then only a single copy per multicast packet
 * (for ingress replication multicast packets) is reported.
 * Otherwise, all the packets are reported.
 */
#define spn_STAT_IF_REPORT_FAP20V_ING_MC_REPORT_SINGLE  "stat_if_report_fap20v_ing_mc_report_single"
/*
 * If True, then only a single copy per multicast packet
 * (for ingress replication multicast packets) is reported.
 * Otherwise, all the packets are reported.
 */
#define spn_STAT_IF_REPORT_FAP20V_SINGLE_COPY_REPORTED  "stat_if_report_fap20v_single_copy_reported"
/*
 * If TRUE, CNM (Congestion Notification Message) packet statistics
 * are reported. Valid only if the FAP20V mode is PACKET.
 */
#define spn_STAT_IF_REPORT_FAP20V_CNM_REPORT  "stat_if_report_fap20v_cnm_report"
/*
 * Billing mode for the egress report.
 * Valid values:
 * EGR_Q_NB: Egress queue number presentation in the egress report.
 * CUD: Copy-Unique-Data (Out-LIF) presentation in the egress report.
 * VSI_VLAN: Egress statistics according to the VSI (VLAN).
 * BOTH_LIFS: Both In-LIF and Out-LIF presentations in the egress
 */
#define spn_STAT_IF_REPORT_BILLING_MODE  "stat_if_report_billing_mode"
/*
 * Statistics interface sync period in nanoseconds. Defines maximal period
 * between consecutive sync patterns transmitted on the statistics interface.
 * Zero disables sync patterns transmission. Maximum value: 0xffffffff.
 */
#define spn_STAT_IF_SYNC_RATE  "stat_if_sync_rate"
/*
 * If TRUE, parity checking is enabled. Reports with
 * parity-errors are discarded. The parity indications
 * are on expense of some other fields, as described in
 * the statistics report format documentation.
 */
#define spn_STAT_IF_PARITY_ENABLE  "stat_if_parity_enable"

/* Traffic Class source in the Statistic-Reports */
#define spn_STAT_IF_TC_SOURCE  "stat_if_tc_source"
/*
 * If set, the CPU streaming IF is in Multi-Port Mode.
 * Otherwise, the CPU is in Single-Port Mode.
 */
#define spn_STREAMING_IF_MULTI_PORT_MODE  "streaming_if_multi_port_mode"
/*
 * If set, the CSI time-out counter is activated and
 * the CSI will send a read reply command back to
 * the CPU after timeout_prd cycles, if no read
 * reply was received from the Petra blocks.
 */
#define spn_STREAMING_IF_ENABLE_TIMEOUTCNT  "streaming_if_enable_timeoutcnt"
/*
 * Number of cycles the CSI waits for a read reply from
 * the Petra blocks before issuing a read reply command.
 */
#define spn_STREAMING_IF_TIMEOUT_PRD  "streaming_if_timeout_prd"
/*
 * If set, the CSI will not send a reply command for
 * write requests. As for read requests, the CSI will
 * send a 32b reply command containing the read data only.
 */
#define spn_STREAMING_IF_QUIET_MODE  "streaming_if_quiet_mode"
/*
 * If set, the CSI does not discard data received with a
 * parity error and treats it as valid data. Default is
 * to set this register to assist in the bring-up phase.
 * The application should clear this register after the
 * CPU interface is working.
 */
#define spn_STREAMING_IF_DISCARD_BAD_PARITY  "streaming_if_discard_bad_parity"
/*
 * If set, disables transmitting packets over the streaming
 * interface. These packets can be read through the
 * cpu_asynchronous_packet_data address.
 */
#define spn_STREAMING_IF_DISCARD_PKT_STREAMING  "streaming_if_discard_pkt_streaming"
/*
 * Out of total of 15 SerDes quartets, two (one per internal NIF Group
 * consisting of 4 MALs) may be assigned to either Network or Fabric interfaces.
 * If TRUE, combo is used towards the network. Else, it is used towards the fabric.
 * Use suffix 0 for combo-A or 1 for combo-B.
 */
#define spn_COMBO_NIF  "combo_nif"
/*
 * The reference clock that feeds the NIF CMU-s. Units: KHz.
 * If m/n are not forced to zero, only the below values
 * are valid:
 * 12500/156250/200000/212500/218750/312500
 */
#define spn_NIF_REF_CLOCK  "nif_ref_clock"
/*
 * The reference clock that feeds the Combo CMU-s. The combo CMU-s can be dedicated
 * to either NIF or fabric - refer to the `shared_quartet' configuration in the operation mode.
 * Units: KHz.
 * If m/n are not forced to zero, only the below values
 * are valid:
 * 12500/156250/200000/212500/218750/312500
 */
#define spn_COMBO_REF_CLOCK  "combo_ref_clock"
/*
 * Enable/Disable Rx/Tx lanes swap.
 * Note: This is applicable for XAUI/RXAUI interfaces only
 * Default: disabled. 
 */
#define spn_LANES_SWAP  "lanes_swap"
/*
 * If TRUE - the link partner`s bus size is 64 bits length. If FALSE - the
 * link partner`s bus size is 32 bits length. 
 */
#define spn_SPAUI_LINK_PARTNER_DOUBLE_SIZE_BUS  "spaui_link_partner_double_size_bus"
/*
 * Relevant only if link_partner_double_size_bus is set, ignored otherwise.
 * If TRUE - the SOP will be only in odd position.
 */
#define spn_SPAUI_IS_DOUBLE_SIZE_SOP_ODD_ONLY  "spaui_is_double_size_sop_odd_only"
/*
 * Relevant only if link_partner_double_size_bus is set, ignored otherwise.
 * If TRUE - the SOP will be only in even position.
 */
#define spn_SPAUI_IS_DOUBLE_SIZE_SOP_EVEN_ONLY  "spaui_is_double_size_sop_even_only"

/* Preamble size */
#define spn_SPAUI_PREAMBLE_SIZE  "spaui_preamble_size"
/*
 * If set, /S/ character will not be inserted at the
 * beginning of a packet.
 */
#define spn_SPAUI_PREAMBLE_SKIP_SOP  "spaui_preamble_skip_sop"

/* Deficit Idle Count mode. Valid values: AVERAGE/MIN. */
#define spn_SPAUI_IPG_DIC_MODE  "spaui_ipg_dic_mode"

/* Inter Packet Gap size in bytes. Range: 1 - 255. */
#define spn_SPAUI_IPG_SIZE  "spaui_ipg_size"

/* 24/32 Byte CRC mode configuration. Valid values: 32b/24b/NONE. */
#define spn_SPAUI_CRC_MODE  "spaui_crc_mode"
/*
 * Index of the byte containing the CH (Channel) field inside the first column
 * of the preamble. Possible values are 0 (if no SOP in preamble), 1, 2, 3.
 * Range: 0 - 3. 
 */
#define spn_SPAUI_CHAN_BCT_CHANNEL_BYTE_NDX  "spaui_chan_bct_channel_byte_ndx"

/* Burst Control Tag Size. Range: 0 - 2.      */
#define spn_SPAUI_CHAN_BCT_SIZE  "spaui_chan_bct_size"

/* If TRUE, the channelized interface will function in burst interleaving mode. Otherwise - in full packet mode. Note: if TRUE, the bct_size must be set to `2'  */
#define spn_SPAUI_CHAN_IS_BURST_INTERLEAVING  "spaui_chan_is_burst_interleaving"

/* Defines the response to local/remote fault indication. */
#define spn_  ""
/*
 * Response to local fault indication.
 * Valid values:
 * DATA_AND_IDLE: Continue sending data, send Idles
 * DATA_AND_RF: Continue sending data, send Remote Fault Indication.
 * DATA_AND_LF: Continue sending data, send Local Fault Indication.
 * NO_DATA_IDLE: Stop sending data, send Idles.
 * NO_DATA_RF: Stop sending data, send Remote Fault Indication.
 * NO_DATA_LF: Stop sending data, send Local Fault Indication.
 */
#define spn_SPAUI_CHAN_FAULT_RESPONSE_LOCAL  "spaui_chan_fault_response_local"
/*
 * Response to remote fault indication.
 * Valid values:
 * DATA_AND_IDLE: Continue sending data, send Idles
 * DATA_AND_RF: Continue sending data, send Remote Fault Indication.
 * DATA_AND_LF: Continue sending data, send Local Fault Indication.
 * NO_DATA_IDLE: Stop sending data, send Idles.
 * NO_DATA_RF: Stop sending data, send Remote Fault Indication.
 * NO_DATA_LF: Stop sending data, send Local Fault Indication.
 */
#define spn_SPAUI_CHAN_FAULT_RESPONSE_REMOTE  "spaui_chan_fault_response_remote"

/* If TRUE, the appropriate SGMII interface is enabled. */
#define spn_GMII_ENABLE_RX  "gmii_enable_rx"

/* If TRUE, the appropriate SGMII interface is enabled. */
#define spn_GMII_ENABLE_TX  "gmii_enable_tx"

/* 1000BASE-X or SGMII. */
#define spn_GMII_MODE  "gmii_mode"

/* SGMII link-rate - explicit, or auto-negotiation */
#define spn_GMII_RATE  "gmii_rate"
/*
 * Number of lanes in the Interlaken interface.
 * For ILKN-A; Range: 8 - 24.
 * For ILKN-B; Range: 4 - 12
 */
#define spn_ILKN_NUM_LANES  "ilkn_num_lanes"

/* When a bit is set, the equivalent lane (PHY) is used for the corresponding port. */
#define spn_ILKN_LANES  "ilkn_lanes"
/*
 * Number of lanes in the caui interface.
 * For caui-A; Range: 10 - 12.
 * For caui; Range: 10 - 12
 */
#define spn_CAUI_NUM_LANES  "caui_num_lanes"
/*
 * If defined, identifies the invalid lane. Ignored otherwise.
 * For ILKN-A; Range: 0 - 23.
 * For ILKN-B; Range: 0 - 11
 */
#define spn_ILKN_INVALID_LANE_ID  "ilkn_invalid_lane_id"
/*
 * If TRUE, the channelized interface functions in burst interleaving mode. Otherwise - in full packet mode.
 * Note: when configuring FAT-PIPE over ILKN, ILKN must be configured to work as interleaved (is_burst_interleaving == TRUE)    
 */
#define spn_ILKN_IS_BURST_INTERLEAVING  "ilkn_is_burst_interleaving"
/*
 * ILKN interface statistics mecanism can count packets per port channel, burst per port channel or per physical port
 * Avaliable modes:
 * PACKET_PER_CHANNEL
 * BURST_PER_CHANNEL
 * STAT_PER_PHYSICAL_PORT
 */
#define spn_ILKN_COUNTERS_MODE  "ilkn_counters_mode"
/*
 * Allowed values:
 * DISABLED
 * 3x4: Fat-Pipe Enabled on (at maximum) 3 Fat-pipe interfaces
 *   A-C, (at maximum) 4 FAP ports per interface
 * 2x6: Fat-Pipe Enabled on (at maximum) 2 Fat-pipe interfaces
 *   A-B, (at maximum) 6 FAP ports per interface
 * 1x12: Fat-Pipe Enabled on 1 Fat-pipe interface A, (at maximum)
 *   12 FAP ports per interface
 */
#define spn_FAT_PIPE_MODE  "fat_pipe_mode"
/*
 * If the Fat-pipe is enabled, the FAP Port index of the base port of the Fat-pipe. Range: 1 - 12. 
 * If the Fat-pipe is disabled, this field is ignored.
 * Use suffix "_idN" to configure fat-pipe N (0-2)
 */
#define spn_FAT_PIPE_BASE_PORT  "fat_pipe_base_port"
/*
 * If the Fat-pipe is enabled, the number of Fat-pipe consecutive OFP ports, and accordingly Network Interfaces, that comprise the Fat-pipe.
 * If the Fat-pipe is enabled, the number of Fat-pipe consecutive OFP ports, and accordingly Network Interfaces, that comprise the Fat-pipe.
 * According to the NIF_FATP_MODE: 
 * For 3x4: Range: 1 - 4.
 * For 2x6: Range: 1 - 6.
 * For 1x12: Range: 1 - 12.
 * If the Fat-pipe is disabled, this field is ignored.
 * Use suffix "_idN" to configure fat-pipe N (0-2)
 */
#define spn_FAT_PIPE_NUM_PORTS  "fat_pipe_num_ports"
/*
 * If enabled, the MAL consumed by the ELK interface. The appropriate MAL cannot be used for NIF configuration.
 * Valid values: 0/12/14
 */
#define spn_EXTERNAL_LOOKUP_MAL  "external_lookup_mal"

/* If TRUE, the Synchronous Ethernet pins of MALG-B can be used (4 SYNCE signals in total). Otherwise, only 2 SYNCE signals can be used. Note: If TRUE, not fully compatible with Petra-A pinout (override VSS pins).  */
#define spn_SYNC_ETH_IS_MALG_B_ENABLED  "sync_eth_is_malg_b_enabled"
/*
 * Synchronous Ethernet Signal Mode.
 * Valid values:
 * TWO_DIFF_CLK: Synchronous Ethernet signal - differential (two signals
 *   per clock) recovered clock, two differential outputs
 * FOUR_CLK: Synchronous Ethernet signal - recovered clock, four
 *   outputs - two from each MAL group. Each clock may be
 *   connected to any NIF in the same MAL group.
 * TWO_CLK_AND_VALID: Synchronous Ethernet signal - recovered clock accompanied
 *   by a valid indication, two clk+valid outputs
 */
#define spn_SYNC_ETH_MODE  "sync_eth_mode"
/*
 * Note: the actual source is a single SerDes lane in the specified NIF port. 
 * Use suffix "_clkN" to configure click id N
 */
#define spn_SYNC_ETH_CLK_TO_NIF_ID  "sync_eth_clk_to_nif_id"
/*
 * Clock Divider for the selected recovered clock. Valid values: 20/40/80.
 * Use suffix "_clkN" to configure click id N
 */
#define spn_SYNC_ETH_CLK_DIVIDER  "sync_eth_clk_divider"
/*
 * If TRUE, automatic squelch function is enabled for the recovered clock. This
 * function powers down the clock output whenever the link is not synced, i.e. the
 * clock is invalid (even if the VALID indication is not present on the pin).
 * Use suffix "_clkN" to configure click id N
 */
#define spn_SYNC_ETH_CLK_SQUELCH_ENABLE  "sync_eth_clk_squelch_enable"

/* MDIO frequency. Units: KHz. */
#define spn_MDIO_CLOCK_FREQ_KHZ  "mdio_clock_freq_khz"
/*
 * If TRUE, the specified quartet CMU in the SerDes star is activated.
 * Notes:
 * 1. If any CMU is expected to be used at some stage in the future, it must be activated on init (the ACTIVE CMU structure).
 * 2. Not activating a CMU (if not expected to be used at any point) improves the device power consumption.
 * Suffix "_N" denots quartet N.
 */
#define spn_PB_SERDES_QRTT_ACTIVE  "pb_serdes_qrtt_active"
/*
 * If TRUE, the specified quartet in the SerDes is activated.
 * Notes:
 * 1. If any of the ports in the quartet are expected to be used at some stage in the future,
 *    it must be activated on init.
 * 2. Not activating a quartet (if not expected to be used at any point) improves the device power consumption.
 * Suffix "_N" denots quartet N.
 */
#define spn_SERDES_QRTT_ACTIVE  "serdes_qrtt_active"
/*
 * The maximal expected rate for any lane in the quartet.
 * Must be identical for all lanes per-quartet.
 * Suffix _N denots quartet N.
 * Range: 1000 - 6250. Units: Mbps.
 * If m/n divisors are forced to zero (see soc parameter
 * force_clk_m_n_divisors_zero), any value is allowed
 * If m/n are not forced to zero, only the below values
 * are valid:
 * 1000000/1041670/1171880/1250000/1302030/1333330/1562500/
 * 2343750/2500000/2604160/2666670/2083330/3000000/3125000/
 * 3750000/4000000/4166670/4687500/5000000/5208330/5333330/
 * 5833330/6000000/6250000/4375000/5468750/4250000
 */
#define spn_PB_SERDES_QRTT_MAX_EXPECTED_RATE  "pb_serdes_qrtt_max_expected_rate"
/*
 * Per-SerDes Lane rate configuration parameters.
 * Range: 1000 - 6250. Units: Mbps.
 * If m/n divisors are forced to zero (see soc parameter
 * force_clk_m_n_divisors_zero), any value is allowed
 * If m/n are not forced to zero, only the below values
 * are valid:
 * 1000000/1041670/1171880/1250000/1302030/1333330/1562500/
 * 2343750/2500000/2604160/2666670/2083330/3000000/3125000/
 * 3750000/4000000/4166670/4687500/5000000/5208330/5333330/
 * 5833330/6000000/6250000/4375000/5468750/4250000
 */
#define spn_PB_SERDES_LANE_RATE  "pb_serdes_lane_rate"
/*
 * Transmitter amplitude value- internal representation. An
 * amplification factor for the entire transmit waveform.
 * Range: 0 - 31.
 */
#define spn_PB_SERDES_LANE_TX_PHYS_AMP  "pb_serdes_lane_tx_phys_amp"
/*
 * Transmitter main value - internal representation. A
 * weight value for the non-emphasized bits. Range: 0 - 31.
 */
#define spn_PB_SERDES_LANE_TX_PHYS_MAIN  "pb_serdes_lane_tx_phys_main"
/*
 * Transmitter pre-emphasis value - internal
 * representation. A weight value for the Pre-Curser
 * emphasis. Range: 0 - 7.
 */
#define spn_PB_SERDES_LANE_TX_PHYS_PRE  "pb_serdes_lane_tx_phys_pre"
/*
 * Transmitter post-emphasis value - internal
 * representation. A weight value for the Post-Curser
 * emphasis. Range: 0 - 15.
 */
#define spn_PB_SERDES_LANE_TX_PHYS_POST  "pb_serdes_lane_tx_phys_post"
/*
 * 
 * TX physical parameters are derived from the selected
 * media type. Used only if the conf_mode is 'MEDIA_TYPE' -
 * ignored otherwise.
 * Allowed values:
 * CHIP2CHIP: The 2 communicating chips lay on the same board,
 *   therefore very minor Loss is expected.
 * SHORT_BACKPLANE: The 2 communicating chips lay on a short back-plane or
 *   connected through a connector.
 * LONG_BACKPLANE: The 2 communicating chips lay on a long back-plane, this
 *   derives a relatively high Loss.
 */
#define spn_PB_SERDES_LANE_TX_PHYS_MEDIA_TYPE  "pb_serdes_lane_tx_phys_media_type"

/* Receiver zcnt value- internal representation. */
#define spn_PB_SERDES_LANE_RX_PHYS_ZCNT  "pb_serdes_lane_rx_phys_zcnt"

/* Receiver z1cnt value- internal representation. */
#define spn_PB_SERDES_LANE_RX_PHYS_Z1CNT  "pb_serdes_lane_rx_phys_z1cnt"

/* Receiver dfelth value- internal representation. */
#define spn_PB_SERDES_LANE_RX_PHYS_DFELTH  "pb_serdes_lane_rx_phys_dfelth"

/* Receiver tlth value- internal representation. */
#define spn_PB_SERDES_LANE_RX_PHYS_TLTH  "pb_serdes_lane_rx_phys_tlth"

/* Receiver g1cnt value- internal representation. */
#define spn_PB_SERDES_LANE_RX_PHYS_G1CNT  "pb_serdes_lane_rx_phys_g1cnt"
/*
 * Per-SerDes Lane power state configuration parameters.
 * Note: if enabled, the configuration is set for both direction
 * (receive and transmit). To set different configuration
 * per-direction - either set FALSE here and configure using
 * dedicated API, or override one of the directions using dedicated API.
 * Allowed values:
 * DOWN
 * UP
 * UP_AND_RELOCK: SerDes is powered up. When setting this state, the
 *    SerDes is validated after power-up. If needed. a re-lock
 *    sequence is performed to verify SerDes is active. Note:
 *    this is the recommended value for powering-up the
 *    SerDes.
 */
#define spn_PB_SERDES_LANE_POWER_STATE  "pb_serdes_lane_power_state"

/* If TRUE, polarity is swapped (TX). */
#define spn_PB_SERDES_LANE_SWAP_POLARITY_TX  "pb_serdes_lane_swap_polarity_tx"

/* If TRUE, polarity is swapped (RX). */
#define spn_PB_SERDES_LANE_SWAP_POLARITY_RX  "pb_serdes_lane_swap_polarity_rx"
/*
 * This configuration affects the maximal number of Egress MC groups that can be opened.
 * Can only be enabled (TRUE) when working with FE600 (not FE200 or mesh).
 * If TRUE, up to 16K Egress MC groups can be opened. Otherwise - up to 8K.
 * The configuration must be consistant with the FE600 device configuration.
 * Note! If enabled, the FAP-IDs range in the system is limited to 0 - 511.
 */
#define spn_EGR_MC_16K_GROUPS  "egr_mc_16k_groups"
/*
 * The way the device is connected to fabric.
 * Valid values:
 * FE: Indicate FAP Fabric interface is connected to FE device.
 * BACK2BACK: Indicates FAP Fabric interface is connected to another
 *    FAP device. Total are 2 FAP devices in the system. No FE
 *    devices.
 * MESH: Indicate FAP Fabric interface is connected to another 2
 *    FAP. Total are 3, 4, ... FAP devices in the system. No FE devices.
 * MULT_STAGE_FE: Indicate FAP Fabric interface is connected to FE device,
 *    and that the system is multistage system.
 * SINGLE_FAP: Indicate single FAP in the system, without other FAPs
 *    or FEs.
 */
#define spn_FABRIC_CONNECT_MODE  "fabric_connect_mode"
/*
 * FTMH Header configuration: always allow, never allow, allow only when the packet is multicast.
 * Allowed values: ALWAYS/IF_MC/NEVER
 */
#define spn_FABRIC_FTMH_OUTLIF_EXTENSION  "fabric_ftmh_outlif_extension"

/* tacking is enabled in the system. */
#define spn_STACKING_ENABLE  "stacking_enable"
/*
 * Detarmine if FTMH stacking extansion is add to all packets.
 * Allowed values: TRUE/FALSE. Default: FALSE
 */
#define spn_ADD_STACKING_EXTENSION  "add_stacking_extension"
/*
 * TM Domain of this device.
 * Default: 0
 */
#define spn_DEVICE_TM_DOMAIN  "device_tm_domain"

/* Per Port. Sets the TM Domin the port is connected to. */
#define spn_PEER_TM_DOMAIN  "peer_tm_domain"

/* External header size appended by external PP. This is used to calculate credit discount. */
#define spn_EXTERNAL_HEADER_SIZE  "external_header_size"
/*
 * Base queue for packets with explicit flow (does not affect packets with destination id in the header).
 * Default: 0.
 */
#define spn_FLOW_MAPPING_QUEUE_BASE  "flow_mapping_queue_base"

/* Explicit flow should be added or deleted from flow_mapping_queue_base value to get the final flow value. 1 => add, 2 => delete */
#define spn_FLOW_MAPING_ADD_DELETE  "flow_maping_add_delete"

/* Value to add to Multicast ID when the Source interface class is nif. This generates the final multicast id */
#define spn_MULTICAST_ID_OFFSET_NIF  "multicast_id_offset_nif"

/* Value to add to Multicast ID when the Source interface class is recycling. This generates the final multicast id */
#define spn_MULTICAST_ID_OFFSET_RECYCLING  "multicast_id_offset_recycling"

/* Value to add to Multicast ID when the Source interface class is cpu. This generates the final multicast id */
#define spn_MULTICAST_ID_OFFSET_CPU  "multicast_id_offset_cpu"

/* Value to add to Multicast ID when the Source interface class is olp. This generates the final multicast id */
#define spn_MULTICAST_ID_OFFSET_OLP  "multicast_id_offset_olp"

/* Low boundary of the direct bitmap range */
#define spn_MULTICAST_EGRESS_DIRECT_BITMAP_START  "multicast_egress_direct_bitmap_start"

/* High boundary of the direct bitmap range */
#define spn_MULTICAST_EGRESS_DIRECT_BITMAP_END  "multicast_egress_direct_bitmap_end"
/*
 * start of the ingress multicast group id range, from which
 * bcm_multicast_create allocates when the BCM_MULTICAST_WITH_ID flag not set.
 * Manually using legal multicast IDs not in the range may be less efficient.
 */
#define spn_MULTICAST_INGRESS_GROUP_ID_RANGE_MIN  "multicast_ingress_group_id_range_min"
/*
 * end of the ingress multicast group id range, from which
 * bcm_multicast_create allocates when the BCM_MULTICAST_WITH_ID flag not set.
 * Manually using legal multicast IDs not in the range may be less efficient.
 */
#define spn_MULTICAST_INGRESS_GROUP_ID_RANGE_MAX  "multicast_ingress_group_id_range_max"
/*
 * start of the egress multicast group id range, from which
 * bcm_multicast_create allocates when the BCM_MULTICAST_WITH_ID flag not set.
 * Manually using legal multicast IDs not in the range may be less efficient.
 */
#define spn_MULTICAST_EGRESS_GROUP_ID_RANGE_MIN  "multicast_egress_group_id_range_min"
/*
 * end of the egress multicast group id range, from which
 * bcm_multicast_create allocates when the BCM_MULTICAST_WITH_ID flag not set.
 * Manually using legal multicast IDs not in the range may be less efficient.
 */
#define spn_MULTICAST_EGRESS_GROUP_ID_RANGE_MAX  "multicast_egress_group_id_range_max"

/* If TRUE, EEP extension is added to PPH header. This field is valid only when working in petra-B mode (is_petra_rev_a_in_system == FALSE), and PP is enabled. */
#define spn_SYSTEM_PPH_EEP_EXT  "system_pph_eep_ext"
/*
 * Statistics tag mode. 
 * Allowed values:
 * DISABLED
 * EN_NO_VSQ: The Statistics Tag is enabled with no use of the VSQ pointer.
 *   In the Statistics Interface, the dequeue information is not
 *   available. It still can be used in Billing mode.
 * EN_WITH_VSQ: The Statistics Tag is enabled and the use of the VSQ pointer
 *   is enabled. In the Statistics Interface, the dequeue information is not
 *   available. It still can be used in Billing mode.
 */
#define spn_SYSTEM_STAG_ENCONDING_ENABLE_MODE  "system_stag_enconding_enable_mode"
/*
 * Offset of the statistics tag header data from the base
 * header, in 4 bit (nibble) units. Range: 5 - 63.
 * The format of the Statistic-Tag is {VSQ-Pointer (8b, optional), Statistic-Tag(18b)}
 * Note: the offset points to the LSB of the Statistic-Tag
 */
#define spn_SYSTEM_STAG_ENCONDING_OFFSET_4BIT  "system_stag_enconding_offset_4bit"
/*
 * Port header type.
 * Allowed values:
 * ETH: Port header processing type: Ethernet. Supported
 *   direction: incoming / outgoing. Switching and TM
 *   functions are based on Ethernet packet
 *   processing. Incoming and outgoing outermost header is
 *   Ethernet.
 * RAW: Port header processing type: Raw. Supported direction:
 *   incoming / outgoing. Simple static switching; entire
 *   packet is payload. No header is assumed.
 * TM: Port header processing type: TM. Supported direction:
 *   incoming / outgoing. Designed to enable use of the TM
 *   features of the Incoming/Outgoing packets have an
 *   outermost Incoming/Outgoing-TM-Header (ITMH/OTMH).
 * PROG: Port header processing type: programmable. Supported
 *   direction: incoming. User programmable ingress
 *   prcessing. There are 4 programmable types that define
 *   the different starting program for classification of the
 *   packet.
 * CPU: Port header processing type: CPU. Supported direction:
 *   Outgoing. Designed to support CPU protocol
 *   processing. Outgoing packet has a Fabric-TM-Header (FTMH).
 * STACKING: Port header processing type: Stacking. Supported direction:
 *   Incoming / Outgoing. Designed to support use of stacking ports
 *   with a Fabric-TM-Header(FTMH) format.
 * TDM: Port header processing type: TDM. Supported direction:
 *   Incoming / Outgoing. Designed to support use of TDM processing
 *   with a regular Fabric-TM-Header(FTMH) format. 
 *   Defines port to be TDM Packet mode port
 * TDM_RAW: Port header processing type: TDM_RAW. Supported direction:
 *   Incoming. Designed to support use of TDM ports with
 *   simple static switching; entire packet is payload.
 *   No header is assumed. Defines port to be TDM Packet mode port.
 * INJECTED: Port header processing type: Both. Supported direction:
 *   Incoming only. Designed to support use of injected packets with
 *   PTCH Header as a first header.
 *   Output: FTMH (6B) + Out-LIF Extension (2B) + PPH.
 * XGS_HQoS: Port header processing type: Raw. Supported direction:
 *   incoming / outgoing. Designed to support higig headers for working
 *   with XGS devices and HQoS Queing model.
 * XGS_DiffServ: Port header processing type: Raw. Supported direction:
 *   incoming / outgoing. Designed to support higig headers for working
 *   with XGS devices and DiffServ Queing model.
 * XGS_MAC_EXT: Port header processing type: Raw. Supported direction:
 *   incoming / outgoing. Designed to support higig headers for working
 *   with XGS devices as MAC extension.
 */
#define spn_TM_PORT_HEADER_TYPE  "tm_port_header_type"

/* If TRUE, an extension added to its ITMH. */
#define spn_TM_PORT_ITMH_EXT_ENABLE  "tm_port_itmh_ext_enable"

/* If TRUE, source extension added to its OTMH. */
#define spn_TM_PORT_OTMH_SRC_EXT_ENABLE  "tm_port_otmh_src_ext_enable"

/* If TRUE, destination extension added to its OTMH. */
#define spn_TM_PORT_OTMH_DEST_EXT_ENABLE  "tm_port_otmh_dest_ext_enable"

/* TM Egress Replication port. Range: 0-1. */
#define spn_NUM_ERP_TM_PORTS  "num_erp_tm_ports"

/* Offload processor port. Range: 0-1. */
#define spn_NUM_OLP_TM_PORTS  "num_olp_tm_ports"

/* Recycle ports */
#define spn_NUM_RECYCLE_TM_PORTS  "num_recycle_tm_ports"

/* OAM processor port enable */
#define spn_NUM_OAMP_PORTS  "num_oamp_ports"
/*
 * If set driver reserve bcmPortClassFieldIngressPacketProcessing 2 bits to support OAM default profile.
 * In case feature is set then the number of bcmPortClassFieldIngressPacketProcessing is divided by 4. 
 */
#define spn_BCM886XX_OAM_DEFAULT_PROFILE  "bcm886xx_oam_default_profile"
/*
 * If set oam classifier of Arad+ works in advanced mode, otherwise classifier works in simple mode which is similar to Arad. 
 * Advanced mode enables adding meps with different direction on same lif. 
 * (only Arad+)
 */
#define spn_OAM_CLASSIFIER_ADVANCED_MODE  "oam_classifier_advanced_mode"

/* setting bfd pwe (mode 0) or bfd cc mplstp mode (mode 1). */
#define spn_BFD_ENCAPSULATION_MODE  "bfd_encapsulation_mode"

/* User defined G-ACH for BFD-CC packets, oam */
#define spn_MPLSTP_CC_CHANNEL_TYPE  "mplstp_cc_channel_type"

/* User defined G-ACH for BFD-CV packets, oam */
#define spn_MPLSTP_CV_CHANNEL_TYPE  "mplstp_cv_channel_type"

/* User defined G-ACH for BFD control, oam */
#define spn_MPLSTP_BFD_CONTROL_CHANNEL_TYPE  "mplstp_bfd_control_channel_type"

/* User defined PW-ACH, oam */
#define spn_MPLSTP_PW_ACH_CHANNEL_TYPE  "mplstp_pw_ach_channel_type"

/* User defined G-ACH for DLM, oam */
#define spn_MPLSTP_DLM_CHANNEL_TYPE  "mplstp_dlm_channel_type"

/* User defined G-ACH for ILM, oam */
#define spn_MPLSTP_ILM_CHANNEL_TYPE  "mplstp_ilm_channel_type"

/* User defined G-ACH for DM, oam */
#define spn_MPLSTP_DM_CHANNEL_TYPE  "mplstp_dm_channel_type"

/* User defined G-ACH for MPLSTP-IPV4, oam */
#define spn_MPLSTP_IPV4_CHANNEL_TYPE  "mplstp_ipv4_channel_type"

/* User defined G-ACH for on demand CV control, oam */
#define spn_MPLSTP_ON_DEMAND_CV_CHANNEL_TYPE  "mplstp_on_demand_cv_channel_type"

/* User defined G-ACH PWE-OAM , oam */
#define spn_MPLSTP_PWE_OAM_CHANNEL_TYPE  "mplstp_pwe_oam_channel_type"

/* User defined G-ACH for MPLS-TP-IPV6, oam */
#define spn_MPLSTP_IPV6_CHANNEL_TYPE  "mplstp_ipv6_channel_type"

/* User defined G-ACH OAM fault, oam */
#define spn_MPLSTP_FAULT_OAM_CHANNEL_TYPE  "mplstp_fault_oam_channel_type"

/* User defined G-ACH for G8113, oam */
#define spn_MPLSTP_G8113_CHANNEL_TYPE  "mplstp_g8113_channel_type"

/* Recycling port to be used for OAM */
#define spn_OAM_RCY_PORT  "oam_rcy_port"
/*
 * Configures outlif extenstion on otmh.
 * Allowed values:
 * NEVER: Outlif extension is never added.
 * IF_MC: Outlif extension is added only for MC.
 * ALWAYS: Outlif extension is always added.
 */
#define spn_TM_PORT_OTMH_OUTLIF_EXT_MODE  "tm_port_otmh_outlif_ext_mode"
/*
 * Selects the source for counter engine commands on Dune Packet Processors.
 * Use port mode to differentiate between counter engines, not ports.
 * Possible extension _LSB or _MSB for: INGRESS_FIELD, EGRESS_VSI, EGRESS_OUT_LIF, EGRESS_TM
 * Allowed values:
 * INGRESS_FIELD: Ingress PP counter 0.
 * INGRESS_FIELD_0: Ingress PP counter 0.
 * INGRESS_FIELD_1: Ingress PP counter 1.
 * INGRESS_VOQ: IIngress VOQ.
 * INGRESS_STAG: Ingress Statistics tag.
 * INGRESS_VSQ: Ingress VSQ.
 * INGRESS_CNM: ngress CNM ID.
 * EGRESS_FIELD: Egress PP.
 * EGRESS_VSI: Egress VSI - counter 0 (ARAD only).
 * EGRESS_VSI_0: Egress VSI - counter 0 (ARAD only).
 * EGRESS_VSI_1: Egress VSI - counter 1(ARAD only).
 * EGRESS_OUT_LIF: Egress OutLIF counter 0 (ARAD only).
 * EGRESS_OUT_LIF_0: Egress OutLIF counter 0 (ARAD only).
 * EGRESS_OUT_LIF_1: Egress OutLIF counter 1 (ARAD only).
 * EGRESS_TM: Egress TM counter 0(ARAD only).
 * EGRESS_TM_0: Egress TM counter 0(ARAD only).
 * EGRESS_TM_1: Egress TM counter 1(ARAD only).
 * INGRESS_OAM: Ingress OAM (ARAD only).
 * EGRESS_OAM: Egress OAM (ARAD only).
 */
#define spn_COUNTER_ENGINE_SOURCE  "counter_engine_source"
/*
 * Selects the counter engine statistics mode on Dune Packet Processors.
 * Various statistics can be kept according to source and statistics mode.
 * Certain statistics sets may only work with certain sources.
 * Uses port mode to differentiate between counter engines, not ports.
 * Allowed values:
 * FWD: forwarded.
 * FWD_COLOR: forwarded green, forwarded yellow.
 * FWD_DROP: forwarded, dropped.
 * GREEN_NOT_GREEN: fwd grn, fwd yel, drop grn, drop not grn.
 * FULL_COLOR: fwd grn, fwd yel, drop grn, drop yel, drop red.
 * NOTE: default for ingress sources = FWD_DROP, for egress sources = FWD
 */
#define spn_COUNTER_ENGINE_STATISTICS  "counter_engine_statistics"
/*
 * Least significant bit of statistics tag to use as counter index on
 * Dune Packet Processor counter engine, when source is statistics tag.
 * Uses port mode to differentiate between counter engines, not ports.
 * Default is bit zero.
 */
#define spn_COUNTER_ENGINE_STAG_LOW_BIT  "counter_engine_stag_low_bit"
/*
 * Selects first queue for inclusion in statistics on Dune Packet Processor
 * counter engine, when the engine source is VOQ.
 * Uses port mode to differentiate between counter engines, not ports.
 * First such counter engine defaults to min queue zero.
 * If more than one engine uses VOQ source, default is contiguous queues.
 */
#define spn_COUNTER_ENGINE_VOQ_MIN_QUEUE  "counter_engine_voq_min_queue"
/*
 * If set, the counter offsets inside the Counter-Set
 * (according to the color and the forwarded/drop indication)
 * is configurable, according to counter_engine_map.
 */
#define spn_COUNTER_ENGINE_MAP_ENABLE  "counter_engine_map_enable"
/*
 * If counter_engine_map_enable is set, this SOC property
 * indicates the Counter-Set size (number of counters).
 */
#define spn_COUNTER_ENGINE_MAP_SIZE  "counter_engine_map_size"
/*
 * Counter offset inside the Counter-Set for the forward green counter.
 * Applicable if counter_engine_map_enable is enabled.
 */
#define spn_COUNTER_ENGINE_MAP_FWD_GREEN_OFFSET  "counter_engine_map_fwd_green_offset"
/*
 * Counter offset inside the Counter-Set for the forward yellow counter.
 * Applicable if counter_engine_map_enable is enabled.
 */
#define spn_COUNTER_ENGINE_MAP_FWD_YELLOW_OFFSET  "counter_engine_map_fwd_yellow_offset"
/*
 * Counter offset inside the Counter-Set for the forward red counter.
 * Applicable if counter_engine_map_enable is enabled.
 */
#define spn_COUNTER_ENGINE_MAP_FWD_RED_OFFSET  "counter_engine_map_fwd_red_offset"
/*
 * Counter offset inside the Counter-Set for the forward black counter.
 * Applicable if counter_engine_map_enable is enabled.
 */
#define spn_COUNTER_ENGINE_MAP_FWD_BLACK_OFFSET  "counter_engine_map_fwd_black_offset"
/*
 * Counter offset inside the Counter-Set for the drop green counter.
 * Applicable if counter_engine_map_enable is enabled.
 */
#define spn_COUNTER_ENGINE_MAP_DROP_GREEN_OFFSET  "counter_engine_map_drop_green_offset"
/*
 * Counter offset inside the Counter-Set for the drop yellow counter.
 * Applicable if counter_engine_map_enable is enabled.
 */
#define spn_COUNTER_ENGINE_MAP_DROP_YELLOW_OFFSET  "counter_engine_map_drop_yellow_offset"
/*
 * Counter offset inside the Counter-Set for the drop red counter.
 * Applicable if counter_engine_map_enable is enabled.
 */
#define spn_COUNTER_ENGINE_MAP_DROP_RED_OFFSET  "counter_engine_map_drop_red_offset"
/*
 * Counter offset inside the Counter-Set for the drop black counter.
 * Applicable if counter_engine_map_enable is enabled.
 */
#define spn_COUNTER_ENGINE_MAP_DROP_BLACK_OFFSET  "counter_engine_map_drop_black_offset"
/*
 * Selects number of queues per counter set on Dune Packet Processor
 * counter engine, when the engine source is VOQ.
 * Uses port mode to differentiate between counter engines, not ports.
 * First such counter engine defaults to 1 queue per counter set.
 * If more than one processor uses VOQ source, later processors default
 * to same setting as the immediately previous one in VOQ mode.
 */
#define spn_COUNTER_ENGINE_VOQ_QUEUE_SET_SIZE  "counter_engine_voq_queue_set_size"
/*
 * Flow Control Out-Of-Band port type. Values: 0 => not used/unknown,
 * 1 => spi, 2 => Interlaken, 3 => HCFC.
 * For Dune devices the port range is [0-1]
 */
#define spn_FC_OOB_TYPE  "fc_oob_type"
/*
 * Flow Control Out-Of-Band port mode. Values:  0 => disable,
 * 0x1 => enable Rx flow control, 0x2 => enable Tx flow control.
 * Depending on h/w capability both enable Rx flow control and
 * enable TX flow control could be specified.
 * This is a bitwise definition. This allows the user to specify
 * the mode via a single entry.
 * For Dune devices the port range is [0-1]
 */
#define spn_FC_OOB_MODE  "fc_oob_mode"
/*
 * Flow Control Out-Of-Band calender length.
 * For Dune devices the port range is [0-1]
 */
#define spn_FC_OOB_CALENDER_LENGTH  "fc_oob_calender_length"
/*
 * Flow Control Out-Of-Band repeat count.
 * For Dune devices the port range is [0-1]
 */
#define spn_FC_OOB_CALENDER_REP_COUNT  "fc_oob_calender_rep_count"
/*
 * Flow Control InBand(interlaken) port mode. Values:  0 => disable,
 * 0x1 => enable Rx flow control, 0x2 => enable Tx flow control.
 * depending on h/w capability both enable Rx flow control and
 * enable TX flow control could be specified.
 * This is a bitwise definition. This allows the user to specify
 * the mode via a single entry.
 * For Dune devices the port range is [0-1]
 */
#define spn_FC_INBAND_INTLKN_MODE  "fc_inband_intlkn_mode"
/*
 * Flow Control InBand(interlaken) calender length.
 * For Dune devices the port range is [0-1]
 */
#define spn_FC_INBAND_INTLKN_CALENDER_LENGTH  "fc_inband_intlkn_calender_length"
/*
 * Flow Control InBand(interlaken) repeat count.
 * For Dune devices the port range is [0-1]
 */
#define spn_FC_INBAND_INTLKN_CALENDER_REP_COUNT  "fc_inband_intlkn_calender_rep_count"
/*
 * Flow Control InBand(interlaken) LLFC calender entries.
 * Values: 0 => disabled, , 1 => calender 0, 2 => calender 0, 16, ...
 * For Dune devices the port range is [0-1]
 */
#define spn_FC_INBAND_INTLKN_CALENDER_LLFC_MODE  "fc_inband_intlkn_calender_llfc_mode"
/*
 * Flow Control InBand(interlaken) LLFC multi use bits mask.
 * This is a 6 bit value. Values: 0 => disabled, non-zero => represents mask
 * For Dune devices the port range is [0-1]
 */
#define spn_FC_INBAND_INTLKN_LLFC_MUB_ENABLE_MASK  "fc_inband_intlkn_llfc_mub_enable_mask"

/* This controls whether to extract the recovered clock or not. (same as SyncE) */
#define spn_PHY_CLOCK_ENABLE  "phy_clock_enable"
/*
 * Enable Tunnel Termination for protocol types, compatible for all devices.
 * Setting the compatible mode ignores protocol match and sets protocol mask to zero.
 */
#define spn_BCM_TUNNEL_TERM_COMPATIBLE_MODE  "bcm_tunnel_term_compatible_mode"
/*
 * this property is prefixed by the range number ("_#"). The value that is assigned to this property configures the label range start
 * 
 * 0: First label in range number 0
 * 1: First label in range number 1
 * 2: First label in range number 2
 */
#define spn_MPLS_TUNNEL_TERM_LABEL_RANGE_MIN  "mpls_tunnel_term_label_range_min"
/*
 * this property is prefixed by the range number ("_#"). The value that is assigned to this property configures the label range end
 * 
 * 0: Last label in range number 0
 * 1: Last label in range number 1
 * 2: Last label in range number 2
 */
#define spn_MPLS_TUNNEL_TERM_LABEL_RANGE_MAX  "mpls_tunnel_term_label_range_max"

/* Set the start range of the egress encapsulation ip tunnel */
#define spn_EGRESS_ENCAP_IP_TUNNEL_RANGE_MIN  "egress_encap_ip_tunnel_range_min"

/* Set the end range of the egress encapsulation ip tunnel */
#define spn_EGRESS_ENCAP_IP_TUNNEL_RANGE_MAX  "egress_encap_ip_tunnel_range_max"

/* Set the start range of the egress multicast bitmap type */
#define spn_EGRESS_MULTICAST_DIRECT_BITMAP_MIN  "egress_multicast_direct_bitmap_min"

/* Set the end range of the egress multicast bitmap type */
#define spn_EGRESS_MULTICAST_DIRECT_BITMAP_MAX  "egress_multicast_direct_bitmap_max"

/* Set the number of Outgoing local port queue-pairs (1/2/8) per port */
#define spn_PORT_PRIORITIES  "port_priorities"
/*
 * Set the shared multicast resource mode
 * Strict
 * Discrete
 */
#define spn_EGRESS_SHARED_RESOURCES_MODE  "egress_shared_resources_mode"
/*
 * Mapping VOQs to Destination-Device and PP-DSP modes
 * DIRECT
 * INDIRECT
 */
#define spn_VOQ_MAPPING_MODE  "voq_mapping_mode"
/*
 * Define the 4 multicast ID offsets for the four incoming interfaces.
 * Add suffix _nif/_recycling/_cpu/_olp to choose which offset incoming interface to configure.
 */
#define spn_MULTICAST_ID_OFFSET  "multicast_id_offset"
/*
 * Define outgoing port rate mode in data rate or packet rate.
 * The configuration is per port. Valid values:
 * DATA
 * PACKET
 */
#define spn_OTM_PORT_PACKET_RATE  "otm_port_packet_rate"

/* Set the number of LAGs: 1024, 512, 256, 128 or 64 */
#define spn_NUMBER_OF_TRUNKS  "number_of_trunks"
/*
 * Specify the "Auxiliary table" mode (0/1/2).
 * Valid values:
 * 0: Private VLAN support
 * 1: Split horizon mode
 * 2: Mac-In-Mac support
 */
#define spn_BCM886XX_AUXILIARY_TABLE_MODE  "bcm886xx_auxiliary_table_mode"
/*
 * bcm886xx_port_extend_p2p_<port>.
 * 0/1 (Disable / Enable look up on this port).
 * Valid values:
 * 0
 * 1
 */
#define spn_BCM886XX_PORT_EXTEND_P2P  "bcm886xx_port_extend_p2p"

/* Initial settings. Not including the settings in CTRL/ADVA */
#define spn_PHY_LR_INITIAL_MODE  "phy_lr_initial_mode"

/* Initial speed, pairs, LDS(Autoneg), master/slave, unidirectional settings */
#define spn_PHY_LR_INITIAL_CTRL  "phy_lr_initial_ctrl"

/* Initial advertised ability */
#define spn_PHY_LR_INITIAL_ADVA  "phy_lr_initial_adva"

/* Set the ACH header Control Channel type for PSC */
#define spn_SBX_MPLSTP_PSC_TYPE  "sbx_mplstp_psc_type"

/* Set the ACH header Control Channel type for MCC */
#define spn_SBX_MPLSTP_MCC_TYPE  "sbx_mplstp_mcc_type"

/* Set the ACH header Control Channel type for SCC */
#define spn_SBX_MPLSTP_SCC_TYPE  "sbx_mplstp_scc_type"

/* Set the ACH header Control Channel type for LSP Ping */
#define spn_SBX_MPLSTP_LSPPING_TYPE  "sbx_mplstp_lspping_type"

/* Set the ACH header Control Channel type for IP BFD */
#define spn_SBX_MPLSTP_IPBFD_TYPE  "sbx_mplstp_ipbfd_type"

/* Set the ACH header Control Channel type for RAW BFD */
#define spn_SBX_MPLSTP_RAWBFD_TYPE  "sbx_mplstp_rawbfd_type"

/* select wether to set memory/table DMA access to use low endianess in host memory */
#define spn_SYSTEM_SET_DMA_LOW_ENDIANESS  "system_set_dma_low_endianess"

/* Set the default MMU lossless behavior */
#define spn_MMU_LOSSLESS  "mmu_lossless"

/* Skip chip and phy reset to support Polar rapid boot feature */
#define spn_BCM89500_RAPID_BOOT  "bcm89500_rapid_boot"

/* Select whether to enable/disable SA authentication on the device */
#define spn_SA_AUTH_ENABLED  "sa_auth_enabled"

/* Retransmission enable Tx */
#define spn_ILKN_RETRANSMIT_ENABLE_TX  "ilkn_retransmit_enable_tx"

/* Retransmission enable Rx */
#define spn_ILKN_RETRANSMIT_ENABLE_RX  "ilkn_retransmit_enable_rx"
/*
 * Retransmission Buffer size in entries of 128 Bytes.
 * Range: 1-255
 */
#define spn_ILKN_RETRANSMIT_BUFFER_SIZE  "ilkn_retransmit_buffer_size"
/*
 * Number of times a retransmit request is resent for a specific sequence number before indicating a fatal error.
 * Range: 0 - 14
 */
#define spn_ILKN_RETRANSMIT_NUM_REQUESTS_RESENT  "ilkn_retransmit_num_requests_resent"
/*
 * Number of Sequence Number repetitions Tx
 * If 1, then the sequence number is always increased by 1. If 2, each sequence number is put on 2 consecutive packets
 * Valid values: 1/2/4/8
 */
#define spn_ILKN_RETRANSMIT_NUM_SN_REPETITIONS_TX  "ilkn_retransmit_num_sn_repetitions_tx"
/*
 * Number of Sequence Number repetitions Rx.
 * If 1, then the sequence number is always increased by 1. If 2, each sequence number is put on 2 consecutive packets
 * Valid values: 1/2/4/8
 */
#define spn_ILKN_RETRANSMIT_NUM_SN_REPETITIONS_RX  "ilkn_retransmit_num_sn_repetitions_rx"
/*
 * Number of ILKN words to wait before considering the request as failed.
 * Range: 0 - 0xFFFF
 */
#define spn_ILKN_RETRANSMIT_RX_TIMEOUT_WORDS  "ilkn_retransmit_rx_timeout_words"
/*
 * Number of Sequence numbers to wait after a Retransmit request before considering the request as failed.
 * Range: 0 - 0xFF
 */
#define spn_ILKN_RETRANSMIT_RX_TIMEOUT_SN  "ilkn_retransmit_rx_timeout_sn"
/*
 * Number of ILKN words to ignore if consecutive errors are received.
 * Range: 0 - 0xFFFF
 */
#define spn_ILKN_RETRANSMIT_RX_IGNORE  "ilkn_retransmit_rx_ignore"
/*
 * Number of ILKN words received from the error event and before the packet is received again for the Watchdog on the retransmit logic.
 * Range: 0 - 0xFFFF
 */
#define spn_ILKN_RETRANSMIT_RX_WATCHDOG  "ilkn_retransmit_rx_watchdog"

/* If set enable reset of rx retransmit logic in case of error. */
#define spn_ILKN_RETRANSMIT_RX_RESET_WHEN_ERROR_ENABLE  "ilkn_retransmit_rx_reset_when_error_enable"

/* If set and ilkn_rx_retransmit_reset_when_error is set, the rx retransmit logic will be restarted in case that allignment is lost. */
#define spn_ILKN_RETRANSMIT_RX_RESET_WHEN_ALLIGNED_ERROR_ENABLE  "ilkn_retransmit_rx_reset_when_alligned_error_enable"

/* If set and ilkn_rx_retransmit_reset_when_error is set, the rx retransmit logic will be restarted in case that retry error occures. */
#define spn_ILKN_RETRANSMIT_RX_RESET_WHEN_RETRY_ERROR_ENABLE  "ilkn_retransmit_rx_reset_when_retry_error_enable"

/* If set and ilkn_rx_retransmit_reset_when_error is set, the rx retransmit logic will be restarted in case that too many bursts received after the discontinuity event. */
#define spn_ILKN_RETRANSMIT_RX_RESET_WHEN_WRAP_AFTER_DISC_ERROR_ENABLE  "ilkn_retransmit_rx_reset_when_wrap_after_disc_error_enable"

/* If set and ilkn_rx_retransmit_reset_when_error is set, the rx retransmit logic will be restarted in case the expected sequence number is received before the discontinuity event. */
#define spn_ILKN_RETRANSMIT_RX_RESET_WHEN_WRAP_BEFORE_DISC_ERROR_ENABLE  "ilkn_retransmit_rx_reset_when_wrap_before_disc_error_enable"

/* If set and ilkn_rx_retransmit_reset_when_error is set, the rx retransmit logic will be restarted in case that timout error occures. */
#define spn_ILKN_RETRANSMIT_RX_RESET_WHEN_TIMOUT_ERROR_ENABLE  "ilkn_retransmit_rx_reset_when_timout_error_enable"

/* If set, when retransmit starts, the TX  will wait to detect sequence number change in the data from the buffer before retransmitting. */
#define spn_ILKN_RETRANSMIT_TX_WAIT_FOR_SEQ_NUM_CHANGE_ENABLE  "ilkn_retransmit_tx_wait_for_seq_num_change_enable"

/* -If set, the TX will ignore incoming retransmit request when there are less bursts in the FIFO bursts than bursts per sequence number; */
#define spn_ILKN_RETRANSMIT_TX_IGNORE_REQUESTS_WHEN_FIFO_ALMOST_EMPTY  "ilkn_retransmit_tx_ignore_requests_when_fifo_almost_empty"
/*
 * If set, DRAM interface swap its HW PIN pairs during init. Note: Only one of DRAMs can have its PIN swapped.
 * Valid values: FALSE/TRUE
 */
#define spn_DRAM0_CLAMSHELL_ENABLE  "dram0_clamshell_enable"
/*
 * The Max number of crc error per DRAM buffer before that interrupt application delete this buffer.
 * Range: 0 - 0xFFFFFFFF
 */
#define spn_DRAM_CRC_DEL_BUFFER_MAX_RECLAIMS  "dram_crc_del_buffer_max_reclaims"
/*
 * If set, DRAM interface swap its HW PIN pairs during init. Note: Only one of DRAMs can have its PIN swapped.
 * Valid values: FALSE/TRUE
 */
#define spn_DRAM1_CLAMSHELL_ENABLE  "dram1_clamshell_enable"

/* Set System-Red functionality. Note: In BCM88650 device if Set, number of system ports is limited to 4K */
#define spn_SYSTEM_RED_ENABLE  "system_red_enable"

/* Number of BHH sessions */
#define spn_BHH_NUM_SESSIONS  "bhh_num_sessions"

/* BHH cosq */
#define spn_BHH_COSQ  "bhh_cosq"

/* ITU-T Carrier Code (ICC) to use in BHH LB ICC-based MIP ID. Length is six bytes, must be specified using a mac address like format, e.g 00:11:22:33:44:55 */
#define spn_BHH_CARRIER_CODE  "bhh_carrier_code"

/* Node ID to use in BHH LB ICC-based MIP ID */
#define spn_BHH_NODE_ID  "bhh_node_id"
/*
 * Enable will set device to support only simple vlan translation
 * i.e.: lookup of port or portxvlan or portxvlanxvlan. In this mode, assume a minimal usage of the vlan translation,
 * for example,parallel lookups of portxvlan with portxvlanxvlan will be disabled. Set this mode for MPLS-core device
 */
#define spn_SIMPLE_VLAN_TRANSLATION_ENABLE  "simple_vlan_translation_enable"
/*
 * MPLS termination with known stack (e.g. adding 2nd label) enables termination of label only on the required location,
 * in the MPLS stack and not over all different,locations in the MPLS stack. In this mode, no need to duplicate MPLS entries
 */
#define spn_MPLS_TERMINATION_LABEL_INDEX_ENABLE  "mpls_termination_label_index_enable"

/* Enable indicates device supports fast reroute (FRR) labels. Disable this mode provides the ability to add up to 64K label entries (and not 32K). */
#define spn_FAST_REROUTE_LABELS_ENABLE  "fast_reroute_labels_enable"

/* Set the ACH header Control Channel type for PSC */
#define spn_SBX_MPLSTP_PSC_TYPE  "sbx_mplstp_psc_type"

/* Set the ACH header Control Channel type for MCC */
#define spn_SBX_MPLSTP_MCC_TYPE  "sbx_mplstp_mcc_type"

/* Set the ACH header Control Channel type for SCC */
#define spn_SBX_MPLSTP_SCC_TYPE  "sbx_mplstp_scc_type"

/* Set the ACH header Control Channel type for LSP Ping */
#define spn_SBX_MPLSTP_LSPPING_TYPE  "sbx_mplstp_lspping_type"

/* Set the ACH header Control Channel type for IP BFD */
#define spn_SBX_MPLSTP_IPBFD_TYPE  "sbx_mplstp_ipbfd_type"

/* Set the ACH header Control Channel type for RAW BFD */
#define spn_SBX_MPLSTP_RAWBFD_TYPE  "sbx_mplstp_rawbfd_type"

/* Enable the policer bypass in forcedflood mode */
#define spn_SBX_BYPASS_POLICER_IN_FORCEFLOOD_MODE  "sbx_bypass_policer_in_forceflood_mode"
/*
 * Enable flexibility of setting shaper refresh interval.The configuration is a mutiplier factor of 1.95usec.
 * The supported factors are 1, 2 and 4 based on number of queues.
 * i.e 1024 or fewer queues: 1.95 usec, 3.096 usec and 7.8125 usec
 *     1025 to 2048 queues: 3.096 usec and 7.8125 usec
 *     2048 to 4096 queues: 7.8125 usec.
 */
#define spn_MMU_SHAPER_REFRESH_INTERVAL  "mmu_shaper_refresh_interval"

/* Enable the OCB (On-Chip Buffer). Enabled by default. */
#define spn_BCM886XX_OCB_ENABLE  "bcm886xx_ocb_enable"
/*
 * The size of a single data buffer in the OCB.
 * Allowed values: 128/256/512/1024 Bytes. Default: 128 Bytes.
 */
#define spn_BCM886XX_OCB_DATABUFFER_SIZE  "bcm886xx_ocb_databuffer_size"
/*
 * Reference clock frequency for the Network Interface SerDeses.
 * Default: 125.
 */
#define spn_SERDES_NIF_CLK_FREQ  "serdes_nif_clk_freq"
/*
 * Reference clock frequency for the Fabric SerDeses .
 * 0=125MHz, 1=156.25MHz
 */
#define spn_SERDES_FABRIC_CLK_FREQ  "serdes_fabric_clk_freq"
/*
 * This option controls the meaning of '0'/'1' in the of Calendar FC indications per interface (2).
 * If unset (default), use the standard FC indication. If set, use an inverted FC indication. 
 */
#define spn_FC_SPI_INDICATION_INVERT  "fc_spi_indication_invert"
/*
 * This option controls the meaning of '0'/'1' in the of Calendar FC indications per interface (2).
 * If unset (default), use the standard FC indication. If set, use an inverted FC indication. 
 */
#define spn_FC_INTLKN_INDICATION_INVERT  "fc_intlkn_indication_invert"
/*
 * The maximal interval, in words, between meta-frame sync words (see section 5.4.3 of Interlaken spec 1.1).
 * Units: words (67-bit blocks). Default: 2K. Range: 64 - 16K.
 */
#define spn_ILKN_METAFRAME_SYNC_PERIOD  "ilkn_metaframe_sync_period"

/* Enable\Disable ILKN status message check. */
#define spn_ILKN_INTERFACE_STATUS_IGNORE  "ilkn_interface_status_ignore"

/* Enable\Disable ILKN status message sent through an out-of-band interface. */
#define spn_ILKN_INTERFACE_STATUS_OOB_IGNORE  "ilkn_interface_status_oob_ignore"

/* Trap strength used when drop / trap packets to CPU. */
#define spn_DEFAULT_TRAP_STRENGTH  "default_trap_strength"

/* Snoop strength used when snoop packets to CPU */
#define spn_DEFAULT_SNOOP_STRENGTH  "default_snoop_strength"

/* PDM Mode. 0: simple (default), 1: extended (mandatory for LLFC-VSQ, PFC-VSQ, or ST-VSQ)  */
#define spn_BCM886XX_PDM_MODE  "bcm886xx_pdm_mode"
/*
 * received external synthesizer clock frequency
 * default value: 25MHz
 */
#define spn_SYNTH_DRAM_FREQ  "synth_dram_freq"
/*
 * Repartition of the OCB memory pointers. 0: 800nicast and 20% Multicast, 1: Unicast-Only
 * default value: 0
 */
#define spn_BCM886XX_OCB_REPARTITION  "bcm886xx_ocb_repartition"
/*
 * choose GE port between guarantee line rate vs less than line rate
 * on 56333.
 */
#define spn_BCM56333_PBMP_GE_LINERATE  "bcm56333_pbmp_ge_linerate"

/* On 56640 devices bitmap of ports which participate in ESM searches */
#define spn_PBMP_ESM_ELIGIBLE  "pbmp_esm_eligible"

/* use HSP scheduler for the port */
#define spn_PORT_SCHED_HSP  "port_sched_hsp"

/* Select BCM8823X TDM table for mode: 4*20G Xport, 1G CPU */
#define spn_BCM8823X_4X20_1  "bcm8823x_4x20_1"

/* Select BCM8823X TDM table for mode: 4*10G Xport, 2*20G Requeue, 1G CPU */
#define spn_BCM8823X_4X10_2X20_1  "bcm8823x_4x10_2x20_1"

/* Select BCM8823X TDM table for mode: 2*20G Xport, 2*20G Requeue, 1G CPU */
#define spn_BCM8823X_2X20_2X20_1  "bcm8823x_2x20_2x20_1"

/* Select BCM8823X TDM table for mode: 2*24G Xport, 1G CPU */
#define spn_BCM8823X_2X24_1  "bcm8823x_2x24_1"
/*
 * Select BCM8823X TDM table for mode: 2*24G and 2*20G Xport, 1G CPU
 * Below are the values to set based on the interface speeds
 * Value   IF0   IF1   IF2   IF3
 *   1:    24    24    20    20
 *   2:    24    20    24    20
 *   3:    24    20    20    24
 *   4:    20    24    24    20
 *   5:    20    24    20    24
 *   6:    20    20    24    24
 */
#define spn_BCM8823X_2X24_2X20_1  "bcm8823x_2x24_2x20_1"

/* Select BCM8823X TDM table for mode: 4x11G Xport + 25G Requeue0 + 11G Requeue1 */
#define spn_BCM8823X_4X11_1X25_1X11  "bcm8823x_4x11_1x25_1x11"

/* Select BCM8823X TDM table for mode: 4x11G Xport + 12G Requeue0 + 24G Requeue1 */
#define spn_BCM8823X_4X11_1X12_1X24  "bcm8823x_4x11_1x12_1x24"

/* Select BCM8823X TDM table for mode: 4x11G Xport + 11G Requeue0 + 25G Requeue1 */
#define spn_BCM8823X_4X11_1X11_1X25  "bcm8823x_4x11_1x11_1x25"

/* Select BCM8823X TDM table for mode: 4x11G Xport + 2x18G Requeue  */
#define spn_BCM8823X_4X11_2X18  "bcm8823x_4x11_2x18"
/*
 * L3 VRRP max VID. Support VRID configuration on VLANs: 0 - l3_vrrp_max_vid.
 * This affects maximal number of VRIDs to support on each VLAN.
 * Possible values are: 4K, 2K, 1K, 512 and 256.
 */
#define spn_L3_VRRP_MAX_VID  "l3_vrrp_max_vid"

/* L3 VRRP IPV6 distinct. Whether to to enable separate VRID configuration for IPv4 and IPv6. */
#define spn_L3_VRRP_IPV6_DISTINCT  "l3_vrrp_ipv6_distinct"

/* Option to enable dynamic update of scheduler mode */
#define spn_MMU_DYNAMIC_SCHED_UPDATE  "mmu_dynamic_sched_update"

/* Timeout delay in microseconds for queue flush complete */
#define spn_MMU_QUEUE_FLUSH_TIMEOUT  "mmu_queue_flush_timeout"

/* Number of policers to allocate for ingress processing. Valid values: 0, 32K, 64K */
#define spn_POLICER_INGRESS_COUNT  "policer_ingress_count"

/* Number of policers to allocate for egress processing. Valid values: 0, 32K, 64K */
#define spn_POLICER_EGRESS_COUNT  "policer_egress_count"
/*
 * Sharing mode to allocate meters for ingress processing.
 * Valid values:
 * 0 = NONE (No sharing. One meter may be applied per packet),
 * 1 = SERIAL (Policers are arranged in pairs. The result of the first meter is fed into the second meter),
 * 2 = PARALLEL (Policers are arranged in pairs. The final meter result is the worst-case result of the two meters)
 */
#define spn_POLICER_INGRESS_SHARING_MODE  "policer_ingress_sharing_mode"
/*
 * Sharing mode to allocate meters for egress processing.
 * Valid values:
 * 0 = NONE (No sharing. One meter may be applied per packet),
 * 1 = SERIAL (Policers are arranged in pairs. The result of the first meter is fed into the second meter),
 * 2 = PARALLEL (Policers are arranged in pairs. The final meter result is the worst-case result of the two meters)
 */
#define spn_POLICER_EGRESS_SHARING_MODE  "policer_egress_sharing_mode"
/*
 * Sets the Flow Control OOB TX Speed relatively to the Core Clock. Possible values:
 * 1 - Same as Core Clock
 * 2 - Core Clock / 2
 * 4 - Core Clock / 4
 * 8 - Core Clock / 8
 */
#define spn_FC_OOB_TX_FREQ_RATIO  "fc_oob_tx_freq_ratio"
/*
 * Number of Virtual Routing and Forwarding ID for the device.
 * Available VRF are 0,1,... ipv4_num_vrfs-1.
 * Set to 0 when routing is disabled.
 */
#define spn_IPV4_NUM_VRFS  "ipv4_num_vrfs"
/*
 * Number of IPv4 route entries to be supported in subnet database.
 * This is the total number for all VRFs in device.
 */
#define spn_IPV4_NUM_ROUTES  "ipv4_num_routes"

/* Number of bits to consider in first memory. */
#define spn_BCM886XX_IPV4_SLICE1_SIZE  "bcm886xx_ipv4_slice1_size"

/* Number of bits to consider in second memory. */
#define spn_BCM886XX_IPV4_SLICE2_SIZE  "bcm886xx_ipv4_slice2_size"

/* Number of bits to consider in third memory. */
#define spn_BCM886XX_IPV4_SLICE3_SIZE  "bcm886xx_ipv4_slice3_size"

/* Number of bits to consider in 4th memory. */
#define spn_BCM886XX_IPV4_SLICE4_SIZE  "bcm886xx_ipv4_slice4_size"

/* Number of bits to consider in 5th memory. */
#define spn_BCM886XX_IPV4_SLICE5_SIZE  "bcm886xx_ipv4_slice5_size"

/* Number of bits to consider in 6th memory. */
#define spn_BCM886XX_IPV4_SLICE6_SIZE  "bcm886xx_ipv4_slice6_size"
/*
 * default
 * pcp_lookup - PCP lookup: If set PCP is taking into account as part of Logical L2 interface, when set Mac termination is disabled
 * pon_pcp_ethertype - PCP and ETHERTYPE lookup: Whether to permit the use of PCP and Ethernet type in the AC matching lookup.
 */
#define spn_VLAN_MATCH_CRITERIA_MODE  "vlan_match_criteria_mode"
/*
 * default
 * full_db -  set db mode for Logical L2 interfaces lookups. Full DB: support up to 64K entries of vlan translation, when set Mac termination is disabled
 */
#define spn_VLAN_MATCH_DB_MODE  "vlan_match_db_mode"
/*
 * default
 * Enable Triumph3 synamic scheduler mode change
 */
#define spn_PORT_SCHED_DYNAMIC  "port_sched_dynamic"
/*
 * Possible values:
 * global
 * port
 * interface
 * port_and_interface
 */
#define spn_MPLS_CONTEXT  "mpls_context"
/*
 * Set default parameters for the DPLL command. Comma-Separated-Values.
 * DevSel, CPOL, CPHA, AddrBitOrder, DataBitOrder, AddrWidth, UseBrstBit, UseRwBit
 */
#define spn_DPLL_PARAMS  "dpll_params"
/*
 * Selects the format of the counter engine commands.
 * Uses port mode to differentiate between counter engines(not ports)
 * Allowed values:
 * PACKETS : Count only Packets 
 * BYTES : Count only bytes
 * PACKETS_AND_BYTES: Count Packets and bytes
 * MAX_QUEUE_SIZE
 */
#define spn_COUNTER_ENGINE_FORMAT  "counter_engine_format"
/*
 * Indicate which packets are counted:
 * Allowed values:
 * ALL_COPIES  : Count all packets, including replicated packets
 * FWD_COPIES : count only forwarded packets, including Multicast replicated packets , but not snooped-mirrored packets
 * ONE_COPY : only one replication per incoming packet
 */
#define spn_COUNTER_ENGINE_REPLICATED_PACKETS  "counter_engine_replicated_packets"

/* Define the sampling rate to read the near-to-overflow counters from a prefetch FIFO. interval in microseconds */
#define spn_COUNTER_ENGINE_SAMPLING_INTERVAL  "counter_engine_sampling_interval"
/*
 * Map the policer result. Allowed values:
 * INGR: Meter result affect ingress TM only, does not affect egress TM and remark.
 * EGR: Meter result affect egress TM and remark, does not affect ingress TM.
 * INGR_EGR: Meter result affect both ingress TM, egress TM and remark.
 * NONE: No affect for metering.
 */
#define spn_POLICER_RESULT_MAP  "policer_result_map"
/*
 * Set the color result function in policer parallel mode.
 * Possible values: BEST / WORST (default).
 */
#define spn_POLICER_RESULT_PARALLEL_COLOR_MAP  "policer_result_parallel_color_map"
/*
 * Indicate in policer parallel mode which bucket to update.
 * Possible values: CONSTANT, TRANSPARENT, DEFERRED.
 */
#define spn_POLICER_RESULT_PARALLEL_BUCKET_UPDATE  "policer_result_parallel_bucket_update"

/* If set, the Ethernet policer is blind (no influence of the input color). */
#define spn_RATE_COLOR_BLIND  "rate_color_blind"
/*
 * stamp the CUD in special location for HG packets. Allowed values:
 * True: stamp the CUD in PPD REP_ID field.
 * False: regular stamping of CUD to FTMH.
 */
#define spn_XGS_COMPATABILITY_STAMP_CUD  "xgs_compatability_stamp_cud"
/*
 * Trill mode:
 * 0: disabled
 * 1: fine-grained (single customer-tag)
 * 2: coarse-grained (double customer-tag)
 */
#define spn_TRILL_MODE  "trill_mode"
/*
 * Trill multicast prunning mod. Key for multicast database is tree-name,esadi-bit,<VSI>:
 * 0: no pruninig. Key is tree-name,esadi-bit.
 * 1: VSI pruning. Ket is tree-name,esadi-bit,VSI 
 */
#define spn_TRILL_MC_PRUNE_MODE  "trill_mc_prune_mode"
/*
 * QSGMII Alternative Serdes mapping.
 * Can be enabled per MAL, and will cause the following mapping:
 * MAL 5 --> Serdes Lane 1
 * MAL 6 --> Serdes Lane 7
 * MAL 7 --> Serdes Lane 3
 */
#define spn_PB_QSGMII_ALT_MAPPING  "pb_qsgmii_alt_mapping"
/*
 * Customer-specific features.
 * Is used with a propery name suffix per feature.
 * features will likely be specific to a certain device type.
 */
#define spn_CUSTOM_FEATURE  "custom_feature"
/*
 * Determines if the action signature is taken from the queue (QUEUE_SIGNATURE) or from the packet header (FORWARDING_ACTION)
 * possible values are: FORWARDING_ACTION, QUEUE_SIGNATURE
 */
#define spn_ACTION_TYPE_SIGNATURE_STAMPING  "action_type_signature_stamping"

/* Enable the IPv4 Host extension table */
#define spn_IP4_HOST_EXTENSION_TABLE_ENABLE  "ip4_host_extension_table_enable"

/* Select if a port is PON port and PON applications are loaded. */
#define spn_PON_APPLICATION_SUPPORT_ENABLED  "pon_application_support_enabled"
/*
 * The maximum number of virtual port trunk groups
 * (default is the maximum number supported by the device).
 */
#define spn_MAX_VP_LAGS  "max_vp_lags"
/*
 * If set, Initial-VID is supported. In that case BCM_VLAN_PORT_MATCH_PORT_INITIAL_VLAN can be used
 * and different between Untagged packets and tagged packet.
 */
#define spn_VLAN_TRANSLATION_INITIAL_VLAN_ENABLE  "vlan_translation_initial_vlan_enable"

/* Enable indicates device supports Upstream assignment label on MPLS packets */
#define spn_MPLS_CONTEXT_SPECIFIC_LABEL_ENABLE  "mpls_context_specific_label_enable"
/*
 * This property is prefixed by the bank number ("_#") 0-15. The value that is assigned to this property configures the bank phase access (1-4)
 * Supported values:
 * 0: Access phase is dynamic allocated.
 * 1: Access phase for MPLS Tunnel, Data.
 * 2: Access phase for MPLS tunnel, IP tunnel, I-SID, Out-RIF, Trill, Data.
 * 3: Access phase for Link Layer, Data.
 * 4: Access phase for Data.
 * 5: Access phase for PWE, MPLS Tunnel, Data. Access phase number same as 1. Egress encap bank must be synchronize with Ingress.
 * 6: Access phase for AC, Data. Access phase number same as 4. Egress encap bank must be synchronize with Ingress.
 */
#define spn_EGRESS_ENCAP_BANK_PHASE  "egress_encap_bank_phase"
/*
 * To Disable CES if it is enabled in Bond Optons.
 * Cant be used to Enable CES if it is not enabled in the Bond Option.
 */
#define spn_CES_DISABLE  "ces_disable"

/* enable/disable ip-tunnel termination & encapsulation. Values: 0/1 */
#define spn_BCM886XX_IPV6_TUNNEL_ENABLE  "bcm886xx_ipv6_tunnel_enable"

/* enable/disable ERSPAN-tunnel encapsulation. Values: 0/1 */
#define spn_BCM886XX_ERSPAN_TUNNEL_ENABLE  "bcm886xx_erspan_tunnel_enable"

/* enable/disable RSPAN-tunnel encapsulation. Values: 0/1 */
#define spn_BCM886XX_RSPAN_TUNNEL_ENABLE  "bcm886xx_rspan_tunnel_enable"
/*
 * IPv4 tunnel lookup mode :0:none 1:dip_sip termination 2: dip_termination 3: both dip_sip and dip termination
 * 4: dip_sip_port_next_protocol termination 5: dip_sip_port_next_protocol and dip termination. In modes 4 and 5, 
 * port lookup is done by looking at the LSBs [0..3] of bcmPortClassFieldIngressVlanTranslation
 */
#define spn_BCM886XX_IP4_TUNNEL_TERMINATION_MODE  "bcm886xx_ip4_tunnel_termination_mode"

/* enable/disable etherIP (RFC 3378) support */
#define spn_BCM886XX_ETHER_IP_ENABLE  "bcm886xx_ether_ip_enable"

/* Result size of the External lookups. Unit: bytes. */
#define spn_EXT_ACL_RESULT_SIZE  "ext_acl_result_size"
/*
 * Set External LPM forwarding algorithem type
 * Value Options: 0/1. 0 - TCAM, 1 - Netroute, 2 - LPM. Default: 0.
 */
#define spn_EXT_FWD_ALGORITHM_LPM  "ext_fwd_algorithm_lpm"
/*
 * Set External lookup  interface mode.
 * Change External lookup interface configuration.
 * Value Options: 0/1. 0 - Normal mode, 1 - 2 CAUI (100 Gb) ports + External lookup mode (Arad). Default: 0.
 */
#define spn_EXT_INTERFACE_MODE  "ext_interface_mode"
/*
 * The number of entries in the resilient hash table used by ECMP.
 * The remaining entries are used by LAG resilient hashing.
 * By default, the table is split evenly between ECMP and LAG resilient hashing.
 * Valid values are 0, 32768, and 65536.
 */
#define spn_ECMP_RESILIENT_HASH_SIZE  "ecmp_resilient_hash_size"

/* Enable resilient hashing. */
#define spn_RESILIENT_HASH_ENABLE  "resilient_hash_enable"

/* The default number of unicast queues at L2 for LLS setup. */
#define spn_LLS_NUM_L2UC  "lls_num_l2uc"
/*
 * This controls whether to enable the auxiliary ouput voltage from the
 * applicable PHY devices. enable(1), disable(0).
 */
#define spn_PHY_AUX_VOLTAGE_ENABLE  "phy_aux_voltage_enable"
/*
 * A bitmap of ports eligible for packet replication.
 * The default value is a bitmap of valid ports.
 * This configuration property is applicable to devices on which
 * the hardware resource for packet replication needs to be statically
 * allocated to replication groups during initialization. On such
 * devices, decreasing the number of ports eligible for replication
 * would increase the number of replication groups supported.
 */
#define spn_REPLICATION_ELIGIBLE_PBMP  "replication_eligible_pbmp"

/* Option to enable/disable strict priority vector mode */
#define spn_MMU_STRICT_PRI_VECTOR_MODE  "mmu_strict_pri_vector_mode"
/*
 * Option to Set L2 learn limit mode.
 * Support modes: per VLAN - Default settings , per VLAN_PORT , per PON port and Tunnel-ID.
 */
#define spn_L2_LEARN_LIMIT_MODE  "l2_learn_limit_mode"

/* In-LIF range base for L2 MACT limits. */
#define spn_L2_LEARN_LIF_RANGE_BASE  "l2_learn_lif_range_base"

/* This controls whether the FCMAP passthrough mode is enabled or not */
#define spn_PHY_FCMAP_PASSTHROUGH  "phy_fcmap_passthrough"
/*
 * Set Flow Control mode per port per direction (RX / TX).
 * Supported modes are: 0=DISABLE (TX default), 1=LLFC (RX default), 2=PFC, 3=SAFC.
 */
#define spn_FC_INBAND_MODE  "fc_inband_mode"

/* enable/disable L2GRE support */
#define spn_BCM886XX_L2GRE_ENABLE  "bcm886xx_l2gre_enable"

/* enable/disable VXLAN support */
#define spn_BCM886XX_VXLAN_ENABLE  "bcm886xx_vxlan_enable"

/* lookup modes for vxlan: 1: sip_dip_separated 2: sip_dip_joined */
#define spn_BCM886XX_VXLAN_TUNNEL_LOOKUP_MODE  "bcm886xx_vxlan_tunnel_lookup_mode"

/* lookup modes for l2gre: 1: sip_dip_separated 2: sip_dip_joined */
#define spn_BCM886XX_L2GRE_TUNNEL_LOOKUP_MODE  "bcm886xx_l2gre_tunnel_lookup_mode"

/* enable intra DC router */
#define spn_BCM886XX_INTRA_DC_ROUTER_ENABLE  "bcm886xx_intra_dc_router_enable"
/*
 *  bcm886xx_logical_interface_bridge_filter_enable.
 * If set, then Incoming logical interface can set or unset Same-interface filter.
 * In BCM88660, in case feature is set the number of bcmPortClassFieldIngressPacketProcessing is divided by 2.
 */
#define spn_BCM886XX_LOGICAL_INTERFACE_BRIDGE_FILTER_ENABLE  "bcm886xx_logical_interface_bridge_filter_enable"
/*
 * Set LIF ID for Simple Bridge default LIF settings. By default all ports are set with default_lif_simple.
 * Default settings set VSI = VLAN. Valid values : 0-64K
 */
#define spn_LOGICAL_PORT_L2_BRIDGE  "logical_port_l2_bridge"
/*
 * Set LIF ID for drop LIF settings. Drop LIF is used when user set bcmVlanTranslateIngressHitDrop for a specific port. 
 * Valid values: 0-64K. ID = -1 means do not allocate. 
 * In case LIF is not allocated bcmVlanTranslateIngressHitDrop is not supported .
 */
#define spn_LOGICAL_PORT_DROP  "logical_port_drop"
/*
 * Do not create default KNET Rx filter and preserve existing
 * KNET filters during BCM API initialization and shutdown.
 */
#define spn_KNET_FILTER_PERSIST  "knet_filter_persist"
/*
 * Set the retransmit calendar mode on the RX direction.
 * This property can be set for each ILKN channel by using a port suffix.
 * Optional values are: 
 * 0 - the calendar is disabled.
 * 1 - the calendar will handle re-transmit on the same interface.
 * 2 - the calendar will handle re-transmit on both interfaces. 
 */
#define spn_ILKN_RETRANSMIT_CALENDAR_MODE_RX  "ilkn_retransmit_calendar_mode_rx"
/*
 * Set the retransmit calendar mode on the TX direction.
 * This property can be set for each ILKN channel by using a port suffix.
 * Optional values are: 
 * 0 - the calendar is disabled.
 * 1 - the calendar will handle re-transmit on the same interface.
 * 2 - the calendar will handle re-transmit on both interfaces. 
 */
#define spn_ILKN_RETRANSMIT_CALENDAR_MODE_TX  "ilkn_retransmit_calendar_mode_tx"
/*
 * The operation mode of the CNM mechanism.
 * This property cannot be changed during run-time.
 * Optional values are: 
 * 0 - Dune PP
 * 1 - External PP
 * 2 - Sampling mode
 * 3 - HiGig
 */
#define spn_CONGESTION_POINT_MODE  "congestion_point_mode"
/*
 * The mapping mode between VOQs to Congestion Manages Queues.
 * This property also affects the number of ports that can be monitored by the CNM mechanism.
 * Optional values are: 
 * 0 - Each VOQ in the range of selected VOQs is mapped to a CMQ, which means supporting 8 TCs per port
 * 1 - Only odd VOQs are mapped to a CMQ, a total of 4 CMQs per port
 * 2 - Only even VOQs are mapped to a CMQ, a total of 4 CMQs per port
 */
#define spn_VOQ_TO_CMQ_MAPPING_MODE  "voq_to_cmq_mapping_mode"

/* values: 0 :NONE, 1:transit_switch 2: FCF */
#define spn_BCM886XX_FCOE_SWITCH_MODE  "bcm886xx_fcoe_switch_mode"

/* vrf-id to use for FCoE */
#define spn_BCM886XX_FCOE_NUM_VRF  "bcm886xx_fcoe_num_vrf"

/* max routes for FCoE */
#define spn_BCM886XX_FCOE_MAX_ROUTES  "bcm886xx_fcoe_max_routes"

/* 0: don't enable DF control in ipv4 tunne, 1: enable DF control, in 886xx this may affect number of qos-maps */
#define spn_886XX_IPV4_TUNNEL_DONT_FRAGMENT  "886xx_ipv4_tunnel_dont_fragment"

/* Enable EVB support */
#define spn_EVB_ENABLE  "evb_enable"
/*
 * DISABLE - Disable this function
 * IPV4 - Enable IPV4 source bind
 * IPV6 - Enable IPV6 source bind.
 * IP   - Enable IPV4 and IPV6 source bind.
 */
#define spn_L3_SOURCE_BIND_MODE  "l3_source_bind_mode"
/*
 * DISABLE - Disable IP anti-spoofing subnet function.
 * IPV4 - Enable IPv4 anti-spoofing subnet function.
 * IPV6 - Enable IPv6 anti-spoofing subnet function.
 * IP   - Enable IPV4 and IPV6 anti-spoofing subnet function.
 */
#define spn_L3_SOURCE_BIND_SUBNET_MODE  "l3_source_bind_subnet_mode"

/* Enable IPMC independent mode. */
#define spn_IPMC_INDEPENDENT_MODE  "ipmc_independent_mode"

/* Enable IPMC to operate at half of supported capacity. */
#define spn_IPMC_REDUCED_TABLE_SIZE  "ipmc_reduced_table_size"
/*
 * System port encoding in System that support XGS Diffserv, HQoS. Supported modes: 
 * 0 - 7_modid_8_port : System port is extracted from FRC.MODID 7b and FRC.PORT 8b
 * 1 - 8_modid_7_port : System port is extracted from FRC.MODID 8b and FRC.PORT 7b
 */
#define spn_HIGIG_FRC_TM_SYSTEM_PORT_ENCODING  "higig_frc_tm_system_port_encoding"

/* 0: don't enable DF control in ipv4 tunne, 1: enable DF control, in 886xx this may affect number of qos-maps */
#define spn_8865X_IPV4_TUNNEL_DF_ENABLE  "8865x_ipv4_tunnel_df_enable"
/*
 * ECN for MPLS is in 1-bit mode or 2-bits mode
 * 1 - 1-bit mode
 * 2 - 2-bits mode.
 */
#define spn_MPLS_ECN_MODE  "mpls_ecn_mode"

/* 16b value. Tpid of PON tunnel tag. */
#define spn_PON_TPID_TUNNEL_ID  "pon_tpid_tunnel_id"
/*
 * Maximal number of MAC-In-MAC VSIs. In case maximal number is 32768 then Ingress VLAN translate action is disabled. Supported values:
 * 4096 - 4K MAC-In-MAC VSIs
 * 32768 - 32K MAC-In-MAC VSIs. No ingress VLAN translate action.
 */
#define spn_MIM_NUM_VSIS  "mim_num_vsis"
/*
 * Set the credit worth resolution of the device.
 * Lower resolution will support wider range of port rates.
 * Higher resolution will offer better control of the exact port rate.
 * When using ILKN/CAUI interfaces, higher resolution will limit the max port rate
 * Supported values and corresponding max port rates:
 * low - up to 400G
 * medium - up to 200G
 * high - up to 50G
 * auto - will be set automatically during init according to interfaces in-use
 */
#define spn_CREDIT_WORTH_RESOLUTION  "credit_worth_resolution"
/*
 * In case set, Device will support My-MAC termination of reserved MC Ethernet 
 * for MPLS TP (01-00-5E-90-00-00). By default: It is enabled. For BCM 886XX default
 *  is disabled. In BCM 886xx Trill and MPLS TP mymac reserved address do not coexist
 */
#define spn_MPLS_TP_MYMAC_RESERVED_ADDRESS  "mpls_tp_mymac_reserved_address"

/* TLS database mode: 0: Default (SEM), 1: TCAM. */
#define spn_PON_TLS_DATABASE  "pon_tls_database"
/*
 * when set to 1, any frame received with an error is discarded in the core and not forwarded to the client interface.
 * when set to 0, error frames are forwarded to the client interface.
 * Receive MAC counters (GRPOK, GRPKT, GRBYT etc) will be incremented for CRC error packets irrespective of this setting.
 * Note:It is recommended to set this variable to 1 only when store and forward operation is enabled on the core
 */
#define spn_PORT_RX_FCS_ERROR_EARLY_DISCARD  "port_rx_fcs_error_early_discard"

/* If set, the device supports being a Control Bridge device. */
#define spn_EXTENDER_CONTROL_BRIDGE_ENABLE  "extender_control_bridge_enable"

/* If set, the device supports being a Transit-PE device. */
#define spn_EXTENDER_TRANSIT_ENABLE  "extender_transit_enable"

/* Prepend tag to be 4 bytes or 8 bytes. Default: 4B. */
#define spn_PREPEND_TAG_BYTES  "prepend_tag_bytes"

/* The Prepend Tag is located at (12 + 2*offset) bytes from the start of the packet. Default: 0 */
#define spn_PREPEND_TAG_OFFSET  "prepend_tag_offset"
/*
 * Port bitmap for ports that support subport feature.
 * This specifies subport feature to be enabled with any
 * mode of vlan tag based or LinkPHY channel/stream based.
 */
#define spn_PBMP_SUBPORT  "pbmp_subport"
/*
 * Maximum number of subports or packet processing ports per physical port.
 * This can be used to distribute the total number of available subports across
 * physical ports(cascaded port) suffix with .portX, .geX or _geX.
 */
#define spn_NUM_SUBPORTS  "num_subports"
/*
 * Maximum number of cos levels supported by subport or packet processing port.
 * This can be used to specify subport cos levels per physical port(cascaded port)
 * suffix with .portX, .geX or _geX.
 */
#define spn_NUM_SUBPORT_COS  "num_subport_cos"

/* packets less than this size are padded to get to this size. */
#define spn_PACKET_PADDING_SIZE  "packet_padding_size"

/* If set, the device supports being a Control Bridge device. */
#define spn_EXTENDER_CONTROL_BRIDGE_ENABLE  "extender_control_bridge_enable"

/* If set, the device supports being a Transit-PE device. */
#define spn_EXTENDER_TRANSIT_ENABLE  "extender_transit_enable"

/* Prepend tag to be 4 bytes or 8 bytes. Default: 4B. */
#define spn_PREPEND_TAG_BYTES  "prepend_tag_bytes"

/* The Prepend Tag is located at (12 + 2*offset) bytes from the start of the packet. Default: 0 */
#define spn_PREPEND_TAG_OFFSET  "prepend_tag_offset"
/*
 * Set OutLIF ID for NOP operation on Out-E-Channel. Must be set in case Extender application is set.
 * ID = -1 means do not allocate. Valid values: 0-64K.
 */
#define spn_DEFAULT_LOGICAL_INTERFACE_OUT_ECH  "default_logical_interface_out_ech"

/* Block trap strengths. */
#define spn_BLOCK_TRAP_STRENGTH  "block_trap_strength"

/*  Trunk hash format. Possible values: NORMAL (default) / INVERTED / DUPLICATED. */
#define spn_TRUNK_HASH_FORMAT  "trunk_hash_format"
/*
 * If set, the ARP table (next Hop MAC address) is extended. In BCM 886XX ARP table extend from 32K to 256K,
 * In BCM 88650 in case soc property is set System headers for PP packets always contain 5Bytes Learn extension header.
 * ARP table extension do not coexist with MIM application
 */
#define spn_BCM886XX_NEXT_HOP_MAC_EXTENSION_ENABLE  "bcm886xx_next_hop_mac_extension_enable"
/*
 * Enable buffer packing mode for storing multiple packets bound to the same queue in a single
 * external data buffer cell.
 */
#define spn_MMU_MULTI_PACKETS_PER_CELL  "mmu_multi_packets_per_cell"

/* 0x1: PIM-SM 0x2:PIM-BIDIR () 0x4:PIM-DS () */
#define spn_IPMC_PIM_MODE  "ipmc_pim_mode"
/*
 * 1: for IPMC packet with VRF !=0  (VPN) forwarding is according to VRF, G
 * 0: for IPMC packet forwarding is according to <RIF,G,SIP> regardless the VRF value
 */
#define spn_IPMC_VPN_LOOKUP_ENABLE  "ipmc_vpn_lookup_enable"
/*
 * in which Database to perform the PIM-BIDIR Group check
 * -	0: Exact-match
 * -	1: TCAM
 * -	2: both
 */
#define spn_IPMC_PIM_BIDIR_CHECK_DB  "ipmc_pim_bidir_check_db"

/* Enable Scheduler compensation */
#define spn_SCHEDULER_COMPENSATION_ENABLE  "scheduler_compensation_enable"
/*
 * Enable all of the low power modes that the device/sw combination supported.
 * 1 means enabling low power mode; 0 means disabling low power mode. 
 */
#define spn_LOW_POWER  "low_power"
/*
 * Set InLIF and OutLIF ID for default MIM-L2-LIF settings. By default all MacinMac ports are set with default logical_port_mim.
 * Default settings set B-VSI = B-VLAN. Valid values : 0-64K
 */
#define spn_LOGICAL_PORT_MIM  "logical_port_mim"
/*
 * Vlan translation mode.
 * 0: normal
 * 1: advanced mode. Enable vlan edit settings with enhanced user control
 */
#define spn_BCM886XX_VLAN_TRANSLATE_MODE  "bcm886xx_vlan_translate_mode"

/* Option to enable/disable vmac function */
#define spn_VMAC_ENABLE  "vmac_enable"

/* Set the VMAC address value (48 bits) */
#define spn_VMAC_ENCODING_VALUE  "vmac_encoding_value"

/* Set the mask of VMAC address */
#define spn_VMAC_ENCODING_MASK  "vmac_encoding_mask"
/*
 * If set driver reserve bcmPortClassFieldIngressPacketProcessing bit to support QOS L3 egress marking.
 * In case feature is set then the number of bcmPortClassFieldIngressPacketProcessing is divided by 2. Default value is 0 - disable the feature.
 */
#define spn_BCM886XX_QOS_L3_L2_MARKING  "bcm886xx_qos_l3_l2_marking"
/*
 * If set device can support Urpf mode per L3 ingress interface.
 * In BCM88660 in case feature is set the number of bcmPortClassFieldIngressPacketProcessing is divided by 2.
 */
#define spn_BCM886XX_L3_INGRESS_URPF_ENABLE  "bcm886xx_l3_ingress_urpf_enable"
/*
 * If set, indicate that external MAC is connected to the port.
 * when external MAC is connected to the port, 1588 CF stamping (adding residence time) is not done by the device,
 * the residence time addition is done by the external MAC.
 */
#define spn_EXT_1588_MAC_ENABLE  "ext_1588_mac_enable"
/*
 * If set , device supports ELI special Entropy Label Indicator capabilities in MPLS networks.
 * In BCM 886xx it is supported by default.
 */
#define spn_MPLS_ENTROPY_LABEL_INDICATOR_ENABLE  "mpls_entropy_label_indicator_enable"
/*
 * 0: Separate port use-count, port limit and port resume for UC and MC.
 * 1: Combined port use-count, port limit and port resume for UC and MC.
 */
#define spn_PORT_UC_MC_ACCOUNTING_COMBINE  "port_uc_mc_accounting_combine"
/*
 * 1: A red result from the policer implies that DP=2, while a red result from rate (Ethernet policer) implies DP=3.
 * This allows to distinguish between an Ethernet meter drop and a regular meter drop.
 * 0: A red result from both modules implies that DP=3.
 */
#define spn_POLICER_COLOR_RESOLUTION_MODE  "policer_color_resolution_mode"
/*
 * If set then the MPLS BOS bit is not used as a key for MPLS tunnel termination.
 * 0: key is <label,Is-BOS>
 * 1: key is label only.
 */
#define spn_BCM886XX_MPLS_TERMINATION_KEY_MODE  "bcm886xx_mpls_termination_key_mode"
/*
 * 0: Global
 * 1: Local
 */
#define spn_BCM88XXX_SYSTEM_RESOURCE_MANAGEMENT  "bcm88xxx_system_resource_management"

/* Enable or disable local switching feature */
#define spn_LOCAL_SWITCHING_ENABLE  "local_switching_enable"
/*
 * Set voltage mode for oob interfaces
 * HSTL_1.5V
 * 3.3V
 * HSTL_1.5V_VDDO_DIV_2
 */
#define spn_EXT_VOLTAGE_MODE  "ext_voltage_mode"
/*
 * Map a chip to a family. This is used in order to map several chips
 * which require similar soc properties to a family, and than use the
 * family as the property suffix.
 * E.g, map chip X and Y to family Z, and than one can define property.Z
 * than will be recognized by both X and Y.
 */
#define spn_SOC_FAMILY  "soc_family"
/*
 * Enable/Disable ILKN reset when watchdog error occurs
 * 0: Disable
 * 1: Enable
 */
#define spn_ILKN_RETRANSMIT_RX_RESET_UPON_WATCHDOG_ERROR_ENABLE  "ilkn_retransmit_rx_reset_upon_watchdog_error_enable"
/*
 * MPLS termination databases mode. 
 * Default mode when mpls_termination_label_index_enable=0 is 0. 
 * Default mode when mpls_termiantino_label_index_enable=1 is 2. 
 * 0: MPLS_1 refers to label namespaces L1,L2. MPLS_1 is located in SEM-B. 
 * Valid only in case mpls_termination_label_index_enable=0. 
 * 1: MPLS_1 refers to label namespaces L1,L2. MPLS_1 is located in SEM-A. 
 * Valid only in case mpls_termination_label_index_enable=0. 
 * Note: In this mode MPLS and bcmVlanPortDoubleLookupEnable are supported on the same-port. 
 * 2: MPLS_x refers to label namespace Lx. MPLS_1,_3 is located in SEM-B, MPLS_2 is located in SEM-A. 
 * Valid only in case mpls_termination_label_index_enable=1. 
 * 3: MPLS_x refers to label namespace Lx. MPLS_1,_3 is located in SEM-A, MPLS_2 is located in SEM-B. 
 * Valid only in case mpls_termination_label_index_enable=1. 
 * Note: In this mode MPLS and bcmVlanPortDoubleLookupEnable are supported on the same-port. 
 * 4: MPLS_x refers to label namespace Lx. MPLS_1,_2 is located in SEM-B, MPLS_3 is located in SEM-A. 
 * Valid only in case mpls_termination_label_index_enable=1. 
 * 5: MPLS_x refers to label namespace Lx. MPLS_1,_2 is located in SEM-A, MPLS_3 is located in SEM-B. 
 * Valid only in case mpls_termination_label_index_enable=1. 
 * Note: In this mode MPLS and bcmVlanPortDoubleLookupEnable are supported on the same-port. 
 * 6: MPLS_1 refers to label namespace L1,L2 and located in SEM-A. MPLS_2 refers to label namespace L3 and located in SEM-B. 
 * Valid only in case mpls_termination_label_index_enable=1. 
 * Note: In this mode MPLS and bcmVlanPortDoubleLookupEnable are supported on the same-port. 
 * 7: MPLS_1 refers to label namespace L1,L2 and located in SEM-B. MPLS_2 refers to label namespace L3 and located in SEM-A. 
 * Valid only in case mpls_termination_label_index_enable=1. 
 * 8: MPLS_1 refers to label namespace L1,L3 and located in SEM-A. MPLS_2 refers to label namespace L2 and located in SEM-B. 
 * Valid only in case mpls_termination_label_index_enable=1. 
 * Note: In this mode MPLS and bcmVlanPortDoubleLookupEnable are supported on the same-port. 
 * 9: MPLS_1 refers to label namespace L1,L3 and located in SEM-B. MPLS_2 refers to label namespace L2 and located in SEM-A. 
 * Valid only in case mpls_termination_label_index_enable=1. 
 */
#define spn_BCM886XX_MPLS_TERMINATION_DATABASE_MODE  "bcm886xx_mpls_termination_database_mode"

/* Timeout delay in seconds before entering power down state */
#define spn_POWER_DOWN_TIMEOUT  "power_down_timeout"
/*
 * If set then device support multiple MyMAC termination. 
 * VRRP and multiple mymac termination do not co-exist on the same device. 
 * Therefore, when enabling this soc property, l3_vrrp_max_vid and
 * l3_vrrp_ipv6_distinct must be set to 0. 
 */
#define spn_L3_MULTIPLE_MYMAC_TERMINATION_ENABLE  "l3_multiple_mymac_termination_enable"

/* 0 - dont distinct between L3 protocols , 1 - distinct between IPV4 and other L3 packets  */
#define spn_L3_MULTIPLE_MYMAC_TERMINATION_MODE  "l3_multiple_mymac_termination_mode"

/* 0 - profile priority group with 1 shared profile and 8 headroom profiles, 1 - profile priority group with 8 shared profiles and 1 headroom profile */
#define spn_PROFILE_PG_1HDRM_8SHARED  "profile_pg_1hdrm_8shared"

/* Core clock frequency applied to switch chip, any unsupported frequency will be ignored */
#define spn_CORE_CLOCK_FREQUENCY  "core_clock_frequency"

/* Percentage of port LED intensity. Valid value 0~100 */
#define spn_LED_INTENSITY  "led_intensity"

/* Enable external TCAM lane swap for TX during ETU init */
#define spn_EXT_TCAM_TX_LANE_SWAP  "ext_tcam_tx_lane_swap"

/* Enable external TCAM lane swap for RX during ETU init */
#define spn_EXT_TCAM_RX_LANE_SWAP  "ext_tcam_rx_lane_swap"

/* External TCAM request response latency */
#define spn_EXT_TCAM_REQUEST_RESPONSE_LATENCY  "ext_tcam_request_response_latency"
/*
 * 1: Allow adding 64B IPV6 LPM entries in unreserved paired TCAM.
 * 0: Do not allow adding 64B IPV6 LPM entries in paired TCAM.
 */
#define spn_LPM_SCALING_ENABLE  "lpm_scaling_enable"
/*
 * 1: num_ipv6_lpm_128b_entries number of entries are reserved exclusively for 128B V6 LPM entries
 * 0: Do not reserve any entries for 128B V6 entries and use the whole of paired TCAMs for either 128B V6, 64B V6, V4 entries.
 * Ignored if lpm_scaling_enable is 0.
 */
#define spn_LPM_IPV6_128B_RESERVED  "lpm_ipv6_128b_reserved"

/* Enables accelerated linkscan mode on specified port. */
#define spn_RX_FAST_LOS_LINK  "rx_fast_los_link"
/*
 * Indicates the linkscan time interval in usecs 
 * during accelerated mode.
 */
#define spn_RX_FAST_LOS_USEC  "rx_fast_los_usec"
/*
 * Indicates the maximum number of times linkscan 
 * will poll in accelerated mode without a status 
 * change in any accelerated mode ports.
 */
#define spn_RX_FAST_LOS_POLL_COUNT_MAX  "rx_fast_los_poll_count_max"

/* Set the default MMU configuration  */
#define spn_MMU_CONFIG_OVERRIDE  "mmu_config_override"
/*
 * Sets TDM dedicated queuing mode for ILKN 
 * 0 - TDM dedicated queuing is disabled 
 * 1 - TDM dedicated queuing is enabled 
 */
#define spn_ILKN_TDM_DEDICATED_QUEUING  "ilkn_tdm_dedicated_queuing"
/*
 * Device Interconnect Mode (PCI-EB2).
 * 0 = PCI, 1 = EB2
 */
#define spn_EB2_2BYTES_BIG_ENDIAN  "eb2_2bytes_big_endian"
/*
 * Disable, enable designated VLAN check. In case of 
 * disable bcmPortControlTrillDesignatedVlan is not 
 * applicable. By default: feature is enabled
 */
#define spn_TRILL_DESIGNATED_VLAN_CHECK_DISABLE  "trill_designated_vlan_check_disable"
/*
 * Device Interconnect Mode (PCI-EB2).
 * 0 = PCI, 1 = EB2
 */
#define spn_EB2_2BYTES_BIG_ENDIAN  "eb2_2bytes_big_endian"

/* Enable/Disable vlan translation match for IPv4 frames based on 5-tuple information. */
#define spn_VLAN_TRANSLATION_MATCH_IPV4  "vlan_translation_match_ipv4"
/*
 * If set presel managemnet works in advanced mode, otherwise works in simple mode 
 * Advanced mode enables managing the program selectors insertion/deletion in PSL table in atomic operation.
 */
#define spn_FIELD_PRESEL_MGMT_ADVANCED_MODE  "field_presel_mgmt_advanced_mode"
/*
 * Disable and restrict user to create l2 entry 
 * as part of l3 interface create
 */
#define spn_L3_DISABLE_ADD_TO_ARL  "l3_disable_add_to_arl"

/* Triumph3 external TCAM 0 Serdes Tx/Ctx driver current */
#define spn_EXT_TCAM0_TX_DRIVER_CURRENT  "ext_tcam0_tx_driver_current"

/* Triumph3 external TCAM 0 Serdes Tx/Ctx postcursor tap */
#define spn_EXT_TCAM0_TX_POSTCURSOR_TAP  "ext_tcam0_tx_postcursor_tap"

/* Triumph3 external TCAM 0 Serdes Tx/Ctx main tap */
#define spn_EXT_TCAM0_TX_MAIN_TAP  "ext_tcam0_tx_main_tap"

/* Triumph3 external TCAM 0 Serdes Rx/Crx gain */
#define spn_EXT_TCAM0_RX_GAIN  "ext_tcam0_rx_gain"

/* Triumph3 external TCAM 1 Serdes Tx/Ctx driver current */
#define spn_EXT_TCAM1_TX_DRIVER_CURRENT  "ext_tcam1_tx_driver_current"

/* Triumph3 external TCAM 1 Serdes Tx/Ctx postcursor tap */
#define spn_EXT_TCAM1_TX_POSTCURSOR_TAP  "ext_tcam1_tx_postcursor_tap"

/* Triumph3 external TCAM 1 Serdes Tx/Ctx main tap */
#define spn_EXT_TCAM1_TX_MAIN_TAP  "ext_tcam1_tx_main_tap"

/* Triumph3 external TCAM 1 Serdes Rx/Crx gain */
#define spn_EXT_TCAM1_RX_GAIN  "ext_tcam1_rx_gain"

/* Set 2 MSBs value of ARP-pointer in Host-table Routing over overlay format. */
#define spn_BCM886XX_ROO_HOST_ARP_MSBS  "bcm886xx_roo_host_arp_msbs"

/* If set, enable Native Routing over Overlay (ROO) in device */
#define spn_BCM886XX_ROO_ENABLE  "bcm886xx_roo_enable"
/*
 * ETU, which meas External Table Unit,
 * is used to enable external TCAM
 * used for ACLs look up in Caladan3.
 * The ETU accepts TCAM search requests from the LRP
 * and returns the corresponding results to LRP.
 */
#define spn_CALADAN3_ETU_ENABLE  "caladan3_etu_enable"

/* If set, enable processing of IPv6 extension headers */
#define spn_BCM886XX_IPV6_EXT_HDR_ENABLE  "bcm886xx_ipv6_ext_hdr_enable"
/*
 * 0 - Use 0-1 range for lif orientation.
 * 1 - Use 0-1 range for lif orientation in AC lifs and 0-3 range for orientation in other lif types. 
 * 2 - Use 0-3 range for lif orientation. 
 */
#define spn_SPLIT_HORIZON_FORWARDING_GROUPS_MODE  "split_horizon_forwarding_groups_mode"
/*
 * 1: Some of last entries of MMU_REPL_HEAD_TBL are reserved.
 *    The number of reserved entries equals to the number of ports
 *    in the valid PBMP.
 *    When there are not enough entries during deleting a port from
 *    a replication group, the reserved entries will be used as
 *    a swap space to configure the replication info of the group.
 *    After the port is deleted, there will be enough entries to
 *    configure the replication info of the group.
 *    Then, the reserved entires will be in free status again.
 * 0: The entires are not reserved.
 */
#define spn_RESERVE_MULTICAST_RESOURCES  "reserve_multicast_resources"

/* 32b value. In-LIF-ID of IP-LIF-dummy for termination of IP-Overlay bud multicast traffic. */
#define spn_DEFAULT_LOGICAL_INTERFACE_IP_TUNNEL_OVERLAY_MC  "default_logical_interface_ip_tunnel_overlay_mc"
/*
 * 0 - Enable the 60x1GE/2.5GE and 2x40XE mode of BCM56849.
 * 1 - Enable the 56x1GE/2.5GE and 8x10XE mode of BCM56849.
 * By default 56x1GE/2.5GE and 8x10XE mode will be used.
 */
#define spn_BCM56849_56X2POINT5_8X10  "bcm56849_56x2point5_8x10"

/* If set, aging is done based on HITSA only, not considering HITDA. Config property valid only for BCM56640 and BCM56340 */
#define spn_L2X_AGE_ONLY_ON_HITSA  "l2x_age_only_on_hitsa"
/*
 * Specifies ingress objects sharing same pool or using exclusive pool.
 * Example:
 * ing_share_flex_counter_pool=split(vlan,vfi) make vlan, vfi use exclusive pool.
 * ing_share_flex_counter_pool=share(vlan,vfi) make vlan, vfi use same pool.
 * An object can appear in both share case and split case,
 * but in each case it can appear one time at most.
 * Use token between each groups and use comma between each objects.
 * eg: ing_share_flex_counter_pool=split(A,B,C);share(C,D);
 * Some objects may use the same HW table, so only the first one will take effect.
 * All valid object name: 
 * port, vlan, vlanxlate, vfi, l3intf, vrf, policy, mplsvclabel, mplsswitchlabel, mplsfrrlabel,
 * l3host, trill, mimlookupid, l2gre, extpolicy, vxlan, vsan, fcoe, l3route, niv, ipmc.
 */
#define spn_ING_SHARE_FLEX_COUNTER_POOL  "ing_share_flex_counter_pool"
/*
 * Ingress Protection Coupling mode.
 * 0: Decoupled mode
 * 1: Coupled mode
 */
#define spn_BCM886XX_INGRESS_PROTECTION_COUPLED_MODE  "bcm886xx_ingress_protection_coupled_mode"
/*
 * Egress Protection Coupling mode.
 * 0: Decoupled mode
 * 1: Coupled mode
 */
#define spn_BCM886XX_EGRESS_PROTECTION_COUPLED_MODE  "bcm886xx_egress_protection_coupled_mode"
/*
 * FEC accelerated failover reroute mode.
 * 0: Standard path reroute mode
 * 1: Accelerated reroute mode
 */
#define spn_BCM886XX_FEC_ACCELERATED_REROUTE_MODE  "bcm886xx_fec_accelerated_reroute_mode"
/*
 * Packet Cell Packing (PCP) enable.
 * 0: Disable PCP
 * 1: Enable PCP
 */
#define spn_FABRIC_PCP_ENABLE  "fabric_pcp_enable"

#define BCM_SOC_PROP_NAMES_INITIALIZER \
{ \
  "10g_is_cx4", \
  "88025_hg_destport", \
  "8802x_egress_only", \
  "8865x_ipv4_tunnel_df_enable", \
  "886xx_ipv4_tunnel_dont_fragment", \
  "EAV_DISCOVERY_MASTER", \
  "EAV_DISCOVERY_SRC_MAC", \
  "EAV_SRP_INTERVAL", \
  "EAV_TIMESYNC_DISABLE_PDELAY", \
  "EAV_TIMESYNC_INTERVAL", \
  "EAV_TIMESYNC_MONITOR_PBMP", \
  "EAV_TIMESYNC_SPECIAL_LOOP_PBMP", \
  "L1_backup_clk_recovery_port", \
  "L1_primary_clk_recovery_port", \
  "RFC2544_reflector_mac_and_ip_swap_port", \
  "RFC2544_reflector_mac_swap_port", \
  "SRP_ACK_AGING_ON", \
  "action_type_signature_stamping", \
  "active_switch_controller_id", \
  "add_stacking_extension", \
  "app_queues_num", \
  "app_queues_start", \
  "arbitration_port_max_nodes", \
  "arl_clean_timeout_usec", \
  "arl_rate_limit", \
  "arl_resync_delay", \
  "auto_enable_mac_low_power", \
  "backplane_serdes_encoding", \
  "backplane_serdes_speed", \
  "bcm5320", \
  "bcm5321", \
  "bcm53400_init_port_config", \
  "bcm5614x_config", \
  "bcm5614x_hypercore_mixed_mode", \
  "bcm5615x_config", \
  "bcm5632_mode", \
  "bcm56333_pbmp_ge_linerate", \
  "bcm56340_2x10", \
  "bcm56340_4x10", \
  "bcm56340_config", \
  "bcm56344_2x10", \
  "bcm5644x_config", \
  "bcm5645x_config", \
  "bcm56521_2x12_2x24", \
  "bcm56524_2x12_2x24", \
  "bcm56526_2x12_4x16", \
  "bcm56534_2x12_2x24", \
  "bcm56538_48g_2x24", \
  "bcm56538_48g_4x12", \
  "bcm56540_4x10_2x42", \
  "bcm56540_8x10", \
  "bcm56542_2x10_2x42_2x21", \
  "bcm56544_10x10_2x42", \
  "bcm56544_10x10_4x10", \
  "bcm56544_4x10_12x10", \
  "bcm56545_24g", \
  "bcm56547_2x42", \
  "bcm56547_3x42", \
  "bcm56629_40ge", \
  "bcm56630_2x12_2x24", \
  "bcm56634_48g_2x24", \
  "bcm56634_48g_4x12", \
  "bcm56636_24g_6x12", \
  "bcm56636_2x12_2x24", \
  "bcm56638_4x12_2x24", \
  "bcm56638_8x12", \
  "bcm56639_28g_7x10", \
  "bcm56640_1x100_1x127", \
  "bcm56640_1x100_3x42", \
  "bcm56640_1x100_4x32", \
  "bcm56640_1x100_8x16", \
  "bcm56640_1x40_4x42", \
  "bcm56640_3x40_2x42", \
  "bcm56640_3x40_3x42", \
  "bcm56640_3x42_1x127", \
  "bcm56640_3x42_2x40", \
  "bcm56640_3x42_3x40", \
  "bcm56640_3x42_4x32", \
  "bcm56640_3x42_8x16", \
  "bcm56640_4x10_1x127", \
  "bcm56640_4x10_4x42", \
  "bcm56640_8x10", \
  "bcm56640_config", \
  "bcm56643_4x10_4x42", \
  "bcm56644_24g", \
  "bcm56725_16x16", \
  "bcm56821_20x12", \
  "bcm56822_8x16", \
  "bcm56840_config", \
  "bcm56849_56x2point5_8x10", \
  "bcm88020_ucode", \
  "bcm88025_ddr_type", \
  "bcm88025_hpp_freq", \
  "bcm88025_spi_freq", \
  "bcm88025_sws_freq", \
  "bcm88025_ucode", \
  "bcm88025_v6_dhosts", \
  "bcm88025_v6_shosts", \
  "bcm88030_config", \
  "bcm88030_ucode", \
  "bcm8823X_allow_ucast_mcast_resource_overlap", \
  "bcm8823x_2x20_2x20_1", \
  "bcm8823x_2x24_1", \
  "bcm8823x_2x24_2x20_1", \
  "bcm8823x_4x10_2x20_1", \
  "bcm8823x_4x11_1x11_1x25", \
  "bcm8823x_4x11_1x12_1x24", \
  "bcm8823x_4x11_1x25_1x11", \
  "bcm8823x_4x11_2x18", \
  "bcm8823x_4x20_1", \
  "bcm886xx_auxiliary_table_mode", \
  "bcm886xx_egress_protection_coupled_mode", \
  "bcm886xx_erspan_tunnel_enable", \
  "bcm886xx_ether_ip_enable", \
  "bcm886xx_fcoe_max_routes", \
  "bcm886xx_fcoe_num_vrf", \
  "bcm886xx_fcoe_switch_mode", \
  "bcm886xx_fec_accelerated_reroute_mode", \
  "bcm886xx_ingress_protection_coupled_mode", \
  "bcm886xx_intra_dc_router_enable", \
  "bcm886xx_ip4_tunnel_termination_mode", \
  "bcm886xx_ipv4_slice1_size", \
  "bcm886xx_ipv4_slice2_size", \
  "bcm886xx_ipv4_slice3_size", \
  "bcm886xx_ipv4_slice4_size", \
  "bcm886xx_ipv4_slice5_size", \
  "bcm886xx_ipv4_slice6_size", \
  "bcm886xx_ipv6_ext_hdr_enable", \
  "bcm886xx_ipv6_tunnel_enable", \
  "bcm886xx_l2gre_enable", \
  "bcm886xx_l2gre_tunnel_lookup_mode", \
  "bcm886xx_l3_ingress_urpf_enable", \
  "bcm886xx_logical_interface_bridge_filter_enable", \
  "bcm886xx_mpls_termination_database_mode", \
  "bcm886xx_mpls_termination_key_mode", \
  "bcm886xx_next_hop_mac_extension_enable", \
  "bcm886xx_oam_default_profile", \
  "bcm886xx_ocb_databuffer_size", \
  "bcm886xx_ocb_enable", \
  "bcm886xx_ocb_repartition", \
  "bcm886xx_pdm_mode", \
  "bcm886xx_port_extend_p2p", \
  "bcm886xx_qos_l3_l2_marking", \
  "bcm886xx_roo_enable", \
  "bcm886xx_roo_host_arp_msbs", \
  "bcm886xx_rspan_tunnel_enable", \
  "bcm886xx_vlan_translate_mode", \
  "bcm886xx_vxlan_enable", \
  "bcm886xx_vxlan_tunnel_lookup_mode", \
  "bcm88732_1x40_4x10", \
  "bcm88732_1x40_4x10_8x12", \
  "bcm88732_2x40_1x40", \
  "bcm88732_2x40_2x40", \
  "bcm88732_2x40_2x40E", \
  "bcm88732_2x40_8x10", \
  "bcm88732_2x40_8x12", \
  "bcm88732_4x10_1x40_8x12", \
  "bcm88732_4x10_4x10", \
  "bcm88732_6x10_2x12", \
  "bcm88732_8x10_1x40", \
  "bcm88732_8x10_2x12", \
  "bcm88732_8x10_2x40", \
  "bcm88732_8x10_4x12", \
  "bcm88732_8x10_8x10", \
  "bcm88732_8x10_8x12", \
  "bcm88732_device_mode", \
  "bcm88732_use_oob", \
  "bcm88xxx_system_resource_management", \
  "bcm89500_rapid_boot", \
  "bcm_cosq_sp_mode", \
  "bcm_esw_pscan_thread_pri", \
  "bcm_field_entry_sz", \
  "bcm_field_key_pattern", \
  "bcm_filter_clear_fe", \
  "bcm_filter_clear_ge", \
  "bcm_filter_clear_xe", \
  "bcm_ft_report_thread_pri", \
  "bcm_linkscan_errdelay", \
  "bcm_linkscan_interval", \
  "bcm_linkscan_maxerr", \
  "bcm_linkscan_pbmp", \
  "bcm_meter_clear_fe", \
  "bcm_meter_clear_ge", \
  "bcm_meter_clear_xe", \
  "bcm_num_cos", \
  "bcm_oam_thread_pri", \
  "bcm_rx_thread_pri", \
  "bcm_stat_flags", \
  "bcm_stat_interval", \
  "bcm_stat_jumbo", \
  "bcm_stat_pbmp", \
  "bcm_stat_sync_timeout", \
  "bcm_tunnel_term_compatible_mode", \
  "bcm_tx_thread_pri", \
  "bcm_xlate_api_port_enable", \
  "bcm_xlate_port", \
  "bcm_xlate_port_enable", \
  "bcm_xlate_port_map", \
  "bcm_xlate_sysport_enable", \
  "bfd_cosq", \
  "bfd_encap_memory_size", \
  "bfd_encapsulation_mode", \
  "bfd_num_sessions", \
  "bfd_sha1_keys", \
  "bfd_simple_password_keys", \
  "bfd_thread_pri", \
  "bhh_carrier_code", \
  "bhh_cosq", \
  "bhh_node_id", \
  "bhh_num_sessions", \
  "bhh_thread_pri", \
  "bist_enable", \
  "bist_timeout_msec", \
  "block_trap_strength", \
  "bm_device_mode", \
  "bme_num_esets", \
  "bme_num_resources_per_eset", \
  "bme_switch_controller_id", \
  "board_flags", \
  "board_name", \
  "bst_sync_thread_pri", \
  "buf", \
  "bypass_mcu", \
  "cable_diag_hw", \
  "caladan3_etu_enable", \
  "caui_num_lanes", \
  "caui_rx_clock_recovery_lane", \
  "cb_abort_on_err", \
  "ccm_dma_enable", \
  "ccmdma_intr_enable", \
  "ccmdma_timeout_usec", \
  "cdma_pio_hold_enable", \
  "cdma_timeout_usec", \
  "ces_common_ref_clock_rate", \
  "ces_disable", \
  "ces_ipv4_address", \
  "ces_ipv6_address", \
  "ces_mii_mac", \
  "ces_mii_port_number", \
  "ces_pll_reference_clock_rate", \
  "ces_port_tdm_proto", \
  "ces_system_clock_rate", \
  "cfap_tests", \
  "cmc", \
  "cmic_egress_dqueue", \
  "cmic_egress_squeue", \
  "cmic_ingress_dqueue", \
  "cmic_ingress_squeue", \
  "color_discard_enable", \
  "combo28_tune_aq_l_max_vdl_addr", \
  "combo28_tune_aq_l_max_vdl_ctrl", \
  "combo28_tune_aq_u_max_vdl_addr", \
  "combo28_tune_aq_u_max_vdl_ctrl", \
  "combo28_tune_control_regs_edcen_fifo_central_init", \
  "combo28_tune_control_regs_input_shift_ctrl", \
  "combo28_tune_control_regs_read_clock_config", \
  "combo28_tune_control_regs_ren_fifo_central_initializer", \
  "combo28_tune_control_regs_shared_vref_dac_config", \
  "combo28_tune_dq_edcen_fifo_config", \
  "combo28_tune_dq_rd_max_vdl_dqsn", \
  "combo28_tune_dq_rd_max_vdl_dqsp", \
  "combo28_tune_dq_rd_min_vdl", \
  "combo28_tune_dq_rd_min_vdl_dbi", \
  "combo28_tune_dq_rd_min_vdl_edc", \
  "combo28_tune_dq_read_max_vdl_fsm", \
  "combo28_tune_dq_ren_fifo_config", \
  "combo28_tune_dq_vref_dac_config", \
  "combo28_tune_dq_wr_max_vdl_data", \
  "combo28_tune_dq_wr_max_vdl_dqs", \
  "combo28_tune_dq_wr_min_vdl", \
  "combo28_tune_dq_wr_min_vdl_dbi", \
  "combo28_tune_dq_wr_min_vdl_edc", \
  "combo_nif", \
  "combo_ref_clock", \
  "config_queue", \
  "congestion_point_mode", \
  "core_clock_12G", \
  "core_clock_frequency", \
  "core_clock_speed", \
  "core_clock_speed", \
  "cos_mode", \
  "counter_engine_format", \
  "counter_engine_map_drop_black_offset", \
  "counter_engine_map_drop_green_offset", \
  "counter_engine_map_drop_red_offset", \
  "counter_engine_map_drop_yellow_offset", \
  "counter_engine_map_enable", \
  "counter_engine_map_fwd_black_offset", \
  "counter_engine_map_fwd_green_offset", \
  "counter_engine_map_fwd_red_offset", \
  "counter_engine_map_fwd_yellow_offset", \
  "counter_engine_map_size", \
  "counter_engine_replicated_packets", \
  "counter_engine_sampling_interval", \
  "counter_engine_source", \
  "counter_engine_stag_low_bit", \
  "counter_engine_statistics", \
  "counter_engine_voq_min_queue", \
  "counter_engine_voq_queue_set_size", \
  "counter_thread_pri", \
  "credit_size", \
  "credit_worth_resolution", \
  "custom_feature", \
  "cx4_to_higig", \
  "dcb_intr_mitigate_enable", \
  "ddr3_auto_tune", \
  "ddr3_bank_unavail_rd", \
  "ddr3_bank_unavail_wr", \
  "ddr3_clock_mhz", \
  "ddr3_mem_grade", \
  "ddr3_pll_mhz", \
  "ddr3_refresh_intvl_override", \
  "ddr3_round_robin_read", \
  "ddr3_round_robin_write", \
  "ddr3_tread_enb", \
  "ddr3_trp_read", \
  "ddr3_trp_write", \
  "ddr3_tune_addrc", \
  "ddr3_tune_rd_data_dly", \
  "ddr3_tune_rd_dq_wl0_rn", \
  "ddr3_tune_rd_dq_wl0_rp", \
  "ddr3_tune_rd_dq_wl1_rn", \
  "ddr3_tune_rd_dq_wl1_rp", \
  "ddr3_tune_rd_dqs", \
  "ddr3_tune_rd_en", \
  "ddr3_tune_vref", \
  "ddr3_tune_wr_dq", \
  "ddr3_tune_wr_dq_wl0", \
  "ddr3_tune_wr_dq_wl1", \
  "ddr72_dll90_offset0_qk", \
  "ddr72_dll90_offset1", \
  "ddr72_dll90_offset2", \
  "ddr72_dll90_offset3", \
  "ddr72_dll90_offset_qkb", \
  "ddr72_dll90_offset_tx", \
  "ddr72_ovrd_sm_en", \
  "ddr72_phase_sel", \
  "ddr72_sel_early1_0", \
  "ddr72_sel_early1_1", \
  "ddr72_sel_early1_2", \
  "ddr72_sel_early1_3", \
  "ddr72_sel_early2_0", \
  "ddr72_sel_early2_1", \
  "ddr72_sel_early2_2", \
  "ddr72_sel_early2_3", \
  "ddr_train_num_addrs", \
  "default_logical_interface_ip_tunnel_overlay_mc", \
  "default_logical_interface_out_ech", \
  "default_snoop_strength", \
  "default_trap_strength", \
  "defip_cam_tm", \
  "demand_scale", \
  "device", \
  "device_eb_vli", \
  "device_headroom_enable", \
  "device_tm_domain", \
  "diag_assign_sysport", \
  "diag_chassis", \
  "diag_comma", \
  "diag_cosq_init", \
  "diag_disable_interrupts", \
  "diag_easy_reload", \
  "diag_emulator_partial_init", \
  "diag_hg_as_ge", \
  "diag_hg_as_xe", \
  "diag_lb_fill_rx", \
  "diag_lb_packet_timeout", \
  "diag_nodes_mask", \
  "diag_pw_buffer_size", \
  "diag_pw_thread_pri", \
  "diag_serdes_mask", \
  "diag_shell_use_slam", \
  "diag_slave_fc", \
  "diag_slot", \
  "diag_tabs", \
  "discard_enable", \
  "discard_mtu_size", \
  "discard_queue_size", \
  "dma_desc_intr_enable", \
  "dma_desc_timeout_usec", \
  "dmac_pyld_percent", \
  "dpll_params", \
  "dport_map_direct", \
  "dport_map_enable", \
  "dport_map_indexed", \
  "dport_map_port", \
  "dram0_clamshell_enable", \
  "dram1_clamshell_enable", \
  "dram_crc_del_buffer_max_reclaims", \
  "dtm_flow_mapping_mode_region", \
  "dtm_queue_mapping_mode_region", \
  "dual_hash_recurse_depth", \
  "dual_hash_recurse_depth_dnat_pool", \
  "dual_hash_recurse_depth_egress_vlan", \
  "dual_hash_recurse_depth_l2x", \
  "dual_hash_recurse_depth_l3x", \
  "dual_hash_recurse_depth_mpls", \
  "dual_hash_recurse_depth_vlan", \
  "dual_imp_enable", \
  "e2e_64_modules", \
  "ea_attach", \
  "eb2_2bytes_big_endian", \
  "eb2_2bytes_big_endian", \
  "ecmp_resilient_hash_size", \
  "efp_cam_tm", \
  "egr_counter_percent", \
  "egr_mc_16k_groups", \
  "egr_vlan_xlate_mem_entries", \
  "egress_bubble_qid", \
  "egress_drop_thres_de1", \
  "egress_drop_thres_de2", \
  "egress_encap_bank_phase", \
  "egress_encap_ip_tunnel_range_max", \
  "egress_encap_ip_tunnel_range_min", \
  "egress_fabric_drop_threshold_all", \
  "egress_fabric_drop_threshold_multicast", \
  "egress_fabric_drop_threshold_multicast_low", \
  "egress_fifo_independent_fc", \
  "egress_hysteresis_delta", \
  "egress_max_pages", \
  "egress_mc_ef_timeout", \
  "egress_mc_nef_timeout", \
  "egress_mcast_ef_desc_sz", \
  "egress_mcast_ef_pri", \
  "egress_mcast_nef_desc_sz", \
  "egress_mcast_nef_pri", \
  "egress_multicast_direct_bitmap_max", \
  "egress_multicast_direct_bitmap_min", \
  "egress_shared_resources_mode", \
  "egress_to_ingress_redirect_qid0", \
  "egress_to_ingress_redirect_qid1", \
  "emulation_regs", \
  "enable_all_module_arbitration", \
  "equeue", \
  "es_fabric_port_hierarchy_setup", \
  "esm_recovery_thread_pri", \
  "esm_serdes_master_clk_src", \
  "esm_serdes_rx_lane_map", \
  "esm_serdes_rx_polarity_flip", \
  "esm_serdes_tx_lane_map", \
  "esm_serdes_tx_polarity_flip", \
  "ete_percent", \
  "ete_preallotment", \
  "evb_enable", \
  "exc_counter_percent", \
  "ext_1588_mac_enable", \
  "ext_acl160_table_size", \
  "ext_acl320_table_size", \
  "ext_acl480_table_size", \
  "ext_acl80_table_size", \
  "ext_acl_result_size", \
  "ext_ad_mode", \
  "ext_coup_mpls_fwd_table_size", \
  "ext_fwd_algorithm_lpm", \
  "ext_interface_mode", \
  "ext_ip4_acl_key", \
  "ext_ip4_acl_table_policy_width", \
  "ext_ip4_acl_table_scache_size", \
  "ext_ip4_acl_table_size", \
  "ext_ip4_fwd_table_size", \
  "ext_ip4_host_fwd_table_size", \
  "ext_ip4_host_wide_fwd_table_size", \
  "ext_ip4_mc_fwd_table_size", \
  "ext_ip4_table_duplicated", \
  "ext_ip4_uc_rpf_fwd_table_size", \
  "ext_ip4c_acl_table_policy_width", \
  "ext_ip4c_acl_table_scache_size", \
  "ext_ip4c_acl_table_size", \
  "ext_ip6_acl_key", \
  "ext_ip6_fwd_key", \
  "ext_ip6_fwd_table_size", \
  "ext_ip6_host_fwd_table_size", \
  "ext_ip6_host_wide_fwd_table_size", \
  "ext_ip6_mc_fwd_table_size", \
  "ext_ip6_table_duplicated", \
  "ext_ip6_uc_rpf_fwd_table_size", \
  "ext_ip6c_acl_table_policy_width", \
  "ext_ip6c_acl_table_scache_size", \
  "ext_ip6c_acl_table_size", \
  "ext_ip6f_acl_table_policy_width", \
  "ext_ip6f_acl_table_scache_size", \
  "ext_ip6f_acl_table_size", \
  "ext_ip6s_acl_table_policy_width", \
  "ext_ip6s_acl_table_scache_size", \
  "ext_ip6s_acl_table_size", \
  "ext_ip6u_fwd_table_size", \
  "ext_ip6u_table_duplicated", \
  "ext_l2_acl_key", \
  "ext_l2_acl_table_policy_width", \
  "ext_l2_acl_table_scache_size", \
  "ext_l2_acl_table_size", \
  "ext_l2_fwd_table_size", \
  "ext_l2_shadow_disable", \
  "ext_l2_table_duplicated", \
  "ext_l2_use_hardware_replace_threshold", \
  "ext_l2_wide_fwd_table_size", \
  "ext_l2c_acl_table_policy_width", \
  "ext_l2c_acl_table_scache_size", \
  "ext_l2c_acl_table_size", \
  "ext_l2ip4_acl_table_policy_width", \
  "ext_l2ip4_acl_table_scache_size", \
  "ext_l2ip4_acl_table_size", \
  "ext_l2ip6_acl_table_policy_width", \
  "ext_l2ip6_acl_table_scache_size", \
  "ext_l2ip6_acl_table_size", \
  "ext_lookup_on_xport", \
  "ext_mpls_fwd_table_size", \
  "ext_qdr_pll_m", \
  "ext_qdr_pll_n", \
  "ext_qdr_pll_p", \
  "ext_qdr_protection_type", \
  "ext_qdr_size_mbit", \
  "ext_qdr_type", \
  "ext_qdr_use_core_clock_freq", \
  "ext_ram_abi", \
  "ext_ram_ap_bit_pos", \
  "ext_ram_auto_tune", \
  "ext_ram_banks", \
  "ext_ram_banks", \
  "ext_ram_burst_size", \
  "ext_ram_c_cas_latency", \
  "ext_ram_c_wr_latency", \
  "ext_ram_cmd_par_latency", \
  "ext_ram_columns", \
  "ext_ram_columns", \
  "ext_ram_dbuff_size", \
  "ext_ram_ddr2_emr0_wr1", \
  "ext_ram_ddr2_emr0_wr2", \
  "ext_ram_ddr2_emr0_wr3", \
  "ext_ram_ddr2_emr1_wr1", \
  "ext_ram_ddr2_emr2_wr1", \
  "ext_ram_ddr2_mrs0_wr1", \
  "ext_ram_ddr2_mrs0_wr2", \
  "ext_ram_ddr3_mrs0_wr1", \
  "ext_ram_ddr3_mrs0_wr2", \
  "ext_ram_ddr3_mrs1_wr1", \
  "ext_ram_ddr3_mrs2_wr1", \
  "ext_ram_ddr3_mrs3_wr1", \
  "ext_ram_dq_swap", \
  "ext_ram_freq", \
  "ext_ram_gddr3_emr0_wr1", \
  "ext_ram_gddr3_mrs0_wr1", \
  "ext_ram_gear_down_mode", \
  "ext_ram_init_wait_period", \
  "ext_ram_jedec", \
  "ext_ram_packet_crc_enable", \
  "ext_ram_pll_f", \
  "ext_ram_pll_q", \
  "ext_ram_pll_r", \
  "ext_ram_present", \
  "ext_ram_present", \
  "ext_ram_read_crc", \
  "ext_ram_read_dbi", \
  "ext_ram_rows", \
  "ext_ram_t_32aw", \
  "ext_ram_t_al", \
  "ext_ram_t_ccd_l", \
  "ext_ram_t_ccd_s", \
  "ext_ram_t_crc_alert", \
  "ext_ram_t_crc_rd_latency", \
  "ext_ram_t_crc_wr_latency", \
  "ext_ram_t_faw", \
  "ext_ram_t_ras", \
  "ext_ram_t_rc", \
  "ext_ram_t_rcd_rd", \
  "ext_ram_t_rcd_wr", \
  "ext_ram_t_ref", \
  "ext_ram_t_rfc", \
  "ext_ram_t_rp", \
  "ext_ram_t_rrd", \
  "ext_ram_t_rrd_l", \
  "ext_ram_t_rrd_s", \
  "ext_ram_t_rst", \
  "ext_ram_t_rtp", \
  "ext_ram_t_rtp_l", \
  "ext_ram_t_rtp_s", \
  "ext_ram_t_wr", \
  "ext_ram_t_wtr", \
  "ext_ram_t_wtr_l", \
  "ext_ram_t_wtr_s", \
  "ext_ram_t_zqcs", \
  "ext_ram_total_size", \
  "ext_ram_type", \
  "ext_ram_write_crc", \
  "ext_ram_write_dbi", \
  "ext_sram0_present", \
  "ext_sram1_present", \
  "ext_sram_freq", \
  "ext_sram_mode", \
  "ext_sram_pvt", \
  "ext_sram_speed", \
  "ext_sram_tuning", \
  "ext_sram_tuning2_stats", \
  "ext_sram_tuning_stats", \
  "ext_tcam0_rx_gain", \
  "ext_tcam0_tx_driver_current", \
  "ext_tcam0_tx_main_tap", \
  "ext_tcam0_tx_postcursor_tap", \
  "ext_tcam1_rx_gain", \
  "ext_tcam1_tx_driver_current", \
  "ext_tcam1_tx_main_tap", \
  "ext_tcam1_tx_postcursor_tap", \
  "ext_tcam_banks", \
  "ext_tcam_dev_type", \
  "ext_tcam_freq", \
  "ext_tcam_mode", \
  "ext_tcam_pvt", \
  "ext_tcam_request_response_latency", \
  "ext_tcam_rx_lane_swap", \
  "ext_tcam_sharing_master", \
  "ext_tcam_sharing_slave", \
  "ext_tcam_tuning", \
  "ext_tcam_tuning_stats", \
  "ext_tcam_tx_lane_swap", \
  "ext_tcam_use_midl", \
  "ext_tp2p_mim_fwd_table_size", \
  "ext_tp2p_mpls_fwd_table_size", \
  "ext_tp2p_vlan_fwd_table_size", \
  "ext_trill_mc_fwd_table_size", \
  "ext_trill_uc_fwd_table_size", \
  "ext_voltage_mode", \
  "extender_control_bridge_enable", \
  "extender_control_bridge_enable", \
  "extender_transit_enable", \
  "extender_transit_enable", \
  "external_header_size", \
  "external_lookup_mal", \
  "fabric_cell_fifo_dma_buffer_size", \
  "fabric_cell_fifo_dma_enable", \
  "fabric_cell_fifo_dma_threshold", \
  "fabric_cell_fifo_dma_timeout", \
  "fabric_cell_format", \
  "fabric_client_calendar", \
  "fabric_configuration", \
  "fabric_connect_max_age_time", \
  "fabric_connect_min_utilization", \
  "fabric_connect_mode", \
  "fabric_device_mode", \
  "fabric_egress_setup", \
  "fabric_ftmh_outlif_extension", \
  "fabric_load_balancing_mode", \
  "fabric_local_routing_enable", \
  "fabric_mac_bucket_fill_rate", \
  "fabric_merge_cells", \
  "fabric_multicast_mode", \
  "fabric_num_pipes", \
  "fabric_optimize_partial_links", \
  "fabric_pcp_enable", \
  "fabric_pipe_map", \
  "fabric_port_calendar", \
  "fabric_qos_optimize", \
  "fabric_ref_clock", \
  "fabric_segmentation_enable", \
  "fabric_tdm_fragment", \
  "fabric_tdm_over_primary_pipe", \
  "fabric_tdm_priority_min", \
  "fap_device_mode", \
  "fap_tdm_bypass", \
  "fast_reroute_labels_enable", \
  "fat_pipe_base_port", \
  "fat_pipe_mode", \
  "fat_pipe_num_ports", \
  "fc_egress_xoff_thresh", \
  "fc_enable", \
  "fc_inband_intlkn_calender_length", \
  "fc_inband_intlkn_calender_llfc_mode", \
  "fc_inband_intlkn_calender_rep_count", \
  "fc_inband_intlkn_llfc_mub_enable_mask", \
  "fc_inband_intlkn_mode", \
  "fc_inband_mode", \
  "fc_ingress_xoff_thresh", \
  "fc_intlkn_indication_invert", \
  "fc_oob_calender_length", \
  "fc_oob_calender_rep_count", \
  "fc_oob_mode", \
  "fc_oob_tx_freq_ratio", \
  "fc_oob_type", \
  "fc_spi_indication_invert", \
  "fc_total_buffer_xoff_thresh", \
  "fcmap_dev_addr", \
  "fcmap_enable", \
  "fcmap_port_index", \
  "fe_mc_id_range", \
  "fe_mc_priority_map_enable", \
  "field_atomic_update", \
  "field_class_id_size", \
  "field_presel_mgmt_advanced_mode", \
  "fifo_delay_value", \
  "filter_enable", \
  "filter_resize", \
  "first_header_size", \
  "flex_port_phy_addr", \
  "flex_xgport", \
  "flow_control_enable", \
  "flow_control_type", \
  "flow_maping_add_delete", \
  "flow_mapping_queue_base", \
  "flow_tracker_intr_enable", \
  "force_clk_m_n_divisors_zero", \
  "force_optbiasfltlvl", \
  "force_optprfltlvl", \
  "force_optrxfltlvl", \
  "force_optrxloslvl", \
  "force_opttempfltlvl", \
  "force_opttxenblvl", \
  "force_opttxfllvl", \
  "force_opttxonlvl", \
  "force_opttxrstlvl", \
  "fp_cam_tm", \
  "front_panel_esm", \
  "fschan_enable", \
  "fte_num_local_gports", \
  "fte_percent", \
  "fte_preallotment", \
  "gig_iov", \
  "global_meter_control", \
  "gmii_enable_rx", \
  "gmii_enable_tx", \
  "gmii_mode", \
  "gmii_rate", \
  "bcm_use_gport", \
  "gport_rsv_mask", \
  "guarantee", \
  "half_bus_mode", \
  "headroom", \
  "help_cli_enable", \
  "higig2_hdr_mode", \
  "higig2_multicast_l2_range", \
  "higig2_multicast_l3_range", \
  "higig2_multicast_vlan_range", \
  "higig_destport_mask", \
  "higig_frc_tm_system_port_encoding", \
  "higig_max_speed", \
  "hold_pri_num_timeslots", \
  "host_memory_table_share", \
  "hybrid_mode", \
  "i2c_hclk_skip", \
  "i2c_nvram_skip", \
  "i2c_poe_power", \
  "i2c_timeout_usec", \
  "ibod_sync_thread_pri", \
  "if_protocol", \
  "if_subports", \
  "if_subports_create", \
  "if_tbi", \
  "igmp_proxy_mode", \
  "ilkn_counters_mode", \
  "ilkn_interface_status_ignore", \
  "ilkn_interface_status_oob_ignore", \
  "ilkn_invalid_lane_id", \
  "ilkn_is_burst_interleaving", \
  "ilkn_lanes", \
  "ilkn_metaframe_sync_period", \
  "ilkn_num_lanes", \
  "ilkn_retransmit_buffer_size", \
  "ilkn_retransmit_calendar_mode_rx", \
  "ilkn_retransmit_calendar_mode_tx", \
  "ilkn_retransmit_enable_rx", \
  "ilkn_retransmit_enable_tx", \
  "ilkn_retransmit_num_requests_resent", \
  "ilkn_retransmit_num_sn_repetitions_rx", \
  "ilkn_retransmit_num_sn_repetitions_tx", \
  "ilkn_retransmit_rx_ignore", \
  "ilkn_retransmit_rx_reset_upon_watchdog_error_enable", \
  "ilkn_retransmit_rx_reset_when_alligned_error_enable", \
  "ilkn_retransmit_rx_reset_when_error_enable", \
  "ilkn_retransmit_rx_reset_when_retry_error_enable", \
  "ilkn_retransmit_rx_reset_when_timout_error_enable", \
  "ilkn_retransmit_rx_reset_when_wrap_after_disc_error_enable", \
  "ilkn_retransmit_rx_reset_when_wrap_before_disc_error_enable", \
  "ilkn_retransmit_rx_timeout_sn", \
  "ilkn_retransmit_rx_timeout_words", \
  "ilkn_retransmit_rx_watchdog", \
  "ilkn_retransmit_tx_ignore_requests_when_fifo_almost_empty", \
  "ilkn_retransmit_tx_wait_for_seq_num_change_enable", \
  "ilkn_tdm_dedicated_queuing", \
  "ing_share_flex_counter_pool", \
  "ingportpool", \
  "ingr_counter_percent", \
  "ingress_bubble_qid", \
  "ingress_drop_thres_de1", \
  "ingress_drop_thres_de2", \
  "ingress_hysteresis_delta", \
  "ingress_max_pages", \
  "ingress_to_egress_redirect_qid0", \
  "ingress_to_egress_redirect_qid1", \
  "ip4_host_extension_table_enable", \
  "ipfix_hostbuf_size", \
  "ipfix_intr_enable", \
  "ipfix_thread_pri", \
  "ipmc_do_vlan", \
  "ipmc_enable", \
  "ipmc_independent_mode", \
  "ipmc_pim_bidir_check_db", \
  "ipmc_pim_mode", \
  "ipmc_reduced_table_size", \
  "ipmc_vpn_lookup_enable", \
  "ipv4_da_pyld_percent", \
  "ipv4_num_routes", \
  "ipv4_num_vrfs", \
  "ipv4_sa_pyld_percent", \
  "ipv4mc_g_pyld_percent", \
  "ipv4mc_sg_pyld_percent", \
  "ipv6_da_lpm_pyld_percent", \
  "ipv6_da_pyld_percent", \
  "ipv6_enable", \
  "ipv6_lpm_128b_enable", \
  "ipv6_mc_em_percent", \
  "ipv6_mc_pyld_percent", \
  "ipv6_sa_lpm_pyld_percent", \
  "ipv6_sa_pyld_percent", \
  "is_dual_mode", \
  "knet_filter_persist", \
  "l2_age_cycles", \
  "l2_learn_lif_range_base", \
  "l2_learn_limit_mode", \
  "l2_mem_entries", \
  "l2_overflow_event", \
  "l2_sw_aging_interval", \
  "l2_table_size", \
  "l2age_thread_pri", \
  "l2cache_max_idx", \
  "l2delete_chunks", \
  "l2mc_in_l2entry", \
  "l2mod_dma_intr_enable", \
  "l2x_age_only_on_hitsa", \
  "l2xmsg_avl", \
  "l2xmsg_chunks", \
  "l2xmsg_hostbuf_size", \
  "l2xmsg_mode", \
  "l2xmsg_shadow_hit_bits", \
  "l2xmsg_shadow_hit_dst", \
  "l2xmsg_shadow_hit_src", \
  "l2xmsg_thread_pri", \
  "l2xmsg_thread_usec", \
  "l3_alpm_enable", \
  "l3_disable_add_to_arl", \
  "l3_enable", \
  "l3_ipmc_valid_as_hit", \
  "l3_lpm_host_sram_factor", \
  "l3_lpm_mode", \
  "l3_max_ecmp_mode", \
  "l3_mem_entries", \
  "l3_multiple_mymac_termination_enable", \
  "l3_multiple_mymac_termination_mode", \
  "l3_source_bind_mode", \
  "l3_source_bind_subnet_mode", \
  "l3_table_size", \
  "l3_v4uc_da_dev_memsize", \
  "l3_v4uc_sa_dev_memsize", \
  "l3_v6uc_da_dev_memsize", \
  "l3_v6uc_sa_dev_memsize", \
  "l3_vrrp_ipv6_distinct", \
  "l3_vrrp_max_vid", \
  "lanes_swap", \
  "lccdrain_timeout_usec", \
  "lcm_dataplane_0_map", \
  "lcm_dataplane_1_map", \
  "lcm_passthrough_mode", \
  "lcm_xcfg_ab_input_polarity_reversed", \
  "led_intensity", \
  "line_client_calendar", \
  "line_port_calendar", \
  "line_pr_buffer_profile", \
  "link_driver_equalization", \
  "link_driver_strength", \
  "link_threshold", \
  "linkscan_thread_pri", \
  "lla_tests", \
  "lls_num_l2uc", \
  "lmd_enable_pbmp", \
  "load_firmware", \
  "local_switching_enable", \
  "local_to_pp_port", \
  "local_to_tm_port", \
  "logical_port_drop", \
  "logical_port_l2_bridge", \
  "logical_port_mim", \
  "lossless_mode", \
  "low_power", \
  "lpm_ipv6_128b_reserved", \
  "lpm_scaling_enable", \
  "lrp_bypass", \
  "mac_dev_memsize", \
  "mac_length_check_enable", \
  "macsec_dev_addr", \
  "macsec_enable", \
  "macsec_fixed_latency_enable", \
  "macsec_port_index", \
  "map", \
  "max_failed_links", \
  "max_vp_lags", \
  "mcast_group_local_start_index", \
  "mc_table_enable_TDM_priority", \
  "mcu_16bit_ddr", \
  "mcu_channel_bitmap", \
  "mcu_delay_addr_adj_dir", \
  "mcu_delay_addr_adj_val", \
  "mcu_delay_dqi_adj_dir", \
  "mcu_delay_dqi_adj_val", \
  "mcu_dll90_offset0_qk", \
  "mcu_dll90_offset1", \
  "mcu_dll90_offset2", \
  "mcu_dll90_offset3", \
  "mcu_dll90_offset_qkb", \
  "mcu_dll90_offset_tx", \
  "mcu_drv_str0", \
  "mcu_drv_str1", \
  "mcu_odt_imp_enable", \
  "mcu_ovrd_sm_en", \
  "mcu_pad_addr_class2", \
  "mcu_pad_addr_drive", \
  "mcu_pad_addr_slew", \
  "mcu_pad_data_class2", \
  "mcu_pad_data_drive", \
  "mcu_pad_data_slew", \
  "mcu_phase_sel", \
  "mcu_sel_early1_0", \
  "mcu_sel_early1_1", \
  "mcu_sel_early1_2", \
  "mcu_sel_early1_3", \
  "mcu_sel_early2_0", \
  "mcu_sel_early2_1", \
  "mcu_sel_early2_2", \
  "mcu_sel_early2_3", \
  "mcu_tcrd", \
  "mcu_tcwd", \
  "mcu_twl", \
  "mdio_clock_freq_khz", \
  "mdio_external_master", \
  "mdio_io_voltage", \
  "mdio_output_delay", \
  "mem_cache_enable", \
  "mem_check_max_override", \
  "mem_check_nocache_override", \
  "mem_clear_chunk_size", \
  "mem_clear_hw_acceleration", \
  "mem_scan_chunk_size", \
  "mem_scan_enable", \
  "mem_scan_interval", \
  "mem_scan_rate", \
  "mem_scan_thread_pri", \
  "memcmd_intr_enable", \
  "memcmd_timeout_usec", \
  "memlist_enable", \
  "miim_intr_enable", \
  "miim_timeout_usec", \
  "mim_enable", \
  "mim_num_vsis", \
  "mirror_5670_mode", \
  "mirror_profile", \
  "mld_lane_swap", \
  "mmu_config_override", \
  "mmu_dynamic_sched_update", \
  "mmu_ext_queues_enabled", \
  "mmu_flow_fanin", \
  "mmu_flow_percent", \
  "mmu_hol_hysteresis", \
  "mmu_hol_jitter", \
  "mmu_lossless", \
  "mmu_max_classic_queues", \
  "mmu_max_nodes", \
  "mmu_max_queues", \
  "mmu_multi_packets_per_cell", \
  "mmu_num_dmvoq_queues", \
  "mmu_overcommit", \
  "mmu_overcommit_stack", \
  "mmu_pll_lock_tests", \
  "mmu_queue_flush_timeout", \
  "mmu_red_drop_percent", \
  "mmu_reset_bytes", \
  "mmu_reset_tries", \
  "mmu_sdram_enable", \
  "mmu_shaper_refresh_interval", \
  "mmu_static_bytes", \
  "mmu_static_percent", \
  "mmu_strict_pri_vector_mode", \
  "mmu_subscriber_num_cos_level", \
  "mmu_xq_aging", \
  "mmu_xq_weight", \
  "mmu_yellow_drop_percent", \
  "module_64ports", \
  "module_custom1_links", \
  "module_num_modids", \
  "mpls_context", \
  "mpls_context_specific_label_enable", \
  "mpls_ecn_mode", \
  "mpls_elsp_label_range_max", \
  "mpls_elsp_label_range_min", \
  "mpls_entropy_label_indicator_enable", \
  "mpls_mem_entries", \
  "mpls_termination_label_index_enable", \
  "mpls_tp_mymac_reserved_address", \
  "mpls_tunnel_term_label_range_max", \
  "mpls_tunnel_term_label_range_min", \
  "mplstp_bfd_control_channel_type", \
  "mplstp_cc_channel_type", \
  "mplstp_cv_channel_type", \
  "mplstp_dlm_channel_type", \
  "mplstp_dm_channel_type", \
  "mplstp_fault_oam_channel_type", \
  "mplstp_g8113_channel_type", \
  "mplstp_ilm_channel_type", \
  "mplstp_ipv4_channel_type", \
  "mplstp_ipv6_channel_type", \
  "mplstp_on_demand_cv_channel_type", \
  "mplstp_pw_ach_channel_type", \
  "mplstp_pwe_oam_channel_type", \
  "mqueue", \
  "multi_hash_recurse_depth", \
  "multi_hash_recurse_depth_egress_vlan", \
  "multi_hash_recurse_depth_l2", \
  "multi_hash_recurse_depth_l3", \
  "multi_hash_recurse_depth_mpls", \
  "multi_hash_recurse_depth_vlan", \
  "multicast_destination_encoding", \
  "multicast_egress_direct_bitmap_end", \
  "multicast_egress_direct_bitmap_start", \
  "multicast_egress_group_id_range_max", \
  "multicast_egress_group_id_range_min", \
  "multicast_id_offset", \
  "multicast_id_offset_cpu", \
  "multicast_id_offset_nif", \
  "multicast_id_offset_olp", \
  "multicast_id_offset_recycling", \
  "multicast_ingress_group_id_range_max", \
  "multicast_ingress_group_id_range_min", \
  "multicast_l2_range", \
  "multicast_l3_range", \
  "multicast_nbr_full_dbuff", \
  "multicast_nbr_mini_dbuff ", \
  "multicast_scheduler_mode", \
  "nif_ref_clock", \
  "np0_addr_width", \
  "np0_data_width", \
  "np1_addr_width", \
  "np1_data_width", \
  "num_erp_tm_ports", \
  "num_ipv6_lpm_128b_entries", \
  "num_max_fabric_ports_on_module", \
  "num_modules", \
  "num_modules_00_31_mask", \
  "num_modules_32_63_mask", \
  "num_modules_64_95_mask", \
  "num_oamp_ports", \
  "num_olp_tm_ports", \
  "num_pages_reserved", \
  "num_queues", \
  "num_recycle_tm_ports", \
  "num_subport_cos", \
  "num_subports", \
  "number_of_trunks", \
  "numq", \
  "oam_classifier_advanced_mode", \
  "oam_rcy_port", \
  "oam_rx_enable", \
  "oam_spi_lb_port", \
  "oam_spi_lb_queue", \
  "oam_tx_enable", \
  "oamp_fifo_dma_buffer_size", \
  "oamp_fifo_dma_enable", \
  "oamp_fifo_dma_threshold", \
  "oamp_fifo_dma_timeout", \
  "otm_port_packet_rate", \
  "otp_mem_repair_reg", \
  "otp_mem_repair_val", \
  "packet_adjust_format", \
  "packet_padding_size", \
  "parity_correction", \
  "parity_counter_clear", \
  "parity_enable", \
  "pb_qsgmii_alt_mapping", \
  "pb_serdes_lane_power_state", \
  "pb_serdes_lane_rate", \
  "pb_serdes_lane_rx_phys_dfelth", \
  "pb_serdes_lane_rx_phys_g1cnt", \
  "pb_serdes_lane_rx_phys_tlth", \
  "pb_serdes_lane_rx_phys_z1cnt", \
  "pb_serdes_lane_rx_phys_zcnt", \
  "pb_serdes_lane_swap_polarity_rx", \
  "pb_serdes_lane_swap_polarity_tx", \
  "pb_serdes_lane_tx_phys_amp", \
  "pb_serdes_lane_tx_phys_main", \
  "pb_serdes_lane_tx_phys_media_type", \
  "pb_serdes_lane_tx_phys_post", \
  "pb_serdes_lane_tx_phys_pre", \
  "pb_serdes_qrtt_active", \
  "pb_serdes_qrtt_max_expected_rate", \
  "pbmp_esm_eligible", \
  "pbmp_ext_mem", \
  "pbmp_fe_100fx", \
  "pbmp_gport_stack", \
  "pbmp_linkphy", \
  "pbmp_loopback", \
  "pbmp_oversubscribe", \
  "pbmp_subport", \
  "pbmp_valid", \
  "pbmp_wan_port", \
  "pbmp_xport_ge", \
  "pbmp_xport_xe", \
  "pci2eb_override", \
  "pci_cmc", \
  "pci_override_dev", \
  "pci_override_rev", \
  "pdma_timeout_usec", \
  "peer_tm_domain", \
  "per_queue_drop_hysteresis_delta", \
  "phy_1588_dpll_frequency_lock", \
  "phy_1588_dpll_k1", \
  "phy_1588_dpll_k2", \
  "phy_1588_dpll_k3", \
  "phy_1588_dpll_phase_initial_hi", \
  "phy_1588_dpll_phase_initial_lo", \
  "phy_1588_ts_divider", \
  "phy_53115_an100tx_war", \
  "phy_53115_b0_iop_war", \
  "phy_53314_clk156", \
  "phy_5464S", \
  "phy_5690", \
  "phy_56xxx", \
  "phy_8040_mux_port0", \
  "phy_8040_mux_port1", \
  "phy_8040_mux_port2", \
  "phy_8040_switch_port", \
  "phy_8072", \
  "phy_84064", \
  "phy_84740", \
  "phy_84752", \
  "phy_84753", \
  "phy_84754", \
  "phy_8706", \
  "phy_an_c37", \
  "phy_an_c72", \
  "phy_an_c73", \
  "phy_an_fec", \
  "phy_automedium", \
  "phy_autoneg_timeout", \
  "phy_aux_voltage_enable", \
  "phy_bus_i2c", \
  "phy_clock_enable", \
  "phy_clock_enable", \
  "phy_copper_sfp", \
  "phy_enable", \
  "phy_ext_rom_boot", \
  "phy_fcmap_passthrough", \
  "phy_fiber_capable", \
  "phy_fiber_deglitch_usecs", \
  "phy_fiber_detect", \
  "phy_fiber_pref", \
  "phy_force_firmware_load", \
  "phy_half_power", \
  "phy_hl65_1lane_mode", \
  "phy_lane0_l2p_map", \
  "phy_led1_mode", \
  "phy_led2_mode", \
  "phy_led3_mode", \
  "phy_led3_output_disable", \
  "phy_led4_mode", \
  "phy_led_ctrl", \
  "phy_led_link_speed_mode", \
  "phy_led_select", \
  "phy_long_xfi", \
  "phy_low_power_mode", \
  "phy_lr_initial_adva", \
  "phy_lr_initial_ctrl", \
  "phy_lr_initial_mode", \
  "phy_mdi_pair_map", \
  "phy_mod_abs", \
  "phy_mod_abs_invert", \
  "phy_mod_auto_detect", \
  "phy_null", \
  "phy_octal_port_first", \
  "phy_pcs_bypass", \
  "phy_pcs_repeater", \
  "phy_pcs_rx_polarity_flip", \
  "phy_pcs_tx_polarity_flip", \
  "phy_port_primary_and_offset", \
  "phy_reset_timeout", \
  "phy_rx_invert", \
  "phy_rx_los", \
  "phy_rx_los_invert", \
  "phy_rx_polarity_flip", \
  "phy_serdes", \
  "phy_serdes_autos", \
  "phy_sgmii_autoneg", \
  "phy_simul", \
  "phy_sys_interface", \
  "phy_tx_disable_no_lpmode", \
  "phy_tx_invert", \
  "phy_tx_polarity_flip", \
  "phy_wan_mode", \
  "phy_xaui_rx_lane_swap", \
  "phy_xaui_rx_polarity_flip", \
  "phy_xaui_tx_lane_swap", \
  "phy_xaui_tx_polarity_flip", \
  "phy_xclksel_ovrd", \
  "phy_xfp_clock", \
  "pkt_size", \
  "pll600_slowclk", \
  "policer_base_rate", \
  "policer_color_resolution_mode", \
  "policer_egress_count", \
  "policer_egress_sharing_mode", \
  "policer_ingress_count", \
  "policer_ingress_sharing_mode", \
  "policer_result_map", \
  "policer_result_parallel_bucket_update", \
  "policer_result_parallel_color_map", \
  "polled_irq_delay", \
  "polled_irq_mode", \
  "polled_irq_priority", \
  "pon_application_support_enabled", \
  "pon_tls_database", \
  "pon_tpid_tunnel_id", \
  "pool", \
  "pool_floor", \
  "pool_limit", \
  "pool_resume", \
  "pool_scale", \
  "port", \
  "port_diag_header", \
  "port_diag_mode", \
  "port_egress_cos_mode", \
  "port_egress_recycling_scheduler_configuration", \
  "port_egress_scheduler_confguration ", \
  "port_guarantee_enable", \
  "port_init_adv", \
  "port_init_autoneg", \
  "port_init_cl72", \
  "port_init_duplex", \
  "port_init_speed", \
  "port_is_sci", \
  "port_is_sfi", \
  "port_max_enable", \
  "port_max_speed", \
  "port_nif_type", \
  "pb_select", \
  "port_phy_addr", \
  "port_phy_addr1", \
  "port_phy_clause", \
  "port_phy_id0", \
  "port_phy_id1", \
  "port_phy_mode_reverse", \
  "port_phy_precondition_before_probe", \
  "port_priorities", \
  "port_rx_fcs_error_early_discard", \
  "port_sched_dynamic", \
  "port_sched_hsp", \
  "port_uc_mc_accounting_combine", \
  "portgroup", \
  "portmap", \
  "portmon_interval", \
  "portmon_thread_pri", \
  "post_headers_size", \
  "post_init_enable", \
  "power_down_timeout", \
  "preamble_sop_only", \
  "prepend_tag_bytes", \
  "prepend_tag_bytes", \
  "prepend_tag_offset", \
  "prepend_tag_offset", \
  "pri", \
  "prigroup", \
  "profile_pg_1hdrm_8shared", \
  "ptp_backplane_1_invalid_thresh", \
  "ptp_backplane_1_k1", \
  "ptp_backplane_1_k1k2", \
  "ptp_backplane_1_k1k3", \
  "ptp_backplane_1_k4", \
  "ptp_backplane_1_valid_thresh", \
  "ptp_backplane_2_invalid_thresh", \
  "ptp_backplane_2_k1", \
  "ptp_backplane_2_k1k2", \
  "ptp_backplane_2_k1k3", \
  "ptp_backplane_2_k4", \
  "ptp_backplane_2_valid_thresh", \
  "ptp_backplane_nominal_period", \
  "ptp_backplane_valid_input_thresh", \
  "ptp_bs_clk_dur_high", \
  "ptp_bs_clk_dur_low", \
  "ptp_bs_fref", \
  "ptp_bs_hb_dur_high", \
  "ptp_bs_hb_dur_low", \
  "ptp_bs_ka", \
  "ptp_bs_ki", \
  "ptp_bs_kp", \
  "ptp_bs_mndiv", \
  "ptp_bs_ndiv_frac", \
  "ptp_bs_ndiv_int", \
  "ptp_bs_pdiv", \
  "ptp_bs_vco_div2", \
  "ptp_cosq", \
  "ptp_servo_bridge_time", \
  "ptp_servo_osc_type", \
  "ptp_servo_phase_mode", \
  "ptp_servo_transport_type", \
  "ptp_synth_1_invalid_thresh", \
  "ptp_synth_1_k1", \
  "ptp_synth_1_k1k2", \
  "ptp_synth_1_k1k3", \
  "ptp_synth_1_k4", \
  "ptp_synth_1_valid_thresh", \
  "ptp_synth_2_invalid_thresh", \
  "ptp_synth_2_k1", \
  "ptp_synth_2_k1k2", \
  "ptp_synth_2_k1k3", \
  "ptp_synth_2_k4", \
  "ptp_synth_2_valid_thresh", \
  "ptp_synth_nominal_period", \
  "ptp_synth_valid_input_thresh", \
  "ptp_ts_ka", \
  "ptp_ts_ki", \
  "ptp_ts_kp", \
  "ptp_ts_pll_fref", \
  "ptp_ts_pll_mndiv", \
  "ptp_ts_pll_mndiv1", \
  "ptp_ts_pll_n", \
  "ptp_ts_pll_pdiv", \
  "ptp_ts_vco_div2", \
  "qdr36_dll90_offset_qk", \
  "qdr36_dll90_offset_qkb", \
  "qdr36_dll90_offset_tx", \
  "qdr36_ovrd_sm_en", \
  "qdr36_phase_sel", \
  "qdr36_sel_early1_0", \
  "qdr36_sel_early1_1", \
  "qdr36_sel_early2_0", \
  "qdr36_sel_early2_1", \
  "qe2k_links", \
  "qe_2_5gbps_links", \
  "qe_clock_speed", \
  "qe_eg_mc_drop_on_full", \
  "qe_eg_mvt_size", \
  "qe_egr_shaping_adjust", \
  "qe_ei_port_timeout", \
  "qe_ep_disable", \
  "qe_erh_type", \
  "qe_global_shaping_adjust", \
  "qe_grant_offset", \
  "qe_half_bus_mode", \
  "qe_hi_mc_priority", \
  "qe_lag_uc_redist", \
  "qe_lo_mc_priority", \
  "qe_long_ddr_memtest", \
  "qe_max_arrival_rate", \
  "qe_mc_dual_lookup", \
  "qe_memory_part", \
  "qe_mix_high_low_rate_flows", \
  "qe_mvr_max_size", \
  "qe_mvt_format", \
  "qe_mvt_old_configuration", \
  "qe_queues_per_ingress_shaper", \
  "qe_sc_txdma_sot_delay_clocks", \
  "qe_sfi_timeslot_offset_clocks", \
  "qe_spi_0_ei_lines", \
  "qe_spi_0_full_packet_mode", \
  "qe_spi_0_subport_is_requeue", \
  "qe_spi_0_subport_speed", \
  "qe_spi_0", \
  "qe_spi_1_ei_lines", \
  "qe_spi_1_full_packet_mode", \
  "qe_spi_1_subport_is_requeue", \
  "qe_spi_1_subport_speed", \
  "qe_spi_1", \
  "qe_thresh_drop_limit", \
  "qe_tme_mode", \
  "qgroup", \
  "qgroup_guarantee", \
  "qgroup_guarantee_enable", \
  "qgroup_id", \
  "queue", \
  "rate_color_blind", \
  "rate_ext_download_mdio_dividend", \
  "rate_ext_download_mdio_divisor", \
  "rate_ext_mdio_dividend", \
  "rate_ext_mdio_divisor", \
  "rate_i2c_dividend", \
  "rate_i2c_divisor", \
  "rate_int_mdio_dividend", \
  "rate_int_mdio_divisor", \
  "rate_stdma_dividend", \
  "rate_stdma_divisor", \
  "rcpu_cpu_queue", \
  "rcpu_cpu_tc_cos0", \
  "rcpu_cpu_tc_cos1", \
  "rcpu_cpu_tc_cos2", \
  "rcpu_cpu_tc_cos3", \
  "rcpu_cpu_tc_cos4", \
  "rcpu_cpu_tc_cos5", \
  "rcpu_cpu_tc_cos6", \
  "rcpu_cpu_tc_cos7", \
  "rcpu_dot1pri_cos0", \
  "rcpu_dot1pri_cos1", \
  "rcpu_dot1pri_cos2", \
  "rcpu_dot1pri_cos3", \
  "rcpu_dot1pri_cos4", \
  "rcpu_dot1pri_cos5", \
  "rcpu_dot1pri_cos6", \
  "rcpu_dot1pri_cos7", \
  "rcpu_dot1pri_map_enable", \
  "rcpu_higig_port", \
  "rcpu_lmac", \
  "rcpu_master_modid", \
  "rcpu_master_unit", \
  "rcpu_mh_cpu_cos_enable", \
  "rcpu_mh_src_pid_enable", \
  "rcpu_mh_tc_cos0", \
  "rcpu_mh_tc_cos1", \
  "rcpu_mh_tc_cos2", \
  "rcpu_mh_tc_cos3", \
  "rcpu_mh_tc_cos4", \
  "rcpu_mh_tc_cos5", \
  "rcpu_mh_tc_cos6", \
  "rcpu_mh_tc_cos7", \
  "rcpu_mh_tc_map_enable", \
  "rcpu_only", \
  "rcpu_oob_channel", \
  "rcpu_port", \
  "rcpu_rx_pbmp", \
  "rcpu_slave_modid", \
  "rcpu_src_mac", \
  "rcpu_use_oob", \
  "rcpu_vlan", \
  "red_limit", \
  "red_resume", \
  "red_size", \
  "redundancy_mode", \
  "reglist_enable", \
  "repeater_link_dest", \
  "repeater_link_enable", \
  "replication_eligible_pbmp", \
  "reserve_multicast_resources", \
  "resilient_hash_enable", \
  "rlink_auth_local_max", \
  "rlink_auth_remote_max", \
  "rlink_fabric_local_max", \
  "rlink_fabric_remote_max", \
  "rlink_l2_local_max", \
  "rlink_l2_remote_max", \
  "rlink_link_local_max", \
  "rlink_link_remote_max", \
  "rlink_oam_local_max", \
  "rlink_oam_remote_max", \
  "rlink_rx0_remote_max", \
  "rlink_rx1_remote_max", \
  "rlink_rx2_remote_max", \
  "rlink_rx3_remote_max", \
  "rlink_rx4_remote_max", \
  "rlink_rx5_remote_max", \
  "rlink_rx6_remote_max", \
  "rlink_rx7_remote_max", \
  "robo_egress_tcam_slice", \
  "robo_ingress_tcam_slice", \
  "robo_lookup_tcam_slice", \
  "run_l2_sw_aging", \
  "rx_fast_los_link", \
  "rx_fast_los_poll_count_max", \
  "rx_fast_los_usec", \
  "rx_parse_erh", \
  "sa_auth_enabled", \
  "sbus_dma_desc_thread_pri", \
  "sbx_bypass_policer_in_forceflood_mode", \
  "sbx_mc_qid_base", \
  "sbx_mplstp_ipbfd_type", \
  "sbx_mplstp_ipbfd_type", \
  "sbx_mplstp_lspping_type", \
  "sbx_mplstp_lspping_type", \
  "sbx_mplstp_mcc_type", \
  "sbx_mplstp_mcc_type", \
  "sbx_mplstp_psc_type", \
  "sbx_mplstp_psc_type", \
  "sbx_mplstp_rawbfd_type", \
  "sbx_mplstp_rawbfd_type", \
  "sbx_mplstp_scc_type", \
  "sbx_mplstp_scc_type", \
  "sbx_vpws_pw_gports_high", \
  "sbx_vpws_pw_gports_low", \
  "sbx_vpws_vpn_high", \
  "sbx_vpws_vpn_low", \
  "schan_error_block_usec", \
  "schan_intr_enable", \
  "schan_timeout_usec", \
  "scheduler_compensation_enable", \
  "scheduler_fabric_links_adaptation_enable", \
  "sci_port_modid", \
  "seed", \
  "seer_cse_em_latency7", \
  "seer_ext_table_cfg", \
  "seer_ext_tcam_select", \
  "seer_host_hash_table_cfg", \
  "seer_hse_em_latency7", \
  "seer_init_timeout_usec", \
  "seer_lpm_traverse_entries", \
  "seer_mvl_hash_table_cfg", \
  "seer_tunnel_sam", \
  "serdes_1000x_at_6250_vco", \
  "serdes_2wire_xaui", \
  "serdes_an_c73_tx_fifo_reset_enable", \
  "serdes_asymmetric_speed_mode", \
  "serdes_automedium", \
  "serdes_driver_current", \
  "serdes_enc_mode", \
  "serdes_fabric_clk_freq", \
  "serdes_fiber_pref", \
  "serdes_firmware_mode", \
  "serdes_if_type", \
  "serdes_lane0_reset", \
  "serdes_lcpll", \
  "serdes_mixed_rate_enable", \
  "serdes_nif_clk_freq", \
  "serdes_num_lane", \
  "serdes_os_mode", \
  "serdes_pcs_20g_alignment_marker_reserved", \
  "serdes_pcs_speed_hto_blk_sync_end", \
  "serdes_pcs_speed_hto_brcm64b66_descr", \
  "serdes_pcs_speed_hto_cl36_en", \
  "serdes_pcs_speed_hto_cl48_check_end", \
  "serdes_pcs_speed_hto_cl72_enable", \
  "serdes_pcs_speed_hto_clkcnt0", \
  "serdes_pcs_speed_hto_clkcnt1", \
  "serdes_pcs_speed_hto_dec1_mode", \
  "serdes_pcs_speed_hto_desc2_byte_del", \
  "serdes_pcs_speed_hto_desc2_mode", \
  "serdes_pcs_speed_hto_descr1_mode", \
  "serdes_pcs_speed_hto_deskew_mode", \
  "serdes_pcs_speed_hto_encode_mode", \
  "serdes_pcs_speed_hto_lpcnt0", \
  "serdes_pcs_speed_hto_lpcnt1", \
  "serdes_pcs_speed_hto_mac_cgc", \
  "serdes_pcs_speed_hto_pcs_cgc", \
  "serdes_pcs_speed_hto_pcs_clkcnt", \
  "serdes_pcs_speed_hto_pcs_crdten", \
  "serdes_pcs_speed_hto_pcs_repcnt", \
  "serdes_pcs_speed_hto_pma_os", \
  "serdes_pcs_speed_hto_reorder_mode", \
  "serdes_pcs_speed_hto_scr_mode", \
  "serdes_pcs_speed_hto_sgmii_mode", \
  "serdes_pll_div", \
  "serdes_post2_driver_current", \
  "serdes_pre_driver_current", \
  "serdes_preemphasis", \
  "serdes_qrtt_active", \
  "serdes_qsgmii_sgmii_override", \
  "serdes_rx_los", \
  "serdes_rx_los_invert", \
  "serdes_rxaui_mode", \
  "serdes_scrambler_enable", \
  "serdes_sgmii_master", \
  "serdes_shadow_driver", \
  "serdes_use_proxy_removal", \
  "simple_vlan_translation_enable", \
  "sirius_ddr3_clock_mhz", \
  "sirius_ddr3_ctl_adjust", \
  "sirius_ddr3_dq_adjust", \
  "sirius_ddr3_mem_grade", \
  "sirius_ddr3_rd_en_adjust", \
  "sirius_ddr3_read_dly", \
  "sirius_ddr3_read_en_vdl", \
  "sirius_ddr3_read_vdl", \
  "sirius_ddr3_tread_enb", \
  "sirius_ddr_hw_train", \
  "sirius_ddr_sw_ddr_train_interval", \
  "sirius_links", \
  "sirius_sw_ddr_train_thread_pri", \
  "size", \
  "skip_L2_USER_ENTRY", \
  "skip_l2_vlan_init", \
  "smac_pyld_percent", \
  "snoop_enable", \
  "soc_counter_control_level", \
  "soc_ctr_maxerr", \
  "soc_dma_monitor_thread_pri", \
  "soc_family", \
  "soc_knet_rx_thread_pri", \
  "soc_scoreboard_enable", \
  "soc_scoreboard_interval", \
  "soc_skip_reset", \
  "spaui_chan_bct_channel_byte_ndx", \
  "spaui_chan_bct_size", \
  "spaui_chan_fault_response_local", \
  "spaui_chan_fault_response_remote", \
  "spaui_chan_is_burst_interleaving", \
  "spaui_crc_mode", \
  "spaui_ipg_dic_mode", \
  "spaui_ipg_size", \
  "spaui_is_double_size_sop_even_only", \
  "spaui_is_double_size_sop_odd_only", \
  "spaui_link_partner_double_size_bus", \
  "spaui_preamble_size", \
  "spaui_preamble_skip_sop", \
  "spi_0_clock_speed", \
  "spi_0_num_rx_subports", \
  "spi_0_num_tx_subports", \
  "spi_0_ref_clock_speed", \
  "spi_0_rx_cal_status_rep_cnt", \
  "spi_0_tx_cal_status_rep_cnt", \
  "spi_1_clock_speed", \
  "spi_1_num_rx_subports", \
  "spi_1_num_tx_subports", \
  "spi_1_ref_clock_speed", \
  "spi_1_rx_cal_status_rep_cnt", \
  "spi_1_tx_cal_status_rep_cnt", \
  "spi_interleave_burst_size", \
  "spi_loopback", \
  "split_horizon_forwarding_groups_mode", \
  "spri0_qid", \
  "spri1_qid", \
  "srd_tx_drv_hv_disable", \
  "ss_ignore_pbmp", \
  "stable_filename", \
  "stable_flags", \
  "stable_location", \
  "stable_size", \
  "stack_cpu_priority", \
  "stack_enable", \
  "stack_simplex", \
  "stacking_enable", \
  "stag_enable", \
  "stat_if_enable", \
  "stat_if_idle_reports_present", \
  "stat_if_parity_enable", \
  "stat_if_phase", \
  "stat_if_pkt_size", \
  "stat_if_report_billing_mode", \
  "stat_if_report_dequeue_enable", \
  "stat_if_report_enqueue_enable", \
  "stat_if_report_fap20v_cnm_report", \
  "stat_if_report_fap20v_count_snoop", \
  "stat_if_report_fap20v_fabric_mc", \
  "stat_if_report_fap20v_ing_mc", \
  "stat_if_report_fap20v_ing_mc_report_single", \
  "stat_if_report_fap20v_mode", \
  "stat_if_report_fap20v_single_copy_reported", \
  "stat_if_report_mode", \
  "stat_if_report_multicast_single_copy", \
  "stat_if_report_original_pkt_size", \
  "stat_if_scrubber_bdb_th", \
  "stat_if_scrubber_buffer_descr_th", \
  "stat_if_scrubber_enable", \
  "stat_if_scrubber_queue_max", \
  "stat_if_scrubber_queue_min", \
  "stat_if_scrubber_rate_max", \
  "stat_if_scrubber_rate_min", \
  "stat_if_scrubber_uc_dram_buffer_th", \
  "stat_if_selective_report_queue_max", \
  "stat_if_selective_report_queue_min", \
  "stat_if_sync_rate", \
  "stat_if_tc_source", \
  "station_mac_address", \
  "stg_table_size", \
  "streaming_if_discard_bad_parity", \
  "streaming_if_discard_pkt_streaming", \
  "streaming_if_enable_timeoutcnt", \
  "streaming_if_multi_port_mode", \
  "streaming_if_quiet_mode", \
  "streaming_if_timeout_prd", \
  "switch_bypass_mode", \
  "switch_delay", \
  "sync_eth_clk_divider", \
  "sync_eth_clk_squelch_enable", \
  "sync_eth_clk_to_nif_id", \
  "sync_eth_is_malg_b_enabled", \
  "sync_eth_mode", \
  "synth_dram_freq", \
  "system_cell_format", \
  "system_contains_multiple_pipe_device", \
  "system_ftmh_load_balancing_ext_mode", \
  "system_has_fap20", \
  "system_has_fap21", \
  "system_has_petra_rev_a", \
  "system_is_dual_mode_in_system", \
  "system_is_fe1600_in_system", \
  "system_is_fe600_in_system", \
  "system_is_module_custom1_in_system", \
  "system_is_petra_b_in_system", \
  "system_is_single_mode_in_system", \
  "system_is_vcs_128_in_system", \
  "system_pph_eep_ext", \
  "system_red_enable", \
  "system_ref_core_clock", \
  "system_set_dma_low_endianess", \
  "system_stag_enconding_enable_mode", \
  "system_stag_enconding_offset_4bit", \
  "table_dma_enable", \
  "tb_flow_id_size", \
  "tcam_dac_value", \
  "tcam_ptr_dist", \
  "tcam_reset_usec", \
  "tdm_source_fap_id_offset", \
  "tdma_intr_enable", \
  "tdma_timeout_usec", \
  "tm_fabric_port_hierarchy_setup", \
  "tm_ingress_shaping_enable", \
  "tm_local_sched_discipline_template", \
  "tm_port_header_type", \
  "tm_port_itmh_ext_enable", \
  "tm_port_otmh_dest_ext_enable", \
  "tm_port_otmh_outlif_ext_mode", \
  "tm_port_otmh_src_ext_enable", \
  "tm_pph_pph_present_enable", \
  "tm_sched_discipline_template", \
  "total_buff_drop_thres_de1", \
  "total_buff_drop_thres_de2", \
  "total_buff_hysteresis_delta", \
  "total_buff_max_pages", \
  "trill_designated_vlan_check_disable", \
  "trill_mc_prune_mode", \
  "trill_mode", \
  "trunk_extend", \
  "trunk_hash_format", \
  "tslam_dma_enable", \
  "tslam_intr_enable", \
  "tslam_timeout_usec", \
  "tx_fifo_size", \
  "uc_msg_ctl_timeout", \
  "uc_msg_ctrl_0", \
  "uc_msg_ctrl_1", \
  "uc_msg_queue_timeout", \
  "uc_msg_send_retry_delay", \
  "uc_msg_send_timeout", \
  "uc_msg_thread_pri", \
  "uc_msg_tx_beacon_timeout", \
  "uc_valid_bmp", \
  "ucode_num_ports", \
  "ucode_port", \
  "ge", \
  "hg", \
  "pci", \
  "spi", \
  "xe", \
  "unicast_queue_resource_allocation_mode", \
  "user_buffer_size", \
  "user_delay", \
  "v4mc_str_sel", \
  "v4uc_str_sel", \
  "vcs128_unicast_priority", \
  "vfp_cam_tm", \
  "vlan_match_criteria_mode", \
  "vlan_match_db_mode", \
  "vlan_queue_enable", \
  "vlan_queue_levels_max", \
  "vlan_translation_initial_vlan_enable", \
  "vlan_translation_match_ipv4", \
  "vlan_xlate_mem_entries", \
  "vlandelete_chunks", \
  "vmac_enable", \
  "vmac_encoding_mask", \
  "vmac_encoding_value", \
  "voq_mapping_mode", \
  "voq_to_cmq_mapping_mode", \
  "warmboot_event_handler_enable", \
  "wdrr_weight_queue", \
  "wide_sram0_x18", \
  "wide_sram1_x18", \
  "wp_addr_width", \
  "wp_data_width", \
  "xgs_compatability_stamp_cud", \
  "xgxs_driver_current", \
  "xgxs_equalizer", \
  "xgxs_lcpll", \
  "xgxs_lcpll_12gbps", \
  "xgxs_lcpll_xtal_refclk", \
  "xgxs_offset", \
  "xgxs_pdetect_10g", \
  "xgxs_phy_oversample_mode", \
  "xgxs_phy_pll_divider", \
  "xgxs_plllock", \
  "xgxs_pre_driver_current", \
  "xgxs_preemphasis", \
  "xgxs_qgpll_xtal_refclk", \
  "xgxs_rx_lane_map", \
  "xgxs_tx_lane_map", \
  "xgxs_wcpll_xtal_refclk", \
  "xl_egress_dqueue", \
  "xl_egress_squeue", \
  "xl_ingress_dqueue", \
  "xl_ingress_squeue", \
  "yellow_limit", \
  "yellow_resume", \
  "yellow_size", \
  "", \
}
#endif /* __SOC_PROPERTY_H */


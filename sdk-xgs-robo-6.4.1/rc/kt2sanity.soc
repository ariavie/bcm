#$Id: kt2sanity.soc,v 1.1.26.1 Broadcom SDK $
# $Copyright: Copyright 2012 Broadcom Corporation.
# This program is the proprietary software of Broadcom Corporation
# and/or its licensors, and may only be used, duplicated, modified
# or distributed pursuant to the terms and conditions of a separate,
# written license agreement executed between you and Broadcom
# (an "Authorized License").  Except as set forth in an Authorized
# License, Broadcom grants no license (express or implied), right
# to use, or waiver of any kind with respect to the Software, and
# Broadcom expressly reserves all rights in and to the Software
# and all intellectual property rights therein.  IF YOU HAVE
# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
# ALL USE OF THE SOFTWARE.  
#  
# Except as expressly set forth in the Authorized License,
#  
# 1.     This program, including its structure, sequence and organization,
# constitutes the valuable trade secrets of Broadcom, and you shall use
# all reasonable efforts to protect the confidentiality thereof,
# and to use this information only in connection with your use of
# Broadcom integrated circuit products.
#  
# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
# 
# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$

# Katana2 (BCM56450) Sanity
#
# Script to run all available tests as quickly as possible.
# For testing basic sanity of new drivers, simulators, chips, etc.
#
local CIs ci0,ci2,ci4;
local DNs 0-5;

if $?BCM56450_A0 || $?BCM56450_B0 \
    'local LIKE_BCM56450 1'

if $?BCM56248_A0 || $?BCM56248_B0 \
   'local LIKE_BCM56248 1'

if $?BCM55455_A0 || $?BCM55455_B0 \
   'local LIKE_BCM55455 1'

if $?BCM56455_A0 || $?BCM56455_B0 \
   'local LIKE_BCM56455 1; \
    local CIs ci0,ci2;\
    local DNs 0-2;'


#config clear

config add bcm5645x_config=2
config bcm5645x_config=2

config add auto_polarity_flip=1
config auto_polarity_flip=1

config add auto_portgroup=1
config auto_portgroup=1

config add parity_enable=0;
config parity_enable=0;

config

# PCI override is a temporary stuff

if $?BCM56455_A0 || $?BCM56455_B0 \
   'echo "KT1 Package"; \
    config clear; \
    config add bcm5645x_config=1; \
    config add pci_override_dev=0xb455; \
    config add parity_enable=0; \
    config; \
    $done;'

if $?BCM56248_A0 || $?BCM56248_B0 || $?BCM56456_A0 || $?BCM56456_B0 || $?BCM55455_A0 || $?BCM55455_B0\
    'local LIKE_BCM56456 1'

if $?run_full_sanity "echo Running FullSanity" else "echo Running ScreenSanity"


# This line is used for automated sanity regression - PLEASE DO NOT REMOVE
echo "testsuite: started: sanity"

rcload rc.soc
counter off
l2mode off

# We need to print out port status since any cabling effects results.
*:ps

# Avoid link messages while testing
linkscan off

init
init misc
init mmu

local done 'echo "   Done"'

# Set run command script not to fail on errors reported by commands
# this allows the script to continue if a test fails
#set rcerror=false

# Set up test mode: don't stop on errors, show progress on each test
tm -stoponerror +progress
# Unselect all
ts -*

#Display some useful information
date
ver
soc

#Start Test
echo "Running PCI S-Channel Buf ..."
tr 4
$done

echo "Running Register reset defaults ..."
tr 1
$done

if !$?ihost_mode \
   'echo "Running PCI Compliance ..."; \
    tr 2; \
    $done;'

if !$?ihost_mode \
   'echo "Running Register read/write ..."; \
    tr 3; \
    echo "DONE ..."; \
    $done;'

init soc; init mmu; init misc;
#Clean up after register read/write test.

rcload rc.soc
counter off
l2mode off
echo "Running CPU Benchmarks ..."
tr 21
$done
linkscan off

init soc; init mmu; init misc;
kt2sanity_ecc_off.soc
#set rctest=false

echo "Running Switching Memory Tests ..."

echo " ALTERNATE_EMIRROR_BITMAP";
tr 50 M=ALTERNATE_EMIRROR_BITMAP;
tr 51 M=ALTERNATE_EMIRROR_BITMAP;
tr 52 M=ALTERNATE_EMIRROR_BITMAP;
tr 71 M=ALTERNATE_EMIRROR_BITMAP TSE=F SLTH=T;
tr 71 M=ALTERNATE_EMIRROR_BITMAP TSE=T SLTH=T;
tr 71 M=ALTERNATE_EMIRROR_BITMAP TSE=T SLTH=F;
echo " BCAST_BLOCK_MASK";
tr 50 M=BCAST_BLOCK_MASK;
tr 51 M=BCAST_BLOCK_MASK;
tr 52 M=BCAST_BLOCK_MASK;
tr 71 M=BCAST_BLOCK_MASK TSE=F SLTH=T;
tr 71 M=BCAST_BLOCK_MASK TSE=T SLTH=T;
tr 71 M=BCAST_BLOCK_MASK TSE=T SLTH=F;
echo " COS_MAP_SEL";
tr 50 M=COS_MAP_SEL;
tr 51 M=COS_MAP_SEL;
tr 52 M=COS_MAP_SEL;
tr 71 M=COS_MAP_SEL TSE=F SLTH=T;
tr 71 M=COS_MAP_SEL TSE=T SLTH=T;
tr 71 M=COS_MAP_SEL TSE=T SLTH=F;
echo " CPU_COS_MAP";
tr 50 M=CPU_COS_MAP;
tr 51 M=CPU_COS_MAP;
tr 52 M=CPU_COS_MAP;
tr 71 M=CPU_COS_MAP TSE=F SLTH=T;
tr 71 M=CPU_COS_MAP TSE=T SLTH=T;
tr 71 M=CPU_COS_MAP TSE=T SLTH=F;
echo " CPU_COS_MAP_DATA_ONLY";
tr 50 M=CPU_COS_MAP_DATA_ONLY;
tr 51 M=CPU_COS_MAP_DATA_ONLY;
tr 52 M=CPU_COS_MAP_DATA_ONLY;
tr 71 M=CPU_COS_MAP_DATA_ONLY TSE=F SLTH=T;
tr 71 M=CPU_COS_MAP_DATA_ONLY TSE=T SLTH=T;
tr 71 M=CPU_COS_MAP_DATA_ONLY TSE=T SLTH=F;
echo " CPU_COS_MAP_ONLY";
tr 50 M=CPU_COS_MAP_ONLY;
tr 51 M=CPU_COS_MAP_ONLY;
tr 52 M=CPU_COS_MAP_ONLY;
tr 71 M=CPU_COS_MAP_ONLY TSE=F SLTH=T;
tr 71 M=CPU_COS_MAP_ONLY TSE=T SLTH=T;
tr 71 M=CPU_COS_MAP_ONLY TSE=T SLTH=F;
echo " CPU_PBM";
tr 50 M=CPU_PBM;
#tr 51 M=CPU_PBM;
#tr 52 M=CPU_PBM;
tr 71 M=CPU_PBM TSE=F SLTH=T;
tr 71 M=CPU_PBM TSE=T SLTH=T;
tr 71 M=CPU_PBM TSE=T SLTH=F;
echo " CPU_PBM_2";
tr 50 M=CPU_PBM_2;
#tr 51 M=CPU_PBM_2;
#tr 52 M=CPU_PBM_2;
tr 71 M=CPU_PBM_2 TSE=F SLTH=T;
tr 71 M=CPU_PBM_2 TSE=T SLTH=T;
tr 71 M=CPU_PBM_2 TSE=T SLTH=F;
echo " CPU_TS_MAP";
tr 50 M=CPU_TS_MAP;
tr 51 M=CPU_TS_MAP;
tr 52 M=CPU_TS_MAP;
tr 71 M=CPU_TS_MAP TSE=F SLTH=T;
tr 71 M=CPU_TS_MAP TSE=T SLTH=T;
tr 71 M=CPU_TS_MAP TSE=T SLTH=F;
echo " CTR_DEQ_STATUS_MEM";
tr 50 M=CTR_DEQ_STATUS_MEM;
tr 51 M=CTR_DEQ_STATUS_MEM;
tr 52 M=CTR_DEQ_STATUS_MEM;
tr 71 M=CTR_DEQ_STATUS_MEM TSE=F SLTH=T;
tr 71 M=CTR_DEQ_STATUS_MEM TSE=T SLTH=T;
tr 71 M=CTR_DEQ_STATUS_MEM TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_0";
tr 50 M=CTR_FLEX_COUNT_0;
tr 51 M=CTR_FLEX_COUNT_0;
tr 52 M=CTR_FLEX_COUNT_0;
tr 71 M=CTR_FLEX_COUNT_0 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_0 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_0 TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_1";
tr 50 M=CTR_FLEX_COUNT_1;
tr 51 M=CTR_FLEX_COUNT_1;
tr 52 M=CTR_FLEX_COUNT_1;
tr 71 M=CTR_FLEX_COUNT_1 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_1 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_1 TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_10";
tr 50 M=CTR_FLEX_COUNT_10;
tr 51 M=CTR_FLEX_COUNT_10;
tr 52 M=CTR_FLEX_COUNT_10;
tr 71 M=CTR_FLEX_COUNT_10 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_10 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_10 TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_11";
tr 50 M=CTR_FLEX_COUNT_11;
tr 51 M=CTR_FLEX_COUNT_11;
tr 52 M=CTR_FLEX_COUNT_11;
tr 71 M=CTR_FLEX_COUNT_11 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_11 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_11 TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_2";
tr 50 M=CTR_FLEX_COUNT_2;
tr 51 M=CTR_FLEX_COUNT_2;
tr 52 M=CTR_FLEX_COUNT_2;
tr 71 M=CTR_FLEX_COUNT_2 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_2 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_2 TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_3";
tr 50 M=CTR_FLEX_COUNT_3;
tr 51 M=CTR_FLEX_COUNT_3;
tr 52 M=CTR_FLEX_COUNT_3;
tr 71 M=CTR_FLEX_COUNT_3 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_3 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_3 TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_4";
tr 50 M=CTR_FLEX_COUNT_4;
tr 51 M=CTR_FLEX_COUNT_4;
tr 52 M=CTR_FLEX_COUNT_4;
tr 71 M=CTR_FLEX_COUNT_4 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_4 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_4 TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_5";
tr 50 M=CTR_FLEX_COUNT_5;
tr 51 M=CTR_FLEX_COUNT_5;
tr 52 M=CTR_FLEX_COUNT_5;
tr 71 M=CTR_FLEX_COUNT_5 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_5 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_5 TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_6";
tr 50 M=CTR_FLEX_COUNT_6;
tr 51 M=CTR_FLEX_COUNT_6;
tr 52 M=CTR_FLEX_COUNT_6;
tr 71 M=CTR_FLEX_COUNT_6 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_6 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_6 TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_7";
tr 50 M=CTR_FLEX_COUNT_7;
tr 51 M=CTR_FLEX_COUNT_7;
tr 52 M=CTR_FLEX_COUNT_7;
tr 71 M=CTR_FLEX_COUNT_7 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_7 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_7 TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_8";
tr 50 M=CTR_FLEX_COUNT_8;
tr 51 M=CTR_FLEX_COUNT_8;
tr 52 M=CTR_FLEX_COUNT_8;
tr 71 M=CTR_FLEX_COUNT_8 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_8 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_8 TSE=T SLTH=F;
echo " CTR_FLEX_COUNT_9";
tr 50 M=CTR_FLEX_COUNT_9;
tr 51 M=CTR_FLEX_COUNT_9;
tr 52 M=CTR_FLEX_COUNT_9;
tr 71 M=CTR_FLEX_COUNT_9 TSE=F SLTH=T;
tr 71 M=CTR_FLEX_COUNT_9 TSE=T SLTH=T;
tr 71 M=CTR_FLEX_COUNT_9 TSE=T SLTH=F;
echo " DEVICE_STREAM_ID_TO_PP_PORT_MAP";
tr 50 M=DEVICE_STREAM_ID_TO_PP_PORT_MAP;
tr 51 M=DEVICE_STREAM_ID_TO_PP_PORT_MAP;
tr 52 M=DEVICE_STREAM_ID_TO_PP_PORT_MAP;
tr 71 M=DEVICE_STREAM_ID_TO_PP_PORT_MAP TSE=F SLTH=T;
tr 71 M=DEVICE_STREAM_ID_TO_PP_PORT_MAP TSE=T SLTH=T;
tr 71 M=DEVICE_STREAM_ID_TO_PP_PORT_MAP TSE=T SLTH=F;
echo " DSCP_TABLE";
tr 50 M=DSCP_TABLE;
tr 51 M=DSCP_TABLE;
tr 52 M=DSCP_TABLE;
tr 71 M=DSCP_TABLE TSE=F SLTH=T;
tr 71 M=DSCP_TABLE TSE=T SLTH=T;
tr 71 M=DSCP_TABLE TSE=T SLTH=F;
echo " E2E_HOL_STATUS";
tr 50 M=E2E_HOL_STATUS;
tr 51 M=E2E_HOL_STATUS;
tr 52 M=E2E_HOL_STATUS;
tr 71 M=E2E_HOL_STATUS TSE=F SLTH=T;
tr 71 M=E2E_HOL_STATUS TSE=T SLTH=T;
tr 71 M=E2E_HOL_STATUS TSE=T SLTH=F;
echo " E2E_HOL_STATUS_1";
tr 50 M=E2E_HOL_STATUS_1;
tr 51 M=E2E_HOL_STATUS_1;
tr 52 M=E2E_HOL_STATUS_1;
tr 71 M=E2E_HOL_STATUS_1 TSE=F SLTH=T;
tr 71 M=E2E_HOL_STATUS_1 TSE=T SLTH=T;
tr 71 M=E2E_HOL_STATUS_1 TSE=T SLTH=F;
echo " EFP_COUNTER_TABLE";
tr 50 M=EFP_COUNTER_TABLE;
tr 51 M=EFP_COUNTER_TABLE;
tr 52 M=EFP_COUNTER_TABLE;
tr 71 M=EFP_COUNTER_TABLE TSE=F SLTH=T;
tr 71 M=EFP_COUNTER_TABLE TSE=T SLTH=T;
tr 71 M=EFP_COUNTER_TABLE TSE=T SLTH=F;
echo " EFP_METER_TABLE";
tr 50 M=EFP_METER_TABLE;
tr 51 M=EFP_METER_TABLE;
tr 52 M=EFP_METER_TABLE;
tr 71 M=EFP_METER_TABLE TSE=F SLTH=T;
tr 71 M=EFP_METER_TABLE TSE=T SLTH=T;
tr 71 M=EFP_METER_TABLE TSE=T SLTH=F;
echo " EFP_POLICY_TABLE";
tr 50 M=EFP_POLICY_TABLE;
tr 51 M=EFP_POLICY_TABLE;
tr 52 M=EFP_POLICY_TABLE;
tr 71 M=EFP_POLICY_TABLE TSE=F SLTH=T;
tr 71 M=EFP_POLICY_TABLE TSE=T SLTH=T;
tr 71 M=EFP_POLICY_TABLE TSE=T SLTH=F;
echo " EFP_TCAM";
tr 50 M=EFP_TCAM;
tr 51 M=EFP_TCAM;
tr 52 M=EFP_TCAM;
tr 71 M=EFP_TCAM TSE=F SLTH=T;
tr 71 M=EFP_TCAM TSE=T SLTH=T;
tr 71 M=EFP_TCAM TSE=T SLTH=F;
echo " EGR_1588_SA";
tr 50 M=EGR_1588_SA;
tr 51 M=EGR_1588_SA;
tr 52 M=EGR_1588_SA;
tr 71 M=EGR_1588_SA TSE=F SLTH=T;
tr 71 M=EGR_1588_SA TSE=T SLTH=T;
tr 71 M=EGR_1588_SA TSE=T SLTH=F;
echo " EGR_COS_MAP";
tr 50 M=EGR_COS_MAP;
tr 51 M=EGR_COS_MAP;
tr 52 M=EGR_COS_MAP;
tr 71 M=EGR_COS_MAP TSE=F SLTH=T;
tr 71 M=EGR_COS_MAP TSE=T SLTH=T;
tr 71 M=EGR_COS_MAP TSE=T SLTH=F;
echo " EGR_CPU_COS_MAP";
tr 50 M=EGR_CPU_COS_MAP;
tr 51 M=EGR_CPU_COS_MAP;
tr 52 M=EGR_CPU_COS_MAP;
tr 71 M=EGR_CPU_COS_MAP TSE=F SLTH=T;
tr 71 M=EGR_CPU_COS_MAP TSE=T SLTH=T;
tr 71 M=EGR_CPU_COS_MAP TSE=T SLTH=F;
echo " EGR_DSCP_ECN_MAP";
tr 50 M=EGR_DSCP_ECN_MAP;
tr 51 M=EGR_DSCP_ECN_MAP;
tr 52 M=EGR_DSCP_ECN_MAP;
tr 71 M=EGR_DSCP_ECN_MAP TSE=F SLTH=T;
tr 71 M=EGR_DSCP_ECN_MAP TSE=T SLTH=T;
tr 71 M=EGR_DSCP_ECN_MAP TSE=T SLTH=F;
echo " EGR_DSCP_TABLE";
tr 50 M=EGR_DSCP_TABLE;
tr 51 M=EGR_DSCP_TABLE;
tr 52 M=EGR_DSCP_TABLE;
tr 71 M=EGR_DSCP_TABLE TSE=F SLTH=T;
tr 71 M=EGR_DSCP_TABLE TSE=T SLTH=T;
tr 71 M=EGR_DSCP_TABLE TSE=T SLTH=F;
echo " EGR_DVP_ATTRIBUTE";
tr 50 M=EGR_DVP_ATTRIBUTE;
tr 51 M=EGR_DVP_ATTRIBUTE;
tr 52 M=EGR_DVP_ATTRIBUTE;
tr 71 M=EGR_DVP_ATTRIBUTE TSE=F SLTH=T;
tr 71 M=EGR_DVP_ATTRIBUTE TSE=T SLTH=T;
tr 71 M=EGR_DVP_ATTRIBUTE TSE=T SLTH=F;
echo " EGR_EM_MTP_INDEX";
tr 50 M=EGR_EM_MTP_INDEX;
tr 51 M=EGR_EM_MTP_INDEX;
tr 52 M=EGR_EM_MTP_INDEX;
tr 71 M=EGR_EM_MTP_INDEX TSE=F SLTH=T;
tr 71 M=EGR_EM_MTP_INDEX TSE=T SLTH=T;
tr 71 M=EGR_EM_MTP_INDEX TSE=T SLTH=F;
echo " EGR_ENABLE";
tr 50 M=EGR_ENABLE;
tr 51 M=EGR_ENABLE;
tr 52 M=EGR_ENABLE;
tr 71 M=EGR_ENABLE TSE=F SLTH=T;
tr 71 M=EGR_ENABLE TSE=T SLTH=T;
tr 71 M=EGR_ENABLE TSE=T SLTH=F;
echo " EGR_EP_REDIRECT_EM_MTP_INDEX";
tr 50 M=EGR_EP_REDIRECT_EM_MTP_INDEX;
tr 51 M=EGR_EP_REDIRECT_EM_MTP_INDEX;
tr 52 M=EGR_EP_REDIRECT_EM_MTP_INDEX;
tr 71 M=EGR_EP_REDIRECT_EM_MTP_INDEX TSE=F SLTH=T;
tr 71 M=EGR_EP_REDIRECT_EM_MTP_INDEX TSE=T SLTH=T;
tr 71 M=EGR_EP_REDIRECT_EM_MTP_INDEX TSE=T SLTH=F;
echo " EGR_FLEX_CTR_COUNTER_TABLE_0";
tr 50 M=EGR_FLEX_CTR_COUNTER_TABLE_0;
tr 51 M=EGR_FLEX_CTR_COUNTER_TABLE_0;
tr 52 M=EGR_FLEX_CTR_COUNTER_TABLE_0;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_0 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_0 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_0 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_COUNTER_TABLE_1";
tr 50 M=EGR_FLEX_CTR_COUNTER_TABLE_1;
tr 51 M=EGR_FLEX_CTR_COUNTER_TABLE_1;
tr 52 M=EGR_FLEX_CTR_COUNTER_TABLE_1;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_1 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_1 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_1 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_COUNTER_TABLE_2";
tr 50 M=EGR_FLEX_CTR_COUNTER_TABLE_2;
tr 51 M=EGR_FLEX_CTR_COUNTER_TABLE_2;
tr 52 M=EGR_FLEX_CTR_COUNTER_TABLE_2;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_2 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_2 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_2 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_COUNTER_TABLE_3";
tr 50 M=EGR_FLEX_CTR_COUNTER_TABLE_3;
tr 51 M=EGR_FLEX_CTR_COUNTER_TABLE_3;
tr 52 M=EGR_FLEX_CTR_COUNTER_TABLE_3;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_3 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_3 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_3 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_COUNTER_TABLE_4";
tr 50 M=EGR_FLEX_CTR_COUNTER_TABLE_4;
tr 51 M=EGR_FLEX_CTR_COUNTER_TABLE_4;
tr 52 M=EGR_FLEX_CTR_COUNTER_TABLE_4;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_4 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_4 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_4 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_COUNTER_TABLE_5";
tr 50 M=EGR_FLEX_CTR_COUNTER_TABLE_5;
tr 51 M=EGR_FLEX_CTR_COUNTER_TABLE_5;
tr 52 M=EGR_FLEX_CTR_COUNTER_TABLE_5;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_5 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_5 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_5 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_COUNTER_TABLE_6";
tr 50 M=EGR_FLEX_CTR_COUNTER_TABLE_6;
tr 51 M=EGR_FLEX_CTR_COUNTER_TABLE_6;
tr 52 M=EGR_FLEX_CTR_COUNTER_TABLE_6;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_6 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_6 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_6 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_COUNTER_TABLE_7";
tr 50 M=EGR_FLEX_CTR_COUNTER_TABLE_7;
tr 51 M=EGR_FLEX_CTR_COUNTER_TABLE_7;
tr 52 M=EGR_FLEX_CTR_COUNTER_TABLE_7;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_7 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_7 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_COUNTER_TABLE_7 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_OFFSET_TABLE_0";
tr 50 M=EGR_FLEX_CTR_OFFSET_TABLE_0;
tr 51 M=EGR_FLEX_CTR_OFFSET_TABLE_0;
tr 52 M=EGR_FLEX_CTR_OFFSET_TABLE_0;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_0 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_0 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_0 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_OFFSET_TABLE_1";
tr 50 M=EGR_FLEX_CTR_OFFSET_TABLE_1;
tr 51 M=EGR_FLEX_CTR_OFFSET_TABLE_1;
tr 52 M=EGR_FLEX_CTR_OFFSET_TABLE_1;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_1 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_1 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_1 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_OFFSET_TABLE_2";
tr 50 M=EGR_FLEX_CTR_OFFSET_TABLE_2;
tr 51 M=EGR_FLEX_CTR_OFFSET_TABLE_2;
tr 52 M=EGR_FLEX_CTR_OFFSET_TABLE_2;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_2 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_2 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_2 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_OFFSET_TABLE_3";
tr 50 M=EGR_FLEX_CTR_OFFSET_TABLE_3;
tr 51 M=EGR_FLEX_CTR_OFFSET_TABLE_3;
tr 52 M=EGR_FLEX_CTR_OFFSET_TABLE_3;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_3 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_3 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_3 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_OFFSET_TABLE_4";
tr 50 M=EGR_FLEX_CTR_OFFSET_TABLE_4;
tr 51 M=EGR_FLEX_CTR_OFFSET_TABLE_4;
tr 52 M=EGR_FLEX_CTR_OFFSET_TABLE_4;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_4 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_4 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_4 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_OFFSET_TABLE_5";
tr 50 M=EGR_FLEX_CTR_OFFSET_TABLE_5;
tr 51 M=EGR_FLEX_CTR_OFFSET_TABLE_5;
tr 52 M=EGR_FLEX_CTR_OFFSET_TABLE_5;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_5 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_5 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_5 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_OFFSET_TABLE_6";
tr 50 M=EGR_FLEX_CTR_OFFSET_TABLE_6;
tr 51 M=EGR_FLEX_CTR_OFFSET_TABLE_6;
tr 52 M=EGR_FLEX_CTR_OFFSET_TABLE_6;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_6 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_6 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_6 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_OFFSET_TABLE_7";
tr 50 M=EGR_FLEX_CTR_OFFSET_TABLE_7;
tr 51 M=EGR_FLEX_CTR_OFFSET_TABLE_7;
tr 52 M=EGR_FLEX_CTR_OFFSET_TABLE_7;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_7 TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_7 TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_OFFSET_TABLE_7 TSE=T SLTH=F;
echo " EGR_FLEX_CTR_PKT_PRI_MAP";
tr 50 M=EGR_FLEX_CTR_PKT_PRI_MAP;
tr 51 M=EGR_FLEX_CTR_PKT_PRI_MAP;
tr 52 M=EGR_FLEX_CTR_PKT_PRI_MAP;
tr 71 M=EGR_FLEX_CTR_PKT_PRI_MAP TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_PKT_PRI_MAP TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_PKT_PRI_MAP TSE=T SLTH=F;
echo " EGR_FLEX_CTR_PKT_RES_MAP";
tr 50 M=EGR_FLEX_CTR_PKT_RES_MAP;
tr 51 M=EGR_FLEX_CTR_PKT_RES_MAP;
tr 52 M=EGR_FLEX_CTR_PKT_RES_MAP;
tr 71 M=EGR_FLEX_CTR_PKT_RES_MAP TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_PKT_RES_MAP TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_PKT_RES_MAP TSE=T SLTH=F;
echo " EGR_FLEX_CTR_PORT_MAP";
tr 50 M=EGR_FLEX_CTR_PORT_MAP;
tr 51 M=EGR_FLEX_CTR_PORT_MAP;
tr 52 M=EGR_FLEX_CTR_PORT_MAP;
tr 71 M=EGR_FLEX_CTR_PORT_MAP TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_PORT_MAP TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_PORT_MAP TSE=T SLTH=F;
echo " EGR_FLEX_CTR_PRI_CNG_MAP";
tr 50 M=EGR_FLEX_CTR_PRI_CNG_MAP;
tr 51 M=EGR_FLEX_CTR_PRI_CNG_MAP;
tr 52 M=EGR_FLEX_CTR_PRI_CNG_MAP;
tr 71 M=EGR_FLEX_CTR_PRI_CNG_MAP TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_PRI_CNG_MAP TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_PRI_CNG_MAP TSE=T SLTH=F;
echo " EGR_FLEX_CTR_TOS_MAP";
tr 50 M=EGR_FLEX_CTR_TOS_MAP;
tr 51 M=EGR_FLEX_CTR_TOS_MAP;
tr 52 M=EGR_FLEX_CTR_TOS_MAP;
tr 71 M=EGR_FLEX_CTR_TOS_MAP TSE=F SLTH=T;
tr 71 M=EGR_FLEX_CTR_TOS_MAP TSE=T SLTH=T;
tr 71 M=EGR_FLEX_CTR_TOS_MAP TSE=T SLTH=F;
echo " EGR_FRAGMENT_ID_TABLE";
tr 50 M=EGR_FRAGMENT_ID_TABLE;
tr 51 M=EGR_FRAGMENT_ID_TABLE;
tr 52 M=EGR_FRAGMENT_ID_TABLE;
tr 71 M=EGR_FRAGMENT_ID_TABLE TSE=F SLTH=T;
tr 71 M=EGR_FRAGMENT_ID_TABLE TSE=T SLTH=T;
tr 71 M=EGR_FRAGMENT_ID_TABLE TSE=T SLTH=F;
echo " EGR_GPP_ATTRIBUTES";
tr 50 M=EGR_GPP_ATTRIBUTES;
tr 51 M=EGR_GPP_ATTRIBUTES;
tr 52 M=EGR_GPP_ATTRIBUTES;
tr 71 M=EGR_GPP_ATTRIBUTES TSE=F SLTH=T;
tr 71 M=EGR_GPP_ATTRIBUTES TSE=T SLTH=T;
tr 71 M=EGR_GPP_ATTRIBUTES TSE=T SLTH=F;
echo " EGR_GPP_ATTRIBUTES_MODBASE";
tr 50 M=EGR_GPP_ATTRIBUTES_MODBASE;
tr 51 M=EGR_GPP_ATTRIBUTES_MODBASE;
tr 52 M=EGR_GPP_ATTRIBUTES_MODBASE;
tr 71 M=EGR_GPP_ATTRIBUTES_MODBASE TSE=F SLTH=T;
tr 71 M=EGR_GPP_ATTRIBUTES_MODBASE TSE=T SLTH=T;
tr 71 M=EGR_GPP_ATTRIBUTES_MODBASE TSE=T SLTH=F;
echo " EGR_IM_MTP_INDEX";
tr 50 M=EGR_IM_MTP_INDEX;
tr 51 M=EGR_IM_MTP_INDEX;
tr 52 M=EGR_IM_MTP_INDEX;
tr 71 M=EGR_IM_MTP_INDEX TSE=F SLTH=T;
tr 71 M=EGR_IM_MTP_INDEX TSE=T SLTH=T;
tr 71 M=EGR_IM_MTP_INDEX TSE=T SLTH=F;
echo " EGR_IPMC";
tr 50 M=EGR_IPMC;
tr 51 M=EGR_IPMC;
tr 52 M=EGR_IPMC;
tr 71 M=EGR_IPMC TSE=F SLTH=T;
tr 71 M=EGR_IPMC TSE=T SLTH=T;
tr 71 M=EGR_IPMC TSE=T SLTH=F;
echo " EGR_IP_TUNNEL";
tr 50 M=EGR_IP_TUNNEL;
tr 51 M=EGR_IP_TUNNEL;
tr 52 M=EGR_IP_TUNNEL;
tr 71 M=EGR_IP_TUNNEL TSE=F SLTH=T;
tr 71 M=EGR_IP_TUNNEL TSE=T SLTH=T;
tr 71 M=EGR_IP_TUNNEL TSE=T SLTH=F;
echo " EGR_IP_TUNNEL_IPV6";
tr 50 M=EGR_IP_TUNNEL_IPV6;
tr 51 M=EGR_IP_TUNNEL_IPV6;
tr 52 M=EGR_IP_TUNNEL_IPV6;
tr 71 M=EGR_IP_TUNNEL_IPV6 TSE=F SLTH=T;
tr 71 M=EGR_IP_TUNNEL_IPV6 TSE=T SLTH=T;
tr 71 M=EGR_IP_TUNNEL_IPV6 TSE=T SLTH=F;
echo " EGR_IP_TUNNEL_MPLS";
tr 50 M=EGR_IP_TUNNEL_MPLS;
tr 51 M=EGR_IP_TUNNEL_MPLS;
tr 52 M=EGR_IP_TUNNEL_MPLS;
tr 71 M=EGR_IP_TUNNEL_MPLS TSE=F SLTH=T;
tr 71 M=EGR_IP_TUNNEL_MPLS TSE=T SLTH=T;
tr 71 M=EGR_IP_TUNNEL_MPLS TSE=T SLTH=F;
echo " EGR_L3_INTF";
tr 50 M=EGR_L3_INTF;
tr 51 M=EGR_L3_INTF;
tr 52 M=EGR_L3_INTF;
tr 71 M=EGR_L3_INTF TSE=F SLTH=T;
tr 71 M=EGR_L3_INTF TSE=T SLTH=T;
tr 71 M=EGR_L3_INTF TSE=T SLTH=F;
echo " EGR_L3_NEXT_HOP";
tr 50 M=EGR_L3_NEXT_HOP;
tr 51 M=EGR_L3_NEXT_HOP;
tr 52 M=EGR_L3_NEXT_HOP;
tr 71 M=EGR_L3_NEXT_HOP TSE=F SLTH=T;
tr 71 M=EGR_L3_NEXT_HOP TSE=T SLTH=T;
tr 71 M=EGR_L3_NEXT_HOP TSE=T SLTH=F;
echo " EGR_LM_COUNTER_CONTROL";
tr 50 M=EGR_LM_COUNTER_CONTROL;
tr 51 M=EGR_LM_COUNTER_CONTROL;
tr 52 M=EGR_LM_COUNTER_CONTROL;
tr 71 M=EGR_LM_COUNTER_CONTROL TSE=F SLTH=T;
tr 71 M=EGR_LM_COUNTER_CONTROL TSE=T SLTH=T;
tr 71 M=EGR_LM_COUNTER_CONTROL TSE=T SLTH=F;
echo " EGR_MAC_DA_PROFILE";
tr 50 M=EGR_MAC_DA_PROFILE;
tr 51 M=EGR_MAC_DA_PROFILE;
tr 52 M=EGR_MAC_DA_PROFILE;
tr 71 M=EGR_MAC_DA_PROFILE TSE=F SLTH=T;
tr 71 M=EGR_MAC_DA_PROFILE TSE=T SLTH=T;
tr 71 M=EGR_MAC_DA_PROFILE TSE=T SLTH=F;
echo " EGR_MAP_MH";
tr 50 M=EGR_MAP_MH;
tr 51 M=EGR_MAP_MH;
tr 52 M=EGR_MAP_MH;
tr 71 M=EGR_MAP_MH TSE=F SLTH=T;
tr 71 M=EGR_MAP_MH TSE=T SLTH=T;
tr 71 M=EGR_MAP_MH TSE=T SLTH=F;
echo " EGR_MASK";
tr 50 M=EGR_MASK;
tr 51 M=EGR_MASK;
tr 52 M=EGR_MASK;
tr 71 M=EGR_MASK TSE=F SLTH=T;
tr 71 M=EGR_MASK TSE=T SLTH=T;
tr 71 M=EGR_MASK TSE=T SLTH=F;
echo " EGR_MASK_MODBASE";
tr 50 M=EGR_MASK_MODBASE;
tr 51 M=EGR_MASK_MODBASE;
tr 52 M=EGR_MASK_MODBASE;
tr 71 M=EGR_MASK_MODBASE TSE=F SLTH=T;
tr 71 M=EGR_MASK_MODBASE TSE=T SLTH=T;
tr 71 M=EGR_MASK_MODBASE TSE=T SLTH=F;
#echo " EGR_MAX_USED_ENTRIES";
#tr 50 M=EGR_MAX_USED_ENTRIES;
#tr 51 M=EGR_MAX_USED_ENTRIES;
#tr 52 M=EGR_MAX_USED_ENTRIES;
#tr 71 M=EGR_MAX_USED_ENTRIES TSE=F SLTH=T;
#tr 71 M=EGR_MAX_USED_ENTRIES TSE=T SLTH=T;
#tr 71 M=EGR_MAX_USED_ENTRIES TSE=T SLTH=F;
echo " EGR_MA_INDEX";
tr 50 M=EGR_MA_INDEX;
tr 51 M=EGR_MA_INDEX;
tr 52 M=EGR_MA_INDEX;
tr 71 M=EGR_MA_INDEX TSE=F SLTH=T;
tr 71 M=EGR_MA_INDEX TSE=T SLTH=T;
tr 71 M=EGR_MA_INDEX TSE=T SLTH=F;
echo " EGR_MIRROR_ENCAP_CONTROL";
tr 50 M=EGR_MIRROR_ENCAP_CONTROL;
tr 51 M=EGR_MIRROR_ENCAP_CONTROL;
tr 52 M=EGR_MIRROR_ENCAP_CONTROL;
tr 71 M=EGR_MIRROR_ENCAP_CONTROL TSE=F SLTH=T;
tr 71 M=EGR_MIRROR_ENCAP_CONTROL TSE=T SLTH=T;
tr 71 M=EGR_MIRROR_ENCAP_CONTROL TSE=T SLTH=F;
echo " EGR_MIRROR_ENCAP_DATA_1";
tr 50 M=EGR_MIRROR_ENCAP_DATA_1;
tr 51 M=EGR_MIRROR_ENCAP_DATA_1;
tr 52 M=EGR_MIRROR_ENCAP_DATA_1;
tr 71 M=EGR_MIRROR_ENCAP_DATA_1 TSE=F SLTH=T;
tr 71 M=EGR_MIRROR_ENCAP_DATA_1 TSE=T SLTH=T;
tr 71 M=EGR_MIRROR_ENCAP_DATA_1 TSE=T SLTH=F;
echo " EGR_MIRROR_ENCAP_DATA_2";
tr 50 M=EGR_MIRROR_ENCAP_DATA_2;
tr 51 M=EGR_MIRROR_ENCAP_DATA_2;
tr 52 M=EGR_MIRROR_ENCAP_DATA_2;
tr 71 M=EGR_MIRROR_ENCAP_DATA_2 TSE=F SLTH=T;
tr 71 M=EGR_MIRROR_ENCAP_DATA_2 TSE=T SLTH=T;
tr 71 M=EGR_MIRROR_ENCAP_DATA_2 TSE=T SLTH=F;
#echo " EGR_MMU_REQUESTS";
#tr 50 M=EGR_MMU_REQUESTS;
#tr 51 M=EGR_MMU_REQUESTS;
#tr 52 M=EGR_MMU_REQUESTS;
#tr 71 M=EGR_MMU_REQUESTS TSE=F SLTH=T;
#tr 71 M=EGR_MMU_REQUESTS TSE=T SLTH=T;
#tr 71 M=EGR_MMU_REQUESTS TSE=T SLTH=F;
echo " EGR_MOD_MAP_TABLE";
tr 50 M=EGR_MOD_MAP_TABLE;
tr 51 M=EGR_MOD_MAP_TABLE;
tr 52 M=EGR_MOD_MAP_TABLE;
tr 71 M=EGR_MOD_MAP_TABLE TSE=F SLTH=T;
tr 71 M=EGR_MOD_MAP_TABLE TSE=T SLTH=T;
tr 71 M=EGR_MOD_MAP_TABLE TSE=T SLTH=F;
echo " EGR_MPLS_EXP_MAPPING_1";
tr 50 M=EGR_MPLS_EXP_MAPPING_1;
tr 51 M=EGR_MPLS_EXP_MAPPING_1;
tr 52 M=EGR_MPLS_EXP_MAPPING_1;
tr 71 M=EGR_MPLS_EXP_MAPPING_1 TSE=F SLTH=T;
tr 71 M=EGR_MPLS_EXP_MAPPING_1 TSE=T SLTH=T;
tr 71 M=EGR_MPLS_EXP_MAPPING_1 TSE=T SLTH=F;
echo " EGR_MPLS_EXP_MAPPING_2";
tr 50 M=EGR_MPLS_EXP_MAPPING_2;
tr 51 M=EGR_MPLS_EXP_MAPPING_2;
tr 52 M=EGR_MPLS_EXP_MAPPING_2;
tr 71 M=EGR_MPLS_EXP_MAPPING_2 TSE=F SLTH=T;
tr 71 M=EGR_MPLS_EXP_MAPPING_2 TSE=T SLTH=T;
tr 71 M=EGR_MPLS_EXP_MAPPING_2 TSE=T SLTH=F;
echo " EGR_MPLS_EXP_PRI_MAPPING";
tr 50 M=EGR_MPLS_EXP_PRI_MAPPING;
tr 51 M=EGR_MPLS_EXP_PRI_MAPPING;
tr 52 M=EGR_MPLS_EXP_PRI_MAPPING;
tr 71 M=EGR_MPLS_EXP_PRI_MAPPING TSE=F SLTH=T;
tr 71 M=EGR_MPLS_EXP_PRI_MAPPING TSE=T SLTH=T;
tr 71 M=EGR_MPLS_EXP_PRI_MAPPING TSE=T SLTH=F;
echo " EGR_MPLS_PRI_MAPPING";
tr 50 M=EGR_MPLS_PRI_MAPPING;
tr 51 M=EGR_MPLS_PRI_MAPPING;
tr 52 M=EGR_MPLS_PRI_MAPPING;
tr 71 M=EGR_MPLS_PRI_MAPPING TSE=F SLTH=T;
tr 71 M=EGR_MPLS_PRI_MAPPING TSE=T SLTH=T;
tr 71 M=EGR_MPLS_PRI_MAPPING TSE=T SLTH=F;
echo " EGR_MPLS_VC_AND_SWAP_LABEL_TABLE";
tr 50 M=EGR_MPLS_VC_AND_SWAP_LABEL_TABLE;
tr 51 M=EGR_MPLS_VC_AND_SWAP_LABEL_TABLE;
tr 52 M=EGR_MPLS_VC_AND_SWAP_LABEL_TABLE;
tr 71 M=EGR_MPLS_VC_AND_SWAP_LABEL_TABLE TSE=F SLTH=T;
tr 71 M=EGR_MPLS_VC_AND_SWAP_LABEL_TABLE TSE=T SLTH=T;
tr 71 M=EGR_MPLS_VC_AND_SWAP_LABEL_TABLE TSE=T SLTH=F;
echo " EGR_MP_GROUP";
tr 50 M=EGR_MP_GROUP;
tr 51 M=EGR_MP_GROUP;
tr 52 M=EGR_MP_GROUP;
tr 71 M=EGR_MP_GROUP TSE=F SLTH=T;
tr 71 M=EGR_MP_GROUP TSE=T SLTH=T;
tr 71 M=EGR_MP_GROUP TSE=T SLTH=F;
echo " EGR_NETWORK_PRUNE_CONTROL";
tr 50 M=EGR_NETWORK_PRUNE_CONTROL;
tr 51 M=EGR_NETWORK_PRUNE_CONTROL;
tr 52 M=EGR_NETWORK_PRUNE_CONTROL;
tr 71 M=EGR_NETWORK_PRUNE_CONTROL TSE=F SLTH=T;
tr 71 M=EGR_NETWORK_PRUNE_CONTROL TSE=T SLTH=T;
tr 71 M=EGR_NETWORK_PRUNE_CONTROL TSE=T SLTH=F;
echo " EGR_OAM_DGLP_PROFILE";
tr 50 M=EGR_OAM_DGLP_PROFILE;
tr 51 M=EGR_OAM_DGLP_PROFILE;
tr 52 M=EGR_OAM_DGLP_PROFILE;
tr 71 M=EGR_OAM_DGLP_PROFILE TSE=F SLTH=T;
tr 71 M=EGR_OAM_DGLP_PROFILE TSE=T SLTH=T;
tr 71 M=EGR_OAM_DGLP_PROFILE TSE=T SLTH=F;
echo " EGR_OAM_FLEXIBLE_DOMAIN_CONTROL";
tr 50 M=EGR_OAM_FLEXIBLE_DOMAIN_CONTROL;
tr 51 M=EGR_OAM_FLEXIBLE_DOMAIN_CONTROL;
tr 52 M=EGR_OAM_FLEXIBLE_DOMAIN_CONTROL;
tr 71 M=EGR_OAM_FLEXIBLE_DOMAIN_CONTROL TSE=F SLTH=T;
tr 71 M=EGR_OAM_FLEXIBLE_DOMAIN_CONTROL TSE=T SLTH=T;
tr 71 M=EGR_OAM_FLEXIBLE_DOMAIN_CONTROL TSE=T SLTH=F;
echo " EGR_OAM_LM_COUNTERS_0";
tr 50 M=EGR_OAM_LM_COUNTERS_0;
tr 51 M=EGR_OAM_LM_COUNTERS_0;
tr 52 M=EGR_OAM_LM_COUNTERS_0;
tr 71 M=EGR_OAM_LM_COUNTERS_0 TSE=F SLTH=T;
tr 71 M=EGR_OAM_LM_COUNTERS_0 TSE=T SLTH=T;
tr 71 M=EGR_OAM_LM_COUNTERS_0 TSE=T SLTH=F;
echo " EGR_OAM_LM_COUNTERS_1";
tr 50 M=EGR_OAM_LM_COUNTERS_1;
tr 51 M=EGR_OAM_LM_COUNTERS_1;
tr 52 M=EGR_OAM_LM_COUNTERS_1;
tr 71 M=EGR_OAM_LM_COUNTERS_1 TSE=F SLTH=T;
tr 71 M=EGR_OAM_LM_COUNTERS_1 TSE=T SLTH=T;
tr 71 M=EGR_OAM_LM_COUNTERS_1 TSE=T SLTH=F;
echo " EGR_OAM_OPCODE_CONTROL_PROFILE";
tr 50 M=EGR_OAM_OPCODE_CONTROL_PROFILE;
tr 51 M=EGR_OAM_OPCODE_CONTROL_PROFILE;
tr 52 M=EGR_OAM_OPCODE_CONTROL_PROFILE;
tr 71 M=EGR_OAM_OPCODE_CONTROL_PROFILE TSE=F SLTH=T;
tr 71 M=EGR_OAM_OPCODE_CONTROL_PROFILE TSE=T SLTH=T;
tr 71 M=EGR_OAM_OPCODE_CONTROL_PROFILE TSE=T SLTH=F;
echo " EGR_OAM_OPCODE_GROUP";
tr 50 M=EGR_OAM_OPCODE_GROUP;
tr 51 M=EGR_OAM_OPCODE_GROUP;
tr 52 M=EGR_OAM_OPCODE_GROUP;
tr 71 M=EGR_OAM_OPCODE_GROUP TSE=F SLTH=T;
tr 71 M=EGR_OAM_OPCODE_GROUP TSE=T SLTH=T;
tr 71 M=EGR_OAM_OPCODE_GROUP TSE=T SLTH=F;
echo " EGR_OLP_CONFIG";
tr 50 M=EGR_OLP_CONFIG;
#tr 51 M=EGR_OLP_CONFIG;
#tr 52 M=EGR_OLP_CONFIG;
tr 71 M=EGR_OLP_CONFIG TSE=F SLTH=T;
tr 71 M=EGR_OLP_CONFIG TSE=T SLTH=T;
tr 71 M=EGR_OLP_CONFIG TSE=T SLTH=F;
echo " EGR_OLP_DGPP_CONFIG";
tr 50 M=EGR_OLP_DGPP_CONFIG;
tr 51 M=EGR_OLP_DGPP_CONFIG;
tr 52 M=EGR_OLP_DGPP_CONFIG;
tr 71 M=EGR_OLP_DGPP_CONFIG TSE=F SLTH=T;
tr 71 M=EGR_OLP_DGPP_CONFIG TSE=T SLTH=T;
tr 71 M=EGR_OLP_DGPP_CONFIG TSE=T SLTH=F;
echo " EGR_OLP_HEADER_TYPE_MAPPING";
tr 50 M=EGR_OLP_HEADER_TYPE_MAPPING;
tr 51 M=EGR_OLP_HEADER_TYPE_MAPPING;
tr 52 M=EGR_OLP_HEADER_TYPE_MAPPING;
tr 71 M=EGR_OLP_HEADER_TYPE_MAPPING TSE=F SLTH=T;
tr 71 M=EGR_OLP_HEADER_TYPE_MAPPING TSE=T SLTH=T;
tr 71 M=EGR_OLP_HEADER_TYPE_MAPPING TSE=T SLTH=F;
#echo " EGR_PBE_DEBUG_0";
#tr 50 M=EGR_PBE_DEBUG_0;
#tr 51 M=EGR_PBE_DEBUG_0;
#tr 52 M=EGR_PBE_DEBUG_0;
#tr 71 M=EGR_PBE_DEBUG_0 TSE=F SLTH=T;
#tr 71 M=EGR_PBE_DEBUG_0 TSE=T SLTH=T;
#tr 71 M=EGR_PBE_DEBUG_0 TSE=T SLTH=F;
#echo " EGR_PBE_DEBUG_1";
#tr 50 M=EGR_PBE_DEBUG_1;
#tr 51 M=EGR_PBE_DEBUG_1;
#tr 52 M=EGR_PBE_DEBUG_1;
#tr 71 M=EGR_PBE_DEBUG_1 TSE=F SLTH=T;
#tr 71 M=EGR_PBE_DEBUG_1 TSE=T SLTH=T;
#tr 71 M=EGR_PBE_DEBUG_1 TSE=T SLTH=F;
echo " EGR_PCP_DE_MAPPING";
tr 50 M=EGR_PCP_DE_MAPPING;
tr 51 M=EGR_PCP_DE_MAPPING;
tr 52 M=EGR_PCP_DE_MAPPING;
tr 71 M=EGR_PCP_DE_MAPPING TSE=F SLTH=T;
tr 71 M=EGR_PCP_DE_MAPPING TSE=T SLTH=T;
tr 71 M=EGR_PCP_DE_MAPPING TSE=T SLTH=F;
echo " EGR_PHYSICAL_PORT";
tr 50 M=EGR_PHYSICAL_PORT;
tr 51 M=EGR_PHYSICAL_PORT;
tr 52 M=EGR_PHYSICAL_PORT;
tr 71 M=EGR_PHYSICAL_PORT TSE=F SLTH=T;
tr 71 M=EGR_PHYSICAL_PORT TSE=T SLTH=T;
tr 71 M=EGR_PHYSICAL_PORT TSE=T SLTH=F;
echo " EGR_PORT";
tr 50 M=EGR_PORT;
tr 51 M=EGR_PORT;
tr 52 M=EGR_PORT;
tr 71 M=EGR_PORT TSE=F SLTH=T;
tr 71 M=EGR_PORT TSE=T SLTH=T;
tr 71 M=EGR_PORT TSE=T SLTH=F;
#echo " EGR_PORT_REQUESTS";
#tr 50 M=EGR_PORT_REQUESTS;
#tr 51 M=EGR_PORT_REQUESTS;
#tr 52 M=EGR_PORT_REQUESTS;
#tr 71 M=EGR_PORT_REQUESTS TSE=F SLTH=T;
#tr 71 M=EGR_PORT_REQUESTS TSE=T SLTH=T;
#tr 71 M=EGR_PORT_REQUESTS TSE=T SLTH=F;
echo " EGR_PP_PORT_GPP_TRANSLATION_1";
tr 50 M=EGR_PP_PORT_GPP_TRANSLATION_1;
#tr 51 M=EGR_PP_PORT_GPP_TRANSLATION_1;
#tr 52 M=EGR_PP_PORT_GPP_TRANSLATION_1;
tr 71 M=EGR_PP_PORT_GPP_TRANSLATION_1 TSE=F SLTH=T;
tr 71 M=EGR_PP_PORT_GPP_TRANSLATION_1 TSE=T SLTH=T;
tr 71 M=EGR_PP_PORT_GPP_TRANSLATION_1 TSE=T SLTH=F;
echo " EGR_PP_PORT_GPP_TRANSLATION_2";
tr 50 M=EGR_PP_PORT_GPP_TRANSLATION_2;
#tr 51 M=EGR_PP_PORT_GPP_TRANSLATION_2;
#tr 52 M=EGR_PP_PORT_GPP_TRANSLATION_2;
tr 71 M=EGR_PP_PORT_GPP_TRANSLATION_2 TSE=F SLTH=T;
tr 71 M=EGR_PP_PORT_GPP_TRANSLATION_2 TSE=T SLTH=T;
tr 71 M=EGR_PP_PORT_GPP_TRANSLATION_2 TSE=T SLTH=F;
echo " EGR_PRI_CNG_MAP";
tr 50 M=EGR_PRI_CNG_MAP;
tr 51 M=EGR_PRI_CNG_MAP;
tr 52 M=EGR_PRI_CNG_MAP;
tr 71 M=EGR_PRI_CNG_MAP TSE=F SLTH=T;
tr 71 M=EGR_PRI_CNG_MAP TSE=T SLTH=T;
tr 71 M=EGR_PRI_CNG_MAP TSE=T SLTH=F;
echo " EGR_PW_INIT_COUNTERS";
tr 50 M=EGR_PW_INIT_COUNTERS;
tr 51 M=EGR_PW_INIT_COUNTERS;
tr 52 M=EGR_PW_INIT_COUNTERS;
tr 71 M=EGR_PW_INIT_COUNTERS TSE=F SLTH=T;
tr 71 M=EGR_PW_INIT_COUNTERS TSE=T SLTH=T;
tr 71 M=EGR_PW_INIT_COUNTERS TSE=T SLTH=F;
echo " EGR_QUEUE_TO_PP_PORT_MAP";
tr 50 M=EGR_QUEUE_TO_PP_PORT_MAP;
tr 51 M=EGR_QUEUE_TO_PP_PORT_MAP;
tr 52 M=EGR_QUEUE_TO_PP_PORT_MAP;
tr 71 M=EGR_QUEUE_TO_PP_PORT_MAP TSE=F SLTH=T;
tr 71 M=EGR_QUEUE_TO_PP_PORT_MAP TSE=T SLTH=T;
tr 71 M=EGR_QUEUE_TO_PP_PORT_MAP TSE=T SLTH=F;
echo " EGR_SERVICE_PRI_MAP";
tr 50 M=EGR_SERVICE_PRI_MAP;
tr 51 M=EGR_SERVICE_PRI_MAP;
tr 52 M=EGR_SERVICE_PRI_MAP;
tr 71 M=EGR_SERVICE_PRI_MAP TSE=F SLTH=T;
tr 71 M=EGR_SERVICE_PRI_MAP TSE=T SLTH=T;
tr 71 M=EGR_SERVICE_PRI_MAP TSE=T SLTH=F;
echo " EGR_SUBPORT_TAG_DOT1P_MAP";
tr 50 M=EGR_SUBPORT_TAG_DOT1P_MAP;
tr 51 M=EGR_SUBPORT_TAG_DOT1P_MAP;
tr 52 M=EGR_SUBPORT_TAG_DOT1P_MAP;
tr 71 M=EGR_SUBPORT_TAG_DOT1P_MAP TSE=F SLTH=T;
tr 71 M=EGR_SUBPORT_TAG_DOT1P_MAP TSE=T SLTH=T;
tr 71 M=EGR_SUBPORT_TAG_DOT1P_MAP TSE=T SLTH=F;
echo " EGR_VFI";
tr 50 M=EGR_VFI;
tr 51 M=EGR_VFI;
tr 52 M=EGR_VFI;
tr 71 M=EGR_VFI TSE=F SLTH=T;
tr 71 M=EGR_VFI TSE=T SLTH=T;
tr 71 M=EGR_VFI TSE=T SLTH=F;
echo " EGR_VLAN";
tr 50 M=EGR_VLAN;
tr 51 M=EGR_VLAN;
tr 52 M=EGR_VLAN;
tr 71 M=EGR_VLAN TSE=F SLTH=T;
tr 71 M=EGR_VLAN TSE=T SLTH=T;
tr 71 M=EGR_VLAN TSE=T SLTH=F;
echo " EGR_VLAN_STG";
tr 50 M=EGR_VLAN_STG;
tr 51 M=EGR_VLAN_STG;
tr 52 M=EGR_VLAN_STG;
tr 71 M=EGR_VLAN_STG TSE=F SLTH=T;
tr 71 M=EGR_VLAN_STG TSE=T SLTH=T;
tr 71 M=EGR_VLAN_STG TSE=T SLTH=F;
echo " EGR_VLAN_TAG_ACTION_PROFILE";
tr 50 M=EGR_VLAN_TAG_ACTION_PROFILE;
tr 51 M=EGR_VLAN_TAG_ACTION_PROFILE;
tr 52 M=EGR_VLAN_TAG_ACTION_PROFILE;
tr 71 M=EGR_VLAN_TAG_ACTION_PROFILE TSE=F SLTH=T;
tr 71 M=EGR_VLAN_TAG_ACTION_PROFILE TSE=T SLTH=T;
tr 71 M=EGR_VLAN_TAG_ACTION_PROFILE TSE=T SLTH=F;
echo " EGR_VLAN_XLATE";
tr 50 M=EGR_VLAN_XLATE;
tr 51 M=EGR_VLAN_XLATE;
tr 52 M=EGR_VLAN_XLATE;
tr 71 M=EGR_VLAN_XLATE TSE=F SLTH=T;
tr 71 M=EGR_VLAN_XLATE TSE=T SLTH=T;
tr 71 M=EGR_VLAN_XLATE TSE=T SLTH=F;
echo " EGR_VLAN_XLATE_OVERFLOW";
tr 50 M=EGR_VLAN_XLATE_OVERFLOW;
tr 51 M=EGR_VLAN_XLATE_OVERFLOW;
tr 52 M=EGR_VLAN_XLATE_OVERFLOW;
tr 71 M=EGR_VLAN_XLATE_OVERFLOW TSE=F SLTH=T;
tr 71 M=EGR_VLAN_XLATE_OVERFLOW TSE=T SLTH=T;
tr 71 M=EGR_VLAN_XLATE_OVERFLOW TSE=T SLTH=F;
echo " EMIRROR_CONTROL";
tr 50 M=EMIRROR_CONTROL;
tr 51 M=EMIRROR_CONTROL;
tr 52 M=EMIRROR_CONTROL;
tr 71 M=EMIRROR_CONTROL TSE=F SLTH=T;
tr 71 M=EMIRROR_CONTROL TSE=T SLTH=T;
tr 71 M=EMIRROR_CONTROL TSE=T SLTH=F;
echo " EMIRROR_CONTROL1";
tr 50 M=EMIRROR_CONTROL1;
tr 51 M=EMIRROR_CONTROL1;
tr 52 M=EMIRROR_CONTROL1;
tr 71 M=EMIRROR_CONTROL1 TSE=F SLTH=T;
tr 71 M=EMIRROR_CONTROL1 TSE=T SLTH=T;
tr 71 M=EMIRROR_CONTROL1 TSE=T SLTH=F;
echo " EMIRROR_CONTROL2";
tr 50 M=EMIRROR_CONTROL2;
tr 51 M=EMIRROR_CONTROL2;
tr 52 M=EMIRROR_CONTROL2;
tr 71 M=EMIRROR_CONTROL2 TSE=F SLTH=T;
tr 71 M=EMIRROR_CONTROL2 TSE=T SLTH=T;
tr 71 M=EMIRROR_CONTROL2 TSE=T SLTH=F;
echo " EMIRROR_CONTROL3";
tr 50 M=EMIRROR_CONTROL3;
tr 51 M=EMIRROR_CONTROL3;
tr 52 M=EMIRROR_CONTROL3;
tr 71 M=EMIRROR_CONTROL3 TSE=F SLTH=T;
tr 71 M=EMIRROR_CONTROL3 TSE=T SLTH=T;
tr 71 M=EMIRROR_CONTROL3 TSE=T SLTH=F;
echo " EM_MTP_INDEX";
tr 50 M=EM_MTP_INDEX;
tr 51 M=EM_MTP_INDEX;
tr 52 M=EM_MTP_INDEX;
tr 71 M=EM_MTP_INDEX TSE=F SLTH=T;
tr 71 M=EM_MTP_INDEX TSE=T SLTH=T;
tr 71 M=EM_MTP_INDEX TSE=T SLTH=F;
echo " EPC_LINK_BMAP";
tr 50 M=EPC_LINK_BMAP;
#tr 51 M=EPC_LINK_BMAP;
#tr 52 M=EPC_LINK_BMAP;
tr 71 M=EPC_LINK_BMAP TSE=F SLTH=T;
tr 71 M=EPC_LINK_BMAP TSE=T SLTH=T;
tr 71 M=EPC_LINK_BMAP TSE=T SLTH=F;
echo " EP_REDIRECT_EM_MTP_INDEX";
tr 50 M=EP_REDIRECT_EM_MTP_INDEX;
tr 51 M=EP_REDIRECT_EM_MTP_INDEX;
tr 52 M=EP_REDIRECT_EM_MTP_INDEX;
tr 71 M=EP_REDIRECT_EM_MTP_INDEX TSE=F SLTH=T;
tr 71 M=EP_REDIRECT_EM_MTP_INDEX TSE=T SLTH=T;
tr 71 M=EP_REDIRECT_EM_MTP_INDEX TSE=T SLTH=F;
echo " FLOOD_LEARN_MATCH_VLANS_PORT_A";
tr 50 M=FLOOD_LEARN_MATCH_VLANS_PORT_A;
tr 51 M=FLOOD_LEARN_MATCH_VLANS_PORT_A;
tr 52 M=FLOOD_LEARN_MATCH_VLANS_PORT_A;
tr 71 M=FLOOD_LEARN_MATCH_VLANS_PORT_A TSE=F SLTH=T;
tr 71 M=FLOOD_LEARN_MATCH_VLANS_PORT_A TSE=T SLTH=T;
tr 71 M=FLOOD_LEARN_MATCH_VLANS_PORT_A TSE=T SLTH=F;
echo " FLOOD_LEARN_MATCH_VLANS_PORT_B";
tr 50 M=FLOOD_LEARN_MATCH_VLANS_PORT_B;
tr 51 M=FLOOD_LEARN_MATCH_VLANS_PORT_B;
tr 52 M=FLOOD_LEARN_MATCH_VLANS_PORT_B;
tr 71 M=FLOOD_LEARN_MATCH_VLANS_PORT_B TSE=F SLTH=T;
tr 71 M=FLOOD_LEARN_MATCH_VLANS_PORT_B TSE=T SLTH=T;
tr 71 M=FLOOD_LEARN_MATCH_VLANS_PORT_B TSE=T SLTH=F;
echo " FP_COUNTER_TABLE";
tr 50 M=FP_COUNTER_TABLE;
tr 51 M=FP_COUNTER_TABLE;
tr 52 M=FP_COUNTER_TABLE;
tr 71 M=FP_COUNTER_TABLE TSE=F SLTH=T;
tr 71 M=FP_COUNTER_TABLE TSE=T SLTH=T;
tr 71 M=FP_COUNTER_TABLE TSE=T SLTH=F;
echo " FP_FLEX_KEY_SELECTOR";
tr 50 M=FP_FLEX_KEY_SELECTOR;
tr 51 M=FP_FLEX_KEY_SELECTOR;
tr 52 M=FP_FLEX_KEY_SELECTOR;
tr 71 M=FP_FLEX_KEY_SELECTOR TSE=F SLTH=T;
tr 71 M=FP_FLEX_KEY_SELECTOR TSE=T SLTH=T;
tr 71 M=FP_FLEX_KEY_SELECTOR TSE=T SLTH=F;
echo " FP_GLOBAL_MASK_TCAM";
tr 50 M=FP_GLOBAL_MASK_TCAM;
tr 51 M=FP_GLOBAL_MASK_TCAM;
tr 52 M=FP_GLOBAL_MASK_TCAM;
tr 71 M=FP_GLOBAL_MASK_TCAM TSE=F SLTH=T;
tr 71 M=FP_GLOBAL_MASK_TCAM TSE=T SLTH=T;
tr 71 M=FP_GLOBAL_MASK_TCAM TSE=T SLTH=F;
echo " FP_HG_CLASSID_SELECT";
tr 50 M=FP_HG_CLASSID_SELECT;
tr 51 M=FP_HG_CLASSID_SELECT;
tr 52 M=FP_HG_CLASSID_SELECT;
tr 71 M=FP_HG_CLASSID_SELECT TSE=F SLTH=T;
tr 71 M=FP_HG_CLASSID_SELECT TSE=T SLTH=T;
tr 71 M=FP_HG_CLASSID_SELECT TSE=T SLTH=F;
echo " FP_I2E_CLASSID_SELECT";
tr 50 M=FP_I2E_CLASSID_SELECT;
tr 51 M=FP_I2E_CLASSID_SELECT;
tr 52 M=FP_I2E_CLASSID_SELECT;
tr 71 M=FP_I2E_CLASSID_SELECT TSE=F SLTH=T;
tr 71 M=FP_I2E_CLASSID_SELECT TSE=T SLTH=T;
tr 71 M=FP_I2E_CLASSID_SELECT TSE=T SLTH=F;
echo " FP_METER_TABLE";
tr 50 M=FP_METER_TABLE;
tr 51 M=FP_METER_TABLE;
tr 52 M=FP_METER_TABLE;
tr 71 M=FP_METER_TABLE TSE=F SLTH=T;
tr 71 M=FP_METER_TABLE TSE=T SLTH=T;
tr 71 M=FP_METER_TABLE TSE=T SLTH=F;
echo " FP_POLICY_TABLE";
tr 50 M=FP_POLICY_TABLE;
tr 51 M=FP_POLICY_TABLE;
tr 52 M=FP_POLICY_TABLE;
tr 71 M=FP_POLICY_TABLE TSE=F SLTH=T;
tr 71 M=FP_POLICY_TABLE TSE=T SLTH=T;
tr 71 M=FP_POLICY_TABLE TSE=T SLTH=F;
echo " FP_PORT_FIELD_SEL";
tr 50 M=FP_PORT_FIELD_SEL;
tr 51 M=FP_PORT_FIELD_SEL;
tr 52 M=FP_PORT_FIELD_SEL;
tr 71 M=FP_PORT_FIELD_SEL TSE=F SLTH=T;
tr 71 M=FP_PORT_FIELD_SEL TSE=T SLTH=T;
tr 71 M=FP_PORT_FIELD_SEL TSE=T SLTH=F;
echo " FP_PORT_METER_MAP";
tr 50 M=FP_PORT_METER_MAP;
tr 51 M=FP_PORT_METER_MAP;
tr 52 M=FP_PORT_METER_MAP;
tr 71 M=FP_PORT_METER_MAP TSE=F SLTH=T;
tr 71 M=FP_PORT_METER_MAP TSE=T SLTH=T;
tr 71 M=FP_PORT_METER_MAP TSE=T SLTH=F;
echo " FP_RANGE_CHECK";
tr 50 M=FP_RANGE_CHECK;
tr 51 M=FP_RANGE_CHECK;
tr 52 M=FP_RANGE_CHECK;
tr 71 M=FP_RANGE_CHECK TSE=F SLTH=T;
tr 71 M=FP_RANGE_CHECK TSE=T SLTH=T;
tr 71 M=FP_RANGE_CHECK TSE=T SLTH=F;
echo " FP_SLICE_KEY_CONTROL";
tr 50 M=FP_SLICE_KEY_CONTROL;
#tr 51 M=FP_SLICE_KEY_CONTROL;
#tr 52 M=FP_SLICE_KEY_CONTROL;
tr 71 M=FP_SLICE_KEY_CONTROL TSE=F SLTH=T;
tr 71 M=FP_SLICE_KEY_CONTROL TSE=T SLTH=T;
tr 71 M=FP_SLICE_KEY_CONTROL TSE=T SLTH=F;
echo " FP_SLICE_MAP";
tr 50 M=FP_SLICE_MAP;
#tr 51 M=FP_SLICE_MAP;
#tr 52 M=FP_SLICE_MAP;
tr 71 M=FP_SLICE_MAP TSE=F SLTH=T;
tr 71 M=FP_SLICE_MAP TSE=T SLTH=T;
tr 71 M=FP_SLICE_MAP TSE=T SLTH=F;
echo " FP_STORM_CONTROL_METERS";
tr 50 M=FP_STORM_CONTROL_METERS;
tr 51 M=FP_STORM_CONTROL_METERS;
tr 52 M=FP_STORM_CONTROL_METERS;
tr 71 M=FP_STORM_CONTROL_METERS TSE=F SLTH=T;
tr 71 M=FP_STORM_CONTROL_METERS TSE=T SLTH=T;
tr 71 M=FP_STORM_CONTROL_METERS TSE=T SLTH=F;
echo " FP_TCAM";
tr 50 M=FP_TCAM;
tr 51 M=FP_TCAM;
tr 52 M=FP_TCAM;
tr 71 M=FP_TCAM TSE=F SLTH=T;
tr 71 M=FP_TCAM TSE=T SLTH=T;
tr 71 M=FP_TCAM TSE=T SLTH=F;
echo " FP_UDF_OFFSET";
tr 50 M=FP_UDF_OFFSET;
tr 51 M=FP_UDF_OFFSET;
tr 52 M=FP_UDF_OFFSET;
tr 71 M=FP_UDF_OFFSET TSE=F SLTH=T;
tr 71 M=FP_UDF_OFFSET TSE=T SLTH=T;
tr 71 M=FP_UDF_OFFSET TSE=T SLTH=F;
echo " FP_UDF_TCAM";
tr 50 M=FP_UDF_TCAM;
tr 51 M=FP_UDF_TCAM;
tr 52 M=FP_UDF_TCAM;
tr 71 M=FP_UDF_TCAM TSE=F SLTH=T;
tr 71 M=FP_UDF_TCAM TSE=T SLTH=T;
tr 71 M=FP_UDF_TCAM TSE=T SLTH=F;
echo " GTP_PORT_TABLE";
tr 50 M=GTP_PORT_TABLE;
tr 51 M=GTP_PORT_TABLE;
tr 52 M=GTP_PORT_TABLE;
tr 71 M=GTP_PORT_TABLE TSE=F SLTH=T;
tr 71 M=GTP_PORT_TABLE TSE=T SLTH=T;
tr 71 M=GTP_PORT_TABLE TSE=T SLTH=F;
echo " HG_TRUNK_BITMAP";
tr 50 M=HG_TRUNK_BITMAP;
tr 51 M=HG_TRUNK_BITMAP;
tr 52 M=HG_TRUNK_BITMAP;
tr 71 M=HG_TRUNK_BITMAP TSE=F SLTH=T;
tr 71 M=HG_TRUNK_BITMAP TSE=T SLTH=T;
tr 71 M=HG_TRUNK_BITMAP TSE=T SLTH=F;
echo " HG_TRUNK_FAILOVER_ENABLE";
tr 50 M=HG_TRUNK_FAILOVER_ENABLE;
#tr 51 M=HG_TRUNK_FAILOVER_ENABLE;
#tr 52 M=HG_TRUNK_FAILOVER_ENABLE;
tr 71 M=HG_TRUNK_FAILOVER_ENABLE TSE=F SLTH=T;
tr 71 M=HG_TRUNK_FAILOVER_ENABLE TSE=T SLTH=T;
tr 71 M=HG_TRUNK_FAILOVER_ENABLE TSE=T SLTH=F;
echo " HG_TRUNK_FAILOVER_SET";
tr 50 M=HG_TRUNK_FAILOVER_SET;
tr 51 M=HG_TRUNK_FAILOVER_SET;
tr 52 M=HG_TRUNK_FAILOVER_SET;
tr 71 M=HG_TRUNK_FAILOVER_SET TSE=F SLTH=T;
tr 71 M=HG_TRUNK_FAILOVER_SET TSE=T SLTH=T;
tr 71 M=HG_TRUNK_FAILOVER_SET TSE=T SLTH=F;
echo " HG_TRUNK_GROUP";
tr 50 M=HG_TRUNK_GROUP;
tr 51 M=HG_TRUNK_GROUP;
tr 52 M=HG_TRUNK_GROUP;
tr 71 M=HG_TRUNK_GROUP TSE=F SLTH=T;
tr 71 M=HG_TRUNK_GROUP TSE=T SLTH=T;
tr 71 M=HG_TRUNK_GROUP TSE=T SLTH=F;
echo " HG_TRUNK_MEMBER";
tr 50 M=HG_TRUNK_MEMBER;
tr 51 M=HG_TRUNK_MEMBER;
tr 52 M=HG_TRUNK_MEMBER;
tr 71 M=HG_TRUNK_MEMBER TSE=F SLTH=T;
tr 71 M=HG_TRUNK_MEMBER TSE=T SLTH=T;
tr 71 M=HG_TRUNK_MEMBER TSE=T SLTH=F;
echo " HIGIG_TRUNK_CONTROL";
tr 50 M=HIGIG_TRUNK_CONTROL;
#tr 51 M=HIGIG_TRUNK_CONTROL;
#tr 52 M=HIGIG_TRUNK_CONTROL;
tr 71 M=HIGIG_TRUNK_CONTROL TSE=F SLTH=T;
tr 71 M=HIGIG_TRUNK_CONTROL TSE=T SLTH=T;
tr 71 M=HIGIG_TRUNK_CONTROL TSE=T SLTH=F;
echo " IARB_ING_PHYSICAL_PORT";
tr 50 M=IARB_ING_PHYSICAL_PORT;
tr 51 M=IARB_ING_PHYSICAL_PORT;
tr 52 M=IARB_ING_PHYSICAL_PORT;
tr 71 M=IARB_ING_PHYSICAL_PORT TSE=F SLTH=T;
tr 71 M=IARB_ING_PHYSICAL_PORT TSE=T SLTH=T;
tr 71 M=IARB_ING_PHYSICAL_PORT TSE=T SLTH=F;
echo " IARB_TDM_TABLE";
tr 50 M=IARB_TDM_TABLE;
tr 51 M=IARB_TDM_TABLE;
tr 52 M=IARB_TDM_TABLE;
tr 71 M=IARB_TDM_TABLE TSE=F SLTH=T;
tr 71 M=IARB_TDM_TABLE TSE=T SLTH=T;
tr 71 M=IARB_TDM_TABLE TSE=T SLTH=F;
echo " IARB_TDM_TABLE_1";
tr 50 M=IARB_TDM_TABLE_1;
tr 51 M=IARB_TDM_TABLE_1;
tr 52 M=IARB_TDM_TABLE_1;
tr 71 M=IARB_TDM_TABLE_1 TSE=F SLTH=T;
tr 71 M=IARB_TDM_TABLE_1 TSE=T SLTH=T;
tr 71 M=IARB_TDM_TABLE_1 TSE=T SLTH=F;
echo " ICONTROL_OPCODE_BITMAP";
tr 50 M=ICONTROL_OPCODE_BITMAP;
tr 51 M=ICONTROL_OPCODE_BITMAP;
tr 52 M=ICONTROL_OPCODE_BITMAP;
tr 71 M=ICONTROL_OPCODE_BITMAP TSE=F SLTH=T;
tr 71 M=ICONTROL_OPCODE_BITMAP TSE=T SLTH=T;
tr 71 M=ICONTROL_OPCODE_BITMAP TSE=T SLTH=F;
echo " IFP_COS_MAP";
tr 50 M=IFP_COS_MAP;
tr 51 M=IFP_COS_MAP;
tr 52 M=IFP_COS_MAP;
tr 71 M=IFP_COS_MAP TSE=F SLTH=T;
tr 71 M=IFP_COS_MAP TSE=T SLTH=T;
tr 71 M=IFP_COS_MAP TSE=T SLTH=F;
echo " IFP_REDIRECTION_PROFILE";
tr 50 M=IFP_REDIRECTION_PROFILE;
tr 51 M=IFP_REDIRECTION_PROFILE;
tr 52 M=IFP_REDIRECTION_PROFILE;
tr 71 M=IFP_REDIRECTION_PROFILE TSE=F SLTH=T;
tr 71 M=IFP_REDIRECTION_PROFILE TSE=T SLTH=T;
tr 71 M=IFP_REDIRECTION_PROFILE TSE=T SLTH=F;
echo " IMIRROR_BITMAP";
tr 50 M=IMIRROR_BITMAP;
tr 51 M=IMIRROR_BITMAP;
tr 52 M=IMIRROR_BITMAP;
tr 71 M=IMIRROR_BITMAP TSE=F SLTH=T;
tr 71 M=IMIRROR_BITMAP TSE=T SLTH=T;
tr 71 M=IMIRROR_BITMAP TSE=T SLTH=F;
echo " IM_MTP_INDEX";
tr 50 M=IM_MTP_INDEX;
tr 51 M=IM_MTP_INDEX;
tr 52 M=IM_MTP_INDEX;
tr 71 M=IM_MTP_INDEX TSE=F SLTH=T;
tr 71 M=IM_MTP_INDEX TSE=T SLTH=T;
tr 71 M=IM_MTP_INDEX TSE=T SLTH=F;
echo " INGRESS_OAM_OPCODE_GROUP";
tr 50 M=INGRESS_OAM_OPCODE_GROUP;
tr 51 M=INGRESS_OAM_OPCODE_GROUP;
tr 52 M=INGRESS_OAM_OPCODE_GROUP;
tr 71 M=INGRESS_OAM_OPCODE_GROUP TSE=F SLTH=T;
tr 71 M=INGRESS_OAM_OPCODE_GROUP TSE=T SLTH=T;
tr 71 M=INGRESS_OAM_OPCODE_GROUP TSE=T SLTH=F;
echo " ING_1588_TS_DISPOSITION_PROFILE_TABLE";
tr 50 M=ING_1588_TS_DISPOSITION_PROFILE_TABLE;
tr 51 M=ING_1588_TS_DISPOSITION_PROFILE_TABLE;
tr 52 M=ING_1588_TS_DISPOSITION_PROFILE_TABLE;
tr 71 M=ING_1588_TS_DISPOSITION_PROFILE_TABLE TSE=F SLTH=T;
tr 71 M=ING_1588_TS_DISPOSITION_PROFILE_TABLE TSE=T SLTH=T;
tr 71 M=ING_1588_TS_DISPOSITION_PROFILE_TABLE TSE=T SLTH=F;
echo " ING_DVP_TABLE";
tr 50 M=ING_DVP_TABLE;
tr 51 M=ING_DVP_TABLE;
tr 52 M=ING_DVP_TABLE;
tr 71 M=ING_DVP_TABLE TSE=F SLTH=T;
tr 71 M=ING_DVP_TABLE TSE=T SLTH=T;
tr 71 M=ING_DVP_TABLE TSE=T SLTH=F;
echo " ING_EGRMSKBMAP";
tr 50 M=ING_EGRMSKBMAP;
tr 51 M=ING_EGRMSKBMAP;
tr 52 M=ING_EGRMSKBMAP;
tr 71 M=ING_EGRMSKBMAP TSE=F SLTH=T;
tr 71 M=ING_EGRMSKBMAP TSE=T SLTH=T;
tr 71 M=ING_EGRMSKBMAP TSE=T SLTH=F;
echo " ING_EN_EFILTER_BITMAP";
tr 50 M=ING_EN_EFILTER_BITMAP;
#tr 51 M=ING_EN_EFILTER_BITMAP;
#tr 52 M=ING_EN_EFILTER_BITMAP;
tr 71 M=ING_EN_EFILTER_BITMAP TSE=F SLTH=T;
tr 71 M=ING_EN_EFILTER_BITMAP TSE=T SLTH=T;
tr 71 M=ING_EN_EFILTER_BITMAP TSE=T SLTH=F;
echo " ING_FLEX_CTR_COUNTER_TABLE_0";
tr 50 M=ING_FLEX_CTR_COUNTER_TABLE_0;
tr 51 M=ING_FLEX_CTR_COUNTER_TABLE_0;
tr 52 M=ING_FLEX_CTR_COUNTER_TABLE_0;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_0 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_0 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_0 TSE=T SLTH=F;
echo " ING_FLEX_CTR_COUNTER_TABLE_1";
tr 50 M=ING_FLEX_CTR_COUNTER_TABLE_1;
tr 51 M=ING_FLEX_CTR_COUNTER_TABLE_1;
tr 52 M=ING_FLEX_CTR_COUNTER_TABLE_1;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_1 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_1 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_1 TSE=T SLTH=F;
echo " ING_FLEX_CTR_COUNTER_TABLE_2";
tr 50 M=ING_FLEX_CTR_COUNTER_TABLE_2;
tr 51 M=ING_FLEX_CTR_COUNTER_TABLE_2;
tr 52 M=ING_FLEX_CTR_COUNTER_TABLE_2;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_2 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_2 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_2 TSE=T SLTH=F;
echo " ING_FLEX_CTR_COUNTER_TABLE_3";
tr 50 M=ING_FLEX_CTR_COUNTER_TABLE_3;
tr 51 M=ING_FLEX_CTR_COUNTER_TABLE_3;
tr 52 M=ING_FLEX_CTR_COUNTER_TABLE_3;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_3 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_3 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_3 TSE=T SLTH=F;
echo " ING_FLEX_CTR_COUNTER_TABLE_4";
tr 50 M=ING_FLEX_CTR_COUNTER_TABLE_4;
tr 51 M=ING_FLEX_CTR_COUNTER_TABLE_4;
tr 52 M=ING_FLEX_CTR_COUNTER_TABLE_4;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_4 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_4 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_4 TSE=T SLTH=F;
echo " ING_FLEX_CTR_COUNTER_TABLE_5";
tr 50 M=ING_FLEX_CTR_COUNTER_TABLE_5;
tr 51 M=ING_FLEX_CTR_COUNTER_TABLE_5;
tr 52 M=ING_FLEX_CTR_COUNTER_TABLE_5;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_5 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_5 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_5 TSE=T SLTH=F;
echo " ING_FLEX_CTR_COUNTER_TABLE_6";
tr 50 M=ING_FLEX_CTR_COUNTER_TABLE_6;
tr 51 M=ING_FLEX_CTR_COUNTER_TABLE_6;
tr 52 M=ING_FLEX_CTR_COUNTER_TABLE_6;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_6 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_6 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_6 TSE=T SLTH=F;
echo " ING_FLEX_CTR_COUNTER_TABLE_7";
tr 50 M=ING_FLEX_CTR_COUNTER_TABLE_7;
tr 51 M=ING_FLEX_CTR_COUNTER_TABLE_7;
tr 52 M=ING_FLEX_CTR_COUNTER_TABLE_7;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_7 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_7 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_COUNTER_TABLE_7 TSE=T SLTH=F;
echo " ING_FLEX_CTR_OFFSET_TABLE_0";
tr 50 M=ING_FLEX_CTR_OFFSET_TABLE_0;
tr 51 M=ING_FLEX_CTR_OFFSET_TABLE_0;
tr 52 M=ING_FLEX_CTR_OFFSET_TABLE_0;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_0 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_0 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_0 TSE=T SLTH=F;
echo " ING_FLEX_CTR_OFFSET_TABLE_1";
tr 50 M=ING_FLEX_CTR_OFFSET_TABLE_1;
tr 51 M=ING_FLEX_CTR_OFFSET_TABLE_1;
tr 52 M=ING_FLEX_CTR_OFFSET_TABLE_1;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_1 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_1 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_1 TSE=T SLTH=F;
echo " ING_FLEX_CTR_OFFSET_TABLE_2";
tr 50 M=ING_FLEX_CTR_OFFSET_TABLE_2;
tr 51 M=ING_FLEX_CTR_OFFSET_TABLE_2;
tr 52 M=ING_FLEX_CTR_OFFSET_TABLE_2;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_2 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_2 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_2 TSE=T SLTH=F;
echo " ING_FLEX_CTR_OFFSET_TABLE_3";
tr 50 M=ING_FLEX_CTR_OFFSET_TABLE_3;
tr 51 M=ING_FLEX_CTR_OFFSET_TABLE_3;
tr 52 M=ING_FLEX_CTR_OFFSET_TABLE_3;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_3 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_3 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_3 TSE=T SLTH=F;
echo " ING_FLEX_CTR_OFFSET_TABLE_4";
tr 50 M=ING_FLEX_CTR_OFFSET_TABLE_4;
tr 51 M=ING_FLEX_CTR_OFFSET_TABLE_4;
tr 52 M=ING_FLEX_CTR_OFFSET_TABLE_4;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_4 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_4 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_4 TSE=T SLTH=F;
echo " ING_FLEX_CTR_OFFSET_TABLE_5";
tr 50 M=ING_FLEX_CTR_OFFSET_TABLE_5;
tr 51 M=ING_FLEX_CTR_OFFSET_TABLE_5;
tr 52 M=ING_FLEX_CTR_OFFSET_TABLE_5;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_5 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_5 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_5 TSE=T SLTH=F;
echo " ING_FLEX_CTR_OFFSET_TABLE_6";
tr 50 M=ING_FLEX_CTR_OFFSET_TABLE_6;
tr 51 M=ING_FLEX_CTR_OFFSET_TABLE_6;
tr 52 M=ING_FLEX_CTR_OFFSET_TABLE_6;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_6 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_6 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_6 TSE=T SLTH=F;
echo " ING_FLEX_CTR_OFFSET_TABLE_7";
tr 50 M=ING_FLEX_CTR_OFFSET_TABLE_7;
tr 51 M=ING_FLEX_CTR_OFFSET_TABLE_7;
tr 52 M=ING_FLEX_CTR_OFFSET_TABLE_7;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_7 TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_7 TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_OFFSET_TABLE_7 TSE=T SLTH=F;
echo " ING_FLEX_CTR_PKT_PRI_MAP";
tr 50 M=ING_FLEX_CTR_PKT_PRI_MAP;
tr 51 M=ING_FLEX_CTR_PKT_PRI_MAP;
tr 52 M=ING_FLEX_CTR_PKT_PRI_MAP;
tr 71 M=ING_FLEX_CTR_PKT_PRI_MAP TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_PKT_PRI_MAP TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_PKT_PRI_MAP TSE=T SLTH=F;
echo " ING_FLEX_CTR_PKT_RES_MAP";
tr 50 M=ING_FLEX_CTR_PKT_RES_MAP;
tr 51 M=ING_FLEX_CTR_PKT_RES_MAP;
tr 52 M=ING_FLEX_CTR_PKT_RES_MAP;
tr 71 M=ING_FLEX_CTR_PKT_RES_MAP TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_PKT_RES_MAP TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_PKT_RES_MAP TSE=T SLTH=F;
echo " ING_FLEX_CTR_PORT_MAP";
tr 50 M=ING_FLEX_CTR_PORT_MAP;
tr 51 M=ING_FLEX_CTR_PORT_MAP;
tr 52 M=ING_FLEX_CTR_PORT_MAP;
tr 71 M=ING_FLEX_CTR_PORT_MAP TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_PORT_MAP TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_PORT_MAP TSE=T SLTH=F;
echo " ING_FLEX_CTR_PRI_CNG_MAP";
tr 50 M=ING_FLEX_CTR_PRI_CNG_MAP;
tr 51 M=ING_FLEX_CTR_PRI_CNG_MAP;
tr 52 M=ING_FLEX_CTR_PRI_CNG_MAP;
tr 71 M=ING_FLEX_CTR_PRI_CNG_MAP TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_PRI_CNG_MAP TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_PRI_CNG_MAP TSE=T SLTH=F;
echo " ING_FLEX_CTR_TOS_MAP";
tr 50 M=ING_FLEX_CTR_TOS_MAP;
tr 51 M=ING_FLEX_CTR_TOS_MAP;
tr 52 M=ING_FLEX_CTR_TOS_MAP;
tr 71 M=ING_FLEX_CTR_TOS_MAP TSE=F SLTH=T;
tr 71 M=ING_FLEX_CTR_TOS_MAP TSE=T SLTH=T;
tr 71 M=ING_FLEX_CTR_TOS_MAP TSE=T SLTH=F;
echo " ING_HIGIG_TRUNK_OVERRIDE_PROFILE";
tr 50 M=ING_HIGIG_TRUNK_OVERRIDE_PROFILE;
tr 51 M=ING_HIGIG_TRUNK_OVERRIDE_PROFILE;
tr 52 M=ING_HIGIG_TRUNK_OVERRIDE_PROFILE;
tr 71 M=ING_HIGIG_TRUNK_OVERRIDE_PROFILE TSE=F SLTH=T;
tr 71 M=ING_HIGIG_TRUNK_OVERRIDE_PROFILE TSE=T SLTH=T;
tr 71 M=ING_HIGIG_TRUNK_OVERRIDE_PROFILE TSE=T SLTH=F;
echo " ING_L3_NEXT_HOP";
tr 50 M=ING_L3_NEXT_HOP;
tr 51 M=ING_L3_NEXT_HOP;
tr 52 M=ING_L3_NEXT_HOP;
tr 71 M=ING_L3_NEXT_HOP TSE=F SLTH=T;
tr 71 M=ING_L3_NEXT_HOP TSE=T SLTH=T;
tr 71 M=ING_L3_NEXT_HOP TSE=T SLTH=F;
echo " ING_MOD_MAP_TABLE";
tr 50 M=ING_MOD_MAP_TABLE;
tr 51 M=ING_MOD_MAP_TABLE;
tr 52 M=ING_MOD_MAP_TABLE;
tr 71 M=ING_MOD_MAP_TABLE TSE=F SLTH=T;
tr 71 M=ING_MOD_MAP_TABLE TSE=T SLTH=T;
tr 71 M=ING_MOD_MAP_TABLE TSE=T SLTH=F;
echo " ING_MPLS_EXP_MAPPING";
tr 50 M=ING_MPLS_EXP_MAPPING;
tr 51 M=ING_MPLS_EXP_MAPPING;
tr 52 M=ING_MPLS_EXP_MAPPING;
tr 71 M=ING_MPLS_EXP_MAPPING TSE=F SLTH=T;
tr 71 M=ING_MPLS_EXP_MAPPING TSE=T SLTH=T;
tr 71 M=ING_MPLS_EXP_MAPPING TSE=T SLTH=F;
echo " ING_NETWORK_PRUNE_CONTROL";
tr 50 M=ING_NETWORK_PRUNE_CONTROL;
tr 51 M=ING_NETWORK_PRUNE_CONTROL;
tr 52 M=ING_NETWORK_PRUNE_CONTROL;
tr 71 M=ING_NETWORK_PRUNE_CONTROL TSE=F SLTH=T;
tr 71 M=ING_NETWORK_PRUNE_CONTROL TSE=T SLTH=T;
tr 71 M=ING_NETWORK_PRUNE_CONTROL TSE=T SLTH=F;
echo " ING_OAM_DGLP_PROFILE";
tr 50 M=ING_OAM_DGLP_PROFILE;
tr 51 M=ING_OAM_DGLP_PROFILE;
tr 52 M=ING_OAM_DGLP_PROFILE;
tr 71 M=ING_OAM_DGLP_PROFILE TSE=F SLTH=T;
tr 71 M=ING_OAM_DGLP_PROFILE TSE=T SLTH=T;
tr 71 M=ING_OAM_DGLP_PROFILE TSE=T SLTH=F;
echo " ING_OAM_FLEXIBLE_DOMAIN_CONTROL";
tr 50 M=ING_OAM_FLEXIBLE_DOMAIN_CONTROL;
tr 51 M=ING_OAM_FLEXIBLE_DOMAIN_CONTROL;
tr 52 M=ING_OAM_FLEXIBLE_DOMAIN_CONTROL;
tr 71 M=ING_OAM_FLEXIBLE_DOMAIN_CONTROL TSE=F SLTH=T;
tr 71 M=ING_OAM_FLEXIBLE_DOMAIN_CONTROL TSE=T SLTH=T;
tr 71 M=ING_OAM_FLEXIBLE_DOMAIN_CONTROL TSE=T SLTH=F;
#echo " ING_PBI_DEBUG_0_HI";
#tr 50 M=ING_PBI_DEBUG_0_HI;
#tr 51 M=ING_PBI_DEBUG_0_HI;
#tr 52 M=ING_PBI_DEBUG_0_HI;
#tr 71 M=ING_PBI_DEBUG_0_HI TSE=F SLTH=T;
#tr 71 M=ING_PBI_DEBUG_0_HI TSE=T SLTH=T;
#tr 71 M=ING_PBI_DEBUG_0_HI TSE=T SLTH=F;
#echo " ING_PBI_DEBUG_0_LO";
#tr 50 M=ING_PBI_DEBUG_0_LO;
#tr 51 M=ING_PBI_DEBUG_0_LO;
#tr 52 M=ING_PBI_DEBUG_0_LO;
#tr 71 M=ING_PBI_DEBUG_0_LO TSE=F SLTH=T;
#tr 71 M=ING_PBI_DEBUG_0_LO TSE=T SLTH=T;
#tr 71 M=ING_PBI_DEBUG_0_LO TSE=T SLTH=F;
#echo " ING_PBI_DEBUG_1";
#tr 50 M=ING_PBI_DEBUG_1;
#tr 51 M=ING_PBI_DEBUG_1;
#tr 52 M=ING_PBI_DEBUG_1;
#tr 71 M=ING_PBI_DEBUG_1 TSE=F SLTH=T;
#tr 71 M=ING_PBI_DEBUG_1 TSE=T SLTH=T;
#tr 71 M=ING_PBI_DEBUG_1 TSE=T SLTH=F;
echo " ING_PHYSICAL_PORT_TABLE";
tr 50 M=ING_PHYSICAL_PORT_TABLE;
tr 51 M=ING_PHYSICAL_PORT_TABLE;
tr 52 M=ING_PHYSICAL_PORT_TABLE;
tr 71 M=ING_PHYSICAL_PORT_TABLE TSE=F SLTH=T;
tr 71 M=ING_PHYSICAL_PORT_TABLE TSE=T SLTH=T;
tr 71 M=ING_PHYSICAL_PORT_TABLE TSE=T SLTH=F;
echo " ING_PRI_CNG_MAP";
tr 50 M=ING_PRI_CNG_MAP;
tr 51 M=ING_PRI_CNG_MAP;
tr 52 M=ING_PRI_CNG_MAP;
tr 71 M=ING_PRI_CNG_MAP TSE=F SLTH=T;
tr 71 M=ING_PRI_CNG_MAP TSE=T SLTH=T;
tr 71 M=ING_PRI_CNG_MAP TSE=T SLTH=F;
echo " ING_PW_TERM_SEQ_NUM";
tr 50 M=ING_PW_TERM_SEQ_NUM;
tr 51 M=ING_PW_TERM_SEQ_NUM;
tr 52 M=ING_PW_TERM_SEQ_NUM;
tr 71 M=ING_PW_TERM_SEQ_NUM TSE=F SLTH=T;
tr 71 M=ING_PW_TERM_SEQ_NUM TSE=T SLTH=T;
tr 71 M=ING_PW_TERM_SEQ_NUM TSE=T SLTH=F;
echo " ING_QUEUE_MAP";
tr 50 M=ING_QUEUE_MAP;
tr 51 M=ING_QUEUE_MAP;
tr 52 M=ING_QUEUE_MAP;
tr 71 M=ING_QUEUE_MAP TSE=F SLTH=T;
tr 71 M=ING_QUEUE_MAP TSE=T SLTH=T;
tr 71 M=ING_QUEUE_MAP TSE=T SLTH=F;
echo " ING_QUEUE_OFFSET_MAPPING_TABLE";
tr 50 M=ING_QUEUE_OFFSET_MAPPING_TABLE;
tr 51 M=ING_QUEUE_OFFSET_MAPPING_TABLE;
tr 52 M=ING_QUEUE_OFFSET_MAPPING_TABLE;
tr 71 M=ING_QUEUE_OFFSET_MAPPING_TABLE TSE=F SLTH=T;
tr 71 M=ING_QUEUE_OFFSET_MAPPING_TABLE TSE=T SLTH=T;
tr 71 M=ING_QUEUE_OFFSET_MAPPING_TABLE TSE=T SLTH=F;
echo " ING_SERVICE_PRI_MAP";
tr 50 M=ING_SERVICE_PRI_MAP;
tr 51 M=ING_SERVICE_PRI_MAP;
tr 52 M=ING_SERVICE_PRI_MAP;
tr 71 M=ING_SERVICE_PRI_MAP TSE=F SLTH=T;
tr 71 M=ING_SERVICE_PRI_MAP TSE=T SLTH=T;
tr 71 M=ING_SERVICE_PRI_MAP TSE=T SLTH=F;
echo " ING_SVM_PKT_PRI_MAP";
tr 50 M=ING_SVM_PKT_PRI_MAP;
tr 51 M=ING_SVM_PKT_PRI_MAP;
tr 52 M=ING_SVM_PKT_PRI_MAP;
tr 71 M=ING_SVM_PKT_PRI_MAP TSE=F SLTH=T;
tr 71 M=ING_SVM_PKT_PRI_MAP TSE=T SLTH=T;
tr 71 M=ING_SVM_PKT_PRI_MAP TSE=T SLTH=F;
echo " ING_SVM_PKT_RES_MAP";
tr 50 M=ING_SVM_PKT_RES_MAP;
tr 51 M=ING_SVM_PKT_RES_MAP;
tr 52 M=ING_SVM_PKT_RES_MAP;
tr 71 M=ING_SVM_PKT_RES_MAP TSE=F SLTH=T;
tr 71 M=ING_SVM_PKT_RES_MAP TSE=T SLTH=T;
tr 71 M=ING_SVM_PKT_RES_MAP TSE=T SLTH=F;
echo " ING_SVM_PORT_MAP";
tr 50 M=ING_SVM_PORT_MAP;
tr 51 M=ING_SVM_PORT_MAP;
tr 52 M=ING_SVM_PORT_MAP;
tr 71 M=ING_SVM_PORT_MAP TSE=F SLTH=T;
tr 71 M=ING_SVM_PORT_MAP TSE=T SLTH=T;
tr 71 M=ING_SVM_PORT_MAP TSE=T SLTH=F;
echo " ING_SVM_PRI_CNG_MAP";
tr 50 M=ING_SVM_PRI_CNG_MAP;
tr 51 M=ING_SVM_PRI_CNG_MAP;
tr 52 M=ING_SVM_PRI_CNG_MAP;
tr 71 M=ING_SVM_PRI_CNG_MAP TSE=F SLTH=T;
tr 71 M=ING_SVM_PRI_CNG_MAP TSE=T SLTH=T;
tr 71 M=ING_SVM_PRI_CNG_MAP TSE=T SLTH=F;
echo " ING_SVM_TOS_MAP";
tr 50 M=ING_SVM_TOS_MAP;
tr 51 M=ING_SVM_TOS_MAP;
tr 52 M=ING_SVM_TOS_MAP;
tr 71 M=ING_SVM_TOS_MAP TSE=F SLTH=T;
tr 71 M=ING_SVM_TOS_MAP TSE=T SLTH=T;
tr 71 M=ING_SVM_TOS_MAP TSE=T SLTH=F;
echo " ING_UNTAGGED_PHB";
tr 50 M=ING_UNTAGGED_PHB;
tr 51 M=ING_UNTAGGED_PHB;
tr 52 M=ING_UNTAGGED_PHB;
tr 71 M=ING_UNTAGGED_PHB TSE=F SLTH=T;
tr 71 M=ING_UNTAGGED_PHB TSE=T SLTH=T;
tr 71 M=ING_UNTAGGED_PHB TSE=T SLTH=F;
echo " ING_VLAN_RANGE";
tr 50 M=ING_VLAN_RANGE;
tr 51 M=ING_VLAN_RANGE;
tr 52 M=ING_VLAN_RANGE;
tr 71 M=ING_VLAN_RANGE TSE=F SLTH=T;
tr 71 M=ING_VLAN_RANGE TSE=T SLTH=T;
tr 71 M=ING_VLAN_RANGE TSE=T SLTH=F;
echo " ING_VLAN_TAG_ACTION_PROFILE";
tr 50 M=ING_VLAN_TAG_ACTION_PROFILE;
tr 51 M=ING_VLAN_TAG_ACTION_PROFILE;
tr 52 M=ING_VLAN_TAG_ACTION_PROFILE;
tr 71 M=ING_VLAN_TAG_ACTION_PROFILE TSE=F SLTH=T;
tr 71 M=ING_VLAN_TAG_ACTION_PROFILE TSE=T SLTH=T;
tr 71 M=ING_VLAN_TAG_ACTION_PROFILE TSE=T SLTH=F;
echo " INITIAL_ING_L3_NEXT_HOP";
tr 50 M=INITIAL_ING_L3_NEXT_HOP;
tr 51 M=INITIAL_ING_L3_NEXT_HOP;
tr 52 M=INITIAL_ING_L3_NEXT_HOP;
tr 71 M=INITIAL_ING_L3_NEXT_HOP TSE=F SLTH=T;
tr 71 M=INITIAL_ING_L3_NEXT_HOP TSE=T SLTH=T;
tr 71 M=INITIAL_ING_L3_NEXT_HOP TSE=T SLTH=F;
echo " INITIAL_L3_ECMP";
tr 50 M=INITIAL_L3_ECMP;
tr 51 M=INITIAL_L3_ECMP;
tr 52 M=INITIAL_L3_ECMP;
tr 71 M=INITIAL_L3_ECMP TSE=F SLTH=T;
tr 71 M=INITIAL_L3_ECMP TSE=T SLTH=T;
tr 71 M=INITIAL_L3_ECMP TSE=T SLTH=F;
echo " INITIAL_L3_ECMP_GROUP";
tr 50 M=INITIAL_L3_ECMP_GROUP;
tr 51 M=INITIAL_L3_ECMP_GROUP;
tr 52 M=INITIAL_L3_ECMP_GROUP;
tr 71 M=INITIAL_L3_ECMP_GROUP TSE=F SLTH=T;
tr 71 M=INITIAL_L3_ECMP_GROUP TSE=T SLTH=T;
tr 71 M=INITIAL_L3_ECMP_GROUP TSE=T SLTH=F;
echo " INITIAL_PROT_GROUP_TABLE";
tr 50 M=INITIAL_PROT_GROUP_TABLE;
tr 51 M=INITIAL_PROT_GROUP_TABLE;
tr 52 M=INITIAL_PROT_GROUP_TABLE;
tr 71 M=INITIAL_PROT_GROUP_TABLE TSE=F SLTH=T;
tr 71 M=INITIAL_PROT_GROUP_TABLE TSE=T SLTH=T;
tr 71 M=INITIAL_PROT_GROUP_TABLE TSE=T SLTH=F;
echo " INITIAL_PROT_NHI_TABLE";
tr 50 M=INITIAL_PROT_NHI_TABLE;
tr 51 M=INITIAL_PROT_NHI_TABLE;
tr 52 M=INITIAL_PROT_NHI_TABLE;
tr 71 M=INITIAL_PROT_NHI_TABLE TSE=F SLTH=T;
tr 71 M=INITIAL_PROT_NHI_TABLE TSE=T SLTH=T;
tr 71 M=INITIAL_PROT_NHI_TABLE TSE=T SLTH=F;
echo " INITIAL_PROT_NHI_TABLE_1";
tr 50 M=INITIAL_PROT_NHI_TABLE_1;
tr 51 M=INITIAL_PROT_NHI_TABLE_1;
tr 52 M=INITIAL_PROT_NHI_TABLE_1;
tr 71 M=INITIAL_PROT_NHI_TABLE_1 TSE=F SLTH=T;
tr 71 M=INITIAL_PROT_NHI_TABLE_1 TSE=T SLTH=T;
tr 71 M=INITIAL_PROT_NHI_TABLE_1 TSE=T SLTH=F;
echo " INITIAL_PROT_NHI_TABLE_1_DMA";
tr 50 M=INITIAL_PROT_NHI_TABLE_1_DMA;
tr 51 M=INITIAL_PROT_NHI_TABLE_1_DMA;
tr 52 M=INITIAL_PROT_NHI_TABLE_1_DMA;
tr 71 M=INITIAL_PROT_NHI_TABLE_1_DMA TSE=F SLTH=T;
tr 71 M=INITIAL_PROT_NHI_TABLE_1_DMA TSE=T SLTH=T;
tr 71 M=INITIAL_PROT_NHI_TABLE_1_DMA TSE=T SLTH=F;
echo " IPV4_IN_IPV6_PREFIX_MATCH_TABLE";
tr 50 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE;
tr 51 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE;
tr 52 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE;
tr 71 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE TSE=F SLTH=T;
tr 71 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE TSE=T SLTH=T;
tr 71 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE TSE=T SLTH=F;
echo " KNOWN_MCAST_BLOCK_MASK";
tr 50 M=KNOWN_MCAST_BLOCK_MASK;
tr 51 M=KNOWN_MCAST_BLOCK_MASK;
tr 52 M=KNOWN_MCAST_BLOCK_MASK;
tr 71 M=KNOWN_MCAST_BLOCK_MASK TSE=F SLTH=T;
tr 71 M=KNOWN_MCAST_BLOCK_MASK TSE=T SLTH=T;
tr 71 M=KNOWN_MCAST_BLOCK_MASK TSE=T SLTH=F;
echo " L2MC";
tr 50 M=L2MC;
tr 51 M=L2MC;
tr 52 M=L2MC;
tr 71 M=L2MC TSE=F SLTH=T;
tr 71 M=L2MC TSE=T SLTH=T;
tr 71 M=L2MC TSE=T SLTH=F;
echo " L2X";
tr 50 M=L2X;
tr 51 M=L2X;
tr 52 M=L2X;
tr 71 M=L2X TSE=F SLTH=T;
tr 71 M=L2X TSE=T SLTH=T;
tr 71 M=L2X TSE=T SLTH=F;
echo " L2_BULK_MATCH_DATA";
tr 50 M=L2_BULK_MATCH_DATA;
#tr 51 M=L2_BULK_MATCH_DATA;
#tr 52 M=L2_BULK_MATCH_DATA;
tr 71 M=L2_BULK_MATCH_DATA TSE=F SLTH=T;
tr 71 M=L2_BULK_MATCH_DATA TSE=T SLTH=T;
tr 71 M=L2_BULK_MATCH_DATA TSE=T SLTH=F;
echo " L2_BULK_MATCH_MASK";
tr 50 M=L2_BULK_MATCH_MASK;
#tr 51 M=L2_BULK_MATCH_MASK;
#tr 52 M=L2_BULK_MATCH_MASK;
tr 71 M=L2_BULK_MATCH_MASK TSE=F SLTH=T;
tr 71 M=L2_BULK_MATCH_MASK TSE=T SLTH=T;
tr 71 M=L2_BULK_MATCH_MASK TSE=T SLTH=F;
echo " L2_BULK_MATCH_VLANS_PORT_A";
tr 50 M=L2_BULK_MATCH_VLANS_PORT_A;
tr 51 M=L2_BULK_MATCH_VLANS_PORT_A;
tr 52 M=L2_BULK_MATCH_VLANS_PORT_A;
tr 71 M=L2_BULK_MATCH_VLANS_PORT_A TSE=F SLTH=T;
tr 71 M=L2_BULK_MATCH_VLANS_PORT_A TSE=T SLTH=T;
tr 71 M=L2_BULK_MATCH_VLANS_PORT_A TSE=T SLTH=F;
echo " L2_BULK_MATCH_VLANS_PORT_B";
tr 50 M=L2_BULK_MATCH_VLANS_PORT_B;
tr 51 M=L2_BULK_MATCH_VLANS_PORT_B;
tr 52 M=L2_BULK_MATCH_VLANS_PORT_B;
tr 71 M=L2_BULK_MATCH_VLANS_PORT_B TSE=F SLTH=T;
tr 71 M=L2_BULK_MATCH_VLANS_PORT_B TSE=T SLTH=T;
tr 71 M=L2_BULK_MATCH_VLANS_PORT_B TSE=T SLTH=F;
echo " L2_BULK_REPLACE_DATA";
tr 50 M=L2_BULK_REPLACE_DATA;
#tr 51 M=L2_BULK_REPLACE_DATA;
#tr 52 M=L2_BULK_REPLACE_DATA;
tr 71 M=L2_BULK_REPLACE_DATA TSE=F SLTH=T;
tr 71 M=L2_BULK_REPLACE_DATA TSE=T SLTH=T;
tr 71 M=L2_BULK_REPLACE_DATA TSE=T SLTH=F;
echo " L2_BULK_REPLACE_MASK";
tr 50 M=L2_BULK_REPLACE_MASK;
#tr 51 M=L2_BULK_REPLACE_MASK;
#tr 52 M=L2_BULK_REPLACE_MASK;
tr 71 M=L2_BULK_REPLACE_MASK TSE=F SLTH=T;
tr 71 M=L2_BULK_REPLACE_MASK TSE=T SLTH=T;
tr 71 M=L2_BULK_REPLACE_MASK TSE=T SLTH=F;
echo " L2_ENTRY_ONLY";
tr 50 M=L2_ENTRY_ONLY;
tr 51 M=L2_ENTRY_ONLY;
tr 52 M=L2_ENTRY_ONLY;
tr 71 M=L2_ENTRY_ONLY TSE=F SLTH=T;
tr 71 M=L2_ENTRY_ONLY TSE=T SLTH=T;
tr 71 M=L2_ENTRY_ONLY TSE=T SLTH=F;
echo " L2_ENTRY_OVERFLOW";
tr 50 M=L2_ENTRY_OVERFLOW;
#tr 51 M=L2_ENTRY_OVERFLOW;
#tr 52 M=L2_ENTRY_OVERFLOW;
tr 71 M=L2_ENTRY_OVERFLOW TSE=F SLTH=T;
tr 71 M=L2_ENTRY_OVERFLOW TSE=T SLTH=T;
tr 71 M=L2_ENTRY_OVERFLOW TSE=T SLTH=F;
echo " L2_HITDA_ONLY";
tr 50 M=L2_HITDA_ONLY;
tr 51 M=L2_HITDA_ONLY;
tr 52 M=L2_HITDA_ONLY;
tr 71 M=L2_HITDA_ONLY TSE=F SLTH=T;
tr 71 M=L2_HITDA_ONLY TSE=T SLTH=T;
tr 71 M=L2_HITDA_ONLY TSE=T SLTH=F;
echo " L2_HITSA_ONLY";
tr 50 M=L2_HITSA_ONLY;
tr 51 M=L2_HITSA_ONLY;
tr 52 M=L2_HITSA_ONLY;
tr 71 M=L2_HITSA_ONLY TSE=F SLTH=T;
tr 71 M=L2_HITSA_ONLY TSE=T SLTH=T;
tr 71 M=L2_HITSA_ONLY TSE=T SLTH=F;
echo " L2_MOD_FIFO";
tr 50 M=L2_MOD_FIFO;
tr 51 M=L2_MOD_FIFO;
tr 52 M=L2_MOD_FIFO;
tr 71 M=L2_MOD_FIFO TSE=F SLTH=T;
tr 71 M=L2_MOD_FIFO TSE=T SLTH=T;
tr 71 M=L2_MOD_FIFO TSE=T SLTH=F;
echo " L2_USER_ENTRY";
tr 50 M=L2_USER_ENTRY;
tr 51 M=L2_USER_ENTRY;
tr 52 M=L2_USER_ENTRY;
tr 71 M=L2_USER_ENTRY TSE=F SLTH=T;
tr 71 M=L2_USER_ENTRY TSE=T SLTH=T;
tr 71 M=L2_USER_ENTRY TSE=T SLTH=F;
echo " L2_USER_ENTRY_DATA_ONLY";
tr 50 M=L2_USER_ENTRY_DATA_ONLY;
tr 51 M=L2_USER_ENTRY_DATA_ONLY;
tr 52 M=L2_USER_ENTRY_DATA_ONLY;
tr 71 M=L2_USER_ENTRY_DATA_ONLY TSE=F SLTH=T;
tr 71 M=L2_USER_ENTRY_DATA_ONLY TSE=T SLTH=T;
tr 71 M=L2_USER_ENTRY_DATA_ONLY TSE=T SLTH=F;
echo " L2_USER_ENTRY_ONLY";
tr 50 M=L2_USER_ENTRY_ONLY;
tr 51 M=L2_USER_ENTRY_ONLY;
tr 52 M=L2_USER_ENTRY_ONLY;
tr 71 M=L2_USER_ENTRY_ONLY TSE=F SLTH=T;
tr 71 M=L2_USER_ENTRY_ONLY TSE=T SLTH=T;
tr 71 M=L2_USER_ENTRY_ONLY TSE=T SLTH=F;
if !$?LIKE_BCM55455 \
   'echo " L3_DEFIP"; \
    tr 50 M=L3_DEFIP; \
    tr 51 M=L3_DEFIP; \
    tr 52 M=L3_DEFIP; \
    tr 71 M=L3_DEFIP TSE=F SLTH=T; \
    tr 71 M=L3_DEFIP TSE=T SLTH=T; \
    tr 71 M=L3_DEFIP TSE=T SLTH=F; \
    echo " L3_DEFIP_DATA_ONLY"; \
    tr 50 M=L3_DEFIP_DATA_ONLY; \
    tr 51 M=L3_DEFIP_DATA_ONLY; \
    tr 52 M=L3_DEFIP_DATA_ONLY; \
    tr 71 M=L3_DEFIP_DATA_ONLY TSE=F SLTH=T; \
    tr 71 M=L3_DEFIP_DATA_ONLY TSE=T SLTH=T; \
    tr 71 M=L3_DEFIP_DATA_ONLY TSE=T SLTH=F; \
    echo " L3_DEFIP_HIT_ONLY"; \
    tr 50 M=L3_DEFIP_HIT_ONLY; \
    tr 51 M=L3_DEFIP_HIT_ONLY; \
    tr 52 M=L3_DEFIP_HIT_ONLY; \
    tr 71 M=L3_DEFIP_HIT_ONLY TSE=F SLTH=T; \
    tr 71 M=L3_DEFIP_HIT_ONLY TSE=T SLTH=T; \
    tr 71 M=L3_DEFIP_HIT_ONLY TSE=T SLTH=F; \
    echo " L3_DEFIP_ONLY"; \
    tr 50 M=L3_DEFIP_ONLY; \
    tr 51 M=L3_DEFIP_ONLY; \
    tr 52 M=L3_DEFIP_ONLY; \
    tr 71 M=L3_DEFIP_ONLY TSE=F SLTH=T; \
    tr 71 M=L3_DEFIP_ONLY TSE=T SLTH=T; \
    tr 71 M=L3_DEFIP_ONLY TSE=T SLTH=F; \
    kt2sanity_ecc_off.soc \
    echo " L3_DEFIP_PAIR_128"; \
    tr 50 M=L3_DEFIP_PAIR_128; \
    tr 51 M=L3_DEFIP_PAIR_128; \
    tr 52 M=L3_DEFIP_PAIR_128; \
    tr 71 M=L3_DEFIP_PAIR_128 TSE=F SLTH=T; \
    tr 71 M=L3_DEFIP_PAIR_128 TSE=T SLTH=T; \
    tr 71 M=L3_DEFIP_PAIR_128 TSE=T SLTH=F; \
    echo " L3_DEFIP_PAIR_128_DATA_ONLY"; \
    tr 50 M=L3_DEFIP_PAIR_128_DATA_ONLY; \
    tr 51 M=L3_DEFIP_PAIR_128_DATA_ONLY; \
    tr 52 M=L3_DEFIP_PAIR_128_DATA_ONLY; \
    tr 71 M=L3_DEFIP_PAIR_128_DATA_ONLY TSE=F SLTH=T; \
    tr 71 M=L3_DEFIP_PAIR_128_DATA_ONLY TSE=T SLTH=T; \
    tr 71 M=L3_DEFIP_PAIR_128_DATA_ONLY TSE=T SLTH=F; \
    echo " L3_DEFIP_PAIR_128_HIT_ONLY"; \
    tr 50 M=L3_DEFIP_PAIR_128_HIT_ONLY; \
    tr 51 M=L3_DEFIP_PAIR_128_HIT_ONLY; \
    tr 52 M=L3_DEFIP_PAIR_128_HIT_ONLY; \
    tr 71 M=L3_DEFIP_PAIR_128_HIT_ONLY TSE=F SLTH=T; \
    tr 71 M=L3_DEFIP_PAIR_128_HIT_ONLY TSE=T SLTH=T; \
    tr 71 M=L3_DEFIP_PAIR_128_HIT_ONLY TSE=T SLTH=F; \
    echo " L3_DEFIP_PAIR_128_ONLY"; \
    tr 50 M=L3_DEFIP_PAIR_128_ONLY; \
    tr 51 M=L3_DEFIP_PAIR_128_ONLY; \
    tr 52 M=L3_DEFIP_PAIR_128_ONLY; \
    tr 71 M=L3_DEFIP_PAIR_128_ONLY TSE=F SLTH=T; \
    tr 71 M=L3_DEFIP_PAIR_128_ONLY TSE=T SLTH=T; \
    tr 71 M=L3_DEFIP_PAIR_128_ONLY TSE=T SLTH=F; \
    $done;'
echo " L3_ECMP";
tr 50 M=L3_ECMP;
tr 51 M=L3_ECMP;
tr 52 M=L3_ECMP;
tr 71 M=L3_ECMP TSE=F SLTH=T;
tr 71 M=L3_ECMP TSE=T SLTH=T;
tr 71 M=L3_ECMP TSE=T SLTH=F;
echo " L3_ECMP_COUNT";
tr 50 M=L3_ECMP_COUNT;
tr 51 M=L3_ECMP_COUNT;
tr 52 M=L3_ECMP_COUNT;
tr 71 M=L3_ECMP_COUNT TSE=F SLTH=T;
tr 71 M=L3_ECMP_COUNT TSE=T SLTH=T;
tr 71 M=L3_ECMP_COUNT TSE=T SLTH=F;
echo " L3_ENTRY_HIT_ONLY";
tr 50 M=L3_ENTRY_HIT_ONLY;
tr 51 M=L3_ENTRY_HIT_ONLY;
tr 52 M=L3_ENTRY_HIT_ONLY;
tr 71 M=L3_ENTRY_HIT_ONLY TSE=F SLTH=T;
tr 71 M=L3_ENTRY_HIT_ONLY TSE=T SLTH=T;
tr 71 M=L3_ENTRY_HIT_ONLY TSE=T SLTH=F;
echo " L3_ENTRY_IPV4_MULTICAST";
tr 50 M=L3_ENTRY_IPV4_MULTICAST;
tr 51 M=L3_ENTRY_IPV4_MULTICAST;
tr 52 M=L3_ENTRY_IPV4_MULTICAST;
tr 71 M=L3_ENTRY_IPV4_MULTICAST TSE=F SLTH=T;
tr 71 M=L3_ENTRY_IPV4_MULTICAST TSE=T SLTH=T;
tr 71 M=L3_ENTRY_IPV4_MULTICAST TSE=T SLTH=F;
echo " L3_ENTRY_IPV4_UNICAST";
tr 50 M=L3_ENTRY_IPV4_UNICAST;
tr 51 M=L3_ENTRY_IPV4_UNICAST;
tr 52 M=L3_ENTRY_IPV4_UNICAST;
tr 71 M=L3_ENTRY_IPV4_UNICAST TSE=F SLTH=T;
tr 71 M=L3_ENTRY_IPV4_UNICAST TSE=T SLTH=T;
tr 71 M=L3_ENTRY_IPV4_UNICAST TSE=T SLTH=F;
echo " L3_ENTRY_IPV6_MULTICAST";
tr 50 M=L3_ENTRY_IPV6_MULTICAST;
tr 51 M=L3_ENTRY_IPV6_MULTICAST;
tr 52 M=L3_ENTRY_IPV6_MULTICAST;
tr 71 M=L3_ENTRY_IPV6_MULTICAST TSE=F SLTH=T;
tr 71 M=L3_ENTRY_IPV6_MULTICAST TSE=T SLTH=T;
tr 71 M=L3_ENTRY_IPV6_MULTICAST TSE=T SLTH=F;
echo " L3_ENTRY_IPV6_UNICAST";
tr 50 M=L3_ENTRY_IPV6_UNICAST;
tr 51 M=L3_ENTRY_IPV6_UNICAST;
tr 52 M=L3_ENTRY_IPV6_UNICAST;
tr 71 M=L3_ENTRY_IPV6_UNICAST TSE=F SLTH=T;
tr 71 M=L3_ENTRY_IPV6_UNICAST TSE=T SLTH=T;
tr 71 M=L3_ENTRY_IPV6_UNICAST TSE=T SLTH=F;
echo " L3_ENTRY_ONLY";
tr 50 M=L3_ENTRY_ONLY;
tr 51 M=L3_ENTRY_ONLY;
tr 52 M=L3_ENTRY_ONLY;
tr 71 M=L3_ENTRY_ONLY TSE=F SLTH=T;
tr 71 M=L3_ENTRY_ONLY TSE=T SLTH=T;
tr 71 M=L3_ENTRY_ONLY TSE=T SLTH=F;
echo " L3_IIF";
tr 50 M=L3_IIF;
tr 51 M=L3_IIF;
tr 52 M=L3_IIF;
tr 71 M=L3_IIF TSE=F SLTH=T;
tr 71 M=L3_IIF TSE=T SLTH=T;
tr 71 M=L3_IIF TSE=T SLTH=F;
echo " L3_IPMC";
tr 50 M=L3_IPMC;
tr 51 M=L3_IPMC;
tr 52 M=L3_IPMC;
tr 71 M=L3_IPMC TSE=F SLTH=T;
tr 71 M=L3_IPMC TSE=T SLTH=T;
tr 71 M=L3_IPMC TSE=T SLTH=F;
echo " L3_IPMC_1";
tr 50 M=L3_IPMC_1;
tr 51 M=L3_IPMC_1;
tr 52 M=L3_IPMC_1;
tr 71 M=L3_IPMC_1 TSE=F SLTH=T;
tr 71 M=L3_IPMC_1 TSE=T SLTH=T;
tr 71 M=L3_IPMC_1 TSE=T SLTH=F;
echo " L3_IPMC_2";
tr 50 M=L3_IPMC_2;
tr 51 M=L3_IPMC_2;
tr 52 M=L3_IPMC_2;
tr 71 M=L3_IPMC_2 TSE=F SLTH=T;
tr 71 M=L3_IPMC_2 TSE=T SLTH=T;
tr 71 M=L3_IPMC_2 TSE=T SLTH=F;
echo " L3_IPMC_REMAP";
tr 50 M=L3_IPMC_REMAP;
tr 51 M=L3_IPMC_REMAP;
tr 52 M=L3_IPMC_REMAP;
tr 71 M=L3_IPMC_REMAP TSE=F SLTH=T;
tr 71 M=L3_IPMC_REMAP TSE=T SLTH=T;
tr 71 M=L3_IPMC_REMAP TSE=T SLTH=F;
echo " L3_MTU_VALUES";
tr 50 M=L3_MTU_VALUES;
tr 51 M=L3_MTU_VALUES;
tr 52 M=L3_MTU_VALUES;
tr 71 M=L3_MTU_VALUES TSE=F SLTH=T;
tr 71 M=L3_MTU_VALUES TSE=T SLTH=T;
tr 71 M=L3_MTU_VALUES TSE=T SLTH=F;
echo " L3_TUNNEL";
tr 50 M=L3_TUNNEL;
tr 51 M=L3_TUNNEL;
tr 52 M=L3_TUNNEL;
tr 71 M=L3_TUNNEL TSE=F SLTH=T;
tr 71 M=L3_TUNNEL TSE=T SLTH=T;
tr 71 M=L3_TUNNEL TSE=T SLTH=F;
echo " L3_TUNNEL_DATA_ONLY";
tr 50 M=L3_TUNNEL_DATA_ONLY;
tr 51 M=L3_TUNNEL_DATA_ONLY;
tr 52 M=L3_TUNNEL_DATA_ONLY;
tr 71 M=L3_TUNNEL_DATA_ONLY TSE=F SLTH=T;
tr 71 M=L3_TUNNEL_DATA_ONLY TSE=T SLTH=T;
tr 71 M=L3_TUNNEL_DATA_ONLY TSE=T SLTH=F;
echo " L3_TUNNEL_ONLY";
tr 50 M=L3_TUNNEL_ONLY;
tr 51 M=L3_TUNNEL_ONLY;
tr 52 M=L3_TUNNEL_ONLY;
tr 71 M=L3_TUNNEL_ONLY TSE=F SLTH=T;
tr 71 M=L3_TUNNEL_ONLY TSE=T SLTH=T;
tr 71 M=L3_TUNNEL_ONLY TSE=T SLTH=F;
#echo " LINK_STATUS";
#tr 50 M=LINK_STATUS;
#tr 51 M=LINK_STATUS;
#tr 52 M=LINK_STATUS;
#tr 71 M=LINK_STATUS TSE=F SLTH=T;
#tr 71 M=LINK_STATUS TSE=T SLTH=T;
#tr 71 M=LINK_STATUS TSE=T SLTH=F;
echo " LLS_L0_CHILD_STATE1";
tr 50 M=LLS_L0_CHILD_STATE1;
tr 51 M=LLS_L0_CHILD_STATE1;
tr 52 M=LLS_L0_CHILD_STATE1;
tr 71 M=LLS_L0_CHILD_STATE1 TSE=F SLTH=T;
tr 71 M=LLS_L0_CHILD_STATE1 TSE=T SLTH=T;
tr 71 M=LLS_L0_CHILD_STATE1 TSE=T SLTH=F;
echo " LLS_L0_CHILD_WEIGHT_CFG_CNT";
tr 50 M=LLS_L0_CHILD_WEIGHT_CFG_CNT;
tr 51 M=LLS_L0_CHILD_WEIGHT_CFG_CNT;
tr 52 M=LLS_L0_CHILD_WEIGHT_CFG_CNT;
tr 71 M=LLS_L0_CHILD_WEIGHT_CFG_CNT TSE=F SLTH=T;
tr 71 M=LLS_L0_CHILD_WEIGHT_CFG_CNT TSE=T SLTH=T;
tr 71 M=LLS_L0_CHILD_WEIGHT_CFG_CNT TSE=T SLTH=F;
echo " LLS_L0_CONFIG";
tr 50 M=LLS_L0_CONFIG;
tr 51 M=LLS_L0_CONFIG;
tr 52 M=LLS_L0_CONFIG;
tr 71 M=LLS_L0_CONFIG TSE=F SLTH=T;
tr 71 M=LLS_L0_CONFIG TSE=T SLTH=T;
tr 71 M=LLS_L0_CONFIG TSE=T SLTH=F;
echo " LLS_L0_EF_NEXT";
tr 50 M=LLS_L0_EF_NEXT;
tr 51 M=LLS_L0_EF_NEXT;
tr 52 M=LLS_L0_EF_NEXT;
tr 71 M=LLS_L0_EF_NEXT TSE=F SLTH=T;
tr 71 M=LLS_L0_EF_NEXT TSE=T SLTH=T;
tr 71 M=LLS_L0_EF_NEXT TSE=T SLTH=F;
echo " LLS_L0_ERROR";
tr 50 M=LLS_L0_ERROR;
tr 51 M=LLS_L0_ERROR;
tr 52 M=LLS_L0_ERROR;
tr 71 M=LLS_L0_ERROR TSE=F SLTH=T;
tr 71 M=LLS_L0_ERROR TSE=T SLTH=T;
tr 71 M=LLS_L0_ERROR TSE=T SLTH=F;
echo " LLS_L0_ERROR_MIN";
tr 50 M=LLS_L0_ERROR_MIN;
tr 51 M=LLS_L0_ERROR_MIN;
tr 52 M=LLS_L0_ERROR_MIN;
tr 71 M=LLS_L0_ERROR_MIN TSE=F SLTH=T;
tr 71 M=LLS_L0_ERROR_MIN TSE=T SLTH=T;
tr 71 M=LLS_L0_ERROR_MIN TSE=T SLTH=F;
echo " LLS_L0_HEADS_TAILS";
tr 50 M=LLS_L0_HEADS_TAILS;
tr 51 M=LLS_L0_HEADS_TAILS;
tr 52 M=LLS_L0_HEADS_TAILS;
tr 71 M=LLS_L0_HEADS_TAILS TSE=F SLTH=T;
tr 71 M=LLS_L0_HEADS_TAILS TSE=T SLTH=T;
tr 71 M=LLS_L0_HEADS_TAILS TSE=T SLTH=F;
#echo " LLS_L0_MIN_BUCKET_C";
#tr 50 M=LLS_L0_MIN_BUCKET_C;
#tr 51 M=LLS_L0_MIN_BUCKET_C;
#tr 52 M=LLS_L0_MIN_BUCKET_C;
#tr 71 M=LLS_L0_MIN_BUCKET_C TSE=F SLTH=T;
#tr 71 M=LLS_L0_MIN_BUCKET_C TSE=T SLTH=T;
#tr 71 M=LLS_L0_MIN_BUCKET_C TSE=T SLTH=F;
echo " LLS_L0_MIN_CONFIG_C";
tr 50 M=LLS_L0_MIN_CONFIG_C;
tr 51 M=LLS_L0_MIN_CONFIG_C;
tr 52 M=LLS_L0_MIN_CONFIG_C;
tr 71 M=LLS_L0_MIN_CONFIG_C TSE=F SLTH=T;
tr 71 M=LLS_L0_MIN_CONFIG_C TSE=T SLTH=T;
tr 71 M=LLS_L0_MIN_CONFIG_C TSE=T SLTH=F;
echo " LLS_L0_MIN_NEXT";
tr 50 M=LLS_L0_MIN_NEXT;
tr 51 M=LLS_L0_MIN_NEXT;
tr 52 M=LLS_L0_MIN_NEXT;
tr 71 M=LLS_L0_MIN_NEXT TSE=F SLTH=T;
tr 71 M=LLS_L0_MIN_NEXT TSE=T SLTH=T;
tr 71 M=LLS_L0_MIN_NEXT TSE=T SLTH=F;
echo " LLS_L0_PARENT";
tr 50 M=LLS_L0_PARENT;
tr 51 M=LLS_L0_PARENT;
tr 52 M=LLS_L0_PARENT;
tr 71 M=LLS_L0_PARENT TSE=F SLTH=T;
tr 71 M=LLS_L0_PARENT TSE=T SLTH=T;
tr 71 M=LLS_L0_PARENT TSE=T SLTH=F;
echo " LLS_L0_PARENT_STATE";
tr 50 M=LLS_L0_PARENT_STATE;
tr 51 M=LLS_L0_PARENT_STATE;
tr 52 M=LLS_L0_PARENT_STATE;
tr 71 M=LLS_L0_PARENT_STATE TSE=F SLTH=T;
tr 71 M=LLS_L0_PARENT_STATE TSE=T SLTH=T;
tr 71 M=LLS_L0_PARENT_STATE TSE=T SLTH=F;
#echo " LLS_L0_SHAPER_BUCKET_C";
#tr 50 M=LLS_L0_SHAPER_BUCKET_C;
#tr 51 M=LLS_L0_SHAPER_BUCKET_C;
#tr 52 M=LLS_L0_SHAPER_BUCKET_C;
#tr 71 M=LLS_L0_SHAPER_BUCKET_C TSE=F SLTH=T;
#tr 71 M=LLS_L0_SHAPER_BUCKET_C TSE=T SLTH=T;
#tr 71 M=LLS_L0_SHAPER_BUCKET_C TSE=T SLTH=F;
echo " LLS_L0_SHAPER_CONFIG_C";
tr 50 M=LLS_L0_SHAPER_CONFIG_C;
tr 51 M=LLS_L0_SHAPER_CONFIG_C;
tr 52 M=LLS_L0_SHAPER_CONFIG_C;
tr 71 M=LLS_L0_SHAPER_CONFIG_C TSE=F SLTH=T;
tr 71 M=LLS_L0_SHAPER_CONFIG_C TSE=T SLTH=T;
tr 71 M=LLS_L0_SHAPER_CONFIG_C TSE=T SLTH=F;
echo " LLS_L0_WERR_MAX_SC";
tr 50 M=LLS_L0_WERR_MAX_SC;
tr 51 M=LLS_L0_WERR_MAX_SC;
tr 52 M=LLS_L0_WERR_MAX_SC;
tr 71 M=LLS_L0_WERR_MAX_SC TSE=F SLTH=T;
tr 71 M=LLS_L0_WERR_MAX_SC TSE=T SLTH=T;
tr 71 M=LLS_L0_WERR_MAX_SC TSE=T SLTH=F;
echo " LLS_L0_WERR_NEXT";
tr 50 M=LLS_L0_WERR_NEXT;
tr 51 M=LLS_L0_WERR_NEXT;
tr 52 M=LLS_L0_WERR_NEXT;
tr 71 M=LLS_L0_WERR_NEXT TSE=F SLTH=T;
tr 71 M=LLS_L0_WERR_NEXT TSE=T SLTH=T;
tr 71 M=LLS_L0_WERR_NEXT TSE=T SLTH=F;
echo " LLS_L0_XOFF";
#tr 50 M=LLS_L0_XOFF;
#tr 51 M=LLS_L0_XOFF;
#tr 52 M=LLS_L0_XOFF;
#tr 71 M=LLS_L0_XOFF TSE=F SLTH=T;
#tr 71 M=LLS_L0_XOFF TSE=T SLTH=T;
#tr 71 M=LLS_L0_XOFF TSE=T SLTH=F;
echo " LLS_L1_CHILD_STATE1";
#tr 50 M=LLS_L1_CHILD_STATE1;
#tr 51 M=LLS_L1_CHILD_STATE1;
#tr 52 M=LLS_L1_CHILD_STATE1;
#tr 71 M=LLS_L1_CHILD_STATE1 TSE=F SLTH=T;
#tr 71 M=LLS_L1_CHILD_STATE1 TSE=T SLTH=T;
#tr 71 M=LLS_L1_CHILD_STATE1 TSE=T SLTH=F;
echo " LLS_L1_CHILD_WEIGHT_CFG_CNT";
tr 50 M=LLS_L1_CHILD_WEIGHT_CFG_CNT;
tr 51 M=LLS_L1_CHILD_WEIGHT_CFG_CNT;
tr 52 M=LLS_L1_CHILD_WEIGHT_CFG_CNT;
tr 71 M=LLS_L1_CHILD_WEIGHT_CFG_CNT TSE=F SLTH=T;
tr 71 M=LLS_L1_CHILD_WEIGHT_CFG_CNT TSE=T SLTH=T;
tr 71 M=LLS_L1_CHILD_WEIGHT_CFG_CNT TSE=T SLTH=F;
echo " LLS_L1_CONFIG";
tr 50 M=LLS_L1_CONFIG;
tr 51 M=LLS_L1_CONFIG;
tr 52 M=LLS_L1_CONFIG;
tr 71 M=LLS_L1_CONFIG TSE=F SLTH=T;
tr 71 M=LLS_L1_CONFIG TSE=T SLTH=T;
tr 71 M=LLS_L1_CONFIG TSE=T SLTH=F;
echo " LLS_L1_EF_NEXT";
tr 50 M=LLS_L1_EF_NEXT;
tr 51 M=LLS_L1_EF_NEXT;
tr 52 M=LLS_L1_EF_NEXT;
tr 71 M=LLS_L1_EF_NEXT TSE=F SLTH=T;
tr 71 M=LLS_L1_EF_NEXT TSE=T SLTH=T;
tr 71 M=LLS_L1_EF_NEXT TSE=T SLTH=F;
echo " LLS_L1_ERROR";
tr 50 M=LLS_L1_ERROR;
tr 51 M=LLS_L1_ERROR;
tr 52 M=LLS_L1_ERROR;
tr 71 M=LLS_L1_ERROR TSE=F SLTH=T;
tr 71 M=LLS_L1_ERROR TSE=T SLTH=T;
tr 71 M=LLS_L1_ERROR TSE=T SLTH=F;
echo " LLS_L1_ERROR_MIN";
tr 50 M=LLS_L1_ERROR_MIN;
tr 51 M=LLS_L1_ERROR_MIN;
tr 52 M=LLS_L1_ERROR_MIN;
tr 71 M=LLS_L1_ERROR_MIN TSE=F SLTH=T;
tr 71 M=LLS_L1_ERROR_MIN TSE=T SLTH=T;
tr 71 M=LLS_L1_ERROR_MIN TSE=T SLTH=F;
echo " LLS_L1_HEADS_TAILS";
tr 50 M=LLS_L1_HEADS_TAILS;
tr 51 M=LLS_L1_HEADS_TAILS;
tr 52 M=LLS_L1_HEADS_TAILS;
tr 71 M=LLS_L1_HEADS_TAILS TSE=F SLTH=T;
tr 71 M=LLS_L1_HEADS_TAILS TSE=T SLTH=T;
tr 71 M=LLS_L1_HEADS_TAILS TSE=T SLTH=F;
#echo " LLS_L1_MIN_BUCKET_C";
#tr 50 M=LLS_L1_MIN_BUCKET_C;
#tr 51 M=LLS_L1_MIN_BUCKET_C;
#tr 52 M=LLS_L1_MIN_BUCKET_C;
#tr 71 M=LLS_L1_MIN_BUCKET_C TSE=F SLTH=T;
#tr 71 M=LLS_L1_MIN_BUCKET_C TSE=T SLTH=T;
#tr 71 M=LLS_L1_MIN_BUCKET_C TSE=T SLTH=F;
echo " LLS_L1_MIN_CONFIG_C";
tr 50 M=LLS_L1_MIN_CONFIG_C;
tr 51 M=LLS_L1_MIN_CONFIG_C;
tr 52 M=LLS_L1_MIN_CONFIG_C;
tr 71 M=LLS_L1_MIN_CONFIG_C TSE=F SLTH=T;
tr 71 M=LLS_L1_MIN_CONFIG_C TSE=T SLTH=T;
tr 71 M=LLS_L1_MIN_CONFIG_C TSE=T SLTH=F;
echo " LLS_L1_MIN_NEXT";
tr 50 M=LLS_L1_MIN_NEXT;
tr 51 M=LLS_L1_MIN_NEXT;
tr 52 M=LLS_L1_MIN_NEXT;
tr 71 M=LLS_L1_MIN_NEXT TSE=F SLTH=T;
tr 71 M=LLS_L1_MIN_NEXT TSE=T SLTH=T;
tr 71 M=LLS_L1_MIN_NEXT TSE=T SLTH=F;
echo " LLS_L1_PARENT";
tr 50 M=LLS_L1_PARENT;
tr 51 M=LLS_L1_PARENT;
tr 52 M=LLS_L1_PARENT;
tr 71 M=LLS_L1_PARENT TSE=F SLTH=T;
tr 71 M=LLS_L1_PARENT TSE=T SLTH=T;
tr 71 M=LLS_L1_PARENT TSE=T SLTH=F;
echo " LLS_L1_PARENT_STATE";
tr 50 M=LLS_L1_PARENT_STATE;
tr 51 M=LLS_L1_PARENT_STATE;
tr 52 M=LLS_L1_PARENT_STATE;
tr 71 M=LLS_L1_PARENT_STATE TSE=F SLTH=T;
tr 71 M=LLS_L1_PARENT_STATE TSE=T SLTH=T;
tr 71 M=LLS_L1_PARENT_STATE TSE=T SLTH=F;
#echo " LLS_L1_SHAPER_BUCKET_C";
#tr 50 M=LLS_L1_SHAPER_BUCKET_C;
#tr 51 M=LLS_L1_SHAPER_BUCKET_C;
#tr 52 M=LLS_L1_SHAPER_BUCKET_C;
#tr 71 M=LLS_L1_SHAPER_BUCKET_C TSE=F SLTH=T;
#tr 71 M=LLS_L1_SHAPER_BUCKET_C TSE=T SLTH=T;
#tr 71 M=LLS_L1_SHAPER_BUCKET_C TSE=T SLTH=F;
echo " LLS_L1_SHAPER_CONFIG_C";
tr 50 M=LLS_L1_SHAPER_CONFIG_C;
tr 51 M=LLS_L1_SHAPER_CONFIG_C;
tr 52 M=LLS_L1_SHAPER_CONFIG_C;
tr 71 M=LLS_L1_SHAPER_CONFIG_C TSE=F SLTH=T;
tr 71 M=LLS_L1_SHAPER_CONFIG_C TSE=T SLTH=T;
tr 71 M=LLS_L1_SHAPER_CONFIG_C TSE=T SLTH=F;
echo " LLS_L1_WERR_MAX_SC";
tr 50 M=LLS_L1_WERR_MAX_SC;
tr 51 M=LLS_L1_WERR_MAX_SC;
tr 52 M=LLS_L1_WERR_MAX_SC;
tr 71 M=LLS_L1_WERR_MAX_SC TSE=F SLTH=T;
tr 71 M=LLS_L1_WERR_MAX_SC TSE=T SLTH=T;
tr 71 M=LLS_L1_WERR_MAX_SC TSE=T SLTH=F;
echo " LLS_L1_WERR_NEXT";
tr 50 M=LLS_L1_WERR_NEXT;
tr 51 M=LLS_L1_WERR_NEXT;
tr 52 M=LLS_L1_WERR_NEXT;
tr 71 M=LLS_L1_WERR_NEXT TSE=F SLTH=T;
tr 71 M=LLS_L1_WERR_NEXT TSE=T SLTH=T;
tr 71 M=LLS_L1_WERR_NEXT TSE=T SLTH=F;
echo " LLS_L1_XOFF";
#tr 50 M=LLS_L1_XOFF;
#tr 51 M=LLS_L1_XOFF;
#tr 52 M=LLS_L1_XOFF;
#tr 71 M=LLS_L1_XOFF TSE=F SLTH=T;
#tr 71 M=LLS_L1_XOFF TSE=T SLTH=T;
#tr 71 M=LLS_L1_XOFF TSE=T SLTH=F;
echo " LLS_L2_ACT_MIN";
tr 50 M=LLS_L2_ACT_MIN;
tr 51 M=LLS_L2_ACT_MIN;
tr 52 M=LLS_L2_ACT_MIN;
tr 71 M=LLS_L2_ACT_MIN TSE=F SLTH=T;
tr 71 M=LLS_L2_ACT_MIN TSE=T SLTH=T;
tr 71 M=LLS_L2_ACT_MIN TSE=T SLTH=F;
echo " LLS_L2_ACT_SHAPER";
tr 50 M=LLS_L2_ACT_SHAPER;
tr 51 M=LLS_L2_ACT_SHAPER;
tr 52 M=LLS_L2_ACT_SHAPER;
tr 71 M=LLS_L2_ACT_SHAPER TSE=F SLTH=T;
tr 71 M=LLS_L2_ACT_SHAPER TSE=T SLTH=T;
tr 71 M=LLS_L2_ACT_SHAPER TSE=T SLTH=F;
echo " LLS_L2_ACT_XON";
tr 50 M=LLS_L2_ACT_XON;
tr 51 M=LLS_L2_ACT_XON;
tr 52 M=LLS_L2_ACT_XON;
tr 71 M=LLS_L2_ACT_XON TSE=F SLTH=T;
tr 71 M=LLS_L2_ACT_XON TSE=T SLTH=T;
tr 71 M=LLS_L2_ACT_XON TSE=T SLTH=F;
echo " LLS_L2_CHILD_STATE1";
tr 50 M=LLS_L2_CHILD_STATE1;
tr 51 M=LLS_L2_CHILD_STATE1;
tr 52 M=LLS_L2_CHILD_STATE1;
tr 71 M=LLS_L2_CHILD_STATE1 TSE=F SLTH=T;
tr 71 M=LLS_L2_CHILD_STATE1 TSE=T SLTH=T;
tr 71 M=LLS_L2_CHILD_STATE1 TSE=T SLTH=F;
echo " LLS_L2_CHILD_WEIGHT_CFG_CNT";
tr 50 M=LLS_L2_CHILD_WEIGHT_CFG_CNT;
tr 51 M=LLS_L2_CHILD_WEIGHT_CFG_CNT;
tr 52 M=LLS_L2_CHILD_WEIGHT_CFG_CNT;
tr 71 M=LLS_L2_CHILD_WEIGHT_CFG_CNT TSE=F SLTH=T;
tr 71 M=LLS_L2_CHILD_WEIGHT_CFG_CNT TSE=T SLTH=T;
tr 71 M=LLS_L2_CHILD_WEIGHT_CFG_CNT TSE=T SLTH=F;
echo " LLS_L2_EMPTY_STATE";
tr 50 M=LLS_L2_EMPTY_STATE;
tr 51 M=LLS_L2_EMPTY_STATE;
tr 52 M=LLS_L2_EMPTY_STATE;
tr 71 M=LLS_L2_EMPTY_STATE TSE=F SLTH=T;
tr 71 M=LLS_L2_EMPTY_STATE TSE=T SLTH=T;
tr 71 M=LLS_L2_EMPTY_STATE TSE=T SLTH=F;
echo " LLS_L2_ERROR";
tr 50 M=LLS_L2_ERROR;
tr 51 M=LLS_L2_ERROR;
tr 52 M=LLS_L2_ERROR;
tr 71 M=LLS_L2_ERROR TSE=F SLTH=T;
tr 71 M=LLS_L2_ERROR TSE=T SLTH=T;
tr 71 M=LLS_L2_ERROR TSE=T SLTH=F;
echo " LLS_L2_ERROR_MIN";
tr 50 M=LLS_L2_ERROR_MIN;
tr 51 M=LLS_L2_ERROR_MIN;
tr 52 M=LLS_L2_ERROR_MIN;
tr 71 M=LLS_L2_ERROR_MIN TSE=F SLTH=T;
tr 71 M=LLS_L2_ERROR_MIN TSE=T SLTH=T;
tr 71 M=LLS_L2_ERROR_MIN TSE=T SLTH=F;
#echo " LLS_L2_MIN_BUCKET_LOWER_C";
#tr 50 M=LLS_L2_MIN_BUCKET_LOWER_C;
#tr 51 M=LLS_L2_MIN_BUCKET_LOWER_C;
#tr 52 M=LLS_L2_MIN_BUCKET_LOWER_C;
#tr 71 M=LLS_L2_MIN_BUCKET_LOWER_C TSE=F SLTH=T;
#tr 71 M=LLS_L2_MIN_BUCKET_LOWER_C TSE=T SLTH=T;
#tr 71 M=LLS_L2_MIN_BUCKET_LOWER_C TSE=T SLTH=F;
#echo " LLS_L2_MIN_BUCKET_UPPER_C";
#tr 50 M=LLS_L2_MIN_BUCKET_UPPER_C;
#tr 51 M=LLS_L2_MIN_BUCKET_UPPER_C;
#tr 52 M=LLS_L2_MIN_BUCKET_UPPER_C;
#tr 71 M=LLS_L2_MIN_BUCKET_UPPER_C TSE=F SLTH=T;
#tr 71 M=LLS_L2_MIN_BUCKET_UPPER_C TSE=T SLTH=T;
#tr 71 M=LLS_L2_MIN_BUCKET_UPPER_C TSE=T SLTH=F;
echo " LLS_L2_MIN_CONFIG_LOWER_C";
tr 50 M=LLS_L2_MIN_CONFIG_LOWER_C;
tr 51 M=LLS_L2_MIN_CONFIG_LOWER_C;
tr 52 M=LLS_L2_MIN_CONFIG_LOWER_C;
tr 71 M=LLS_L2_MIN_CONFIG_LOWER_C TSE=F SLTH=T;
tr 71 M=LLS_L2_MIN_CONFIG_LOWER_C TSE=T SLTH=T;
tr 71 M=LLS_L2_MIN_CONFIG_LOWER_C TSE=T SLTH=F;
echo " LLS_L2_MIN_CONFIG_UPPER_C";
tr 50 M=LLS_L2_MIN_CONFIG_UPPER_C;
tr 51 M=LLS_L2_MIN_CONFIG_UPPER_C;
tr 52 M=LLS_L2_MIN_CONFIG_UPPER_C;
tr 71 M=LLS_L2_MIN_CONFIG_UPPER_C TSE=F SLTH=T;
tr 71 M=LLS_L2_MIN_CONFIG_UPPER_C TSE=T SLTH=T;
tr 71 M=LLS_L2_MIN_CONFIG_UPPER_C TSE=T SLTH=F;
echo " LLS_L2_MIN_NEXT";
tr 50 M=LLS_L2_MIN_NEXT;
tr 51 M=LLS_L2_MIN_NEXT;
tr 52 M=LLS_L2_MIN_NEXT;
tr 71 M=LLS_L2_MIN_NEXT TSE=F SLTH=T;
tr 71 M=LLS_L2_MIN_NEXT TSE=T SLTH=T;
tr 71 M=LLS_L2_MIN_NEXT TSE=T SLTH=F;
echo " LLS_L2_PARENT";
tr 50 M=LLS_L2_PARENT;
tr 51 M=LLS_L2_PARENT;
tr 52 M=LLS_L2_PARENT;
tr 71 M=LLS_L2_PARENT TSE=F SLTH=T;
tr 71 M=LLS_L2_PARENT TSE=T SLTH=T;
tr 71 M=LLS_L2_PARENT TSE=T SLTH=F;
#echo " LLS_L2_SHAPER_BUCKET_LOWER";
#tr 50 M=LLS_L2_SHAPER_BUCKET_LOWER;
#tr 51 M=LLS_L2_SHAPER_BUCKET_LOWER;
#tr 52 M=LLS_L2_SHAPER_BUCKET_LOWER;
#tr 71 M=LLS_L2_SHAPER_BUCKET_LOWER TSE=F SLTH=T;
#tr 71 M=LLS_L2_SHAPER_BUCKET_LOWER TSE=T SLTH=T;
#tr 71 M=LLS_L2_SHAPER_BUCKET_LOWER TSE=T SLTH=F;
#echo " LLS_L2_SHAPER_BUCKET_UPPER";
#tr 50 M=LLS_L2_SHAPER_BUCKET_UPPER;
#tr 51 M=LLS_L2_SHAPER_BUCKET_UPPER;
#tr 52 M=LLS_L2_SHAPER_BUCKET_UPPER;
#tr 71 M=LLS_L2_SHAPER_BUCKET_UPPER TSE=F SLTH=T;
#tr 71 M=LLS_L2_SHAPER_BUCKET_UPPER TSE=T SLTH=T;
#tr 71 M=LLS_L2_SHAPER_BUCKET_UPPER TSE=T SLTH=F;
echo " LLS_L2_SHAPER_CONFIG_LOWER";
tr 50 M=LLS_L2_SHAPER_CONFIG_LOWER;
tr 51 M=LLS_L2_SHAPER_CONFIG_LOWER;
tr 52 M=LLS_L2_SHAPER_CONFIG_LOWER;
tr 71 M=LLS_L2_SHAPER_CONFIG_LOWER TSE=F SLTH=T;
tr 71 M=LLS_L2_SHAPER_CONFIG_LOWER TSE=T SLTH=T;
tr 71 M=LLS_L2_SHAPER_CONFIG_LOWER TSE=T SLTH=F;
echo " LLS_L2_SHAPER_CONFIG_UPPER";
tr 50 M=LLS_L2_SHAPER_CONFIG_UPPER;
tr 51 M=LLS_L2_SHAPER_CONFIG_UPPER;
tr 52 M=LLS_L2_SHAPER_CONFIG_UPPER;
tr 71 M=LLS_L2_SHAPER_CONFIG_UPPER TSE=F SLTH=T;
tr 71 M=LLS_L2_SHAPER_CONFIG_UPPER TSE=T SLTH=T;
tr 71 M=LLS_L2_SHAPER_CONFIG_UPPER TSE=T SLTH=F;
echo " LLS_L2_WERR_NEXT";
tr 50 M=LLS_L2_WERR_NEXT;
tr 51 M=LLS_L2_WERR_NEXT;
tr 52 M=LLS_L2_WERR_NEXT;
tr 71 M=LLS_L2_WERR_NEXT TSE=F SLTH=T;
tr 71 M=LLS_L2_WERR_NEXT TSE=T SLTH=T;
tr 71 M=LLS_L2_WERR_NEXT TSE=T SLTH=F;
#echo " LLS_L2_XOFF";
#tr 50 M=LLS_L2_XOFF;
#tr 51 M=LLS_L2_XOFF;
#tr 52 M=LLS_L2_XOFF;
#tr 71 M=LLS_L2_XOFF TSE=F SLTH=T;
#tr 71 M=LLS_L2_XOFF TSE=T SLTH=T;
#tr 71 M=LLS_L2_XOFF TSE=T SLTH=F;
echo " LLS_PORT_CONFIG";
tr 50 M=LLS_PORT_CONFIG;
tr 51 M=LLS_PORT_CONFIG;
tr 52 M=LLS_PORT_CONFIG;
tr 71 M=LLS_PORT_CONFIG TSE=F SLTH=T;
tr 71 M=LLS_PORT_CONFIG TSE=T SLTH=T;
tr 71 M=LLS_PORT_CONFIG TSE=T SLTH=F;
echo " LLS_PORT_ERROR";
tr 50 M=LLS_PORT_ERROR;
tr 51 M=LLS_PORT_ERROR;
tr 52 M=LLS_PORT_ERROR;
tr 71 M=LLS_PORT_ERROR TSE=F SLTH=T;
tr 71 M=LLS_PORT_ERROR TSE=T SLTH=T;
tr 71 M=LLS_PORT_ERROR TSE=T SLTH=F;
echo " LLS_PORT_HEADS";
tr 50 M=LLS_PORT_HEADS;
tr 51 M=LLS_PORT_HEADS;
tr 52 M=LLS_PORT_HEADS;
tr 71 M=LLS_PORT_HEADS TSE=F SLTH=T;
tr 71 M=LLS_PORT_HEADS TSE=T SLTH=T;
tr 71 M=LLS_PORT_HEADS TSE=T SLTH=F;
echo " LLS_PORT_PARENT_STATE";
tr 50 M=LLS_PORT_PARENT_STATE;
tr 51 M=LLS_PORT_PARENT_STATE;
tr 52 M=LLS_PORT_PARENT_STATE;
tr 71 M=LLS_PORT_PARENT_STATE TSE=F SLTH=T;
tr 71 M=LLS_PORT_PARENT_STATE TSE=T SLTH=T;
tr 71 M=LLS_PORT_PARENT_STATE TSE=T SLTH=F;
#echo " LLS_PORT_SHAPER_BUCKET_C";
#tr 50 M=LLS_PORT_SHAPER_BUCKET_C;
#tr 51 M=LLS_PORT_SHAPER_BUCKET_C;
#tr 52 M=LLS_PORT_SHAPER_BUCKET_C;
#tr 71 M=LLS_PORT_SHAPER_BUCKET_C TSE=F SLTH=T;
#tr 71 M=LLS_PORT_SHAPER_BUCKET_C TSE=T SLTH=T;
#tr 71 M=LLS_PORT_SHAPER_BUCKET_C TSE=T SLTH=F;
echo " LLS_PORT_SHAPER_CONFIG_C";
tr 50 M=LLS_PORT_SHAPER_CONFIG_C;
tr 51 M=LLS_PORT_SHAPER_CONFIG_C;
tr 52 M=LLS_PORT_SHAPER_CONFIG_C;
tr 71 M=LLS_PORT_SHAPER_CONFIG_C TSE=F SLTH=T;
tr 71 M=LLS_PORT_SHAPER_CONFIG_C TSE=T SLTH=T;
tr 71 M=LLS_PORT_SHAPER_CONFIG_C TSE=T SLTH=F;
echo " LLS_PORT_TAILS";
tr 50 M=LLS_PORT_TAILS;
tr 51 M=LLS_PORT_TAILS;
tr 52 M=LLS_PORT_TAILS;
tr 71 M=LLS_PORT_TAILS TSE=F SLTH=T;
tr 71 M=LLS_PORT_TAILS TSE=T SLTH=T;
tr 71 M=LLS_PORT_TAILS TSE=T SLTH=F;
echo " LLS_PORT_TDM";
tr 50 M=LLS_PORT_TDM;
tr 51 M=LLS_PORT_TDM;
tr 52 M=LLS_PORT_TDM;
tr 71 M=LLS_PORT_TDM TSE=F SLTH=T;
tr 71 M=LLS_PORT_TDM TSE=T SLTH=T;
tr 71 M=LLS_PORT_TDM TSE=T SLTH=F;
echo " LLS_PORT_WERR_MAX_SC";
tr 50 M=LLS_PORT_WERR_MAX_SC;
tr 51 M=LLS_PORT_WERR_MAX_SC;
tr 52 M=LLS_PORT_WERR_MAX_SC;
tr 71 M=LLS_PORT_WERR_MAX_SC TSE=F SLTH=T;
tr 71 M=LLS_PORT_WERR_MAX_SC TSE=T SLTH=T;
tr 71 M=LLS_PORT_WERR_MAX_SC TSE=T SLTH=F;
echo " LLS_PORT_XOFF";
tr 50 M=LLS_PORT_XOFF;
#tr 51 M=LLS_PORT_XOFF;
#tr 52 M=LLS_PORT_XOFF;
tr 71 M=LLS_PORT_XOFF TSE=F SLTH=T;
tr 71 M=LLS_PORT_XOFF TSE=T SLTH=T;
tr 71 M=LLS_PORT_XOFF TSE=T SLTH=F;
echo " LLS_S0_ERROR";
tr 50 M=LLS_S0_ERROR;
tr 51 M=LLS_S0_ERROR;
tr 52 M=LLS_S0_ERROR;
tr 71 M=LLS_S0_ERROR TSE=F SLTH=T;
tr 71 M=LLS_S0_ERROR TSE=T SLTH=T;
tr 71 M=LLS_S0_ERROR TSE=T SLTH=F;
#echo " LLS_S0_SHAPER_BUCKET_C";
#tr 50 M=LLS_S0_SHAPER_BUCKET_C;
#tr 51 M=LLS_S0_SHAPER_BUCKET_C;
#tr 52 M=LLS_S0_SHAPER_BUCKET_C;
#tr 71 M=LLS_S0_SHAPER_BUCKET_C TSE=F SLTH=T;
#tr 71 M=LLS_S0_SHAPER_BUCKET_C TSE=T SLTH=T;
#tr 71 M=LLS_S0_SHAPER_BUCKET_C TSE=T SLTH=F;
echo " LLS_S0_SHAPER_CONFIG_C";
tr 50 M=LLS_S0_SHAPER_CONFIG_C;
tr 51 M=LLS_S0_SHAPER_CONFIG_C;
tr 52 M=LLS_S0_SHAPER_CONFIG_C;
tr 71 M=LLS_S0_SHAPER_CONFIG_C TSE=F SLTH=T;
tr 71 M=LLS_S0_SHAPER_CONFIG_C TSE=T SLTH=T;
tr 71 M=LLS_S0_SHAPER_CONFIG_C TSE=T SLTH=F;
echo " LLS_S1_CONFIG";
tr 50 M=LLS_S1_CONFIG;
tr 51 M=LLS_S1_CONFIG;
tr 52 M=LLS_S1_CONFIG;
tr 71 M=LLS_S1_CONFIG TSE=F SLTH=T;
tr 71 M=LLS_S1_CONFIG TSE=T SLTH=T;
tr 71 M=LLS_S1_CONFIG TSE=T SLTH=F;
echo " LLS_S1_ERROR";
tr 50 M=LLS_S1_ERROR;
tr 51 M=LLS_S1_ERROR;
tr 52 M=LLS_S1_ERROR;
tr 71 M=LLS_S1_ERROR TSE=F SLTH=T;
tr 71 M=LLS_S1_ERROR TSE=T SLTH=T;
tr 71 M=LLS_S1_ERROR TSE=T SLTH=F;
echo " LLS_S1_HEADS";
tr 50 M=LLS_S1_HEADS;
tr 51 M=LLS_S1_HEADS;
tr 52 M=LLS_S1_HEADS;
tr 71 M=LLS_S1_HEADS TSE=F SLTH=T;
tr 71 M=LLS_S1_HEADS TSE=T SLTH=T;
tr 71 M=LLS_S1_HEADS TSE=T SLTH=F;
echo " LLS_S1_PARENT_STATE";
tr 50 M=LLS_S1_PARENT_STATE;
tr 51 M=LLS_S1_PARENT_STATE;
tr 52 M=LLS_S1_PARENT_STATE;
tr 71 M=LLS_S1_PARENT_STATE TSE=F SLTH=T;
tr 71 M=LLS_S1_PARENT_STATE TSE=T SLTH=T;
tr 71 M=LLS_S1_PARENT_STATE TSE=T SLTH=F;
#echo " LLS_S1_SHAPER_BUCKET_C";
#tr 50 M=LLS_S1_SHAPER_BUCKET_C;
#tr 51 M=LLS_S1_SHAPER_BUCKET_C;
#tr 52 M=LLS_S1_SHAPER_BUCKET_C;
#tr 71 M=LLS_S1_SHAPER_BUCKET_C TSE=F SLTH=T;
#tr 71 M=LLS_S1_SHAPER_BUCKET_C TSE=T SLTH=T;
#tr 71 M=LLS_S1_SHAPER_BUCKET_C TSE=T SLTH=F;
echo " LLS_S1_SHAPER_CONFIG_C";
tr 50 M=LLS_S1_SHAPER_CONFIG_C;
tr 51 M=LLS_S1_SHAPER_CONFIG_C;
tr 52 M=LLS_S1_SHAPER_CONFIG_C;
tr 71 M=LLS_S1_SHAPER_CONFIG_C TSE=F SLTH=T;
tr 71 M=LLS_S1_SHAPER_CONFIG_C TSE=T SLTH=T;
tr 71 M=LLS_S1_SHAPER_CONFIG_C TSE=T SLTH=F;
echo " LLS_S1_TAILS";
tr 50 M=LLS_S1_TAILS;
tr 51 M=LLS_S1_TAILS;
tr 52 M=LLS_S1_TAILS;
tr 71 M=LLS_S1_TAILS TSE=F SLTH=T;
tr 71 M=LLS_S1_TAILS TSE=T SLTH=T;
tr 71 M=LLS_S1_TAILS TSE=T SLTH=F;
echo " LMEP";
tr 50 M=LMEP;
tr 51 M=LMEP;
tr 52 M=LMEP;
tr 71 M=LMEP TSE=F SLTH=T;
tr 71 M=LMEP TSE=T SLTH=T;
tr 71 M=LMEP TSE=T SLTH=F;
echo " LMEP_1";
tr 50 M=LMEP_1;
tr 51 M=LMEP_1;
tr 52 M=LMEP_1;
tr 71 M=LMEP_1 TSE=F SLTH=T;
tr 71 M=LMEP_1 TSE=T SLTH=T;
tr 71 M=LMEP_1 TSE=T SLTH=F;
echo " LM_COUNTER_CONTROL";
tr 50 M=LM_COUNTER_CONTROL;
tr 51 M=LM_COUNTER_CONTROL;
tr 52 M=LM_COUNTER_CONTROL;
tr 71 M=LM_COUNTER_CONTROL TSE=F SLTH=T;
tr 71 M=LM_COUNTER_CONTROL TSE=T SLTH=T;
tr 71 M=LM_COUNTER_CONTROL TSE=T SLTH=F;
echo " LOCAL_SW_DISABLE_DEFAULT_PBM";
tr 50 M=LOCAL_SW_DISABLE_DEFAULT_PBM;
tr 51 M=LOCAL_SW_DISABLE_DEFAULT_PBM;
tr 52 M=LOCAL_SW_DISABLE_DEFAULT_PBM;
tr 71 M=LOCAL_SW_DISABLE_DEFAULT_PBM TSE=F SLTH=T;
tr 71 M=LOCAL_SW_DISABLE_DEFAULT_PBM TSE=T SLTH=T;
tr 71 M=LOCAL_SW_DISABLE_DEFAULT_PBM TSE=T SLTH=F;
echo " LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR";
tr 50 M=LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR;
tr 51 M=LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR;
tr 52 M=LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR;
tr 71 M=LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR TSE=F SLTH=T;
tr 71 M=LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR TSE=T SLTH=T;
tr 71 M=LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR TSE=T SLTH=F;
echo " LPORT_TAB";
tr 50 M=LPORT_TAB;
tr 51 M=LPORT_TAB;
tr 52 M=LPORT_TAB;
tr 71 M=LPORT_TAB TSE=F SLTH=T;
tr 71 M=LPORT_TAB TSE=T SLTH=T;
tr 71 M=LPORT_TAB TSE=T SLTH=F;
echo " MAC_BLOCK";
tr 50 M=MAC_BLOCK;
tr 51 M=MAC_BLOCK;
tr 52 M=MAC_BLOCK;
tr 71 M=MAC_BLOCK TSE=F SLTH=T;
tr 71 M=MAC_BLOCK TSE=T SLTH=T;
tr 71 M=MAC_BLOCK TSE=T SLTH=F;
echo " MAID_REDUCTION";
tr 50 M=MAID_REDUCTION;
tr 51 M=MAID_REDUCTION;
tr 52 M=MAID_REDUCTION;
tr 71 M=MAID_REDUCTION TSE=F SLTH=T;
tr 71 M=MAID_REDUCTION TSE=T SLTH=T;
tr 71 M=MAID_REDUCTION TSE=T SLTH=F;
echo " MA_INDEX";
tr 50 M=MA_INDEX;
tr 51 M=MA_INDEX;
tr 52 M=MA_INDEX;
tr 71 M=MA_INDEX TSE=F SLTH=T;
tr 71 M=MA_INDEX TSE=T SLTH=T;
tr 71 M=MA_INDEX TSE=T SLTH=F;
echo " MA_STATE";
tr 50 M=MA_STATE;
tr 51 M=MA_STATE;
tr 52 M=MA_STATE;
tr 71 M=MA_STATE TSE=F SLTH=T;
tr 71 M=MA_STATE TSE=T SLTH=T;
tr 71 M=MA_STATE TSE=T SLTH=F;
echo " MIRROR_CONTROL";
tr 50 M=MIRROR_CONTROL;
tr 51 M=MIRROR_CONTROL;
tr 52 M=MIRROR_CONTROL;
tr 71 M=MIRROR_CONTROL TSE=F SLTH=T;
tr 71 M=MIRROR_CONTROL TSE=T SLTH=T;
tr 71 M=MIRROR_CONTROL TSE=T SLTH=F;
#echo " MMU_ADM_QUEUE_DB";
#tr 50 M=MMU_ADM_QUEUE_DB;
#tr 51 M=MMU_ADM_QUEUE_DB;
#tr 52 M=MMU_ADM_QUEUE_DB;
#tr 71 M=MMU_ADM_QUEUE_DB TSE=F SLTH=T;
#tr 71 M=MMU_ADM_QUEUE_DB TSE=T SLTH=T;
#tr 71 M=MMU_ADM_QUEUE_DB TSE=T SLTH=F;
echo " MMU_ADM_SRC_CTXT_DB";
tr 50 M=MMU_ADM_SRC_CTXT_DB;
tr 51 M=MMU_ADM_SRC_CTXT_DB;
tr 52 M=MMU_ADM_SRC_CTXT_DB;
tr 71 M=MMU_ADM_SRC_CTXT_DB TSE=F SLTH=T;
tr 71 M=MMU_ADM_SRC_CTXT_DB TSE=T SLTH=T;
tr 71 M=MMU_ADM_SRC_CTXT_DB TSE=T SLTH=F;
if !$?LIKE_BCM56456 \
   'echo " MMU_AGING_CTR_EXT"; \
    tr 50 M=MMU_AGING_CTR_EXT; \
    tr 51 M=MMU_AGING_CTR_EXT; \
    tr 52 M=MMU_AGING_CTR_EXT; \
    tr 71 M=MMU_AGING_CTR_EXT TSE=F SLTH=T; \
    tr 71 M=MMU_AGING_CTR_EXT TSE=T SLTH=T; \
    tr 71 M=MMU_AGING_CTR_EXT TSE=T SLTH=F; \
    $done;' 
echo " MMU_AGING_CTR_INT";
tr 50 M=MMU_AGING_CTR_INT;
tr 51 M=MMU_AGING_CTR_INT;
tr 52 M=MMU_AGING_CTR_INT;
tr 71 M=MMU_AGING_CTR_INT TSE=F SLTH=T;
tr 71 M=MMU_AGING_CTR_INT TSE=T SLTH=T;
tr 71 M=MMU_AGING_CTR_INT TSE=T SLTH=F;
if !$?LIKE_BCM56456 \
   'echo " MMU_AGING_EXP_EXT"; \
    tr 50 M=MMU_AGING_EXP_EXT; \
    tr 51 M=MMU_AGING_EXP_EXT; \
    tr 52 M=MMU_AGING_EXP_EXT; \
    tr 71 M=MMU_AGING_EXP_EXT TSE=F SLTH=T; \
    tr 71 M=MMU_AGING_EXP_EXT TSE=T SLTH=T; \
    tr 71 M=MMU_AGING_EXP_EXT TSE=T SLTH=F; \
    $done;'
echo " MMU_AGING_EXP_INT";
tr 50 M=MMU_AGING_EXP_INT;
tr 51 M=MMU_AGING_EXP_INT;
tr 52 M=MMU_AGING_EXP_INT;
tr 71 M=MMU_AGING_EXP_INT TSE=F SLTH=T;
tr 71 M=MMU_AGING_EXP_INT TSE=T SLTH=T;
tr 71 M=MMU_AGING_EXP_INT TSE=T SLTH=F;
echo " MMU_AGING_LMT_EXT";
tr 50 M=MMU_AGING_LMT_EXT;
tr 51 M=MMU_AGING_LMT_EXT;
tr 52 M=MMU_AGING_LMT_EXT;
tr 71 M=MMU_AGING_LMT_EXT TSE=F SLTH=T;
tr 71 M=MMU_AGING_LMT_EXT TSE=T SLTH=T;
tr 71 M=MMU_AGING_LMT_EXT TSE=T SLTH=F;
echo " MMU_AGING_LMT_INT";
tr 50 M=MMU_AGING_LMT_INT;
tr 51 M=MMU_AGING_LMT_INT;
tr 52 M=MMU_AGING_LMT_INT;
tr 71 M=MMU_AGING_LMT_INT TSE=F SLTH=T;
tr 71 M=MMU_AGING_LMT_INT TSE=T SLTH=T;
tr 71 M=MMU_AGING_LMT_INT TSE=T SLTH=F;
echo " MMU_CBPI_0";
tr 50 M=MMU_CBPI_0;
tr 51 M=MMU_CBPI_0;
tr 52 M=MMU_CBPI_0;
tr 71 M=MMU_CBPI_0 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_0 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_0 TSE=T SLTH=F;
echo " MMU_CBPI_1";
tr 50 M=MMU_CBPI_1;
tr 51 M=MMU_CBPI_1;
tr 52 M=MMU_CBPI_1;
tr 71 M=MMU_CBPI_1 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_1 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_1 TSE=T SLTH=F;
echo " MMU_CBPI_10";
tr 50 M=MMU_CBPI_10;
tr 51 M=MMU_CBPI_10;
tr 52 M=MMU_CBPI_10;
tr 71 M=MMU_CBPI_10 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_10 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_10 TSE=T SLTH=F;
echo " MMU_CBPI_11";
tr 50 M=MMU_CBPI_11;
tr 51 M=MMU_CBPI_11;
tr 52 M=MMU_CBPI_11;
tr 71 M=MMU_CBPI_11 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_11 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_11 TSE=T SLTH=F;
echo " MMU_CBPI_2";
tr 50 M=MMU_CBPI_2;
tr 51 M=MMU_CBPI_2;
tr 52 M=MMU_CBPI_2;
tr 71 M=MMU_CBPI_2 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_2 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_2 TSE=T SLTH=F;
echo " MMU_CBPI_3";
tr 50 M=MMU_CBPI_3;
tr 51 M=MMU_CBPI_3;
tr 52 M=MMU_CBPI_3;
tr 71 M=MMU_CBPI_3 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_3 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_3 TSE=T SLTH=F;
echo " MMU_CBPI_4";
tr 50 M=MMU_CBPI_4;
tr 51 M=MMU_CBPI_4;
tr 52 M=MMU_CBPI_4;
tr 71 M=MMU_CBPI_4 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_4 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_4 TSE=T SLTH=F;
echo " MMU_CBPI_5";
tr 50 M=MMU_CBPI_5;
tr 51 M=MMU_CBPI_5;
tr 52 M=MMU_CBPI_5;
tr 71 M=MMU_CBPI_5 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_5 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_5 TSE=T SLTH=F;
echo " MMU_CBPI_6";
tr 50 M=MMU_CBPI_6;
tr 51 M=MMU_CBPI_6;
tr 52 M=MMU_CBPI_6;
tr 71 M=MMU_CBPI_6 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_6 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_6 TSE=T SLTH=F;
echo " MMU_CBPI_7";
tr 50 M=MMU_CBPI_7;
tr 51 M=MMU_CBPI_7;
tr 52 M=MMU_CBPI_7;
tr 71 M=MMU_CBPI_7 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_7 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_7 TSE=T SLTH=F;
echo " MMU_CBPI_8";
tr 50 M=MMU_CBPI_8;
tr 51 M=MMU_CBPI_8;
tr 52 M=MMU_CBPI_8;
tr 71 M=MMU_CBPI_8 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_8 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_8 TSE=T SLTH=F;
echo " MMU_CBPI_9";
tr 50 M=MMU_CBPI_9;
tr 51 M=MMU_CBPI_9;
tr 52 M=MMU_CBPI_9;
tr 71 M=MMU_CBPI_9 TSE=F SLTH=T;
tr 71 M=MMU_CBPI_9 TSE=T SLTH=T;
tr 71 M=MMU_CBPI_9 TSE=T SLTH=F;
if !$?LIKE_BCM56456 \
   'echo " MMU_CCPE_MEM"; \
    tr 50 M=MMU_CCPE_MEM; \
    tr 51 M=MMU_CCPE_MEM; \
    tr 52 M=MMU_CCPE_MEM; \
    tr 71 M=MMU_CCPE_MEM TSE=F SLTH=T; \
    tr 71 M=MMU_CCPE_MEM TSE=T SLTH=T; \
    tr 71 M=MMU_CCPE_MEM TSE=T SLTH=F; \
    $done;'
echo " MMU_CCPI_MEM";
tr 50 M=MMU_CCPI_MEM;
tr 51 M=MMU_CCPI_MEM;
tr 52 M=MMU_CCPI_MEM;
tr 71 M=MMU_CCPI_MEM TSE=F SLTH=T;
tr 71 M=MMU_CCPI_MEM TSE=T SLTH=T;
tr 71 M=MMU_CCPI_MEM TSE=T SLTH=F;
#echo " MMU_CELLLINKE";
#tr 50 M=MMU_CELLLINKE;
#tr 51 M=MMU_CELLLINKE;
#tr 52 M=MMU_CELLLINKE;
#tr 71 M=MMU_CELLLINKE TSE=F SLTH=T;
#tr 71 M=MMU_CELLLINKE TSE=T SLTH=T;
#tr 71 M=MMU_CELLLINKE TSE=T SLTH=F;
echo " MMU_CELLLINKI";
tr 50 M=MMU_CELLLINKI;
tr 51 M=MMU_CELLLINKI;
tr 52 M=MMU_CELLLINKI;
tr 71 M=MMU_CELLLINKI TSE=F SLTH=T;
tr 71 M=MMU_CELLLINKI TSE=T SLTH=T;
tr 71 M=MMU_CELLLINKI TSE=T SLTH=F;
echo " MMU_CFAPE_BITMAP";
tr 50 M=MMU_CFAPE_BITMAP;
tr 51 M=MMU_CFAPE_BITMAP;
tr 52 M=MMU_CFAPE_BITMAP;
tr 71 M=MMU_CFAPE_BITMAP TSE=F SLTH=T;
tr 71 M=MMU_CFAPE_BITMAP TSE=T SLTH=T;
tr 71 M=MMU_CFAPE_BITMAP TSE=T SLTH=F;
echo " MMU_CFAPE_STACK";
tr 50 M=MMU_CFAPE_STACK;
tr 51 M=MMU_CFAPE_STACK;
tr 52 M=MMU_CFAPE_STACK;
tr 71 M=MMU_CFAPE_STACK TSE=F SLTH=T;
tr 71 M=MMU_CFAPE_STACK TSE=T SLTH=T;
tr 71 M=MMU_CFAPE_STACK TSE=T SLTH=F;
echo " MMU_CFAPI_BITMAP";
tr 50 M=MMU_CFAPI_BITMAP;
tr 51 M=MMU_CFAPI_BITMAP;
tr 52 M=MMU_CFAPI_BITMAP;
tr 71 M=MMU_CFAPI_BITMAP TSE=F SLTH=T;
tr 71 M=MMU_CFAPI_BITMAP TSE=T SLTH=T;
tr 71 M=MMU_CFAPI_BITMAP TSE=T SLTH=F;
echo " MMU_CFAPI_STACK";
tr 50 M=MMU_CFAPI_STACK;
tr 51 M=MMU_CFAPI_STACK;
tr 52 M=MMU_CFAPI_STACK;
tr 71 M=MMU_CFAPI_STACK TSE=F SLTH=T;
tr 71 M=MMU_CFAPI_STACK TSE=T SLTH=T;
tr 71 M=MMU_CFAPI_STACK TSE=T SLTH=F;
echo " MMU_CHFC_SYSPORT_MAPPING";
tr 50 M=MMU_CHFC_SYSPORT_MAPPING;
tr 51 M=MMU_CHFC_SYSPORT_MAPPING;
tr 52 M=MMU_CHFC_SYSPORT_MAPPING;
tr 71 M=MMU_CHFC_SYSPORT_MAPPING TSE=F SLTH=T;
tr 71 M=MMU_CHFC_SYSPORT_MAPPING TSE=T SLTH=T;
tr 71 M=MMU_CHFC_SYSPORT_MAPPING TSE=T SLTH=F;
echo " MMU_DEQ_AGING_MASK_LOOKUP_TABLE_MEM";
tr 50 M=MMU_DEQ_AGING_MASK_LOOKUP_TABLE_MEM;
tr 51 M=MMU_DEQ_AGING_MASK_LOOKUP_TABLE_MEM;
tr 52 M=MMU_DEQ_AGING_MASK_LOOKUP_TABLE_MEM;
tr 71 M=MMU_DEQ_AGING_MASK_LOOKUP_TABLE_MEM TSE=F SLTH=T;
tr 71 M=MMU_DEQ_AGING_MASK_LOOKUP_TABLE_MEM TSE=T SLTH=T;
tr 71 M=MMU_DEQ_AGING_MASK_LOOKUP_TABLE_MEM TSE=T SLTH=F;
#echo " MMU_ENQ_CBP_32B_WR_STORE_0";
#tr 50 M=MMU_ENQ_CBP_32B_WR_STORE_0;
#tr 51 M=MMU_ENQ_CBP_32B_WR_STORE_0;
#tr 52 M=MMU_ENQ_CBP_32B_WR_STORE_0;
#tr 71 M=MMU_ENQ_CBP_32B_WR_STORE_0 TSE=F SLTH=T;
#tr 71 M=MMU_ENQ_CBP_32B_WR_STORE_0 TSE=T SLTH=T;
#tr 71 M=MMU_ENQ_CBP_32B_WR_STORE_0 TSE=T SLTH=F;
#echo " MMU_ENQ_CBP_32B_WR_STORE_1";
#tr 50 M=MMU_ENQ_CBP_32B_WR_STORE_1;
#tr 51 M=MMU_ENQ_CBP_32B_WR_STORE_1;
#tr 52 M=MMU_ENQ_CBP_32B_WR_STORE_1;
#tr 71 M=MMU_ENQ_CBP_32B_WR_STORE_1 TSE=F SLTH=T;
#tr 71 M=MMU_ENQ_CBP_32B_WR_STORE_1 TSE=T SLTH=T;
#tr 71 M=MMU_ENQ_CBP_32B_WR_STORE_1 TSE=T SLTH=F;
echo " MMU_ENQ_CBP_32B_WR_STORE_2";
tr 50 M=MMU_ENQ_CBP_32B_WR_STORE_2;
tr 51 M=MMU_ENQ_CBP_32B_WR_STORE_2;
tr 52 M=MMU_ENQ_CBP_32B_WR_STORE_2;
tr 71 M=MMU_ENQ_CBP_32B_WR_STORE_2 TSE=F SLTH=T;
tr 71 M=MMU_ENQ_CBP_32B_WR_STORE_2 TSE=T SLTH=T;
tr 71 M=MMU_ENQ_CBP_32B_WR_STORE_2 TSE=T SLTH=F;
echo " MMU_ENQ_CFAPI_INTERNAL_RECYCLE";
tr 50 M=MMU_ENQ_CFAPI_INTERNAL_RECYCLE;
tr 51 M=MMU_ENQ_CFAPI_INTERNAL_RECYCLE;
tr 52 M=MMU_ENQ_CFAPI_INTERNAL_RECYCLE;
tr 71 M=MMU_ENQ_CFAPI_INTERNAL_RECYCLE TSE=F SLTH=T;
tr 71 M=MMU_ENQ_CFAPI_INTERNAL_RECYCLE TSE=T SLTH=T;
tr 71 M=MMU_ENQ_CFAPI_INTERNAL_RECYCLE TSE=T SLTH=F;
echo " MMU_ENQ_FAP_BITMAP";
tr 50 M=MMU_ENQ_FAP_BITMAP;
tr 51 M=MMU_ENQ_FAP_BITMAP;
tr 52 M=MMU_ENQ_FAP_BITMAP;
tr 71 M=MMU_ENQ_FAP_BITMAP TSE=F SLTH=T;
tr 71 M=MMU_ENQ_FAP_BITMAP TSE=T SLTH=T;
tr 71 M=MMU_ENQ_FAP_BITMAP TSE=T SLTH=F;
echo " MMU_ENQ_FAP_STACK";
tr 50 M=MMU_ENQ_FAP_STACK;
tr 51 M=MMU_ENQ_FAP_STACK;
tr 52 M=MMU_ENQ_FAP_STACK;
tr 71 M=MMU_ENQ_FAP_STACK TSE=F SLTH=T;
tr 71 M=MMU_ENQ_FAP_STACK TSE=T SLTH=T;
tr 71 M=MMU_ENQ_FAP_STACK TSE=T SLTH=F;
echo " MMU_ENQ_PACKING_CTXT_FIFOS_FP_LL";
tr 50 M=MMU_ENQ_PACKING_CTXT_FIFOS_FP_LL;
tr 51 M=MMU_ENQ_PACKING_CTXT_FIFOS_FP_LL;
tr 52 M=MMU_ENQ_PACKING_CTXT_FIFOS_FP_LL;
tr 71 M=MMU_ENQ_PACKING_CTXT_FIFOS_FP_LL TSE=F SLTH=T;
tr 71 M=MMU_ENQ_PACKING_CTXT_FIFOS_FP_LL TSE=T SLTH=T;
tr 71 M=MMU_ENQ_PACKING_CTXT_FIFOS_FP_LL TSE=T SLTH=F;
#echo " MMU_ENQ_RQE_WR_COMPLETE_0";
#tr 50 M=MMU_ENQ_RQE_WR_COMPLETE_0;
#tr 51 M=MMU_ENQ_RQE_WR_COMPLETE_0;
#tr 52 M=MMU_ENQ_RQE_WR_COMPLETE_0;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_0 TSE=F SLTH=T;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_0 TSE=T SLTH=T;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_0 TSE=T SLTH=F;
#echo " MMU_ENQ_RQE_WR_COMPLETE_1";
#tr 50 M=MMU_ENQ_RQE_WR_COMPLETE_1;
#tr 51 M=MMU_ENQ_RQE_WR_COMPLETE_1;
#tr 52 M=MMU_ENQ_RQE_WR_COMPLETE_1;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_1 TSE=F SLTH=T;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_1 TSE=T SLTH=T;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_1 TSE=T SLTH=F;
#echo " MMU_ENQ_RQE_WR_COMPLETE_2";
#tr 50 M=MMU_ENQ_RQE_WR_COMPLETE_2;
#tr 51 M=MMU_ENQ_RQE_WR_COMPLETE_2;
#tr 52 M=MMU_ENQ_RQE_WR_COMPLETE_2;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_2 TSE=F SLTH=T;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_2 TSE=T SLTH=T;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_2 TSE=T SLTH=F;
#echo " MMU_ENQ_RQE_WR_COMPLETE_3";
#tr 50 M=MMU_ENQ_RQE_WR_COMPLETE_3;
#tr 51 M=MMU_ENQ_RQE_WR_COMPLETE_3;
#tr 52 M=MMU_ENQ_RQE_WR_COMPLETE_3;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_3 TSE=F SLTH=T;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_3 TSE=T SLTH=T;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_3 TSE=T SLTH=F;
#echo " MMU_ENQ_RQE_WR_COMPLETE_4";
#tr 50 M=MMU_ENQ_RQE_WR_COMPLETE_4;
#tr 51 M=MMU_ENQ_RQE_WR_COMPLETE_4;
#tr 52 M=MMU_ENQ_RQE_WR_COMPLETE_4;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_4 TSE=F SLTH=T;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_4 TSE=T SLTH=T;
#tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_4 TSE=T SLTH=F;
echo " MMU_ENQ_RQE_WR_COMPLETE_5";
tr 50 M=MMU_ENQ_RQE_WR_COMPLETE_5;
tr 51 M=MMU_ENQ_RQE_WR_COMPLETE_5;
tr 52 M=MMU_ENQ_RQE_WR_COMPLETE_5;
tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_5 TSE=F SLTH=T;
tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_5 TSE=T SLTH=T;
tr 71 M=MMU_ENQ_RQE_WR_COMPLETE_5 TSE=T SLTH=F;
#echo " MMU_ENQ_SRC_PORT_STATE_0";
#tr 50 M=MMU_ENQ_SRC_PORT_STATE_0;
#tr 51 M=MMU_ENQ_SRC_PORT_STATE_0;
#tr 52 M=MMU_ENQ_SRC_PORT_STATE_0;
#tr 71 M=MMU_ENQ_SRC_PORT_STATE_0 TSE=F SLTH=T;
#tr 71 M=MMU_ENQ_SRC_PORT_STATE_0 TSE=T SLTH=T;
#tr 71 M=MMU_ENQ_SRC_PORT_STATE_0 TSE=T SLTH=F;
#echo " MMU_ENQ_SRC_PORT_STATE_1";
#tr 50 M=MMU_ENQ_SRC_PORT_STATE_1;
#tr 51 M=MMU_ENQ_SRC_PORT_STATE_1;
#tr 52 M=MMU_ENQ_SRC_PORT_STATE_1;
#tr 71 M=MMU_ENQ_SRC_PORT_STATE_1 TSE=F SLTH=T;
#tr 71 M=MMU_ENQ_SRC_PORT_STATE_1 TSE=T SLTH=T;
#tr 71 M=MMU_ENQ_SRC_PORT_STATE_1 TSE=T SLTH=F;
echo " MMU_ENQ_SRC_PORT_STATE_2";
tr 50 M=MMU_ENQ_SRC_PORT_STATE_2;
tr 51 M=MMU_ENQ_SRC_PORT_STATE_2;
tr 52 M=MMU_ENQ_SRC_PORT_STATE_2;
tr 71 M=MMU_ENQ_SRC_PORT_STATE_2 TSE=F SLTH=T;
tr 71 M=MMU_ENQ_SRC_PORT_STATE_2 TSE=T SLTH=T;
tr 71 M=MMU_ENQ_SRC_PORT_STATE_2 TSE=T SLTH=F;
echo " MMU_ENQ_SRC_PPP_TO_S1_LOOKUP";
tr 50 M=MMU_ENQ_SRC_PPP_TO_S1_LOOKUP;
tr 51 M=MMU_ENQ_SRC_PPP_TO_S1_LOOKUP;
tr 52 M=MMU_ENQ_SRC_PPP_TO_S1_LOOKUP;
tr 71 M=MMU_ENQ_SRC_PPP_TO_S1_LOOKUP TSE=F SLTH=T;
tr 71 M=MMU_ENQ_SRC_PPP_TO_S1_LOOKUP TSE=T SLTH=T;
tr 71 M=MMU_ENQ_SRC_PPP_TO_S1_LOOKUP TSE=T SLTH=F;
echo " MMU_EXT_MC_GROUP_MAP";
tr 50 M=MMU_EXT_MC_GROUP_MAP;
tr 51 M=MMU_EXT_MC_GROUP_MAP;
tr 52 M=MMU_EXT_MC_GROUP_MAP;
tr 71 M=MMU_EXT_MC_GROUP_MAP TSE=F SLTH=T;
tr 71 M=MMU_EXT_MC_GROUP_MAP TSE=T SLTH=T;
tr 71 M=MMU_EXT_MC_GROUP_MAP TSE=T SLTH=F;
echo " MMU_EXT_MC_QUEUE_LIST0";
tr 50 M=MMU_EXT_MC_QUEUE_LIST0;
tr 51 M=MMU_EXT_MC_QUEUE_LIST0;
tr 52 M=MMU_EXT_MC_QUEUE_LIST0;
tr 71 M=MMU_EXT_MC_QUEUE_LIST0 TSE=F SLTH=T;
tr 71 M=MMU_EXT_MC_QUEUE_LIST0 TSE=T SLTH=T;
tr 71 M=MMU_EXT_MC_QUEUE_LIST0 TSE=T SLTH=F;
echo " MMU_EXT_MC_QUEUE_LIST1";
tr 50 M=MMU_EXT_MC_QUEUE_LIST1;
tr 51 M=MMU_EXT_MC_QUEUE_LIST1;
tr 52 M=MMU_EXT_MC_QUEUE_LIST1;
tr 71 M=MMU_EXT_MC_QUEUE_LIST1 TSE=F SLTH=T;
tr 71 M=MMU_EXT_MC_QUEUE_LIST1 TSE=T SLTH=T;
tr 71 M=MMU_EXT_MC_QUEUE_LIST1 TSE=T SLTH=F;
echo " MMU_EXT_MC_QUEUE_LIST4";
tr 50 M=MMU_EXT_MC_QUEUE_LIST4;
tr 51 M=MMU_EXT_MC_QUEUE_LIST4;
tr 52 M=MMU_EXT_MC_QUEUE_LIST4;
tr 71 M=MMU_EXT_MC_QUEUE_LIST4 TSE=F SLTH=T;
tr 71 M=MMU_EXT_MC_QUEUE_LIST4 TSE=T SLTH=T;
tr 71 M=MMU_EXT_MC_QUEUE_LIST4 TSE=T SLTH=F;
echo " MMU_INTFI_BASE_INDEX_TBL";
tr 50 M=MMU_INTFI_BASE_INDEX_TBL;
tr 51 M=MMU_INTFI_BASE_INDEX_TBL;
tr 52 M=MMU_INTFI_BASE_INDEX_TBL;
tr 71 M=MMU_INTFI_BASE_INDEX_TBL TSE=F SLTH=T;
tr 71 M=MMU_INTFI_BASE_INDEX_TBL TSE=T SLTH=T;
tr 71 M=MMU_INTFI_BASE_INDEX_TBL TSE=T SLTH=F;
#echo " MMU_INTFI_DEBUG_MEM";
#tr 50 M=MMU_INTFI_DEBUG_MEM;
#tr 51 M=MMU_INTFI_DEBUG_MEM;
#tr 52 M=MMU_INTFI_DEBUG_MEM;
#tr 71 M=MMU_INTFI_DEBUG_MEM TSE=F SLTH=T;
#tr 71 M=MMU_INTFI_DEBUG_MEM TSE=T SLTH=T;
#tr 71 M=MMU_INTFI_DEBUG_MEM TSE=T SLTH=F;
echo " MMU_INTFI_FC_MAP_TBL0";
tr 50 M=MMU_INTFI_FC_MAP_TBL0;
tr 51 M=MMU_INTFI_FC_MAP_TBL0;
tr 52 M=MMU_INTFI_FC_MAP_TBL0;
tr 71 M=MMU_INTFI_FC_MAP_TBL0 TSE=F SLTH=T;
tr 71 M=MMU_INTFI_FC_MAP_TBL0 TSE=T SLTH=T;
tr 71 M=MMU_INTFI_FC_MAP_TBL0 TSE=T SLTH=F;
echo " MMU_INTFI_FC_MAP_TBL1";
tr 50 M=MMU_INTFI_FC_MAP_TBL1;
tr 51 M=MMU_INTFI_FC_MAP_TBL1;
tr 52 M=MMU_INTFI_FC_MAP_TBL1;
tr 71 M=MMU_INTFI_FC_MAP_TBL1 TSE=F SLTH=T;
tr 71 M=MMU_INTFI_FC_MAP_TBL1 TSE=T SLTH=T;
tr 71 M=MMU_INTFI_FC_MAP_TBL1 TSE=T SLTH=F;
echo " MMU_INTFI_FC_MAP_TBL2";
tr 50 M=MMU_INTFI_FC_MAP_TBL2;
tr 51 M=MMU_INTFI_FC_MAP_TBL2;
tr 52 M=MMU_INTFI_FC_MAP_TBL2;
tr 71 M=MMU_INTFI_FC_MAP_TBL2 TSE=F SLTH=T;
tr 71 M=MMU_INTFI_FC_MAP_TBL2 TSE=T SLTH=T;
tr 71 M=MMU_INTFI_FC_MAP_TBL2 TSE=T SLTH=F;
echo " MMU_INTFI_FC_ST_TBL0";
tr 50 M=MMU_INTFI_FC_ST_TBL0;
tr 51 M=MMU_INTFI_FC_ST_TBL0;
tr 52 M=MMU_INTFI_FC_ST_TBL0;
tr 71 M=MMU_INTFI_FC_ST_TBL0 TSE=F SLTH=T;
tr 71 M=MMU_INTFI_FC_ST_TBL0 TSE=T SLTH=T;
tr 71 M=MMU_INTFI_FC_ST_TBL0 TSE=T SLTH=F;
echo " MMU_INTFI_FC_ST_TBL1";
tr 50 M=MMU_INTFI_FC_ST_TBL1;
tr 51 M=MMU_INTFI_FC_ST_TBL1;
tr 52 M=MMU_INTFI_FC_ST_TBL1;
tr 71 M=MMU_INTFI_FC_ST_TBL1 TSE=F SLTH=T;
tr 71 M=MMU_INTFI_FC_ST_TBL1 TSE=T SLTH=T;
tr 71 M=MMU_INTFI_FC_ST_TBL1 TSE=T SLTH=F;
echo " MMU_INTFI_FC_ST_TBL2";
tr 50 M=MMU_INTFI_FC_ST_TBL2;
tr 51 M=MMU_INTFI_FC_ST_TBL2;
tr 52 M=MMU_INTFI_FC_ST_TBL2;
tr 71 M=MMU_INTFI_FC_ST_TBL2 TSE=F SLTH=T;
tr 71 M=MMU_INTFI_FC_ST_TBL2 TSE=T SLTH=T;
tr 71 M=MMU_INTFI_FC_ST_TBL2 TSE=T SLTH=F;
echo " MMU_INTFI_MERGE_ST_TBL";
tr 50 M=MMU_INTFI_MERGE_ST_TBL;
tr 51 M=MMU_INTFI_MERGE_ST_TBL;
tr 52 M=MMU_INTFI_MERGE_ST_TBL;
tr 71 M=MMU_INTFI_MERGE_ST_TBL TSE=F SLTH=T;
tr 71 M=MMU_INTFI_MERGE_ST_TBL TSE=T SLTH=T;
tr 71 M=MMU_INTFI_MERGE_ST_TBL TSE=T SLTH=F;
echo " MMU_INTFI_OFFSET_MAP_TBL";
tr 50 M=MMU_INTFI_OFFSET_MAP_TBL;
tr 51 M=MMU_INTFI_OFFSET_MAP_TBL;
tr 52 M=MMU_INTFI_OFFSET_MAP_TBL;
tr 71 M=MMU_INTFI_OFFSET_MAP_TBL TSE=F SLTH=T;
tr 71 M=MMU_INTFI_OFFSET_MAP_TBL TSE=T SLTH=T;
tr 71 M=MMU_INTFI_OFFSET_MAP_TBL TSE=T SLTH=F;
#echo " MMU_INTFI_PFC_ST_TBL";
#tr 50 M=MMU_INTFI_PFC_ST_TBL;
#tr 51 M=MMU_INTFI_PFC_ST_TBL;
#tr 52 M=MMU_INTFI_PFC_ST_TBL;
#tr 71 M=MMU_INTFI_PFC_ST_TBL TSE=F SLTH=T;
#tr 71 M=MMU_INTFI_PFC_ST_TBL TSE=T SLTH=T;
#tr 71 M=MMU_INTFI_PFC_ST_TBL TSE=T SLTH=F;
echo " MMU_INTFI_ST_TRANS_TBL";
tr 50 M=MMU_INTFI_ST_TRANS_TBL;
tr 51 M=MMU_INTFI_ST_TRANS_TBL;
tr 52 M=MMU_INTFI_ST_TRANS_TBL;
tr 71 M=MMU_INTFI_ST_TRANS_TBL TSE=F SLTH=T;
tr 71 M=MMU_INTFI_ST_TRANS_TBL TSE=T SLTH=T;
tr 71 M=MMU_INTFI_ST_TRANS_TBL TSE=T SLTH=F;
echo " MMU_INTFO_TC2PRI_MAPPING";
tr 50 M=MMU_INTFO_TC2PRI_MAPPING;
tr 51 M=MMU_INTFO_TC2PRI_MAPPING;
tr 52 M=MMU_INTFO_TC2PRI_MAPPING;
tr 71 M=MMU_INTFO_TC2PRI_MAPPING TSE=F SLTH=T;
tr 71 M=MMU_INTFO_TC2PRI_MAPPING TSE=T SLTH=T;
tr 71 M=MMU_INTFO_TC2PRI_MAPPING TSE=T SLTH=F;
echo " MMU_IPCTR_CTXT_COUNTER_0";
tr 50 M=MMU_IPCTR_CTXT_COUNTER_0;
tr 51 M=MMU_IPCTR_CTXT_COUNTER_0;
tr 52 M=MMU_IPCTR_CTXT_COUNTER_0;
tr 71 M=MMU_IPCTR_CTXT_COUNTER_0 TSE=F SLTH=T;
tr 71 M=MMU_IPCTR_CTXT_COUNTER_0 TSE=T SLTH=T;
tr 71 M=MMU_IPCTR_CTXT_COUNTER_0 TSE=T SLTH=F;
echo " MMU_IPCTR_PG_COUNTER_0";
tr 50 M=MMU_IPCTR_PG_COUNTER_0;
tr 51 M=MMU_IPCTR_PG_COUNTER_0;
tr 52 M=MMU_IPCTR_PG_COUNTER_0;
tr 71 M=MMU_IPCTR_PG_COUNTER_0 TSE=F SLTH=T;
tr 71 M=MMU_IPCTR_PG_COUNTER_0 TSE=T SLTH=T;
tr 71 M=MMU_IPCTR_PG_COUNTER_0 TSE=T SLTH=F;
echo " MMU_IPCTR_PG_COUNTER_1";
tr 50 M=MMU_IPCTR_PG_COUNTER_1;
tr 51 M=MMU_IPCTR_PG_COUNTER_1;
tr 52 M=MMU_IPCTR_PG_COUNTER_1;
tr 71 M=MMU_IPCTR_PG_COUNTER_1 TSE=F SLTH=T;
tr 71 M=MMU_IPCTR_PG_COUNTER_1 TSE=T SLTH=T;
tr 71 M=MMU_IPCTR_PG_COUNTER_1 TSE=T SLTH=F;
echo " MMU_IPMC_GROUP_TBL0";
tr 50 M=MMU_IPMC_GROUP_TBL0;
tr 51 M=MMU_IPMC_GROUP_TBL0;
tr 52 M=MMU_IPMC_GROUP_TBL0;
tr 71 M=MMU_IPMC_GROUP_TBL0 TSE=F SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL0 TSE=T SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL0 TSE=T SLTH=F;
echo " MMU_IPMC_GROUP_TBL1";
tr 50 M=MMU_IPMC_GROUP_TBL1;
tr 51 M=MMU_IPMC_GROUP_TBL1;
tr 52 M=MMU_IPMC_GROUP_TBL1;
tr 71 M=MMU_IPMC_GROUP_TBL1 TSE=F SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL1 TSE=T SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL1 TSE=T SLTH=F;
echo " MMU_IPMC_GROUP_TBL2";
tr 50 M=MMU_IPMC_GROUP_TBL2;
tr 51 M=MMU_IPMC_GROUP_TBL2;
tr 52 M=MMU_IPMC_GROUP_TBL2;
tr 71 M=MMU_IPMC_GROUP_TBL2 TSE=F SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL2 TSE=T SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL2 TSE=T SLTH=F;
echo " MMU_IPMC_GROUP_TBL3";
tr 50 M=MMU_IPMC_GROUP_TBL3;
tr 51 M=MMU_IPMC_GROUP_TBL3;
tr 52 M=MMU_IPMC_GROUP_TBL3;
tr 71 M=MMU_IPMC_GROUP_TBL3 TSE=F SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL3 TSE=T SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL3 TSE=T SLTH=F;
echo " MMU_IPMC_GROUP_TBL4";
tr 50 M=MMU_IPMC_GROUP_TBL4;
tr 51 M=MMU_IPMC_GROUP_TBL4;
tr 52 M=MMU_IPMC_GROUP_TBL4;
tr 71 M=MMU_IPMC_GROUP_TBL4 TSE=F SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL4 TSE=T SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL4 TSE=T SLTH=F;
echo " MMU_ITE_PACKET_PTR_STORE";
tr 50 M=MMU_ITE_PACKET_PTR_STORE;
tr 51 M=MMU_ITE_PACKET_PTR_STORE;
tr 52 M=MMU_ITE_PACKET_PTR_STORE;
tr 71 M=MMU_ITE_PACKET_PTR_STORE TSE=F SLTH=T;
tr 71 M=MMU_ITE_PACKET_PTR_STORE TSE=T SLTH=T;
tr 71 M=MMU_ITE_PACKET_PTR_STORE TSE=T SLTH=F;
echo " MMU_ITE_QMGR_FLL";
tr 50 M=MMU_ITE_QMGR_FLL;
tr 51 M=MMU_ITE_QMGR_FLL;
tr 52 M=MMU_ITE_QMGR_FLL;
tr 71 M=MMU_ITE_QMGR_FLL TSE=F SLTH=T;
tr 71 M=MMU_ITE_QMGR_FLL TSE=T SLTH=T;
tr 71 M=MMU_ITE_QMGR_FLL TSE=T SLTH=F;
echo " MMU_ITE_QMGR_QLL";
tr 50 M=MMU_ITE_QMGR_QLL;
tr 51 M=MMU_ITE_QMGR_QLL;
tr 52 M=MMU_ITE_QMGR_QLL;
tr 71 M=MMU_ITE_QMGR_QLL TSE=F SLTH=T;
tr 71 M=MMU_ITE_QMGR_QLL TSE=T SLTH=T;
tr 71 M=MMU_ITE_QMGR_QLL TSE=T SLTH=F;
#echo " MMU_ITE_WORK_QUEUE_0";
#tr 50 M=MMU_ITE_WORK_QUEUE_0;
#tr 51 M=MMU_ITE_WORK_QUEUE_0;
#tr 52 M=MMU_ITE_WORK_QUEUE_0;
#tr 71 M=MMU_ITE_WORK_QUEUE_0 TSE=F SLTH=T;
#tr 71 M=MMU_ITE_WORK_QUEUE_0 TSE=T SLTH=T;
#tr 71 M=MMU_ITE_WORK_QUEUE_0 TSE=T SLTH=F;
#echo " MMU_ITE_WORK_QUEUE_1";
#tr 50 M=MMU_ITE_WORK_QUEUE_1;
#tr 51 M=MMU_ITE_WORK_QUEUE_1;
#tr 52 M=MMU_ITE_WORK_QUEUE_1;
#tr 71 M=MMU_ITE_WORK_QUEUE_1 TSE=F SLTH=T;
#tr 71 M=MMU_ITE_WORK_QUEUE_1 TSE=T SLTH=T;
#tr 71 M=MMU_ITE_WORK_QUEUE_1 TSE=T SLTH=F;
echo " MMU_ITE_WORK_QUEUE_2";
tr 50 M=MMU_ITE_WORK_QUEUE_2;
tr 51 M=MMU_ITE_WORK_QUEUE_2;
tr 52 M=MMU_ITE_WORK_QUEUE_2;
tr 71 M=MMU_ITE_WORK_QUEUE_2 TSE=F SLTH=T;
tr 71 M=MMU_ITE_WORK_QUEUE_2 TSE=T SLTH=T;
tr 71 M=MMU_ITE_WORK_QUEUE_2 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_BM_0";
tr 50 M=MMU_QSTRUCT_QBLOCK_BM_0;
tr 51 M=MMU_QSTRUCT_QBLOCK_BM_0;
tr 52 M=MMU_QSTRUCT_QBLOCK_BM_0;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_0 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_0 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_0 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_BM_1";
tr 50 M=MMU_QSTRUCT_QBLOCK_BM_1;
tr 51 M=MMU_QSTRUCT_QBLOCK_BM_1;
tr 52 M=MMU_QSTRUCT_QBLOCK_BM_1;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_1 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_1 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_1 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_BM_2";
tr 50 M=MMU_QSTRUCT_QBLOCK_BM_2;
tr 51 M=MMU_QSTRUCT_QBLOCK_BM_2;
tr 52 M=MMU_QSTRUCT_QBLOCK_BM_2;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_2 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_2 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_2 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_BM_3";
tr 50 M=MMU_QSTRUCT_QBLOCK_BM_3;
tr 51 M=MMU_QSTRUCT_QBLOCK_BM_3;
tr 52 M=MMU_QSTRUCT_QBLOCK_BM_3;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_3 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_3 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_3 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_BM_FIFO_0";
tr 50 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_0;
tr 51 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_0;
tr 52 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_0;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_0 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_0 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_0 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_BM_FIFO_1";
tr 50 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_1;
tr 51 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_1;
tr 52 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_1;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_1 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_1 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_1 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_BM_FIFO_2";
tr 50 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_2;
tr 51 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_2;
tr 52 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_2;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_2 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_2 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_2 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_BM_FIFO_3";
tr 50 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_3;
tr 51 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_3;
tr 52 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_3;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_3 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_3 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_BM_FIFO_3 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_NEXT_0";
tr 50 M=MMU_QSTRUCT_QBLOCK_NEXT_0;
tr 51 M=MMU_QSTRUCT_QBLOCK_NEXT_0;
tr 52 M=MMU_QSTRUCT_QBLOCK_NEXT_0;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_0 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_0 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_0 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_NEXT_1";
tr 50 M=MMU_QSTRUCT_QBLOCK_NEXT_1;
tr 51 M=MMU_QSTRUCT_QBLOCK_NEXT_1;
tr 52 M=MMU_QSTRUCT_QBLOCK_NEXT_1;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_1 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_1 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_1 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_NEXT_2";
tr 50 M=MMU_QSTRUCT_QBLOCK_NEXT_2;
tr 51 M=MMU_QSTRUCT_QBLOCK_NEXT_2;
tr 52 M=MMU_QSTRUCT_QBLOCK_NEXT_2;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_2 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_2 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_2 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_NEXT_3";
tr 50 M=MMU_QSTRUCT_QBLOCK_NEXT_3;
tr 51 M=MMU_QSTRUCT_QBLOCK_NEXT_3;
tr 52 M=MMU_QSTRUCT_QBLOCK_NEXT_3;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_3 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_3 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_3 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_NEXT_4";
tr 50 M=MMU_QSTRUCT_QBLOCK_NEXT_4;
tr 51 M=MMU_QSTRUCT_QBLOCK_NEXT_4;
tr 52 M=MMU_QSTRUCT_QBLOCK_NEXT_4;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_4 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_4 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_4 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_NEXT_5";
tr 50 M=MMU_QSTRUCT_QBLOCK_NEXT_5;
tr 51 M=MMU_QSTRUCT_QBLOCK_NEXT_5;
tr 52 M=MMU_QSTRUCT_QBLOCK_NEXT_5;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_5 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_5 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_5 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_NEXT_6";
tr 50 M=MMU_QSTRUCT_QBLOCK_NEXT_6;
tr 51 M=MMU_QSTRUCT_QBLOCK_NEXT_6;
tr 52 M=MMU_QSTRUCT_QBLOCK_NEXT_6;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_6 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_6 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_6 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QBLOCK_NEXT_7";
tr 50 M=MMU_QSTRUCT_QBLOCK_NEXT_7;
tr 51 M=MMU_QSTRUCT_QBLOCK_NEXT_7;
tr 52 M=MMU_QSTRUCT_QBLOCK_NEXT_7;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_7 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_7 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QBLOCK_NEXT_7 TSE=T SLTH=F;
if !$?LIKE_BCM56456 \
   'echo " MMU_QSTRUCT_QENTRY_LOWER_0"; \
    tr 50 M=MMU_QSTRUCT_QENTRY_LOWER_0; \
    tr 51 M=MMU_QSTRUCT_QENTRY_LOWER_0; \
    tr 52 M=MMU_QSTRUCT_QENTRY_LOWER_0; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_0 TSE=F SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_0 TSE=T SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_0 TSE=T SLTH=F; \
    echo " MMU_QSTRUCT_QENTRY_LOWER_1"; \
    tr 50 M=MMU_QSTRUCT_QENTRY_LOWER_1; \
    tr 51 M=MMU_QSTRUCT_QENTRY_LOWER_1; \
    tr 52 M=MMU_QSTRUCT_QENTRY_LOWER_1; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_1 TSE=F SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_1 TSE=T SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_1 TSE=T SLTH=F; \
    echo " MMU_QSTRUCT_QENTRY_LOWER_2"; \
    tr 50 M=MMU_QSTRUCT_QENTRY_LOWER_2; \
    tr 51 M=MMU_QSTRUCT_QENTRY_LOWER_2; \
    tr 52 M=MMU_QSTRUCT_QENTRY_LOWER_2; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_2 TSE=F SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_2 TSE=T SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_2 TSE=T SLTH=F; \
    echo " MMU_QSTRUCT_QENTRY_LOWER_3"; \
    tr 50 M=MMU_QSTRUCT_QENTRY_LOWER_3; \
    tr 51 M=MMU_QSTRUCT_QENTRY_LOWER_3; \
    tr 52 M=MMU_QSTRUCT_QENTRY_LOWER_3; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_3 TSE=F SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_3 TSE=T SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_3 TSE=T SLTH=F; \
    echo " MMU_QSTRUCT_QENTRY_LOWER_4"; \
    tr 50 M=MMU_QSTRUCT_QENTRY_LOWER_4; \
    tr 51 M=MMU_QSTRUCT_QENTRY_LOWER_4; \
    tr 52 M=MMU_QSTRUCT_QENTRY_LOWER_4; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_4 TSE=F SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_4 TSE=T SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_4 TSE=T SLTH=F; \
    echo " MMU_QSTRUCT_QENTRY_LOWER_5"; \
    tr 50 M=MMU_QSTRUCT_QENTRY_LOWER_5; \
    tr 51 M=MMU_QSTRUCT_QENTRY_LOWER_5; \
    tr 52 M=MMU_QSTRUCT_QENTRY_LOWER_5; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_5 TSE=F SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_5 TSE=T SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_5 TSE=T SLTH=F; \
    echo " MMU_QSTRUCT_QENTRY_LOWER_6"; \
    tr 50 M=MMU_QSTRUCT_QENTRY_LOWER_6; \
    tr 51 M=MMU_QSTRUCT_QENTRY_LOWER_6; \
    tr 52 M=MMU_QSTRUCT_QENTRY_LOWER_6; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_6 TSE=F SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_6 TSE=T SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_6 TSE=T SLTH=F; \
    echo " MMU_QSTRUCT_QENTRY_LOWER_7"; \
    tr 50 M=MMU_QSTRUCT_QENTRY_LOWER_7; \
    tr 51 M=MMU_QSTRUCT_QENTRY_LOWER_7; \
    tr 52 M=MMU_QSTRUCT_QENTRY_LOWER_7; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_7 TSE=F SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_7 TSE=T SLTH=T; \
    tr 71 M=MMU_QSTRUCT_QENTRY_LOWER_7 TSE=T SLTH=F; \
    $done;'
echo " MMU_QSTRUCT_QENTRY_UPPER_0";
tr 50 M=MMU_QSTRUCT_QENTRY_UPPER_0;
tr 51 M=MMU_QSTRUCT_QENTRY_UPPER_0;
tr 52 M=MMU_QSTRUCT_QENTRY_UPPER_0;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_0 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_0 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_0 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QENTRY_UPPER_1";
tr 50 M=MMU_QSTRUCT_QENTRY_UPPER_1;
tr 51 M=MMU_QSTRUCT_QENTRY_UPPER_1;
tr 52 M=MMU_QSTRUCT_QENTRY_UPPER_1;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_1 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_1 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_1 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QENTRY_UPPER_2";
tr 50 M=MMU_QSTRUCT_QENTRY_UPPER_2;
tr 51 M=MMU_QSTRUCT_QENTRY_UPPER_2;
tr 52 M=MMU_QSTRUCT_QENTRY_UPPER_2;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_2 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_2 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_2 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QENTRY_UPPER_3";
tr 50 M=MMU_QSTRUCT_QENTRY_UPPER_3;
tr 51 M=MMU_QSTRUCT_QENTRY_UPPER_3;
tr 52 M=MMU_QSTRUCT_QENTRY_UPPER_3;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_3 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_3 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_3 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QENTRY_UPPER_4";
tr 50 M=MMU_QSTRUCT_QENTRY_UPPER_4;
tr 51 M=MMU_QSTRUCT_QENTRY_UPPER_4;
tr 52 M=MMU_QSTRUCT_QENTRY_UPPER_4;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_4 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_4 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_4 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QENTRY_UPPER_5";
tr 50 M=MMU_QSTRUCT_QENTRY_UPPER_5;
tr 51 M=MMU_QSTRUCT_QENTRY_UPPER_5;
tr 52 M=MMU_QSTRUCT_QENTRY_UPPER_5;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_5 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_5 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_5 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QENTRY_UPPER_6";
tr 50 M=MMU_QSTRUCT_QENTRY_UPPER_6;
tr 51 M=MMU_QSTRUCT_QENTRY_UPPER_6;
tr 52 M=MMU_QSTRUCT_QENTRY_UPPER_6;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_6 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_6 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_6 TSE=T SLTH=F;
echo " MMU_QSTRUCT_QENTRY_UPPER_7";
tr 50 M=MMU_QSTRUCT_QENTRY_UPPER_7;
tr 51 M=MMU_QSTRUCT_QENTRY_UPPER_7;
tr 52 M=MMU_QSTRUCT_QENTRY_UPPER_7;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_7 TSE=F SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_7 TSE=T SLTH=T;
tr 71 M=MMU_QSTRUCT_QENTRY_UPPER_7 TSE=T SLTH=F;
echo " MMU_RDE_ADM_DPC_STORE_MEM";
tr 50 M=MMU_RDE_ADM_DPC_STORE_MEM;
tr 51 M=MMU_RDE_ADM_DPC_STORE_MEM;
tr 52 M=MMU_RDE_ADM_DPC_STORE_MEM;
tr 71 M=MMU_RDE_ADM_DPC_STORE_MEM TSE=F SLTH=T;
tr 71 M=MMU_RDE_ADM_DPC_STORE_MEM TSE=T SLTH=T;
tr 71 M=MMU_RDE_ADM_DPC_STORE_MEM TSE=T SLTH=F;
echo " MMU_RDE_ITE_REL_FIFO_MEM";
tr 50 M=MMU_RDE_ITE_REL_FIFO_MEM;
tr 51 M=MMU_RDE_ITE_REL_FIFO_MEM;
tr 52 M=MMU_RDE_ITE_REL_FIFO_MEM;
tr 71 M=MMU_RDE_ITE_REL_FIFO_MEM TSE=F SLTH=T;
tr 71 M=MMU_RDE_ITE_REL_FIFO_MEM TSE=T SLTH=T;
tr 71 M=MMU_RDE_ITE_REL_FIFO_MEM TSE=T SLTH=F;
echo " MMU_RDE_PQE_FIFO_MEM";
tr 50 M=MMU_RDE_PQE_FIFO_MEM;
tr 51 M=MMU_RDE_PQE_FIFO_MEM;
tr 52 M=MMU_RDE_PQE_FIFO_MEM;
tr 71 M=MMU_RDE_PQE_FIFO_MEM TSE=F SLTH=T;
tr 71 M=MMU_RDE_PQE_FIFO_MEM TSE=T SLTH=T;
tr 71 M=MMU_RDE_PQE_FIFO_MEM TSE=T SLTH=F;
echo " MMU_RDE_REAL_CELL_FIFO_MEM";
tr 50 M=MMU_RDE_REAL_CELL_FIFO_MEM;
tr 51 M=MMU_RDE_REAL_CELL_FIFO_MEM;
tr 52 M=MMU_RDE_REAL_CELL_FIFO_MEM;
tr 71 M=MMU_RDE_REAL_CELL_FIFO_MEM TSE=F SLTH=T;
tr 71 M=MMU_RDE_REAL_CELL_FIFO_MEM TSE=T SLTH=T;
tr 71 M=MMU_RDE_REAL_CELL_FIFO_MEM TSE=T SLTH=F;
echo " MMU_RDE_TXQ_FLL";
tr 50 M=MMU_RDE_TXQ_FLL;
tr 51 M=MMU_RDE_TXQ_FLL;
tr 52 M=MMU_RDE_TXQ_FLL;
tr 71 M=MMU_RDE_TXQ_FLL TSE=F SLTH=T;
tr 71 M=MMU_RDE_TXQ_FLL TSE=T SLTH=T;
tr 71 M=MMU_RDE_TXQ_FLL TSE=T SLTH=F;
echo " MMU_RDE_TXQ_QLL";
tr 50 M=MMU_RDE_TXQ_QLL;
tr 51 M=MMU_RDE_TXQ_QLL;
tr 52 M=MMU_RDE_TXQ_QLL;
tr 71 M=MMU_RDE_TXQ_QLL TSE=F SLTH=T;
tr 71 M=MMU_RDE_TXQ_QLL TSE=T SLTH=T;
tr 71 M=MMU_RDE_TXQ_QLL TSE=T SLTH=F;
echo " MMU_RDE_TXQ_STATE";
tr 50 M=MMU_RDE_TXQ_STATE;
tr 51 M=MMU_RDE_TXQ_STATE;
tr 52 M=MMU_RDE_TXQ_STATE;
tr 71 M=MMU_RDE_TXQ_STATE TSE=F SLTH=T;
tr 71 M=MMU_RDE_TXQ_STATE TSE=T SLTH=T;
tr 71 M=MMU_RDE_TXQ_STATE TSE=T SLTH=F;
echo " MMU_REPL_GRP_TBL0";
tr 50 M=MMU_REPL_GRP_TBL0;
tr 51 M=MMU_REPL_GRP_TBL0;
tr 52 M=MMU_REPL_GRP_TBL0;
tr 71 M=MMU_REPL_GRP_TBL0 TSE=F SLTH=T;
tr 71 M=MMU_REPL_GRP_TBL0 TSE=T SLTH=T;
tr 71 M=MMU_REPL_GRP_TBL0 TSE=T SLTH=F;
echo " MMU_REPL_GRP_TBL1";
tr 50 M=MMU_REPL_GRP_TBL1;
tr 51 M=MMU_REPL_GRP_TBL1;
tr 52 M=MMU_REPL_GRP_TBL1;
tr 71 M=MMU_REPL_GRP_TBL1 TSE=F SLTH=T;
tr 71 M=MMU_REPL_GRP_TBL1 TSE=T SLTH=T;
tr 71 M=MMU_REPL_GRP_TBL1 TSE=T SLTH=F;
echo " MMU_REPL_GRP_TBL2";
tr 50 M=MMU_REPL_GRP_TBL2;
tr 51 M=MMU_REPL_GRP_TBL2;
tr 52 M=MMU_REPL_GRP_TBL2;
tr 71 M=MMU_REPL_GRP_TBL2 TSE=F SLTH=T;
tr 71 M=MMU_REPL_GRP_TBL2 TSE=T SLTH=T;
tr 71 M=MMU_REPL_GRP_TBL2 TSE=T SLTH=F;
echo " MMU_REPL_HEAD_TBL";
tr 50 M=MMU_REPL_HEAD_TBL;
tr 51 M=MMU_REPL_HEAD_TBL;
tr 52 M=MMU_REPL_HEAD_TBL;
tr 71 M=MMU_REPL_HEAD_TBL TSE=F SLTH=T;
tr 71 M=MMU_REPL_HEAD_TBL TSE=T SLTH=T;
tr 71 M=MMU_REPL_HEAD_TBL TSE=T SLTH=F;
echo " MMU_REPL_LIST_TBL";
tr 50 M=MMU_REPL_LIST_TBL;
tr 51 M=MMU_REPL_LIST_TBL;
tr 52 M=MMU_REPL_LIST_TBL;
tr 71 M=MMU_REPL_LIST_TBL TSE=F SLTH=T;
tr 71 M=MMU_REPL_LIST_TBL TSE=T SLTH=T;
tr 71 M=MMU_REPL_LIST_TBL TSE=T SLTH=F;
echo " MMU_REPL_MAP_TBL";
tr 50 M=MMU_REPL_MAP_TBL;
tr 51 M=MMU_REPL_MAP_TBL;
tr 52 M=MMU_REPL_MAP_TBL;
tr 71 M=MMU_REPL_MAP_TBL TSE=F SLTH=T;
tr 71 M=MMU_REPL_MAP_TBL TSE=T SLTH=T;
tr 71 M=MMU_REPL_MAP_TBL TSE=T SLTH=F;
echo " MMU_REPL_STATE_TBL";
tr 50 M=MMU_REPL_STATE_TBL;
tr 51 M=MMU_REPL_STATE_TBL;
tr 52 M=MMU_REPL_STATE_TBL;
tr 71 M=MMU_REPL_STATE_TBL TSE=F SLTH=T;
tr 71 M=MMU_REPL_STATE_TBL TSE=T SLTH=T;
tr 71 M=MMU_REPL_STATE_TBL TSE=T SLTH=F;
echo " MMU_RPFAP_BITMAP";
tr 50 M=MMU_RPFAP_BITMAP;
tr 51 M=MMU_RPFAP_BITMAP;
tr 52 M=MMU_RPFAP_BITMAP;
tr 71 M=MMU_RPFAP_BITMAP TSE=F SLTH=T;
tr 71 M=MMU_RPFAP_BITMAP TSE=T SLTH=T;
tr 71 M=MMU_RPFAP_BITMAP TSE=T SLTH=F;
echo " MMU_RPFAP_STACK";
tr 50 M=MMU_RPFAP_STACK;
tr 51 M=MMU_RPFAP_STACK;
tr 52 M=MMU_RPFAP_STACK;
tr 71 M=MMU_RPFAP_STACK TSE=F SLTH=T;
tr 71 M=MMU_RPFAP_STACK TSE=T SLTH=T;
tr 71 M=MMU_RPFAP_STACK TSE=T SLTH=F;
echo " MMU_RQE_QMGR_FLL";
tr 50 M=MMU_RQE_QMGR_FLL;
tr 51 M=MMU_RQE_QMGR_FLL;
tr 52 M=MMU_RQE_QMGR_FLL;
tr 71 M=MMU_RQE_QMGR_FLL TSE=F SLTH=T;
tr 71 M=MMU_RQE_QMGR_FLL TSE=T SLTH=T;
tr 71 M=MMU_RQE_QMGR_FLL TSE=T SLTH=F;
echo " MMU_RQE_QMGR_QLL";
tr 50 M=MMU_RQE_QMGR_QLL;
tr 51 M=MMU_RQE_QMGR_QLL;
tr 52 M=MMU_RQE_QMGR_QLL;
tr 71 M=MMU_RQE_QMGR_QLL TSE=F SLTH=T;
tr 71 M=MMU_RQE_QMGR_QLL TSE=T SLTH=T;
tr 71 M=MMU_RQE_QMGR_QLL TSE=T SLTH=F;
echo " MMU_RQE_QUEUE_OP_NODE_MAP";
tr 50 M=MMU_RQE_QUEUE_OP_NODE_MAP;
tr 51 M=MMU_RQE_QUEUE_OP_NODE_MAP;
tr 52 M=MMU_RQE_QUEUE_OP_NODE_MAP;
tr 71 M=MMU_RQE_QUEUE_OP_NODE_MAP TSE=F SLTH=T;
tr 71 M=MMU_RQE_QUEUE_OP_NODE_MAP TSE=T SLTH=T;
tr 71 M=MMU_RQE_QUEUE_OP_NODE_MAP TSE=T SLTH=F;
echo " MMU_RQE_WORK_QUEUE";
tr 50 M=MMU_RQE_WORK_QUEUE;
tr 51 M=MMU_RQE_WORK_QUEUE;
tr 52 M=MMU_RQE_WORK_QUEUE;
tr 71 M=MMU_RQE_WORK_QUEUE TSE=F SLTH=T;
tr 71 M=MMU_RQE_WORK_QUEUE TSE=T SLTH=T;
tr 71 M=MMU_RQE_WORK_QUEUE TSE=T SLTH=F;
echo " MMU_THDO_CTRO_UC_DTYPE";
tr 50 M=MMU_THDO_CTRO_UC_DTYPE;
tr 51 M=MMU_THDO_CTRO_UC_DTYPE;
tr 52 M=MMU_THDO_CTRO_UC_DTYPE;
tr 71 M=MMU_THDO_CTRO_UC_DTYPE TSE=F SLTH=T;
tr 71 M=MMU_THDO_CTRO_UC_DTYPE TSE=T SLTH=T;
tr 71 M=MMU_THDO_CTRO_UC_DTYPE TSE=T SLTH=F;
echo " MMU_THDO_CTRO_UC_PKT_STORE";
tr 50 M=MMU_THDO_CTRO_UC_PKT_STORE;
tr 51 M=MMU_THDO_CTRO_UC_PKT_STORE;
tr 52 M=MMU_THDO_CTRO_UC_PKT_STORE;
tr 71 M=MMU_THDO_CTRO_UC_PKT_STORE TSE=F SLTH=T;
tr 71 M=MMU_THDO_CTRO_UC_PKT_STORE TSE=T SLTH=T;
tr 71 M=MMU_THDO_CTRO_UC_PKT_STORE TSE=T SLTH=F;
echo " MMU_THDO_OPNCONFIG_CELL";
tr 50 M=MMU_THDO_OPNCONFIG_CELL;
tr 51 M=MMU_THDO_OPNCONFIG_CELL;
tr 52 M=MMU_THDO_OPNCONFIG_CELL;
tr 71 M=MMU_THDO_OPNCONFIG_CELL TSE=F SLTH=T;
tr 71 M=MMU_THDO_OPNCONFIG_CELL TSE=T SLTH=T;
tr 71 M=MMU_THDO_OPNCONFIG_CELL TSE=T SLTH=F;
echo " MMU_THDO_OPNCONFIG_QENTRY";
tr 50 M=MMU_THDO_OPNCONFIG_QENTRY;
tr 51 M=MMU_THDO_OPNCONFIG_QENTRY;
tr 52 M=MMU_THDO_OPNCONFIG_QENTRY;
tr 71 M=MMU_THDO_OPNCONFIG_QENTRY TSE=F SLTH=T;
tr 71 M=MMU_THDO_OPNCONFIG_QENTRY TSE=T SLTH=T;
tr 71 M=MMU_THDO_OPNCONFIG_QENTRY TSE=T SLTH=F;
echo " MMU_THDO_OPNCOUNT_CELL";
tr 50 M=MMU_THDO_OPNCOUNT_CELL;
tr 51 M=MMU_THDO_OPNCOUNT_CELL;
tr 52 M=MMU_THDO_OPNCOUNT_CELL;
tr 71 M=MMU_THDO_OPNCOUNT_CELL TSE=F SLTH=T;
tr 71 M=MMU_THDO_OPNCOUNT_CELL TSE=T SLTH=T;
tr 71 M=MMU_THDO_OPNCOUNT_CELL TSE=T SLTH=F;
echo " MMU_THDO_OPNOFFSET_CELL";
tr 50 M=MMU_THDO_OPNOFFSET_CELL;
tr 51 M=MMU_THDO_OPNOFFSET_CELL;
tr 52 M=MMU_THDO_OPNOFFSET_CELL;
tr 71 M=MMU_THDO_OPNOFFSET_CELL TSE=F SLTH=T;
tr 71 M=MMU_THDO_OPNOFFSET_CELL TSE=T SLTH=T;
tr 71 M=MMU_THDO_OPNOFFSET_CELL TSE=T SLTH=F;
echo " MMU_THDO_OPNOFFSET_QENTRY";
tr 50 M=MMU_THDO_OPNOFFSET_QENTRY;
tr 51 M=MMU_THDO_OPNOFFSET_QENTRY;
tr 52 M=MMU_THDO_OPNOFFSET_QENTRY;
tr 71 M=MMU_THDO_OPNOFFSET_QENTRY TSE=F SLTH=T;
tr 71 M=MMU_THDO_OPNOFFSET_QENTRY TSE=T SLTH=T;
tr 71 M=MMU_THDO_OPNOFFSET_QENTRY TSE=T SLTH=F;
echo " MMU_THDO_OPNSTATUS_CELL";
tr 50 M=MMU_THDO_OPNSTATUS_CELL;
tr 51 M=MMU_THDO_OPNSTATUS_CELL;
tr 52 M=MMU_THDO_OPNSTATUS_CELL;
tr 71 M=MMU_THDO_OPNSTATUS_CELL TSE=F SLTH=T;
tr 71 M=MMU_THDO_OPNSTATUS_CELL TSE=T SLTH=T;
tr 71 M=MMU_THDO_OPNSTATUS_CELL TSE=T SLTH=F;
echo " MMU_THDO_OPNSTATUS_QENTRY";
tr 50 M=MMU_THDO_OPNSTATUS_QENTRY;
tr 51 M=MMU_THDO_OPNSTATUS_QENTRY;
tr 52 M=MMU_THDO_OPNSTATUS_QENTRY;
tr 71 M=MMU_THDO_OPNSTATUS_QENTRY TSE=F SLTH=T;
tr 71 M=MMU_THDO_OPNSTATUS_QENTRY TSE=T SLTH=T;
tr 71 M=MMU_THDO_OPNSTATUS_QENTRY TSE=T SLTH=F;
echo " MMU_THDO_QCONFIG_CELL";
tr 50 M=MMU_THDO_QCONFIG_CELL;
tr 51 M=MMU_THDO_QCONFIG_CELL;
tr 52 M=MMU_THDO_QCONFIG_CELL;
tr 71 M=MMU_THDO_QCONFIG_CELL TSE=F SLTH=T;
tr 71 M=MMU_THDO_QCONFIG_CELL TSE=T SLTH=T;
tr 71 M=MMU_THDO_QCONFIG_CELL TSE=T SLTH=F;
echo " MMU_THDO_QCONFIG_QENTRY";
tr 50 M=MMU_THDO_QCONFIG_QENTRY;
tr 51 M=MMU_THDO_QCONFIG_QENTRY;
tr 52 M=MMU_THDO_QCONFIG_QENTRY;
tr 71 M=MMU_THDO_QCONFIG_QENTRY TSE=F SLTH=T;
tr 71 M=MMU_THDO_QCONFIG_QENTRY TSE=T SLTH=T;
tr 71 M=MMU_THDO_QCONFIG_QENTRY TSE=T SLTH=F;
echo " MMU_THDO_QCOUNT_CELL_0";
tr 50 M=MMU_THDO_QCOUNT_CELL_0;
tr 51 M=MMU_THDO_QCOUNT_CELL_0;
tr 52 M=MMU_THDO_QCOUNT_CELL_0;
tr 71 M=MMU_THDO_QCOUNT_CELL_0 TSE=F SLTH=T;
tr 71 M=MMU_THDO_QCOUNT_CELL_0 TSE=T SLTH=T;
tr 71 M=MMU_THDO_QCOUNT_CELL_0 TSE=T SLTH=F;
echo " MMU_THDO_QOFFSET_CELL";
tr 50 M=MMU_THDO_QOFFSET_CELL;
tr 51 M=MMU_THDO_QOFFSET_CELL;
tr 52 M=MMU_THDO_QOFFSET_CELL;
tr 71 M=MMU_THDO_QOFFSET_CELL TSE=F SLTH=T;
tr 71 M=MMU_THDO_QOFFSET_CELL TSE=T SLTH=T;
tr 71 M=MMU_THDO_QOFFSET_CELL TSE=T SLTH=F;
echo " MMU_THDO_QOFFSET_QENTRY";
tr 50 M=MMU_THDO_QOFFSET_QENTRY;
tr 51 M=MMU_THDO_QOFFSET_QENTRY;
tr 52 M=MMU_THDO_QOFFSET_QENTRY;
tr 71 M=MMU_THDO_QOFFSET_QENTRY TSE=F SLTH=T;
tr 71 M=MMU_THDO_QOFFSET_QENTRY TSE=T SLTH=T;
tr 71 M=MMU_THDO_QOFFSET_QENTRY TSE=T SLTH=F;
echo " MMU_THDO_QRESET_VALUE_CELL_0";
tr 50 M=MMU_THDO_QRESET_VALUE_CELL_0;
tr 51 M=MMU_THDO_QRESET_VALUE_CELL_0;
tr 52 M=MMU_THDO_QRESET_VALUE_CELL_0;
tr 71 M=MMU_THDO_QRESET_VALUE_CELL_0 TSE=F SLTH=T;
tr 71 M=MMU_THDO_QRESET_VALUE_CELL_0 TSE=T SLTH=T;
tr 71 M=MMU_THDO_QRESET_VALUE_CELL_0 TSE=T SLTH=F;
echo " MMU_THDO_QRESET_VALUE_QENTRY_0";
tr 50 M=MMU_THDO_QRESET_VALUE_QENTRY_0;
tr 51 M=MMU_THDO_QRESET_VALUE_QENTRY_0;
tr 52 M=MMU_THDO_QRESET_VALUE_QENTRY_0;
tr 71 M=MMU_THDO_QRESET_VALUE_QENTRY_0 TSE=F SLTH=T;
tr 71 M=MMU_THDO_QRESET_VALUE_QENTRY_0 TSE=T SLTH=T;
tr 71 M=MMU_THDO_QRESET_VALUE_QENTRY_0 TSE=T SLTH=F;
echo " MMU_THDO_QSTATUS_CELL_0";
tr 50 M=MMU_THDO_QSTATUS_CELL_0;
tr 51 M=MMU_THDO_QSTATUS_CELL_0;
tr 52 M=MMU_THDO_QSTATUS_CELL_0;
tr 71 M=MMU_THDO_QSTATUS_CELL_0 TSE=F SLTH=T;
tr 71 M=MMU_THDO_QSTATUS_CELL_0 TSE=T SLTH=T;
tr 71 M=MMU_THDO_QSTATUS_CELL_0 TSE=T SLTH=F;
echo " MMU_THDO_QSTATUS_QENTRY_0";
tr 50 M=MMU_THDO_QSTATUS_QENTRY_0;
tr 51 M=MMU_THDO_QSTATUS_QENTRY_0;
tr 52 M=MMU_THDO_QSTATUS_QENTRY_0;
tr 71 M=MMU_THDO_QSTATUS_QENTRY_0 TSE=F SLTH=T;
tr 71 M=MMU_THDO_QSTATUS_QENTRY_0 TSE=T SLTH=T;
tr 71 M=MMU_THDO_QSTATUS_QENTRY_0 TSE=T SLTH=F;
echo " MMU_TOQ_EOPE_TBL";
tr 50 M=MMU_TOQ_EOPE_TBL;
tr 51 M=MMU_TOQ_EOPE_TBL;
tr 52 M=MMU_TOQ_EOPE_TBL;
tr 71 M=MMU_TOQ_EOPE_TBL TSE=F SLTH=T;
tr 71 M=MMU_TOQ_EOPE_TBL TSE=T SLTH=T;
tr 71 M=MMU_TOQ_EOPE_TBL TSE=T SLTH=F;
echo " MMU_TOQ_PORT_STATE_MEM";
tr 50 M=MMU_TOQ_PORT_STATE_MEM;
tr 51 M=MMU_TOQ_PORT_STATE_MEM;
tr 52 M=MMU_TOQ_PORT_STATE_MEM;
tr 71 M=MMU_TOQ_PORT_STATE_MEM TSE=F SLTH=T;
tr 71 M=MMU_TOQ_PORT_STATE_MEM TSE=T SLTH=T;
tr 71 M=MMU_TOQ_PORT_STATE_MEM TSE=T SLTH=F;
echo " MMU_TOQ_QPACK_MODE";
tr 50 M=MMU_TOQ_QPACK_MODE;
tr 51 M=MMU_TOQ_QPACK_MODE;
tr 52 M=MMU_TOQ_QPACK_MODE;
tr 71 M=MMU_TOQ_QPACK_MODE TSE=F SLTH=T;
tr 71 M=MMU_TOQ_QPACK_MODE TSE=T SLTH=T;
tr 71 M=MMU_TOQ_QPACK_MODE TSE=T SLTH=F;
echo " MMU_TOQ_STATE_MEM0";
tr 50 M=MMU_TOQ_STATE_MEM0;
tr 51 M=MMU_TOQ_STATE_MEM0;
tr 52 M=MMU_TOQ_STATE_MEM0;
tr 71 M=MMU_TOQ_STATE_MEM0 TSE=F SLTH=T;
tr 71 M=MMU_TOQ_STATE_MEM0 TSE=T SLTH=T;
tr 71 M=MMU_TOQ_STATE_MEM0 TSE=T SLTH=F;
echo " MMU_TOQ_STATE_MEM1";
tr 50 M=MMU_TOQ_STATE_MEM1;
tr 51 M=MMU_TOQ_STATE_MEM1;
tr 52 M=MMU_TOQ_STATE_MEM1;
tr 71 M=MMU_TOQ_STATE_MEM1 TSE=F SLTH=T;
tr 71 M=MMU_TOQ_STATE_MEM1 TSE=T SLTH=T;
tr 71 M=MMU_TOQ_STATE_MEM1 TSE=T SLTH=F;
echo " MMU_WRED_DROP_CURVE_PROFILE_0";
tr 50 M=MMU_WRED_DROP_CURVE_PROFILE_0;
tr 51 M=MMU_WRED_DROP_CURVE_PROFILE_0;
tr 52 M=MMU_WRED_DROP_CURVE_PROFILE_0;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_0 TSE=F SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_0 TSE=T SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_0 TSE=T SLTH=F;
echo " MMU_WRED_DROP_CURVE_PROFILE_1";
tr 50 M=MMU_WRED_DROP_CURVE_PROFILE_1;
tr 51 M=MMU_WRED_DROP_CURVE_PROFILE_1;
tr 52 M=MMU_WRED_DROP_CURVE_PROFILE_1;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_1 TSE=F SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_1 TSE=T SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_1 TSE=T SLTH=F;
echo " MMU_WRED_DROP_CURVE_PROFILE_2";
tr 50 M=MMU_WRED_DROP_CURVE_PROFILE_2;
tr 51 M=MMU_WRED_DROP_CURVE_PROFILE_2;
tr 52 M=MMU_WRED_DROP_CURVE_PROFILE_2;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_2 TSE=F SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_2 TSE=T SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_2 TSE=T SLTH=F;
echo " MMU_WRED_DROP_CURVE_PROFILE_3";
tr 50 M=MMU_WRED_DROP_CURVE_PROFILE_3;
tr 51 M=MMU_WRED_DROP_CURVE_PROFILE_3;
tr 52 M=MMU_WRED_DROP_CURVE_PROFILE_3;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_3 TSE=F SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_3 TSE=T SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_3 TSE=T SLTH=F;
echo " MMU_WRED_DROP_CURVE_PROFILE_4";
tr 50 M=MMU_WRED_DROP_CURVE_PROFILE_4;
tr 51 M=MMU_WRED_DROP_CURVE_PROFILE_4;
tr 52 M=MMU_WRED_DROP_CURVE_PROFILE_4;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_4 TSE=F SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_4 TSE=T SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_4 TSE=T SLTH=F;
echo " MMU_WRED_DROP_CURVE_PROFILE_5";
tr 50 M=MMU_WRED_DROP_CURVE_PROFILE_5;
tr 51 M=MMU_WRED_DROP_CURVE_PROFILE_5;
tr 52 M=MMU_WRED_DROP_CURVE_PROFILE_5;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_5 TSE=F SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_5 TSE=T SLTH=T;
tr 71 M=MMU_WRED_DROP_CURVE_PROFILE_5 TSE=T SLTH=F;
echo " MMU_WRED_OPN_AVG_QSIZE_BUFFER";
tr 50 M=MMU_WRED_OPN_AVG_QSIZE_BUFFER;
tr 51 M=MMU_WRED_OPN_AVG_QSIZE_BUFFER;
tr 52 M=MMU_WRED_OPN_AVG_QSIZE_BUFFER;
tr 71 M=MMU_WRED_OPN_AVG_QSIZE_BUFFER TSE=F SLTH=T;
tr 71 M=MMU_WRED_OPN_AVG_QSIZE_BUFFER TSE=T SLTH=T;
tr 71 M=MMU_WRED_OPN_AVG_QSIZE_BUFFER TSE=T SLTH=F;
echo " MMU_WRED_OPN_AVG_QSIZE_QENTRY";
tr 50 M=MMU_WRED_OPN_AVG_QSIZE_QENTRY;
tr 51 M=MMU_WRED_OPN_AVG_QSIZE_QENTRY;
tr 52 M=MMU_WRED_OPN_AVG_QSIZE_QENTRY;
tr 71 M=MMU_WRED_OPN_AVG_QSIZE_QENTRY TSE=F SLTH=T;
tr 71 M=MMU_WRED_OPN_AVG_QSIZE_QENTRY TSE=T SLTH=T;
tr 71 M=MMU_WRED_OPN_AVG_QSIZE_QENTRY TSE=T SLTH=F;
echo " MMU_WRED_OPN_CONFIG_BUFFER";
tr 50 M=MMU_WRED_OPN_CONFIG_BUFFER;
tr 51 M=MMU_WRED_OPN_CONFIG_BUFFER;
tr 52 M=MMU_WRED_OPN_CONFIG_BUFFER;
tr 71 M=MMU_WRED_OPN_CONFIG_BUFFER TSE=F SLTH=T;
tr 71 M=MMU_WRED_OPN_CONFIG_BUFFER TSE=T SLTH=T;
tr 71 M=MMU_WRED_OPN_CONFIG_BUFFER TSE=T SLTH=F;
echo " MMU_WRED_OPN_CONFIG_QENTRY";
tr 50 M=MMU_WRED_OPN_CONFIG_QENTRY;
tr 51 M=MMU_WRED_OPN_CONFIG_QENTRY;
tr 52 M=MMU_WRED_OPN_CONFIG_QENTRY;
tr 71 M=MMU_WRED_OPN_CONFIG_QENTRY TSE=F SLTH=T;
tr 71 M=MMU_WRED_OPN_CONFIG_QENTRY TSE=T SLTH=T;
tr 71 M=MMU_WRED_OPN_CONFIG_QENTRY TSE=T SLTH=F;
echo " MMU_WRED_OPN_DROP_THD_DEQ";
tr 50 M=MMU_WRED_OPN_DROP_THD_DEQ;
tr 51 M=MMU_WRED_OPN_DROP_THD_DEQ;
tr 52 M=MMU_WRED_OPN_DROP_THD_DEQ;
tr 71 M=MMU_WRED_OPN_DROP_THD_DEQ TSE=F SLTH=T;
tr 71 M=MMU_WRED_OPN_DROP_THD_DEQ TSE=T SLTH=T;
tr 71 M=MMU_WRED_OPN_DROP_THD_DEQ TSE=T SLTH=F;
echo " MMU_WRED_OPN_DROP_THD_ENQ";
tr 50 M=MMU_WRED_OPN_DROP_THD_ENQ;
tr 51 M=MMU_WRED_OPN_DROP_THD_ENQ;
tr 52 M=MMU_WRED_OPN_DROP_THD_ENQ;
tr 71 M=MMU_WRED_OPN_DROP_THD_ENQ TSE=F SLTH=T;
tr 71 M=MMU_WRED_OPN_DROP_THD_ENQ TSE=T SLTH=T;
tr 71 M=MMU_WRED_OPN_DROP_THD_ENQ TSE=T SLTH=F;
echo " MMU_WRED_QUEUE_AVG_QSIZE_BUFFER";
tr 50 M=MMU_WRED_QUEUE_AVG_QSIZE_BUFFER;
tr 51 M=MMU_WRED_QUEUE_AVG_QSIZE_BUFFER;
tr 52 M=MMU_WRED_QUEUE_AVG_QSIZE_BUFFER;
tr 71 M=MMU_WRED_QUEUE_AVG_QSIZE_BUFFER TSE=F SLTH=T;
tr 71 M=MMU_WRED_QUEUE_AVG_QSIZE_BUFFER TSE=T SLTH=T;
tr 71 M=MMU_WRED_QUEUE_AVG_QSIZE_BUFFER TSE=T SLTH=F;
echo " MMU_WRED_QUEUE_AVG_QSIZE_QENTRY";
tr 50 M=MMU_WRED_QUEUE_AVG_QSIZE_QENTRY;
tr 51 M=MMU_WRED_QUEUE_AVG_QSIZE_QENTRY;
tr 52 M=MMU_WRED_QUEUE_AVG_QSIZE_QENTRY;
tr 71 M=MMU_WRED_QUEUE_AVG_QSIZE_QENTRY TSE=F SLTH=T;
tr 71 M=MMU_WRED_QUEUE_AVG_QSIZE_QENTRY TSE=T SLTH=T;
tr 71 M=MMU_WRED_QUEUE_AVG_QSIZE_QENTRY TSE=T SLTH=F;
echo " MMU_WRED_QUEUE_CONFIG_BUFFER";
tr 50 M=MMU_WRED_QUEUE_CONFIG_BUFFER;
tr 51 M=MMU_WRED_QUEUE_CONFIG_BUFFER;
tr 52 M=MMU_WRED_QUEUE_CONFIG_BUFFER;
tr 71 M=MMU_WRED_QUEUE_CONFIG_BUFFER TSE=F SLTH=T;
tr 71 M=MMU_WRED_QUEUE_CONFIG_BUFFER TSE=T SLTH=T;
tr 71 M=MMU_WRED_QUEUE_CONFIG_BUFFER TSE=T SLTH=F;
echo " MMU_WRED_QUEUE_CONFIG_QENTRY";
tr 50 M=MMU_WRED_QUEUE_CONFIG_QENTRY;
tr 51 M=MMU_WRED_QUEUE_CONFIG_QENTRY;
tr 52 M=MMU_WRED_QUEUE_CONFIG_QENTRY;
tr 71 M=MMU_WRED_QUEUE_CONFIG_QENTRY TSE=F SLTH=T;
tr 71 M=MMU_WRED_QUEUE_CONFIG_QENTRY TSE=T SLTH=T;
tr 71 M=MMU_WRED_QUEUE_CONFIG_QENTRY TSE=T SLTH=F;
echo " MMU_WRED_QUEUE_DROP_THD_DEQ";
tr 50 M=MMU_WRED_QUEUE_DROP_THD_DEQ;
tr 51 M=MMU_WRED_QUEUE_DROP_THD_DEQ;
tr 52 M=MMU_WRED_QUEUE_DROP_THD_DEQ;
tr 71 M=MMU_WRED_QUEUE_DROP_THD_DEQ TSE=F SLTH=T;
tr 71 M=MMU_WRED_QUEUE_DROP_THD_DEQ TSE=T SLTH=T;
tr 71 M=MMU_WRED_QUEUE_DROP_THD_DEQ TSE=T SLTH=F;
echo " MMU_WRED_QUEUE_DROP_THD_ENQ_0";
tr 50 M=MMU_WRED_QUEUE_DROP_THD_ENQ_0;
tr 51 M=MMU_WRED_QUEUE_DROP_THD_ENQ_0;
tr 52 M=MMU_WRED_QUEUE_DROP_THD_ENQ_0;
tr 71 M=MMU_WRED_QUEUE_DROP_THD_ENQ_0 TSE=F SLTH=T;
tr 71 M=MMU_WRED_QUEUE_DROP_THD_ENQ_0 TSE=T SLTH=T;
tr 71 M=MMU_WRED_QUEUE_DROP_THD_ENQ_0 TSE=T SLTH=F;
if !$?LIKE_BCM56456 \
   'echo " MMU_WRED_QUEUE_DROP_THD_ENQ_1"; \
    tr 50 M=MMU_WRED_QUEUE_DROP_THD_ENQ_1; \
    tr 51 M=MMU_WRED_QUEUE_DROP_THD_ENQ_1; \
    tr 52 M=MMU_WRED_QUEUE_DROP_THD_ENQ_1; \
    tr 71 M=MMU_WRED_QUEUE_DROP_THD_ENQ_1 TSE=F SLTH=T; \
    tr 71 M=MMU_WRED_QUEUE_DROP_THD_ENQ_1 TSE=T SLTH=T; \
    tr 71 M=MMU_WRED_QUEUE_DROP_THD_ENQ_1 TSE=T SLTH=F; \
    $done;'
echo " MMU_WRED_QUEUE_OP_NODE_MAP";
tr 50 M=MMU_WRED_QUEUE_OP_NODE_MAP;
tr 51 M=MMU_WRED_QUEUE_OP_NODE_MAP;
tr 52 M=MMU_WRED_QUEUE_OP_NODE_MAP;
tr 71 M=MMU_WRED_QUEUE_OP_NODE_MAP TSE=F SLTH=T;
tr 71 M=MMU_WRED_QUEUE_OP_NODE_MAP TSE=T SLTH=T;
tr 71 M=MMU_WRED_QUEUE_OP_NODE_MAP TSE=T SLTH=F;
echo " MODPORT_MAP_M0";
tr 50 M=MODPORT_MAP_M0;
tr 51 M=MODPORT_MAP_M0;
tr 52 M=MODPORT_MAP_M0;
tr 71 M=MODPORT_MAP_M0 TSE=F SLTH=T;
tr 71 M=MODPORT_MAP_M0 TSE=T SLTH=T;
tr 71 M=MODPORT_MAP_M0 TSE=T SLTH=F;
echo " MODPORT_MAP_M1";
tr 50 M=MODPORT_MAP_M1;
tr 51 M=MODPORT_MAP_M1;
tr 52 M=MODPORT_MAP_M1;
tr 71 M=MODPORT_MAP_M1 TSE=F SLTH=T;
tr 71 M=MODPORT_MAP_M1 TSE=T SLTH=T;
tr 71 M=MODPORT_MAP_M1 TSE=T SLTH=F;
echo " MODPORT_MAP_M2";
tr 50 M=MODPORT_MAP_M2;
tr 51 M=MODPORT_MAP_M2;
tr 52 M=MODPORT_MAP_M2;
tr 71 M=MODPORT_MAP_M2 TSE=F SLTH=T;
tr 71 M=MODPORT_MAP_M2 TSE=T SLTH=T;
tr 71 M=MODPORT_MAP_M2 TSE=T SLTH=F;
echo " MODPORT_MAP_M3";
tr 50 M=MODPORT_MAP_M3;
tr 51 M=MODPORT_MAP_M3;
tr 52 M=MODPORT_MAP_M3;
tr 71 M=MODPORT_MAP_M3 TSE=F SLTH=T;
tr 71 M=MODPORT_MAP_M3 TSE=T SLTH=T;
tr 71 M=MODPORT_MAP_M3 TSE=T SLTH=F;
kt2sanity_ecc_off.soc
echo " MODPORT_MAP_MIRROR";
tr 50 M=MODPORT_MAP_MIRROR;
tr 51 M=MODPORT_MAP_MIRROR;
tr 52 M=MODPORT_MAP_MIRROR;
tr 71 M=MODPORT_MAP_MIRROR TSE=F SLTH=T;
tr 71 M=MODPORT_MAP_MIRROR TSE=T SLTH=T;
tr 71 M=MODPORT_MAP_MIRROR TSE=T SLTH=F;
echo " MODPORT_MAP_SW";
tr 50 M=MODPORT_MAP_SW;
tr 51 M=MODPORT_MAP_SW;
tr 52 M=MODPORT_MAP_SW;
tr 71 M=MODPORT_MAP_SW TSE=F SLTH=T;
tr 71 M=MODPORT_MAP_SW TSE=T SLTH=T;
tr 71 M=MODPORT_MAP_SW TSE=T SLTH=F;
echo " MPLS_ENTRY";
tr 50 M=MPLS_ENTRY;
tr 51 M=MPLS_ENTRY;
tr 52 M=MPLS_ENTRY;
tr 71 M=MPLS_ENTRY TSE=F SLTH=T;
tr 71 M=MPLS_ENTRY TSE=T SLTH=T;
tr 71 M=MPLS_ENTRY TSE=T SLTH=F;
echo " MULTIPASS_LOOPBACK_BITMAP";
tr 50 M=MULTIPASS_LOOPBACK_BITMAP;
#tr 51 M=MULTIPASS_LOOPBACK_BITMAP;
#tr 52 M=MULTIPASS_LOOPBACK_BITMAP;
tr 71 M=MULTIPASS_LOOPBACK_BITMAP TSE=F SLTH=T;
tr 71 M=MULTIPASS_LOOPBACK_BITMAP TSE=T SLTH=T;
tr 71 M=MULTIPASS_LOOPBACK_BITMAP TSE=T SLTH=F;
echo " MY_STATION_TCAM";
tr 50 M=MY_STATION_TCAM;
tr 51 M=MY_STATION_TCAM;
tr 52 M=MY_STATION_TCAM;
tr 71 M=MY_STATION_TCAM TSE=F SLTH=T;
tr 71 M=MY_STATION_TCAM TSE=T SLTH=T;
tr 71 M=MY_STATION_TCAM TSE=T SLTH=F;
echo " MY_STATION_TCAM_DATA_ONLY";
tr 50 M=MY_STATION_TCAM_DATA_ONLY;
tr 51 M=MY_STATION_TCAM_DATA_ONLY;
tr 52 M=MY_STATION_TCAM_DATA_ONLY;
tr 71 M=MY_STATION_TCAM_DATA_ONLY TSE=F SLTH=T;
tr 71 M=MY_STATION_TCAM_DATA_ONLY TSE=T SLTH=T;
tr 71 M=MY_STATION_TCAM_DATA_ONLY TSE=T SLTH=F;
echo " MY_STATION_TCAM_ENTRY_ONLY";
tr 50 M=MY_STATION_TCAM_ENTRY_ONLY;
tr 51 M=MY_STATION_TCAM_ENTRY_ONLY;
tr 52 M=MY_STATION_TCAM_ENTRY_ONLY;
tr 71 M=MY_STATION_TCAM_ENTRY_ONLY TSE=F SLTH=T;
tr 71 M=MY_STATION_TCAM_ENTRY_ONLY TSE=T SLTH=T;
tr 71 M=MY_STATION_TCAM_ENTRY_ONLY TSE=T SLTH=F;
echo " NHI_GROUP_TC_PROFILE";
tr 50 M=NHI_GROUP_TC_PROFILE;
tr 51 M=NHI_GROUP_TC_PROFILE;
tr 52 M=NHI_GROUP_TC_PROFILE;
tr 71 M=NHI_GROUP_TC_PROFILE TSE=F SLTH=T;
tr 71 M=NHI_GROUP_TC_PROFILE TSE=T SLTH=T;
tr 71 M=NHI_GROUP_TC_PROFILE TSE=T SLTH=F;
echo " NONUCAST_TRUNK_BLOCK_MASK";
tr 50 M=NONUCAST_TRUNK_BLOCK_MASK;
tr 51 M=NONUCAST_TRUNK_BLOCK_MASK;
tr 52 M=NONUCAST_TRUNK_BLOCK_MASK;
tr 71 M=NONUCAST_TRUNK_BLOCK_MASK TSE=F SLTH=T;
tr 71 M=NONUCAST_TRUNK_BLOCK_MASK TSE=T SLTH=T;
tr 71 M=NONUCAST_TRUNK_BLOCK_MASK TSE=T SLTH=F;
echo " OAM_LM_COUNTERS_0";
tr 50 M=OAM_LM_COUNTERS_0;
tr 51 M=OAM_LM_COUNTERS_0;
tr 52 M=OAM_LM_COUNTERS_0;
tr 71 M=OAM_LM_COUNTERS_0 TSE=F SLTH=T;
tr 71 M=OAM_LM_COUNTERS_0 TSE=T SLTH=T;
tr 71 M=OAM_LM_COUNTERS_0 TSE=T SLTH=F;
echo " OAM_LM_COUNTERS_1";
tr 50 M=OAM_LM_COUNTERS_1;
tr 51 M=OAM_LM_COUNTERS_1;
tr 52 M=OAM_LM_COUNTERS_1;
tr 71 M=OAM_LM_COUNTERS_1 TSE=F SLTH=T;
tr 71 M=OAM_LM_COUNTERS_1 TSE=T SLTH=T;
tr 71 M=OAM_LM_COUNTERS_1 TSE=T SLTH=F;
echo " OAM_OPCODE_CONTROL_PROFILE";
tr 50 M=OAM_OPCODE_CONTROL_PROFILE;
tr 51 M=OAM_OPCODE_CONTROL_PROFILE;
tr 52 M=OAM_OPCODE_CONTROL_PROFILE;
tr 71 M=OAM_OPCODE_CONTROL_PROFILE TSE=F SLTH=T;
tr 71 M=OAM_OPCODE_CONTROL_PROFILE TSE=T SLTH=T;
tr 71 M=OAM_OPCODE_CONTROL_PROFILE TSE=T SLTH=F;
echo " PHB2_COS_MAP";
tr 50 M=PHB2_COS_MAP;
tr 51 M=PHB2_COS_MAP;
tr 52 M=PHB2_COS_MAP;
tr 71 M=PHB2_COS_MAP TSE=F SLTH=T;
tr 71 M=PHB2_COS_MAP TSE=T SLTH=T;
tr 71 M=PHB2_COS_MAP TSE=T SLTH=F;
echo " PHYSICAL_PORT_BASE_QUEUE";
tr 50 M=PHYSICAL_PORT_BASE_QUEUE;
tr 51 M=PHYSICAL_PORT_BASE_QUEUE;
tr 52 M=PHYSICAL_PORT_BASE_QUEUE;
tr 71 M=PHYSICAL_PORT_BASE_QUEUE TSE=F SLTH=T;
tr 71 M=PHYSICAL_PORT_BASE_QUEUE TSE=T SLTH=T;
tr 71 M=PHYSICAL_PORT_BASE_QUEUE TSE=T SLTH=F;
echo " PORT_BRIDGE_BMAP";
tr 50 M=PORT_BRIDGE_BMAP;
#tr 51 M=PORT_BRIDGE_BMAP;
#tr 52 M=PORT_BRIDGE_BMAP;
tr 71 M=PORT_BRIDGE_BMAP TSE=F SLTH=T;
tr 71 M=PORT_BRIDGE_BMAP TSE=T SLTH=T;
tr 71 M=PORT_BRIDGE_BMAP TSE=T SLTH=F;
echo " PORT_BRIDGE_MIRROR_BMAP";
tr 50 M=PORT_BRIDGE_MIRROR_BMAP;
#tr 51 M=PORT_BRIDGE_MIRROR_BMAP;
#tr 52 M=PORT_BRIDGE_MIRROR_BMAP;
tr 71 M=PORT_BRIDGE_MIRROR_BMAP TSE=F SLTH=T;
tr 71 M=PORT_BRIDGE_MIRROR_BMAP TSE=T SLTH=T;
tr 71 M=PORT_BRIDGE_MIRROR_BMAP TSE=T SLTH=F;
echo " PORT_CBL_TABLE";
tr 50 M=PORT_CBL_TABLE;
tr 51 M=PORT_CBL_TABLE;
tr 52 M=PORT_CBL_TABLE;
tr 71 M=PORT_CBL_TABLE TSE=F SLTH=T;
tr 71 M=PORT_CBL_TABLE TSE=T SLTH=T;
tr 71 M=PORT_CBL_TABLE TSE=T SLTH=F;
echo " PORT_CBL_TABLE_MODBASE";
tr 50 M=PORT_CBL_TABLE_MODBASE;
tr 51 M=PORT_CBL_TABLE_MODBASE;
tr 52 M=PORT_CBL_TABLE_MODBASE;
tr 71 M=PORT_CBL_TABLE_MODBASE TSE=F SLTH=T;
tr 71 M=PORT_CBL_TABLE_MODBASE TSE=T SLTH=T;
tr 71 M=PORT_CBL_TABLE_MODBASE TSE=T SLTH=F;
echo " PORT_COS_MAP";
tr 50 M=PORT_COS_MAP;
tr 51 M=PORT_COS_MAP;
tr 52 M=PORT_COS_MAP;
tr 71 M=PORT_COS_MAP TSE=F SLTH=T;
tr 71 M=PORT_COS_MAP TSE=T SLTH=T;
tr 71 M=PORT_COS_MAP TSE=T SLTH=F;
echo " PORT_LAG_FAILOVER_SET";
tr 50 M=PORT_LAG_FAILOVER_SET;
tr 51 M=PORT_LAG_FAILOVER_SET;
tr 52 M=PORT_LAG_FAILOVER_SET;
tr 71 M=PORT_LAG_FAILOVER_SET TSE=F SLTH=T;
tr 71 M=PORT_LAG_FAILOVER_SET TSE=T SLTH=T;
tr 71 M=PORT_LAG_FAILOVER_SET TSE=T SLTH=F;
echo " PORT_OR_TRUNK_MAC_COUNT";
tr 50 M=PORT_OR_TRUNK_MAC_COUNT;
tr 51 M=PORT_OR_TRUNK_MAC_COUNT;
tr 52 M=PORT_OR_TRUNK_MAC_COUNT;
tr 71 M=PORT_OR_TRUNK_MAC_COUNT TSE=F SLTH=T;
tr 71 M=PORT_OR_TRUNK_MAC_COUNT TSE=T SLTH=T;
tr 71 M=PORT_OR_TRUNK_MAC_COUNT TSE=T SLTH=F;
echo " PORT_OR_TRUNK_MAC_LIMIT";
tr 50 M=PORT_OR_TRUNK_MAC_LIMIT;
tr 51 M=PORT_OR_TRUNK_MAC_LIMIT;
tr 52 M=PORT_OR_TRUNK_MAC_LIMIT;
tr 71 M=PORT_OR_TRUNK_MAC_LIMIT TSE=F SLTH=T;
tr 71 M=PORT_OR_TRUNK_MAC_LIMIT TSE=T SLTH=T;
tr 71 M=PORT_OR_TRUNK_MAC_LIMIT TSE=T SLTH=F;
echo " PORT_TAB";
tr 50 M=PORT_TAB;
tr 51 M=PORT_TAB;
tr 52 M=PORT_TAB;
tr 71 M=PORT_TAB TSE=F SLTH=T;
tr 71 M=PORT_TAB TSE=T SLTH=T;
tr 71 M=PORT_TAB TSE=T SLTH=F;
echo " PP_PORT_GPP_TRANSLATION_1";
tr 50 M=PP_PORT_GPP_TRANSLATION_1;
#tr 51 M=PP_PORT_GPP_TRANSLATION_1;
#tr 52 M=PP_PORT_GPP_TRANSLATION_1;
tr 71 M=PP_PORT_GPP_TRANSLATION_1 TSE=F SLTH=T;
tr 71 M=PP_PORT_GPP_TRANSLATION_1 TSE=T SLTH=T;
tr 71 M=PP_PORT_GPP_TRANSLATION_1 TSE=T SLTH=F;
echo " PP_PORT_GPP_TRANSLATION_2";
tr 50 M=PP_PORT_GPP_TRANSLATION_2;
#tr 51 M=PP_PORT_GPP_TRANSLATION_2;
#tr 52 M=PP_PORT_GPP_TRANSLATION_2;
tr 71 M=PP_PORT_GPP_TRANSLATION_2 TSE=F SLTH=T;
tr 71 M=PP_PORT_GPP_TRANSLATION_2 TSE=T SLTH=T;
tr 71 M=PP_PORT_GPP_TRANSLATION_2 TSE=T SLTH=F;
echo " PP_PORT_GPP_TRANSLATION_3";
tr 50 M=PP_PORT_GPP_TRANSLATION_3;
#tr 51 M=PP_PORT_GPP_TRANSLATION_3;
#tr 52 M=PP_PORT_GPP_TRANSLATION_3;
tr 71 M=PP_PORT_GPP_TRANSLATION_3 TSE=F SLTH=T;
tr 71 M=PP_PORT_GPP_TRANSLATION_3 TSE=T SLTH=T;
tr 71 M=PP_PORT_GPP_TRANSLATION_3 TSE=T SLTH=F;
echo " PP_PORT_GPP_TRANSLATION_4";
tr 50 M=PP_PORT_GPP_TRANSLATION_4;
#tr 51 M=PP_PORT_GPP_TRANSLATION_4;
#tr 52 M=PP_PORT_GPP_TRANSLATION_4;
tr 71 M=PP_PORT_GPP_TRANSLATION_4 TSE=F SLTH=T;
tr 71 M=PP_PORT_GPP_TRANSLATION_4 TSE=T SLTH=T;
tr 71 M=PP_PORT_GPP_TRANSLATION_4 TSE=T SLTH=F;
echo " PP_PORT_TO_PHYSICAL_PORT_MAP";
tr 50 M=PP_PORT_TO_PHYSICAL_PORT_MAP;
tr 51 M=PP_PORT_TO_PHYSICAL_PORT_MAP;
tr 52 M=PP_PORT_TO_PHYSICAL_PORT_MAP;
tr 71 M=PP_PORT_TO_PHYSICAL_PORT_MAP TSE=F SLTH=T;
tr 71 M=PP_PORT_TO_PHYSICAL_PORT_MAP TSE=T SLTH=T;
tr 71 M=PP_PORT_TO_PHYSICAL_PORT_MAP TSE=T SLTH=F;
echo " PTP_LABEL_RANGE_PROFILE_TABLE";
tr 50 M=PTP_LABEL_RANGE_PROFILE_TABLE;
tr 51 M=PTP_LABEL_RANGE_PROFILE_TABLE;
tr 52 M=PTP_LABEL_RANGE_PROFILE_TABLE;
tr 71 M=PTP_LABEL_RANGE_PROFILE_TABLE TSE=F SLTH=T;
tr 71 M=PTP_LABEL_RANGE_PROFILE_TABLE TSE=T SLTH=T;
tr 71 M=PTP_LABEL_RANGE_PROFILE_TABLE TSE=T SLTH=F;
echo " RMEP";
tr 50 M=RMEP;
tr 51 M=RMEP;
tr 52 M=RMEP;
tr 71 M=RMEP TSE=F SLTH=T;
tr 71 M=RMEP TSE=T SLTH=T;
tr 71 M=RMEP TSE=T SLTH=F;
echo " RTAG7_FLOW_BASED_HASH";
tr 50 M=RTAG7_FLOW_BASED_HASH;
tr 51 M=RTAG7_FLOW_BASED_HASH;
tr 52 M=RTAG7_FLOW_BASED_HASH;
tr 71 M=RTAG7_FLOW_BASED_HASH TSE=F SLTH=T;
tr 71 M=RTAG7_FLOW_BASED_HASH TSE=T SLTH=T;
tr 71 M=RTAG7_FLOW_BASED_HASH TSE=T SLTH=F;
echo " RTAG7_PORT_BASED_HASH";
tr 50 M=RTAG7_PORT_BASED_HASH;
tr 51 M=RTAG7_PORT_BASED_HASH;
tr 52 M=RTAG7_PORT_BASED_HASH;
tr 71 M=RTAG7_PORT_BASED_HASH TSE=F SLTH=T;
tr 71 M=RTAG7_PORT_BASED_HASH TSE=T SLTH=T;
tr 71 M=RTAG7_PORT_BASED_HASH TSE=T SLTH=F;
#echo " RXLP_CHANNEL_CONTROL_BUFFER";
#tr 50 M=RXLP_CHANNEL_CONTROL_BUFFER;
#tr 51 M=RXLP_CHANNEL_CONTROL_BUFFER;
#tr 52 M=RXLP_CHANNEL_CONTROL_BUFFER;
#tr 71 M=RXLP_CHANNEL_CONTROL_BUFFER TSE=F SLTH=T;
#tr 71 M=RXLP_CHANNEL_CONTROL_BUFFER TSE=T SLTH=T;
#tr 71 M=RXLP_CHANNEL_CONTROL_BUFFER TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER0";
tr 50 M=RXLP_DEBUG_COUNTER0;
tr 51 M=RXLP_DEBUG_COUNTER0;
tr 52 M=RXLP_DEBUG_COUNTER0;
tr 71 M=RXLP_DEBUG_COUNTER0 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER0 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER0 TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER1";
tr 50 M=RXLP_DEBUG_COUNTER1;
tr 51 M=RXLP_DEBUG_COUNTER1;
tr 52 M=RXLP_DEBUG_COUNTER1;
tr 71 M=RXLP_DEBUG_COUNTER1 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER1 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER1 TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER10";
tr 50 M=RXLP_DEBUG_COUNTER10;
tr 51 M=RXLP_DEBUG_COUNTER10;
tr 52 M=RXLP_DEBUG_COUNTER10;
tr 71 M=RXLP_DEBUG_COUNTER10 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER10 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER10 TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER11";
tr 50 M=RXLP_DEBUG_COUNTER11;
tr 51 M=RXLP_DEBUG_COUNTER11;
tr 52 M=RXLP_DEBUG_COUNTER11;
tr 71 M=RXLP_DEBUG_COUNTER11 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER11 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER11 TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER2";
tr 50 M=RXLP_DEBUG_COUNTER2;
tr 51 M=RXLP_DEBUG_COUNTER2;
tr 52 M=RXLP_DEBUG_COUNTER2;
tr 71 M=RXLP_DEBUG_COUNTER2 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER2 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER2 TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER3";
tr 50 M=RXLP_DEBUG_COUNTER3;
tr 51 M=RXLP_DEBUG_COUNTER3;
tr 52 M=RXLP_DEBUG_COUNTER3;
tr 71 M=RXLP_DEBUG_COUNTER3 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER3 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER3 TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER4";
tr 50 M=RXLP_DEBUG_COUNTER4;
tr 51 M=RXLP_DEBUG_COUNTER4;
tr 52 M=RXLP_DEBUG_COUNTER4;
tr 71 M=RXLP_DEBUG_COUNTER4 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER4 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER4 TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER5";
tr 50 M=RXLP_DEBUG_COUNTER5;
tr 51 M=RXLP_DEBUG_COUNTER5;
tr 52 M=RXLP_DEBUG_COUNTER5;
tr 71 M=RXLP_DEBUG_COUNTER5 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER5 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER5 TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER6";
tr 50 M=RXLP_DEBUG_COUNTER6;
tr 51 M=RXLP_DEBUG_COUNTER6;
tr 52 M=RXLP_DEBUG_COUNTER6;
tr 71 M=RXLP_DEBUG_COUNTER6 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER6 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER6 TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER7";
tr 50 M=RXLP_DEBUG_COUNTER7;
tr 51 M=RXLP_DEBUG_COUNTER7;
tr 52 M=RXLP_DEBUG_COUNTER7;
tr 71 M=RXLP_DEBUG_COUNTER7 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER7 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER7 TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER8";
tr 50 M=RXLP_DEBUG_COUNTER8;
tr 51 M=RXLP_DEBUG_COUNTER8;
tr 52 M=RXLP_DEBUG_COUNTER8;
tr 71 M=RXLP_DEBUG_COUNTER8 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER8 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER8 TSE=T SLTH=F;
echo " RXLP_DEBUG_COUNTER9";
tr 50 M=RXLP_DEBUG_COUNTER9;
tr 51 M=RXLP_DEBUG_COUNTER9;
tr 52 M=RXLP_DEBUG_COUNTER9;
tr 71 M=RXLP_DEBUG_COUNTER9 TSE=F SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER9 TSE=T SLTH=T;
tr 71 M=RXLP_DEBUG_COUNTER9 TSE=T SLTH=F;
echo " RXLP_DFC_MSG_BIT_REMAP_PORT_0";
tr 50 M=RXLP_DFC_MSG_BIT_REMAP_PORT_0;
tr 51 M=RXLP_DFC_MSG_BIT_REMAP_PORT_0;
tr 52 M=RXLP_DFC_MSG_BIT_REMAP_PORT_0;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_0 TSE=F SLTH=T;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_0 TSE=T SLTH=T;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_0 TSE=T SLTH=F;
echo " RXLP_DFC_MSG_BIT_REMAP_PORT_1";
tr 50 M=RXLP_DFC_MSG_BIT_REMAP_PORT_1;
tr 51 M=RXLP_DFC_MSG_BIT_REMAP_PORT_1;
tr 52 M=RXLP_DFC_MSG_BIT_REMAP_PORT_1;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_1 TSE=F SLTH=T;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_1 TSE=T SLTH=T;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_1 TSE=T SLTH=F;
echo " RXLP_DFC_MSG_BIT_REMAP_PORT_2";
tr 50 M=RXLP_DFC_MSG_BIT_REMAP_PORT_2;
tr 51 M=RXLP_DFC_MSG_BIT_REMAP_PORT_2;
tr 52 M=RXLP_DFC_MSG_BIT_REMAP_PORT_2;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_2 TSE=F SLTH=T;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_2 TSE=T SLTH=T;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_2 TSE=T SLTH=F;
echo " RXLP_DFC_MSG_BIT_REMAP_PORT_3";
tr 50 M=RXLP_DFC_MSG_BIT_REMAP_PORT_3;
tr 51 M=RXLP_DFC_MSG_BIT_REMAP_PORT_3;
tr 52 M=RXLP_DFC_MSG_BIT_REMAP_PORT_3;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_3 TSE=F SLTH=T;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_3 TSE=T SLTH=T;
tr 71 M=RXLP_DFC_MSG_BIT_REMAP_PORT_3 TSE=T SLTH=F;
#echo " RXLP_ERROR_ACTION_MAP_DATA";
#tr 50 M=RXLP_ERROR_ACTION_MAP_DATA;
#tr 51 M=RXLP_ERROR_ACTION_MAP_DATA;
#tr 52 M=RXLP_ERROR_ACTION_MAP_DATA;
#tr 71 M=RXLP_ERROR_ACTION_MAP_DATA TSE=F SLTH=T;
#tr 71 M=RXLP_ERROR_ACTION_MAP_DATA TSE=T SLTH=T;
#tr 71 M=RXLP_ERROR_ACTION_MAP_DATA TSE=T SLTH=F;
#echo " RXLP_ERROR_ACTION_MAP_TCAM";
#tr 50 M=RXLP_ERROR_ACTION_MAP_TCAM;
#tr 51 M=RXLP_ERROR_ACTION_MAP_TCAM;
#tr 52 M=RXLP_ERROR_ACTION_MAP_TCAM;
#tr 71 M=RXLP_ERROR_ACTION_MAP_TCAM TSE=F SLTH=T;
#tr 71 M=RXLP_ERROR_ACTION_MAP_TCAM TSE=T SLTH=T;
#tr 71 M=RXLP_ERROR_ACTION_MAP_TCAM TSE=T SLTH=F;
echo " RXLP_INTERNAL_STREAM_MAP_PORT_0";
tr 50 M=RXLP_INTERNAL_STREAM_MAP_PORT_0;
tr 51 M=RXLP_INTERNAL_STREAM_MAP_PORT_0;
tr 52 M=RXLP_INTERNAL_STREAM_MAP_PORT_0;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_0 TSE=F SLTH=T;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_0 TSE=T SLTH=T;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_0 TSE=T SLTH=F;
echo " RXLP_INTERNAL_STREAM_MAP_PORT_1";
tr 50 M=RXLP_INTERNAL_STREAM_MAP_PORT_1;
tr 51 M=RXLP_INTERNAL_STREAM_MAP_PORT_1;
tr 52 M=RXLP_INTERNAL_STREAM_MAP_PORT_1;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_1 TSE=F SLTH=T;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_1 TSE=T SLTH=T;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_1 TSE=T SLTH=F;
echo " RXLP_INTERNAL_STREAM_MAP_PORT_2";
tr 50 M=RXLP_INTERNAL_STREAM_MAP_PORT_2;
tr 51 M=RXLP_INTERNAL_STREAM_MAP_PORT_2;
tr 52 M=RXLP_INTERNAL_STREAM_MAP_PORT_2;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_2 TSE=F SLTH=T;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_2 TSE=T SLTH=T;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_2 TSE=T SLTH=F;
echo " RXLP_INTERNAL_STREAM_MAP_PORT_3";
tr 50 M=RXLP_INTERNAL_STREAM_MAP_PORT_3;
tr 51 M=RXLP_INTERNAL_STREAM_MAP_PORT_3;
tr 52 M=RXLP_INTERNAL_STREAM_MAP_PORT_3;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_3 TSE=F SLTH=T;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_3 TSE=T SLTH=T;
tr 71 M=RXLP_INTERNAL_STREAM_MAP_PORT_3 TSE=T SLTH=F;
#echo " RXLP_INTR_DATA_MEM";
#tr 50 M=RXLP_INTR_DATA_MEM;
#tr 51 M=RXLP_INTR_DATA_MEM;
#tr 52 M=RXLP_INTR_DATA_MEM;
#tr 71 M=RXLP_INTR_DATA_MEM TSE=F SLTH=T;
#tr 71 M=RXLP_INTR_DATA_MEM TSE=T SLTH=T;
#tr 71 M=RXLP_INTR_DATA_MEM TSE=T SLTH=F;
echo " RXLP_MAX_FRAME_SIZE";
tr 50 M=RXLP_MAX_FRAME_SIZE;
tr 51 M=RXLP_MAX_FRAME_SIZE;
tr 52 M=RXLP_MAX_FRAME_SIZE;
tr 71 M=RXLP_MAX_FRAME_SIZE TSE=F SLTH=T;
tr 71 M=RXLP_MAX_FRAME_SIZE TSE=T SLTH=T;
tr 71 M=RXLP_MAX_FRAME_SIZE TSE=T SLTH=F;
echo " RX_PROT_GROUP_TABLE";
tr 50 M=RX_PROT_GROUP_TABLE;
tr 51 M=RX_PROT_GROUP_TABLE;
tr 52 M=RX_PROT_GROUP_TABLE;
tr 71 M=RX_PROT_GROUP_TABLE TSE=F SLTH=T;
tr 71 M=RX_PROT_GROUP_TABLE TSE=T SLTH=T;
tr 71 M=RX_PROT_GROUP_TABLE TSE=T SLTH=F;
echo " RX_PROT_GROUP_TABLE_1";
tr 50 M=RX_PROT_GROUP_TABLE_1;
tr 51 M=RX_PROT_GROUP_TABLE_1;
tr 52 M=RX_PROT_GROUP_TABLE_1;
tr 71 M=RX_PROT_GROUP_TABLE_1 TSE=F SLTH=T;
tr 71 M=RX_PROT_GROUP_TABLE_1 TSE=T SLTH=T;
tr 71 M=RX_PROT_GROUP_TABLE_1 TSE=T SLTH=F;
echo " RX_PROT_GROUP_TABLE_1_DMA";
tr 50 M=RX_PROT_GROUP_TABLE_1_DMA;
tr 51 M=RX_PROT_GROUP_TABLE_1_DMA;
tr 52 M=RX_PROT_GROUP_TABLE_1_DMA;
tr 71 M=RX_PROT_GROUP_TABLE_1_DMA TSE=F SLTH=T;
tr 71 M=RX_PROT_GROUP_TABLE_1_DMA TSE=T SLTH=T;
tr 71 M=RX_PROT_GROUP_TABLE_1_DMA TSE=T SLTH=F;
echo " RX_PROT_GROUP_TABLE_DMA";
tr 50 M=RX_PROT_GROUP_TABLE_DMA;
tr 51 M=RX_PROT_GROUP_TABLE_DMA;
tr 52 M=RX_PROT_GROUP_TABLE_DMA;
tr 71 M=RX_PROT_GROUP_TABLE_DMA TSE=F SLTH=T;
tr 71 M=RX_PROT_GROUP_TABLE_DMA TSE=T SLTH=T;
tr 71 M=RX_PROT_GROUP_TABLE_DMA TSE=T SLTH=F;
echo " SERVICE_COS_MAP";
tr 50 M=SERVICE_COS_MAP;
tr 51 M=SERVICE_COS_MAP;
tr 52 M=SERVICE_COS_MAP;
tr 71 M=SERVICE_COS_MAP TSE=F SLTH=T;
tr 71 M=SERVICE_COS_MAP TSE=T SLTH=T;
tr 71 M=SERVICE_COS_MAP TSE=T SLTH=F;
echo " SER_MEMORY";
tr 50 M=SER_MEMORY;
tr 51 M=SER_MEMORY;
tr 52 M=SER_MEMORY;
tr 71 M=SER_MEMORY TSE=F SLTH=T;
tr 71 M=SER_MEMORY TSE=T SLTH=T;
tr 71 M=SER_MEMORY TSE=T SLTH=F;
echo " SER_RESULT_0";
tr 50 M=SER_RESULT_0;
#tr 51 M=SER_RESULT_0;
#tr 52 M=SER_RESULT_0;
tr 71 M=SER_RESULT_0 TSE=F SLTH=T;
tr 71 M=SER_RESULT_0 TSE=T SLTH=T;
tr 71 M=SER_RESULT_0 TSE=T SLTH=F;
echo " SER_RESULT_1";
tr 50 M=SER_RESULT_1;
#tr 51 M=SER_RESULT_1;
#tr 52 M=SER_RESULT_1;
tr 71 M=SER_RESULT_1 TSE=F SLTH=T;
tr 71 M=SER_RESULT_1 TSE=T SLTH=T;
tr 71 M=SER_RESULT_1 TSE=T SLTH=F;
echo " SER_RESULT_DATA_0";
tr 50 M=SER_RESULT_DATA_0;
#tr 51 M=SER_RESULT_DATA_0;
#tr 52 M=SER_RESULT_DATA_0;
tr 71 M=SER_RESULT_DATA_0 TSE=F SLTH=T;
tr 71 M=SER_RESULT_DATA_0 TSE=T SLTH=T;
tr 71 M=SER_RESULT_DATA_0 TSE=T SLTH=F;
echo " SER_RESULT_DATA_1";
tr 50 M=SER_RESULT_DATA_1;
#tr 51 M=SER_RESULT_DATA_1;
#tr 52 M=SER_RESULT_DATA_1;
tr 71 M=SER_RESULT_DATA_1 TSE=F SLTH=T;
tr 71 M=SER_RESULT_DATA_1 TSE=T SLTH=T;
tr 71 M=SER_RESULT_DATA_1 TSE=T SLTH=F;
echo " SER_RESULT_EXPECTED_0";
tr 50 M=SER_RESULT_EXPECTED_0;
#tr 51 M=SER_RESULT_EXPECTED_0;
#tr 52 M=SER_RESULT_EXPECTED_0;
tr 71 M=SER_RESULT_EXPECTED_0 TSE=F SLTH=T;
tr 71 M=SER_RESULT_EXPECTED_0 TSE=T SLTH=T;
tr 71 M=SER_RESULT_EXPECTED_0 TSE=T SLTH=F;
echo " SER_RESULT_EXPECTED_1";
tr 50 M=SER_RESULT_EXPECTED_1;
#tr 51 M=SER_RESULT_EXPECTED_1;
#tr 52 M=SER_RESULT_EXPECTED_1;
tr 71 M=SER_RESULT_EXPECTED_1 TSE=F SLTH=T;
tr 71 M=SER_RESULT_EXPECTED_1 TSE=T SLTH=T;
tr 71 M=SER_RESULT_EXPECTED_1 TSE=T SLTH=F;
echo " SOURCE_MOD_PROXY_TABLE";
tr 50 M=SOURCE_MOD_PROXY_TABLE;
tr 51 M=SOURCE_MOD_PROXY_TABLE;
tr 52 M=SOURCE_MOD_PROXY_TABLE;
tr 71 M=SOURCE_MOD_PROXY_TABLE TSE=F SLTH=T;
tr 71 M=SOURCE_MOD_PROXY_TABLE TSE=T SLTH=T;
tr 71 M=SOURCE_MOD_PROXY_TABLE TSE=T SLTH=F;
echo " SOURCE_TRUNK_MAP_MODBASE";
tr 50 M=SOURCE_TRUNK_MAP_MODBASE;
tr 51 M=SOURCE_TRUNK_MAP_MODBASE;
tr 52 M=SOURCE_TRUNK_MAP_MODBASE;
tr 71 M=SOURCE_TRUNK_MAP_MODBASE TSE=F SLTH=T;
tr 71 M=SOURCE_TRUNK_MAP_MODBASE TSE=T SLTH=T;
tr 71 M=SOURCE_TRUNK_MAP_MODBASE TSE=T SLTH=F;
echo " SOURCE_TRUNK_MAP_TABLE";
tr 50 M=SOURCE_TRUNK_MAP_TABLE;
tr 51 M=SOURCE_TRUNK_MAP_TABLE;
tr 52 M=SOURCE_TRUNK_MAP_TABLE;
tr 71 M=SOURCE_TRUNK_MAP_TABLE TSE=F SLTH=T;
tr 71 M=SOURCE_TRUNK_MAP_TABLE TSE=T SLTH=T;
tr 71 M=SOURCE_TRUNK_MAP_TABLE TSE=T SLTH=F;
echo " SOURCE_VP";
tr 50 M=SOURCE_VP;
tr 51 M=SOURCE_VP;
tr 52 M=SOURCE_VP;
tr 71 M=SOURCE_VP TSE=F SLTH=T;
tr 71 M=SOURCE_VP TSE=T SLTH=T;
tr 71 M=SOURCE_VP TSE=T SLTH=F;
echo " SRC_MODID_EGRESS";
tr 50 M=SRC_MODID_EGRESS;
tr 51 M=SRC_MODID_EGRESS;
tr 52 M=SRC_MODID_EGRESS;
tr 71 M=SRC_MODID_EGRESS TSE=F SLTH=T;
tr 71 M=SRC_MODID_EGRESS TSE=T SLTH=T;
tr 71 M=SRC_MODID_EGRESS TSE=T SLTH=F;
echo " SRC_MODID_INGRESS_BLOCK";
tr 50 M=SRC_MODID_INGRESS_BLOCK;
tr 51 M=SRC_MODID_INGRESS_BLOCK;
tr 52 M=SRC_MODID_INGRESS_BLOCK;
tr 71 M=SRC_MODID_INGRESS_BLOCK TSE=F SLTH=T;
tr 71 M=SRC_MODID_INGRESS_BLOCK TSE=T SLTH=T;
tr 71 M=SRC_MODID_INGRESS_BLOCK TSE=T SLTH=F;
echo " STG_TAB";
tr 50 M=STG_TAB;
tr 51 M=STG_TAB;
tr 52 M=STG_TAB;
tr 71 M=STG_TAB TSE=F SLTH=T;
tr 71 M=STG_TAB TSE=T SLTH=T;
tr 71 M=STG_TAB TSE=T SLTH=F;
echo " SUBPORT_TAG_TO_PP_PORT_MAP";
tr 50 M=SUBPORT_TAG_TO_PP_PORT_MAP;
tr 51 M=SUBPORT_TAG_TO_PP_PORT_MAP;
tr 52 M=SUBPORT_TAG_TO_PP_PORT_MAP;
tr 71 M=SUBPORT_TAG_TO_PP_PORT_MAP TSE=F SLTH=T;
tr 71 M=SUBPORT_TAG_TO_PP_PORT_MAP TSE=T SLTH=T;
tr 71 M=SUBPORT_TAG_TO_PP_PORT_MAP TSE=T SLTH=F;
echo " SUBPORT_TAG_TO_PP_PORT_MAP_DATA_ONLY";
tr 50 M=SUBPORT_TAG_TO_PP_PORT_MAP_DATA_ONLY;
tr 51 M=SUBPORT_TAG_TO_PP_PORT_MAP_DATA_ONLY;
tr 52 M=SUBPORT_TAG_TO_PP_PORT_MAP_DATA_ONLY;
tr 71 M=SUBPORT_TAG_TO_PP_PORT_MAP_DATA_ONLY TSE=F SLTH=T;
tr 71 M=SUBPORT_TAG_TO_PP_PORT_MAP_DATA_ONLY TSE=T SLTH=T;
tr 71 M=SUBPORT_TAG_TO_PP_PORT_MAP_DATA_ONLY TSE=T SLTH=F;
echo " SUBPORT_TAG_TO_PP_PORT_MAP_ONLY";
tr 50 M=SUBPORT_TAG_TO_PP_PORT_MAP_ONLY;
tr 51 M=SUBPORT_TAG_TO_PP_PORT_MAP_ONLY;
tr 52 M=SUBPORT_TAG_TO_PP_PORT_MAP_ONLY;
tr 71 M=SUBPORT_TAG_TO_PP_PORT_MAP_ONLY TSE=F SLTH=T;
tr 71 M=SUBPORT_TAG_TO_PP_PORT_MAP_ONLY TSE=T SLTH=T;
tr 71 M=SUBPORT_TAG_TO_PP_PORT_MAP_ONLY TSE=T SLTH=F;
echo " SVM_MACROFLOW_INDEX_TABLE";
tr 50 M=SVM_MACROFLOW_INDEX_TABLE;
tr 51 M=SVM_MACROFLOW_INDEX_TABLE;
tr 52 M=SVM_MACROFLOW_INDEX_TABLE;
tr 71 M=SVM_MACROFLOW_INDEX_TABLE TSE=F SLTH=T;
tr 71 M=SVM_MACROFLOW_INDEX_TABLE TSE=T SLTH=T;
tr 71 M=SVM_MACROFLOW_INDEX_TABLE TSE=T SLTH=F;
echo " SVM_METER_TABLE";
tr 50 M=SVM_METER_TABLE;
tr 51 M=SVM_METER_TABLE;
tr 52 M=SVM_METER_TABLE;
tr 71 M=SVM_METER_TABLE TSE=F SLTH=T;
tr 71 M=SVM_METER_TABLE TSE=T SLTH=T;
tr 71 M=SVM_METER_TABLE TSE=T SLTH=F;
echo " SVM_OFFSET_TABLE";
tr 50 M=SVM_OFFSET_TABLE;
tr 51 M=SVM_OFFSET_TABLE;
tr 52 M=SVM_OFFSET_TABLE;
tr 71 M=SVM_OFFSET_TABLE TSE=F SLTH=T;
tr 71 M=SVM_OFFSET_TABLE TSE=T SLTH=T;
tr 71 M=SVM_OFFSET_TABLE TSE=T SLTH=F;
echo " SVM_POLICY_TABLE";
tr 50 M=SVM_POLICY_TABLE;
tr 51 M=SVM_POLICY_TABLE;
tr 52 M=SVM_POLICY_TABLE;
tr 71 M=SVM_POLICY_TABLE TSE=F SLTH=T;
tr 71 M=SVM_POLICY_TABLE TSE=T SLTH=T;
tr 71 M=SVM_POLICY_TABLE TSE=T SLTH=F;
echo " SYSTEM_CONFIG_TABLE";
tr 50 M=SYSTEM_CONFIG_TABLE;
tr 51 M=SYSTEM_CONFIG_TABLE;
tr 52 M=SYSTEM_CONFIG_TABLE;
tr 71 M=SYSTEM_CONFIG_TABLE TSE=F SLTH=T;
tr 71 M=SYSTEM_CONFIG_TABLE TSE=T SLTH=T;
tr 71 M=SYSTEM_CONFIG_TABLE TSE=T SLTH=F;
echo " SYSTEM_CONFIG_TABLE_MODBASE";
tr 50 M=SYSTEM_CONFIG_TABLE_MODBASE;
tr 51 M=SYSTEM_CONFIG_TABLE_MODBASE;
tr 52 M=SYSTEM_CONFIG_TABLE_MODBASE;
tr 71 M=SYSTEM_CONFIG_TABLE_MODBASE TSE=F SLTH=T;
tr 71 M=SYSTEM_CONFIG_TABLE_MODBASE TSE=T SLTH=T;
tr 71 M=SYSTEM_CONFIG_TABLE_MODBASE TSE=T SLTH=F;
echo " TCP_FN";
tr 50 M=TCP_FN;
tr 51 M=TCP_FN;
tr 52 M=TCP_FN;
tr 71 M=TCP_FN TSE=F SLTH=T;
tr 71 M=TCP_FN TSE=T SLTH=T;
tr 71 M=TCP_FN TSE=T SLTH=F;
#echo " THDIEMA_THDI_PORT_PG_CNTRS";
#tr 50 M=THDIEMA_THDI_PORT_PG_CNTRS;
#tr 51 M=THDIEMA_THDI_PORT_PG_CNTRS;
#tr 52 M=THDIEMA_THDI_PORT_PG_CNTRS;
#tr 71 M=THDIEMA_THDI_PORT_PG_CNTRS TSE=F SLTH=T;
#tr 71 M=THDIEMA_THDI_PORT_PG_CNTRS TSE=T SLTH=T;
#tr 71 M=THDIEMA_THDI_PORT_PG_CNTRS TSE=T SLTH=F;
#echo " THDIEMA_THDI_PORT_PG_CONFIG";
#tr 50 M=THDIEMA_THDI_PORT_PG_CONFIG;
#tr 51 M=THDIEMA_THDI_PORT_PG_CONFIG;
#tr 52 M=THDIEMA_THDI_PORT_PG_CONFIG;
#tr 71 M=THDIEMA_THDI_PORT_PG_CONFIG TSE=F SLTH=T;
#tr 71 M=THDIEMA_THDI_PORT_PG_CONFIG TSE=T SLTH=T;
#tr 71 M=THDIEMA_THDI_PORT_PG_CONFIG TSE=T SLTH=F;
#echo " THDIEMA_THDI_PORT_SP_CNTRS";
#tr 50 M=THDIEMA_THDI_PORT_SP_CNTRS;
#tr 51 M=THDIEMA_THDI_PORT_SP_CNTRS;
#tr 52 M=THDIEMA_THDI_PORT_SP_CNTRS;
#tr 71 M=THDIEMA_THDI_PORT_SP_CNTRS TSE=F SLTH=T;
#tr 71 M=THDIEMA_THDI_PORT_SP_CNTRS TSE=T SLTH=T;
#tr 71 M=THDIEMA_THDI_PORT_SP_CNTRS TSE=T SLTH=F;
#echo " THDIEMA_THDI_PORT_SP_CONFIG";
#tr 50 M=THDIEMA_THDI_PORT_SP_CONFIG;
#tr 51 M=THDIEMA_THDI_PORT_SP_CONFIG;
#tr 52 M=THDIEMA_THDI_PORT_SP_CONFIG;
#tr 71 M=THDIEMA_THDI_PORT_SP_CONFIG TSE=F SLTH=T;
#tr 71 M=THDIEMA_THDI_PORT_SP_CONFIG TSE=T SLTH=T;
#tr 71 M=THDIEMA_THDI_PORT_SP_CONFIG TSE=T SLTH=F;
#echo " THDIEXT_THDI_PORT_PG_CNTRS";
#tr 50 M=THDIEXT_THDI_PORT_PG_CNTRS;
#tr 51 M=THDIEXT_THDI_PORT_PG_CNTRS;
#tr 52 M=THDIEXT_THDI_PORT_PG_CNTRS;
#tr 71 M=THDIEXT_THDI_PORT_PG_CNTRS TSE=F SLTH=T;
#tr 71 M=THDIEXT_THDI_PORT_PG_CNTRS TSE=T SLTH=T;
#tr 71 M=THDIEXT_THDI_PORT_PG_CNTRS TSE=T SLTH=F;
#echo " THDIEXT_THDI_PORT_PG_CONFIG";
#tr 50 M=THDIEXT_THDI_PORT_PG_CONFIG;
#tr 51 M=THDIEXT_THDI_PORT_PG_CONFIG;
#tr 52 M=THDIEXT_THDI_PORT_PG_CONFIG;
#tr 71 M=THDIEXT_THDI_PORT_PG_CONFIG TSE=F SLTH=T;
#tr 71 M=THDIEXT_THDI_PORT_PG_CONFIG TSE=T SLTH=T;
#tr 71 M=THDIEXT_THDI_PORT_PG_CONFIG TSE=T SLTH=F;
#echo " THDIEXT_THDI_PORT_SP_CNTRS";
#tr 50 M=THDIEXT_THDI_PORT_SP_CNTRS;
#tr 51 M=THDIEXT_THDI_PORT_SP_CNTRS;
#tr 52 M=THDIEXT_THDI_PORT_SP_CNTRS;
#tr 71 M=THDIEXT_THDI_PORT_SP_CNTRS TSE=F SLTH=T;
#tr 71 M=THDIEXT_THDI_PORT_SP_CNTRS TSE=T SLTH=T;
#tr 71 M=THDIEXT_THDI_PORT_SP_CNTRS TSE=T SLTH=F;
#echo " THDIEXT_THDI_PORT_SP_CONFIG";
#tr 50 M=THDIEXT_THDI_PORT_SP_CONFIG;
#tr 51 M=THDIEXT_THDI_PORT_SP_CONFIG;
#tr 52 M=THDIEXT_THDI_PORT_SP_CONFIG;
#tr 71 M=THDIEXT_THDI_PORT_SP_CONFIG TSE=F SLTH=T;
#tr 71 M=THDIEXT_THDI_PORT_SP_CONFIG TSE=T SLTH=T;
#tr 71 M=THDIEXT_THDI_PORT_SP_CONFIG TSE=T SLTH=F;
#echo " THDIQEN_THDI_PORT_PG_CNTRS";
#tr 50 M=THDIQEN_THDI_PORT_PG_CNTRS;
#tr 51 M=THDIQEN_THDI_PORT_PG_CNTRS;
#tr 52 M=THDIQEN_THDI_PORT_PG_CNTRS;
#tr 71 M=THDIQEN_THDI_PORT_PG_CNTRS TSE=F SLTH=T;
#tr 71 M=THDIQEN_THDI_PORT_PG_CNTRS TSE=T SLTH=T;
#tr 71 M=THDIQEN_THDI_PORT_PG_CNTRS TSE=T SLTH=F;
#echo " THDIQEN_THDI_PORT_PG_CONFIG";
#tr 50 M=THDIQEN_THDI_PORT_PG_CONFIG;
#tr 51 M=THDIQEN_THDI_PORT_PG_CONFIG;
#tr 52 M=THDIQEN_THDI_PORT_PG_CONFIG;
#tr 71 M=THDIQEN_THDI_PORT_PG_CONFIG TSE=F SLTH=T;
#tr 71 M=THDIQEN_THDI_PORT_PG_CONFIG TSE=T SLTH=T;
#tr 71 M=THDIQEN_THDI_PORT_PG_CONFIG TSE=T SLTH=F;
#echo " THDIQEN_THDI_PORT_SP_CNTRS";
#tr 50 M=THDIQEN_THDI_PORT_SP_CNTRS;
#tr 51 M=THDIQEN_THDI_PORT_SP_CNTRS;
#tr 52 M=THDIQEN_THDI_PORT_SP_CNTRS;
#tr 71 M=THDIQEN_THDI_PORT_SP_CNTRS TSE=F SLTH=T;
#tr 71 M=THDIQEN_THDI_PORT_SP_CNTRS TSE=T SLTH=T;
#tr 71 M=THDIQEN_THDI_PORT_SP_CNTRS TSE=T SLTH=F;
#echo " THDIQEN_THDI_PORT_SP_CONFIG";
#tr 50 M=THDIQEN_THDI_PORT_SP_CONFIG;
#tr 51 M=THDIQEN_THDI_PORT_SP_CONFIG;
#tr 52 M=THDIQEN_THDI_PORT_SP_CONFIG;
#tr 71 M=THDIQEN_THDI_PORT_SP_CONFIG TSE=F SLTH=T;
#tr 71 M=THDIQEN_THDI_PORT_SP_CONFIG TSE=T SLTH=T;
#tr 71 M=THDIQEN_THDI_PORT_SP_CONFIG TSE=T SLTH=F;
#echo " THDIRQE_THDI_PORT_PG_CNTRS";
#tr 50 M=THDIRQE_THDI_PORT_PG_CNTRS;
#tr 51 M=THDIRQE_THDI_PORT_PG_CNTRS;
#tr 52 M=THDIRQE_THDI_PORT_PG_CNTRS;
#tr 71 M=THDIRQE_THDI_PORT_PG_CNTRS TSE=F SLTH=T;
#tr 71 M=THDIRQE_THDI_PORT_PG_CNTRS TSE=T SLTH=T;
#tr 71 M=THDIRQE_THDI_PORT_PG_CNTRS TSE=T SLTH=F;
#echo " THDIRQE_THDI_PORT_PG_CONFIG";
#tr 50 M=THDIRQE_THDI_PORT_PG_CONFIG;
#tr 51 M=THDIRQE_THDI_PORT_PG_CONFIG;
#tr 52 M=THDIRQE_THDI_PORT_PG_CONFIG;
#tr 71 M=THDIRQE_THDI_PORT_PG_CONFIG TSE=F SLTH=T;
#tr 71 M=THDIRQE_THDI_PORT_PG_CONFIG TSE=T SLTH=T;
#tr 71 M=THDIRQE_THDI_PORT_PG_CONFIG TSE=T SLTH=F;
#echo " THDIRQE_THDI_PORT_SP_CNTRS";
#tr 50 M=THDIRQE_THDI_PORT_SP_CNTRS;
#tr 51 M=THDIRQE_THDI_PORT_SP_CNTRS;
#tr 52 M=THDIRQE_THDI_PORT_SP_CNTRS;
#tr 71 M=THDIRQE_THDI_PORT_SP_CNTRS TSE=F SLTH=T;
#tr 71 M=THDIRQE_THDI_PORT_SP_CNTRS TSE=T SLTH=T;
#tr 71 M=THDIRQE_THDI_PORT_SP_CNTRS TSE=T SLTH=F;
#echo " THDIRQE_THDI_PORT_SP_CONFIG";
#tr 50 M=THDIRQE_THDI_PORT_SP_CONFIG;
#tr 51 M=THDIRQE_THDI_PORT_SP_CONFIG;
#tr 52 M=THDIRQE_THDI_PORT_SP_CONFIG;
#tr 71 M=THDIRQE_THDI_PORT_SP_CONFIG TSE=F SLTH=T;
#tr 71 M=THDIRQE_THDI_PORT_SP_CONFIG TSE=T SLTH=T;
#tr 71 M=THDIRQE_THDI_PORT_SP_CONFIG TSE=T SLTH=F;
#echo " THDI_PORT_PG_CNTRS";
#tr 50 M=THDI_PORT_PG_CNTRS;
#tr 51 M=THDI_PORT_PG_CNTRS;
#tr 52 M=THDI_PORT_PG_CNTRS;
#tr 71 M=THDI_PORT_PG_CNTRS TSE=F SLTH=T;
#tr 71 M=THDI_PORT_PG_CNTRS TSE=T SLTH=T;
#tr 71 M=THDI_PORT_PG_CNTRS TSE=T SLTH=F;
#echo " THDI_PORT_PG_CONFIG";
#tr 50 M=THDI_PORT_PG_CONFIG;
#tr 51 M=THDI_PORT_PG_CONFIG;
#tr 52 M=THDI_PORT_PG_CONFIG;
#tr 71 M=THDI_PORT_PG_CONFIG TSE=F SLTH=T;
#tr 71 M=THDI_PORT_PG_CONFIG TSE=T SLTH=T;
#tr 71 M=THDI_PORT_PG_CONFIG TSE=T SLTH=F;
#echo " THDI_PORT_SP_CNTRS";
#tr 50 M=THDI_PORT_SP_CNTRS;
#tr 51 M=THDI_PORT_SP_CNTRS;
#tr 52 M=THDI_PORT_SP_CNTRS;
#tr 71 M=THDI_PORT_SP_CNTRS TSE=F SLTH=T;
#tr 71 M=THDI_PORT_SP_CNTRS TSE=T SLTH=T;
#tr 71 M=THDI_PORT_SP_CNTRS TSE=T SLTH=F;
#echo " THDI_PORT_SP_CONFIG";
#tr 50 M=THDI_PORT_SP_CONFIG;
#tr 51 M=THDI_PORT_SP_CONFIG;
#tr 52 M=THDI_PORT_SP_CONFIG;
#tr 71 M=THDI_PORT_SP_CONFIG TSE=F SLTH=T;
#tr 71 M=THDI_PORT_SP_CONFIG TSE=T SLTH=T;
#tr 71 M=THDI_PORT_SP_CONFIG TSE=T SLTH=F;
echo " THDO_OPNCOUNT_QENTRY";
tr 50 M=THDO_OPNCOUNT_QENTRY;
tr 51 M=THDO_OPNCOUNT_QENTRY;
tr 52 M=THDO_OPNCOUNT_QENTRY;
tr 71 M=THDO_OPNCOUNT_QENTRY TSE=F SLTH=T;
tr 71 M=THDO_OPNCOUNT_QENTRY TSE=T SLTH=T;
tr 71 M=THDO_OPNCOUNT_QENTRY TSE=T SLTH=F;
if !$?LIKE_BCM56456 \
   'echo " THDO_QCOUNT_CELL_1"; \
    tr 50 M=THDO_QCOUNT_CELL_1; \
    tr 51 M=THDO_QCOUNT_CELL_1; \
    tr 52 M=THDO_QCOUNT_CELL_1; \
    tr 71 M=THDO_QCOUNT_CELL_1 TSE=F SLTH=T; \
    tr 71 M=THDO_QCOUNT_CELL_1 TSE=T SLTH=T; \
    tr 71 M=THDO_QCOUNT_CELL_1 TSE=T SLTH=F; \
    $done;'
echo " THDO_QCOUNT_QENTRY_0";
tr 50 M=THDO_QCOUNT_QENTRY_0;
tr 51 M=THDO_QCOUNT_QENTRY_0;
tr 52 M=THDO_QCOUNT_QENTRY_0;
tr 71 M=THDO_QCOUNT_QENTRY_0 TSE=F SLTH=T;
tr 71 M=THDO_QCOUNT_QENTRY_0 TSE=T SLTH=T;
tr 71 M=THDO_QCOUNT_QENTRY_0 TSE=T SLTH=F;
if !$?LIKE_BCM56456 \
   'echo " THDO_QCOUNT_QENTRY_1"; \
    tr 50 M=THDO_QCOUNT_QENTRY_1; \
    tr 51 M=THDO_QCOUNT_QENTRY_1; \
    tr 52 M=THDO_QCOUNT_QENTRY_1; \
    tr 71 M=THDO_QCOUNT_QENTRY_1 TSE=F SLTH=T; \
    tr 71 M=THDO_QCOUNT_QENTRY_1 TSE=T SLTH=T; \
    tr 71 M=THDO_QCOUNT_QENTRY_1 TSE=T SLTH=F; \
    echo " THDO_QRESET_VALUE_CELL_1"; \
    tr 50 M=THDO_QRESET_VALUE_CELL_1; \
    tr 51 M=THDO_QRESET_VALUE_CELL_1; \
    tr 52 M=THDO_QRESET_VALUE_CELL_1; \
    tr 71 M=THDO_QRESET_VALUE_CELL_1 TSE=F SLTH=T; \
    tr 71 M=THDO_QRESET_VALUE_CELL_1 TSE=T SLTH=T; \
    tr 71 M=THDO_QRESET_VALUE_CELL_1 TSE=T SLTH=F; \
    echo " THDO_QRESET_VALUE_QENTRY_1"; \
    tr 50 M=THDO_QRESET_VALUE_QENTRY_1; \
    tr 51 M=THDO_QRESET_VALUE_QENTRY_1; \
    tr 52 M=THDO_QRESET_VALUE_QENTRY_1; \
    tr 71 M=THDO_QRESET_VALUE_QENTRY_1 TSE=F SLTH=T; \
    tr 71 M=THDO_QRESET_VALUE_QENTRY_1 TSE=T SLTH=T; \
    tr 71 M=THDO_QRESET_VALUE_QENTRY_1 TSE=T SLTH=F; \
    echo " THDO_QSTATUS_CELL_1"; \
    tr 50 M=THDO_QSTATUS_CELL_1; \
    tr 51 M=THDO_QSTATUS_CELL_1; \
    tr 52 M=THDO_QSTATUS_CELL_1; \
    tr 71 M=THDO_QSTATUS_CELL_1 TSE=F SLTH=T; \
    tr 71 M=THDO_QSTATUS_CELL_1 TSE=T SLTH=T; \
    tr 71 M=THDO_QSTATUS_CELL_1 TSE=T SLTH=F; \
    echo " THDO_QSTATUS_QENTRY_1"; \
    tr 50 M=THDO_QSTATUS_QENTRY_1; \
    tr 51 M=THDO_QSTATUS_QENTRY_1; \
    tr 52 M=THDO_QSTATUS_QENTRY_1; \
    tr 71 M=THDO_QSTATUS_QENTRY_1 TSE=F SLTH=T; \
    tr 71 M=THDO_QSTATUS_QENTRY_1 TSE=T SLTH=T; \
    tr 71 M=THDO_QSTATUS_QENTRY_1 TSE=T SLTH=F; \
    done;'
echo " TOS_FN";
tr 50 M=TOS_FN;
tr 51 M=TOS_FN;
tr 52 M=TOS_FN;
tr 71 M=TOS_FN TSE=F SLTH=T;
tr 71 M=TOS_FN TSE=T SLTH=T;
tr 71 M=TOS_FN TSE=T SLTH=F;
echo " TRUNK_BITMAP";
tr 50 M=TRUNK_BITMAP;
tr 51 M=TRUNK_BITMAP;
tr 52 M=TRUNK_BITMAP;
tr 71 M=TRUNK_BITMAP TSE=F SLTH=T;
tr 71 M=TRUNK_BITMAP TSE=T SLTH=T;
tr 71 M=TRUNK_BITMAP TSE=T SLTH=F;
echo " TRUNK_CBL_TABLE";
tr 50 M=TRUNK_CBL_TABLE;
tr 51 M=TRUNK_CBL_TABLE;
tr 52 M=TRUNK_CBL_TABLE;
tr 71 M=TRUNK_CBL_TABLE TSE=F SLTH=T;
tr 71 M=TRUNK_CBL_TABLE TSE=T SLTH=T;
tr 71 M=TRUNK_CBL_TABLE TSE=T SLTH=F;
echo " TRUNK_GROUP";
tr 50 M=TRUNK_GROUP;
tr 51 M=TRUNK_GROUP;
tr 52 M=TRUNK_GROUP;
tr 71 M=TRUNK_GROUP TSE=F SLTH=T;
tr 71 M=TRUNK_GROUP TSE=T SLTH=T;
tr 71 M=TRUNK_GROUP TSE=T SLTH=F;
echo " TRUNK_MEMBER";
tr 50 M=TRUNK_MEMBER;
tr 51 M=TRUNK_MEMBER;
tr 52 M=TRUNK_MEMBER;
tr 71 M=TRUNK_MEMBER TSE=F SLTH=T;
tr 71 M=TRUNK_MEMBER TSE=T SLTH=T;
tr 71 M=TRUNK_MEMBER TSE=T SLTH=F;
echo " TTL_FN";
tr 50 M=TTL_FN;
tr 51 M=TTL_FN;
tr 52 M=TTL_FN;
tr 71 M=TTL_FN TSE=F SLTH=T;
tr 71 M=TTL_FN TSE=T SLTH=T;
tr 71 M=TTL_FN TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER0";
tr 50 M=TXLP_DEBUG_COUNTER0;
tr 51 M=TXLP_DEBUG_COUNTER0;
tr 52 M=TXLP_DEBUG_COUNTER0;
tr 71 M=TXLP_DEBUG_COUNTER0 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER0 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER0 TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER1";
tr 50 M=TXLP_DEBUG_COUNTER1;
tr 51 M=TXLP_DEBUG_COUNTER1;
tr 52 M=TXLP_DEBUG_COUNTER1;
tr 71 M=TXLP_DEBUG_COUNTER1 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER1 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER1 TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER10";
tr 50 M=TXLP_DEBUG_COUNTER10;
tr 51 M=TXLP_DEBUG_COUNTER10;
tr 52 M=TXLP_DEBUG_COUNTER10;
tr 71 M=TXLP_DEBUG_COUNTER10 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER10 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER10 TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER11";
tr 50 M=TXLP_DEBUG_COUNTER11;
tr 51 M=TXLP_DEBUG_COUNTER11;
tr 52 M=TXLP_DEBUG_COUNTER11;
tr 71 M=TXLP_DEBUG_COUNTER11 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER11 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER11 TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER2";
tr 50 M=TXLP_DEBUG_COUNTER2;
tr 51 M=TXLP_DEBUG_COUNTER2;
tr 52 M=TXLP_DEBUG_COUNTER2;
tr 71 M=TXLP_DEBUG_COUNTER2 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER2 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER2 TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER3";
tr 50 M=TXLP_DEBUG_COUNTER3;
tr 51 M=TXLP_DEBUG_COUNTER3;
tr 52 M=TXLP_DEBUG_COUNTER3;
tr 71 M=TXLP_DEBUG_COUNTER3 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER3 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER3 TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER4";
tr 50 M=TXLP_DEBUG_COUNTER4;
tr 51 M=TXLP_DEBUG_COUNTER4;
tr 52 M=TXLP_DEBUG_COUNTER4;
tr 71 M=TXLP_DEBUG_COUNTER4 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER4 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER4 TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER5";
tr 50 M=TXLP_DEBUG_COUNTER5;
tr 51 M=TXLP_DEBUG_COUNTER5;
tr 52 M=TXLP_DEBUG_COUNTER5;
tr 71 M=TXLP_DEBUG_COUNTER5 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER5 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER5 TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER6";
tr 50 M=TXLP_DEBUG_COUNTER6;
tr 51 M=TXLP_DEBUG_COUNTER6;
tr 52 M=TXLP_DEBUG_COUNTER6;
tr 71 M=TXLP_DEBUG_COUNTER6 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER6 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER6 TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER7";
tr 50 M=TXLP_DEBUG_COUNTER7;
tr 51 M=TXLP_DEBUG_COUNTER7;
tr 52 M=TXLP_DEBUG_COUNTER7;
tr 71 M=TXLP_DEBUG_COUNTER7 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER7 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER7 TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER8";
tr 50 M=TXLP_DEBUG_COUNTER8;
tr 51 M=TXLP_DEBUG_COUNTER8;
tr 52 M=TXLP_DEBUG_COUNTER8;
tr 71 M=TXLP_DEBUG_COUNTER8 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER8 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER8 TSE=T SLTH=F;
echo " TXLP_DEBUG_COUNTER9";
tr 50 M=TXLP_DEBUG_COUNTER9;
tr 51 M=TXLP_DEBUG_COUNTER9;
tr 52 M=TXLP_DEBUG_COUNTER9;
tr 71 M=TXLP_DEBUG_COUNTER9 TSE=F SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER9 TSE=T SLTH=T;
tr 71 M=TXLP_DEBUG_COUNTER9 TSE=T SLTH=F;
echo " TXLP_INT2EXT_STREAM_MAP_TABLE";
tr 50 M=TXLP_INT2EXT_STREAM_MAP_TABLE;
tr 51 M=TXLP_INT2EXT_STREAM_MAP_TABLE;
tr 52 M=TXLP_INT2EXT_STREAM_MAP_TABLE;
tr 71 M=TXLP_INT2EXT_STREAM_MAP_TABLE TSE=F SLTH=T;
tr 71 M=TXLP_INT2EXT_STREAM_MAP_TABLE TSE=T SLTH=T;
tr 71 M=TXLP_INT2EXT_STREAM_MAP_TABLE TSE=T SLTH=F;
echo " TXLP_PORT_ADDR_MAP_TABLE";
tr 50 M=TXLP_PORT_ADDR_MAP_TABLE;
tr 51 M=TXLP_PORT_ADDR_MAP_TABLE;
tr 52 M=TXLP_PORT_ADDR_MAP_TABLE;
tr 71 M=TXLP_PORT_ADDR_MAP_TABLE TSE=F SLTH=T;
tr 71 M=TXLP_PORT_ADDR_MAP_TABLE TSE=T SLTH=T;
tr 71 M=TXLP_PORT_ADDR_MAP_TABLE TSE=T SLTH=F;
#echo " TXLP_PORT_MMU_REQUESTS";
#tr 50 M=TXLP_PORT_MMU_REQUESTS;
#tr 51 M=TXLP_PORT_MMU_REQUESTS;
#tr 52 M=TXLP_PORT_MMU_REQUESTS;
#tr 71 M=TXLP_PORT_MMU_REQUESTS TSE=F SLTH=T;
#tr 71 M=TXLP_PORT_MMU_REQUESTS TSE=T SLTH=T;
#tr 71 M=TXLP_PORT_MMU_REQUESTS TSE=T SLTH=F;
#echo " TXLP_PORT_REQUESTS";
#tr 50 M=TXLP_PORT_REQUESTS;
#tr 51 M=TXLP_PORT_REQUESTS;
#tr 52 M=TXLP_PORT_REQUESTS;
#tr 71 M=TXLP_PORT_REQUESTS TSE=F SLTH=T;
#tr 71 M=TXLP_PORT_REQUESTS TSE=T SLTH=T;
#tr 71 M=TXLP_PORT_REQUESTS TSE=T SLTH=F;
echo " TXLP_PORT_STREAM_BITMAP_TABLE";
tr 50 M=TXLP_PORT_STREAM_BITMAP_TABLE;
tr 51 M=TXLP_PORT_STREAM_BITMAP_TABLE;
tr 52 M=TXLP_PORT_STREAM_BITMAP_TABLE;
tr 71 M=TXLP_PORT_STREAM_BITMAP_TABLE TSE=F SLTH=T;
tr 71 M=TXLP_PORT_STREAM_BITMAP_TABLE TSE=T SLTH=T;
tr 71 M=TXLP_PORT_STREAM_BITMAP_TABLE TSE=T SLTH=F;
#echo " TXLP_PORT_USED_ENTRIES";
#tr 50 M=TXLP_PORT_USED_ENTRIES;
#tr 51 M=TXLP_PORT_USED_ENTRIES;
#tr 52 M=TXLP_PORT_USED_ENTRIES;
#tr 71 M=TXLP_PORT_USED_ENTRIES TSE=F SLTH=T;
#tr 71 M=TXLP_PORT_USED_ENTRIES TSE=T SLTH=T;
#tr 71 M=TXLP_PORT_USED_ENTRIES TSE=T SLTH=F;
echo " TXLP_STREAM_ADDR_MAP_TABLE";
tr 50 M=TXLP_STREAM_ADDR_MAP_TABLE;
tr 51 M=TXLP_STREAM_ADDR_MAP_TABLE;
tr 52 M=TXLP_STREAM_ADDR_MAP_TABLE;
tr 71 M=TXLP_STREAM_ADDR_MAP_TABLE TSE=F SLTH=T;
tr 71 M=TXLP_STREAM_ADDR_MAP_TABLE TSE=T SLTH=T;
tr 71 M=TXLP_STREAM_ADDR_MAP_TABLE TSE=T SLTH=F;
#echo " TXLP_STREAM_MMU_REQUESTS";
#tr 50 M=TXLP_STREAM_MMU_REQUESTS;
#tr 51 M=TXLP_STREAM_MMU_REQUESTS;
#tr 52 M=TXLP_STREAM_MMU_REQUESTS;
#tr 71 M=TXLP_STREAM_MMU_REQUESTS TSE=F SLTH=T;
#tr 71 M=TXLP_STREAM_MMU_REQUESTS TSE=T SLTH=T;
#tr 71 M=TXLP_STREAM_MMU_REQUESTS TSE=T SLTH=F;
#echo " TXLP_STREAM_USED_ENTRIES";
#tr 50 M=TXLP_STREAM_USED_ENTRIES;
#tr 51 M=TXLP_STREAM_USED_ENTRIES;
#tr 52 M=TXLP_STREAM_USED_ENTRIES;
#tr 71 M=TXLP_STREAM_USED_ENTRIES TSE=F SLTH=T;
#tr 71 M=TXLP_STREAM_USED_ENTRIES TSE=T SLTH=T;
#tr 71 M=TXLP_STREAM_USED_ENTRIES TSE=T SLTH=F;
echo " UDF_CONDITIONAL_CHECK_TABLE_CAM";
tr 50 M=UDF_CONDITIONAL_CHECK_TABLE_CAM;
tr 51 M=UDF_CONDITIONAL_CHECK_TABLE_CAM;
tr 52 M=UDF_CONDITIONAL_CHECK_TABLE_CAM;
tr 71 M=UDF_CONDITIONAL_CHECK_TABLE_CAM TSE=F SLTH=T;
tr 71 M=UDF_CONDITIONAL_CHECK_TABLE_CAM TSE=T SLTH=T;
tr 71 M=UDF_CONDITIONAL_CHECK_TABLE_CAM TSE=T SLTH=F;
echo " UDF_CONDITIONAL_CHECK_TABLE_RAM";
tr 50 M=UDF_CONDITIONAL_CHECK_TABLE_RAM;
tr 51 M=UDF_CONDITIONAL_CHECK_TABLE_RAM;
tr 52 M=UDF_CONDITIONAL_CHECK_TABLE_RAM;
tr 71 M=UDF_CONDITIONAL_CHECK_TABLE_RAM TSE=F SLTH=T;
tr 71 M=UDF_CONDITIONAL_CHECK_TABLE_RAM TSE=T SLTH=T;
tr 71 M=UDF_CONDITIONAL_CHECK_TABLE_RAM TSE=T SLTH=F;
echo " UNKNOWN_HGI_BITMAP";
tr 50 M=UNKNOWN_HGI_BITMAP;
tr 51 M=UNKNOWN_HGI_BITMAP;
tr 52 M=UNKNOWN_HGI_BITMAP;
tr 71 M=UNKNOWN_HGI_BITMAP TSE=F SLTH=T;
tr 71 M=UNKNOWN_HGI_BITMAP TSE=T SLTH=T;
tr 71 M=UNKNOWN_HGI_BITMAP TSE=T SLTH=F;
echo " UNKNOWN_MCAST_BLOCK_MASK";
tr 50 M=UNKNOWN_MCAST_BLOCK_MASK;
tr 51 M=UNKNOWN_MCAST_BLOCK_MASK;
tr 52 M=UNKNOWN_MCAST_BLOCK_MASK;
tr 71 M=UNKNOWN_MCAST_BLOCK_MASK TSE=F SLTH=T;
tr 71 M=UNKNOWN_MCAST_BLOCK_MASK TSE=T SLTH=T;
tr 71 M=UNKNOWN_MCAST_BLOCK_MASK TSE=T SLTH=F;
echo " UNKNOWN_UCAST_BLOCK_MASK";
tr 50 M=UNKNOWN_UCAST_BLOCK_MASK;
tr 51 M=UNKNOWN_UCAST_BLOCK_MASK;
tr 52 M=UNKNOWN_UCAST_BLOCK_MASK;
tr 71 M=UNKNOWN_UCAST_BLOCK_MASK TSE=F SLTH=T;
tr 71 M=UNKNOWN_UCAST_BLOCK_MASK TSE=T SLTH=T;
tr 71 M=UNKNOWN_UCAST_BLOCK_MASK TSE=T SLTH=F;
echo " VFI";
tr 50 M=VFI;
tr 51 M=VFI;
tr 52 M=VFI;
tr 71 M=VFI TSE=F SLTH=T;
tr 71 M=VFI TSE=T SLTH=T;
tr 71 M=VFI TSE=T SLTH=F;
echo " VFI_1";
tr 50 M=VFI_1;
tr 51 M=VFI_1;
tr 52 M=VFI_1;
tr 71 M=VFI_1 TSE=F SLTH=T;
tr 71 M=VFI_1 TSE=T SLTH=T;
tr 71 M=VFI_1 TSE=T SLTH=F;
echo " VFP_HASH_FIELD_BMAP_TABLE_A";
tr 50 M=VFP_HASH_FIELD_BMAP_TABLE_A;
tr 51 M=VFP_HASH_FIELD_BMAP_TABLE_A;
tr 52 M=VFP_HASH_FIELD_BMAP_TABLE_A;
tr 71 M=VFP_HASH_FIELD_BMAP_TABLE_A TSE=F SLTH=T;
tr 71 M=VFP_HASH_FIELD_BMAP_TABLE_A TSE=T SLTH=T;
tr 71 M=VFP_HASH_FIELD_BMAP_TABLE_A TSE=T SLTH=F;
echo " VFP_HASH_FIELD_BMAP_TABLE_B";
tr 50 M=VFP_HASH_FIELD_BMAP_TABLE_B;
tr 51 M=VFP_HASH_FIELD_BMAP_TABLE_B;
tr 52 M=VFP_HASH_FIELD_BMAP_TABLE_B;
tr 71 M=VFP_HASH_FIELD_BMAP_TABLE_B TSE=F SLTH=T;
tr 71 M=VFP_HASH_FIELD_BMAP_TABLE_B TSE=T SLTH=T;
tr 71 M=VFP_HASH_FIELD_BMAP_TABLE_B TSE=T SLTH=F;
echo " VFP_POLICY_TABLE";
tr 50 M=VFP_POLICY_TABLE;
tr 51 M=VFP_POLICY_TABLE;
tr 52 M=VFP_POLICY_TABLE;
tr 71 M=VFP_POLICY_TABLE TSE=F SLTH=T;
tr 71 M=VFP_POLICY_TABLE TSE=T SLTH=T;
tr 71 M=VFP_POLICY_TABLE TSE=T SLTH=F;
echo " VFP_TCAM";
tr 50 M=VFP_TCAM;
tr 51 M=VFP_TCAM;
tr 52 M=VFP_TCAM;
tr 71 M=VFP_TCAM TSE=F SLTH=T;
tr 71 M=VFP_TCAM TSE=T SLTH=T;
tr 71 M=VFP_TCAM TSE=T SLTH=F;
echo " VLAN_MAC";
tr 50 M=VLAN_MAC;
tr 51 M=VLAN_MAC;
tr 52 M=VLAN_MAC;
tr 71 M=VLAN_MAC TSE=F SLTH=T;
tr 71 M=VLAN_MAC TSE=T SLTH=T;
tr 71 M=VLAN_MAC TSE=T SLTH=F;
echo " VLAN_MAC_OVERFLOW";
tr 50 M=VLAN_MAC_OVERFLOW;
tr 51 M=VLAN_MAC_OVERFLOW;
tr 52 M=VLAN_MAC_OVERFLOW;
tr 71 M=VLAN_MAC_OVERFLOW TSE=F SLTH=T;
tr 71 M=VLAN_MAC_OVERFLOW TSE=T SLTH=T;
tr 71 M=VLAN_MAC_OVERFLOW TSE=T SLTH=F;
echo " VLAN_MPLS";
tr 50 M=VLAN_MPLS;
tr 51 M=VLAN_MPLS;
tr 52 M=VLAN_MPLS;
tr 71 M=VLAN_MPLS TSE=F SLTH=T;
tr 71 M=VLAN_MPLS TSE=T SLTH=T;
tr 71 M=VLAN_MPLS TSE=T SLTH=F;
echo " VLAN_OR_VFI_MAC_COUNT";
tr 50 M=VLAN_OR_VFI_MAC_COUNT;
tr 51 M=VLAN_OR_VFI_MAC_COUNT;
tr 52 M=VLAN_OR_VFI_MAC_COUNT;
tr 71 M=VLAN_OR_VFI_MAC_COUNT TSE=F SLTH=T;
tr 71 M=VLAN_OR_VFI_MAC_COUNT TSE=T SLTH=T;
tr 71 M=VLAN_OR_VFI_MAC_COUNT TSE=T SLTH=F;
echo " VLAN_OR_VFI_MAC_LIMIT";
tr 50 M=VLAN_OR_VFI_MAC_LIMIT;
tr 51 M=VLAN_OR_VFI_MAC_LIMIT;
tr 52 M=VLAN_OR_VFI_MAC_LIMIT;
tr 71 M=VLAN_OR_VFI_MAC_LIMIT TSE=F SLTH=T;
tr 71 M=VLAN_OR_VFI_MAC_LIMIT TSE=T SLTH=T;
tr 71 M=VLAN_OR_VFI_MAC_LIMIT TSE=T SLTH=F;
echo " VLAN_PROFILE_2";
tr 50 M=VLAN_PROFILE_2;
tr 51 M=VLAN_PROFILE_2;
tr 52 M=VLAN_PROFILE_2;
tr 71 M=VLAN_PROFILE_2 TSE=F SLTH=T;
tr 71 M=VLAN_PROFILE_2 TSE=T SLTH=T;
tr 71 M=VLAN_PROFILE_2 TSE=T SLTH=F;
echo " VLAN_PROFILE_TAB";
tr 50 M=VLAN_PROFILE_TAB;
tr 51 M=VLAN_PROFILE_TAB;
tr 52 M=VLAN_PROFILE_TAB;
tr 71 M=VLAN_PROFILE_TAB TSE=F SLTH=T;
tr 71 M=VLAN_PROFILE_TAB TSE=T SLTH=T;
tr 71 M=VLAN_PROFILE_TAB TSE=T SLTH=F;
echo " VLAN_PROTOCOL";
tr 50 M=VLAN_PROTOCOL;
tr 51 M=VLAN_PROTOCOL;
tr 52 M=VLAN_PROTOCOL;
tr 71 M=VLAN_PROTOCOL TSE=F SLTH=T;
tr 71 M=VLAN_PROTOCOL TSE=T SLTH=T;
tr 71 M=VLAN_PROTOCOL TSE=T SLTH=F;
echo " VLAN_PROTOCOL_DATA";
tr 50 M=VLAN_PROTOCOL_DATA;
tr 51 M=VLAN_PROTOCOL_DATA;
tr 52 M=VLAN_PROTOCOL_DATA;
tr 71 M=VLAN_PROTOCOL_DATA TSE=F SLTH=T;
tr 71 M=VLAN_PROTOCOL_DATA TSE=T SLTH=T;
tr 71 M=VLAN_PROTOCOL_DATA TSE=T SLTH=F;
echo " VLAN_SUBNET";
tr 50 M=VLAN_SUBNET;
tr 51 M=VLAN_SUBNET;
tr 52 M=VLAN_SUBNET;
tr 71 M=VLAN_SUBNET TSE=F SLTH=T;
tr 71 M=VLAN_SUBNET TSE=T SLTH=T;
tr 71 M=VLAN_SUBNET TSE=T SLTH=F;
echo " VLAN_SUBNET_DATA_ONLY";
tr 50 M=VLAN_SUBNET_DATA_ONLY;
tr 51 M=VLAN_SUBNET_DATA_ONLY;
tr 52 M=VLAN_SUBNET_DATA_ONLY;
tr 71 M=VLAN_SUBNET_DATA_ONLY TSE=F SLTH=T;
tr 71 M=VLAN_SUBNET_DATA_ONLY TSE=T SLTH=T;
tr 71 M=VLAN_SUBNET_DATA_ONLY TSE=T SLTH=F;
echo " VLAN_SUBNET_ONLY";
tr 50 M=VLAN_SUBNET_ONLY;
tr 51 M=VLAN_SUBNET_ONLY;
tr 52 M=VLAN_SUBNET_ONLY;
tr 71 M=VLAN_SUBNET_ONLY TSE=F SLTH=T;
tr 71 M=VLAN_SUBNET_ONLY TSE=T SLTH=T;
tr 71 M=VLAN_SUBNET_ONLY TSE=T SLTH=F;
echo " VLAN_TAB";
tr 50 M=VLAN_TAB;
tr 51 M=VLAN_TAB;
tr 52 M=VLAN_TAB;
tr 71 M=VLAN_TAB TSE=F SLTH=T;
tr 71 M=VLAN_TAB TSE=T SLTH=T;
tr 71 M=VLAN_TAB TSE=T SLTH=F;
echo " VLAN_XLATE";
tr 50 M=VLAN_XLATE;
tr 51 M=VLAN_XLATE;
tr 52 M=VLAN_XLATE;
tr 71 M=VLAN_XLATE TSE=F SLTH=T;
tr 71 M=VLAN_XLATE TSE=T SLTH=T;
tr 71 M=VLAN_XLATE TSE=T SLTH=F;
echo " VLAN_XLATE_OVERFLOW";
tr 50 M=VLAN_XLATE_OVERFLOW;
tr 51 M=VLAN_XLATE_OVERFLOW;
tr 52 M=VLAN_XLATE_OVERFLOW;
tr 71 M=VLAN_XLATE_OVERFLOW TSE=F SLTH=T;
tr 71 M=VLAN_XLATE_OVERFLOW TSE=T SLTH=T;
tr 71 M=VLAN_XLATE_OVERFLOW TSE=T SLTH=F;
echo " VRF";
tr 50 M=VRF;
tr 51 M=VRF;
tr 52 M=VRF;
tr 71 M=VRF TSE=F SLTH=T;
tr 71 M=VRF TSE=T SLTH=T;
tr 71 M=VRF TSE=T SLTH=F;
echo " XPORT_WC_UCMEM_DATA";
#tr 50 M=XPORT_WC_UCMEM_DATA;
#tr 51 M=XPORT_WC_UCMEM_DATA;
#tr 52 M=XPORT_WC_UCMEM_DATA;
#tr 71 M=XPORT_WC_UCMEM_DATA TSE=F SLTH=T;
#tr 71 M=XPORT_WC_UCMEM_DATA TSE=T SLTH=T;
#tr 71 M=XPORT_WC_UCMEM_DATA TSE=T SLTH=F;

# Re-initialize to clean up of various read/wrires to MMU memories
set rctest=true
set rcload=true
rcload rc.soc
counter off
l2mode off
linkscan off

echo "Running counter width verification test ..."
tr 30
$done

echo "Running counter read/write test ..."
tr 31
$done

#L2/L3 hashing tests
echo "Running L2 insert/delete/lookup test ..."
tr 32
$done

echo "Running L2 overflow insert test ..."
tr 33
$done

if !$?LIKE_BCM56248 \
   'echo "Running L2 hash test ..."; \
    tr 34; \
    $done; \
    echo "Running L2 delete by port test ..."; \
    tr 35; \
    $done; \
    echo "Running L2 delete by vlan test ..."; \
    tr 36; \
    $done;'

if $?run_full_sanity \
   'echo "Running IPV4 overflow insert test ..."; \
    tr 87 IPMCEnable=False; \
    tr 87 IPMCEnable=True; \
    $done;'

if $?run_full_sanity \
   'echo "Running IPV6 hash test ..."; \
    tr 88 IPMCEnable=False; \
    tr 88 IPMCEnable=True; \
    $done;'

if $?run_full_sanity \
   'echo "Running IPV6 overflow insert test ..."; \
    tr 85 IPMCEnable=False; \
    tr 85 IPMCEnable=True; \
    $done;'

if $?run_full_sanity \
   'echo "Running IPV6 hash test ..."; \
    tr 86 IPMCEnable=False; \
    tr 86 IPMCEnable=True; \
    $done;'

echo "Running VLAN translate overflow insert test ..."
tr 100

if $?run_full_sanity \
   'echo "Running VLAN translate hash tests ..."; \
    rc; \
    tr 101 hash=0; \
    tr 101 hash=1; \
    tr 101 hash=2; \
    tr 101 hash=3; \
    tr 101 hash=4; \
    tr 101 hash=5; \
    $done;'

echo "Running Egress VLAN translate overflow insert test ..."
tr 102
$done

if $?run_full_sanity \
   'echo "Running Egress VLAN translate hash tests ..."; \
    rc; \
    tr 103 hash=0; \
    tr 103 hash=1; \
    tr 103 hash=2; \
    tr 103 hash=3; \
    tr 103 hash=4; \
    tr 103 hash=5; \
    $done;'

if $?run_full_sanity \
   'echo "Running MPLS overflow insert test ..."; \
    tr 104; \
    $done;'

if $?run_full_sanity \
   'echo "Running MPLS hash tests ..."; \
    tr 105 hash=0; \
    tr 105 hash=1; \
    tr 105 hash=2; \
    tr 105 hash=3; \
    tr 105 hash=4; \
    tr 105 hash=5; \
    $done;'

echo "Running MDIO Linkscan test"
tr 60 readcount=10000
$done

rc

if $?run_full_sanity \
   'echo "Testing CPU DMA loopback ..."; \
    tr 17 c=5; \
    $done;'

if $?run_full_sanity \
   'echo "Testing CPU DMA, Scatter/Gather Reload ..."; \
    tr 22; \
    $done;'

if $?run_full_sanity \
   'echo "Testing CPU DMA, Scatter/Gather Simple ..."; \
    tr 23; \
    $done;'

if $?run_full_sanity \
   'echo "Testing CPU DMA, Scatter/Gather Random ..."; \
    tr 24; \
    $done;'

#Internal snake Loopback
if $?run_full_sanity \
   'echo "Running internal snake on all ports, MAC loopback ..."; \
    tr 39 loopbackmode=mac snakepath=two PBM=xe; \
    $done;'

if $?run_full_sanity \
   'echo "Running internal snake on all ports, PHY loopback ..."; \
    tr 39 loopbackmode=phy snakepath=two PBM=xe; \
    $done;'

if $?run_full_sanity \
   'echo "Running Mac loopback test case on ge port ..."; \
    tr 18 pbm=xe speed=10G; \
    $done;'

if $?run_full_sanity "local phy_mode none" else "local phy_mode ge"


echo "Running PHY External loopback test case on ge port ..."
if $?BCM56455_A0 || $?BCM56455_B0 \
   'tr 19 pbm=ge epbm=none; \
    $done; ' \
else \
   'tr 19 pbm=ge epbm=$phy_mode; \
    $done;'

if $?run_full_sanity \
   'echo "Running MAC loopback V2 on all ports ..."; \
    tr 48 pbm=e smi=103 dmi=42 vlan=5 pi=0x11335577 sendm=single; \
    $done;'

if $?run_full_sanity \
   'echo "Running PHY loopback V2 on all ports ..."; \
    tr 49 pbm=e smi=52 dmi=83 vlan=23 pi=0x01204007; \
    $done;'

#Traffic Test
if $?run_full_sanity "local ext_phy_mode MAC" else "local ext_phy_mode external"

echo "Running Traffic Test in external mode on xe port..."
if $?BCM56455_A0 || $?BCM56455_B0 \
   'tr 72 RM=$ext_phy_mode PBM=hg; \
    $done; ' \
else \
   'tr 72 RM=$ext_phy_mode PBM=xe; \
    $done; '

#SNMP
if $?run_full_sanity \
   'echo "SNMP MIB Object Test"; \
    tr 73; \
    $done;'

#Reload Test
#echo "TX Reload Test"
#tr 90
#$done

#echo "RX Reload Test"
#tr 91
#$done

if !$?LIKE_BCM56456 \
   'echo "DDR memory Test"; \
    config add pbmp_ext_mem=0x2222; \
    rc; \
    ddrphytune $CIs plot=false ct=1 pt=1; \
    tr 140 dn=$DNs ww=255 rw=255 bna=1000000 ea=0xffffff pm=1; \
    config delete pbmp_ext_mem; \
    $done; '

set rct=t; set rcl=t;
# Show status
date
tl
local returnCode $?

echo Tests Complete.  Reinitializing ...
config refresh
rcload rc.soc
counter off
l2mode off

# We want to show the return code from the tl command which
# lists the results. The automated test infrastructure keys off of this
# value
echo "testsuite: finished: sanity: $returnCode"

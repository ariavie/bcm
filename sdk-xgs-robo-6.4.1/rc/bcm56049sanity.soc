# $Id: bcm56340sanity.soc,v 1.11 Broadcom SDK $
# $Copyright: Copyright 2012 Broadcom Corporation.
# This program is the proprietary software of Broadcom Corporation
# and/or its licensors, and may only be used, duplicated, modified
# or distributed pursuant to the terms and conditions of a separate,
# written license agreement executed between you and Broadcom
# (an "Authorized License").  Except as set forth in an Authorized
# License, Broadcom grants no license (express or implied), right
# to use, or waiver of any kind with respect to the Software, and
# Broadcom expressly reserves all rights in and to the Software
# and all intellectual property rights therein.  IF YOU HAVE
# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
# ALL USE OF THE SOFTWARE.  
#  
# Except as expressly set forth in the Authorized License,
#  
# 1.     This program, including its structure, sequence and organization,
# constitutes the valuable trade secrets of Broadcom, and you shall use
# all reasonable efforts to protect the confidentiality thereof,
# and to use this information only in connection with your use of
# Broadcom integrated circuit products.
#  
# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
# 
# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
#
# Spiral BCM56049 Sanity
#
# Script to run all available tests as quickly as possible.
# For testing basic sanity of new drivers, simulators, chips, etc.
#

# Set run command script not to fail on errors reported by commands
# this allows the script to continue if a test fails
set rcerror=false

# Set up test mode: don't stop on errors, show progress on each test
tm -stoponerror +progress
# Unselect all
ts -*


# This sanity script supports BCM56049:
#       1. RGR_XFI_150: 1xF.QSGMII + 3xFlex[4x10] + 1GE


# config.bcm #
# ------------------------------------ #
# phy_port_primary_and_offset_ge4=0x0104
# phy_port_primary_and_offset_ge3=0x0103
# phy_port_primary_and_offset_ge2=0x0102
# phy_port_primary_and_offset_ge1=0x0101
# phy_port_primary_and_offset_ge0=0x0100
# phy_sgmii_autoneg_ge=1
# portgroup_2=1
# portgroup_1=1
# pbmp_xport_xe=0x1e00
# ------------------------------------ #


# Enabling all ports; bcm56049 SKU
if $?BCM56049_A0 \
    'local pbmge  0x3e;   local pbmge25 0x0; local pbmmgmt 0x20; local pbmhg 0x1e000; \
    local pbmport 0x1ffe1e; local pbmxe   0x1e000; local pbmhg21 0x20000 echo **56049** '


# Turn off Mem cache and Parity checks for mem tests
config add mem_cache_enable=0
config add parity_enable=0

echo "testsuite: started: Spiral (BCM56049) sanity"
rcload rc.soc
counter off
l2mode off

# We need to print out port status since any cabling effects results.
*:ps

if $?1 'local full_test 1'

# Avoid link messages while testing
linkscan off

init
init misc

local done 'echo "   Done"'

#Display some useful information
date
ver
soc

#Start Test
if !$?ihost_mode \
    'echo "Running PCI Compliance ...";\
     tr 2;\
     $done;'

if !$?ihost_mode \
    'echo "Running PCI S-Channel Buf ...";\
     tr 4;\
     $done;'

init soc
debug -warn
echo "Running Register reset defaults ..."
tr 1
$done

echo "Running Register read/write ..."
tr 3 mask64
$done
debug +warn

rcload rc.soc
counter off
l2mode off
memscsan off
echo "Running CPU Benchmarks (No Mem Cache) ..."
tr 21
$done

spiral_mem.soc

# Re-initialize to clean up of various read/writes to MMU memories
rcload rc.soc
counter off
l2mode off
memscsan off
linkscan off

echo "Running counter width verification test ..."
tr 30
$done

echo "Running counter read/write test ..."
tr 31
$done

#Hashing tests
#echo "Running hash mem test ..."
#tr 55
$done

echo "Running MDIO Linkscan test"
tr 60
$done

echo "Testing CPU DMA loopback ..."
tr 17
$done

#echo "Testing CPU DMA, Scatter/Gather Reload ..."
tr 22
#$done

echo "Testing CPU DMA, Scatter/Gather Simple ..."
tr 23
$done

echo "Testing CPU DMA, Scatter/Gather Random ..."
tr 24
$done

ps

#MAC Loopback
echo "Testing MAC Loopback - 1 Gb/s all GE ports"
tr 18 PortBitMap=$pbmge Speed=1000
$done

echo "Testing MAC Loopback - 2.5 Gb/s GE 2.5 ports"
tr 18 PortBitMap=$pbmge25 Speed=2500
$done

echo "Testing MAC Loopback - 10 Gb/s all XE ports"
tr 18 PortBitMap=$pbmxe Speed=10G
$done

echo "Testing MAC Loopback - 21 Gb/s all HG ports"
tr 18 PortBitMap=$pbmhg Speed=11G 
tr 18 PortBitMap=$pbmhg21 Speed=21G 
$done

echo "Testing PHY Loopback - 1 Gb/s all GE ports"
tr 19 PortBitMap=$pbmge Speed=1000
$done

echo "Testing PHY Loopback - 2.5 Gb/s GE 2.5 ports"
tr 19 PortBitMap=$pbmge25 Speed=2500
$done

echo "Testing PHY Loopback - 10 Gb/s all XE ports"
tr 19 PortBitMap=$pbmxe Speed=10G
$done

echo "Testing PHY Loopback - 21 Gb/s all HG ports"
tr 19 PortBitMap=$pbmhg Speed=11G
tr 19 PortBitMap=$pbmhg21 Speed=21G
$done

# tr 48 does not work with mix of port types
echo "Running MAC loopback V2 on GE ports..."
tr 48 pbm=$pbmge speed=1000
$done

echo "Running MAC loopback V2 on XE ports ..."
tr 48 pbm=$pbmxe speed=10G
$done

echo "Running MAC loopback V2 on HG ports ..."
tr 48 pbm=$pbmhg speed=21G
$done

# tr 49 does not work with mix of port types
echo "Running PHY loopback V2 on GE ports ..."
tr 49 pbm=$pbmge speed=1000
$done

echo "Running PHY loopback V2 on XE ports ..."
tr 49 pbm=$pbmxe speed=10G
$done

echo "Running PHY loopback V2 on HG ports ..."
tr 49 pbm=$pbmhg speed=11G
tr 49 pbm=$pbmhg21 speed=21G
$done

#Internal snake Loopback
echo "Running internal snake on GE ports, MAC loopback ..."
tr 39 LoopbackMode=MAC snakepath=TWOways PortBitMap=$pbmge
$done

echo "Running internal snake on GE ports, PHY loopback ..."
tr 39 LoopbackMode=PHY snakepath=TWOways PortBitMap=$pbmge
$done

echo "Running internal snake on XE ports, MAC loopback ..."
tr 39 LoopbackMode=MAC snakepath=TWOways PortBitMap=$pbmxe
$done

echo "Running internal snake on XE ports, PHY loopback ..."
tr 39 LoopbackMode=PHY snakepath=TWOways PortBitMap=$pbmxe
$done

#Traffic Test
echo "Running Traffic Test on GE ports in MAC mode ..."
tr 72 RunMode=MAC PortBitMap=$pbmge c=10 sp=1000
$done

#Traffic Test
echo "Running Traffic Test on GE 2.5 ports in MAC mode ..."
tr 72 RunMode=MAC PortBitMap=$pbmge25 c=10 sp=2500
$done

echo "Running Traffic Test on GE ports in PHY mode ..."
tr 72 RunMode=PHY PortBitMap=$pbmge c=10 sp=1000
$done

echo "Running Traffic Test on XE ports in MAC mode ..."
tr 72 RunMode=MAC PortBitMap=$pbmxe c=10 sp=10G
$done

echo "Running Traffic Test on XE ports in PHY mode ..."
tr 72 RunMode=PHY PortBitMap=$pbmxe c=10 sp=10G
$done

echo "Running Traffic Test on HG ports in MAC mode ..."
tr 72 RunMode=MAC PortBitMap=$pbmhg c=10 sp=11G
tr 72 RunMode=MAC PortBitMap=$pbmhg21 c=10 sp=21G
$done

echo "Running Traffic Test on HG ports in PHY mode ..."
tr 72 RunMode=PHY PortBitMap=$pbmhg c=10 sp=11G
tr 72 RunMode=PHY PortBitMap=$pbmhg21 c=10 sp=21G
$done

# Show status
date
tl
local returnCode $?

echo Tests Complete.  Reinitializing ...
config refresh
rcload rc.soc
counter off
l2mode off

# We want to show the return code from the tl command which
# lists the results. The automated test infrastructure keys off of this
# value
echo "testsuite: finished: sanity: $returnCode"

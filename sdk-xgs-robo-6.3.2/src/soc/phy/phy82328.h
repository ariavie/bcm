/***************************************************************************
 *     Copyright (c) 1999-2013, Broadcom Corporation
 *     All Rights Reserved
 *     Confidential Property of Broadcom Corporation
 *
 *
 * THIS SOFTWARE MAY ONLY BE USED SUBJECT TO AN EXECUTED SOFTWARE LICENSE
 * AGREEMENT  BETWEEN THE USER AND BROADCOM.  YOU HAVE NO RIGHT TO USE OR
 * EXPLOIT THIS MATERIAL EXCEPT SUBJECT TO THE TERMS OF SUCH AN AGREEMENT.
 *
 * $brcm_Workfile: $
 * $brcm_Revision: $
 * $brcm_Date: $
 *
 * Module Description:
 *                     DO NOT EDIT THIS FILE DIRECTLY
 *
 * This module was generated magically with RDB from a source description
 * file. You must edit the source file for changes to be made to this file.
 *
 *
 * Date:           Generated on         Fri Jun 28 04:13:30 2013
 *                 MD5 Checksum         327f72e85e64afb2b473248f4b1b9231
 *
 * Compiled with:  RDB Utility          5.0
 *                 RDB Parser           3.0
 *                 rdb2macro.pm         4.0
 *                 Perl Interpreter     5.008008
 *                 Operating System     solaris
 *
 * Spec Versions:  BASER_PCS_DETECT     1
 *                 GP2                  1
 *                 IEEE0_AN_BLK         1
 *                 IEEE0_BLK_PMA_PMD    1
 *                 IEEE10_BLK_PMA_PMD   1
 *                 IEEE1_AN_BLK         1
 *                 IEEE3_AN_BLK         1
 *                 LN_FC_RX             1
 *                 RX                   1
 *                 TX                   1
 *                 XGXS_BLK0            1
 *                 XGXS_BLK1            1
 *                 XGXS_BLK2            1
 *                 XGXS_BLK8            1
 *                 ams_rx               1
 *                 ams_tx               1
 *                 amscom               1
 *                 ckrst_ctrl           1
 *                 cl72_ieee_rx         1
 *                 cl72_ieee_tx         1
 *                 cl72_user_rx         1
 *                 cl72_user_tx_rptr    1
 *                 digcom_gallardo      1
 *                 dsc_a                1
 *                 dsc_b                1
 *                 dsc_c                1
 *                 dsc_d                1
 *                 dsc_e                1
 *                 mgt_top              1
 *                 patt_gen             1
 *                 pll_cal              1
 *                 sigdet               1
 *                 tlb_rx               1
 *                 tlb_tx               1
 *                 tx_fed_rptr          1
 *                 tx_pi                1
 *                 txcom_rptr           1
 *
 * RDB Files:  /projects/ntsw-sw2/home/arunkuma/gallardo28/sdk/src/soc/phy/regs/scripts/Linux/phy82328_register.rdb
 *
 * Revision History:
 *
 * $brcm_Log: $
 *
 ***************************************************************************/

#ifndef PHY82328_H__
#define PHY82328_H__

/**
 * m = memory, c = core, r = register, f = field, d = data.
 */
#if !defined(GET_FIELD) && !defined(SET_FIELD)
#define BRCM_ALIGN(c,r,f)   c##_##r##_##f##_ALIGN
#define BRCM_BITS(c,r,f)    c##_##r##_##f##_BITS
#define BRCM_MASK(c,r,f)    c##_##r##_##f##_MASK
#define BRCM_SHIFT(c,r,f)   c##_##r##_##f##_SHIFT

#define GET_FIELD(m,c,r,f) \
	((((m) & BRCM_MASK(c,r,f)) >> BRCM_SHIFT(c,r,f)) << BRCM_ALIGN(c,r,f))

#define SET_FIELD(m,c,r,f,d) \
	((m) = (((m) & ~BRCM_MASK(c,r,f)) | ((((d) >> BRCM_ALIGN(c,r,f)) << \
	 BRCM_SHIFT(c,r,f)) & BRCM_MASK(c,r,f))) \
	)

#define SET_TYPE_FIELD(m,c,r,f,d) SET_FIELD(m,c,r,f,c##_##d)
#define SET_NAME_FIELD(m,c,r,f,d) SET_FIELD(m,c,r,f,c##_##r##_##f##_##d)
#define SET_VALUE_FIELD(m,c,r,f,d) SET_FIELD(m,c,r,f,d)

#endif /* GET & SET */

#define PHY82328_C45_DEV_PMA_PMD     0x01
#define PHY82328_C45_DEV_AN          0x07

#define PHY82328_REG_READ(_unit, _phy_ctrl, _addr, _val) \
            READ_PHY_REG((_unit), (_phy_ctrl), (_addr), (_val))
#define PHY82328_REG_WRITE(_unit, _phy_ctrl, _addr, _val) \
            WRITE_PHY_REG((_unit), (_phy_ctrl), (_addr), (_val))
#define PHY82328_REG_MODIFY(_unit, _phy_ctrl, _addr, _val, _mask) \
            MODIFY_PHY_REG((_unit), (_phy_ctrl), (_addr), (_val), (_mask))

/*
 * Line side
 */
/* PMA/PMD Device (Dev Addr 1) */
#define READ_PHY82328_MMF_PMA_PMD_REG(_unit, _phy_ctrl, _reg,_val) \
            PHY82328_REG_READ((_unit), (_phy_ctrl), \
              SOC_PHY_CLAUSE45_ADDR(PHY82328_C45_DEV_PMA_PMD, (_reg)), (_val))
#define WRITE_PHY82328_MMF_PMA_PMD_REG(_unit, _phy_ctrl, _reg,_val) \
            PHY82328_REG_WRITE((_unit), (_phy_ctrl), \
              SOC_PHY_CLAUSE45_ADDR(PHY82328_C45_DEV_PMA_PMD, (_reg)), (_val))
#define MODIFY_PHY82328_MMF_PMA_PMD_REG(_unit, _phy_ctrl, _reg, _val, _mask) \
        PHY82328_REG_MODIFY((_unit), (_phy_ctrl), \
        SOC_PHY_CLAUSE45_ADDR(PHY82328_C45_DEV_PMA_PMD, (_reg)), (_val), (_mask))

/* AN Device (Dev Addr 7) */
#define READ_PHY82328_MMF_AN_REG(_unit, _phy_ctrl, _reg,_val) \
            PHY82328_REG_READ((_unit), (_phy_ctrl), \
              SOC_PHY_CLAUSE45_ADDR(PHY82328_C45_DEV_AN, (_reg)), (_val))
#define WRITE_PHY82328_MMF_AN_REG(_unit, _phy_ctrl, _reg,_val) \
            PHY82328_REG_WRITE((_unit), (_phy_ctrl), \
              SOC_PHY_CLAUSE45_ADDR(PHY82328_C45_DEV_AN, (_reg)), (_val))
#define MODIFY_PHY82328_MMF_AN_REG(_unit, _phy_ctrl, _reg, _val, _mask) \
        PHY82328_REG_MODIFY((_unit), (_phy_ctrl), \
        SOC_PHY_CLAUSE45_ADDR(PHY82328_C45_DEV_AN, (_reg)), (_val), (_mask))


/****************************************************************************
 * Core Enums.
 ***************************************************************************/
/****************************************************************************
 * merlin_gallardo_mgt_top_blk_MGT_TOP_I2C
 ***************************************************************************/
#define MGT_TOP_I2C_CONTROL_REGISTER   0x00008000 /* I2C Control Register */
#define MGT_TOP_I2C_CHECK_SUM_REGISTER 0x00008001 /* I2C Check Sum Register */
#define MGT_TOP_I2C_TRANSFER_SIZE_REGISTER 0x00008002 /* I2C Transfer Size Register */
#define MGT_TOP_I2C_EXTERNAL_NVM_ADDRESS_REGISTER 0x00008003 /* I2C External NVM Address Register */
#define MGT_TOP_I2C_INTERNAL_ADDRESS_REGISTER 0x00008004 /* I2C Internal Address Register */
#define MGT_TOP_I2C_SLAVE_ID_ADDRESS_REGISTER 0x00008005 /* I2C Slave ID Address Register */


/****************************************************************************
 * merlin_gallardo_mgt_top_blk_MGT_TOP_PMD_USR
 ***************************************************************************/
#define MGT_TOP_PWR_RAMP               0x0000c800 /* PHY Identifier */
#define MGT_TOP_CHIP_REV_REGISTER      0x0000c801 /* Chip REV Register */
#define MGT_TOP_CHIP_ID0_REGISTER      0x0000c802 /* Chip ID 0 Register */
#define MGT_TOP_CHIP_ID1_REGISTER      0x0000c803 /* Chip ID 1 Register */
#define MGT_TOP_PMD_STATUS_REGISTER    0x0000c804 /* PMD Status Register */
#define MGT_TOP_GPIO_CONTROL_REGISTER  0x0000c808 /* GPIO Control Register */
#define MGT_TOP_GP_IO_CONTROL_REGISTER 0x0000c80e /* General Purpose IO Control Register */
#define MGT_TOP_SPEED_LINK_DETECT_STATUS 0x0000c81f /* Speed Link Detect Status */
#define MGT_TOP_CH_RESET_CONTROL       0x0000c822 /* Channel SW Reset Control */
#define MGT_TOP_CL73_PARALLEL_PORT_ADDRESS_PORT 0x0000c828 /* Cl-73 Parallel Port Address Port */
#define MGT_TOP_XCL73_PARALLEL_PORT_ADDRESS_PORT 0x0000c82c /* XCl-73 Parallel Port Address Port */
#define MGT_TOP_PAD_CTRL_REGISTER      0x0000c82f /* I2C RxLos And MOD-ABS PAD Control */
#define MGT_TOP_INTERRUPT_M8051_REGISTER 0x0000c830 /* Interrupt Register */
#define MGT_TOP_INTERRUPT_M8051_ENABLE_REGISTER 0x0000c831 /* Interrupt Enable Register */
#define MGT_TOP_INTERRUPT_M8051_STATUS_REGISTER 0x0000c832 /* Interrupt Status Register */
#define MGT_TOP_INTERRUPT_M8051_POLARITY_REGISTER 0x0000c833 /* Interrupt Polarity Register */
#define MGT_TOP_GP_REGISTER_0          0x0000c840 /* General Purpose Register-0 */
#define MGT_TOP_GP_REGISTER_1          0x0000c841 /* General Purpose Register-1 */
#define MGT_TOP_GP_REGISTER_2          0x0000c842 /* General Purpose Register-2 */
#define MGT_TOP_GP_REGISTER_3          0x0000c843 /* General Purpose Register-3 */
#define MGT_TOP_GP_STATUS_REGISTER_0   0x0000c844 /* GP Misc. Status Register-0 */
#define MGT_TOP_GP_STATUS_REGISTER_1   0x0000c845 /* GP Misc. Status Register-1 */
#define MGT_TOP_SPA_CONTROL_STATUS_REGISTER 0x0000c848 /* SPI Port Control/Status Register */
#define MGT_TOP_OTP_MISC_SIG1_REGISTER 0x0000c858 /* OTP MISC Signal1  Register */
#define MGT_TOP_OTP_MISC_SIG2_REGISTER 0x0000c859 /* OTP MISC Signal2  Register */
#define MGT_TOP_OTP_MISC_SIG3_REGISTER 0x0000c85a /* OTP MISC Signal3  Register */
#define MGT_TOP_OTP_MISC_SIG4_REGISTER 0x0000c85b /* OTP MISC Signal4  Register */
#define MGT_TOP_OTP_MISC_SIG5_REGISTER 0x0000c85c /* OTP MISC Signal5  Register */
#define MGT_TOP_OTP_MISC_SIG6_REGISTER 0x0000c85d /* OTP MISC Signal6  Register */
#define MGT_TOP_GP_REG_C870_REGISTER   0x0000c870 /* GP Reg @C870 Register */
#define MGT_TOP_M8051_WATCHDOG_CONTROL_REGISTER 0x0000c872 /* m8051 Watchdog Control Register */
#define MGT_TOP_M8051_WATCHDOG_STATUS_REGISTER 0x0000c873 /* m8051 Watchdog Status Register */
#define MGT_TOP_CHIP_INTR_STAT         0x0000c874 /* Chip interrupt status register */
#define MGT_TOP_CHIP_INTR_EN           0x0000c876 /* Interrupt Enable register */
#define MGT_TOP_CHIP_INTR_VALUE        0x0000c878 /* Chip interrupt value register */
#define MGT_TOP_CHIP_INTR_CTRL         0x0000c87a /* Chip interrupt control register */
#define MGT_TOP_CH_INTR_CTRL           0x0000c87c /* Chip global interrupt control register */
#define MGT_TOP_OTP_OVR_REV_ID_REGISTER 0x0000c88b /* OTP_OVR_REV_ID_REG */
#define MGT_TOP_OTP_OVR_CHP_ID0_REGISTER 0x0000c88c /* OTP_OVR_REV_ID0_REG */
#define MGT_TOP_OTP_OVR_CHP_ID1_REGISTER 0x0000c88d /* OTP_OVR_REV_ID1_REG */
#define MGT_TOP_OTP_RDY_CNT_STAT_REG   0x0000c88e /* OTP_RDY_CNT_STAT_REG */
#define MGT_TOP_OTP_OVR_DEVICE_ID_0    0x0000c890 /* OTP Override Device ID 0. */
#define MGT_TOP_OTP_OVR_DEVICE_ID_1    0x0000c891 /* OTP Override Device ID 1. */
#define MGT_TOP_OTP_OVR_DEVICE_ID_0_1_CNTL 0x0000c892 /* OTP Override Control for Device id0 and id1. */
#define MGT_TOP_DIE_ID                 0x0000c899 /* Die ID register */
#define MGT_TOP_OPTICAL_CONFIGURATION  0x0000c8e4 /* Optical Configuration */
#define MGT_TOP_BROADCAST_CTRL         0x0000c8fe /* Select Broadcast Mechanism for MDIO ADDR/Write Operations. */
#define MGT_TOP_XPMD_REGS_SEL          0x0000ffff /* Select System Side Registers For MDIO OP. */


/****************************************************************************
 * merlin_gallardo_mgt_top_blk_MGT_TOP_CMN_CTLR
 ***************************************************************************/
#define MGT_TOP_REGUALTOR_CTRL         0x0000c850 /* Regulator_control */
#define MGT_TOP_GEN_CTRL               0x0000ca10 /* GEN_CTRL */
#define MGT_TOP_RAM_LWPR_CTRL          0x0000ca11 /* RAM_LWPR_CTRL */
#define MGT_TOP_MSG_IN                 0x0000ca12 /* MSG_IN */
#define MGT_TOP_MSG_OUT                0x0000ca13 /* MSG_OUT */
#define MGT_TOP_ERRORED_SRAM_ADDRESS   0x0000ca14 /* SRAM_ADDRESS_WITH_ERROR */
#define MGT_TOP_ERRORED_SRAM_DATA      0x0000ca15 /* SRAM_ERROR_STATUS */
#define MGT_TOP_GP_REG_0               0x0000ca18 /* GP_REG_0 */
#define MGT_TOP_GP_REG_1               0x0000ca19 /* GP_REG_1 */
#define MGT_TOP_GP_REG_2               0x0000ca1a /* GP_REG_2 */
#define MGT_TOP_GP_REG_3               0x0000ca1b /* GP_REG_3 */
#define MGT_TOP_GP_REG_4               0x0000ca1c /* GP_REG_4 */
#define MGT_TOP_FW_PARAM               0x0000ca1d /* FW_PARAM */
#define MGT_TOP_FW_CMD                 0x0000ca1e /* FW_CMD */
#define MGT_TOP_HEARTBEAT_COUNT        0x0000ca1f /* HEARTBEAT_COUNT */
#define MGT_TOP_LOGAD_CTRL             0x0000ca7b /* LOG_CTRL */
#define MGT_TOP_SW_RESET_CTRL          0x0000ca82 /* SW_RESET_CTRL */
#define MGT_TOP_MISC_CTRL              0x0000ca85 /* MISC_CTRL */
#define MGT_TOP_SINGLE_PMD_CTRL        0x0000ca86 /* SINGLE_PMD_CTRL */
#define MGT_TOP_GP_REG_5               0x0000ca88 /* GP_REG_5 */
#define MGT_TOP_GP_REG_6               0x0000ca89 /* GP_REG_6 */
#define MGT_TOP_GP_REG_7               0x0000ca8a /* GP_REG_7 */
#define MGT_TOP_GP_REG_8               0x0000ca8b /* GP_REG_8 */
#define MGT_TOP_GP_REG_9               0x0000ca8c /* GP_REG_9 */
#define MGT_TOP_MEMORY_TM_CTRL_0       0x0000cbe0 /* MEMORY_TM_CTRL_0 */
#define MGT_TOP_MEMORY_TM_CTRL_1       0x0000cbe1 /* MEMORY_TM_CTRL_1 */
#define MGT_TOP_MEMORY_STBY_CTRL_0     0x0000cbe2 /* MEMORY_STBY_CTRL_0 */
#define MGT_TOP_VTMON_CTRL_0           0x0000cbf0 /* VTMON_CTRL_0 */
#define MGT_TOP_VTMON_CTRL_1           0x0000cbf1 /* VTMON_CTRL_1 */
#define MGT_TOP_VTMON_STATUS           0x0000cbf2 /* VTMON_STATUS */
#define MGT_TOP_VTMON_CTRL_2           0x0000cbf3 /* VTMON_CTRL_2 */
#define MGT_TOP_RESCAL_CTRL_DFS        0x0000cbf4 /* RESCAL_ctrl_dfs_type */
#define MGT_TOP_RESCAL_STATUS          0x0000cbf5 /* RESCAL_status_type */
#define MGT_TOP_RESCAL_CTRL            0x0000cbf6 /* RESCAL_ctrl_type */
#define MGT_TOP_RING_OSC_CONTROL_REGISTER 0x0000cbf7 /* Ring Oscillator Control Register */
#define MGT_TOP_IO_RING_CONTROL        0x0000cbf8 /* Chip IO Ring Control Register */
#define MGT_TOP_CHARGE_PUMP_CONTROL_1  0x0000cbf9 /* Charge Pump Control 1 Register */
#define MGT_TOP_CHARGE_PUMP_CONTROL_2  0x0000cbfa /* Charge Pump Control 2 Register */
#define MGT_TOP_CHARGE_PUMP_CONTROL_3  0x0000cbfb /* Charge Pump Control 3 Register */


/****************************************************************************
 * merlin_gallardo_mgt_top_blk_MGT_TOP_LK_MTR_TMR
 ***************************************************************************/
#define MGT_TOP_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0 0x0000ca90 /* Link Monitor Timer Control Status Register 0 */
#define MGT_TOP_LINK_MON_TIMER_COUNT_REGISTER_0 0x0000ca91 /* Link Monitor Timer Count Register 0 */
#define MGT_TOP_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1 0x0000ca92 /* Link Monitor Timer Control Status Register 1 */
#define MGT_TOP_LINK_MON_TIMER_COUNT_REGISTER_1 0x0000ca93 /* Link Monitor Timer Count Register 1 */
#define MGT_TOP_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2 0x0000ca94 /* Link Monitor Timer Control Status Register 2 */
#define MGT_TOP_LINK_MON_TIMER_COUNT_REGISTER_2 0x0000ca95 /* Link Monitor Timer Count Register 2 */
#define MGT_TOP_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3 0x0000ca96 /* Link Monitor Timer Control Status Register 3 */
#define MGT_TOP_LINK_MON_TIMER_COUNT_REGISTER_3 0x0000ca97 /* Link Monitor Timer Count Register 3 */
#define MGT_TOP_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4 0x0000ca98 /* Link Monitor Timer Control Status Register 4 */
#define MGT_TOP_LINK_MON_TIMER_COUNT_REGISTER_4 0x0000ca99 /* Link Monitor Timer Count Register 4 */
#define MGT_TOP_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5 0x0000ca9a /* Link Monitor Timer Control Status Register 5 */
#define MGT_TOP_LINK_MON_TIMER_COUNT_REGISTER_5 0x0000ca9b /* Link Monitor Timer Count Register 5 */
#define MGT_TOP_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6 0x0000ca9c /* Link Monitor Timer Control Status Register 6 */
#define MGT_TOP_LINK_MON_TIMER_COUNT_REGISTER_6 0x0000ca9d /* Link Monitor Timer Count Register 6 */
#define MGT_TOP_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7 0x0000ca9e /* Link Monitor Timer Control Status Register 7 */
#define MGT_TOP_LINK_MON_TIMER_COUNT_REGISTER_7 0x0000ca9f /* Link Monitor Timer Count Register 7 */


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_IEEE0
 ***************************************************************************/
#define IEEE0_BLK_PMA_PMD_PMD_CONTROL_REGISTER 0x00000000 /* ieee Control1 register */
#define IEEE0_BLK_PMA_PMD_STATUS_REGISTER 0x00000001 /* ieee Status 1 register */
#define IEEE0_BLK_PMA_PMD_PMD_IDENTIFIER_REGISTER_0 0x00000002 /* PMD Identifier Register 0 */
#define IEEE0_BLK_PMA_PMD_PMD_IDENTIFIER_REGISTER_1 0x00000003 /* PMD Identifier Register 1 */
#define IEEE0_BLK_PMA_PMD_PMD_SPEED_ABILITY 0x00000004 /* ieee PMD Speed Ability register */
#define IEEE0_BLK_PMA_PMD_DEVICES_IN_PACKAGE_1 0x00000005 /* ieee Device in Package 1 register */
#define IEEE0_BLK_PMA_PMD_DEVICES_IN_PACKAGE_2 0x00000006 /* ieee Device in Package 1 register */
#define IEEE0_BLK_PMA_PMD_PMD_CONTROL_2_REGISTER 0x00000007 /* ieee Control2 register */
#define IEEE0_BLK_PMA_PMD_STATUS_REGISTER_2 0x00000008 /* ieee Status 2 register */
#define IEEE0_BLK_PMA_PMD_PMD_TRANSMIT_DISABLE_REGISTER 0x00000009 /* ieee Transmit Disable register */
#define IEEE0_BLK_PMA_PMD_PMD_RECEIVE_SIGNAL_DETECT_REGISTER 0x0000000a /* ieee receive Signal Detect register */
#define IEEE0_BLK_PMA_PMD_PMD_EXTENDED_ABILITY_REGISTER 0x0000000b /* ieee Extended Ability register */
#define IEEE0_BLK_PMA_PMD_FORTYG_PMD_EXTENDED_ABILITY_REGISTER 0x0000000d /* Fortyg PMD extended ability Register */
#define IEEE0_BLK_PMA_PMD_PMD_OUI_ID0_REGISTER 0x0000000e /* PMD OUI ID0 Register */
#define IEEE0_BLK_PMA_PMD_PMD_OUI_ID1_REG 0x0000000f /* PMD OUI ID1 Reg */


/****************************************************************************
 * merlin_gallardo_qsfi_cl73_QSFI_AN_IEEE1
 ***************************************************************************/
#define IEEE1_AN_BLK_AN_ADVERTISEMENT_1_REGISTER 0x00000010 /* AN Advertisement 1 Register */
#define IEEE1_AN_BLK_AN_ADVERTISEMENT_2_REGISTER 0x00000011 /* AN Advertisement 2 Register */
#define IEEE1_AN_BLK_AN_ADVERTISEMENT_3_REGISTER 0x00000012 /* AN Advertisement 3 Register */
#define IEEE1_AN_BLK_AN_LP_BASE_PAGE_ABILITY_1_REG 0x00000013 /* AN LP Base Page Ability 1 Register */
#define IEEE1_AN_BLK_AN_LP_BASE_PAGE_ABILITY_2_REG 0x00000014 /* AN LP Base Page Ability 2 Register */
#define IEEE1_AN_BLK_AN_LP_BASE_PAGE_ABILITY_3_REG 0x00000015 /* AN LP Base Page Ability 3 Register */
#define IEEE1_AN_BLK_AN_XNP_TRANSMIT_1_REGISTER 0x00000016 /* AN XNP transmit 1 Register */
#define IEEE1_AN_BLK_AN_XNP_TRANSMIT_2_REGISTER 0x00000017 /* AN XNP transmit 2 Register */
#define IEEE1_AN_BLK_AN_XNP_TRANSMIT_3_REGISTER 0x00000018 /* AN XNP transmit 3 Register */
#define IEEE1_AN_BLK_AN_LP_XNP_TRANSMIT_1_REGISTER 0x00000019 /* AN LP XNP transmit 1 Registe */
#define IEEE1_AN_BLK_AN_LP_XNP_TRANSMIT_2_REGISTER 0x0000001a /* AN LP XNP transmit 2 Register */
#define IEEE1_AN_BLK_AN_LP_XNP_TRANSMIT_3_REGISTER 0x0000001b /* AN LP XNP transmit 3 Register */


/****************************************************************************
 * merlin_gallardo_qsfi_cl73_QSFI_AN_IEEE3
 ***************************************************************************/
#define IEEE3_AN_BLK_BACKPLANE_ETHERNET_STATUS_REGISTER 0x00000030 /* BPEther Status register */
#define IEEE3_AN_BLK_EEE_ADV           0x0000003c /* anEEE ADV control register */
#define IEEE3_AN_BLK_EEE_LP_ADV        0x0000003d /* anEEE LP ADV Status register */


/****************************************************************************
 * merlin_gallardo_cl72b_ieee_blk_CL72_IEEE_TX
 ***************************************************************************/
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150 0x00000096 /* BASE-R PMD control register 150 */
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151 0x00000097 /* BASE-R PMD status register 151 */
#define CL72_IEEE_TX_BASE_R_LP_COEFF_UPDATE_REGISTER_152 0x00000098 /* BASE-R LP coeff update register 152 */
#define CL72_IEEE_TX_BASE_R_LD_COEFF_UPDATE_REGISTER_154 0x0000009a /* BASE-R LD coeff update register 154 */
#define CL72_IEEE_TX_BASE_R_LD_STATUS_REPORT_REGISTER_155 0x0000009b /* BASE-R LD status report register 155 */


/****************************************************************************
 * merlin_gallardo_cl72b_ieee_blk_CL72_IEEE_RX
 ***************************************************************************/
#define CL72_IEEE_RX_BASE_R_LD_STATUS_REPORT_REGISTER_153 0x00000099 /* BASE-R LP status report register 153 */


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_IEEE10
 ***************************************************************************/
#define IEEE10_BLK_PMA_PMD_TENGBASE_KX_CONTROL_REGISTER 0x000000a0 /* ieee 1000KX Control 1 register */
#define IEEE10_BLK_PMA_PMD_TENGBASE_KX_STATUS_REGISTER 0x000000a1 /* ieee 1000KX Status 1 register */


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_XGXS_BLK0
 ***************************************************************************/
#define XGXS_BLK0_XGXSCONTROL          0x0000c000 /* XGXS Control register */
#define XGXS_BLK0_XGXSSTATUS           0x0000c001 /* XGXS Status register */
#define XGXS_BLK0_MISCCONTROL1         0x0000c00e /* Miscellaneous Control register */


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_XGXS_BLK1
 ***************************************************************************/
#define XGXS_BLK1_LANECTRL2            0x0000c017 /* Lane Control 2 register */
#define XGXS_BLK1_LANECTRL3            0x0000c018 /* Lane Control 3 register */
#define XGXS_BLK1_LANETEST             0x0000c01a /* Lane TEST register */


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_TX
 ***************************************************************************/
#define TX_ANATXASTATUS                0x0000c080 /* TX ANA Status register */
#define TX_ANATXACONTROL0              0x0000c081 /* TX ANA Control 0 register */
#define TX_ANATXACONTROL6              0x0000c08a /* TX Control 6 register */
#define TX_ANATXACONTROL7              0x0000c08b /* TX Control 7 register */


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_RX
 ***************************************************************************/
#define RX_ANARXSTATUS                 0x0000c0b0 /* Rx Status register */
#define RX_ANARXCONTROL                0x0000c0b1 /* Rx Control1 register */
#define RX_ANARXSIGDET                 0x0000c0b4 /* Rx Sigdet control register */
#define RX_ANARXCONTROL2               0x0000c0b6 /* Rx Control2 register */
#define RX_ANARXCONTROL3               0x0000c0ba /* Rx Control3 register */


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_XGXS_BLK2
 ***************************************************************************/
#define XGXS_BLK2_LANERESET            0x0000c10a /* Lane reset register */


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_XGXS_BLK8
 ***************************************************************************/
#define XGXS_BLK8_CL73CONTROL8         0x0000c161 /* CL73 Control 8 Register */
#define XGXS_BLK8_CL73CONTROL9         0x0000c162 /* CL73 Control 9 Register */
#define XGXS_BLK8_CL73CONTROL10        0x0000c163 /* CL73 Control 10 Register */


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_GP2
 ***************************************************************************/
#define GP2_GP2_0                      0x0000c1d0 /* PLL Status Register */
#define GP2_GP2_1                      0x0000c1d1 /* OSR Status Register */
#define GP2_GP2_2                      0x0000c1d2 /* speed lane 0 1 Register */
#define GP2_GP2_3                      0x0000c1d3 /* speed lane 2 3 Register */
#define GP2_GP2_4                      0x0000c1d4 /* Autoneg Status Register */
#define GP2_GP2_5                      0x0000c1d5 /* CL73_BAMStat1 Register */
#define GP2_GP2_6                      0x0000c1d6 /* CL73_BAMStat2  Register */
#define GP2_GP2_7                      0x0000c1d7 /* CL73_BAMStat3  Register */
#define GP2_GP2_8                      0x0000c1d8 /* an speed lane 0 1 Register */
#define GP2_GP2_9                      0x0000c1d9 /* an speed lane 2 3 Register */


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_FC_RX
 ***************************************************************************/
#define LN_FC_RX_LN_FC_RX_CONTROL_REG  0x0000c470 /* LN  Fiber Channel Rx controls */
#define LN_FC_RX_LN_FC_RX_STATUS_REG   0x0000c471 /* LN Fiber Channel Rx status */
#define LN_FC_RX_LN_FC_RX_INTERRUPTS_REG 0x0000c472 /* LN Fiber Channel Rx interrupts */
#define LN_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG 0x0000c473 /* LN Fiber Channel Rx interrupt enables */
#define LN_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG 0x0000c474 /* LN Fiber Channel Rx Auto-Speed Detection configuration */
#define LN_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS 0x0000c475 /* LN Fiber Channel Rx Auto-Speed Detection status */
#define LN_FC_RX_LN_FC_RX_R_T_TOV      0x0000c476 /* LN Fiber Channel Rx Word Synchronization Watchdog */
#define LN_FC_RX_LN_FC_RX_TPAT_MON_CONFIG 0x0000c477 /* LN Fiber Channel Rx Test Pattern Monitor configuration */
#define LN_FC_RX_LN_FC_RX_TPAT_MON_STATUS 0x0000c478 /* LN Fiber Channel Rx Test Pattern Monitor status */
#define LN_FC_RX_LN_FC_RX_RECEIVED_TPAT_CNT 0x0000c479 /* LN Fiber Channel Received Test Pattern counter */
#define LN_FC_RX_LN_FC_RX_TPAT_ERROR_CNT 0x0000c47a /* LN Fiber Channel Rx Test Pattern error counter */


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_BASER
 ***************************************************************************/
#define BASER_PCS_DETECT_CONTROL_0     0x0000c480 /* Rx_BaseR_PCS_Detect control_0 register */
#define BASER_PCS_DETECT_CONTROL_1     0x0000c481 /* Rx_BaseR_PCS_Detect control_1 register */
#define BASER_PCS_DETECT_CONTROL_2     0x0000c482 /* Rx_BaseR_PCS_Detect control_2 register */
#define BASER_PCS_DETECT_CONTROL_3     0x0000c483 /* Rx_BaseR_PCS_Detect control_3 register */
#define BASER_PCS_DETECT_CONTROL_4     0x0000c484 /* Rx_BaseR_PCS_Detect control_4 register */
#define BASER_PCS_DETECT_CONTROL_5     0x0000c485 /* Rx_BaseR_PCS_Detect control_5 register */
#define BASER_PCS_DETECT_STATUS_0      0x0000c486 /* Rx_BaseR_PCS_Detect status_0 register */
#define BASER_PCS_DETECT_STATUS_1      0x0000c487 /* Rx_BaseR_PCS_Detect status_1 register */
#define BASER_PCS_DETECT_STATUS_2      0x0000c488 /* Rx_BaseR_PCS_Detect status_2 register */


/****************************************************************************
 * merlin_gallardo_dsc_blk_DSC_A
 ***************************************************************************/
#define DSC_A_CDR_CONTROL_0            0x0000d001 /* CDR Control 0 */
#define DSC_A_CDR_CONTROL_1            0x0000d002 /* CDR Control 1 */
#define DSC_A_CDR_CONTROL_2            0x0000d003 /* CDR Control 2 */
#define DSC_A_RX_PI_CONTROL            0x0000d004 /* RX PI control */
#define DSC_A_CDR_STATUS_INTEG_REG     0x0000d005 /* CDR Status Integ Reg */
#define DSC_A_CDR_STATUS_PHASE_ERROR   0x0000d006 /* CDR Status phase err */
#define DSC_A_RX_PI_CNT_BIN_D          0x0000d007 /* Rx PI {P1, D} */
#define DSC_A_RX_PI_CNT_BIN_P          0x0000d008 /* Rx PI {M1, P1} */
#define DSC_A_RX_PI_CNT_BIN_M          0x0000d009 /* Rx PI {D, M1} */
#define DSC_A_RX_PI_DIFF_BIN           0x0000d00a /* Rx PI {D-P1, D-M1} */
#define DSC_A_TRNSUM_CNTL_5            0x0000d00b /* training sum control 5 */
#define DSC_A_DSC_UC_CTRL              0x0000d00d /* DSC uC Control */
#define DSC_A_DSC_SCRATCH              0x0000d00e /* DSC uC Control */


/****************************************************************************
 * merlin_gallardo_dsc_blk_DSC_B
 ***************************************************************************/
#define DSC_B_DSC_SM_CTRL_0            0x0000d010 /* DSC STATE MACHINE CONTROL 0 */
#define DSC_B_DSC_SM_CTRL_1            0x0000d011 /* DSC STATE MACHINE CONTROL 1 */
#define DSC_B_DSC_SM_CTRL_2            0x0000d012 /* DSC STATE MACHINE CONTROL 2 */
#define DSC_B_DSC_SM_CTRL_3            0x0000d013 /* DSC STATE MACHINE CONTROL 3 */
#define DSC_B_DSC_SM_CTRL_4            0x0000d014 /* DSC STATE MACHINE CONTROL 4 */
#define DSC_B_DSC_SM_CTRL_5            0x0000d015 /* DSC STATE MACHINE CONTROL 5 */
#define DSC_B_DSC_SM_CTRL_6            0x0000d016 /* DSC STATE MACHINE CONTROL 6 */
#define DSC_B_DSC_SM_CTRL_7            0x0000d017 /* DSC STATE MACHINE CONTROL 7 */
#define DSC_B_DSC_SM_CTRL_8            0x0000d018 /* DSC STATE MACHINE CONTROL 8 */
#define DSC_B_DSC_SM_CTRL_9            0x0000d019 /* DSC STATE MACHINE CONTROL 9 */
#define DSC_B_DSC_SM_STATUS_DSC_LOCK   0x0000d01a /* DSC STATE MACHINE DSC_LOCK STATUS */
#define DSC_B_DSC_SM_STATUS_DSC_STATE_ONE_HOT 0x0000d01b /* DSC STATE MACHINE STATUS ONE HOT */
#define DSC_B_DSC_SM_STATUS_DSC_STATE_EEE_ONE_HOT 0x0000d01c /* DSC STATE MACHINE STATUS EEE ONE HOT */
#define DSC_B_DSC_SM_STATUS_RESTART    0x0000d01d /* DSC STATE MACHINE STATUS RESTART */
#define DSC_B_DSC_SM_STATUS_DSC_STATE  0x0000d01e /* DSC STATE MACHINE STATUS */


/****************************************************************************
 * merlin_gallardo_dsc_blk_DSC_C
 ***************************************************************************/
#define DSC_C_DFE_COMMON_CTL           0x0000d020 /* DFE Common Control */
#define DSC_C_DFE_1_CTL                0x0000d021 /* DFE 1 Control */
#define DSC_C_DFE_1_PAT_CTL            0x0000d022 /* DFE 1 Pat Control */
#define DSC_C_DFE_2_CTL                0x0000d023 /* DFE 2 Control */
#define DSC_C_DFE_2_PAT_CTL            0x0000d024 /* DFE 2 Pat Control */
#define DSC_C_DFE_3_CTL                0x0000d025 /* DFE 3 Control */
#define DSC_C_DFE_3_PAT_CTL            0x0000d026 /* DFE 3 Pat Control */
#define DSC_C_DFE_4_CTL                0x0000d027 /* DFE 4 Control */
#define DSC_C_DFE_4_PAT_CTL            0x0000d028 /* DFE 4 Pat Control */
#define DSC_C_DFE_5_CTL                0x0000d029 /* DFE 5 Control */
#define DSC_C_DFE_5_PAT_CTL            0x0000d02a /* DFE 5 Pat Control */
#define DSC_C_DFE_VGA_OVERRIDE         0x0000d02b /* DFE Overrude */
#define DSC_C_VGA_CTL                  0x0000d02c /* VGA Control */
#define DSC_C_VGA_PAT_EYEDIAG_CTL      0x0000d02d /* VGA Pat Control */


/****************************************************************************
 * merlin_gallardo_dsc_blk_DSC_D
 ***************************************************************************/
#define DSC_D_TRNSUM_CTL_1             0x0000d030 /* Trnsum Ctl 1 */
#define DSC_D_TRNSUM_CTL_2             0x0000d031 /* Trnsum Ctl 2 */
#define DSC_D_TRNSUM_CTL_3             0x0000d032 /* Trnsum Ctl 3 */
#define DSC_D_TRNSUM_CTL_4             0x0000d033 /* Trnsum Ctl 4 */
#define DSC_D_TRNSUM_STS_1             0x0000d034 /* Trnsum Status 1 */
#define DSC_D_TRNSUM_STS_2             0x0000d035 /* Trnsum Status 2 */
#define DSC_D_TRNSUM_STS_3             0x0000d036 /* Trnsum Status 3 */
#define DSC_D_TRNSUM_STS_4             0x0000d037 /* Trnsum Status 4 */
#define DSC_D_TRNSUM_STS_5             0x0000d038 /* Trnsum Status 5 */
#define DSC_D_TRNSUM_STS_6             0x0000d039 /* Trnsum Status 6 */
#define DSC_D_VGA_P1EYEDIAG_STS        0x0000d03a /* VGA status */
#define DSC_D_DFE_1_STS                0x0000d03b /* DFE 1 status */
#define DSC_D_DFE_2_STS                0x0000d03c /* DFE 2 status */
#define DSC_D_DFE_3_4_5_STS            0x0000d03d /* DFE 3,4,5 status */
#define DSC_D_VGA_TAP_BIN              0x0000d03e /* VGA binary tap values */


/****************************************************************************
 * merlin_gallardo_dsc_blk_DSC_E
 ***************************************************************************/
#define DSC_E_DSC_E_CTRL               0x0000d040 /* dsc_e_ctrl */
#define DSC_E_DSC_E_PF_CTRL            0x0000d041 /* dsc_e_pf_ctrl */
#define DSC_E_DSC_E_PF2_LOWP_CTRL      0x0000d042 /* dsc_e_pf2_lowp_ctrl */
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_ODD 0x0000d043 /* dsc_e_offset_adj_data_odd */
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_EVEN 0x0000d044 /* dsc_e_offset_adj_data_even */
#define DSC_E_DSC_E_OFFSET_ADJ_P1_ODD  0x0000d045 /* dsc_e_offset_adj_p1_odd */
#define DSC_E_DSC_E_OFFSET_ADJ_P1_EVEN 0x0000d046 /* dsc_e_offset_adj_p1_even */
#define DSC_E_DSC_E_OFFSET_ADJ_M1_ODD  0x0000d047 /* dsc_e_offset_adj_m1_odd */
#define DSC_E_DSC_E_OFFSET_ADJ_M1_EVEN 0x0000d048 /* dsc_e_offset_adj_m1_even */
#define DSC_E_DSC_E_DC_OFFSET          0x0000d049 /* dsc_e_dc_offset */


/****************************************************************************
 * merlin_gallardo_cl72_user_blk_CL72_USER_RX
 ***************************************************************************/
#define CL72_USER_RX_RCVD_STATUS_REGISTER 0x0000d050 /* CL72 Status Report Register */
#define CL72_USER_RX_MISC1_CONTROL     0x0000d051 /* CL72 Miscellaneous_1 Control Register */
#define CL72_USER_RX_DEBUG_2_REGISTER  0x0000d052 /* CL72 Debug 2 Register */
#define CL72_USER_RX_CL72_LP_CONTROL_PAGE 0x0000d053 /*  */
#define CL72_USER_RX_CL72_STATUS1_REGISTER 0x0000d054 /* CL72 Status 1 Register */


/****************************************************************************
 * merlin_gallardo_cl72_user_blk_CL72_USER_TX
 ***************************************************************************/
#define CL72_USER_TX_RPTR_XMT_UPDATE_REGISTER 0x0000d060 /* CL72 TX Coefficient Update Register */
#define CL72_USER_TX_RPTR_MISC2_CONTROL 0x0000d061 /* CL72 Miscellaneous_2 Control Register */
#define CL72_USER_TX_RPTR_DEBUG_3_REGISTER 0x0000d062 /* CL72 Debug 3 Register */
#define CL72_USER_TX_RPTR_PCS_INTERFACE_CONTROL_REGISTER 0x0000d063 /* CL72 PCS interface control Register */
#define CL72_USER_TX_RPTR_CL72_LD_STATUS_PAGE 0x0000d064 /* CL72 local device status Register */
#define CL72_USER_TX_RPTR_CL72_READY_FOR_CMD_REGISTER 0x0000d065 /* CL72 Ready for command registers */
#define CL72_USER_TX_RPTR_KR_DEFAULT_CONTROL1 0x0000d066 /* CL72 KR Default Control 1 Register */
#define CL72_USER_TX_RPTR_KR_DEFAULT_CONTROL2 0x0000d067 /* CL72 KR Default Control 2 Register */
#define CL72_USER_TX_RPTR_MISC_COEFF_CONTROL 0x0000d068 /* CL72 Misc Coefficient Control Register */
#define CL72_USER_TX_RPTR_CL72_LD_XMT_STATUS_PAGE_OVERRIDE 0x0000d069 /* CL72 Local Device Status Page Override Register */
#define CL72_USER_TX_RPTR_CL72_TX_DEBUG_STATUS 0x0000d06a /* CL72 debug status register */


/****************************************************************************
 * merlin_gallardo_tx_pi_blk_TX_PI
 ***************************************************************************/
#define TX_PI_TX_PI_CONTROL_0          0x0000d070 /* TX Phase Interpolator Control 0 */
#define TX_PI_TX_PI_CONTROL_1          0x0000d071 /* TX Phase Interpolator Control 1 */
#define TX_PI_TX_PI_CONTROL_2          0x0000d072 /* TX Phase Interpolator Control 2 */
#define TX_PI_TX_PI_CONTROL_3          0x0000d073 /* TX Phase Interpolator Control 3 */
#define TX_PI_TX_PI_CONTROL_4          0x0000d074 /* TX Phase Interpolator Control 4 */
#define TX_PI_TX_PI_CONTROL_5          0x0000d075 /* TX Phase Interpolator Control 5                    (ONLY Applicable to Merlin) */
#define TX_PI_TX_PI_CONTROL_6          0x0000d076 /* TX Phase Interpolator Control 6                    (ONLY Applicable to Eagle) */
#define TX_PI_TX_PI_STATUS_0           0x0000d078 /* TX Phase Interpolator Status 0 */
#define TX_PI_TX_PI_STATUS_1           0x0000d079 /* TX Phase Interpolator Status 1 */
#define TX_PI_TX_PI_STATUS_2           0x0000d07a /* TX Phase Interpolator Status 2 */
#define TX_PI_TX_PI_STATUS_3           0x0000d07b /* TX Phase Interpolator Status 3 */
#define TX_PI_TX_PI_STATUS_4           0x0000d07c /* TX Phase Interpolator Status 4                    (ONLY Applicable to Merlin) */
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS 0x0000d07d /* TX FIFO Overflow Status                           (ONLY Applicable to Merlin) */


/****************************************************************************
 * merlin_gallardo_ckrst_ctrl_blk_CKRST_CTRL
 ***************************************************************************/
#define CKRST_CTRL_OSR_MODE_CONTROL    0x0000d080 /* OSR_MODE_CONTROL */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL 0x0000d081 /* LANE_CLK_RESET_N_POWERDOWN_CONTROL */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL 0x0000d082 /* LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL */
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL 0x0000d083 /* LANE_RESET_N_PWRDN_PIN_KILL_CONTROL */
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL 0x0000d084 /* LANE_DEBUG_RESET_CONTROL */
#define CKRST_CTRL_UC_ACK_LANE_CONTROL 0x0000d085 /* UC_ACK_LANE_CONTROL */
#define CKRST_CTRL_LANE_REG_RESET_OCCURRED_CONTROL 0x0000d086 /* LANE_REG_RESET_OCCURRED_CONTROL */
#define CKRST_CTRL_PMD_LANE_MODE_STATUS 0x0000d088 /* PMD_LANE_MODE_STATUS */
#define CKRST_CTRL_LANE_DP_RESET_STATE_STATUS 0x0000d089 /* LANE_DP_RESET_STATE_STATUS */
#define CKRST_CTRL_LN_MASK             0x0000d08a /* LN_MASK */
#define CKRST_CTRL_OSR_MODE_STATUS     0x0000d08b /* OSR_MODE_STATUS */


/****************************************************************************
 * merlin_gallardo_ams_blk_AMS_RX
 ***************************************************************************/
#define AMS_RX_RX_CTRL_0               0x0000d090 /* RX_CTRL_0 */
#define AMS_RX_RX_CTRL_1               0x0000d091 /* RX_CTRL_1 */
#define AMS_RX_RX_CTRL_2               0x0000d092 /* RX_CTRL_2 */
#define AMS_RX_RX_CTRL_3               0x0000d093 /* RX_CTRL_3 */
#define AMS_RX_RX_CTRL_4               0x0000d094 /* RX_CTRL_4 */
#define AMS_RX_RX_CTRL_5               0x0000d095 /* RX_CTRL_5 */
#define AMS_RX_RX_CTRL_6               0x0000d096 /* RX_CTRL_6 */
#define AMS_RX_RX_INT                  0x0000d098 /* RX_CTRL_INT */
#define AMS_RX_RX_STS                  0x0000d099 /* RX_STS */


/****************************************************************************
 * merlin_gallardo_ams_blk_AMS_TX
 ***************************************************************************/
#define AMS_TX_TX_CTRL_0               0x0000d0a0 /* TX_CTRL_0 */
#define AMS_TX_TX_CTRL_1               0x0000d0a1 /* TX_CTRL_1 */
#define AMS_TX_TX_CTRL_2               0x0000d0a2 /* TX_CTRL_2 */
#define AMS_TX_TX_CTRL_3               0x0000d0a3 /* TX_CTRL_3 */
#define AMS_TX_TX_CTRL_4               0x0000d0a4 /* TX_CTRL_4 */
#define AMS_TX_TX_CTRL_5               0x0000d0a5 /* TX_CTRL_5 */
#define AMS_TX_TX_INT                  0x0000d0a8 /* TX_CTRL_INT */
#define AMS_TX_TX_STS                  0x0000d0a9 /* TX_STS */


/****************************************************************************
 * merlin_gallardo_ams_blk_AMSCOM
 ***************************************************************************/
#define AMSCOM_PLL_CTRL_0              0x0000d0b0 /* PLL_CTRL_0 */
#define AMSCOM_PLL_CTRL_1              0x0000d0b1 /* PLL_CTRL_1 */
#define AMSCOM_PLL_CTRL_2              0x0000d0b2 /* PLL_CTRL_2 */
#define AMSCOM_PLL_CTRL_3              0x0000d0b3 /* PLL_CTRL_3 */
#define AMSCOM_PLL_CTRL_4              0x0000d0b4 /* PLL_CTRL_4 */
#define AMSCOM_PLL_CTRL_5              0x0000d0b5 /* PLL_CTRL_5 */
#define AMSCOM_PLL_CTRL_6              0x0000d0b6 /* PLL_CTRL_6 */
#define AMSCOM_PLL_CTRL_7              0x0000d0b7 /* PLL_CTRL_7 */
#define AMSCOM_PLL_CTRL_8              0x0000d0b8 /* PLL_CTRL_8 */
#define AMSCOM_PLL_CTRL_9              0x0000d0b9 /* PLL_CTRL_9 */
#define AMSCOM_PLL_CTRL_10             0x0000d0ba /* PLL_CTRL_10 */


/****************************************************************************
 * merlin_gallardo_sigdet_blk_SIGDET
 ***************************************************************************/
#define SIGDET_SIGDET_CTRL_0           0x0000d0c0 /* SIGDET_CTRL_0 */
#define SIGDET_SIGDET_CTRL_1           0x0000d0c1 /* SIGDET_CTRL_1 */
#define SIGDET_SIGDET_CTRL_2           0x0000d0c2 /* SIGDET_CTRL_2 */
#define SIGDET_SIGDET_STATUS_0         0x0000d0c8 /* SIGDET_STATUS_0 */


/****************************************************************************
 * merlin_gallardo_tlb_blk_TLB_RX
 ***************************************************************************/
#define TLB_RX_PRBS_CHK_CONFIG         0x0000d0d1 /* PRBS Generator Control */
#define TLB_RX_DIG_LPBK_CONFIG         0x0000d0d2 /* Remote Loopback Control */
#define TLB_RX_TLB_RX_MISC_CONFIG      0x0000d0d3 /* TLB RX Misc. Control */
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL 0x0000d0d4 /* TLB RX PRBS Checker Enable Timer Control */
#define TLB_RX_DIG_LPBK_PD_STATUS      0x0000d0d8 /* Remote Loopback Status */
#define TLB_RX_PRBS_CHK_LOCK_STATUS    0x0000d0d9 /* PRBS Checker LOCK Status */
#define TLB_RX_PRBS_CHK_ERR_CNT_MSB_STATUS 0x0000d0da /* PRBS Checker Error Counter MSB Status */
#define TLB_RX_PRBS_CHK_ERR_CNT_LSB_STATUS 0x0000d0db /* PRBS Checker Error Counter LSB Status */
#define TLB_RX_PMD_RX_LOCK_STATUS      0x0000d0dc /* PMD RX LOCK Status */


/****************************************************************************
 * merlin_gallardo_tlb_blk_TLB_TX
 ***************************************************************************/
#define TLB_TX_PATT_GEN_CONFIG         0x0000d0e0 /* Pattern Generator Control */
#define TLB_TX_PRBS_GEN_CONFIG         0x0000d0e1 /* PRBS Generator Control */
#define TLB_TX_RMT_LPBK_CONFIG         0x0000d0e2 /* Remote Loopback Control */
#define TLB_TX_TLB_TX_MISC_CONFIG      0x0000d0e3 /* TLB TX Misc. Control */
#define TLB_TX_RMT_LPBK_PD_STATUS      0x0000d0e8 /* Remote Loopback Status */


/****************************************************************************
 * merlin_gallardo_digcom_blk_DIGCOM
 ***************************************************************************/
#define DIGCOM_GALLARDO_REVID0         0x0000d0f0 /* REVID0 */
#define DIGCOM_GALLARDO_RESET_CONTROL_PMD 0x0000d0f1 /* RESET_CONTROL_PMD */
#define DIGCOM_GALLARDO_RESET_CONTROL_CORE_DP 0x0000d0f2 /* RESET_CONTROL_CORE_DP */
#define DIGCOM_GALLARDO_LANE_MASK      0x0000d0f3 /* LANE_MASK */
#define DIGCOM_GALLARDO_HEARTBEAT_TIMER_CONTROL 0x0000d0f4 /* HEARTBEAT_TIMER_CONTROL */
#define DIGCOM_GALLARDO_UC_ACK_CORE_CONTROL 0x0000d0f5 /* UC_ACK_CORE_CONTROL */
#define DIGCOM_GALLARDO_CORE_REG_RESET_OCCURRED_CONTROL 0x0000d0f6 /* CORE_REG_RESET_OCCURRED_CONTROL */
#define DIGCOM_GALLARDO_RST_SEQ_TIMER_CONTROL 0x0000d0f7 /* RST_SEQ_TIMER_CONTROL */
#define DIGCOM_GALLARDO_CORE_DP_RESET_STATE_STATUS 0x0000d0f8 /* CORE_DP_RESET_STATE_STATUS */
#define DIGCOM_GALLARDO_PMD_CORE_MODE_STATUS 0x0000d0f9 /* PMD_CORE_MODE_STATUS */
#define DIGCOM_GALLARDO_REVID1         0x0000d0fa /* REVID1 */
#define DIGCOM_GALLARDO_REVID2         0x0000d0fe /* REVID2 */


/****************************************************************************
 * merlin_gallardo_patt_gen_blk_PATT_GEN
 ***************************************************************************/
#define PATT_GEN_PATT_GEN_SEQ_0        0x0000d100 /* Pattern Generator Sequence Word 0 */
#define PATT_GEN_PATT_GEN_SEQ_1        0x0000d101 /* Pattern Generator Sequence Word 1 */
#define PATT_GEN_PATT_GEN_SEQ_2        0x0000d102 /* Pattern Generator Sequence Word 2 */
#define PATT_GEN_PATT_GEN_SEQ_3        0x0000d103 /* Pattern Generator Sequence Word 3 */
#define PATT_GEN_PATT_GEN_SEQ_4        0x0000d104 /* Pattern Generator Sequence Word 4 */
#define PATT_GEN_PATT_GEN_SEQ_5        0x0000d105 /* Pattern Generator Sequence Word 5 */
#define PATT_GEN_PATT_GEN_SEQ_6        0x0000d106 /* Pattern Generator Sequence Word 6 */
#define PATT_GEN_PATT_GEN_SEQ_7        0x0000d107 /* Pattern Generator Sequence Word 7 */
#define PATT_GEN_PATT_GEN_SEQ_8        0x0000d108 /* Pattern Generator Sequence Word 8 */
#define PATT_GEN_PATT_GEN_SEQ_9        0x0000d109 /* Pattern Generator Sequence Word 9 */
#define PATT_GEN_PATT_GEN_SEQ_10       0x0000d10a /* Pattern Generator Sequence Word 10 */
#define PATT_GEN_PATT_GEN_SEQ_11       0x0000d10b /* Pattern Generator Sequence Word 11 */
#define PATT_GEN_PATT_GEN_SEQ_12       0x0000d10c /* Pattern Generator Sequence Word 12 */
#define PATT_GEN_PATT_GEN_SEQ_13       0x0000d10d /* Pattern Generator Sequence Word 13 */
#define PATT_GEN_PATT_GEN_SEQ_14       0x0000d10e /* Pattern Generator Sequence Word 14 */


/****************************************************************************
 * merlin_gallardo_tx_fed_blk_TX_FED
 ***************************************************************************/
#define TX_FED_RPTR_TXFIR_CONTROL1     0x0000d110 /* TX FIR Control1 Register */
#define TX_FED_RPTR_TXFIR_CONTROL2     0x0000d111 /* TX FIR Control2 Register */
#define TX_FED_RPTR_TXFIR_CONTROL3     0x0000d112 /* TX FIR Control3 Register */
#define TX_FED_RPTR_TXFIR_STATUS1      0x0000d113 /* TX FIR Status1 Register */
#define TX_FED_RPTR_TXFIR_STATUS2      0x0000d114 /* TX FIR Status2 Register */
#define TX_FED_RPTR_TXFIR_STATUS3      0x0000d115 /* TX FIR Status3 Register */
#define TX_FED_RPTR_TXFIR_STATUS4      0x0000d116 /* TX FIR Status4 Register */
#define TX_FED_RPTR_MICRO_CONTROL      0x0000d117 /* Micro Control Register */
#define TX_FED_RPTR_MISC_CONTROL1      0x0000d118 /* Misc Control 1 Register */
#define TX_FED_RPTR_MISC_CONTROL2      0x0000d119 /* Misc Control 2 Register */
#define TX_FED_RPTR_MISC_CONTROL3      0x0000d11a /* Misc Control 3 Register */


/****************************************************************************
 * merlin_gallardo_pll_cal_blk_PLL_CAL
 ***************************************************************************/
#define PLL_CAL_PLL_CALCTL_0           0x0000d120 /* PLL_CALCTL_0 */
#define PLL_CAL_PLL_CALCTL_1           0x0000d121 /* PLL_CALCTL_1 */
#define PLL_CAL_PLL_CALCTL_2           0x0000d122 /* PLL_CALCTL_2 */
#define PLL_CAL_PLL_CALCTL_3           0x0000d123 /* PLL_CALCTL_3 */
#define PLL_CAL_PLL_CALCTL_4           0x0000d124 /* PLL_CALCTL_4 */
#define PLL_CAL_PLL_CALCTL_5           0x0000d125 /* PLL_CALCTL_5 */
#define PLL_CAL_PLL_CALCTL_6           0x0000d126 /* PLL_CALCTL_6 */
#define PLL_CAL_PLL_CALSTS_0           0x0000d128 /* PLL_CALSTS_0 */
#define PLL_CAL_PLL_CALSTS_1           0x0000d129 /* PLL_CALSTS_1 */
#define PLL_CAL_PLL_CALSTS_2           0x0000d12a /* PLL_CALSTS_2 */
#define PLL_CAL_PLL_CALSTS_3           0x0000d12b /* PLL_CALSTS_3 */
#define PLL_CAL_PLL_CALSTS_4           0x0000d12c /* PLL_CALSTS_4 */
#define PLL_CAL_PLL_CALSTS_5           0x0000d12d /* PLL_CALSTS_5 */
#define PLL_CAL_PLL_CALSTS_6           0x0000d12e /* PLL_CALSTS_6 */


/****************************************************************************
 * merlin_gallardo_txcom_blk_TXCOM
 ***************************************************************************/
#define TXCOM_RPTR_CL72_TAP_LIMIT_CONTROL1 0x0000d130 /* CL72 Tap Limit Control 1 Register */
#define TXCOM_RPTR_CL72_TAP_LIMIT_CONTROL2 0x0000d131 /* CL72 Tap Limit Control 2 Register */
#define TXCOM_RPTR_CL72_TAP_PRESET_CONTROL 0x0000d132 /* CL72 Tap Present Control Register */
#define TXCOM_RPTR_CL72_DEBUG_1_REGISTER 0x0000d133 /* CL72 Debug 1 Register */
#define TXCOM_RPTR_CL72_MAX_WAIT_TIMER_REGISTER 0x0000d134 /* CL72 Max Wait Timer Register */
#define TXCOM_RPTR_CL72_WAIT_TIMER_REGISTER 0x0000d135 /* CL72 Wait Timer Register */


/****************************************************************************
 * merlin_gallardo_mgt_top_blk_MGT_TOP_I2C
 ***************************************************************************/
/****************************************************************************
 * MGT_TOP_I2C :: i2c_control_register
 ***************************************************************************/
/* MGT_TOP_I2C :: i2c_control_register :: i2c_master_enable [15:15] */
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_I2C_MASTER_ENABLE_MASK    0x8000
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_I2C_MASTER_ENABLE_ALIGN   0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_I2C_MASTER_ENABLE_BITS    1
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_I2C_MASTER_ENABLE_SHIFT   15

/* MGT_TOP_I2C :: i2c_control_register :: regs_imc_i2cflush [14:14] */
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_REGS_IMC_I2CFLUSH_MASK    0x4000
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_REGS_IMC_I2CFLUSH_ALIGN   0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_REGS_IMC_I2CFLUSH_BITS    1
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_REGS_IMC_I2CFLUSH_SHIFT   14

/* MGT_TOP_I2C :: i2c_control_register :: imc_sl_add_cnt [13:13] */
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_SL_ADD_CNT_MASK       0x2000
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_SL_ADD_CNT_ALIGN      0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_SL_ADD_CNT_BITS       1
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_SL_ADD_CNT_SHIFT      13

/* MGT_TOP_I2C :: i2c_control_register :: imc_sl_dat_cnt [12:12] */
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_SL_DAT_CNT_MASK       0x1000
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_SL_DAT_CNT_ALIGN      0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_SL_DAT_CNT_BITS       1
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_SL_DAT_CNT_SHIFT      12

/* MGT_TOP_I2C :: i2c_control_register :: nvm_chsum_ok [11:11] */
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_NVM_CHSUM_OK_MASK         0x0800
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_NVM_CHSUM_OK_ALIGN        0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_NVM_CHSUM_OK_BITS         1
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_NVM_CHSUM_OK_SHIFT        11

/* MGT_TOP_I2C :: i2c_control_register :: imc_regs_xfer_stat [10:09] */
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_REGS_XFER_STAT_MASK   0x0600
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_REGS_XFER_STAT_ALIGN  0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_REGS_XFER_STAT_BITS   2
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_IMC_REGS_XFER_STAT_SHIFT  9

/* MGT_TOP_I2C :: i2c_control_register :: reserved0 [08:06] */
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_RESERVED0_MASK            0x01c0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_RESERVED0_ALIGN           0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_RESERVED0_BITS            3
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_RESERVED0_SHIFT           6

/* MGT_TOP_I2C :: i2c_control_register :: slave_cmd [05:05] */
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_SLAVE_CMD_MASK            0x0020
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_SLAVE_CMD_ALIGN           0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_SLAVE_CMD_BITS            1
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_SLAVE_CMD_SHIFT           5

/* MGT_TOP_I2C :: i2c_control_register :: reserved1 [04:04] */
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_RESERVED1_MASK            0x0010
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_RESERVED1_ALIGN           0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_RESERVED1_BITS            1
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_RESERVED1_SHIFT           4

/* MGT_TOP_I2C :: i2c_control_register :: i2c_status [03:02] */
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_I2C_STATUS_MASK           0x000c
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_I2C_STATUS_ALIGN          0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_I2C_STATUS_BITS           2
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_I2C_STATUS_SHIFT          2

/* MGT_TOP_I2C :: i2c_control_register :: extended_r_w [01:00] */
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_EXTENDED_R_W_MASK         0x0003
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_EXTENDED_R_W_ALIGN        0
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_EXTENDED_R_W_BITS         2
#define MGT_TOP_I2C_I2C_CONTROL_REGISTER_EXTENDED_R_W_SHIFT        0


/****************************************************************************
 * MGT_TOP_I2C :: i2c_check_sum_register
 ***************************************************************************/
/* MGT_TOP_I2C :: i2c_check_sum_register :: reserved0 [15:08] */
#define MGT_TOP_I2C_I2C_CHECK_SUM_REGISTER_RESERVED0_MASK          0xff00
#define MGT_TOP_I2C_I2C_CHECK_SUM_REGISTER_RESERVED0_ALIGN         0
#define MGT_TOP_I2C_I2C_CHECK_SUM_REGISTER_RESERVED0_BITS          8
#define MGT_TOP_I2C_I2C_CHECK_SUM_REGISTER_RESERVED0_SHIFT         8

/* MGT_TOP_I2C :: i2c_check_sum_register :: i2c_csum [07:00] */
#define MGT_TOP_I2C_I2C_CHECK_SUM_REGISTER_I2C_CSUM_MASK           0x00ff
#define MGT_TOP_I2C_I2C_CHECK_SUM_REGISTER_I2C_CSUM_ALIGN          0
#define MGT_TOP_I2C_I2C_CHECK_SUM_REGISTER_I2C_CSUM_BITS           8
#define MGT_TOP_I2C_I2C_CHECK_SUM_REGISTER_I2C_CSUM_SHIFT          0


/****************************************************************************
 * MGT_TOP_I2C :: i2c_transfer_size_register
 ***************************************************************************/
/* MGT_TOP_I2C :: i2c_transfer_size_register :: i2c_config_status [15:14] */
#define MGT_TOP_I2C_I2C_TRANSFER_SIZE_REGISTER_I2C_CONFIG_STATUS_MASK 0xc000
#define MGT_TOP_I2C_I2C_TRANSFER_SIZE_REGISTER_I2C_CONFIG_STATUS_ALIGN 0
#define MGT_TOP_I2C_I2C_TRANSFER_SIZE_REGISTER_I2C_CONFIG_STATUS_BITS 2
#define MGT_TOP_I2C_I2C_TRANSFER_SIZE_REGISTER_I2C_CONFIG_STATUS_SHIFT 14

/* MGT_TOP_I2C :: i2c_transfer_size_register :: imc_xfer_cnt [13:00] */
#define MGT_TOP_I2C_I2C_TRANSFER_SIZE_REGISTER_IMC_XFER_CNT_MASK   0x3fff
#define MGT_TOP_I2C_I2C_TRANSFER_SIZE_REGISTER_IMC_XFER_CNT_ALIGN  0
#define MGT_TOP_I2C_I2C_TRANSFER_SIZE_REGISTER_IMC_XFER_CNT_BITS   14
#define MGT_TOP_I2C_I2C_TRANSFER_SIZE_REGISTER_IMC_XFER_CNT_SHIFT  0


/****************************************************************************
 * MGT_TOP_I2C :: i2c_external_nvm_address_register
 ***************************************************************************/
/* MGT_TOP_I2C :: i2c_external_nvm_address_register :: imc_slave_addr [15:00] */
#define MGT_TOP_I2C_I2C_EXTERNAL_NVM_ADDRESS_REGISTER_IMC_SLAVE_ADDR_MASK 0xffff
#define MGT_TOP_I2C_I2C_EXTERNAL_NVM_ADDRESS_REGISTER_IMC_SLAVE_ADDR_ALIGN 0
#define MGT_TOP_I2C_I2C_EXTERNAL_NVM_ADDRESS_REGISTER_IMC_SLAVE_ADDR_BITS 16
#define MGT_TOP_I2C_I2C_EXTERNAL_NVM_ADDRESS_REGISTER_IMC_SLAVE_ADDR_SHIFT 0


/****************************************************************************
 * MGT_TOP_I2C :: i2c_internal_address_register
 ***************************************************************************/
/* MGT_TOP_I2C :: i2c_internal_address_register :: imc_xfer_addr_15_0 [15:00] */
#define MGT_TOP_I2C_I2C_INTERNAL_ADDRESS_REGISTER_IMC_XFER_ADDR_15_0_MASK 0xffff
#define MGT_TOP_I2C_I2C_INTERNAL_ADDRESS_REGISTER_IMC_XFER_ADDR_15_0_ALIGN 0
#define MGT_TOP_I2C_I2C_INTERNAL_ADDRESS_REGISTER_IMC_XFER_ADDR_15_0_BITS 16
#define MGT_TOP_I2C_I2C_INTERNAL_ADDRESS_REGISTER_IMC_XFER_ADDR_15_0_SHIFT 0


/****************************************************************************
 * MGT_TOP_I2C :: i2c_slave_id_address_register
 ***************************************************************************/
/* MGT_TOP_I2C :: i2c_slave_id_address_register :: imc_sl_dev_add [15:09] */
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_SL_DEV_ADD_MASK 0xfe00
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_SL_DEV_ADD_ALIGN 0
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_SL_DEV_ADD_BITS 7
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_SL_DEV_ADD_SHIFT 9

/* MGT_TOP_I2C :: i2c_slave_id_address_register :: imc_i2c_speed [08:08] */
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_I2C_SPEED_MASK 0x0100
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_I2C_SPEED_ALIGN 0
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_I2C_SPEED_BITS 1
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_I2C_SPEED_SHIFT 8

/* MGT_TOP_I2C :: i2c_slave_id_address_register :: imc_xfer_addr_23_16 [07:00] */
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_XFER_ADDR_23_16_MASK 0x00ff
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_XFER_ADDR_23_16_ALIGN 0
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_XFER_ADDR_23_16_BITS 8
#define MGT_TOP_I2C_I2C_SLAVE_ID_ADDRESS_REGISTER_IMC_XFER_ADDR_23_16_SHIFT 0


/****************************************************************************
 * merlin_gallardo_mgt_top_blk_MGT_TOP_PMD_USR
 ***************************************************************************/
/****************************************************************************
 * MGT_TOP_PMD_USR :: pwr_ramp
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: pwr_ramp :: pwr_on_en15_0 [15:00] */
#define MGT_TOP_PMD_USR_PWR_RAMP_PWR_ON_EN15_0_MASK                0xffff
#define MGT_TOP_PMD_USR_PWR_RAMP_PWR_ON_EN15_0_ALIGN               0
#define MGT_TOP_PMD_USR_PWR_RAMP_PWR_ON_EN15_0_BITS                16
#define MGT_TOP_PMD_USR_PWR_RAMP_PWR_ON_EN15_0_SHIFT               0


/****************************************************************************
 * MGT_TOP_PMD_USR :: chip_rev_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: chip_rev_register :: reserved0 [15:08] */
#define MGT_TOP_PMD_USR_CHIP_REV_REGISTER_RESERVED0_MASK           0xff00
#define MGT_TOP_PMD_USR_CHIP_REV_REGISTER_RESERVED0_ALIGN          0
#define MGT_TOP_PMD_USR_CHIP_REV_REGISTER_RESERVED0_BITS           8
#define MGT_TOP_PMD_USR_CHIP_REV_REGISTER_RESERVED0_SHIFT          8

/* MGT_TOP_PMD_USR :: chip_rev_register :: rev [07:00] */
#define MGT_TOP_PMD_USR_CHIP_REV_REGISTER_REV_MASK                 0x00ff
#define MGT_TOP_PMD_USR_CHIP_REV_REGISTER_REV_ALIGN                0
#define MGT_TOP_PMD_USR_CHIP_REV_REGISTER_REV_BITS                 8
#define MGT_TOP_PMD_USR_CHIP_REV_REGISTER_REV_SHIFT                0


/****************************************************************************
 * MGT_TOP_PMD_USR :: chip_id0_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: chip_id0_register :: chip_id_lower [15:00] */
#define MGT_TOP_PMD_USR_CHIP_ID0_REGISTER_CHIP_ID_LOWER_MASK       0xffff
#define MGT_TOP_PMD_USR_CHIP_ID0_REGISTER_CHIP_ID_LOWER_ALIGN      0
#define MGT_TOP_PMD_USR_CHIP_ID0_REGISTER_CHIP_ID_LOWER_BITS       16
#define MGT_TOP_PMD_USR_CHIP_ID0_REGISTER_CHIP_ID_LOWER_SHIFT      0


/****************************************************************************
 * MGT_TOP_PMD_USR :: chip_id1_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: chip_id1_register :: reserved0 [15:04] */
#define MGT_TOP_PMD_USR_CHIP_ID1_REGISTER_RESERVED0_MASK           0xfff0
#define MGT_TOP_PMD_USR_CHIP_ID1_REGISTER_RESERVED0_ALIGN          0
#define MGT_TOP_PMD_USR_CHIP_ID1_REGISTER_RESERVED0_BITS           12
#define MGT_TOP_PMD_USR_CHIP_ID1_REGISTER_RESERVED0_SHIFT          4

/* MGT_TOP_PMD_USR :: chip_id1_register :: chip_id_upper [03:00] */
#define MGT_TOP_PMD_USR_CHIP_ID1_REGISTER_CHIP_ID_UPPER_MASK       0x000f
#define MGT_TOP_PMD_USR_CHIP_ID1_REGISTER_CHIP_ID_UPPER_ALIGN      0
#define MGT_TOP_PMD_USR_CHIP_ID1_REGISTER_CHIP_ID_UPPER_BITS       4
#define MGT_TOP_PMD_USR_CHIP_ID1_REGISTER_CHIP_ID_UPPER_SHIFT      0


/****************************************************************************
 * MGT_TOP_PMD_USR :: pmd_status_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: pmd_status_register :: reserved0 [15:08] */
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_RESERVED0_MASK         0xff00
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_RESERVED0_ALIGN        0
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_RESERVED0_BITS         8
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_RESERVED0_SHIFT        8

/* MGT_TOP_PMD_USR :: pmd_status_register :: sys_lkdtcmu [07:07] */
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LKDTCMU_MASK       0x0080
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LKDTCMU_ALIGN      0
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LKDTCMU_BITS       1
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LKDTCMU_SHIFT      7

/* MGT_TOP_PMD_USR :: pmd_status_register :: sys_lkdtcdr [06:06] */
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LKDTCDR_MASK       0x0040
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LKDTCDR_ALIGN      0
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LKDTCDR_BITS       1
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LKDTCDR_SHIFT      6

/* MGT_TOP_PMD_USR :: pmd_status_register :: reserved1 [05:05] */
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_RESERVED1_MASK         0x0020
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_RESERVED1_ALIGN        0
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_RESERVED1_BITS         1
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_RESERVED1_SHIFT        5

/* MGT_TOP_PMD_USR :: pmd_status_register :: sys_los [04:04] */
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LOS_MASK           0x0010
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LOS_ALIGN          0
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LOS_BITS           1
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_SYS_LOS_SHIFT          4

/* MGT_TOP_PMD_USR :: pmd_status_register :: ln_lkdtcmu [03:03] */
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LKDTCMU_MASK        0x0008
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LKDTCMU_ALIGN       0
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LKDTCMU_BITS        1
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LKDTCMU_SHIFT       3

/* MGT_TOP_PMD_USR :: pmd_status_register :: ln_lkdtcdr [02:02] */
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LKDTCDR_MASK        0x0004
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LKDTCDR_ALIGN       0
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LKDTCDR_BITS        1
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LKDTCDR_SHIFT       2

/* MGT_TOP_PMD_USR :: pmd_status_register :: oplosb [01:01] */
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_OPLOSB_MASK            0x0002
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_OPLOSB_ALIGN           0
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_OPLOSB_BITS            1
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_OPLOSB_SHIFT           1

/* MGT_TOP_PMD_USR :: pmd_status_register :: ln_los [00:00] */
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LOS_MASK            0x0001
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LOS_ALIGN           0
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LOS_BITS            1
#define MGT_TOP_PMD_USR_PMD_STATUS_REGISTER_LN_LOS_SHIFT           0


/****************************************************************************
 * MGT_TOP_PMD_USR :: gpio_control_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: gpio_control_register :: reserved0 [15:09] */
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_RESERVED0_MASK       0xfe00
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_RESERVED0_ALIGN      0
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_RESERVED0_BITS       7
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_RESERVED0_SHIFT      9

/* MGT_TOP_PMD_USR :: gpio_control_register :: sys_pll_ool_mask [08:08] */
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SYS_PLL_OOL_MASK_MASK 0x0100
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SYS_PLL_OOL_MASK_ALIGN 0
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SYS_PLL_OOL_MASK_BITS 1
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SYS_PLL_OOL_MASK_SHIFT 8

/* MGT_TOP_PMD_USR :: gpio_control_register :: ln_pll_ool_mask [07:07] */
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_LN_PLL_OOL_MASK_MASK 0x0080
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_LN_PLL_OOL_MASK_ALIGN 0
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_LN_PLL_OOL_MASK_BITS 1
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_LN_PLL_OOL_MASK_SHIFT 7

/* MGT_TOP_PMD_USR :: gpio_control_register :: gpio_sel [06:04] */
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_GPIO_SEL_MASK        0x0070
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_GPIO_SEL_ALIGN       0
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_GPIO_SEL_BITS        3
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_GPIO_SEL_SHIFT       4

/* MGT_TOP_PMD_USR :: gpio_control_register :: reserved1 [03:02] */
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_RESERVED1_MASK       0x000c
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_RESERVED1_ALIGN      0
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_RESERVED1_BITS       2
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_RESERVED1_SHIFT      2

/* MGT_TOP_PMD_USR :: gpio_control_register :: sel_txdis_as_gpio1 [01:01] */
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SEL_TXDIS_AS_GPIO1_MASK 0x0002
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SEL_TXDIS_AS_GPIO1_ALIGN 0
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SEL_TXDIS_AS_GPIO1_BITS 1
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SEL_TXDIS_AS_GPIO1_SHIFT 1

/* MGT_TOP_PMD_USR :: gpio_control_register :: sel_txon_as_gpio0 [00:00] */
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SEL_TXON_AS_GPIO0_MASK 0x0001
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SEL_TXON_AS_GPIO0_ALIGN 0
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SEL_TXON_AS_GPIO0_BITS 1
#define MGT_TOP_PMD_USR_GPIO_CONTROL_REGISTER_SEL_TXON_AS_GPIO0_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: gp_io_control_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: gp_io_control_register :: reserved0 [15:10] */
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED0_MASK      0xfc00
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED0_ALIGN     0
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED0_BITS      6
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED0_SHIFT     10

/* MGT_TOP_PMD_USR :: gp_io_control_register :: in_gp_dat [09:08] */
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_IN_GP_DAT_MASK      0x0300
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_IN_GP_DAT_ALIGN     0
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_IN_GP_DAT_BITS      2
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_IN_GP_DAT_SHIFT     8

/* MGT_TOP_PMD_USR :: gp_io_control_register :: reserved1 [07:06] */
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED1_MASK      0x00c0
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED1_ALIGN     0
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED1_BITS      2
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED1_SHIFT     6

/* MGT_TOP_PMD_USR :: gp_io_control_register :: out_gp_dis [05:04] */
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_OUT_GP_DIS_MASK     0x0030
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_OUT_GP_DIS_ALIGN    0
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_OUT_GP_DIS_BITS     2
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_OUT_GP_DIS_SHIFT    4

/* MGT_TOP_PMD_USR :: gp_io_control_register :: reserved2 [03:02] */
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED2_MASK      0x000c
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED2_ALIGN     0
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED2_BITS      2
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_RESERVED2_SHIFT     2

/* MGT_TOP_PMD_USR :: gp_io_control_register :: out_gp_dat [01:00] */
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_OUT_GP_DAT_MASK     0x0003
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_OUT_GP_DAT_ALIGN    0
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_OUT_GP_DAT_BITS     2
#define MGT_TOP_PMD_USR_GP_IO_CONTROL_REGISTER_OUT_GP_DAT_SHIFT    0


/****************************************************************************
 * MGT_TOP_PMD_USR :: speed_link_detect_status
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: speed_link_detect_status :: sys_rx_sigdet [15:15] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_RX_SIGDET_MASK 0x8000
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_RX_SIGDET_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_RX_SIGDET_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_RX_SIGDET_SHIFT 15

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: sys_an_complete [14:14] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_AN_COMPLETE_MASK 0x4000
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_AN_COMPLETE_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_AN_COMPLETE_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_AN_COMPLETE_SHIFT 14

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: sys_pmd_speed40G [13:13] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED40G_MASK 0x2000
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED40G_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED40G_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED40G_SHIFT 13

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: sys_pmd_speed10G [12:12] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED10G_MASK 0x1000
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED10G_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED10G_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED10G_SHIFT 12

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: reserved0 [11:11] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_RESERVED0_MASK    0x0800
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_RESERVED0_ALIGN   0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_RESERVED0_BITS    1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_RESERVED0_SHIFT   11

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: sys_pmd_speed1G [10:10] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED1G_MASK 0x0400
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED1G_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED1G_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED1G_SHIFT 10

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: sys_pmd_speed100M [09:09] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED100M_MASK 0x0200
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED100M_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED100M_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED100M_SHIFT 9

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: sys_pmd_speed10M [08:08] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED10M_MASK 0x0100
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED10M_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED10M_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_SYS_PMD_SPEED10M_SHIFT 8

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: ln_rx_sigdet [07:07] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_RX_SIGDET_MASK 0x0080
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_RX_SIGDET_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_RX_SIGDET_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_RX_SIGDET_SHIFT 7

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: ln_an_complete [06:06] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_AN_COMPLETE_MASK 0x0040
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_AN_COMPLETE_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_AN_COMPLETE_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_AN_COMPLETE_SHIFT 6

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: ln_pmd_speed40g [05:05] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED40G_MASK 0x0020
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED40G_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED40G_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED40G_SHIFT 5

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: ln_pmd_speed10G [04:04] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED10G_MASK 0x0010
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED10G_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED10G_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED10G_SHIFT 4

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: reserved1 [03:03] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_RESERVED1_MASK    0x0008
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_RESERVED1_ALIGN   0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_RESERVED1_BITS    1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_RESERVED1_SHIFT   3

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: ln_pmd_speed1G [02:02] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED1G_MASK 0x0004
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED1G_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED1G_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED1G_SHIFT 2

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: ln_pmd_speed100M [01:01] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED100M_MASK 0x0002
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED100M_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED100M_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED100M_SHIFT 1

/* MGT_TOP_PMD_USR :: speed_link_detect_status :: ln_pmd_speed10M [00:00] */
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED10M_MASK 0x0001
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED10M_ALIGN 0
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED10M_BITS 1
#define MGT_TOP_PMD_USR_SPEED_LINK_DETECT_STATUS_LN_PMD_SPEED10M_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: ch_reset_control
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: ch_reset_control :: cl73_manhw_rst_n [15:12] */
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_CL73_MANHW_RST_N_MASK     0xf000
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_CL73_MANHW_RST_N_ALIGN    0
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_CL73_MANHW_RST_N_BITS     4
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_CL73_MANHW_RST_N_SHIFT    12

/* MGT_TOP_PMD_USR :: ch_reset_control :: cl73_mandp_rst_n [11:08] */
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_CL73_MANDP_RST_N_MASK     0x0f00
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_CL73_MANDP_RST_N_ALIGN    0
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_CL73_MANDP_RST_N_BITS     4
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_CL73_MANDP_RST_N_SHIFT    8

/* MGT_TOP_PMD_USR :: ch_reset_control :: xcl73_manhw_rst_n [07:04] */
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_XCL73_MANHW_RST_N_MASK    0x00f0
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_XCL73_MANHW_RST_N_ALIGN   0
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_XCL73_MANHW_RST_N_BITS    4
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_XCL73_MANHW_RST_N_SHIFT   4

/* MGT_TOP_PMD_USR :: ch_reset_control :: xcl73_mandp_rst_n [03:00] */
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_XCL73_MANDP_RST_N_MASK    0x000f
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_XCL73_MANDP_RST_N_ALIGN   0
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_XCL73_MANDP_RST_N_BITS    4
#define MGT_TOP_PMD_USR_CH_RESET_CONTROL_XCL73_MANDP_RST_N_SHIFT   0


/****************************************************************************
 * MGT_TOP_PMD_USR :: cl73_parallel_port_address_port
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: cl73_parallel_port_address_port :: reserved0 [15:13] */
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED0_MASK 0xe000
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED0_ALIGN 0
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED0_BITS 3
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED0_SHIFT 13

/* MGT_TOP_PMD_USR :: cl73_parallel_port_address_port :: cl73_pmd_aer [12:08] */
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_CL73_PMD_AER_MASK 0x1f00
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_CL73_PMD_AER_ALIGN 0
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_CL73_PMD_AER_BITS 5
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_CL73_PMD_AER_SHIFT 8

/* MGT_TOP_PMD_USR :: cl73_parallel_port_address_port :: reserved1 [07:05] */
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED1_MASK 0x00e0
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED1_ALIGN 0
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED1_BITS 3
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED1_SHIFT 5

/* MGT_TOP_PMD_USR :: cl73_parallel_port_address_port :: cl73_ang_aer [04:00] */
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_CL73_ANG_AER_MASK 0x001f
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_CL73_ANG_AER_ALIGN 0
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_CL73_ANG_AER_BITS 5
#define MGT_TOP_PMD_USR_CL73_PARALLEL_PORT_ADDRESS_PORT_CL73_ANG_AER_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: xcl73_parallel_port_address_port
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: xcl73_parallel_port_address_port :: reserved0 [15:13] */
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED0_MASK 0xe000
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED0_ALIGN 0
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED0_BITS 3
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED0_SHIFT 13

/* MGT_TOP_PMD_USR :: xcl73_parallel_port_address_port :: cl73_pmd_aer [12:08] */
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_CL73_PMD_AER_MASK 0x1f00
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_CL73_PMD_AER_ALIGN 0
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_CL73_PMD_AER_BITS 5
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_CL73_PMD_AER_SHIFT 8

/* MGT_TOP_PMD_USR :: xcl73_parallel_port_address_port :: reserved1 [07:05] */
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED1_MASK 0x00e0
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED1_ALIGN 0
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED1_BITS 3
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_RESERVED1_SHIFT 5

/* MGT_TOP_PMD_USR :: xcl73_parallel_port_address_port :: cl73_ang_aer [04:00] */
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_CL73_ANG_AER_MASK 0x001f
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_CL73_ANG_AER_ALIGN 0
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_CL73_ANG_AER_BITS 5
#define MGT_TOP_PMD_USR_XCL73_PARALLEL_PORT_ADDRESS_PORT_CL73_ANG_AER_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: pad_ctrl_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: pad_ctrl_register :: i2c_pad_func_ctrl [15:15] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_PAD_FUNC_CTRL_MASK   0x8000
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_PAD_FUNC_CTRL_ALIGN  0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_PAD_FUNC_CTRL_BITS   1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_PAD_FUNC_CTRL_SHIFT  15

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: i2c_scl_pad_input [14:14] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_PAD_INPUT_MASK   0x4000
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_PAD_INPUT_ALIGN  0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_PAD_INPUT_BITS   1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_PAD_INPUT_SHIFT  14

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: i2c_scl_dir_ctrl [13:13] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_DIR_CTRL_MASK    0x2000
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_DIR_CTRL_ALIGN   0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_DIR_CTRL_BITS    1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_DIR_CTRL_SHIFT   13

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: i2c_scl_output [12:12] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_OUTPUT_MASK      0x1000
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_OUTPUT_ALIGN     0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_OUTPUT_BITS      1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SCL_OUTPUT_SHIFT     12

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: reserved0 [11:11] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_RESERVED0_MASK           0x0800
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_RESERVED0_ALIGN          0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_RESERVED0_BITS           1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_RESERVED0_SHIFT          11

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: i2c_sda_pad_input [10:10] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_PAD_INPUT_MASK   0x0400
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_PAD_INPUT_ALIGN  0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_PAD_INPUT_BITS   1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_PAD_INPUT_SHIFT  10

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: i2c_sda_dir_ctrl [09:09] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_DIR_CTRL_MASK    0x0200
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_DIR_CTRL_ALIGN   0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_DIR_CTRL_BITS    1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_DIR_CTRL_SHIFT   9

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: i2c_sda_output [08:08] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_OUTPUT_MASK      0x0100
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_OUTPUT_ALIGN     0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_OUTPUT_BITS      1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_I2C_SDA_OUTPUT_SHIFT     8

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: mod_abs_debounce_delay_msb [07:07] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_DEBOUNCE_DELAY_MSB_MASK 0x0080
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_DEBOUNCE_DELAY_MSB_ALIGN 0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_DEBOUNCE_DELAY_MSB_BITS 1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_DEBOUNCE_DELAY_MSB_SHIFT 7

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: mod_abs_pad_input [06:06] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_PAD_INPUT_MASK   0x0040
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_PAD_INPUT_ALIGN  0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_PAD_INPUT_BITS   1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_PAD_INPUT_SHIFT  6

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: mod_abs_ctrl [05:05] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_CTRL_MASK        0x0020
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_CTRL_ALIGN       0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_CTRL_BITS        1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_CTRL_SHIFT       5

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: mod_abs_output [04:04] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_OUTPUT_MASK      0x0010
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_OUTPUT_ALIGN     0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_OUTPUT_BITS      1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_OUTPUT_SHIFT     4

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: mod_abs_debounce_delay_lsb [03:03] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_DEBOUNCE_DELAY_LSB_MASK 0x0008
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_DEBOUNCE_DELAY_LSB_ALIGN 0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_DEBOUNCE_DELAY_LSB_BITS 1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_MOD_ABS_DEBOUNCE_DELAY_LSB_SHIFT 3

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: oprxlos_pad_input [02:02] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_PAD_INPUT_MASK   0x0004
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_PAD_INPUT_ALIGN  0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_PAD_INPUT_BITS   1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_PAD_INPUT_SHIFT  2

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: oprxlos_ctrl [01:01] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_CTRL_MASK        0x0002
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_CTRL_ALIGN       0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_CTRL_BITS        1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_CTRL_SHIFT       1

/* MGT_TOP_PMD_USR :: pad_ctrl_register :: oprxlos_output [00:00] */
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_OUTPUT_MASK      0x0001
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_OUTPUT_ALIGN     0
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_OUTPUT_BITS      1
#define MGT_TOP_PMD_USR_PAD_CTRL_REGISTER_OPRXLOS_OUTPUT_SHIFT     0


/****************************************************************************
 * MGT_TOP_PMD_USR :: interrupt_m8051_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: interrupt_m8051_register :: QSFI_ch_interrupt_TBD [15:14] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_QSFI_CH_INTERRUPT_TBD_MASK 0xc000
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_QSFI_CH_INTERRUPT_TBD_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_QSFI_CH_INTERRUPT_TBD_BITS 2
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_QSFI_CH_INTERRUPT_TBD_SHIFT 14

/* MGT_TOP_PMD_USR :: interrupt_m8051_register :: External_PCS_Linkup [13:13] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_EXTERNAL_PCS_LINKUP_MASK 0x2000
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_EXTERNAL_PCS_LINKUP_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_EXTERNAL_PCS_LINKUP_BITS 1
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_EXTERNAL_PCS_LINKUP_SHIFT 13

/* MGT_TOP_PMD_USR :: interrupt_m8051_register :: External_PCS_Linkdown [12:12] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_EXTERNAL_PCS_LINKDOWN_MASK 0x1000
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_EXTERNAL_PCS_LINKDOWN_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_EXTERNAL_PCS_LINKDOWN_BITS 1
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_EXTERNAL_PCS_LINKDOWN_SHIFT 12

/* MGT_TOP_PMD_USR :: interrupt_m8051_register :: loss_of_optical_rxsignal_interrupt [11:08] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_LOSS_OF_OPTICAL_RXSIGNAL_INTERRUPT_MASK 0x0f00
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_LOSS_OF_OPTICAL_RXSIGNAL_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_LOSS_OF_OPTICAL_RXSIGNAL_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_LOSS_OF_OPTICAL_RXSIGNAL_INTERRUPT_SHIFT 8

/* MGT_TOP_PMD_USR :: interrupt_m8051_register :: gpio_1_interrupt [07:04] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_GPIO_1_INTERRUPT_MASK 0x00f0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_GPIO_1_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_GPIO_1_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_GPIO_1_INTERRUPT_SHIFT 4

/* MGT_TOP_PMD_USR :: interrupt_m8051_register :: gpio_0_interrupt [03:00] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_GPIO_0_INTERRUPT_MASK 0x000f
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_GPIO_0_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_GPIO_0_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_REGISTER_GPIO_0_INTERRUPT_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: interrupt_m8051_enable_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: interrupt_m8051_enable_register :: QSFI_ch_interrupt_enable [15:14] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_QSFI_CH_INTERRUPT_ENABLE_MASK 0xc000
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_QSFI_CH_INTERRUPT_ENABLE_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_QSFI_CH_INTERRUPT_ENABLE_BITS 2
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_QSFI_CH_INTERRUPT_ENABLE_SHIFT 14

/* MGT_TOP_PMD_USR :: interrupt_m8051_enable_register :: External_PCS_Linkup_enable [13:13] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_EXTERNAL_PCS_LINKUP_ENABLE_MASK 0x2000
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_EXTERNAL_PCS_LINKUP_ENABLE_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_EXTERNAL_PCS_LINKUP_ENABLE_BITS 1
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_EXTERNAL_PCS_LINKUP_ENABLE_SHIFT 13

/* MGT_TOP_PMD_USR :: interrupt_m8051_enable_register :: External_PCS_Linkdown_enable [12:12] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_EXTERNAL_PCS_LINKDOWN_ENABLE_MASK 0x1000
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_EXTERNAL_PCS_LINKDOWN_ENABLE_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_EXTERNAL_PCS_LINKDOWN_ENABLE_BITS 1
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_EXTERNAL_PCS_LINKDOWN_ENABLE_SHIFT 12

/* MGT_TOP_PMD_USR :: interrupt_m8051_enable_register :: loss_of_opt_rx_interrupt_enable [11:08] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_LOSS_OF_OPT_RX_INTERRUPT_ENABLE_MASK 0x0f00
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_LOSS_OF_OPT_RX_INTERRUPT_ENABLE_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_LOSS_OF_OPT_RX_INTERRUPT_ENABLE_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_LOSS_OF_OPT_RX_INTERRUPT_ENABLE_SHIFT 8

/* MGT_TOP_PMD_USR :: interrupt_m8051_enable_register :: gpio_1_interrupt [07:04] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_GPIO_1_INTERRUPT_MASK 0x00f0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_GPIO_1_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_GPIO_1_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_GPIO_1_INTERRUPT_SHIFT 4

/* MGT_TOP_PMD_USR :: interrupt_m8051_enable_register :: gpio_0_interrupt [03:00] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_GPIO_0_INTERRUPT_MASK 0x000f
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_GPIO_0_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_GPIO_0_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_ENABLE_REGISTER_GPIO_0_INTERRUPT_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: interrupt_m8051_status_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: interrupt_m8051_status_register :: QSFI_ch_interrupt_status [15:14] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_QSFI_CH_INTERRUPT_STATUS_MASK 0xc000
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_QSFI_CH_INTERRUPT_STATUS_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_QSFI_CH_INTERRUPT_STATUS_BITS 2
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_QSFI_CH_INTERRUPT_STATUS_SHIFT 14

/* MGT_TOP_PMD_USR :: interrupt_m8051_status_register :: External_PCS_Linkup_status [13:13] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_EXTERNAL_PCS_LINKUP_STATUS_MASK 0x2000
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_EXTERNAL_PCS_LINKUP_STATUS_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_EXTERNAL_PCS_LINKUP_STATUS_BITS 1
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_EXTERNAL_PCS_LINKUP_STATUS_SHIFT 13

/* MGT_TOP_PMD_USR :: interrupt_m8051_status_register :: External_PCS_Linkdown_status [12:12] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_EXTERNAL_PCS_LINKDOWN_STATUS_MASK 0x1000
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_EXTERNAL_PCS_LINKDOWN_STATUS_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_EXTERNAL_PCS_LINKDOWN_STATUS_BITS 1
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_EXTERNAL_PCS_LINKDOWN_STATUS_SHIFT 12

/* MGT_TOP_PMD_USR :: interrupt_m8051_status_register :: loss_of_optical_rxsignal_interrupt [11:08] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_LOSS_OF_OPTICAL_RXSIGNAL_INTERRUPT_MASK 0x0f00
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_LOSS_OF_OPTICAL_RXSIGNAL_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_LOSS_OF_OPTICAL_RXSIGNAL_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_LOSS_OF_OPTICAL_RXSIGNAL_INTERRUPT_SHIFT 8

/* MGT_TOP_PMD_USR :: interrupt_m8051_status_register :: gpio_1_interrupt [07:04] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_GPIO_1_INTERRUPT_MASK 0x00f0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_GPIO_1_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_GPIO_1_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_GPIO_1_INTERRUPT_SHIFT 4

/* MGT_TOP_PMD_USR :: interrupt_m8051_status_register :: gpio_0_interrupt [03:00] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_GPIO_0_INTERRUPT_MASK 0x000f
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_GPIO_0_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_GPIO_0_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_STATUS_REGISTER_GPIO_0_INTERRUPT_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: interrupt_m8051_polarity_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: interrupt_m8051_polarity_register :: assertion_level_for_QSFI_ch_interrupt [15:12] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_QSFI_CH_INTERRUPT_MASK 0xf000
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_QSFI_CH_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_QSFI_CH_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_QSFI_CH_INTERRUPT_SHIFT 12

/* MGT_TOP_PMD_USR :: interrupt_m8051_polarity_register :: assertion_level_for_opt_Rx_los_interrupt [11:08] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_OPT_RX_LOS_INTERRUPT_MASK 0x0f00
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_OPT_RX_LOS_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_OPT_RX_LOS_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_OPT_RX_LOS_INTERRUPT_SHIFT 8

/* MGT_TOP_PMD_USR :: interrupt_m8051_polarity_register :: assertion_level_for_GPIO1_interrupt [07:04] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_GPIO1_INTERRUPT_MASK 0x00f0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_GPIO1_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_GPIO1_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_GPIO1_INTERRUPT_SHIFT 4

/* MGT_TOP_PMD_USR :: interrupt_m8051_polarity_register :: assertion_level_for_GPIO0_interrupt [03:00] */
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_GPIO0_INTERRUPT_MASK 0x000f
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_GPIO0_INTERRUPT_ALIGN 0
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_GPIO0_INTERRUPT_BITS 4
#define MGT_TOP_PMD_USR_INTERRUPT_M8051_POLARITY_REGISTER_ASSERTION_LEVEL_FOR_GPIO0_INTERRUPT_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: gp_register_0
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: gp_register_0 :: gp_register_0 [15:08] */
#define MGT_TOP_PMD_USR_GP_REGISTER_0_GP_REGISTER_0_MASK           0xff00
#define MGT_TOP_PMD_USR_GP_REGISTER_0_GP_REGISTER_0_ALIGN          0
#define MGT_TOP_PMD_USR_GP_REGISTER_0_GP_REGISTER_0_BITS           8
#define MGT_TOP_PMD_USR_GP_REGISTER_0_GP_REGISTER_0_SHIFT          8

/* MGT_TOP_PMD_USR :: gp_register_0 :: module_resolution_failure [07:07] */
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MODULE_RESOLUTION_FAILURE_MASK 0x0080
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MODULE_RESOLUTION_FAILURE_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MODULE_RESOLUTION_FAILURE_BITS 1
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MODULE_RESOLUTION_FAILURE_SHIFT 7

/* MGT_TOP_PMD_USR :: gp_register_0 :: i2c_data_failure [06:06] */
#define MGT_TOP_PMD_USR_GP_REGISTER_0_I2C_DATA_FAILURE_MASK        0x0040
#define MGT_TOP_PMD_USR_GP_REGISTER_0_I2C_DATA_FAILURE_ALIGN       0
#define MGT_TOP_PMD_USR_GP_REGISTER_0_I2C_DATA_FAILURE_BITS        1
#define MGT_TOP_PMD_USR_GP_REGISTER_0_I2C_DATA_FAILURE_SHIFT       6

/* MGT_TOP_PMD_USR :: gp_register_0 :: Restart_i2c_access [05:05] */
#define MGT_TOP_PMD_USR_GP_REGISTER_0_RESTART_I2C_ACCESS_MASK      0x0020
#define MGT_TOP_PMD_USR_GP_REGISTER_0_RESTART_I2C_ACCESS_ALIGN     0
#define MGT_TOP_PMD_USR_GP_REGISTER_0_RESTART_I2C_ACCESS_BITS      1
#define MGT_TOP_PMD_USR_GP_REGISTER_0_RESTART_I2C_ACCESS_SHIFT     5

/* MGT_TOP_PMD_USR :: gp_register_0 :: i2c_access_failure [04:04] */
#define MGT_TOP_PMD_USR_GP_REGISTER_0_I2C_ACCESS_FAILURE_MASK      0x0010
#define MGT_TOP_PMD_USR_GP_REGISTER_0_I2C_ACCESS_FAILURE_ALIGN     0
#define MGT_TOP_PMD_USR_GP_REGISTER_0_I2C_ACCESS_FAILURE_BITS      1
#define MGT_TOP_PMD_USR_GP_REGISTER_0_I2C_ACCESS_FAILURE_SHIFT     4

/* MGT_TOP_PMD_USR :: gp_register_0 :: Enable_i2c_dynamic_reset [03:03] */
#define MGT_TOP_PMD_USR_GP_REGISTER_0_ENABLE_I2C_DYNAMIC_RESET_MASK 0x0008
#define MGT_TOP_PMD_USR_GP_REGISTER_0_ENABLE_I2C_DYNAMIC_RESET_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REGISTER_0_ENABLE_I2C_DYNAMIC_RESET_BITS 1
#define MGT_TOP_PMD_USR_GP_REGISTER_0_ENABLE_I2C_DYNAMIC_RESET_SHIFT 3

/* MGT_TOP_PMD_USR :: gp_register_0 :: gp_register_0_bit_2 [02:02] */
#define MGT_TOP_PMD_USR_GP_REGISTER_0_GP_REGISTER_0_BIT_2_MASK     0x0004
#define MGT_TOP_PMD_USR_GP_REGISTER_0_GP_REGISTER_0_BIT_2_ALIGN    0
#define MGT_TOP_PMD_USR_GP_REGISTER_0_GP_REGISTER_0_BIT_2_BITS     1
#define MGT_TOP_PMD_USR_GP_REGISTER_0_GP_REGISTER_0_BIT_2_SHIFT    2

/* MGT_TOP_PMD_USR :: gp_register_0 :: Micro_timeout_4_i2c_access [01:01] */
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MICRO_TIMEOUT_4_I2C_ACCESS_MASK 0x0002
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MICRO_TIMEOUT_4_I2C_ACCESS_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MICRO_TIMEOUT_4_I2C_ACCESS_BITS 1
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MICRO_TIMEOUT_4_I2C_ACCESS_SHIFT 1

/* MGT_TOP_PMD_USR :: gp_register_0 :: Mod_ABS_asserted [00:00] */
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MOD_ABS_ASSERTED_MASK        0x0001
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MOD_ABS_ASSERTED_ALIGN       0
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MOD_ABS_ASSERTED_BITS        1
#define MGT_TOP_PMD_USR_GP_REGISTER_0_MOD_ABS_ASSERTED_SHIFT       0


/****************************************************************************
 * MGT_TOP_PMD_USR :: gp_register_1
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: gp_register_1 :: System_LR_mode [15:15] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_LR_MODE_MASK          0x8000
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_LR_MODE_ALIGN         0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_LR_MODE_BITS          1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_LR_MODE_SHIFT         15

/* MGT_TOP_PMD_USR :: gp_register_1 :: Line_LR_mode [14:14] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_LR_MODE_MASK            0x4000
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_LR_MODE_ALIGN           0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_LR_MODE_BITS            1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_LR_MODE_SHIFT           14

/* MGT_TOP_PMD_USR :: gp_register_1 :: System_Forced_CL72_mode [13:13] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_FORCED_CL72_MODE_MASK 0x2000
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_FORCED_CL72_MODE_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_FORCED_CL72_MODE_BITS 1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_FORCED_CL72_MODE_SHIFT 13

/* MGT_TOP_PMD_USR :: gp_register_1 :: Line_Forced_CL72_mode [12:12] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_FORCED_CL72_MODE_MASK   0x1000
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_FORCED_CL72_MODE_ALIGN  0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_FORCED_CL72_MODE_BITS   1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_FORCED_CL72_MODE_SHIFT  12

/* MGT_TOP_PMD_USR :: gp_register_1 :: System_Cu_Type [11:11] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_CU_TYPE_MASK          0x0800
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_CU_TYPE_ALIGN         0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_CU_TYPE_BITS          1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_CU_TYPE_SHIFT         11

/* MGT_TOP_PMD_USR :: gp_register_1 :: System_Type [10:10] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_TYPE_MASK             0x0400
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_TYPE_ALIGN            0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_TYPE_BITS             1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SYSTEM_TYPE_SHIFT            10

/* MGT_TOP_PMD_USR :: gp_register_1 :: Line_Cu_Type [09:09] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_CU_TYPE_MASK            0x0200
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_CU_TYPE_ALIGN           0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_CU_TYPE_BITS            1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_CU_TYPE_SHIFT           9

/* MGT_TOP_PMD_USR :: gp_register_1 :: Line_Type [08:08] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_TYPE_MASK               0x0100
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_TYPE_ALIGN              0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_TYPE_BITS               1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_LINE_TYPE_SHIFT              8

/* MGT_TOP_PMD_USR :: gp_register_1 :: finish_change [07:07] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_FINISH_CHANGE_MASK           0x0080
#define MGT_TOP_PMD_USR_GP_REGISTER_1_FINISH_CHANGE_ALIGN          0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_FINISH_CHANGE_BITS           1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_FINISH_CHANGE_SHIFT          7

/* MGT_TOP_PMD_USR :: gp_register_1 :: Enable_ultra_low_latency_datapath [06:06] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_ENABLE_ULTRA_LOW_LATENCY_DATAPATH_MASK 0x0040
#define MGT_TOP_PMD_USR_GP_REGISTER_1_ENABLE_ULTRA_LOW_LATENCY_DATAPATH_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_ENABLE_ULTRA_LOW_LATENCY_DATAPATH_BITS 1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_ENABLE_ULTRA_LOW_LATENCY_DATAPATH_SHIFT 6

/* MGT_TOP_PMD_USR :: gp_register_1 :: ULL_datapath_latency [05:05] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_ULL_DATAPATH_LATENCY_MASK    0x0020
#define MGT_TOP_PMD_USR_GP_REGISTER_1_ULL_DATAPATH_LATENCY_ALIGN   0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_ULL_DATAPATH_LATENCY_BITS    1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_ULL_DATAPATH_LATENCY_SHIFT   5

/* MGT_TOP_PMD_USR :: gp_register_1 :: Speed_or_Type_change [04:04] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_OR_TYPE_CHANGE_MASK    0x0010
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_OR_TYPE_CHANGE_ALIGN   0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_OR_TYPE_CHANGE_BITS    1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_OR_TYPE_CHANGE_SHIFT   4

/* MGT_TOP_PMD_USR :: gp_register_1 :: Speed_100G [03:03] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_100G_MASK              0x0008
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_100G_ALIGN             0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_100G_BITS              1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_100G_SHIFT             3

/* MGT_TOP_PMD_USR :: gp_register_1 :: Speed_40G [02:02] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_40G_MASK               0x0004
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_40G_ALIGN              0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_40G_BITS               1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_40G_SHIFT              2

/* MGT_TOP_PMD_USR :: gp_register_1 :: Speed_10G [01:01] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_10G_MASK               0x0002
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_10G_ALIGN              0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_10G_BITS               1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_10G_SHIFT              1

/* MGT_TOP_PMD_USR :: gp_register_1 :: Speed_1G [00:00] */
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_1G_MASK                0x0001
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_1G_ALIGN               0
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_1G_BITS                1
#define MGT_TOP_PMD_USR_GP_REGISTER_1_SPEED_1G_SHIFT               0


/****************************************************************************
 * MGT_TOP_PMD_USR :: gp_register_2
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: gp_register_2 :: gp_register_2 [15:00] */
#define MGT_TOP_PMD_USR_GP_REGISTER_2_GP_REGISTER_2_MASK           0xffff
#define MGT_TOP_PMD_USR_GP_REGISTER_2_GP_REGISTER_2_ALIGN          0
#define MGT_TOP_PMD_USR_GP_REGISTER_2_GP_REGISTER_2_BITS           16
#define MGT_TOP_PMD_USR_GP_REGISTER_2_GP_REGISTER_2_SHIFT          0


/****************************************************************************
 * MGT_TOP_PMD_USR :: gp_register_3
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: gp_register_3 :: System_LR_mode [15:15] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_LR_MODE_MASK          0x8000
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_LR_MODE_ALIGN         0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_LR_MODE_BITS          1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_LR_MODE_SHIFT         15

/* MGT_TOP_PMD_USR :: gp_register_3 :: Line_LR_mode [14:14] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_LR_MODE_MASK            0x4000
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_LR_MODE_ALIGN           0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_LR_MODE_BITS            1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_LR_MODE_SHIFT           14

/* MGT_TOP_PMD_USR :: gp_register_3 :: System_Forced_CL72_mode [13:13] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_FORCED_CL72_MODE_MASK 0x2000
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_FORCED_CL72_MODE_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_FORCED_CL72_MODE_BITS 1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_FORCED_CL72_MODE_SHIFT 13

/* MGT_TOP_PMD_USR :: gp_register_3 :: Line_Forced_CL72_mode [12:12] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_FORCED_CL72_MODE_MASK   0x1000
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_FORCED_CL72_MODE_ALIGN  0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_FORCED_CL72_MODE_BITS   1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_FORCED_CL72_MODE_SHIFT  12

/* MGT_TOP_PMD_USR :: gp_register_3 :: System_Cu_Type [11:11] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_CU_TYPE_MASK          0x0800
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_CU_TYPE_ALIGN         0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_CU_TYPE_BITS          1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_CU_TYPE_SHIFT         11

/* MGT_TOP_PMD_USR :: gp_register_3 :: System_Type [10:10] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_TYPE_MASK             0x0400
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_TYPE_ALIGN            0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_TYPE_BITS             1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SYSTEM_TYPE_SHIFT            10

/* MGT_TOP_PMD_USR :: gp_register_3 :: Line_Cu_Type [09:09] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_CU_TYPE_MASK            0x0200
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_CU_TYPE_ALIGN           0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_CU_TYPE_BITS            1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_CU_TYPE_SHIFT           9

/* MGT_TOP_PMD_USR :: gp_register_3 :: Line_Type [08:08] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_TYPE_MASK               0x0100
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_TYPE_ALIGN              0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_TYPE_BITS               1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_LINE_TYPE_SHIFT              8

/* MGT_TOP_PMD_USR :: gp_register_3 :: finish_change [07:07] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_FINISH_CHANGE_MASK           0x0080
#define MGT_TOP_PMD_USR_GP_REGISTER_3_FINISH_CHANGE_ALIGN          0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_FINISH_CHANGE_BITS           1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_FINISH_CHANGE_SHIFT          7

/* MGT_TOP_PMD_USR :: gp_register_3 :: Enable_ultra_low_latency_datapath [06:06] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_ENABLE_ULTRA_LOW_LATENCY_DATAPATH_MASK 0x0040
#define MGT_TOP_PMD_USR_GP_REGISTER_3_ENABLE_ULTRA_LOW_LATENCY_DATAPATH_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_ENABLE_ULTRA_LOW_LATENCY_DATAPATH_BITS 1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_ENABLE_ULTRA_LOW_LATENCY_DATAPATH_SHIFT 6

/* MGT_TOP_PMD_USR :: gp_register_3 :: ULL_datapath_latency [05:05] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_ULL_DATAPATH_LATENCY_MASK    0x0020
#define MGT_TOP_PMD_USR_GP_REGISTER_3_ULL_DATAPATH_LATENCY_ALIGN   0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_ULL_DATAPATH_LATENCY_BITS    1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_ULL_DATAPATH_LATENCY_SHIFT   5

/* MGT_TOP_PMD_USR :: gp_register_3 :: Speed_or_Type_change [04:04] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_OR_TYPE_CHANGE_MASK    0x0010
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_OR_TYPE_CHANGE_ALIGN   0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_OR_TYPE_CHANGE_BITS    1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_OR_TYPE_CHANGE_SHIFT   4

/* MGT_TOP_PMD_USR :: gp_register_3 :: Speed_100G [03:03] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_100G_MASK              0x0008
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_100G_ALIGN             0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_100G_BITS              1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_100G_SHIFT             3

/* MGT_TOP_PMD_USR :: gp_register_3 :: Speed_40G [02:02] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_40G_MASK               0x0004
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_40G_ALIGN              0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_40G_BITS               1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_40G_SHIFT              2

/* MGT_TOP_PMD_USR :: gp_register_3 :: Speed_10G [01:01] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_10G_MASK               0x0002
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_10G_ALIGN              0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_10G_BITS               1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_10G_SHIFT              1

/* MGT_TOP_PMD_USR :: gp_register_3 :: Speed_1G [00:00] */
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_1G_MASK                0x0001
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_1G_ALIGN               0
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_1G_BITS                1
#define MGT_TOP_PMD_USR_GP_REGISTER_3_SPEED_1G_SHIFT               0


/****************************************************************************
 * MGT_TOP_PMD_USR :: gp_status_register_0
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: gp_status_register_0 :: misc_status_15_0 [15:00] */
#define MGT_TOP_PMD_USR_GP_STATUS_REGISTER_0_MISC_STATUS_15_0_MASK 0xffff
#define MGT_TOP_PMD_USR_GP_STATUS_REGISTER_0_MISC_STATUS_15_0_ALIGN 0
#define MGT_TOP_PMD_USR_GP_STATUS_REGISTER_0_MISC_STATUS_15_0_BITS 16
#define MGT_TOP_PMD_USR_GP_STATUS_REGISTER_0_MISC_STATUS_15_0_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: gp_status_register_1
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: gp_status_register_1 :: misc_status_31_16 [15:00] */
#define MGT_TOP_PMD_USR_GP_STATUS_REGISTER_1_MISC_STATUS_31_16_MASK 0xffff
#define MGT_TOP_PMD_USR_GP_STATUS_REGISTER_1_MISC_STATUS_31_16_ALIGN 0
#define MGT_TOP_PMD_USR_GP_STATUS_REGISTER_1_MISC_STATUS_31_16_BITS 16
#define MGT_TOP_PMD_USR_GP_STATUS_REGISTER_1_MISC_STATUS_31_16_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: spa_control_status_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: spa_control_status_register :: spi_port_used [15:15] */
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_PORT_USED_MASK 0x8000
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_PORT_USED_ALIGN 0
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_PORT_USED_BITS 1
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_PORT_USED_SHIFT 15

/* MGT_TOP_PMD_USR :: spa_control_status_register :: spi_boot [14:14] */
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_BOOT_MASK  0x4000
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_BOOT_ALIGN 0
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_BOOT_BITS  1
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_BOOT_SHIFT 14

/* MGT_TOP_PMD_USR :: spa_control_status_register :: spi_dwld_done [13:13] */
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_DWLD_DONE_MASK 0x2000
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_DWLD_DONE_ALIGN 0
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_DWLD_DONE_BITS 1
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_DWLD_DONE_SHIFT 13

/* MGT_TOP_PMD_USR :: spa_control_status_register :: spa_en [12:12] */
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPA_EN_MASK    0x1000
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPA_EN_ALIGN   0
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPA_EN_BITS    1
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPA_EN_SHIFT   12

/* MGT_TOP_PMD_USR :: spa_control_status_register :: gp_por_ctl [11:04] */
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_GP_POR_CTL_MASK 0x0ff0
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_GP_POR_CTL_ALIGN 0
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_GP_POR_CTL_BITS 8
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_GP_POR_CTL_SHIFT 4

/* MGT_TOP_PMD_USR :: spa_control_status_register :: use_irom_isr [03:03] */
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_USE_IROM_ISR_MASK 0x0008
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_USE_IROM_ISR_ALIGN 0
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_USE_IROM_ISR_BITS 1
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_USE_IROM_ISR_SHIFT 3

/* MGT_TOP_PMD_USR :: spa_control_status_register :: reserved0 [02:01] */
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_RESERVED0_MASK 0x0006
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_RESERVED0_ALIGN 0
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_RESERVED0_BITS 2
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_RESERVED0_SHIFT 1

/* MGT_TOP_PMD_USR :: spa_control_status_register :: spi_ports_enable [00:00] */
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_PORTS_ENABLE_MASK 0x0001
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_PORTS_ENABLE_ALIGN 0
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_PORTS_ENABLE_BITS 1
#define MGT_TOP_PMD_USR_SPA_CONTROL_STATUS_REGISTER_SPI_PORTS_ENABLE_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_misc_sig1_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_misc_sig1_register :: otp_misc_sig1 [15:00] */
#define MGT_TOP_PMD_USR_OTP_MISC_SIG1_REGISTER_OTP_MISC_SIG1_MASK  0xffff
#define MGT_TOP_PMD_USR_OTP_MISC_SIG1_REGISTER_OTP_MISC_SIG1_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_MISC_SIG1_REGISTER_OTP_MISC_SIG1_BITS  16
#define MGT_TOP_PMD_USR_OTP_MISC_SIG1_REGISTER_OTP_MISC_SIG1_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_misc_sig2_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_misc_sig2_register :: otp_misc_sig2 [15:00] */
#define MGT_TOP_PMD_USR_OTP_MISC_SIG2_REGISTER_OTP_MISC_SIG2_MASK  0xffff
#define MGT_TOP_PMD_USR_OTP_MISC_SIG2_REGISTER_OTP_MISC_SIG2_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_MISC_SIG2_REGISTER_OTP_MISC_SIG2_BITS  16
#define MGT_TOP_PMD_USR_OTP_MISC_SIG2_REGISTER_OTP_MISC_SIG2_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_misc_sig3_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_misc_sig3_register :: otp_misc_sig3 [15:00] */
#define MGT_TOP_PMD_USR_OTP_MISC_SIG3_REGISTER_OTP_MISC_SIG3_MASK  0xffff
#define MGT_TOP_PMD_USR_OTP_MISC_SIG3_REGISTER_OTP_MISC_SIG3_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_MISC_SIG3_REGISTER_OTP_MISC_SIG3_BITS  16
#define MGT_TOP_PMD_USR_OTP_MISC_SIG3_REGISTER_OTP_MISC_SIG3_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_misc_sig4_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_misc_sig4_register :: otp_misc_sig4 [15:00] */
#define MGT_TOP_PMD_USR_OTP_MISC_SIG4_REGISTER_OTP_MISC_SIG4_MASK  0xffff
#define MGT_TOP_PMD_USR_OTP_MISC_SIG4_REGISTER_OTP_MISC_SIG4_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_MISC_SIG4_REGISTER_OTP_MISC_SIG4_BITS  16
#define MGT_TOP_PMD_USR_OTP_MISC_SIG4_REGISTER_OTP_MISC_SIG4_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_misc_sig5_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_misc_sig5_register :: otp_misc_sig5 [15:00] */
#define MGT_TOP_PMD_USR_OTP_MISC_SIG5_REGISTER_OTP_MISC_SIG5_MASK  0xffff
#define MGT_TOP_PMD_USR_OTP_MISC_SIG5_REGISTER_OTP_MISC_SIG5_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_MISC_SIG5_REGISTER_OTP_MISC_SIG5_BITS  16
#define MGT_TOP_PMD_USR_OTP_MISC_SIG5_REGISTER_OTP_MISC_SIG5_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_misc_sig6_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_misc_sig6_register :: otp_misc_sig6 [15:00] */
#define MGT_TOP_PMD_USR_OTP_MISC_SIG6_REGISTER_OTP_MISC_SIG6_MASK  0xffff
#define MGT_TOP_PMD_USR_OTP_MISC_SIG6_REGISTER_OTP_MISC_SIG6_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_MISC_SIG6_REGISTER_OTP_MISC_SIG6_BITS  16
#define MGT_TOP_PMD_USR_OTP_MISC_SIG6_REGISTER_OTP_MISC_SIG6_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: gp_reg_c870_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: gp_reg_c870_register :: reserved0 [15:11] */
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RESERVED0_MASK        0xf800
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RESERVED0_ALIGN       0
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RESERVED0_BITS        5
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RESERVED0_SHIFT       11

/* MGT_TOP_PMD_USR :: gp_reg_c870_register :: cdr_lkdt_manual_value [10:10] */
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_CDR_LKDT_MANUAL_VALUE_MASK 0x0400
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_CDR_LKDT_MANUAL_VALUE_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_CDR_LKDT_MANUAL_VALUE_BITS 1
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_CDR_LKDT_MANUAL_VALUE_SHIFT 10

/* MGT_TOP_PMD_USR :: gp_reg_c870_register :: cdr_lkdt_manual_en [09:09] */
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_CDR_LKDT_MANUAL_EN_MASK 0x0200
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_CDR_LKDT_MANUAL_EN_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_CDR_LKDT_MANUAL_EN_BITS 1
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_CDR_LKDT_MANUAL_EN_SHIFT 9

/* MGT_TOP_PMD_USR :: gp_reg_c870_register :: rx_los_manual_value [08:08] */
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RX_LOS_MANUAL_VALUE_MASK 0x0100
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RX_LOS_MANUAL_VALUE_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RX_LOS_MANUAL_VALUE_BITS 1
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RX_LOS_MANUAL_VALUE_SHIFT 8

/* MGT_TOP_PMD_USR :: gp_reg_c870_register :: rx_los_manual_en [07:07] */
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RX_LOS_MANUAL_EN_MASK 0x0080
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RX_LOS_MANUAL_EN_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RX_LOS_MANUAL_EN_BITS 1
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RX_LOS_MANUAL_EN_SHIFT 7

/* MGT_TOP_PMD_USR :: gp_reg_c870_register :: sys_cdr_lkdt_manual_value [06:06] */
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_SYS_CDR_LKDT_MANUAL_VALUE_MASK 0x0040
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_SYS_CDR_LKDT_MANUAL_VALUE_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_SYS_CDR_LKDT_MANUAL_VALUE_BITS 1
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_SYS_CDR_LKDT_MANUAL_VALUE_SHIFT 6

/* MGT_TOP_PMD_USR :: gp_reg_c870_register :: sys_cdr_lkdt_manual_en [05:05] */
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_SYS_CDR_LKDT_MANUAL_EN_MASK 0x0020
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_SYS_CDR_LKDT_MANUAL_EN_ALIGN 0
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_SYS_CDR_LKDT_MANUAL_EN_BITS 1
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_SYS_CDR_LKDT_MANUAL_EN_SHIFT 5

/* MGT_TOP_PMD_USR :: gp_reg_c870_register :: reserved1 [04:00] */
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RESERVED1_MASK        0x001f
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RESERVED1_ALIGN       0
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RESERVED1_BITS        5
#define MGT_TOP_PMD_USR_GP_REG_C870_REGISTER_RESERVED1_SHIFT       0


/****************************************************************************
 * MGT_TOP_PMD_USR :: m8051_watchdog_control_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: m8051_watchdog_control_register :: m8051_wdog_freeze [15:15] */
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_M8051_WDOG_FREEZE_MASK 0x8000
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_M8051_WDOG_FREEZE_ALIGN 0
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_M8051_WDOG_FREEZE_BITS 1
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_M8051_WDOG_FREEZE_SHIFT 15

/* MGT_TOP_PMD_USR :: m8051_watchdog_control_register :: reserved0 [14:12] */
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_RESERVED0_MASK 0x7000
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_RESERVED0_ALIGN 0
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_RESERVED0_BITS 3
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_RESERVED0_SHIFT 12

/* MGT_TOP_PMD_USR :: m8051_watchdog_control_register :: m8051_wdog_init [11:00] */
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_M8051_WDOG_INIT_MASK 0x0fff
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_M8051_WDOG_INIT_ALIGN 0
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_M8051_WDOG_INIT_BITS 12
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_CONTROL_REGISTER_M8051_WDOG_INIT_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: m8051_watchdog_status_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: m8051_watchdog_status_register :: reserved0 [15:12] */
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_STATUS_REGISTER_RESERVED0_MASK 0xf000
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_STATUS_REGISTER_RESERVED0_ALIGN 0
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_STATUS_REGISTER_RESERVED0_BITS 4
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_STATUS_REGISTER_RESERVED0_SHIFT 12

/* MGT_TOP_PMD_USR :: m8051_watchdog_status_register :: m8051_wdog_cnt [11:00] */
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_STATUS_REGISTER_M8051_WDOG_CNT_MASK 0x0fff
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_STATUS_REGISTER_M8051_WDOG_CNT_ALIGN 0
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_STATUS_REGISTER_M8051_WDOG_CNT_BITS 12
#define MGT_TOP_PMD_USR_M8051_WATCHDOG_STATUS_REGISTER_M8051_WDOG_CNT_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: chip_intr_stat
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: chip_intr_stat :: uncorrectable_error_det_sram_stat [15:15] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_UNCORRECTABLE_ERROR_DET_SRAM_STAT_MASK 0x8000
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_UNCORRECTABLE_ERROR_DET_SRAM_STAT_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_UNCORRECTABLE_ERROR_DET_SRAM_STAT_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_UNCORRECTABLE_ERROR_DET_SRAM_STAT_SHIFT 15

/* MGT_TOP_PMD_USR :: chip_intr_stat :: correctable_error_det_sram_stat [14:14] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_CORRECTABLE_ERROR_DET_SRAM_STAT_MASK 0x4000
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_CORRECTABLE_ERROR_DET_SRAM_STAT_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_CORRECTABLE_ERROR_DET_SRAM_STAT_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_CORRECTABLE_ERROR_DET_SRAM_STAT_SHIFT 14

/* MGT_TOP_PMD_USR :: chip_intr_stat :: Micro_generated_attention_stat [13:13] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MICRO_GENERATED_ATTENTION_STAT_MASK 0x2000
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MICRO_GENERATED_ATTENTION_STAT_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MICRO_GENERATED_ATTENTION_STAT_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MICRO_GENERATED_ATTENTION_STAT_SHIFT 13

/* MGT_TOP_PMD_USR :: chip_intr_stat :: watch_dog_timer_expired_stat [12:12] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_WATCH_DOG_TIMER_EXPIRED_STAT_MASK 0x1000
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_WATCH_DOG_TIMER_EXPIRED_STAT_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_WATCH_DOG_TIMER_EXPIRED_STAT_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_WATCH_DOG_TIMER_EXPIRED_STAT_SHIFT 12

/* MGT_TOP_PMD_USR :: chip_intr_stat :: ln_autoneg_completed_stat [11:11] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_AUTONEG_COMPLETED_STAT_MASK 0x0800
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_AUTONEG_COMPLETED_STAT_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_AUTONEG_COMPLETED_STAT_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_AUTONEG_COMPLETED_STAT_SHIFT 11

/* MGT_TOP_PMD_USR :: chip_intr_stat :: sys_autoneg_completed_stat [10:10] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_AUTONEG_COMPLETED_STAT_MASK 0x0400
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_AUTONEG_COMPLETED_STAT_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_AUTONEG_COMPLETED_STAT_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_AUTONEG_COMPLETED_STAT_SHIFT 10

/* MGT_TOP_PMD_USR :: chip_intr_stat :: Micro_message_stat [09:09] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MICRO_MESSAGE_STAT_MASK     0x0200
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MICRO_MESSAGE_STAT_ALIGN    0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MICRO_MESSAGE_STAT_BITS     1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MICRO_MESSAGE_STAT_SHIFT    9

/* MGT_TOP_PMD_USR :: chip_intr_stat :: pad_gp_in_1 [08:08] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_GP_IN_1_MASK            0x0100
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_GP_IN_1_ALIGN           0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_GP_IN_1_BITS            1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_GP_IN_1_SHIFT           8

/* MGT_TOP_PMD_USR :: chip_intr_stat :: pad_gp_in_0 [07:07] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_GP_IN_0_MASK            0x0080
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_GP_IN_0_ALIGN           0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_GP_IN_0_BITS            1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_GP_IN_0_SHIFT           7

/* MGT_TOP_PMD_USR :: chip_intr_stat :: pad_extPCS_Link [06:06] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_EXTPCS_LINK_MASK        0x0040
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_EXTPCS_LINK_ALIGN       0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_EXTPCS_LINK_BITS        1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_PAD_EXTPCS_LINK_SHIFT       6

/* MGT_TOP_PMD_USR :: chip_intr_stat :: sys_cmu_lkdt_stat [05:05] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_CMU_LKDT_STAT_MASK      0x0020
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_CMU_LKDT_STAT_ALIGN     0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_CMU_LKDT_STAT_BITS      1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_CMU_LKDT_STAT_SHIFT     5

/* MGT_TOP_PMD_USR :: chip_intr_stat :: ln_cmu_lkdt_stat [04:04] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_CMU_LKDT_STAT_MASK       0x0010
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_CMU_LKDT_STAT_ALIGN      0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_CMU_LKDT_STAT_BITS       1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_CMU_LKDT_STAT_SHIFT      4

/* MGT_TOP_PMD_USR :: chip_intr_stat :: ln_cdr_lkdt_stat [03:03] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_CDR_LKDT_STAT_MASK       0x0008
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_CDR_LKDT_STAT_ALIGN      0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_CDR_LKDT_STAT_BITS       1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_LN_CDR_LKDT_STAT_SHIFT      3

/* MGT_TOP_PMD_USR :: chip_intr_stat :: opt_los_stat [02:02] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_OPT_LOS_STAT_MASK           0x0004
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_OPT_LOS_STAT_ALIGN          0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_OPT_LOS_STAT_BITS           1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_OPT_LOS_STAT_SHIFT          2

/* MGT_TOP_PMD_USR :: chip_intr_stat :: sys_cdr_lkdt_stat [01:01] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_CDR_LKDT_STAT_MASK      0x0002
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_CDR_LKDT_STAT_ALIGN     0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_CDR_LKDT_STAT_BITS      1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_SYS_CDR_LKDT_STAT_SHIFT     1

/* MGT_TOP_PMD_USR :: chip_intr_stat :: mod_abs_stat [00:00] */
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MOD_ABS_STAT_MASK           0x0001
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MOD_ABS_STAT_ALIGN          0
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MOD_ABS_STAT_BITS           1
#define MGT_TOP_PMD_USR_CHIP_INTR_STAT_MOD_ABS_STAT_SHIFT          0


/****************************************************************************
 * MGT_TOP_PMD_USR :: chip_intr_en
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: chip_intr_en :: Micro_intr_en [15:14] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_MICRO_INTR_EN_MASK            0xc000
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_MICRO_INTR_EN_ALIGN           0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_MICRO_INTR_EN_BITS            2
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_MICRO_INTR_EN_SHIFT           14

/* MGT_TOP_PMD_USR :: chip_intr_en :: sw_intr_en [13:13] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SW_INTR_EN_MASK               0x2000
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SW_INTR_EN_ALIGN              0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SW_INTR_EN_BITS               1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SW_INTR_EN_SHIFT              13

/* MGT_TOP_PMD_USR :: chip_intr_en :: watchdog_timer_expiry_intr_en [12:12] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_WATCHDOG_TIMER_EXPIRY_INTR_EN_MASK 0x1000
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_WATCHDOG_TIMER_EXPIRY_INTR_EN_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_WATCHDOG_TIMER_EXPIRY_INTR_EN_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_WATCHDOG_TIMER_EXPIRY_INTR_EN_SHIFT 12

/* MGT_TOP_PMD_USR :: chip_intr_en :: ln_autoneg_completed_intr_en [11:11] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_AUTONEG_COMPLETED_INTR_EN_MASK 0x0800
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_AUTONEG_COMPLETED_INTR_EN_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_AUTONEG_COMPLETED_INTR_EN_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_AUTONEG_COMPLETED_INTR_EN_SHIFT 11

/* MGT_TOP_PMD_USR :: chip_intr_en :: sys_autoneg_completed_intr_en [10:10] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_AUTONEG_COMPLETED_INTR_EN_MASK 0x0400
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_AUTONEG_COMPLETED_INTR_EN_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_AUTONEG_COMPLETED_INTR_EN_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_AUTONEG_COMPLETED_INTR_EN_SHIFT 10

/* MGT_TOP_PMD_USR :: chip_intr_en :: Micro_message_out_intr_en [09:09] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_MICRO_MESSAGE_OUT_INTR_EN_MASK 0x0200
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_MICRO_MESSAGE_OUT_INTR_EN_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_MICRO_MESSAGE_OUT_INTR_EN_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_MICRO_MESSAGE_OUT_INTR_EN_SHIFT 9

/* MGT_TOP_PMD_USR :: chip_intr_en :: GPIO_IN_1_intr_en [08:08] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_GPIO_IN_1_INTR_EN_MASK        0x0100
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_GPIO_IN_1_INTR_EN_ALIGN       0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_GPIO_IN_1_INTR_EN_BITS        1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_GPIO_IN_1_INTR_EN_SHIFT       8

/* MGT_TOP_PMD_USR :: chip_intr_en :: GPIO_IN_0_intr_en [07:07] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_GPIO_IN_0_INTR_EN_MASK        0x0080
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_GPIO_IN_0_INTR_EN_ALIGN       0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_GPIO_IN_0_INTR_EN_BITS        1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_GPIO_IN_0_INTR_EN_SHIFT       7

/* MGT_TOP_PMD_USR :: chip_intr_en :: pad_extPCS_Link [06:06] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_EXTPCS_LINK_MASK          0x0040
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_EXTPCS_LINK_ALIGN         0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_EXTPCS_LINK_BITS          1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_EXTPCS_LINK_SHIFT         6

/* MGT_TOP_PMD_USR :: chip_intr_en :: sys_cmu_lkdt_en [05:05] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_CMU_LKDT_EN_MASK          0x0020
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_CMU_LKDT_EN_ALIGN         0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_CMU_LKDT_EN_BITS          1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_CMU_LKDT_EN_SHIFT         5

/* MGT_TOP_PMD_USR :: chip_intr_en :: ln_cmu_lkdt_en [04:04] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_CMU_LKDT_EN_MASK           0x0010
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_CMU_LKDT_EN_ALIGN          0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_CMU_LKDT_EN_BITS           1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_CMU_LKDT_EN_SHIFT          4

/* MGT_TOP_PMD_USR :: chip_intr_en :: ln_cdr_lkdt_en [03:03] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_CDR_LKDT_EN_MASK           0x0008
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_CDR_LKDT_EN_ALIGN          0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_CDR_LKDT_EN_BITS           1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_LN_CDR_LKDT_EN_SHIFT          3

/* MGT_TOP_PMD_USR :: chip_intr_en :: pad_opt_los_en [02:02] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_OPT_LOS_EN_MASK           0x0004
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_OPT_LOS_EN_ALIGN          0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_OPT_LOS_EN_BITS           1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_OPT_LOS_EN_SHIFT          2

/* MGT_TOP_PMD_USR :: chip_intr_en :: sys_cdr_lkdt_en [01:01] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_CDR_LKDT_EN_MASK          0x0002
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_CDR_LKDT_EN_ALIGN         0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_CDR_LKDT_EN_BITS          1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_SYS_CDR_LKDT_EN_SHIFT         1

/* MGT_TOP_PMD_USR :: chip_intr_en :: pad_mod_abs_en [00:00] */
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_MOD_ABS_EN_MASK           0x0001
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_MOD_ABS_EN_ALIGN          0
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_MOD_ABS_EN_BITS           1
#define MGT_TOP_PMD_USR_CHIP_INTR_EN_PAD_MOD_ABS_EN_SHIFT          0


/****************************************************************************
 * MGT_TOP_PMD_USR :: chip_intr_value
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: chip_intr_value :: micro_intr_value [15:14] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_MICRO_INTR_VALUE_MASK      0xc000
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_MICRO_INTR_VALUE_ALIGN     0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_MICRO_INTR_VALUE_BITS      2
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_MICRO_INTR_VALUE_SHIFT     14

/* MGT_TOP_PMD_USR :: chip_intr_value :: sw_intr_value [13:13] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SW_INTR_VALUE_MASK         0x2000
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SW_INTR_VALUE_ALIGN        0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SW_INTR_VALUE_BITS         1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SW_INTR_VALUE_SHIFT        13

/* MGT_TOP_PMD_USR :: chip_intr_value :: watchdog_timer_expiry [12:12] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_WATCHDOG_TIMER_EXPIRY_MASK 0x1000
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_WATCHDOG_TIMER_EXPIRY_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_WATCHDOG_TIMER_EXPIRY_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_WATCHDOG_TIMER_EXPIRY_SHIFT 12

/* MGT_TOP_PMD_USR :: chip_intr_value :: ln_autoneg_completed_value [11:11] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_AUTONEG_COMPLETED_VALUE_MASK 0x0800
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_AUTONEG_COMPLETED_VALUE_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_AUTONEG_COMPLETED_VALUE_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_AUTONEG_COMPLETED_VALUE_SHIFT 11

/* MGT_TOP_PMD_USR :: chip_intr_value :: sys_autoneg_completed_value [10:10] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_AUTONEG_COMPLETED_VALUE_MASK 0x0400
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_AUTONEG_COMPLETED_VALUE_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_AUTONEG_COMPLETED_VALUE_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_AUTONEG_COMPLETED_VALUE_SHIFT 10

/* MGT_TOP_PMD_USR :: chip_intr_value :: message_out_intr_value [09:09] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_MESSAGE_OUT_INTR_VALUE_MASK 0x0200
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_MESSAGE_OUT_INTR_VALUE_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_MESSAGE_OUT_INTR_VALUE_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_MESSAGE_OUT_INTR_VALUE_SHIFT 9

/* MGT_TOP_PMD_USR :: chip_intr_value :: gpio_in_1_value [08:08] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_GPIO_IN_1_VALUE_MASK       0x0100
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_GPIO_IN_1_VALUE_ALIGN      0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_GPIO_IN_1_VALUE_BITS       1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_GPIO_IN_1_VALUE_SHIFT      8

/* MGT_TOP_PMD_USR :: chip_intr_value :: gpio_in_0_value [07:07] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_GPIO_IN_0_VALUE_MASK       0x0080
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_GPIO_IN_0_VALUE_ALIGN      0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_GPIO_IN_0_VALUE_BITS       1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_GPIO_IN_0_VALUE_SHIFT      7

/* MGT_TOP_PMD_USR :: chip_intr_value :: extPCS_Link_value [06:06] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_EXTPCS_LINK_VALUE_MASK     0x0040
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_EXTPCS_LINK_VALUE_ALIGN    0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_EXTPCS_LINK_VALUE_BITS     1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_EXTPCS_LINK_VALUE_SHIFT    6

/* MGT_TOP_PMD_USR :: chip_intr_value :: sys_cmu_lkdt_value [05:05] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_CMU_LKDT_VALUE_MASK    0x0020
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_CMU_LKDT_VALUE_ALIGN   0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_CMU_LKDT_VALUE_BITS    1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_CMU_LKDT_VALUE_SHIFT   5

/* MGT_TOP_PMD_USR :: chip_intr_value :: ln_cmu_lkdt_value [04:04] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_CMU_LKDT_VALUE_MASK     0x0010
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_CMU_LKDT_VALUE_ALIGN    0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_CMU_LKDT_VALUE_BITS     1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_CMU_LKDT_VALUE_SHIFT    4

/* MGT_TOP_PMD_USR :: chip_intr_value :: ln_cdr_lkdt_value [03:03] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_CDR_LKDT_VALUE_MASK     0x0008
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_CDR_LKDT_VALUE_ALIGN    0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_CDR_LKDT_VALUE_BITS     1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_LN_CDR_LKDT_VALUE_SHIFT    3

/* MGT_TOP_PMD_USR :: chip_intr_value :: pad_rx__los_value [02:02] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_PAD_RX__LOS_VALUE_MASK     0x0004
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_PAD_RX__LOS_VALUE_ALIGN    0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_PAD_RX__LOS_VALUE_BITS     1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_PAD_RX__LOS_VALUE_SHIFT    2

/* MGT_TOP_PMD_USR :: chip_intr_value :: sys_cdr_lkdt_value [01:01] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_CDR_LKDT_VALUE_MASK    0x0002
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_CDR_LKDT_VALUE_ALIGN   0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_CDR_LKDT_VALUE_BITS    1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_SYS_CDR_LKDT_VALUE_SHIFT   1

/* MGT_TOP_PMD_USR :: chip_intr_value :: pad_mod_abs_value [00:00] */
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_PAD_MOD_ABS_VALUE_MASK     0x0001
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_PAD_MOD_ABS_VALUE_ALIGN    0
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_PAD_MOD_ABS_VALUE_BITS     1
#define MGT_TOP_PMD_USR_CHIP_INTR_VALUE_PAD_MOD_ABS_VALUE_SHIFT    0


/****************************************************************************
 * MGT_TOP_PMD_USR :: chip_intr_ctrl
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: uncorrectable_sram_error_ctrl [15:15] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_UNCORRECTABLE_SRAM_ERROR_CTRL_MASK 0x8000
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_UNCORRECTABLE_SRAM_ERROR_CTRL_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_UNCORRECTABLE_SRAM_ERROR_CTRL_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_UNCORRECTABLE_SRAM_ERROR_CTRL_SHIFT 15

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: correctable_sram_error_ctrl [14:14] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_CORRECTABLE_SRAM_ERROR_CTRL_MASK 0x4000
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_CORRECTABLE_SRAM_ERROR_CTRL_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_CORRECTABLE_SRAM_ERROR_CTRL_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_CORRECTABLE_SRAM_ERROR_CTRL_SHIFT 14

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: sw_attention_ctrl [13:13] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SW_ATTENTION_CTRL_MASK      0x2000
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SW_ATTENTION_CTRL_ALIGN     0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SW_ATTENTION_CTRL_BITS      1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SW_ATTENTION_CTRL_SHIFT     13

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: wdog_timer_expire_ctrl [12:12] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_WDOG_TIMER_EXPIRE_CTRL_MASK 0x1000
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_WDOG_TIMER_EXPIRE_CTRL_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_WDOG_TIMER_EXPIRE_CTRL_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_WDOG_TIMER_EXPIRE_CTRL_SHIFT 12

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: ln_autoneg_completed_ctrl [11:11] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_AUTONEG_COMPLETED_CTRL_MASK 0x0800
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_AUTONEG_COMPLETED_CTRL_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_AUTONEG_COMPLETED_CTRL_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_AUTONEG_COMPLETED_CTRL_SHIFT 11

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: sys_autoneg_completed_ctrl [10:10] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_AUTONEG_COMPLETED_CTRL_MASK 0x0400
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_AUTONEG_COMPLETED_CTRL_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_AUTONEG_COMPLETED_CTRL_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_AUTONEG_COMPLETED_CTRL_SHIFT 10

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: message_out_status_ctrl [09:09] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_MESSAGE_OUT_STATUS_CTRL_MASK 0x0200
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_MESSAGE_OUT_STATUS_CTRL_ALIGN 0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_MESSAGE_OUT_STATUS_CTRL_BITS 1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_MESSAGE_OUT_STATUS_CTRL_SHIFT 9

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: pad_gp_in_1_ctrl [08:08] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_GP_IN_1_CTRL_MASK       0x0100
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_GP_IN_1_CTRL_ALIGN      0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_GP_IN_1_CTRL_BITS       1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_GP_IN_1_CTRL_SHIFT      8

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: pad_gp_in_0_ctrl [07:07] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_GP_IN_0_CTRL_MASK       0x0080
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_GP_IN_0_CTRL_ALIGN      0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_GP_IN_0_CTRL_BITS       1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_GP_IN_0_CTRL_SHIFT      7

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: pad_extPCS_link_ctrl [06:06] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_EXTPCS_LINK_CTRL_MASK   0x0040
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_EXTPCS_LINK_CTRL_ALIGN  0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_EXTPCS_LINK_CTRL_BITS   1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_PAD_EXTPCS_LINK_CTRL_SHIFT  6

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: sys_cmu_lkdt_ctrl [05:05] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_CMU_LKDT_CTRL_MASK      0x0020
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_CMU_LKDT_CTRL_ALIGN     0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_CMU_LKDT_CTRL_BITS      1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_CMU_LKDT_CTRL_SHIFT     5

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: ln_cmu_lkdt_ctrl [04:04] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_CMU_LKDT_CTRL_MASK       0x0010
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_CMU_LKDT_CTRL_ALIGN      0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_CMU_LKDT_CTRL_BITS       1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_CMU_LKDT_CTRL_SHIFT      4

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: ln_cdr_lkdt_ctrl [03:03] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_CDR_LKDT_CTRL_MASK       0x0008
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_CDR_LKDT_CTRL_ALIGN      0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_CDR_LKDT_CTRL_BITS       1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_LN_CDR_LKDT_CTRL_SHIFT      3

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: opt_los_ctrl [02:02] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_OPT_LOS_CTRL_MASK           0x0004
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_OPT_LOS_CTRL_ALIGN          0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_OPT_LOS_CTRL_BITS           1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_OPT_LOS_CTRL_SHIFT          2

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: sys_cdr_lkdt_ctrl [01:01] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_CDR_LKDT_CTRL_MASK      0x0002
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_CDR_LKDT_CTRL_ALIGN     0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_CDR_LKDT_CTRL_BITS      1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_SYS_CDR_LKDT_CTRL_SHIFT     1

/* MGT_TOP_PMD_USR :: chip_intr_ctrl :: mod_abs_ctrl [00:00] */
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_MOD_ABS_CTRL_MASK           0x0001
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_MOD_ABS_CTRL_ALIGN          0
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_MOD_ABS_CTRL_BITS           1
#define MGT_TOP_PMD_USR_CHIP_INTR_CTRL_MOD_ABS_CTRL_SHIFT          0


/****************************************************************************
 * MGT_TOP_PMD_USR :: ch_intr_ctrl
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: ch_intr_ctrl :: reserved0 [15:14] */
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_RESERVED0_MASK                0xc000
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_RESERVED0_ALIGN               0
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_RESERVED0_BITS                2
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_RESERVED0_SHIFT               14

/* MGT_TOP_PMD_USR :: ch_intr_ctrl :: edc_interrupt_pad_control [13:06] */
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_EDC_INTERRUPT_PAD_CONTROL_MASK 0x3fc0
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_EDC_INTERRUPT_PAD_CONTROL_ALIGN 0
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_EDC_INTERRUPT_PAD_CONTROL_BITS 8
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_EDC_INTERRUPT_PAD_CONTROL_SHIFT 6

/* MGT_TOP_PMD_USR :: ch_intr_ctrl :: interrupt_clear_sel [05:05] */
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_INTERRUPT_CLEAR_SEL_MASK      0x0020
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_INTERRUPT_CLEAR_SEL_ALIGN     0
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_INTERRUPT_CLEAR_SEL_BITS      1
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_INTERRUPT_CLEAR_SEL_SHIFT     5

/* MGT_TOP_PMD_USR :: ch_intr_ctrl :: ch_intr_en [04:04] */
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_CH_INTR_EN_MASK               0x0010
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_CH_INTR_EN_ALIGN              0
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_CH_INTR_EN_BITS               1
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_CH_INTR_EN_SHIFT              4

/* MGT_TOP_PMD_USR :: ch_intr_ctrl :: chip_intr_ctr [03:00] */
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_CHIP_INTR_CTR_MASK            0x000f
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_CHIP_INTR_CTR_ALIGN           0
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_CHIP_INTR_CTR_BITS            4
#define MGT_TOP_PMD_USR_CH_INTR_CTRL_CHIP_INTR_CTR_SHIFT           0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_ovr_rev_id_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_ovr_rev_id_register :: otp_revid_override_ctl [15:15] */
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_OTP_REVID_OVERRIDE_CTL_MASK 0x8000
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_OTP_REVID_OVERRIDE_CTL_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_OTP_REVID_OVERRIDE_CTL_BITS 1
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_OTP_REVID_OVERRIDE_CTL_SHIFT 15

/* MGT_TOP_PMD_USR :: otp_ovr_rev_id_register :: reserved0 [14:08] */
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_RESERVED0_MASK     0x7f00
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_RESERVED0_ALIGN    0
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_RESERVED0_BITS     7
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_RESERVED0_SHIFT    8

/* MGT_TOP_PMD_USR :: otp_ovr_rev_id_register :: reg_chip_rev_id [07:00] */
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_REG_CHIP_REV_ID_MASK 0x00ff
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_REG_CHIP_REV_ID_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_REG_CHIP_REV_ID_BITS 8
#define MGT_TOP_PMD_USR_OTP_OVR_REV_ID_REGISTER_REG_CHIP_REV_ID_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_ovr_chp_id0_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_ovr_chp_id0_register :: otp_ovr_chp_id0 [15:00] */
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID0_REGISTER_OTP_OVR_CHP_ID0_MASK 0xffff
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID0_REGISTER_OTP_OVR_CHP_ID0_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID0_REGISTER_OTP_OVR_CHP_ID0_BITS 16
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID0_REGISTER_OTP_OVR_CHP_ID0_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_ovr_chp_id1_register
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_ovr_chp_id1_register :: otp_chipid_override_ctl [15:15] */
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_OTP_CHIPID_OVERRIDE_CTL_MASK 0x8000
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_OTP_CHIPID_OVERRIDE_CTL_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_OTP_CHIPID_OVERRIDE_CTL_BITS 1
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_OTP_CHIPID_OVERRIDE_CTL_SHIFT 15

/* MGT_TOP_PMD_USR :: otp_ovr_chp_id1_register :: reserved0 [14:04] */
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_RESERVED0_MASK    0x7ff0
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_RESERVED0_ALIGN   0
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_RESERVED0_BITS    11
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_RESERVED0_SHIFT   4

/* MGT_TOP_PMD_USR :: otp_ovr_chp_id1_register :: otp_ovr_chp_id1 [03:00] */
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_OTP_OVR_CHP_ID1_MASK 0x000f
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_OTP_OVR_CHP_ID1_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_OTP_OVR_CHP_ID1_BITS 4
#define MGT_TOP_PMD_USR_OTP_OVR_CHP_ID1_REGISTER_OTP_OVR_CHP_ID1_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_rdy_cnt_stat_reg
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_rdy_cnt_stat_reg :: reserved0 [15:13] */
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_RESERVED0_MASK        0xe000
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_RESERVED0_ALIGN       0
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_RESERVED0_BITS        3
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_RESERVED0_SHIFT       13

/* MGT_TOP_PMD_USR :: otp_rdy_cnt_stat_reg :: otp_rdy_cnt_status [12:08] */
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_RDY_CNT_STATUS_MASK 0x1f00
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_RDY_CNT_STATUS_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_RDY_CNT_STATUS_BITS 5
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_RDY_CNT_STATUS_SHIFT 8

/* MGT_TOP_PMD_USR :: otp_rdy_cnt_stat_reg :: reserved1 [07:02] */
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_RESERVED1_MASK        0x00fc
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_RESERVED1_ALIGN       0
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_RESERVED1_BITS        6
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_RESERVED1_SHIFT       2

/* MGT_TOP_PMD_USR :: otp_rdy_cnt_stat_reg :: otp_ready_sample_val [01:01] */
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_READY_SAMPLE_VAL_MASK 0x0002
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_READY_SAMPLE_VAL_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_READY_SAMPLE_VAL_BITS 1
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_READY_SAMPLE_VAL_SHIFT 1

/* MGT_TOP_PMD_USR :: otp_rdy_cnt_stat_reg :: otp_ready_raw_val [00:00] */
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_READY_RAW_VAL_MASK 0x0001
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_READY_RAW_VAL_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_READY_RAW_VAL_BITS 1
#define MGT_TOP_PMD_USR_OTP_RDY_CNT_STAT_REG_OTP_READY_RAW_VAL_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_ovr_device_id_0
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_ovr_device_id_0 :: otp_ovr_device_id_0 [15:00] */
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_OTP_OVR_DEVICE_ID_0_MASK 0xffff
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_OTP_OVR_DEVICE_ID_0_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_OTP_OVR_DEVICE_ID_0_BITS 16
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_OTP_OVR_DEVICE_ID_0_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_ovr_device_id_1
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_ovr_device_id_1 :: otp_ovr_device_id_1 [15:00] */
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_1_OTP_OVR_DEVICE_ID_1_MASK 0xffff
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_1_OTP_OVR_DEVICE_ID_1_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_1_OTP_OVR_DEVICE_ID_1_BITS 16
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_1_OTP_OVR_DEVICE_ID_1_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: otp_ovr_device_id_0_1_cntl
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: otp_ovr_device_id_0_1_cntl :: reserved0 [15:02] */
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_RESERVED0_MASK  0xfffc
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_RESERVED0_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_RESERVED0_BITS  14
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_RESERVED0_SHIFT 2

/* MGT_TOP_PMD_USR :: otp_ovr_device_id_0_1_cntl :: otp_ovr_device_id_1_cntl [01:01] */
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_OTP_OVR_DEVICE_ID_1_CNTL_MASK 0x0002
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_OTP_OVR_DEVICE_ID_1_CNTL_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_OTP_OVR_DEVICE_ID_1_CNTL_BITS 1
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_OTP_OVR_DEVICE_ID_1_CNTL_SHIFT 1

/* MGT_TOP_PMD_USR :: otp_ovr_device_id_0_1_cntl :: otp_ovr_device_id_0_cntl [00:00] */
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_OTP_OVR_DEVICE_ID_0_CNTL_MASK 0x0001
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_OTP_OVR_DEVICE_ID_0_CNTL_ALIGN 0
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_OTP_OVR_DEVICE_ID_0_CNTL_BITS 1
#define MGT_TOP_PMD_USR_OTP_OVR_DEVICE_ID_0_1_CNTL_OTP_OVR_DEVICE_ID_0_CNTL_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: die_id
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: die_id :: reserved0 [15:08] */
#define MGT_TOP_PMD_USR_DIE_ID_RESERVED0_MASK                      0xff00
#define MGT_TOP_PMD_USR_DIE_ID_RESERVED0_ALIGN                     0
#define MGT_TOP_PMD_USR_DIE_ID_RESERVED0_BITS                      8
#define MGT_TOP_PMD_USR_DIE_ID_RESERVED0_SHIFT                     8

/* MGT_TOP_PMD_USR :: die_id :: die_id [07:00] */
#define MGT_TOP_PMD_USR_DIE_ID_DIE_ID_MASK                         0x00ff
#define MGT_TOP_PMD_USR_DIE_ID_DIE_ID_ALIGN                        0
#define MGT_TOP_PMD_USR_DIE_ID_DIE_ID_BITS                         8
#define MGT_TOP_PMD_USR_DIE_ID_DIE_ID_SHIFT                        0


/****************************************************************************
 * MGT_TOP_PMD_USR :: optical_configuration
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: optical_configuration :: optxenb_lvl [15:15] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTXENB_LVL_MASK     0x8000
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTXENB_LVL_ALIGN    0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTXENB_LVL_BITS     1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTXENB_LVL_SHIFT    15

/* MGT_TOP_PMD_USR :: optical_configuration :: man_oplosb_en [14:14] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_OPLOSB_EN_MASK   0x4000
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_OPLOSB_EN_ALIGN  0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_OPLOSB_EN_BITS   1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_OPLOSB_EN_SHIFT  14

/* MGT_TOP_PMD_USR :: optical_configuration :: man_extPCS_Link [13:13] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_EXTPCS_LINK_MASK 0x2000
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_EXTPCS_LINK_ALIGN 0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_EXTPCS_LINK_BITS 1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_EXTPCS_LINK_SHIFT 13

/* MGT_TOP_PMD_USR :: optical_configuration :: man_txon_en [12:12] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_TXON_EN_MASK     0x1000
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_TXON_EN_ALIGN    0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_TXON_EN_BITS     1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MAN_TXON_EN_SHIFT    12

/* MGT_TOP_PMD_USR :: optical_configuration :: optrxlos_lvl [11:11] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTRXLOS_LVL_MASK    0x0800
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTRXLOS_LVL_ALIGN   0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTRXLOS_LVL_BITS    1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTRXLOS_LVL_SHIFT   11

/* MGT_TOP_PMD_USR :: optical_configuration :: optxon_lvl [10:10] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTXON_LVL_MASK      0x0400
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTXON_LVL_ALIGN     0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTXON_LVL_BITS      1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_OPTXON_LVL_SHIFT     10

/* MGT_TOP_PMD_USR :: optical_configuration :: Enable_extPCS_Link_for_Line [09:09] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_ENABLE_EXTPCS_LINK_FOR_LINE_MASK 0x0200
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_ENABLE_EXTPCS_LINK_FOR_LINE_ALIGN 0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_ENABLE_EXTPCS_LINK_FOR_LINE_BITS 1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_ENABLE_EXTPCS_LINK_FOR_LINE_SHIFT 9

/* MGT_TOP_PMD_USR :: optical_configuration :: Enable_extPCS_Link_for_Sys [08:08] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_ENABLE_EXTPCS_LINK_FOR_SYS_MASK 0x0100
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_ENABLE_EXTPCS_LINK_FOR_SYS_ALIGN 0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_ENABLE_EXTPCS_LINK_FOR_SYS_BITS 1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_ENABLE_EXTPCS_LINK_FOR_SYS_SHIFT 8

/* MGT_TOP_PMD_USR :: optical_configuration :: txenb [07:07] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXENB_MASK           0x0080
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXENB_ALIGN          0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXENB_BITS           1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXENB_SHIFT          7

/* MGT_TOP_PMD_USR :: optical_configuration :: md_opt_losb [06:06] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MD_OPT_LOSB_MASK     0x0040
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MD_OPT_LOSB_ALIGN    0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MD_OPT_LOSB_BITS     1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_MD_OPT_LOSB_SHIFT    6

/* MGT_TOP_PMD_USR :: optical_configuration :: extPCS_Link [05:05] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EXTPCS_LINK_MASK     0x0020
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EXTPCS_LINK_ALIGN    0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EXTPCS_LINK_BITS     1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EXTPCS_LINK_SHIFT    5

/* MGT_TOP_PMD_USR :: optical_configuration :: txofft [04:04] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXOFFT_MASK          0x0010
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXOFFT_ALIGN         0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXOFFT_BITS          1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXOFFT_SHIFT         4

/* MGT_TOP_PMD_USR :: optical_configuration :: txenb_oen [03:03] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXENB_OEN_MASK       0x0008
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXENB_OEN_ALIGN      0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXENB_OEN_BITS       1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_TXENB_OEN_SHIFT      3

/* MGT_TOP_PMD_USR :: optical_configuration :: reserved_txon_oen [02:02] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_RESERVED_TXON_OEN_MASK 0x0004
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_RESERVED_TXON_OEN_ALIGN 0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_RESERVED_TXON_OEN_BITS 1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_RESERVED_TXON_OEN_SHIFT 2

/* MGT_TOP_PMD_USR :: optical_configuration :: en_txenb_int [01:01] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EN_TXENB_INT_MASK    0x0002
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EN_TXENB_INT_ALIGN   0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EN_TXENB_INT_BITS    1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EN_TXENB_INT_SHIFT   1

/* MGT_TOP_PMD_USR :: optical_configuration :: en_txonb_int [00:00] */
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EN_TXONB_INT_MASK    0x0001
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EN_TXONB_INT_ALIGN   0
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EN_TXONB_INT_BITS    1
#define MGT_TOP_PMD_USR_OPTICAL_CONFIGURATION_EN_TXONB_INT_SHIFT   0


/****************************************************************************
 * MGT_TOP_PMD_USR :: broadcast_ctrl
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: broadcast_ctrl :: reserved0 [15:07] */
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_RESERVED0_MASK              0xff80
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_RESERVED0_ALIGN             0
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_RESERVED0_BITS              9
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_RESERVED0_SHIFT             7

/* MGT_TOP_PMD_USR :: broadcast_ctrl :: multiport_address [06:02] */
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_MULTIPORT_ADDRESS_MASK      0x007c
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_MULTIPORT_ADDRESS_ALIGN     0
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_MULTIPORT_ADDRESS_BITS      5
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_MULTIPORT_ADDRESS_SHIFT     2

/* MGT_TOP_PMD_USR :: broadcast_ctrl :: multiport_addressing_enable [01:01] */
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_MULTIPORT_ADDRESSING_ENABLE_MASK 0x0002
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_MULTIPORT_ADDRESSING_ENABLE_ALIGN 0
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_MULTIPORT_ADDRESSING_ENABLE_BITS 1
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_MULTIPORT_ADDRESSING_ENABLE_SHIFT 1

/* MGT_TOP_PMD_USR :: broadcast_ctrl :: broadcast_mode_enable [00:00] */
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_BROADCAST_MODE_ENABLE_MASK  0x0001
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_BROADCAST_MODE_ENABLE_ALIGN 0
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_BROADCAST_MODE_ENABLE_BITS  1
#define MGT_TOP_PMD_USR_BROADCAST_CTRL_BROADCAST_MODE_ENABLE_SHIFT 0


/****************************************************************************
 * MGT_TOP_PMD_USR :: xpmd_regs_sel
 ***************************************************************************/
/* MGT_TOP_PMD_USR :: xpmd_regs_sel :: reserved0 [15:01] */
#define MGT_TOP_PMD_USR_XPMD_REGS_SEL_RESERVED0_MASK               0xfffe
#define MGT_TOP_PMD_USR_XPMD_REGS_SEL_RESERVED0_ALIGN              0
#define MGT_TOP_PMD_USR_XPMD_REGS_SEL_RESERVED0_BITS               15
#define MGT_TOP_PMD_USR_XPMD_REGS_SEL_RESERVED0_SHIFT              1

/* MGT_TOP_PMD_USR :: xpmd_regs_sel :: select_sys_registers [00:00] */
#define MGT_TOP_PMD_USR_XPMD_REGS_SEL_SELECT_SYS_REGISTERS_MASK    0x0001
#define MGT_TOP_PMD_USR_XPMD_REGS_SEL_SELECT_SYS_REGISTERS_ALIGN   0
#define MGT_TOP_PMD_USR_XPMD_REGS_SEL_SELECT_SYS_REGISTERS_BITS    1
#define MGT_TOP_PMD_USR_XPMD_REGS_SEL_SELECT_SYS_REGISTERS_SHIFT   0


/****************************************************************************
 * merlin_gallardo_mgt_top_blk_MGT_TOP_CMN_CTLR
 ***************************************************************************/
/****************************************************************************
 * MGT_TOP_CMN_CTLR :: regualtor_ctrl
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: regualtor_ctrl :: reserved0 [15:15] */
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_RESERVED0_MASK             0x8000
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_RESERVED0_ALIGN            0
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_RESERVED0_BITS             1
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_RESERVED0_SHIFT            15

/* MGT_TOP_CMN_CTLR :: regualtor_ctrl :: vregcntl_en [14:14] */
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCNTL_EN_MASK           0x4000
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCNTL_EN_ALIGN          0
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCNTL_EN_BITS           1
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCNTL_EN_SHIFT          14

/* MGT_TOP_CMN_CTLR :: regualtor_ctrl :: pwrdn [13:13] */
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_PWRDN_MASK                 0x2000
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_PWRDN_ALIGN                0
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_PWRDN_BITS                 1
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_PWRDN_SHIFT                13

/* MGT_TOP_CMN_CTLR :: regualtor_ctrl :: vregctl_100kohm [12:12] */
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_100KOHM_MASK       0x1000
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_100KOHM_ALIGN      0
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_100KOHM_BITS       1
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_100KOHM_SHIFT      12

/* MGT_TOP_CMN_CTLR :: regualtor_ctrl :: vregctl_Rpole_tuning [11:10] */
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_RPOLE_TUNING_MASK  0x0c00
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_RPOLE_TUNING_ALIGN 0
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_RPOLE_TUNING_BITS  2
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_RPOLE_TUNING_SHIFT 10

/* MGT_TOP_CMN_CTLR :: regualtor_ctrl :: vregctl_output_voltage_ctrl [09:09] */
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_OUTPUT_VOLTAGE_CTRL_MASK 0x0200
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_OUTPUT_VOLTAGE_CTRL_ALIGN 0
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_OUTPUT_VOLTAGE_CTRL_BITS 1
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_OUTPUT_VOLTAGE_CTRL_SHIFT 9

/* MGT_TOP_CMN_CTLR :: regualtor_ctrl :: reserved1 [08:08] */
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_RESERVED1_MASK             0x0100
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_RESERVED1_ALIGN            0
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_RESERVED1_BITS             1
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_RESERVED1_SHIFT            8

/* MGT_TOP_CMN_CTLR :: regualtor_ctrl :: vregctl_Ovolt_tuning [07:04] */
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_OVOLT_TUNING_MASK  0x00f0
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_OVOLT_TUNING_ALIGN 0
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_OVOLT_TUNING_BITS  4
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_OVOLT_TUNING_SHIFT 4

/* MGT_TOP_CMN_CTLR :: regualtor_ctrl :: vregctl_Bg_tuning [03:00] */
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_BG_TUNING_MASK     0x000f
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_BG_TUNING_ALIGN    0
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_BG_TUNING_BITS     4
#define MGT_TOP_CMN_CTLR_REGUALTOR_CTRL_VREGCTL_BG_TUNING_SHIFT    0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: gen_ctrl
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: gen_ctrl :: m51_i2c_wr_ctrl [15:12] */
#define MGT_TOP_CMN_CTLR_GEN_CTRL_M51_I2C_WR_CTRL_MASK             0xf000
#define MGT_TOP_CMN_CTLR_GEN_CTRL_M51_I2C_WR_CTRL_ALIGN            0
#define MGT_TOP_CMN_CTLR_GEN_CTRL_M51_I2C_WR_CTRL_BITS             4
#define MGT_TOP_CMN_CTLR_GEN_CTRL_M51_I2C_WR_CTRL_SHIFT            12

/* MGT_TOP_CMN_CTLR :: gen_ctrl :: reserved0 [11:09] */
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED0_MASK                   0x0e00
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED0_ALIGN                  0
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED0_BITS                   3
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED0_SHIFT                  9

/* MGT_TOP_CMN_CTLR :: gen_ctrl :: uc_refclk_sel [08:08] */
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UC_REFCLK_SEL_MASK               0x0100
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UC_REFCLK_SEL_ALIGN              0
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UC_REFCLK_SEL_BITS               1
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UC_REFCLK_SEL_SHIFT              8

/* MGT_TOP_CMN_CTLR :: gen_ctrl :: reserved1 [07:07] */
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED1_MASK                   0x0080
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED1_ALIGN                  0
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED1_BITS                   1
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED1_SHIFT                  7

/* MGT_TOP_CMN_CTLR :: gen_ctrl :: ucclksel_speed_sel [06:06] */
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UCCLKSEL_SPEED_SEL_MASK          0x0040
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UCCLKSEL_SPEED_SEL_ALIGN         0
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UCCLKSEL_SPEED_SEL_BITS          1
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UCCLKSEL_SPEED_SEL_SHIFT         6

/* MGT_TOP_CMN_CTLR :: gen_ctrl :: reserved2 [05:03] */
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED2_MASK                   0x0038
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED2_ALIGN                  0
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED2_BITS                   3
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED2_SHIFT                  3

/* MGT_TOP_CMN_CTLR :: gen_ctrl :: ucrst [02:02] */
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UCRST_MASK                       0x0004
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UCRST_ALIGN                      0
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UCRST_BITS                       1
#define MGT_TOP_CMN_CTLR_GEN_CTRL_UCRST_SHIFT                      2

/* MGT_TOP_CMN_CTLR :: gen_ctrl :: reserved3 [01:00] */
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED3_MASK                   0x0003
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED3_ALIGN                  0
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED3_BITS                   2
#define MGT_TOP_CMN_CTLR_GEN_CTRL_RESERVED3_SHIFT                  0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: ram_lwpr_ctrl
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: ram_lwpr_ctrl :: RAM_LWPR_CTRL [15:08] */
#define MGT_TOP_CMN_CTLR_RAM_LWPR_CTRL_RAM_LWPR_CTRL_MASK          0xff00
#define MGT_TOP_CMN_CTLR_RAM_LWPR_CTRL_RAM_LWPR_CTRL_ALIGN         0
#define MGT_TOP_CMN_CTLR_RAM_LWPR_CTRL_RAM_LWPR_CTRL_BITS          8
#define MGT_TOP_CMN_CTLR_RAM_LWPR_CTRL_RAM_LWPR_CTRL_SHIFT         8

/* MGT_TOP_CMN_CTLR :: ram_lwpr_ctrl :: reserved0 [07:00] */
#define MGT_TOP_CMN_CTLR_RAM_LWPR_CTRL_RESERVED0_MASK              0x00ff
#define MGT_TOP_CMN_CTLR_RAM_LWPR_CTRL_RESERVED0_ALIGN             0
#define MGT_TOP_CMN_CTLR_RAM_LWPR_CTRL_RESERVED0_BITS              8
#define MGT_TOP_CMN_CTLR_RAM_LWPR_CTRL_RESERVED0_SHIFT             0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: msg_in
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: msg_in :: message_in [15:00] */
#define MGT_TOP_CMN_CTLR_MSG_IN_MESSAGE_IN_MASK                    0xffff
#define MGT_TOP_CMN_CTLR_MSG_IN_MESSAGE_IN_ALIGN                   0
#define MGT_TOP_CMN_CTLR_MSG_IN_MESSAGE_IN_BITS                    16
#define MGT_TOP_CMN_CTLR_MSG_IN_MESSAGE_IN_SHIFT                   0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: msg_out
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: msg_out :: message_out [15:00] */
#define MGT_TOP_CMN_CTLR_MSG_OUT_MESSAGE_OUT_MASK                  0xffff
#define MGT_TOP_CMN_CTLR_MSG_OUT_MESSAGE_OUT_ALIGN                 0
#define MGT_TOP_CMN_CTLR_MSG_OUT_MESSAGE_OUT_BITS                  16
#define MGT_TOP_CMN_CTLR_MSG_OUT_MESSAGE_OUT_SHIFT                 0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: errored_sram_address
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: errored_sram_address :: current_sram_address [15:00] */
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_ADDRESS_CURRENT_SRAM_ADDRESS_MASK 0xffff
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_ADDRESS_CURRENT_SRAM_ADDRESS_ALIGN 0
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_ADDRESS_CURRENT_SRAM_ADDRESS_BITS 16
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_ADDRESS_CURRENT_SRAM_ADDRESS_SHIFT 0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: errored_sram_data
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: errored_sram_data :: Uncorrectable_Low_Mem_Error [15:15] */
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_UNCORRECTABLE_LOW_MEM_ERROR_MASK 0x8000
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_UNCORRECTABLE_LOW_MEM_ERROR_ALIGN 0
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_UNCORRECTABLE_LOW_MEM_ERROR_BITS 1
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_UNCORRECTABLE_LOW_MEM_ERROR_SHIFT 15

/* MGT_TOP_CMN_CTLR :: errored_sram_data :: Low_Mem_Error_Corrected [14:14] */
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_LOW_MEM_ERROR_CORRECTED_MASK 0x4000
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_LOW_MEM_ERROR_CORRECTED_ALIGN 0
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_LOW_MEM_ERROR_CORRECTED_BITS 1
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_LOW_MEM_ERROR_CORRECTED_SHIFT 14

/* MGT_TOP_CMN_CTLR :: errored_sram_data :: Uncorrectable_High_Mem_Error [13:13] */
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_UNCORRECTABLE_HIGH_MEM_ERROR_MASK 0x2000
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_UNCORRECTABLE_HIGH_MEM_ERROR_ALIGN 0
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_UNCORRECTABLE_HIGH_MEM_ERROR_BITS 1
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_UNCORRECTABLE_HIGH_MEM_ERROR_SHIFT 13

/* MGT_TOP_CMN_CTLR :: errored_sram_data :: High_Mem_Error_Corrected [12:12] */
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_HIGH_MEM_ERROR_CORRECTED_MASK 0x1000
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_HIGH_MEM_ERROR_CORRECTED_ALIGN 0
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_HIGH_MEM_ERROR_CORRECTED_BITS 1
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_HIGH_MEM_ERROR_CORRECTED_SHIFT 12

/* MGT_TOP_CMN_CTLR :: errored_sram_data :: reserved0 [11:10] */
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_RESERVED0_MASK          0x0c00
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_RESERVED0_ALIGN         0
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_RESERVED0_BITS          2
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_RESERVED0_SHIFT         10

/* MGT_TOP_CMN_CTLR :: errored_sram_data :: Mem_Error_Corrected_8051_interrupt_mask [09:09] */
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_MEM_ERROR_CORRECTED_8051_INTERRUPT_MASK_MASK 0x0200
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_MEM_ERROR_CORRECTED_8051_INTERRUPT_MASK_ALIGN 0
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_MEM_ERROR_CORRECTED_8051_INTERRUPT_MASK_BITS 1
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_MEM_ERROR_CORRECTED_8051_INTERRUPT_MASK_SHIFT 9

/* MGT_TOP_CMN_CTLR :: errored_sram_data :: Mem_Error_Uncorrected_8051_interrupt_mask [08:08] */
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_MEM_ERROR_UNCORRECTED_8051_INTERRUPT_MASK_MASK 0x0100
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_MEM_ERROR_UNCORRECTED_8051_INTERRUPT_MASK_ALIGN 0
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_MEM_ERROR_UNCORRECTED_8051_INTERRUPT_MASK_BITS 1
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_MEM_ERROR_UNCORRECTED_8051_INTERRUPT_MASK_SHIFT 8

/* MGT_TOP_CMN_CTLR :: errored_sram_data :: current_sram_data [07:00] */
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_CURRENT_SRAM_DATA_MASK  0x00ff
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_CURRENT_SRAM_DATA_ALIGN 0
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_CURRENT_SRAM_DATA_BITS  8
#define MGT_TOP_CMN_CTLR_ERRORED_SRAM_DATA_CURRENT_SRAM_DATA_SHIFT 0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: gp_reg_0
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: gp_reg_0 :: Enable_line_3_0 [15:12] */
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_LINE_3_0_MASK             0xf000
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_LINE_3_0_ALIGN            0
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_LINE_3_0_BITS             4
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_LINE_3_0_SHIFT            12

/* MGT_TOP_CMN_CTLR :: gp_reg_0 :: Enable_system_3_0 [11:08] */
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_SYSTEM_3_0_MASK           0x0f00
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_SYSTEM_3_0_ALIGN          0
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_SYSTEM_3_0_BITS           4
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_SYSTEM_3_0_SHIFT          8

/* MGT_TOP_CMN_CTLR :: gp_reg_0 :: Disable_Tx_Squelching [07:07] */
#define MGT_TOP_CMN_CTLR_GP_REG_0_DISABLE_TX_SQUELCHING_MASK       0x0080
#define MGT_TOP_CMN_CTLR_GP_REG_0_DISABLE_TX_SQUELCHING_ALIGN      0
#define MGT_TOP_CMN_CTLR_GP_REG_0_DISABLE_TX_SQUELCHING_BITS       1
#define MGT_TOP_CMN_CTLR_GP_REG_0_DISABLE_TX_SQUELCHING_SHIFT      7

/* MGT_TOP_CMN_CTLR :: gp_reg_0 :: gpreg0_data_6_3 [06:03] */
#define MGT_TOP_CMN_CTLR_GP_REG_0_GPREG0_DATA_6_3_MASK             0x0078
#define MGT_TOP_CMN_CTLR_GP_REG_0_GPREG0_DATA_6_3_ALIGN            0
#define MGT_TOP_CMN_CTLR_GP_REG_0_GPREG0_DATA_6_3_BITS             4
#define MGT_TOP_CMN_CTLR_GP_REG_0_GPREG0_DATA_6_3_SHIFT            3

/* MGT_TOP_CMN_CTLR :: gp_reg_0 :: i2c_operation_in_progress [02:02] */
#define MGT_TOP_CMN_CTLR_GP_REG_0_I2C_OPERATION_IN_PROGRESS_MASK   0x0004
#define MGT_TOP_CMN_CTLR_GP_REG_0_I2C_OPERATION_IN_PROGRESS_ALIGN  0
#define MGT_TOP_CMN_CTLR_GP_REG_0_I2C_OPERATION_IN_PROGRESS_BITS   1
#define MGT_TOP_CMN_CTLR_GP_REG_0_I2C_OPERATION_IN_PROGRESS_SHIFT  2

/* MGT_TOP_CMN_CTLR :: gp_reg_0 :: Enable_QSFP_Mod_detect [01:01] */
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_QSFP_MOD_DETECT_MASK      0x0002
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_QSFP_MOD_DETECT_ALIGN     0
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_QSFP_MOD_DETECT_BITS      1
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_QSFP_MOD_DETECT_SHIFT     1

/* MGT_TOP_CMN_CTLR :: gp_reg_0 :: Enable_SFP_Mod_detect [00:00] */
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_SFP_MOD_DETECT_MASK       0x0001
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_SFP_MOD_DETECT_ALIGN      0
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_SFP_MOD_DETECT_BITS       1
#define MGT_TOP_CMN_CTLR_GP_REG_0_ENABLE_SFP_MOD_DETECT_SHIFT      0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: gp_reg_1
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: gp_reg_1 :: gpreg1_data [15:00] */
#define MGT_TOP_CMN_CTLR_GP_REG_1_GPREG1_DATA_MASK                 0xffff
#define MGT_TOP_CMN_CTLR_GP_REG_1_GPREG1_DATA_ALIGN                0
#define MGT_TOP_CMN_CTLR_GP_REG_1_GPREG1_DATA_BITS                 16
#define MGT_TOP_CMN_CTLR_GP_REG_1_GPREG1_DATA_SHIFT                0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: gp_reg_2
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: gp_reg_2 :: gpreg2_data [15:00] */
#define MGT_TOP_CMN_CTLR_GP_REG_2_GPREG2_DATA_MASK                 0xffff
#define MGT_TOP_CMN_CTLR_GP_REG_2_GPREG2_DATA_ALIGN                0
#define MGT_TOP_CMN_CTLR_GP_REG_2_GPREG2_DATA_BITS                 16
#define MGT_TOP_CMN_CTLR_GP_REG_2_GPREG2_DATA_SHIFT                0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: gp_reg_3
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: gp_reg_3 :: gpreg3_data [15:00] */
#define MGT_TOP_CMN_CTLR_GP_REG_3_GPREG3_DATA_MASK                 0xffff
#define MGT_TOP_CMN_CTLR_GP_REG_3_GPREG3_DATA_ALIGN                0
#define MGT_TOP_CMN_CTLR_GP_REG_3_GPREG3_DATA_BITS                 16
#define MGT_TOP_CMN_CTLR_GP_REG_3_GPREG3_DATA_SHIFT                0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: gp_reg_4
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: gp_reg_4 :: gpreg4_data [15:00] */
#define MGT_TOP_CMN_CTLR_GP_REG_4_GPREG4_DATA_MASK                 0xffff
#define MGT_TOP_CMN_CTLR_GP_REG_4_GPREG4_DATA_ALIGN                0
#define MGT_TOP_CMN_CTLR_GP_REG_4_GPREG4_DATA_BITS                 16
#define MGT_TOP_CMN_CTLR_GP_REG_4_GPREG4_DATA_SHIFT                0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: fw_param
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: fw_param :: param [15:00] */
#define MGT_TOP_CMN_CTLR_FW_PARAM_PARAM_MASK                       0xffff
#define MGT_TOP_CMN_CTLR_FW_PARAM_PARAM_ALIGN                      0
#define MGT_TOP_CMN_CTLR_FW_PARAM_PARAM_BITS                       16
#define MGT_TOP_CMN_CTLR_FW_PARAM_PARAM_SHIFT                      0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: fw_cmd
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: fw_cmd :: cmd [15:00] */
#define MGT_TOP_CMN_CTLR_FW_CMD_CMD_MASK                           0xffff
#define MGT_TOP_CMN_CTLR_FW_CMD_CMD_ALIGN                          0
#define MGT_TOP_CMN_CTLR_FW_CMD_CMD_BITS                           16
#define MGT_TOP_CMN_CTLR_FW_CMD_CMD_SHIFT                          0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: heartbeat_count
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: heartbeat_count :: count [15:00] */
#define MGT_TOP_CMN_CTLR_HEARTBEAT_COUNT_COUNT_MASK                0xffff
#define MGT_TOP_CMN_CTLR_HEARTBEAT_COUNT_COUNT_ALIGN               0
#define MGT_TOP_CMN_CTLR_HEARTBEAT_COUNT_COUNT_BITS                16
#define MGT_TOP_CMN_CTLR_HEARTBEAT_COUNT_COUNT_SHIFT               0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: logad_ctrl
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: logad_ctrl :: reserved0 [15:08] */
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_RESERVED0_MASK                 0xff00
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_RESERVED0_ALIGN                0
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_RESERVED0_BITS                 8
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_RESERVED0_SHIFT                8

/* MGT_TOP_CMN_CTLR :: logad_ctrl :: Logical_ch_numbering_4_physical_ch3 [07:06] */
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH3_MASK 0x00c0
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH3_ALIGN 0
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH3_BITS 2
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH3_SHIFT 6

/* MGT_TOP_CMN_CTLR :: logad_ctrl :: Logical_ch_numbering_4_physical_ch2 [05:04] */
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH2_MASK 0x0030
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH2_ALIGN 0
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH2_BITS 2
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH2_SHIFT 4

/* MGT_TOP_CMN_CTLR :: logad_ctrl :: Logical_ch_numbering_4_physical_ch1 [03:02] */
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH1_MASK 0x000c
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH1_ALIGN 0
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH1_BITS 2
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH1_SHIFT 2

/* MGT_TOP_CMN_CTLR :: logad_ctrl :: Logical_ch_numbering_4_physical_ch0 [01:00] */
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH0_MASK 0x0003
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH0_ALIGN 0
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH0_BITS 2
#define MGT_TOP_CMN_CTLR_LOGAD_CTRL_LOGICAL_CH_NUMBERING_4_PHYSICAL_CH0_SHIFT 0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: sw_reset_ctrl
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: sw_reset_ctrl :: reserved0 [15:03] */
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_RESERVED0_MASK              0xfff8
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_RESERVED0_ALIGN             0
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_RESERVED0_BITS              13
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_RESERVED0_SHIFT             3

/* MGT_TOP_CMN_CTLR :: sw_reset_ctrl :: i2c_master_blk_sw_rst [02:02] */
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_I2C_MASTER_BLK_SW_RST_MASK  0x0004
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_I2C_MASTER_BLK_SW_RST_ALIGN 0
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_I2C_MASTER_BLK_SW_RST_BITS  1
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_I2C_MASTER_BLK_SW_RST_SHIFT 2

/* MGT_TOP_CMN_CTLR :: sw_reset_ctrl :: i2c_slave_blk_sw_rst [01:01] */
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_I2C_SLAVE_BLK_SW_RST_MASK   0x0002
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_I2C_SLAVE_BLK_SW_RST_ALIGN  0
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_I2C_SLAVE_BLK_SW_RST_BITS   1
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_I2C_SLAVE_BLK_SW_RST_SHIFT  1

/* MGT_TOP_CMN_CTLR :: sw_reset_ctrl :: reserved1 [00:00] */
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_RESERVED1_MASK              0x0001
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_RESERVED1_ALIGN             0
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_RESERVED1_BITS              1
#define MGT_TOP_CMN_CTLR_SW_RESET_CTRL_RESERVED1_SHIFT             0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: misc_ctrl
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: misc_ctrl :: Serial_broadcast_Mode [15:15] */
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SERIAL_BROADCAST_MODE_MASK      0x8000
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SERIAL_BROADCAST_MODE_ALIGN     0
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SERIAL_BROADCAST_MODE_BITS      1
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SERIAL_BROADCAST_MODE_SHIFT     15

/* MGT_TOP_CMN_CTLR :: misc_ctrl :: rescal_done_stat [14:14] */
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESCAL_DONE_STAT_MASK           0x4000
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESCAL_DONE_STAT_ALIGN          0
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESCAL_DONE_STAT_BITS           1
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESCAL_DONE_STAT_SHIFT          14

/* MGT_TOP_CMN_CTLR :: misc_ctrl :: rxd_oen [13:13] */
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RXD_OEN_MASK                    0x2000
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RXD_OEN_ALIGN                   0
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RXD_OEN_BITS                    1
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RXD_OEN_SHIFT                   13

/* MGT_TOP_CMN_CTLR :: misc_ctrl :: txd_oen [12:12] */
#define MGT_TOP_CMN_CTLR_MISC_CTRL_TXD_OEN_MASK                    0x1000
#define MGT_TOP_CMN_CTLR_MISC_CTRL_TXD_OEN_ALIGN                   0
#define MGT_TOP_CMN_CTLR_MISC_CTRL_TXD_OEN_BITS                    1
#define MGT_TOP_CMN_CTLR_MISC_CTRL_TXD_OEN_SHIFT                   12

/* MGT_TOP_CMN_CTLR :: misc_ctrl :: rescal [11:08] */
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESCAL_MASK                     0x0f00
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESCAL_ALIGN                    0
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESCAL_BITS                     4
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESCAL_SHIFT                    8

/* MGT_TOP_CMN_CTLR :: misc_ctrl :: global_chip_intr_en [07:07] */
#define MGT_TOP_CMN_CTLR_MISC_CTRL_GLOBAL_CHIP_INTR_EN_MASK        0x0080
#define MGT_TOP_CMN_CTLR_MISC_CTRL_GLOBAL_CHIP_INTR_EN_ALIGN       0
#define MGT_TOP_CMN_CTLR_MISC_CTRL_GLOBAL_CHIP_INTR_EN_BITS        1
#define MGT_TOP_CMN_CTLR_MISC_CTRL_GLOBAL_CHIP_INTR_EN_SHIFT       7

/* MGT_TOP_CMN_CTLR :: misc_ctrl :: reserved0 [06:05] */
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESERVED0_MASK                  0x0060
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESERVED0_ALIGN                 0
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESERVED0_BITS                  2
#define MGT_TOP_CMN_CTLR_MISC_CTRL_RESERVED0_SHIFT                 5

/* MGT_TOP_CMN_CTLR :: misc_ctrl :: message_out_status [04:04] */
#define MGT_TOP_CMN_CTLR_MISC_CTRL_MESSAGE_OUT_STATUS_MASK         0x0010
#define MGT_TOP_CMN_CTLR_MISC_CTRL_MESSAGE_OUT_STATUS_ALIGN        0
#define MGT_TOP_CMN_CTLR_MISC_CTRL_MESSAGE_OUT_STATUS_BITS         1
#define MGT_TOP_CMN_CTLR_MISC_CTRL_MESSAGE_OUT_STATUS_SHIFT        4

/* MGT_TOP_CMN_CTLR :: misc_ctrl :: spi_download_size [03:03] */
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SPI_DOWNLOAD_SIZE_MASK          0x0008
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SPI_DOWNLOAD_SIZE_ALIGN         0
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SPI_DOWNLOAD_SIZE_BITS          1
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SPI_DOWNLOAD_SIZE_SHIFT         3

/* MGT_TOP_CMN_CTLR :: misc_ctrl :: spi_download_clock_speed [02:02] */
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SPI_DOWNLOAD_CLOCK_SPEED_MASK   0x0004
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SPI_DOWNLOAD_CLOCK_SPEED_ALIGN  0
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SPI_DOWNLOAD_CLOCK_SPEED_BITS   1
#define MGT_TOP_CMN_CTLR_MISC_CTRL_SPI_DOWNLOAD_CLOCK_SPEED_SHIFT  2

/* MGT_TOP_CMN_CTLR :: misc_ctrl :: i2c_port_sel [01:00] */
#define MGT_TOP_CMN_CTLR_MISC_CTRL_I2C_PORT_SEL_MASK               0x0003
#define MGT_TOP_CMN_CTLR_MISC_CTRL_I2C_PORT_SEL_ALIGN              0
#define MGT_TOP_CMN_CTLR_MISC_CTRL_I2C_PORT_SEL_BITS               2
#define MGT_TOP_CMN_CTLR_MISC_CTRL_I2C_PORT_SEL_SHIFT              0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: single_pmd_ctrl
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: single_pmd_ctrl :: reserved0 [15:10] */
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_RESERVED0_MASK            0xfc00
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_RESERVED0_ALIGN           0
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_RESERVED0_BITS            6
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_RESERVED0_SHIFT           10

/* MGT_TOP_CMN_CTLR :: single_pmd_ctrl :: gallardoA0_dis [09:09] */
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_GALLARDOA0_DIS_MASK       0x0200
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_GALLARDOA0_DIS_ALIGN      0
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_GALLARDOA0_DIS_BITS       1
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_GALLARDOA0_DIS_SHIFT      9

/* MGT_TOP_CMN_CTLR :: single_pmd_ctrl :: single_pmd_ch_sel [08:08] */
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_SINGLE_PMD_CH_SEL_MASK    0x0100
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_SINGLE_PMD_CH_SEL_ALIGN   0
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_SINGLE_PMD_CH_SEL_BITS    1
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_SINGLE_PMD_CH_SEL_SHIFT   8

/* MGT_TOP_CMN_CTLR :: single_pmd_ctrl :: Single_pmd_mode [07:07] */
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_SINGLE_PMD_MODE_MASK      0x0080
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_SINGLE_PMD_MODE_ALIGN     0
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_SINGLE_PMD_MODE_BITS      1
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_SINGLE_PMD_MODE_SHIFT     7

/* MGT_TOP_CMN_CTLR :: single_pmd_ctrl :: reserved1 [06:06] */
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_RESERVED1_MASK            0x0040
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_RESERVED1_ALIGN           0
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_RESERVED1_BITS            1
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_RESERVED1_SHIFT           6

/* MGT_TOP_CMN_CTLR :: single_pmd_ctrl :: phy_ch_to_access_in_single_pmd [05:04] */
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_PHY_CH_TO_ACCESS_IN_SINGLE_PMD_MASK 0x0030
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_PHY_CH_TO_ACCESS_IN_SINGLE_PMD_ALIGN 0
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_PHY_CH_TO_ACCESS_IN_SINGLE_PMD_BITS 2
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_PHY_CH_TO_ACCESS_IN_SINGLE_PMD_SHIFT 4

/* MGT_TOP_CMN_CTLR :: single_pmd_ctrl :: phy_ch_to_be_disable_in_single_pmd [03:00] */
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_PHY_CH_TO_BE_DISABLE_IN_SINGLE_PMD_MASK 0x000f
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_PHY_CH_TO_BE_DISABLE_IN_SINGLE_PMD_ALIGN 0
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_PHY_CH_TO_BE_DISABLE_IN_SINGLE_PMD_BITS 4
#define MGT_TOP_CMN_CTLR_SINGLE_PMD_CTRL_PHY_CH_TO_BE_DISABLE_IN_SINGLE_PMD_SHIFT 0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: gp_reg_5
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: gp_reg_5 :: gpreg5_data [15:00] */
#define MGT_TOP_CMN_CTLR_GP_REG_5_GPREG5_DATA_MASK                 0xffff
#define MGT_TOP_CMN_CTLR_GP_REG_5_GPREG5_DATA_ALIGN                0
#define MGT_TOP_CMN_CTLR_GP_REG_5_GPREG5_DATA_BITS                 16
#define MGT_TOP_CMN_CTLR_GP_REG_5_GPREG5_DATA_SHIFT                0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: gp_reg_6
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: gp_reg_6 :: gpreg6_data [15:00] */
#define MGT_TOP_CMN_CTLR_GP_REG_6_GPREG6_DATA_MASK                 0xffff
#define MGT_TOP_CMN_CTLR_GP_REG_6_GPREG6_DATA_ALIGN                0
#define MGT_TOP_CMN_CTLR_GP_REG_6_GPREG6_DATA_BITS                 16
#define MGT_TOP_CMN_CTLR_GP_REG_6_GPREG6_DATA_SHIFT                0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: gp_reg_7
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: gp_reg_7 :: gpreg7_data [15:00] */
#define MGT_TOP_CMN_CTLR_GP_REG_7_GPREG7_DATA_MASK                 0xffff
#define MGT_TOP_CMN_CTLR_GP_REG_7_GPREG7_DATA_ALIGN                0
#define MGT_TOP_CMN_CTLR_GP_REG_7_GPREG7_DATA_BITS                 16
#define MGT_TOP_CMN_CTLR_GP_REG_7_GPREG7_DATA_SHIFT                0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: gp_reg_8
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: gp_reg_8 :: gpreg8_data [15:00] */
#define MGT_TOP_CMN_CTLR_GP_REG_8_GPREG8_DATA_MASK                 0xffff
#define MGT_TOP_CMN_CTLR_GP_REG_8_GPREG8_DATA_ALIGN                0
#define MGT_TOP_CMN_CTLR_GP_REG_8_GPREG8_DATA_BITS                 16
#define MGT_TOP_CMN_CTLR_GP_REG_8_GPREG8_DATA_SHIFT                0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: gp_reg_9
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: gp_reg_9 :: gpreg9_data [15:00] */
#define MGT_TOP_CMN_CTLR_GP_REG_9_GPREG9_DATA_MASK                 0xffff
#define MGT_TOP_CMN_CTLR_GP_REG_9_GPREG9_DATA_ALIGN                0
#define MGT_TOP_CMN_CTLR_GP_REG_9_GPREG9_DATA_BITS                 16
#define MGT_TOP_CMN_CTLR_GP_REG_9_GPREG9_DATA_SHIFT                0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: memory_tm_ctrl_0
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: memory_tm_ctrl_0 :: reserved0 [15:15] */
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_RESERVED0_MASK           0x8000
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_RESERVED0_ALIGN          0
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_RESERVED0_BITS           1
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_RESERVED0_SHIFT          15

/* MGT_TOP_CMN_CTLR :: memory_tm_ctrl_0 :: data_ram_tm [14:08] */
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_DATA_RAM_TM_MASK         0x7f00
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_DATA_RAM_TM_ALIGN        0
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_DATA_RAM_TM_BITS         7
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_DATA_RAM_TM_SHIFT        8

/* MGT_TOP_CMN_CTLR :: memory_tm_ctrl_0 :: reserved1 [07:07] */
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_RESERVED1_MASK           0x0080
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_RESERVED1_ALIGN          0
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_RESERVED1_BITS           1
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_RESERVED1_SHIFT          7

/* MGT_TOP_CMN_CTLR :: memory_tm_ctrl_0 :: code_ram_tm [06:00] */
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_CODE_RAM_TM_MASK         0x007f
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_CODE_RAM_TM_ALIGN        0
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_CODE_RAM_TM_BITS         7
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_0_CODE_RAM_TM_SHIFT        0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: memory_tm_ctrl_1
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: memory_tm_ctrl_1 :: reserved0 [15:14] */
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RESERVED0_MASK           0xc000
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RESERVED0_ALIGN          0
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RESERVED0_BITS           2
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RESERVED0_SHIFT          14

/* MGT_TOP_CMN_CTLR :: memory_tm_ctrl_1 :: ram256_tm [13:11] */
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RAM256_TM_MASK           0x3800
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RAM256_TM_ALIGN          0
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RAM256_TM_BITS           3
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RAM256_TM_SHIFT          11

/* MGT_TOP_CMN_CTLR :: memory_tm_ctrl_1 :: ram1024_tm [10:08] */
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RAM1024_TM_MASK          0x0700
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RAM1024_TM_ALIGN         0
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RAM1024_TM_BITS          3
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RAM1024_TM_SHIFT         8

/* MGT_TOP_CMN_CTLR :: memory_tm_ctrl_1 :: reserved1 [07:06] */
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RESERVED1_MASK           0x00c0
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RESERVED1_ALIGN          0
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RESERVED1_BITS           2
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_RESERVED1_SHIFT          6

/* MGT_TOP_CMN_CTLR :: memory_tm_ctrl_1 :: cf_ram_tm [05:00] */
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_CF_RAM_TM_MASK           0x003f
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_CF_RAM_TM_ALIGN          0
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_CF_RAM_TM_BITS           6
#define MGT_TOP_CMN_CTLR_MEMORY_TM_CTRL_1_CF_RAM_TM_SHIFT          0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: reserved0 [15:12] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RESERVED0_MASK         0xf000
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RESERVED0_ALIGN        0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RESERVED0_BITS         4
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RESERVED0_SHIFT        12

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: xpak_mem_stby [11:11] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_XPAK_MEM_STBY_MASK     0x0800
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_XPAK_MEM_STBY_ALIGN    0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_XPAK_MEM_STBY_BITS     1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_XPAK_MEM_STBY_SHIFT    11

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: lo8k_rom_stby [10:10] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_LO8K_ROM_STBY_MASK     0x0400
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_LO8K_ROM_STBY_ALIGN    0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_LO8K_ROM_STBY_BITS     1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_LO8K_ROM_STBY_SHIFT    10

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: hi8k_rom1_stby [09:09] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM1_STBY_MASK    0x0200
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM1_STBY_ALIGN   0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM1_STBY_BITS    1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM1_STBY_SHIFT   9

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: hi8k_rom2_stby [08:08] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM2_STBY_MASK    0x0100
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM2_STBY_ALIGN   0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM2_STBY_BITS    1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM2_STBY_SHIFT   8

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: hi8k_rom3_stby [07:07] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM3_STBY_MASK    0x0080
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM3_STBY_ALIGN   0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM3_STBY_BITS    1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_HI8K_ROM3_STBY_SHIFT   7

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: dataram2k_stby [06:06] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_DATARAM2K_STBY_MASK    0x0040
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_DATARAM2K_STBY_ALIGN   0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_DATARAM2K_STBY_BITS    1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_DATARAM2K_STBY_SHIFT   6

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: ram256_stby [05:05] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RAM256_STBY_MASK       0x0020
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RAM256_STBY_ALIGN      0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RAM256_STBY_BITS       1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RAM256_STBY_SHIFT      5

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: ram1024_stby [04:04] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RAM1024_STBY_MASK      0x0010
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RAM1024_STBY_ALIGN     0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RAM1024_STBY_BITS      1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_RAM1024_STBY_SHIFT     4

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: code_ram_i3_stby [03:03] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I3_STBY_MASK  0x0008
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I3_STBY_ALIGN 0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I3_STBY_BITS  1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I3_STBY_SHIFT 3

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: code_ram_i2_stby [02:02] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I2_STBY_MASK  0x0004
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I2_STBY_ALIGN 0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I2_STBY_BITS  1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I2_STBY_SHIFT 2

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: code_ram_i1_stby [01:01] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I1_STBY_MASK  0x0002
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I1_STBY_ALIGN 0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I1_STBY_BITS  1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I1_STBY_SHIFT 1

/* MGT_TOP_CMN_CTLR :: memory_stby_ctrl_0 :: code_ram_i0_stby [00:00] */
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I0_STBY_MASK  0x0001
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I0_STBY_ALIGN 0
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I0_STBY_BITS  1
#define MGT_TOP_CMN_CTLR_MEMORY_STBY_CTRL_0_CODE_RAM_I0_STBY_SHIFT 0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: vtmon_ctrl_0
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_0 :: DAC_Enable [15:15] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_DAC_ENABLE_MASK              0x8000
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_DAC_ENABLE_ALIGN             0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_DAC_ENABLE_BITS              1
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_DAC_ENABLE_SHIFT             15

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_0 :: ADC_input_select [14:13] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_ADC_INPUT_SELECT_MASK        0x6000
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_ADC_INPUT_SELECT_ALIGN       0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_ADC_INPUT_SELECT_BITS        2
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_ADC_INPUT_SELECT_SHIFT       13

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_0 :: mode [12:10] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_MODE_MASK                    0x1c00
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_MODE_ALIGN                   0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_MODE_BITS                    3
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_MODE_SHIFT                   10

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_0 :: reserved0 [09:07] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_RESERVED0_MASK               0x0380
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_RESERVED0_ALIGN              0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_RESERVED0_BITS               3
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_RESERVED0_SHIFT              7

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_0 :: vtmon_test_sel [06:03] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_VTMON_TEST_SEL_MASK          0x0078
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_VTMON_TEST_SEL_ALIGN         0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_VTMON_TEST_SEL_BITS          4
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_VTMON_TEST_SEL_SHIFT         3

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_0 :: vtmon_bg_adj [02:00] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_VTMON_BG_ADJ_MASK            0x0007
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_VTMON_BG_ADJ_ALIGN           0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_VTMON_BG_ADJ_BITS            3
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_0_VTMON_BG_ADJ_SHIFT           0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: vtmon_ctrl_1
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_1 :: reserved0 [15:08] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_RESERVED0_MASK               0xff00
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_RESERVED0_ALIGN              0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_RESERVED0_BITS               8
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_RESERVED0_SHIFT              8

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_1 :: pvtmon_idoffmon_pwrdn [07:07] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_PVTMON_IDOFFMON_PWRDN_MASK   0x0080
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_PVTMON_IDOFFMON_PWRDN_ALIGN  0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_PVTMON_IDOFFMON_PWRDN_BITS   1
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_PVTMON_IDOFFMON_PWRDN_SHIFT  7

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_1 :: vtmon_strb [06:06] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_STRB_MASK              0x0040
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_STRB_ALIGN             0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_STRB_BITS              1
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_STRB_SHIFT             6

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_1 :: vtmon_pwrdn [05:05] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_PWRDN_MASK             0x0020
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_PWRDN_ALIGN            0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_PWRDN_BITS             1
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_PWRDN_SHIFT            5

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_1 :: vtmon_rstb [04:04] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_RSTB_MASK              0x0010
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_RSTB_ALIGN             0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_RSTB_BITS              1
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_RSTB_SHIFT             4

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_1 :: reserved1 [03:03] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_RESERVED1_MASK               0x0008
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_RESERVED1_ALIGN              0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_RESERVED1_BITS               1
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_RESERVED1_SHIFT              3

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_1 :: vtmon_mode_sel [02:00] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_MODE_SEL_MASK          0x0007
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_MODE_SEL_ALIGN         0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_MODE_SEL_BITS          3
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_1_VTMON_MODE_SEL_SHIFT         0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: vtmon_status
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: vtmon_status :: vtmon_maxb0 [15:15] */
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MAXB0_MASK             0x8000
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MAXB0_ALIGN            0
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MAXB0_BITS             1
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MAXB0_SHIFT            15

/* MGT_TOP_CMN_CTLR :: vtmon_status :: vtmon_maxb1 [14:14] */
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MAXB1_MASK             0x4000
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MAXB1_ALIGN            0
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MAXB1_BITS             1
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MAXB1_SHIFT            14

/* MGT_TOP_CMN_CTLR :: vtmon_status :: vtmon_minb0 [13:13] */
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MINB0_MASK             0x2000
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MINB0_ALIGN            0
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MINB0_BITS             1
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MINB0_SHIFT            13

/* MGT_TOP_CMN_CTLR :: vtmon_status :: vtmon_minb1 [12:12] */
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MINB1_MASK             0x1000
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MINB1_ALIGN            0
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MINB1_BITS             1
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_MINB1_SHIFT            12

/* MGT_TOP_CMN_CTLR :: vtmon_status :: vtmon_warningb0 [11:11] */
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_WARNINGB0_MASK         0x0800
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_WARNINGB0_ALIGN        0
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_WARNINGB0_BITS         1
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_WARNINGB0_SHIFT        11

/* MGT_TOP_CMN_CTLR :: vtmon_status :: vtmon_warningb1 [10:10] */
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_WARNINGB1_MASK         0x0400
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_WARNINGB1_ALIGN        0
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_WARNINGB1_BITS         1
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_WARNINGB1_SHIFT        10

/* MGT_TOP_CMN_CTLR :: vtmon_status :: vtmon_data [09:00] */
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_DATA_MASK              0x03ff
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_DATA_ALIGN             0
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_DATA_BITS              10
#define MGT_TOP_CMN_CTLR_VTMON_STATUS_VTMON_DATA_SHIFT             0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: vtmon_ctrl_2
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_2 :: VDDCMON_refadj_max [15:13] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MAX_MASK      0xe000
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MAX_ALIGN     0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MAX_BITS      3
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MAX_SHIFT     13

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_2 :: DAC_set [12:12] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_DAC_SET_MASK                 0x1000
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_DAC_SET_ALIGN                0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_DAC_SET_BITS                 1
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_DAC_SET_SHIFT                12

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_2 :: DAC_reset [11:11] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_DAC_RESET_MASK               0x0800
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_DAC_RESET_ALIGN              0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_DAC_RESET_BITS               1
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_DAC_RESET_SHIFT              11

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_2 :: VDDCMON_refadj_min1 [10:08] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MIN1_MASK     0x0700
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MIN1_ALIGN    0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MIN1_BITS     3
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MIN1_SHIFT    8

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_2 :: VDDCMON_refadj_min0 [07:04] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MIN0_MASK     0x00f0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MIN0_ALIGN    0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MIN0_BITS     4
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_VDDCMON_REFADJ_MIN0_SHIFT    4

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_2 :: reserved0 [03:02] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_RESERVED0_MASK               0x000c
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_RESERVED0_ALIGN              0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_RESERVED0_BITS               2
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_RESERVED0_SHIFT              2

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_2 :: Burnin_en [01:01] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_BURNIN_EN_MASK               0x0002
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_BURNIN_EN_ALIGN              0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_BURNIN_EN_BITS               1
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_BURNIN_EN_SHIFT              1

/* MGT_TOP_CMN_CTLR :: vtmon_ctrl_2 :: Con_pad [00:00] */
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_CON_PAD_MASK                 0x0001
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_CON_PAD_ALIGN                0
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_CON_PAD_BITS                 1
#define MGT_TOP_CMN_CTLR_VTMON_CTRL_2_CON_PAD_SHIFT                0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: RESCAL_ctrl_dfs
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: RESCAL_ctrl_dfs :: reserved0 [15:13] */
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_DFS_RESERVED0_MASK            0xe000
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_DFS_RESERVED0_ALIGN           0
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_DFS_RESERVED0_BITS            3
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_DFS_RESERVED0_SHIFT           13

/* MGT_TOP_CMN_CTLR :: RESCAL_ctrl_dfs :: rescal_ctrl_dfs_value [12:00] */
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_DFS_RESCAL_CTRL_DFS_VALUE_MASK 0x1fff
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_DFS_RESCAL_CTRL_DFS_VALUE_ALIGN 0
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_DFS_RESCAL_CTRL_DFS_VALUE_BITS 13
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_DFS_RESCAL_CTRL_DFS_VALUE_SHIFT 0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: RESCAL_status
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: RESCAL_status :: reserved0 [15:15] */
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESERVED0_MASK              0x8000
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESERVED0_ALIGN             0
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESERVED0_BITS              1
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESERVED0_SHIFT             15

/* MGT_TOP_CMN_CTLR :: RESCAL_status :: rescal_curr_comp_cnt [14:09] */
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_CURR_COMP_CNT_MASK   0x7e00
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_CURR_COMP_CNT_ALIGN  0
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_CURR_COMP_CNT_BITS   6
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_CURR_COMP_CNT_SHIFT  9

/* MGT_TOP_CMN_CTLR :: RESCAL_status :: rescal_prev_comp_cnt [08:05] */
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_PREV_COMP_CNT_MASK   0x01e0
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_PREV_COMP_CNT_ALIGN  0
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_PREV_COMP_CNT_BITS   4
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_PREV_COMP_CNT_SHIFT  5

/* MGT_TOP_CMN_CTLR :: RESCAL_status :: rescal_state [04:02] */
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_STATE_MASK           0x001c
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_STATE_ALIGN          0
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_STATE_BITS           3
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_STATE_SHIFT          2

/* MGT_TOP_CMN_CTLR :: RESCAL_status :: rescal_comp [01:01] */
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_COMP_MASK            0x0002
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_COMP_ALIGN           0
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_COMP_BITS            1
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_COMP_SHIFT           1

/* MGT_TOP_CMN_CTLR :: RESCAL_status :: rescal_valid [00:00] */
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_VALID_MASK           0x0001
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_VALID_ALIGN          0
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_VALID_BITS           1
#define MGT_TOP_CMN_CTLR_RESCAL_STATUS_RESCAL_VALID_SHIFT          0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: RESCAL_ctrl
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: RESCAL_ctrl :: reserved0 [15:15] */
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESERVED0_MASK                0x8000
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESERVED0_ALIGN               0
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESERVED0_BITS                1
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESERVED0_SHIFT               15

/* MGT_TOP_CMN_CTLR :: RESCAL_ctrl :: rescal_power_down [14:14] */
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_POWER_DOWN_MASK        0x4000
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_POWER_DOWN_ALIGN       0
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_POWER_DOWN_BITS        1
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_POWER_DOWN_SHIFT       14

/* MGT_TOP_CMN_CTLR :: RESCAL_ctrl :: rescal_diag_on [13:13] */
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_DIAG_ON_MASK           0x2000
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_DIAG_ON_ALIGN          0
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_DIAG_ON_BITS           1
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_DIAG_ON_SHIFT          13

/* MGT_TOP_CMN_CTLR :: RESCAL_ctrl :: rescal_ctrl [12:00] */
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_CTRL_MASK              0x1fff
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_CTRL_ALIGN             0
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_CTRL_BITS              13
#define MGT_TOP_CMN_CTLR_RESCAL_CTRL_RESCAL_CTRL_SHIFT             0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: ring_osc_control_register
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: ring_osc_control_register :: reserved0 [15:10] */
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RESERVED0_MASK  0xfc00
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RESERVED0_ALIGN 0
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RESERVED0_BITS  6
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RESERVED0_SHIFT 10

/* MGT_TOP_CMN_CTLR :: ring_osc_control_register :: ring_osc_2_active [09:09] */
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RING_OSC_2_ACTIVE_MASK 0x0200
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RING_OSC_2_ACTIVE_ALIGN 0
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RING_OSC_2_ACTIVE_BITS 1
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RING_OSC_2_ACTIVE_SHIFT 9

/* MGT_TOP_CMN_CTLR :: ring_osc_control_register :: ring_osc_1_active [08:08] */
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RING_OSC_1_ACTIVE_MASK 0x0100
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RING_OSC_1_ACTIVE_ALIGN 0
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RING_OSC_1_ACTIVE_BITS 1
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_RING_OSC_1_ACTIVE_SHIFT 8

/* MGT_TOP_CMN_CTLR :: ring_osc_control_register :: osc_en_sel [07:04] */
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_OSC_EN_SEL_MASK 0x00f0
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_OSC_EN_SEL_ALIGN 0
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_OSC_EN_SEL_BITS 4
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_OSC_EN_SEL_SHIFT 4

/* MGT_TOP_CMN_CTLR :: ring_osc_control_register :: osc_out_sel [03:00] */
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_OSC_OUT_SEL_MASK 0x000f
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_OSC_OUT_SEL_ALIGN 0
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_OSC_OUT_SEL_BITS 4
#define MGT_TOP_CMN_CTLR_RING_OSC_CONTROL_REGISTER_OSC_OUT_SEL_SHIFT 0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: io_ring_control
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: io_ring_control :: reserved0 [15:09] */
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED0_MASK            0xfe00
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED0_ALIGN           0
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED0_BITS            7
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED0_SHIFT           9

/* MGT_TOP_CMN_CTLR :: io_ring_control :: CP_vdd1p8_ok [08:08] */
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_CP_VDD1P8_OK_MASK         0x0100
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_CP_VDD1P8_OK_ALIGN        0
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_CP_VDD1P8_OK_BITS         1
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_CP_VDD1P8_OK_SHIFT        8

/* MGT_TOP_CMN_CTLR :: io_ring_control :: reserved1 [07:06] */
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED1_MASK            0x00c0
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED1_ALIGN           0
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED1_BITS            2
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED1_SHIFT           6

/* MGT_TOP_CMN_CTLR :: io_ring_control :: gpio_opdr [05:05] */
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_GPIO_OPDR_MASK            0x0020
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_GPIO_OPDR_ALIGN           0
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_GPIO_OPDR_BITS            1
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_GPIO_OPDR_SHIFT           5

/* MGT_TOP_CMN_CTLR :: io_ring_control :: modehv [04:04] */
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_MODEHV_MASK               0x0010
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_MODEHV_ALIGN              0
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_MODEHV_BITS               1
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_MODEHV_SHIFT              4

/* MGT_TOP_CMN_CTLR :: io_ring_control :: reserved2 [03:02] */
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED2_MASK            0x000c
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED2_ALIGN           0
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED2_BITS            2
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_RESERVED2_SHIFT           2

/* MGT_TOP_CMN_CTLR :: io_ring_control :: mdio_drv_lvl [01:00] */
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_MDIO_DRV_LVL_MASK         0x0003
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_MDIO_DRV_LVL_ALIGN        0
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_MDIO_DRV_LVL_BITS         2
#define MGT_TOP_CMN_CTLR_IO_RING_CONTROL_MDIO_DRV_LVL_SHIFT        0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: charge_pump_control_1
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: charge_pump_control_1 :: CP_rsvd_15_14 [15:14] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_RSVD_15_14_MASK  0xc000
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_RSVD_15_14_ALIGN 0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_RSVD_15_14_BITS  2
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_RSVD_15_14_SHIFT 14

/* MGT_TOP_CMN_CTLR :: charge_pump_control_1 :: CP_clk_sel [13:13] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_CLK_SEL_MASK     0x2000
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_CLK_SEL_ALIGN    0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_CLK_SEL_BITS     1
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_CLK_SEL_SHIFT    13

/* MGT_TOP_CMN_CTLR :: charge_pump_control_1 :: CP_bg_ctat [12:09] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_CTAT_MASK     0x1e00
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_CTAT_ALIGN    0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_CTAT_BITS     4
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_CTAT_SHIFT    9

/* MGT_TOP_CMN_CTLR :: charge_pump_control_1 :: CP_bg_trim [08:05] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_TRIM_MASK     0x01e0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_TRIM_ALIGN    0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_TRIM_BITS     4
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_TRIM_SHIFT    5

/* MGT_TOP_CMN_CTLR :: charge_pump_control_1 :: CP_bg_ref_sel [04:04] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_REF_SEL_MASK  0x0010
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_REF_SEL_ALIGN 0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_REF_SEL_BITS  1
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_BG_REF_SEL_SHIFT 4

/* MGT_TOP_CMN_CTLR :: charge_pump_control_1 :: CP_vsel [03:01] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_VSEL_MASK        0x000e
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_VSEL_ALIGN       0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_VSEL_BITS        3
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_VSEL_SHIFT       1

/* MGT_TOP_CMN_CTLR :: charge_pump_control_1 :: CP_pd [00:00] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_PD_MASK          0x0001
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_PD_ALIGN         0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_PD_BITS          1
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_1_CP_PD_SHIFT         0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: charge_pump_control_2
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: charge_pump_control_2 :: CP_rsvd_31_20 [15:04] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_RSVD_31_20_MASK  0xfff0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_RSVD_31_20_ALIGN 0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_RSVD_31_20_BITS  12
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_RSVD_31_20_SHIFT 4

/* MGT_TOP_CMN_CTLR :: charge_pump_control_2 :: CP_spdup [03:03] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_SPDUP_MASK       0x0008
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_SPDUP_ALIGN      0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_SPDUP_BITS       1
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_SPDUP_SHIFT      3

/* MGT_TOP_CMN_CTLR :: charge_pump_control_2 :: CP_nol_sel [02:01] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_NOL_SEL_MASK     0x0006
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_NOL_SEL_ALIGN    0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_NOL_SEL_BITS     2
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_NOL_SEL_SHIFT    1

/* MGT_TOP_CMN_CTLR :: charge_pump_control_2 :: CP_hys_en [00:00] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_HYS_EN_MASK      0x0001
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_HYS_EN_ALIGN     0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_HYS_EN_BITS      1
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_2_CP_HYS_EN_SHIFT     0


/****************************************************************************
 * MGT_TOP_CMN_CTLR :: charge_pump_control_3
 ***************************************************************************/
/* MGT_TOP_CMN_CTLR :: charge_pump_control_3 :: CP_rsvd_47_37 [15:05] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_RSVD_47_37_MASK  0xffe0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_RSVD_47_37_ALIGN 0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_RSVD_47_37_BITS  11
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_RSVD_47_37_SHIFT 5

/* MGT_TOP_CMN_CTLR :: charge_pump_control_3 :: CP_mux_sel [04:02] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_MUX_SEL_MASK     0x001c
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_MUX_SEL_ALIGN    0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_MUX_SEL_BITS     3
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_MUX_SEL_SHIFT    2

/* MGT_TOP_CMN_CTLR :: charge_pump_control_3 :: CP_test_en [01:01] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_TEST_EN_MASK     0x0002
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_TEST_EN_ALIGN    0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_TEST_EN_BITS     1
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_TEST_EN_SHIFT    1

/* MGT_TOP_CMN_CTLR :: charge_pump_control_3 :: CP_dis_pok [00:00] */
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_DIS_POK_MASK     0x0001
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_DIS_POK_ALIGN    0
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_DIS_POK_BITS     1
#define MGT_TOP_CMN_CTLR_CHARGE_PUMP_CONTROL_3_CP_DIS_POK_SHIFT    0


/****************************************************************************
 * merlin_gallardo_mgt_top_blk_MGT_TOP_LK_MTR_TMR
 ***************************************************************************/
/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_0
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_0 :: reserved0 [15:09] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_RESERVED0_MASK 0xfe00
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_RESERVED0_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_RESERVED0_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_RESERVED0_SHIFT 9

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_0 :: timer_tc [08:08] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_TIMER_TC_MASK 0x0100
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_TIMER_TC_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_TIMER_TC_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_TIMER_TC_SHIFT 8

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_0 :: reserved1 [07:01] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_RESERVED1_MASK 0x00fe
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_RESERVED1_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_RESERVED1_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_RESERVED1_SHIFT 1

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_0 :: timer_en [00:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_TIMER_EN_MASK 0x0001
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_TIMER_EN_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_TIMER_EN_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_0_TIMER_EN_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_0
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_0 :: timer_count [15:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_0_TIMER_COUNT_MASK 0xffff
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_0_TIMER_COUNT_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_0_TIMER_COUNT_BITS 16
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_0_TIMER_COUNT_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_1
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_1 :: reserved0 [15:09] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_RESERVED0_MASK 0xfe00
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_RESERVED0_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_RESERVED0_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_RESERVED0_SHIFT 9

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_1 :: timer_tc [08:08] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_TIMER_TC_MASK 0x0100
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_TIMER_TC_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_TIMER_TC_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_TIMER_TC_SHIFT 8

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_1 :: reserved1 [07:01] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_RESERVED1_MASK 0x00fe
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_RESERVED1_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_RESERVED1_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_RESERVED1_SHIFT 1

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_1 :: timer_en [00:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_TIMER_EN_MASK 0x0001
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_TIMER_EN_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_TIMER_EN_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_1_TIMER_EN_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_1
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_1 :: timer_count [15:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_1_TIMER_COUNT_MASK 0xffff
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_1_TIMER_COUNT_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_1_TIMER_COUNT_BITS 16
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_1_TIMER_COUNT_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_2
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_2 :: reserved0 [15:09] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_RESERVED0_MASK 0xfe00
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_RESERVED0_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_RESERVED0_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_RESERVED0_SHIFT 9

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_2 :: timer_tc [08:08] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_TIMER_TC_MASK 0x0100
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_TIMER_TC_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_TIMER_TC_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_TIMER_TC_SHIFT 8

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_2 :: reserved1 [07:01] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_RESERVED1_MASK 0x00fe
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_RESERVED1_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_RESERVED1_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_RESERVED1_SHIFT 1

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_2 :: timer_en [00:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_TIMER_EN_MASK 0x0001
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_TIMER_EN_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_TIMER_EN_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_2_TIMER_EN_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_2
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_2 :: timer_count [15:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_2_TIMER_COUNT_MASK 0xffff
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_2_TIMER_COUNT_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_2_TIMER_COUNT_BITS 16
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_2_TIMER_COUNT_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_3
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_3 :: reserved0 [15:09] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_RESERVED0_MASK 0xfe00
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_RESERVED0_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_RESERVED0_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_RESERVED0_SHIFT 9

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_3 :: timer_tc [08:08] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_TIMER_TC_MASK 0x0100
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_TIMER_TC_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_TIMER_TC_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_TIMER_TC_SHIFT 8

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_3 :: reserved1 [07:01] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_RESERVED1_MASK 0x00fe
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_RESERVED1_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_RESERVED1_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_RESERVED1_SHIFT 1

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_3 :: timer_en [00:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_TIMER_EN_MASK 0x0001
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_TIMER_EN_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_TIMER_EN_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_3_TIMER_EN_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_3
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_3 :: timer_count [15:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_3_TIMER_COUNT_MASK 0xffff
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_3_TIMER_COUNT_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_3_TIMER_COUNT_BITS 16
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_3_TIMER_COUNT_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_4
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_4 :: reserved0 [15:09] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_RESERVED0_MASK 0xfe00
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_RESERVED0_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_RESERVED0_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_RESERVED0_SHIFT 9

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_4 :: timer_tc [08:08] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_TIMER_TC_MASK 0x0100
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_TIMER_TC_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_TIMER_TC_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_TIMER_TC_SHIFT 8

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_4 :: reserved1 [07:01] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_RESERVED1_MASK 0x00fe
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_RESERVED1_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_RESERVED1_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_RESERVED1_SHIFT 1

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_4 :: timer_en [00:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_TIMER_EN_MASK 0x0001
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_TIMER_EN_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_TIMER_EN_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_4_TIMER_EN_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_4
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_4 :: timer_count [15:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_4_TIMER_COUNT_MASK 0xffff
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_4_TIMER_COUNT_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_4_TIMER_COUNT_BITS 16
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_4_TIMER_COUNT_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_5
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_5 :: reserved0 [15:09] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_RESERVED0_MASK 0xfe00
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_RESERVED0_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_RESERVED0_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_RESERVED0_SHIFT 9

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_5 :: timer_tc [08:08] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_TIMER_TC_MASK 0x0100
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_TIMER_TC_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_TIMER_TC_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_TIMER_TC_SHIFT 8

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_5 :: reserved1 [07:01] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_RESERVED1_MASK 0x00fe
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_RESERVED1_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_RESERVED1_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_RESERVED1_SHIFT 1

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_5 :: timer_en [00:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_TIMER_EN_MASK 0x0001
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_TIMER_EN_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_TIMER_EN_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_5_TIMER_EN_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_5
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_5 :: timer_count [15:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_5_TIMER_COUNT_MASK 0xffff
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_5_TIMER_COUNT_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_5_TIMER_COUNT_BITS 16
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_5_TIMER_COUNT_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_6
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_6 :: reserved0 [15:09] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_RESERVED0_MASK 0xfe00
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_RESERVED0_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_RESERVED0_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_RESERVED0_SHIFT 9

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_6 :: timer_tc [08:08] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_TIMER_TC_MASK 0x0100
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_TIMER_TC_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_TIMER_TC_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_TIMER_TC_SHIFT 8

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_6 :: reserved1 [07:01] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_RESERVED1_MASK 0x00fe
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_RESERVED1_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_RESERVED1_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_RESERVED1_SHIFT 1

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_6 :: timer_en [00:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_TIMER_EN_MASK 0x0001
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_TIMER_EN_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_TIMER_EN_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_6_TIMER_EN_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_6
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_6 :: timer_count [15:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_6_TIMER_COUNT_MASK 0xffff
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_6_TIMER_COUNT_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_6_TIMER_COUNT_BITS 16
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_6_TIMER_COUNT_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_7
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_7 :: reserved0 [15:09] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_RESERVED0_MASK 0xfe00
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_RESERVED0_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_RESERVED0_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_RESERVED0_SHIFT 9

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_7 :: timer_tc [08:08] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_TIMER_TC_MASK 0x0100
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_TIMER_TC_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_TIMER_TC_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_TIMER_TC_SHIFT 8

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_7 :: reserved1 [07:01] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_RESERVED1_MASK 0x00fe
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_RESERVED1_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_RESERVED1_BITS 7
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_RESERVED1_SHIFT 1

/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_control_status_register_7 :: timer_en [00:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_TIMER_EN_MASK 0x0001
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_TIMER_EN_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_TIMER_EN_BITS 1
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_CONTROL_STATUS_REGISTER_7_TIMER_EN_SHIFT 0


/****************************************************************************
 * MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_7
 ***************************************************************************/
/* MGT_TOP_LK_MTR_TMR :: link_mon_timer_count_register_7 :: timer_count [15:00] */
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_7_TIMER_COUNT_MASK 0xffff
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_7_TIMER_COUNT_ALIGN 0
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_7_TIMER_COUNT_BITS 16
#define MGT_TOP_LK_MTR_TMR_LINK_MON_TIMER_COUNT_REGISTER_7_TIMER_COUNT_SHIFT 0


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_IEEE0
 ***************************************************************************/
/****************************************************************************
 * QSFI_IEEE0 :: pmd_control_register
 ***************************************************************************/
/* QSFI_IEEE0 :: pmd_control_register :: reset [15:15] */
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESET_MASK                 0x8000
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESET_ALIGN                0
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESET_BITS                 1
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESET_SHIFT                15

/* QSFI_IEEE0 :: pmd_control_register :: reserved0 [14:14] */
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED0_MASK             0x4000
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED0_ALIGN            0
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED0_BITS             1
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED0_SHIFT            14

/* QSFI_IEEE0 :: pmd_control_register :: speed_selectionlsb [13:13] */
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTIONLSB_MASK    0x2000
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTIONLSB_ALIGN   0
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTIONLSB_BITS    1
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTIONLSB_SHIFT   13

/* QSFI_IEEE0 :: pmd_control_register :: reserved1 [12:12] */
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED1_MASK             0x1000
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED1_ALIGN            0
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED1_BITS             1
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED1_SHIFT            12

/* QSFI_IEEE0 :: pmd_control_register :: power_down [11:11] */
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_POWER_DOWN_MASK            0x0800
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_POWER_DOWN_ALIGN           0
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_POWER_DOWN_BITS            1
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_POWER_DOWN_SHIFT           11

/* QSFI_IEEE0 :: pmd_control_register :: reserved2 [10:07] */
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED2_MASK             0x0780
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED2_ALIGN            0
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED2_BITS             4
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_RESERVED2_SHIFT            7

/* QSFI_IEEE0 :: pmd_control_register :: speed_selectionmsb [06:06] */
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTIONMSB_MASK    0x0040
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTIONMSB_ALIGN   0
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTIONMSB_BITS    1
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTIONMSB_SHIFT   6

/* QSFI_IEEE0 :: pmd_control_register :: speed_selection [05:02] */
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTION_MASK       0x003c
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTION_ALIGN      0
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTION_BITS       4
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_SPEED_SELECTION_SHIFT      2

/* QSFI_IEEE0 :: pmd_control_register :: pma_remote_loopback [01:01] */
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_PMA_REMOTE_LOOPBACK_MASK   0x0002
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_PMA_REMOTE_LOOPBACK_ALIGN  0
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_PMA_REMOTE_LOOPBACK_BITS   1
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_PMA_REMOTE_LOOPBACK_SHIFT  1

/* QSFI_IEEE0 :: pmd_control_register :: pma_loopback [00:00] */
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_PMA_LOOPBACK_MASK          0x0001
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_PMA_LOOPBACK_ALIGN         0
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_PMA_LOOPBACK_BITS          1
#define QSFI_IEEE0_PMD_CONTROL_REGISTER_PMA_LOOPBACK_SHIFT         0


/****************************************************************************
 * QSFI_IEEE0 :: status_register
 ***************************************************************************/
/* QSFI_IEEE0 :: status_register :: reserved0 [15:08] */
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED0_MASK                  0xff00
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED0_ALIGN                 0
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED0_BITS                  8
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED0_SHIFT                 8

/* QSFI_IEEE0 :: status_register :: fault [07:07] */
#define QSFI_IEEE0_STATUS_REGISTER_FAULT_MASK                      0x0080
#define QSFI_IEEE0_STATUS_REGISTER_FAULT_ALIGN                     0
#define QSFI_IEEE0_STATUS_REGISTER_FAULT_BITS                      1
#define QSFI_IEEE0_STATUS_REGISTER_FAULT_SHIFT                     7

/* QSFI_IEEE0 :: status_register :: reserved1 [06:03] */
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED1_MASK                  0x0078
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED1_ALIGN                 0
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED1_BITS                  4
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED1_SHIFT                 3

/* QSFI_IEEE0 :: status_register :: receive_link_status [02:02] */
#define QSFI_IEEE0_STATUS_REGISTER_RECEIVE_LINK_STATUS_MASK        0x0004
#define QSFI_IEEE0_STATUS_REGISTER_RECEIVE_LINK_STATUS_ALIGN       0
#define QSFI_IEEE0_STATUS_REGISTER_RECEIVE_LINK_STATUS_BITS        1
#define QSFI_IEEE0_STATUS_REGISTER_RECEIVE_LINK_STATUS_SHIFT       2

/* QSFI_IEEE0 :: status_register :: low_power_ability [01:01] */
#define QSFI_IEEE0_STATUS_REGISTER_LOW_POWER_ABILITY_MASK          0x0002
#define QSFI_IEEE0_STATUS_REGISTER_LOW_POWER_ABILITY_ALIGN         0
#define QSFI_IEEE0_STATUS_REGISTER_LOW_POWER_ABILITY_BITS          1
#define QSFI_IEEE0_STATUS_REGISTER_LOW_POWER_ABILITY_SHIFT         1

/* QSFI_IEEE0 :: status_register :: reserved2 [00:00] */
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED2_MASK                  0x0001
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED2_ALIGN                 0
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED2_BITS                  1
#define QSFI_IEEE0_STATUS_REGISTER_RESERVED2_SHIFT                 0


/****************************************************************************
 * QSFI_IEEE0 :: pmd_identifier_register_0
 ***************************************************************************/
/* QSFI_IEEE0 :: pmd_identifier_register_0 :: device_id_0 [15:00] */
#define QSFI_IEEE0_PMD_IDENTIFIER_REGISTER_0_DEVICE_ID_0_MASK      0xffff
#define QSFI_IEEE0_PMD_IDENTIFIER_REGISTER_0_DEVICE_ID_0_ALIGN     0
#define QSFI_IEEE0_PMD_IDENTIFIER_REGISTER_0_DEVICE_ID_0_BITS      16
#define QSFI_IEEE0_PMD_IDENTIFIER_REGISTER_0_DEVICE_ID_0_SHIFT     0


/****************************************************************************
 * QSFI_IEEE0 :: pmd_identifier_register_1
 ***************************************************************************/
/* QSFI_IEEE0 :: pmd_identifier_register_1 :: device_id_1 [15:00] */
#define QSFI_IEEE0_PMD_IDENTIFIER_REGISTER_1_DEVICE_ID_1_MASK      0xffff
#define QSFI_IEEE0_PMD_IDENTIFIER_REGISTER_1_DEVICE_ID_1_ALIGN     0
#define QSFI_IEEE0_PMD_IDENTIFIER_REGISTER_1_DEVICE_ID_1_BITS      16
#define QSFI_IEEE0_PMD_IDENTIFIER_REGISTER_1_DEVICE_ID_1_SHIFT     0


/****************************************************************************
 * QSFI_IEEE0 :: pmd_speed_ability
 ***************************************************************************/
/* QSFI_IEEE0 :: pmd_speed_ability :: reserved0 [15:10] */
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED0_MASK                0xfc00
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED0_ALIGN               0
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED0_BITS                6
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED0_SHIFT               10

/* QSFI_IEEE0 :: pmd_speed_ability :: one_hundredG_capable [09:09] */
#define QSFI_IEEE0_PMD_SPEED_ABILITY_ONE_HUNDREDG_CAPABLE_MASK     0x0200
#define QSFI_IEEE0_PMD_SPEED_ABILITY_ONE_HUNDREDG_CAPABLE_ALIGN    0
#define QSFI_IEEE0_PMD_SPEED_ABILITY_ONE_HUNDREDG_CAPABLE_BITS     1
#define QSFI_IEEE0_PMD_SPEED_ABILITY_ONE_HUNDREDG_CAPABLE_SHIFT    9

/* QSFI_IEEE0 :: pmd_speed_ability :: fortyG_capable [08:08] */
#define QSFI_IEEE0_PMD_SPEED_ABILITY_FORTYG_CAPABLE_MASK           0x0100
#define QSFI_IEEE0_PMD_SPEED_ABILITY_FORTYG_CAPABLE_ALIGN          0
#define QSFI_IEEE0_PMD_SPEED_ABILITY_FORTYG_CAPABLE_BITS           1
#define QSFI_IEEE0_PMD_SPEED_ABILITY_FORTYG_CAPABLE_SHIFT          8

/* QSFI_IEEE0 :: pmd_speed_ability :: reserved1 [07:05] */
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED1_MASK                0x00e0
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED1_ALIGN               0
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED1_BITS                3
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED1_SHIFT               5

/* QSFI_IEEE0 :: pmd_speed_ability :: oneG_capable [04:04] */
#define QSFI_IEEE0_PMD_SPEED_ABILITY_ONEG_CAPABLE_MASK             0x0010
#define QSFI_IEEE0_PMD_SPEED_ABILITY_ONEG_CAPABLE_ALIGN            0
#define QSFI_IEEE0_PMD_SPEED_ABILITY_ONEG_CAPABLE_BITS             1
#define QSFI_IEEE0_PMD_SPEED_ABILITY_ONEG_CAPABLE_SHIFT            4

/* QSFI_IEEE0 :: pmd_speed_ability :: reserved2 [03:01] */
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED2_MASK                0x000e
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED2_ALIGN               0
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED2_BITS                3
#define QSFI_IEEE0_PMD_SPEED_ABILITY_RESERVED2_SHIFT               1

/* QSFI_IEEE0 :: pmd_speed_ability :: tenG_capable [00:00] */
#define QSFI_IEEE0_PMD_SPEED_ABILITY_TENG_CAPABLE_MASK             0x0001
#define QSFI_IEEE0_PMD_SPEED_ABILITY_TENG_CAPABLE_ALIGN            0
#define QSFI_IEEE0_PMD_SPEED_ABILITY_TENG_CAPABLE_BITS             1
#define QSFI_IEEE0_PMD_SPEED_ABILITY_TENG_CAPABLE_SHIFT            0


/****************************************************************************
 * QSFI_IEEE0 :: devices_in_package_1
 ***************************************************************************/
/* QSFI_IEEE0 :: devices_in_package_1 :: reserved0 [15:12] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_RESERVED0_MASK             0xf000
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_RESERVED0_ALIGN            0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_RESERVED0_BITS             4
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_RESERVED0_SHIFT            12

/* QSFI_IEEE0 :: devices_in_package_1 :: Seperate_PMA_4_Present [11:11] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_4_PRESENT_MASK 0x0800
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_4_PRESENT_ALIGN 0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_4_PRESENT_BITS 1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_4_PRESENT_SHIFT 11

/* QSFI_IEEE0 :: devices_in_package_1 :: Seperate_PMA_3_Present [10:10] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_3_PRESENT_MASK 0x0400
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_3_PRESENT_ALIGN 0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_3_PRESENT_BITS 1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_3_PRESENT_SHIFT 10

/* QSFI_IEEE0 :: devices_in_package_1 :: Seperate_PMA_2_Present [09:09] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_2_PRESENT_MASK 0x0200
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_2_PRESENT_ALIGN 0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_2_PRESENT_BITS 1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_2_PRESENT_SHIFT 9

/* QSFI_IEEE0 :: devices_in_package_1 :: Seperate_PMA_1_Present [08:08] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_1_PRESENT_MASK 0x0100
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_1_PRESENT_ALIGN 0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_1_PRESENT_BITS 1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_SEPERATE_PMA_1_PRESENT_SHIFT 8

/* QSFI_IEEE0 :: devices_in_package_1 :: an_present [07:07] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_AN_PRESENT_MASK            0x0080
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_AN_PRESENT_ALIGN           0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_AN_PRESENT_BITS            1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_AN_PRESENT_SHIFT           7

/* QSFI_IEEE0 :: devices_in_package_1 :: tc_present [06:06] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_TC_PRESENT_MASK            0x0040
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_TC_PRESENT_ALIGN           0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_TC_PRESENT_BITS            1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_TC_PRESENT_SHIFT           6

/* QSFI_IEEE0 :: devices_in_package_1 :: dte_xs_present [05:05] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_DTE_XS_PRESENT_MASK        0x0020
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_DTE_XS_PRESENT_ALIGN       0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_DTE_XS_PRESENT_BITS        1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_DTE_XS_PRESENT_SHIFT       5

/* QSFI_IEEE0 :: devices_in_package_1 :: phy_xs_present [04:04] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PHY_XS_PRESENT_MASK        0x0010
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PHY_XS_PRESENT_ALIGN       0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PHY_XS_PRESENT_BITS        1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PHY_XS_PRESENT_SHIFT       4

/* QSFI_IEEE0 :: devices_in_package_1 :: pcs_present [03:03] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PCS_PRESENT_MASK           0x0008
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PCS_PRESENT_ALIGN          0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PCS_PRESENT_BITS           1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PCS_PRESENT_SHIFT          3

/* QSFI_IEEE0 :: devices_in_package_1 :: wis_present [02:02] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_WIS_PRESENT_MASK           0x0004
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_WIS_PRESENT_ALIGN          0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_WIS_PRESENT_BITS           1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_WIS_PRESENT_SHIFT          2

/* QSFI_IEEE0 :: devices_in_package_1 :: pmd_pma_present [01:01] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PMD_PMA_PRESENT_MASK       0x0002
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PMD_PMA_PRESENT_ALIGN      0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PMD_PMA_PRESENT_BITS       1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_PMD_PMA_PRESENT_SHIFT      1

/* QSFI_IEEE0 :: devices_in_package_1 :: clause_22registers_present [00:00] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_CLAUSE_22REGISTERS_PRESENT_MASK 0x0001
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_CLAUSE_22REGISTERS_PRESENT_ALIGN 0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_CLAUSE_22REGISTERS_PRESENT_BITS 1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_1_CLAUSE_22REGISTERS_PRESENT_SHIFT 0


/****************************************************************************
 * QSFI_IEEE0 :: devices_in_package_2
 ***************************************************************************/
/* QSFI_IEEE0 :: devices_in_package_2 :: vendor_specificdevice_2_present [15:15] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_VENDOR_SPECIFICDEVICE_2_PRESENT_MASK 0x8000
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_VENDOR_SPECIFICDEVICE_2_PRESENT_ALIGN 0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_VENDOR_SPECIFICDEVICE_2_PRESENT_BITS 1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_VENDOR_SPECIFICDEVICE_2_PRESENT_SHIFT 15

/* QSFI_IEEE0 :: devices_in_package_2 :: vendor_specificdevice_1_present [14:14] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_VENDOR_SPECIFICDEVICE_1_PRESENT_MASK 0x4000
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_VENDOR_SPECIFICDEVICE_1_PRESENT_ALIGN 0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_VENDOR_SPECIFICDEVICE_1_PRESENT_BITS 1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_VENDOR_SPECIFICDEVICE_1_PRESENT_SHIFT 14

/* QSFI_IEEE0 :: devices_in_package_2 :: clause_22extension_present [13:13] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_CLAUSE_22EXTENSION_PRESENT_MASK 0x2000
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_CLAUSE_22EXTENSION_PRESENT_ALIGN 0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_CLAUSE_22EXTENSION_PRESENT_BITS 1
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_CLAUSE_22EXTENSION_PRESENT_SHIFT 13

/* QSFI_IEEE0 :: devices_in_package_2 :: reserved0 [12:00] */
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_RESERVED0_MASK             0x1fff
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_RESERVED0_ALIGN            0
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_RESERVED0_BITS             13
#define QSFI_IEEE0_DEVICES_IN_PACKAGE_2_RESERVED0_SHIFT            0


/****************************************************************************
 * QSFI_IEEE0 :: pmd_control_2_register
 ***************************************************************************/
/* QSFI_IEEE0 :: pmd_control_2_register :: reserved0 [15:06] */
#define QSFI_IEEE0_PMD_CONTROL_2_REGISTER_RESERVED0_MASK           0xffc0
#define QSFI_IEEE0_PMD_CONTROL_2_REGISTER_RESERVED0_ALIGN          0
#define QSFI_IEEE0_PMD_CONTROL_2_REGISTER_RESERVED0_BITS           10
#define QSFI_IEEE0_PMD_CONTROL_2_REGISTER_RESERVED0_SHIFT          6

/* QSFI_IEEE0 :: pmd_control_2_register :: pma_typeselection [05:00] */
#define QSFI_IEEE0_PMD_CONTROL_2_REGISTER_PMA_TYPESELECTION_MASK   0x003f
#define QSFI_IEEE0_PMD_CONTROL_2_REGISTER_PMA_TYPESELECTION_ALIGN  0
#define QSFI_IEEE0_PMD_CONTROL_2_REGISTER_PMA_TYPESELECTION_BITS   6
#define QSFI_IEEE0_PMD_CONTROL_2_REGISTER_PMA_TYPESELECTION_SHIFT  0


/****************************************************************************
 * QSFI_IEEE0 :: status_register_2
 ***************************************************************************/
/* QSFI_IEEE0 :: status_register_2 :: device_present [15:14] */
#define QSFI_IEEE0_STATUS_REGISTER_2_DEVICE_PRESENT_MASK           0xc000
#define QSFI_IEEE0_STATUS_REGISTER_2_DEVICE_PRESENT_ALIGN          0
#define QSFI_IEEE0_STATUS_REGISTER_2_DEVICE_PRESENT_BITS           2
#define QSFI_IEEE0_STATUS_REGISTER_2_DEVICE_PRESENT_SHIFT          14

/* QSFI_IEEE0 :: status_register_2 :: transmit_localfault_ability [13:13] */
#define QSFI_IEEE0_STATUS_REGISTER_2_TRANSMIT_LOCALFAULT_ABILITY_MASK 0x2000
#define QSFI_IEEE0_STATUS_REGISTER_2_TRANSMIT_LOCALFAULT_ABILITY_ALIGN 0
#define QSFI_IEEE0_STATUS_REGISTER_2_TRANSMIT_LOCALFAULT_ABILITY_BITS 1
#define QSFI_IEEE0_STATUS_REGISTER_2_TRANSMIT_LOCALFAULT_ABILITY_SHIFT 13

/* QSFI_IEEE0 :: status_register_2 :: receive_localfault_ability [12:12] */
#define QSFI_IEEE0_STATUS_REGISTER_2_RECEIVE_LOCALFAULT_ABILITY_MASK 0x1000
#define QSFI_IEEE0_STATUS_REGISTER_2_RECEIVE_LOCALFAULT_ABILITY_ALIGN 0
#define QSFI_IEEE0_STATUS_REGISTER_2_RECEIVE_LOCALFAULT_ABILITY_BITS 1
#define QSFI_IEEE0_STATUS_REGISTER_2_RECEIVE_LOCALFAULT_ABILITY_SHIFT 12

/* QSFI_IEEE0 :: status_register_2 :: transmit_localfault [11:11] */
#define QSFI_IEEE0_STATUS_REGISTER_2_TRANSMIT_LOCALFAULT_MASK      0x0800
#define QSFI_IEEE0_STATUS_REGISTER_2_TRANSMIT_LOCALFAULT_ALIGN     0
#define QSFI_IEEE0_STATUS_REGISTER_2_TRANSMIT_LOCALFAULT_BITS      1
#define QSFI_IEEE0_STATUS_REGISTER_2_TRANSMIT_LOCALFAULT_SHIFT     11

/* QSFI_IEEE0 :: status_register_2 :: receive_localfault [10:10] */
#define QSFI_IEEE0_STATUS_REGISTER_2_RECEIVE_LOCALFAULT_MASK       0x0400
#define QSFI_IEEE0_STATUS_REGISTER_2_RECEIVE_LOCALFAULT_ALIGN      0
#define QSFI_IEEE0_STATUS_REGISTER_2_RECEIVE_LOCALFAULT_BITS       1
#define QSFI_IEEE0_STATUS_REGISTER_2_RECEIVE_LOCALFAULT_SHIFT      10

/* QSFI_IEEE0 :: status_register_2 :: extended_abilities [09:09] */
#define QSFI_IEEE0_STATUS_REGISTER_2_EXTENDED_ABILITIES_MASK       0x0200
#define QSFI_IEEE0_STATUS_REGISTER_2_EXTENDED_ABILITIES_ALIGN      0
#define QSFI_IEEE0_STATUS_REGISTER_2_EXTENDED_ABILITIES_BITS       1
#define QSFI_IEEE0_STATUS_REGISTER_2_EXTENDED_ABILITIES_SHIFT      9

/* QSFI_IEEE0 :: status_register_2 :: pmd_transmitdisable_ability [08:08] */
#define QSFI_IEEE0_STATUS_REGISTER_2_PMD_TRANSMITDISABLE_ABILITY_MASK 0x0100
#define QSFI_IEEE0_STATUS_REGISTER_2_PMD_TRANSMITDISABLE_ABILITY_ALIGN 0
#define QSFI_IEEE0_STATUS_REGISTER_2_PMD_TRANSMITDISABLE_ABILITY_BITS 1
#define QSFI_IEEE0_STATUS_REGISTER_2_PMD_TRANSMITDISABLE_ABILITY_SHIFT 8

/* QSFI_IEEE0 :: status_register_2 :: tengbase_sr_ability [07:07] */
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_SR_ABILITY_MASK      0x0080
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_SR_ABILITY_ALIGN     0
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_SR_ABILITY_BITS      1
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_SR_ABILITY_SHIFT     7

/* QSFI_IEEE0 :: status_register_2 :: tengbase_lr_ability [06:06] */
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LR_ABILITY_MASK      0x0040
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LR_ABILITY_ALIGN     0
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LR_ABILITY_BITS      1
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LR_ABILITY_SHIFT     6

/* QSFI_IEEE0 :: status_register_2 :: tengbase_er_ability [05:05] */
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_ER_ABILITY_MASK      0x0020
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_ER_ABILITY_ALIGN     0
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_ER_ABILITY_BITS      1
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_ER_ABILITY_SHIFT     5

/* QSFI_IEEE0 :: status_register_2 :: tengbase_lx4_ability [04:04] */
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LX4_ABILITY_MASK     0x0010
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LX4_ABILITY_ALIGN    0
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LX4_ABILITY_BITS     1
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LX4_ABILITY_SHIFT    4

/* QSFI_IEEE0 :: status_register_2 :: tengbase_sw_ability [03:03] */
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_SW_ABILITY_MASK      0x0008
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_SW_ABILITY_ALIGN     0
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_SW_ABILITY_BITS      1
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_SW_ABILITY_SHIFT     3

/* QSFI_IEEE0 :: status_register_2 :: tengbase_lw_ability [02:02] */
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LW_ABILITY_MASK      0x0004
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LW_ABILITY_ALIGN     0
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LW_ABILITY_BITS      1
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_LW_ABILITY_SHIFT     2

/* QSFI_IEEE0 :: status_register_2 :: tengbase_ew_ability [01:01] */
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_EW_ABILITY_MASK      0x0002
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_EW_ABILITY_ALIGN     0
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_EW_ABILITY_BITS      1
#define QSFI_IEEE0_STATUS_REGISTER_2_TENGBASE_EW_ABILITY_SHIFT     1

/* QSFI_IEEE0 :: status_register_2 :: pma_local_loopback_ability [00:00] */
#define QSFI_IEEE0_STATUS_REGISTER_2_PMA_LOCAL_LOOPBACK_ABILITY_MASK 0x0001
#define QSFI_IEEE0_STATUS_REGISTER_2_PMA_LOCAL_LOOPBACK_ABILITY_ALIGN 0
#define QSFI_IEEE0_STATUS_REGISTER_2_PMA_LOCAL_LOOPBACK_ABILITY_BITS 1
#define QSFI_IEEE0_STATUS_REGISTER_2_PMA_LOCAL_LOOPBACK_ABILITY_SHIFT 0


/****************************************************************************
 * QSFI_IEEE0 :: pmd_transmit_disable_register
 ***************************************************************************/
/* QSFI_IEEE0 :: pmd_transmit_disable_register :: reserved0 [15:05] */
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_RESERVED0_MASK    0xffe0
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_RESERVED0_ALIGN   0
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_RESERVED0_BITS    11
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_RESERVED0_SHIFT   5

/* QSFI_IEEE0 :: pmd_transmit_disable_register :: pmd_transmitdisable_3 [04:04] */
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_3_MASK 0x0010
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_3_ALIGN 0
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_3_BITS 1
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_3_SHIFT 4

/* QSFI_IEEE0 :: pmd_transmit_disable_register :: pmd_transmitdisable_2 [03:03] */
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_2_MASK 0x0008
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_2_ALIGN 0
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_2_BITS 1
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_2_SHIFT 3

/* QSFI_IEEE0 :: pmd_transmit_disable_register :: pmd_transmitdisable_1 [02:02] */
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_1_MASK 0x0004
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_1_ALIGN 0
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_1_BITS 1
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_1_SHIFT 2

/* QSFI_IEEE0 :: pmd_transmit_disable_register :: pmd_transmitdisable_0 [01:01] */
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_0_MASK 0x0002
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_0_ALIGN 0
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_0_BITS 1
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_PMD_TRANSMITDISABLE_0_SHIFT 1

/* QSFI_IEEE0 :: pmd_transmit_disable_register :: global_pmdtransmit_disable [00:00] */
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_GLOBAL_PMDTRANSMIT_DISABLE_MASK 0x0001
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_GLOBAL_PMDTRANSMIT_DISABLE_ALIGN 0
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_GLOBAL_PMDTRANSMIT_DISABLE_BITS 1
#define QSFI_IEEE0_PMD_TRANSMIT_DISABLE_REGISTER_GLOBAL_PMDTRANSMIT_DISABLE_SHIFT 0


/****************************************************************************
 * QSFI_IEEE0 :: pmd_receive_signal_detect_register
 ***************************************************************************/
/* QSFI_IEEE0 :: pmd_receive_signal_detect_register :: reserved0 [15:05] */
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_RESERVED0_MASK 0xffe0
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_RESERVED0_ALIGN 0
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_RESERVED0_BITS 11
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_RESERVED0_SHIFT 5

/* QSFI_IEEE0 :: pmd_receive_signal_detect_register :: pmd_receivesignal_detect_3 [04:04] */
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_3_MASK 0x0010
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_3_ALIGN 0
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_3_BITS 1
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_3_SHIFT 4

/* QSFI_IEEE0 :: pmd_receive_signal_detect_register :: pmd_receivesignal_detect_2 [03:03] */
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_2_MASK 0x0008
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_2_ALIGN 0
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_2_BITS 1
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_2_SHIFT 3

/* QSFI_IEEE0 :: pmd_receive_signal_detect_register :: pmd_receivesignal_detect_1 [02:02] */
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_1_MASK 0x0004
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_1_ALIGN 0
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_1_BITS 1
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_1_SHIFT 2

/* QSFI_IEEE0 :: pmd_receive_signal_detect_register :: pmd_receivesignal_detect_0 [01:01] */
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_0_MASK 0x0002
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_0_ALIGN 0
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_0_BITS 1
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_PMD_RECEIVESIGNAL_DETECT_0_SHIFT 1

/* QSFI_IEEE0 :: pmd_receive_signal_detect_register :: global_pmdreceive_signal_ok [00:00] */
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_GLOBAL_PMDRECEIVE_SIGNAL_OK_MASK 0x0001
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_GLOBAL_PMDRECEIVE_SIGNAL_OK_ALIGN 0
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_GLOBAL_PMDRECEIVE_SIGNAL_OK_BITS 1
#define QSFI_IEEE0_PMD_RECEIVE_SIGNAL_DETECT_REGISTER_GLOBAL_PMDRECEIVE_SIGNAL_OK_SHIFT 0


/****************************************************************************
 * QSFI_IEEE0 :: pmd_extended_ability_register
 ***************************************************************************/
/* QSFI_IEEE0 :: pmd_extended_ability_register :: reserved0 [15:11] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_RESERVED0_MASK    0xf800
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_RESERVED0_ALIGN   0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_RESERVED0_BITS    5
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_RESERVED0_SHIFT   11

/* QSFI_IEEE0 :: pmd_extended_ability_register :: fortygbase_ability [10:10] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_ABILITY_MASK 0x0400
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_ABILITY_ALIGN 0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_ABILITY_BITS 1
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_ABILITY_SHIFT 10

/* QSFI_IEEE0 :: pmd_extended_ability_register :: reserved1 [09:09] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_RESERVED1_MASK    0x0200
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_RESERVED1_ALIGN   0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_RESERVED1_BITS    1
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_RESERVED1_SHIFT   9

/* QSFI_IEEE0 :: pmd_extended_ability_register :: tenbase_t_ability [08:08] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENBASE_T_ABILITY_MASK 0x0100
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENBASE_T_ABILITY_ALIGN 0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENBASE_T_ABILITY_BITS 1
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENBASE_T_ABILITY_SHIFT 8

/* QSFI_IEEE0 :: pmd_extended_ability_register :: hundredbase_tx_ability [07:07] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_HUNDREDBASE_TX_ABILITY_MASK 0x0080
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_HUNDREDBASE_TX_ABILITY_ALIGN 0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_HUNDREDBASE_TX_ABILITY_BITS 1
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_HUNDREDBASE_TX_ABILITY_SHIFT 7

/* QSFI_IEEE0 :: pmd_extended_ability_register :: gigbase_kx_ability [06:06] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_GIGBASE_KX_ABILITY_MASK 0x0040
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_GIGBASE_KX_ABILITY_ALIGN 0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_GIGBASE_KX_ABILITY_BITS 1
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_GIGBASE_KX_ABILITY_SHIFT 6

/* QSFI_IEEE0 :: pmd_extended_ability_register :: gigbase_t_ability [05:05] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_GIGBASE_T_ABILITY_MASK 0x0020
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_GIGBASE_T_ABILITY_ALIGN 0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_GIGBASE_T_ABILITY_BITS 1
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_GIGBASE_T_ABILITY_SHIFT 5

/* QSFI_IEEE0 :: pmd_extended_ability_register :: tengbase_kr_ability [04:04] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_KR_ABILITY_MASK 0x0010
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_KR_ABILITY_ALIGN 0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_KR_ABILITY_BITS 1
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_KR_ABILITY_SHIFT 4

/* QSFI_IEEE0 :: pmd_extended_ability_register :: tengbase_kx4_ability [03:03] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_KX4_ABILITY_MASK 0x0008
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_KX4_ABILITY_ALIGN 0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_KX4_ABILITY_BITS 1
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_KX4_ABILITY_SHIFT 3

/* QSFI_IEEE0 :: pmd_extended_ability_register :: tengbase_t_ability [02:02] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_T_ABILITY_MASK 0x0004
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_T_ABILITY_ALIGN 0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_T_ABILITY_BITS 1
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_T_ABILITY_SHIFT 2

/* QSFI_IEEE0 :: pmd_extended_ability_register :: tengbase_lrm_ability [01:01] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_LRM_ABILITY_MASK 0x0002
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_LRM_ABILITY_ALIGN 0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_LRM_ABILITY_BITS 1
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_LRM_ABILITY_SHIFT 1

/* QSFI_IEEE0 :: pmd_extended_ability_register :: tengbase_cx4_ability [00:00] */
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_CX4_ABILITY_MASK 0x0001
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_CX4_ABILITY_ALIGN 0
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_CX4_ABILITY_BITS 1
#define QSFI_IEEE0_PMD_EXTENDED_ABILITY_REGISTER_TENGBASE_CX4_ABILITY_SHIFT 0


/****************************************************************************
 * QSFI_IEEE0 :: fortyg_pmd_extended_ability_register
 ***************************************************************************/
/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: PMA_remote_loopback_Ability [15:15] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_PMA_REMOTE_LOOPBACK_ABILITY_MASK 0x8000
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_PMA_REMOTE_LOOPBACK_ABILITY_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_PMA_REMOTE_LOOPBACK_ABILITY_BITS 1
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_PMA_REMOTE_LOOPBACK_ABILITY_SHIFT 15

/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: reserved0 [14:12] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_RESERVED0_MASK 0x7000
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_RESERVED0_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_RESERVED0_BITS 3
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_RESERVED0_SHIFT 12

/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: one_hundredgbase_ER4_ability [11:11] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_ER4_ABILITY_MASK 0x0800
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_ER4_ABILITY_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_ER4_ABILITY_BITS 1
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_ER4_ABILITY_SHIFT 11

/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: one_hundredgbase_LR4_ability [10:10] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_LR4_ABILITY_MASK 0x0400
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_LR4_ABILITY_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_LR4_ABILITY_BITS 1
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_LR4_ABILITY_SHIFT 10

/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: one_hundredgbase_SR10_ability [09:09] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_SR10_ABILITY_MASK 0x0200
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_SR10_ABILITY_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_SR10_ABILITY_BITS 1
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_SR10_ABILITY_SHIFT 9

/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: one_hundredgbase_CR10_ability [08:08] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_CR10_ABILITY_MASK 0x0100
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_CR10_ABILITY_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_CR10_ABILITY_BITS 1
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_ONE_HUNDREDGBASE_CR10_ABILITY_SHIFT 8

/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: reserved1 [07:05] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_RESERVED1_MASK 0x00e0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_RESERVED1_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_RESERVED1_BITS 3
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_RESERVED1_SHIFT 5

/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: fortygbase_FR_ability [04:04] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_FR_ABILITY_MASK 0x0010
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_FR_ABILITY_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_FR_ABILITY_BITS 1
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_FR_ABILITY_SHIFT 4

/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: fortygbase_LR4_ability [03:03] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_LR4_ABILITY_MASK 0x0008
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_LR4_ABILITY_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_LR4_ABILITY_BITS 1
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_LR4_ABILITY_SHIFT 3

/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: fortygbase_SR4_ability [02:02] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_SR4_ABILITY_MASK 0x0004
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_SR4_ABILITY_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_SR4_ABILITY_BITS 1
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_SR4_ABILITY_SHIFT 2

/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: fortygbase_CR4_ability [01:01] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_CR4_ABILITY_MASK 0x0002
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_CR4_ABILITY_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_CR4_ABILITY_BITS 1
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_CR4_ABILITY_SHIFT 1

/* QSFI_IEEE0 :: fortyg_pmd_extended_ability_register :: fortygbase_KR4_ability [00:00] */
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_KR4_ABILITY_MASK 0x0001
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_KR4_ABILITY_ALIGN 0
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_KR4_ABILITY_BITS 1
#define QSFI_IEEE0_FORTYG_PMD_EXTENDED_ABILITY_REGISTER_FORTYGBASE_KR4_ABILITY_SHIFT 0


/****************************************************************************
 * QSFI_IEEE0 :: pmd_oui_id0_register
 ***************************************************************************/
/* QSFI_IEEE0 :: pmd_oui_id0_register :: device_id_0 [15:00] */
#define QSFI_IEEE0_PMD_OUI_ID0_REGISTER_DEVICE_ID_0_MASK           0xffff
#define QSFI_IEEE0_PMD_OUI_ID0_REGISTER_DEVICE_ID_0_ALIGN          0
#define QSFI_IEEE0_PMD_OUI_ID0_REGISTER_DEVICE_ID_0_BITS           16
#define QSFI_IEEE0_PMD_OUI_ID0_REGISTER_DEVICE_ID_0_SHIFT          0


/****************************************************************************
 * QSFI_IEEE0 :: pmd_oui_id1_reg
 ***************************************************************************/
/* QSFI_IEEE0 :: pmd_oui_id1_reg :: device_id_1 [15:00] */
#define QSFI_IEEE0_PMD_OUI_ID1_REG_DEVICE_ID_1_MASK                0xffff
#define QSFI_IEEE0_PMD_OUI_ID1_REG_DEVICE_ID_1_ALIGN               0
#define QSFI_IEEE0_PMD_OUI_ID1_REG_DEVICE_ID_1_BITS                16
#define QSFI_IEEE0_PMD_OUI_ID1_REG_DEVICE_ID_1_SHIFT               0


/****************************************************************************
 * merlin_gallardo_qsfi_cl73_QSFI_AN_IEEE1
 ***************************************************************************/
/****************************************************************************
 * QSFI_AN_IEEE1 :: an_advertisement_1_register
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_advertisement_1_register :: next_page [15:15] */
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_NEXT_PAGE_MASK   0x8000
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_NEXT_PAGE_ALIGN  0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_NEXT_PAGE_BITS   1
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_NEXT_PAGE_SHIFT  15

/* QSFI_AN_IEEE1 :: an_advertisement_1_register :: acknowledge [14:14] */
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_ACKNOWLEDGE_MASK 0x4000
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_ACKNOWLEDGE_ALIGN 0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_ACKNOWLEDGE_BITS 1
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_ACKNOWLEDGE_SHIFT 14

/* QSFI_AN_IEEE1 :: an_advertisement_1_register :: remote_fault [13:13] */
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_REMOTE_FAULT_MASK 0x2000
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_REMOTE_FAULT_ALIGN 0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_REMOTE_FAULT_BITS 1
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_REMOTE_FAULT_SHIFT 13

/* QSFI_AN_IEEE1 :: an_advertisement_1_register :: pause [12:10] */
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_PAUSE_MASK       0x1c00
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_PAUSE_ALIGN      0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_PAUSE_BITS       3
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_PAUSE_SHIFT      10

/* QSFI_AN_IEEE1 :: an_advertisement_1_register :: echoed_nonce [09:05] */
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_ECHOED_NONCE_MASK 0x03e0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_ECHOED_NONCE_ALIGN 0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_ECHOED_NONCE_BITS 5
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_ECHOED_NONCE_SHIFT 5

/* QSFI_AN_IEEE1 :: an_advertisement_1_register :: selector_field [04:00] */
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_SELECTOR_FIELD_MASK 0x001f
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_SELECTOR_FIELD_ALIGN 0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_SELECTOR_FIELD_BITS 5
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_1_REGISTER_SELECTOR_FIELD_SHIFT 0


/****************************************************************************
 * QSFI_AN_IEEE1 :: an_advertisement_2_register
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_advertisement_2_register :: techAbility [15:05] */
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_2_REGISTER_TECHABILITY_MASK 0xffe0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_2_REGISTER_TECHABILITY_ALIGN 0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_2_REGISTER_TECHABILITY_BITS 11
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_2_REGISTER_TECHABILITY_SHIFT 5

/* QSFI_AN_IEEE1 :: an_advertisement_2_register :: transmitted_nonce [04:00] */
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_2_REGISTER_TRANSMITTED_NONCE_MASK 0x001f
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_2_REGISTER_TRANSMITTED_NONCE_ALIGN 0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_2_REGISTER_TRANSMITTED_NONCE_BITS 5
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_2_REGISTER_TRANSMITTED_NONCE_SHIFT 0


/****************************************************************************
 * QSFI_AN_IEEE1 :: an_advertisement_3_register
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_advertisement_3_register :: fec_requested [15:14] */
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_3_REGISTER_FEC_REQUESTED_MASK 0xc000
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_3_REGISTER_FEC_REQUESTED_ALIGN 0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_3_REGISTER_FEC_REQUESTED_BITS 2
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_3_REGISTER_FEC_REQUESTED_SHIFT 14

/* QSFI_AN_IEEE1 :: an_advertisement_3_register :: an_adv_d45_d32 [13:00] */
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_3_REGISTER_AN_ADV_D45_D32_MASK 0x3fff
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_3_REGISTER_AN_ADV_D45_D32_ALIGN 0
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_3_REGISTER_AN_ADV_D45_D32_BITS 14
#define QSFI_AN_IEEE1_AN_ADVERTISEMENT_3_REGISTER_AN_ADV_D45_D32_SHIFT 0


/****************************************************************************
 * QSFI_AN_IEEE1 :: an_lp_base_page_ability_1_reg
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_lp_base_page_ability_1_reg :: d15_d0 [15:00] */
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_1_REG_D15_D0_MASK    0xffff
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_1_REG_D15_D0_ALIGN   0
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_1_REG_D15_D0_BITS    16
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_1_REG_D15_D0_SHIFT   0


/****************************************************************************
 * QSFI_AN_IEEE1 :: an_lp_base_page_ability_2_reg
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_lp_base_page_ability_2_reg :: d31_16 [15:00] */
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_2_REG_D31_16_MASK    0xffff
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_2_REG_D31_16_ALIGN   0
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_2_REG_D31_16_BITS    16
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_2_REG_D31_16_SHIFT   0


/****************************************************************************
 * QSFI_AN_IEEE1 :: an_lp_base_page_ability_3_reg
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_lp_base_page_ability_3_reg :: d47_32 [15:00] */
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_3_REG_D47_32_MASK    0xffff
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_3_REG_D47_32_ALIGN   0
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_3_REG_D47_32_BITS    16
#define QSFI_AN_IEEE1_AN_LP_BASE_PAGE_ABILITY_3_REG_D47_32_SHIFT   0


/****************************************************************************
 * QSFI_AN_IEEE1 :: an_xnp_transmit_1_register
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_xnp_transmit_1_register :: next_page [15:15] */
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_NEXT_PAGE_MASK    0x8000
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_NEXT_PAGE_ALIGN   0
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_NEXT_PAGE_BITS    1
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_NEXT_PAGE_SHIFT   15

/* QSFI_AN_IEEE1 :: an_xnp_transmit_1_register :: reserved0 [14:14] */
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_RESERVED0_MASK    0x4000
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_RESERVED0_ALIGN   0
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_RESERVED0_BITS    1
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_RESERVED0_SHIFT   14

/* QSFI_AN_IEEE1 :: an_xnp_transmit_1_register :: message_page [13:13] */
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_MESSAGE_PAGE_MASK 0x2000
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_MESSAGE_PAGE_ALIGN 0
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_MESSAGE_PAGE_BITS 1
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_MESSAGE_PAGE_SHIFT 13

/* QSFI_AN_IEEE1 :: an_xnp_transmit_1_register :: acknowledge_2 [12:12] */
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_2_MASK 0x1000
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_2_ALIGN 0
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_2_BITS 1
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_2_SHIFT 12

/* QSFI_AN_IEEE1 :: an_xnp_transmit_1_register :: toggle [11:11] */
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_TOGGLE_MASK       0x0800
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_TOGGLE_ALIGN      0
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_TOGGLE_BITS       1
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_TOGGLE_SHIFT      11

/* QSFI_AN_IEEE1 :: an_xnp_transmit_1_register :: message_unformatedcode_field [10:00] */
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_MESSAGE_UNFORMATEDCODE_FIELD_MASK 0x07ff
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_MESSAGE_UNFORMATEDCODE_FIELD_ALIGN 0
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_MESSAGE_UNFORMATEDCODE_FIELD_BITS 11
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_1_REGISTER_MESSAGE_UNFORMATEDCODE_FIELD_SHIFT 0


/****************************************************************************
 * QSFI_AN_IEEE1 :: an_xnp_transmit_2_register
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_xnp_transmit_2_register :: unformated_codefield_1 [15:00] */
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_2_REGISTER_UNFORMATED_CODEFIELD_1_MASK 0xffff
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_2_REGISTER_UNFORMATED_CODEFIELD_1_ALIGN 0
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_2_REGISTER_UNFORMATED_CODEFIELD_1_BITS 16
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_2_REGISTER_UNFORMATED_CODEFIELD_1_SHIFT 0


/****************************************************************************
 * QSFI_AN_IEEE1 :: an_xnp_transmit_3_register
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_xnp_transmit_3_register :: unformated_codefield_3 [15:00] */
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_3_REGISTER_UNFORMATED_CODEFIELD_3_MASK 0xffff
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_3_REGISTER_UNFORMATED_CODEFIELD_3_ALIGN 0
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_3_REGISTER_UNFORMATED_CODEFIELD_3_BITS 16
#define QSFI_AN_IEEE1_AN_XNP_TRANSMIT_3_REGISTER_UNFORMATED_CODEFIELD_3_SHIFT 0


/****************************************************************************
 * QSFI_AN_IEEE1 :: an_lp_xnp_transmit_1_register
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_lp_xnp_transmit_1_register :: next_page [15:15] */
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_NEXT_PAGE_MASK 0x8000
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_NEXT_PAGE_ALIGN 0
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_NEXT_PAGE_BITS 1
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_NEXT_PAGE_SHIFT 15

/* QSFI_AN_IEEE1 :: an_lp_xnp_transmit_1_register :: acknowledge [14:14] */
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_MASK 0x4000
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_ALIGN 0
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_BITS 1
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_SHIFT 14

/* QSFI_AN_IEEE1 :: an_lp_xnp_transmit_1_register :: message_page [13:13] */
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_MESSAGE_PAGE_MASK 0x2000
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_MESSAGE_PAGE_ALIGN 0
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_MESSAGE_PAGE_BITS 1
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_MESSAGE_PAGE_SHIFT 13

/* QSFI_AN_IEEE1 :: an_lp_xnp_transmit_1_register :: acknowledge_2 [12:12] */
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_2_MASK 0x1000
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_2_ALIGN 0
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_2_BITS 1
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_ACKNOWLEDGE_2_SHIFT 12

/* QSFI_AN_IEEE1 :: an_lp_xnp_transmit_1_register :: toggle [11:11] */
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_TOGGLE_MASK    0x0800
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_TOGGLE_ALIGN   0
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_TOGGLE_BITS    1
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_TOGGLE_SHIFT   11

/* QSFI_AN_IEEE1 :: an_lp_xnp_transmit_1_register :: message_unformatedcode_field [10:00] */
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_MESSAGE_UNFORMATEDCODE_FIELD_MASK 0x07ff
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_MESSAGE_UNFORMATEDCODE_FIELD_ALIGN 0
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_MESSAGE_UNFORMATEDCODE_FIELD_BITS 11
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_1_REGISTER_MESSAGE_UNFORMATEDCODE_FIELD_SHIFT 0


/****************************************************************************
 * QSFI_AN_IEEE1 :: an_lp_xnp_transmit_2_register
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_lp_xnp_transmit_2_register :: unformated_codefield_1 [15:00] */
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_2_REGISTER_UNFORMATED_CODEFIELD_1_MASK 0xffff
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_2_REGISTER_UNFORMATED_CODEFIELD_1_ALIGN 0
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_2_REGISTER_UNFORMATED_CODEFIELD_1_BITS 16
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_2_REGISTER_UNFORMATED_CODEFIELD_1_SHIFT 0


/****************************************************************************
 * QSFI_AN_IEEE1 :: an_lp_xnp_transmit_3_register
 ***************************************************************************/
/* QSFI_AN_IEEE1 :: an_lp_xnp_transmit_3_register :: unformated_codefield_3 [15:00] */
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_3_REGISTER_UNFORMATED_CODEFIELD_3_MASK 0xffff
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_3_REGISTER_UNFORMATED_CODEFIELD_3_ALIGN 0
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_3_REGISTER_UNFORMATED_CODEFIELD_3_BITS 16
#define QSFI_AN_IEEE1_AN_LP_XNP_TRANSMIT_3_REGISTER_UNFORMATED_CODEFIELD_3_SHIFT 0


/****************************************************************************
 * merlin_gallardo_qsfi_cl73_QSFI_AN_IEEE3
 ***************************************************************************/
/****************************************************************************
 * QSFI_AN_IEEE3 :: backplane_ethernet_status_register
 ***************************************************************************/
/* QSFI_AN_IEEE3 :: backplane_ethernet_status_register :: reserved0 [15:09] */
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_RESERVED0_MASK 0xfe00
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_RESERVED0_ALIGN 0
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_RESERVED0_BITS 7
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_RESERVED0_SHIFT 9

/* QSFI_AN_IEEE3 :: backplane_ethernet_status_register :: onehundredbase_cr10 [08:08] */
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_ONEHUNDREDBASE_CR10_MASK 0x0100
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_ONEHUNDREDBASE_CR10_ALIGN 0
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_ONEHUNDREDBASE_CR10_BITS 1
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_ONEHUNDREDBASE_CR10_SHIFT 8

/* QSFI_AN_IEEE3 :: backplane_ethernet_status_register :: reserved1 [07:07] */
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_RESERVED1_MASK 0x0080
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_RESERVED1_ALIGN 0
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_RESERVED1_BITS 1
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_RESERVED1_SHIFT 7

/* QSFI_AN_IEEE3 :: backplane_ethernet_status_register :: fortygbase_cr4 [06:06] */
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FORTYGBASE_CR4_MASK 0x0040
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FORTYGBASE_CR4_ALIGN 0
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FORTYGBASE_CR4_BITS 1
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FORTYGBASE_CR4_SHIFT 6

/* QSFI_AN_IEEE3 :: backplane_ethernet_status_register :: fortygbase_kr4 [05:05] */
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FORTYGBASE_KR4_MASK 0x0020
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FORTYGBASE_KR4_ALIGN 0
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FORTYGBASE_KR4_BITS 1
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FORTYGBASE_KR4_SHIFT 5

/* QSFI_AN_IEEE3 :: backplane_ethernet_status_register :: fec_negotiated [04:04] */
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FEC_NEGOTIATED_MASK 0x0010
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FEC_NEGOTIATED_ALIGN 0
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FEC_NEGOTIATED_BITS 1
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_FEC_NEGOTIATED_SHIFT 4

/* QSFI_AN_IEEE3 :: backplane_ethernet_status_register :: tengbase_kr [03:03] */
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_TENGBASE_KR_MASK 0x0008
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_TENGBASE_KR_ALIGN 0
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_TENGBASE_KR_BITS 1
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_TENGBASE_KR_SHIFT 3

/* QSFI_AN_IEEE3 :: backplane_ethernet_status_register :: tengbase_kx4 [02:02] */
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_TENGBASE_KX4_MASK 0x0004
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_TENGBASE_KX4_ALIGN 0
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_TENGBASE_KX4_BITS 1
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_TENGBASE_KX4_SHIFT 2

/* QSFI_AN_IEEE3 :: backplane_ethernet_status_register :: gigbase_kx [01:01] */
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_GIGBASE_KX_MASK 0x0002
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_GIGBASE_KX_ALIGN 0
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_GIGBASE_KX_BITS 1
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_GIGBASE_KX_SHIFT 1

/* QSFI_AN_IEEE3 :: backplane_ethernet_status_register :: bp_an_ability [00:00] */
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_BP_AN_ABILITY_MASK 0x0001
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_BP_AN_ABILITY_ALIGN 0
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_BP_AN_ABILITY_BITS 1
#define QSFI_AN_IEEE3_BACKPLANE_ETHERNET_STATUS_REGISTER_BP_AN_ABILITY_SHIFT 0


/****************************************************************************
 * QSFI_AN_IEEE3 :: EEE_adv
 ***************************************************************************/
/* QSFI_AN_IEEE3 :: EEE_adv :: reserved0 [15:07] */
#define QSFI_AN_IEEE3_EEE_ADV_RESERVED0_MASK                       0xff80
#define QSFI_AN_IEEE3_EEE_ADV_RESERVED0_ALIGN                      0
#define QSFI_AN_IEEE3_EEE_ADV_RESERVED0_BITS                       9
#define QSFI_AN_IEEE3_EEE_ADV_RESERVED0_SHIFT                      7

/* QSFI_AN_IEEE3 :: EEE_adv :: EEE_10G_KR [06:06] */
#define QSFI_AN_IEEE3_EEE_ADV_EEE_10G_KR_MASK                      0x0040
#define QSFI_AN_IEEE3_EEE_ADV_EEE_10G_KR_ALIGN                     0
#define QSFI_AN_IEEE3_EEE_ADV_EEE_10G_KR_BITS                      1
#define QSFI_AN_IEEE3_EEE_ADV_EEE_10G_KR_SHIFT                     6

/* QSFI_AN_IEEE3 :: EEE_adv :: EEE_10G_KX4 [05:05] */
#define QSFI_AN_IEEE3_EEE_ADV_EEE_10G_KX4_MASK                     0x0020
#define QSFI_AN_IEEE3_EEE_ADV_EEE_10G_KX4_ALIGN                    0
#define QSFI_AN_IEEE3_EEE_ADV_EEE_10G_KX4_BITS                     1
#define QSFI_AN_IEEE3_EEE_ADV_EEE_10G_KX4_SHIFT                    5

/* QSFI_AN_IEEE3 :: EEE_adv :: EEE_1G_KX [04:04] */
#define QSFI_AN_IEEE3_EEE_ADV_EEE_1G_KX_MASK                       0x0010
#define QSFI_AN_IEEE3_EEE_ADV_EEE_1G_KX_ALIGN                      0
#define QSFI_AN_IEEE3_EEE_ADV_EEE_1G_KX_BITS                       1
#define QSFI_AN_IEEE3_EEE_ADV_EEE_1G_KX_SHIFT                      4

/* QSFI_AN_IEEE3 :: EEE_adv :: reserved1 [03:00] */
#define QSFI_AN_IEEE3_EEE_ADV_RESERVED1_MASK                       0x000f
#define QSFI_AN_IEEE3_EEE_ADV_RESERVED1_ALIGN                      0
#define QSFI_AN_IEEE3_EEE_ADV_RESERVED1_BITS                       4
#define QSFI_AN_IEEE3_EEE_ADV_RESERVED1_SHIFT                      0


/****************************************************************************
 * QSFI_AN_IEEE3 :: EEE_lp_adv
 ***************************************************************************/
/* QSFI_AN_IEEE3 :: EEE_lp_adv :: reserved0 [15:07] */
#define QSFI_AN_IEEE3_EEE_LP_ADV_RESERVED0_MASK                    0xff80
#define QSFI_AN_IEEE3_EEE_LP_ADV_RESERVED0_ALIGN                   0
#define QSFI_AN_IEEE3_EEE_LP_ADV_RESERVED0_BITS                    9
#define QSFI_AN_IEEE3_EEE_LP_ADV_RESERVED0_SHIFT                   7

/* QSFI_AN_IEEE3 :: EEE_lp_adv :: EEE_10G_KR [06:06] */
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_10G_KR_MASK                   0x0040
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_10G_KR_ALIGN                  0
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_10G_KR_BITS                   1
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_10G_KR_SHIFT                  6

/* QSFI_AN_IEEE3 :: EEE_lp_adv :: EEE_10G_KX4 [05:05] */
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_10G_KX4_MASK                  0x0020
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_10G_KX4_ALIGN                 0
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_10G_KX4_BITS                  1
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_10G_KX4_SHIFT                 5

/* QSFI_AN_IEEE3 :: EEE_lp_adv :: EEE_1G_KX [04:04] */
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_1G_KX_MASK                    0x0010
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_1G_KX_ALIGN                   0
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_1G_KX_BITS                    1
#define QSFI_AN_IEEE3_EEE_LP_ADV_EEE_1G_KX_SHIFT                   4

/* QSFI_AN_IEEE3 :: EEE_lp_adv :: reserved1 [03:00] */
#define QSFI_AN_IEEE3_EEE_LP_ADV_RESERVED1_MASK                    0x000f
#define QSFI_AN_IEEE3_EEE_LP_ADV_RESERVED1_ALIGN                   0
#define QSFI_AN_IEEE3_EEE_LP_ADV_RESERVED1_BITS                    4
#define QSFI_AN_IEEE3_EEE_LP_ADV_RESERVED1_SHIFT                   0


/****************************************************************************
 * merlin_gallardo_cl72b_ieee_blk_CL72_IEEE_TX
 ***************************************************************************/
/****************************************************************************
 * CL72_IEEE_TX :: BASE_R_PMD_control_register_150
 ***************************************************************************/
/* CL72_IEEE_TX :: BASE_R_PMD_control_register_150 :: reserved0 [15:02] */
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_RESERVED0_MASK 0xfffc
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_RESERVED0_ALIGN 0
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_RESERVED0_BITS 14
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_RESERVED0_SHIFT 2

/* CL72_IEEE_TX :: BASE_R_PMD_control_register_150 :: training_enable [01:01] */
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_TRAINING_ENABLE_MASK 0x0002
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_TRAINING_ENABLE_ALIGN 0
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_TRAINING_ENABLE_BITS 1
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_TRAINING_ENABLE_SHIFT 1

/* CL72_IEEE_TX :: BASE_R_PMD_control_register_150 :: restart_training [00:00] */
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_RESTART_TRAINING_MASK 0x0001
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_RESTART_TRAINING_ALIGN 0
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_RESTART_TRAINING_BITS 1
#define CL72_IEEE_TX_BASE_R_PMD_CONTROL_REGISTER_150_RESTART_TRAINING_SHIFT 0


/****************************************************************************
 * CL72_IEEE_TX :: BASE_R_PMD_status_register_151
 ***************************************************************************/
/* CL72_IEEE_TX :: BASE_R_PMD_status_register_151 :: reserved0 [15:04] */
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_RESERVED0_MASK 0xfff0
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_RESERVED0_ALIGN 0
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_RESERVED0_BITS 12
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_RESERVED0_SHIFT 4

/* CL72_IEEE_TX :: BASE_R_PMD_status_register_151 :: training_failure [03:03] */
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_TRAINING_FAILURE_MASK 0x0008
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_TRAINING_FAILURE_ALIGN 0
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_TRAINING_FAILURE_BITS 1
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_TRAINING_FAILURE_SHIFT 3

/* CL72_IEEE_TX :: BASE_R_PMD_status_register_151 :: training_status [02:02] */
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_TRAINING_STATUS_MASK 0x0004
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_TRAINING_STATUS_ALIGN 0
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_TRAINING_STATUS_BITS 1
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_TRAINING_STATUS_SHIFT 2

/* CL72_IEEE_TX :: BASE_R_PMD_status_register_151 :: frame_lock [01:01] */
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_FRAME_LOCK_MASK 0x0002
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_FRAME_LOCK_ALIGN 0
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_FRAME_LOCK_BITS 1
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_FRAME_LOCK_SHIFT 1

/* CL72_IEEE_TX :: BASE_R_PMD_status_register_151 :: receiver_status [00:00] */
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_RECEIVER_STATUS_MASK 0x0001
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_RECEIVER_STATUS_ALIGN 0
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_RECEIVER_STATUS_BITS 1
#define CL72_IEEE_TX_BASE_R_PMD_STATUS_REGISTER_151_RECEIVER_STATUS_SHIFT 0


/****************************************************************************
 * CL72_IEEE_TX :: BASE_R_LP_coeff_update_register_152
 ***************************************************************************/
/* CL72_IEEE_TX :: BASE_R_LP_coeff_update_register_152 :: lp_coeff_update [15:00] */
#define CL72_IEEE_TX_BASE_R_LP_COEFF_UPDATE_REGISTER_152_LP_COEFF_UPDATE_MASK 0xffff
#define CL72_IEEE_TX_BASE_R_LP_COEFF_UPDATE_REGISTER_152_LP_COEFF_UPDATE_ALIGN 0
#define CL72_IEEE_TX_BASE_R_LP_COEFF_UPDATE_REGISTER_152_LP_COEFF_UPDATE_BITS 16
#define CL72_IEEE_TX_BASE_R_LP_COEFF_UPDATE_REGISTER_152_LP_COEFF_UPDATE_SHIFT 0


/****************************************************************************
 * CL72_IEEE_TX :: BASE_R_LD_coeff_update_register_154
 ***************************************************************************/
/* CL72_IEEE_TX :: BASE_R_LD_coeff_update_register_154 :: ld_coeff_update [15:00] */
#define CL72_IEEE_TX_BASE_R_LD_COEFF_UPDATE_REGISTER_154_LD_COEFF_UPDATE_MASK 0xffff
#define CL72_IEEE_TX_BASE_R_LD_COEFF_UPDATE_REGISTER_154_LD_COEFF_UPDATE_ALIGN 0
#define CL72_IEEE_TX_BASE_R_LD_COEFF_UPDATE_REGISTER_154_LD_COEFF_UPDATE_BITS 16
#define CL72_IEEE_TX_BASE_R_LD_COEFF_UPDATE_REGISTER_154_LD_COEFF_UPDATE_SHIFT 0


/****************************************************************************
 * CL72_IEEE_TX :: BASE_R_LD_status_report_register_155
 ***************************************************************************/
/* CL72_IEEE_TX :: BASE_R_LD_status_report_register_155 :: ld_status_report [15:00] */
#define CL72_IEEE_TX_BASE_R_LD_STATUS_REPORT_REGISTER_155_LD_STATUS_REPORT_MASK 0xffff
#define CL72_IEEE_TX_BASE_R_LD_STATUS_REPORT_REGISTER_155_LD_STATUS_REPORT_ALIGN 0
#define CL72_IEEE_TX_BASE_R_LD_STATUS_REPORT_REGISTER_155_LD_STATUS_REPORT_BITS 16
#define CL72_IEEE_TX_BASE_R_LD_STATUS_REPORT_REGISTER_155_LD_STATUS_REPORT_SHIFT 0


/****************************************************************************
 * merlin_gallardo_cl72b_ieee_blk_CL72_IEEE_RX
 ***************************************************************************/
/****************************************************************************
 * CL72_IEEE_RX :: BASE_R_LD_status_report_register_153
 ***************************************************************************/
/* CL72_IEEE_RX :: BASE_R_LD_status_report_register_153 :: lp_status_report [15:00] */
#define CL72_IEEE_RX_BASE_R_LD_STATUS_REPORT_REGISTER_153_LP_STATUS_REPORT_MASK 0xffff
#define CL72_IEEE_RX_BASE_R_LD_STATUS_REPORT_REGISTER_153_LP_STATUS_REPORT_ALIGN 0
#define CL72_IEEE_RX_BASE_R_LD_STATUS_REPORT_REGISTER_153_LP_STATUS_REPORT_BITS 16
#define CL72_IEEE_RX_BASE_R_LD_STATUS_REPORT_REGISTER_153_LP_STATUS_REPORT_SHIFT 0


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_IEEE10
 ***************************************************************************/
/****************************************************************************
 * QSFI_IEEE10 :: tengbase_kx_control_register
 ***************************************************************************/
/* QSFI_IEEE10 :: tengbase_kx_control_register :: reserved0 [15:01] */
#define QSFI_IEEE10_TENGBASE_KX_CONTROL_REGISTER_RESERVED0_MASK    0xfffe
#define QSFI_IEEE10_TENGBASE_KX_CONTROL_REGISTER_RESERVED0_ALIGN   0
#define QSFI_IEEE10_TENGBASE_KX_CONTROL_REGISTER_RESERVED0_BITS    15
#define QSFI_IEEE10_TENGBASE_KX_CONTROL_REGISTER_RESERVED0_SHIFT   1

/* QSFI_IEEE10 :: tengbase_kx_control_register :: pmd_transmit_disable [00:00] */
#define QSFI_IEEE10_TENGBASE_KX_CONTROL_REGISTER_PMD_TRANSMIT_DISABLE_MASK 0x0001
#define QSFI_IEEE10_TENGBASE_KX_CONTROL_REGISTER_PMD_TRANSMIT_DISABLE_ALIGN 0
#define QSFI_IEEE10_TENGBASE_KX_CONTROL_REGISTER_PMD_TRANSMIT_DISABLE_BITS 1
#define QSFI_IEEE10_TENGBASE_KX_CONTROL_REGISTER_PMD_TRANSMIT_DISABLE_SHIFT 0


/****************************************************************************
 * QSFI_IEEE10 :: tengbase_kx_status_register
 ***************************************************************************/
/* QSFI_IEEE10 :: tengbase_kx_status_register :: reserved0 [15:14] */
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED0_MASK     0xc000
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED0_ALIGN    0
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED0_BITS     2
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED0_SHIFT    14

/* QSFI_IEEE10 :: tengbase_kx_status_register :: transmit_faultability [13:13] */
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_TRANSMIT_FAULTABILITY_MASK 0x2000
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_TRANSMIT_FAULTABILITY_ALIGN 0
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_TRANSMIT_FAULTABILITY_BITS 1
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_TRANSMIT_FAULTABILITY_SHIFT 13

/* QSFI_IEEE10 :: tengbase_kx_status_register :: receive_faultability [12:12] */
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RECEIVE_FAULTABILITY_MASK 0x1000
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RECEIVE_FAULTABILITY_ALIGN 0
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RECEIVE_FAULTABILITY_BITS 1
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RECEIVE_FAULTABILITY_SHIFT 12

/* QSFI_IEEE10 :: tengbase_kx_status_register :: transmit_fault [11:11] */
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_TRANSMIT_FAULT_MASK 0x0800
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_TRANSMIT_FAULT_ALIGN 0
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_TRANSMIT_FAULT_BITS 1
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_TRANSMIT_FAULT_SHIFT 11

/* QSFI_IEEE10 :: tengbase_kx_status_register :: receive_fault [10:10] */
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RECEIVE_FAULT_MASK 0x0400
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RECEIVE_FAULT_ALIGN 0
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RECEIVE_FAULT_BITS 1
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RECEIVE_FAULT_SHIFT 10

/* QSFI_IEEE10 :: tengbase_kx_status_register :: reserved1 [09:09] */
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED1_MASK     0x0200
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED1_ALIGN    0
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED1_BITS     1
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED1_SHIFT    9

/* QSFI_IEEE10 :: tengbase_kx_status_register :: pmd_transmitdisable_ability [08:08] */
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_PMD_TRANSMITDISABLE_ABILITY_MASK 0x0100
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_PMD_TRANSMITDISABLE_ABILITY_ALIGN 0
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_PMD_TRANSMITDISABLE_ABILITY_BITS 1
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_PMD_TRANSMITDISABLE_ABILITY_SHIFT 8

/* QSFI_IEEE10 :: tengbase_kx_status_register :: reserved2 [07:01] */
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED2_MASK     0x00fe
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED2_ALIGN    0
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED2_BITS     7
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_RESERVED2_SHIFT    1

/* QSFI_IEEE10 :: tengbase_kx_status_register :: signal_detectfrom_pmd [00:00] */
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_SIGNAL_DETECTFROM_PMD_MASK 0x0001
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_SIGNAL_DETECTFROM_PMD_ALIGN 0
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_SIGNAL_DETECTFROM_PMD_BITS 1
#define QSFI_IEEE10_TENGBASE_KX_STATUS_REGISTER_SIGNAL_DETECTFROM_PMD_SHIFT 0


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_XGXS_BLK0
 ***************************************************************************/
/****************************************************************************
 * QSFI_XGXS_BLK0 :: xgxsControl
 ***************************************************************************/
/* QSFI_XGXS_BLK0 :: xgxsControl :: reserved0 [15:14] */
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED0_MASK                  0xc000
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED0_ALIGN                 0
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED0_BITS                  2
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED0_SHIFT                 14

/* QSFI_XGXS_BLK0 :: xgxsControl :: start_sequencer [13:13] */
#define QSFI_XGXS_BLK0_XGXSCONTROL_START_SEQUENCER_MASK            0x2000
#define QSFI_XGXS_BLK0_XGXSCONTROL_START_SEQUENCER_ALIGN           0
#define QSFI_XGXS_BLK0_XGXSCONTROL_START_SEQUENCER_BITS            1
#define QSFI_XGXS_BLK0_XGXSCONTROL_START_SEQUENCER_SHIFT           13

/* QSFI_XGXS_BLK0 :: xgxsControl :: reserved1 [12:12] */
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED1_MASK                  0x1000
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED1_ALIGN                 0
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED1_BITS                  1
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED1_SHIFT                 12

/* QSFI_XGXS_BLK0 :: xgxsControl :: mode10gXgxsControl [11:08] */
#define QSFI_XGXS_BLK0_XGXSCONTROL_MODE10GXGXSCONTROL_MASK         0x0f00
#define QSFI_XGXS_BLK0_XGXSCONTROL_MODE10GXGXSCONTROL_ALIGN        0
#define QSFI_XGXS_BLK0_XGXSCONTROL_MODE10GXGXSCONTROL_BITS         4
#define QSFI_XGXS_BLK0_XGXSCONTROL_MODE10GXGXSCONTROL_SHIFT        8

/* QSFI_XGXS_BLK0 :: xgxsControl :: reserved2 [07:00] */
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED2_MASK                  0x00ff
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED2_ALIGN                 0
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED2_BITS                  8
#define QSFI_XGXS_BLK0_XGXSCONTROL_RESERVED2_SHIFT                 0


/****************************************************************************
 * QSFI_XGXS_BLK0 :: xgxsStatus
 ***************************************************************************/
/* QSFI_XGXS_BLK0 :: xgxsStatus :: status_en [15:15] */
#define QSFI_XGXS_BLK0_XGXSSTATUS_STATUS_EN_MASK                   0x8000
#define QSFI_XGXS_BLK0_XGXSSTATUS_STATUS_EN_ALIGN                  0
#define QSFI_XGXS_BLK0_XGXSSTATUS_STATUS_EN_BITS                   1
#define QSFI_XGXS_BLK0_XGXSSTATUS_STATUS_EN_SHIFT                  15

/* QSFI_XGXS_BLK0 :: xgxsStatus :: reserved0 [14:12] */
#define QSFI_XGXS_BLK0_XGXSSTATUS_RESERVED0_MASK                   0x7000
#define QSFI_XGXS_BLK0_XGXSSTATUS_RESERVED0_ALIGN                  0
#define QSFI_XGXS_BLK0_XGXSSTATUS_RESERVED0_BITS                   3
#define QSFI_XGXS_BLK0_XGXSSTATUS_RESERVED0_SHIFT                  12

/* QSFI_XGXS_BLK0 :: xgxsStatus :: txpll_lock [11:11] */
#define QSFI_XGXS_BLK0_XGXSSTATUS_TXPLL_LOCK_MASK                  0x0800
#define QSFI_XGXS_BLK0_XGXSSTATUS_TXPLL_LOCK_ALIGN                 0
#define QSFI_XGXS_BLK0_XGXSSTATUS_TXPLL_LOCK_BITS                  1
#define QSFI_XGXS_BLK0_XGXSSTATUS_TXPLL_LOCK_SHIFT                 11

/* QSFI_XGXS_BLK0 :: xgxsStatus :: reserved1 [10:00] */
#define QSFI_XGXS_BLK0_XGXSSTATUS_RESERVED1_MASK                   0x07ff
#define QSFI_XGXS_BLK0_XGXSSTATUS_RESERVED1_ALIGN                  0
#define QSFI_XGXS_BLK0_XGXSSTATUS_RESERVED1_BITS                   11
#define QSFI_XGXS_BLK0_XGXSSTATUS_RESERVED1_SHIFT                  0


/****************************************************************************
 * QSFI_XGXS_BLK0 :: miscControl1
 ***************************************************************************/
/* QSFI_XGXS_BLK0 :: miscControl1 :: PMD_Lane3_tx_disable [15:15] */
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE3_TX_DISABLE_MASK      0x8000
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE3_TX_DISABLE_ALIGN     0
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE3_TX_DISABLE_BITS      1
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE3_TX_DISABLE_SHIFT     15

/* QSFI_XGXS_BLK0 :: miscControl1 :: PMD_Lane2_tx_disable [14:14] */
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE2_TX_DISABLE_MASK      0x4000
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE2_TX_DISABLE_ALIGN     0
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE2_TX_DISABLE_BITS      1
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE2_TX_DISABLE_SHIFT     14

/* QSFI_XGXS_BLK0 :: miscControl1 :: PMD_Lane1_tx_disable [13:13] */
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE1_TX_DISABLE_MASK      0x2000
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE1_TX_DISABLE_ALIGN     0
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE1_TX_DISABLE_BITS      1
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE1_TX_DISABLE_SHIFT     13

/* QSFI_XGXS_BLK0 :: miscControl1 :: PMD_Lane0_tx_disable [12:12] */
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE0_TX_DISABLE_MASK      0x1000
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE0_TX_DISABLE_ALIGN     0
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE0_TX_DISABLE_BITS      1
#define QSFI_XGXS_BLK0_MISCCONTROL1_PMD_LANE0_TX_DISABLE_SHIFT     12

/* QSFI_XGXS_BLK0 :: miscControl1 :: Global_PMD_tx_disable [11:11] */
#define QSFI_XGXS_BLK0_MISCCONTROL1_GLOBAL_PMD_TX_DISABLE_MASK     0x0800
#define QSFI_XGXS_BLK0_MISCCONTROL1_GLOBAL_PMD_TX_DISABLE_ALIGN    0
#define QSFI_XGXS_BLK0_MISCCONTROL1_GLOBAL_PMD_TX_DISABLE_BITS     1
#define QSFI_XGXS_BLK0_MISCCONTROL1_GLOBAL_PMD_TX_DISABLE_SHIFT    11

/* QSFI_XGXS_BLK0 :: miscControl1 :: reserved0 [10:08] */
#define QSFI_XGXS_BLK0_MISCCONTROL1_RESERVED0_MASK                 0x0700
#define QSFI_XGXS_BLK0_MISCCONTROL1_RESERVED0_ALIGN                0
#define QSFI_XGXS_BLK0_MISCCONTROL1_RESERVED0_BITS                 3
#define QSFI_XGXS_BLK0_MISCCONTROL1_RESERVED0_SHIFT                8

/* QSFI_XGXS_BLK0 :: miscControl1 :: i_testsel [07:05] */
#define QSFI_XGXS_BLK0_MISCCONTROL1_I_TESTSEL_MASK                 0x00e0
#define QSFI_XGXS_BLK0_MISCCONTROL1_I_TESTSEL_ALIGN                0
#define QSFI_XGXS_BLK0_MISCCONTROL1_I_TESTSEL_BITS                 3
#define QSFI_XGXS_BLK0_MISCCONTROL1_I_TESTSEL_SHIFT                5

/* QSFI_XGXS_BLK0 :: miscControl1 :: force_div5_for_lxck25 [04:04] */
#define QSFI_XGXS_BLK0_MISCCONTROL1_FORCE_DIV5_FOR_LXCK25_MASK     0x0010
#define QSFI_XGXS_BLK0_MISCCONTROL1_FORCE_DIV5_FOR_LXCK25_ALIGN    0
#define QSFI_XGXS_BLK0_MISCCONTROL1_FORCE_DIV5_FOR_LXCK25_BITS     1
#define QSFI_XGXS_BLK0_MISCCONTROL1_FORCE_DIV5_FOR_LXCK25_SHIFT    4

/* QSFI_XGXS_BLK0 :: miscControl1 :: reserved1 [03:02] */
#define QSFI_XGXS_BLK0_MISCCONTROL1_RESERVED1_MASK                 0x000c
#define QSFI_XGXS_BLK0_MISCCONTROL1_RESERVED1_ALIGN                0
#define QSFI_XGXS_BLK0_MISCCONTROL1_RESERVED1_BITS                 2
#define QSFI_XGXS_BLK0_MISCCONTROL1_RESERVED1_SHIFT                2

/* QSFI_XGXS_BLK0 :: miscControl1 :: txen_mask2 [01:01] */
#define QSFI_XGXS_BLK0_MISCCONTROL1_TXEN_MASK2_MASK                0x0002
#define QSFI_XGXS_BLK0_MISCCONTROL1_TXEN_MASK2_ALIGN               0
#define QSFI_XGXS_BLK0_MISCCONTROL1_TXEN_MASK2_BITS                1
#define QSFI_XGXS_BLK0_MISCCONTROL1_TXEN_MASK2_SHIFT               1

/* QSFI_XGXS_BLK0 :: miscControl1 :: txen_mask1 [00:00] */
#define QSFI_XGXS_BLK0_MISCCONTROL1_TXEN_MASK1_MASK                0x0001
#define QSFI_XGXS_BLK0_MISCCONTROL1_TXEN_MASK1_ALIGN               0
#define QSFI_XGXS_BLK0_MISCCONTROL1_TXEN_MASK1_BITS                1
#define QSFI_XGXS_BLK0_MISCCONTROL1_TXEN_MASK1_SHIFT               0


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_XGXS_BLK1
 ***************************************************************************/
/****************************************************************************
 * QSFI_XGXS_BLK1 :: laneCtrl2
 ***************************************************************************/
/* QSFI_XGXS_BLK1 :: laneCtrl2 :: reserved0 [15:08] */
#define QSFI_XGXS_BLK1_LANECTRL2_RESERVED0_MASK                    0xff00
#define QSFI_XGXS_BLK1_LANECTRL2_RESERVED0_ALIGN                   0
#define QSFI_XGXS_BLK1_LANECTRL2_RESERVED0_BITS                    8
#define QSFI_XGXS_BLK1_LANECTRL2_RESERVED0_SHIFT                   8

/* QSFI_XGXS_BLK1 :: laneCtrl2 :: rloop1g [07:04] */
#define QSFI_XGXS_BLK1_LANECTRL2_RLOOP1G_MASK                      0x00f0
#define QSFI_XGXS_BLK1_LANECTRL2_RLOOP1G_ALIGN                     0
#define QSFI_XGXS_BLK1_LANECTRL2_RLOOP1G_BITS                      4
#define QSFI_XGXS_BLK1_LANECTRL2_RLOOP1G_SHIFT                     4

/* QSFI_XGXS_BLK1 :: laneCtrl2 :: reserved1 [03:00] */
#define QSFI_XGXS_BLK1_LANECTRL2_RESERVED1_MASK                    0x000f
#define QSFI_XGXS_BLK1_LANECTRL2_RESERVED1_ALIGN                   0
#define QSFI_XGXS_BLK1_LANECTRL2_RESERVED1_BITS                    4
#define QSFI_XGXS_BLK1_LANECTRL2_RESERVED1_SHIFT                   0


/****************************************************************************
 * QSFI_XGXS_BLK1 :: laneCtrl3
 ***************************************************************************/
/* QSFI_XGXS_BLK1 :: laneCtrl3 :: reserved0 [15:10] */
#define QSFI_XGXS_BLK1_LANECTRL3_RESERVED0_MASK                    0xfc00
#define QSFI_XGXS_BLK1_LANECTRL3_RESERVED0_ALIGN                   0
#define QSFI_XGXS_BLK1_LANECTRL3_RESERVED0_BITS                    6
#define QSFI_XGXS_BLK1_LANECTRL3_RESERVED0_SHIFT                   10

/* QSFI_XGXS_BLK1 :: laneCtrl3 :: pwrdwn_pll_dis [09:09] */
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDWN_PLL_DIS_MASK               0x0200
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDWN_PLL_DIS_ALIGN              0
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDWN_PLL_DIS_BITS               1
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDWN_PLL_DIS_SHIFT              9

/* QSFI_XGXS_BLK1 :: laneCtrl3 :: pwrdwn_pll [08:08] */
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDWN_PLL_MASK                   0x0100
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDWN_PLL_ALIGN                  0
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDWN_PLL_BITS                   1
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDWN_PLL_SHIFT                  8

/* QSFI_XGXS_BLK1 :: laneCtrl3 :: pwrdn_tx [07:04] */
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDN_TX_MASK                     0x00f0
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDN_TX_ALIGN                    0
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDN_TX_BITS                     4
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDN_TX_SHIFT                    4

/* QSFI_XGXS_BLK1 :: laneCtrl3 :: pwrdn_rx [03:00] */
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDN_RX_MASK                     0x000f
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDN_RX_ALIGN                    0
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDN_RX_BITS                     4
#define QSFI_XGXS_BLK1_LANECTRL3_PWRDN_RX_SHIFT                    0


/****************************************************************************
 * QSFI_XGXS_BLK1 :: laneTest
 ***************************************************************************/
/* QSFI_XGXS_BLK1 :: laneTest :: reserved0 [15:11] */
#define QSFI_XGXS_BLK1_LANETEST_RESERVED0_MASK                     0xf800
#define QSFI_XGXS_BLK1_LANETEST_RESERVED0_ALIGN                    0
#define QSFI_XGXS_BLK1_LANETEST_RESERVED0_BITS                     5
#define QSFI_XGXS_BLK1_LANETEST_RESERVED0_SHIFT                    11

/* QSFI_XGXS_BLK1 :: laneTest :: ext_pwrdn_dis [10:10] */
#define QSFI_XGXS_BLK1_LANETEST_EXT_PWRDN_DIS_MASK                 0x0400
#define QSFI_XGXS_BLK1_LANETEST_EXT_PWRDN_DIS_ALIGN                0
#define QSFI_XGXS_BLK1_LANETEST_EXT_PWRDN_DIS_BITS                 1
#define QSFI_XGXS_BLK1_LANETEST_EXT_PWRDN_DIS_SHIFT                10

/* QSFI_XGXS_BLK1 :: laneTest :: reserved1 [09:09] */
#define QSFI_XGXS_BLK1_LANETEST_RESERVED1_MASK                     0x0200
#define QSFI_XGXS_BLK1_LANETEST_RESERVED1_ALIGN                    0
#define QSFI_XGXS_BLK1_LANETEST_RESERVED1_BITS                     1
#define QSFI_XGXS_BLK1_LANETEST_RESERVED1_SHIFT                    9

/* QSFI_XGXS_BLK1 :: laneTest :: pwrdwn_clks_en [08:08] */
#define QSFI_XGXS_BLK1_LANETEST_PWRDWN_CLKS_EN_MASK                0x0100
#define QSFI_XGXS_BLK1_LANETEST_PWRDWN_CLKS_EN_ALIGN               0
#define QSFI_XGXS_BLK1_LANETEST_PWRDWN_CLKS_EN_BITS                1
#define QSFI_XGXS_BLK1_LANETEST_PWRDWN_CLKS_EN_SHIFT               8

/* QSFI_XGXS_BLK1 :: laneTest :: reserved2 [07:06] */
#define QSFI_XGXS_BLK1_LANETEST_RESERVED2_MASK                     0x00c0
#define QSFI_XGXS_BLK1_LANETEST_RESERVED2_ALIGN                    0
#define QSFI_XGXS_BLK1_LANETEST_RESERVED2_BITS                     2
#define QSFI_XGXS_BLK1_LANETEST_RESERVED2_SHIFT                    6

/* QSFI_XGXS_BLK1 :: laneTest :: lfck_bypass [05:05] */
#define QSFI_XGXS_BLK1_LANETEST_LFCK_BYPASS_MASK                   0x0020
#define QSFI_XGXS_BLK1_LANETEST_LFCK_BYPASS_ALIGN                  0
#define QSFI_XGXS_BLK1_LANETEST_LFCK_BYPASS_BITS                   1
#define QSFI_XGXS_BLK1_LANETEST_LFCK_BYPASS_SHIFT                  5

/* QSFI_XGXS_BLK1 :: laneTest :: reserved3 [04:00] */
#define QSFI_XGXS_BLK1_LANETEST_RESERVED3_MASK                     0x001f
#define QSFI_XGXS_BLK1_LANETEST_RESERVED3_ALIGN                    0
#define QSFI_XGXS_BLK1_LANETEST_RESERVED3_BITS                     5
#define QSFI_XGXS_BLK1_LANETEST_RESERVED3_SHIFT                    0


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_TX
 ***************************************************************************/
/****************************************************************************
 * QSFI_TX :: anaTxAStatus
 ***************************************************************************/
/* QSFI_TX :: anaTxAStatus :: test_bus [15:08] */
#define QSFI_TX_ANATXASTATUS_TEST_BUS_MASK                         0xff00
#define QSFI_TX_ANATXASTATUS_TEST_BUS_ALIGN                        0
#define QSFI_TX_ANATXASTATUS_TEST_BUS_BITS                         8
#define QSFI_TX_ANATXASTATUS_TEST_BUS_SHIFT                        8

/* QSFI_TX :: anaTxAStatus :: reserved0 [07:05] */
#define QSFI_TX_ANATXASTATUS_RESERVED0_MASK                        0x00e0
#define QSFI_TX_ANATXASTATUS_RESERVED0_ALIGN                       0
#define QSFI_TX_ANATXASTATUS_RESERVED0_BITS                        3
#define QSFI_TX_ANATXASTATUS_RESERVED0_SHIFT                       5

/* QSFI_TX :: anaTxAStatus :: pmd_tx_clk_vld [04:04] */
#define QSFI_TX_ANATXASTATUS_PMD_TX_CLK_VLD_MASK                   0x0010
#define QSFI_TX_ANATXASTATUS_PMD_TX_CLK_VLD_ALIGN                  0
#define QSFI_TX_ANATXASTATUS_PMD_TX_CLK_VLD_BITS                   1
#define QSFI_TX_ANATXASTATUS_PMD_TX_CLK_VLD_SHIFT                  4

/* QSFI_TX :: anaTxAStatus :: pmd_ln_dp_tx_rst [03:03] */
#define QSFI_TX_ANATXASTATUS_PMD_LN_DP_TX_RST_MASK                 0x0008
#define QSFI_TX_ANATXASTATUS_PMD_LN_DP_TX_RST_ALIGN                0
#define QSFI_TX_ANATXASTATUS_PMD_LN_DP_TX_RST_BITS                 1
#define QSFI_TX_ANATXASTATUS_PMD_LN_DP_TX_RST_SHIFT                3

/* QSFI_TX :: anaTxAStatus :: pmd_ln_tx_h_pwrdn [02:02] */
#define QSFI_TX_ANATXASTATUS_PMD_LN_TX_H_PWRDN_MASK                0x0004
#define QSFI_TX_ANATXASTATUS_PMD_LN_TX_H_PWRDN_ALIGN               0
#define QSFI_TX_ANATXASTATUS_PMD_LN_TX_H_PWRDN_BITS                1
#define QSFI_TX_ANATXASTATUS_PMD_LN_TX_H_PWRDN_SHIFT               2

/* QSFI_TX :: anaTxAStatus :: txferr_stky [01:01] */
#define QSFI_TX_ANATXASTATUS_TXFERR_STKY_MASK                      0x0002
#define QSFI_TX_ANATXASTATUS_TXFERR_STKY_ALIGN                     0
#define QSFI_TX_ANATXASTATUS_TXFERR_STKY_BITS                      1
#define QSFI_TX_ANATXASTATUS_TXFERR_STKY_SHIFT                     1

/* QSFI_TX :: anaTxAStatus :: pcb_pmd_pwrdwn_tx [00:00] */
#define QSFI_TX_ANATXASTATUS_PCB_PMD_PWRDWN_TX_MASK                0x0001
#define QSFI_TX_ANATXASTATUS_PCB_PMD_PWRDWN_TX_ALIGN               0
#define QSFI_TX_ANATXASTATUS_PCB_PMD_PWRDWN_TX_BITS                1
#define QSFI_TX_ANATXASTATUS_PCB_PMD_PWRDWN_TX_SHIFT               0


/****************************************************************************
 * QSFI_TX :: anaTxAControl0
 ***************************************************************************/
/* QSFI_TX :: anaTxAControl0 :: reserved0 [15:14] */
#define QSFI_TX_ANATXACONTROL0_RESERVED0_MASK                      0xc000
#define QSFI_TX_ANATXACONTROL0_RESERVED0_ALIGN                     0
#define QSFI_TX_ANATXACONTROL0_RESERVED0_BITS                      2
#define QSFI_TX_ANATXACONTROL0_RESERVED0_SHIFT                     14

/* QSFI_TX :: anaTxAControl0 :: tx1g_frst_SM [13:13] */
#define QSFI_TX_ANATXACONTROL0_TX1G_FRST_SM_MASK                   0x2000
#define QSFI_TX_ANATXACONTROL0_TX1G_FRST_SM_ALIGN                  0
#define QSFI_TX_ANATXACONTROL0_TX1G_FRST_SM_BITS                   1
#define QSFI_TX_ANATXACONTROL0_TX1G_FRST_SM_SHIFT                  13

/* QSFI_TX :: anaTxAControl0 :: tx1g_afrst_en_SM [12:12] */
#define QSFI_TX_ANATXACONTROL0_TX1G_AFRST_EN_SM_MASK               0x1000
#define QSFI_TX_ANATXACONTROL0_TX1G_AFRST_EN_SM_ALIGN              0
#define QSFI_TX_ANATXACONTROL0_TX1G_AFRST_EN_SM_BITS               1
#define QSFI_TX_ANATXACONTROL0_TX1G_AFRST_EN_SM_SHIFT              12

/* QSFI_TX :: anaTxAControl0 :: tx1g_fprst_SM [11:11] */
#define QSFI_TX_ANATXACONTROL0_TX1G_FPRST_SM_MASK                  0x0800
#define QSFI_TX_ANATXACONTROL0_TX1G_FPRST_SM_ALIGN                 0
#define QSFI_TX_ANATXACONTROL0_TX1G_FPRST_SM_BITS                  1
#define QSFI_TX_ANATXACONTROL0_TX1G_FPRST_SM_SHIFT                 11

/* QSFI_TX :: anaTxAControl0 :: txck_dme_en_SM [10:10] */
#define QSFI_TX_ANATXACONTROL0_TXCK_DME_EN_SM_MASK                 0x0400
#define QSFI_TX_ANATXACONTROL0_TXCK_DME_EN_SM_ALIGN                0
#define QSFI_TX_ANATXACONTROL0_TXCK_DME_EN_SM_BITS                 1
#define QSFI_TX_ANATXACONTROL0_TXCK_DME_EN_SM_SHIFT                10

/* QSFI_TX :: anaTxAControl0 :: reserved1 [09:08] */
#define QSFI_TX_ANATXACONTROL0_RESERVED1_MASK                      0x0300
#define QSFI_TX_ANATXACONTROL0_RESERVED1_ALIGN                     0
#define QSFI_TX_ANATXACONTROL0_RESERVED1_BITS                      2
#define QSFI_TX_ANATXACONTROL0_RESERVED1_SHIFT                     8

/* QSFI_TX :: anaTxAControl0 :: txStat_sel [07:07] */
#define QSFI_TX_ANATXACONTROL0_TXSTAT_SEL_MASK                     0x0080
#define QSFI_TX_ANATXACONTROL0_TXSTAT_SEL_ALIGN                    0
#define QSFI_TX_ANATXACONTROL0_TXSTAT_SEL_BITS                     1
#define QSFI_TX_ANATXACONTROL0_TXSTAT_SEL_SHIFT                    7

/* QSFI_TX :: anaTxAControl0 :: tx_tstsel_SM [06:04] */
#define QSFI_TX_ANATXACONTROL0_TX_TSTSEL_SM_MASK                   0x0070
#define QSFI_TX_ANATXACONTROL0_TX_TSTSEL_SM_ALIGN                  0
#define QSFI_TX_ANATXACONTROL0_TX_TSTSEL_SM_BITS                   3
#define QSFI_TX_ANATXACONTROL0_TX_TSTSEL_SM_SHIFT                  4

/* QSFI_TX :: anaTxAControl0 :: reserved2 [03:00] */
#define QSFI_TX_ANATXACONTROL0_RESERVED2_MASK                      0x000f
#define QSFI_TX_ANATXACONTROL0_RESERVED2_ALIGN                     0
#define QSFI_TX_ANATXACONTROL0_RESERVED2_BITS                      4
#define QSFI_TX_ANATXACONTROL0_RESERVED2_SHIFT                     0


/****************************************************************************
 * QSFI_TX :: anaTxAControl6
 ***************************************************************************/
/* QSFI_TX :: anaTxAControl6 :: baseR_patgen_en [15:15] */
#define QSFI_TX_ANATXACONTROL6_BASER_PATGEN_EN_MASK                0x8000
#define QSFI_TX_ANATXACONTROL6_BASER_PATGEN_EN_ALIGN               0
#define QSFI_TX_ANATXACONTROL6_BASER_PATGEN_EN_BITS                1
#define QSFI_TX_ANATXACONTROL6_BASER_PATGEN_EN_SHIFT               15

/* QSFI_TX :: anaTxAControl6 :: idle_fault_sel [14:13] */
#define QSFI_TX_ANATXACONTROL6_IDLE_FAULT_SEL_MASK                 0x6000
#define QSFI_TX_ANATXACONTROL6_IDLE_FAULT_SEL_ALIGN                0
#define QSFI_TX_ANATXACONTROL6_IDLE_FAULT_SEL_BITS                 2
#define QSFI_TX_ANATXACONTROL6_IDLE_FAULT_SEL_SHIFT                13

/* QSFI_TX :: anaTxAControl6 :: baseR_patgen_sel [12:12] */
#define QSFI_TX_ANATXACONTROL6_BASER_PATGEN_SEL_MASK               0x1000
#define QSFI_TX_ANATXACONTROL6_BASER_PATGEN_SEL_ALIGN              0
#define QSFI_TX_ANATXACONTROL6_BASER_PATGEN_SEL_BITS               1
#define QSFI_TX_ANATXACONTROL6_BASER_PATGEN_SEL_SHIFT              12

/* QSFI_TX :: anaTxAControl6 :: reserved0 [11:00] */
#define QSFI_TX_ANATXACONTROL6_RESERVED0_MASK                      0x0fff
#define QSFI_TX_ANATXACONTROL6_RESERVED0_ALIGN                     0
#define QSFI_TX_ANATXACONTROL6_RESERVED0_BITS                      12
#define QSFI_TX_ANATXACONTROL6_RESERVED0_SHIFT                     0


/****************************************************************************
 * QSFI_TX :: anaTxAControl7
 ***************************************************************************/
/* QSFI_TX :: anaTxAControl7 :: reserved0 [15:12] */
#define QSFI_TX_ANATXACONTROL7_RESERVED0_MASK                      0xf000
#define QSFI_TX_ANATXACONTROL7_RESERVED0_ALIGN                     0
#define QSFI_TX_ANATXACONTROL7_RESERVED0_BITS                      4
#define QSFI_TX_ANATXACONTROL7_RESERVED0_SHIFT                     12

/* QSFI_TX :: anaTxAControl7 :: tx_bitswap [11:11] */
#define QSFI_TX_ANATXACONTROL7_TX_BITSWAP_MASK                     0x0800
#define QSFI_TX_ANATXACONTROL7_TX_BITSWAP_ALIGN                    0
#define QSFI_TX_ANATXACONTROL7_TX_BITSWAP_BITS                     1
#define QSFI_TX_ANATXACONTROL7_TX_BITSWAP_SHIFT                    11

/* QSFI_TX :: anaTxAControl7 :: pmd_ln_dp_tx_rst_SM [10:10] */
#define QSFI_TX_ANATXACONTROL7_PMD_LN_DP_TX_RST_SM_MASK            0x0400
#define QSFI_TX_ANATXACONTROL7_PMD_LN_DP_TX_RST_SM_ALIGN           0
#define QSFI_TX_ANATXACONTROL7_PMD_LN_DP_TX_RST_SM_BITS            1
#define QSFI_TX_ANATXACONTROL7_PMD_LN_DP_TX_RST_SM_SHIFT           10

/* QSFI_TX :: anaTxAControl7 :: pmd_ln_tx_h_pwrdn_val_SM [09:09] */
#define QSFI_TX_ANATXACONTROL7_PMD_LN_TX_H_PWRDN_VAL_SM_MASK       0x0200
#define QSFI_TX_ANATXACONTROL7_PMD_LN_TX_H_PWRDN_VAL_SM_ALIGN      0
#define QSFI_TX_ANATXACONTROL7_PMD_LN_TX_H_PWRDN_VAL_SM_BITS       1
#define QSFI_TX_ANATXACONTROL7_PMD_LN_TX_H_PWRDN_VAL_SM_SHIFT      9

/* QSFI_TX :: anaTxAControl7 :: pmd_ln_tx_h_pwrdn_enb_SM [08:08] */
#define QSFI_TX_ANATXACONTROL7_PMD_LN_TX_H_PWRDN_ENB_SM_MASK       0x0100
#define QSFI_TX_ANATXACONTROL7_PMD_LN_TX_H_PWRDN_ENB_SM_ALIGN      0
#define QSFI_TX_ANATXACONTROL7_PMD_LN_TX_H_PWRDN_ENB_SM_BITS       1
#define QSFI_TX_ANATXACONTROL7_PMD_LN_TX_H_PWRDN_ENB_SM_SHIFT      8

/* QSFI_TX :: anaTxAControl7 :: reserved1 [07:06] */
#define QSFI_TX_ANATXACONTROL7_RESERVED1_MASK                      0x00c0
#define QSFI_TX_ANATXACONTROL7_RESERVED1_ALIGN                     0
#define QSFI_TX_ANATXACONTROL7_RESERVED1_BITS                      2
#define QSFI_TX_ANATXACONTROL7_RESERVED1_SHIFT                     6

/* QSFI_TX :: anaTxAControl7 :: use_mgt_pmd_lock_4_tx_squelch_SM [05:05] */
#define QSFI_TX_ANATXACONTROL7_USE_MGT_PMD_LOCK_4_TX_SQUELCH_SM_MASK 0x0020
#define QSFI_TX_ANATXACONTROL7_USE_MGT_PMD_LOCK_4_TX_SQUELCH_SM_ALIGN 0
#define QSFI_TX_ANATXACONTROL7_USE_MGT_PMD_LOCK_4_TX_SQUELCH_SM_BITS 1
#define QSFI_TX_ANATXACONTROL7_USE_MGT_PMD_LOCK_4_TX_SQUELCH_SM_SHIFT 5

/* QSFI_TX :: anaTxAControl7 :: tx_disable_an_good_SM [04:04] */
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_AN_GOOD_SM_MASK          0x0010
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_AN_GOOD_SM_ALIGN         0
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_AN_GOOD_SM_BITS          1
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_AN_GOOD_SM_SHIFT         4

/* QSFI_TX :: anaTxAControl7 :: tx_disable_force_en_SM [03:03] */
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_FORCE_EN_SM_MASK         0x0008
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_FORCE_EN_SM_ALIGN        0
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_FORCE_EN_SM_BITS         1
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_FORCE_EN_SM_SHIFT        3

/* QSFI_TX :: anaTxAControl7 :: tx_disable_force_val_SM [02:02] */
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_FORCE_VAL_SM_MASK        0x0004
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_FORCE_VAL_SM_ALIGN       0
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_FORCE_VAL_SM_BITS        1
#define QSFI_TX_ANATXACONTROL7_TX_DISABLE_FORCE_VAL_SM_SHIFT       2

/* QSFI_TX :: anaTxAControl7 :: tx_squelch_force_en_SM [01:01] */
#define QSFI_TX_ANATXACONTROL7_TX_SQUELCH_FORCE_EN_SM_MASK         0x0002
#define QSFI_TX_ANATXACONTROL7_TX_SQUELCH_FORCE_EN_SM_ALIGN        0
#define QSFI_TX_ANATXACONTROL7_TX_SQUELCH_FORCE_EN_SM_BITS         1
#define QSFI_TX_ANATXACONTROL7_TX_SQUELCH_FORCE_EN_SM_SHIFT        1

/* QSFI_TX :: anaTxAControl7 :: tx_squelch_force_val_SM [00:00] */
#define QSFI_TX_ANATXACONTROL7_TX_SQUELCH_FORCE_VAL_SM_MASK        0x0001
#define QSFI_TX_ANATXACONTROL7_TX_SQUELCH_FORCE_VAL_SM_ALIGN       0
#define QSFI_TX_ANATXACONTROL7_TX_SQUELCH_FORCE_VAL_SM_BITS        1
#define QSFI_TX_ANATXACONTROL7_TX_SQUELCH_FORCE_VAL_SM_SHIFT       0


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_RX
 ***************************************************************************/
/****************************************************************************
 * QSFI_RX :: anaRxStatus
 ***************************************************************************/
/* QSFI_RX :: anaRxStatus :: rxStatus [15:00] */
#define QSFI_RX_ANARXSTATUS_RXSTATUS_MASK                          0xffff
#define QSFI_RX_ANARXSTATUS_RXSTATUS_ALIGN                         0
#define QSFI_RX_ANARXSTATUS_RXSTATUS_BITS                          16
#define QSFI_RX_ANARXSTATUS_RXSTATUS_SHIFT                         0


/****************************************************************************
 * QSFI_RX :: anaRxControl
 ***************************************************************************/
/* QSFI_RX :: anaRxControl :: reserved0 [15:10] */
#define QSFI_RX_ANARXCONTROL_RESERVED0_MASK                        0xfc00
#define QSFI_RX_ANARXCONTROL_RESERVED0_ALIGN                       0
#define QSFI_RX_ANARXCONTROL_RESERVED0_BITS                        6
#define QSFI_RX_ANARXCONTROL_RESERVED0_SHIFT                       10

/* QSFI_RX :: anaRxControl :: force_pmd_lock_SM [09:09] */
#define QSFI_RX_ANARXCONTROL_FORCE_PMD_LOCK_SM_MASK                0x0200
#define QSFI_RX_ANARXCONTROL_FORCE_PMD_LOCK_SM_ALIGN               0
#define QSFI_RX_ANARXCONTROL_FORCE_PMD_LOCK_SM_BITS                1
#define QSFI_RX_ANARXCONTROL_FORCE_PMD_LOCK_SM_SHIFT               9

/* QSFI_RX :: anaRxControl :: force_pmd_lock_val_SM [08:08] */
#define QSFI_RX_ANARXCONTROL_FORCE_PMD_LOCK_VAL_SM_MASK            0x0100
#define QSFI_RX_ANARXCONTROL_FORCE_PMD_LOCK_VAL_SM_ALIGN           0
#define QSFI_RX_ANARXCONTROL_FORCE_PMD_LOCK_VAL_SM_BITS            1
#define QSFI_RX_ANARXCONTROL_FORCE_PMD_LOCK_VAL_SM_SHIFT           8

/* QSFI_RX :: anaRxControl :: use_cl73_an_good_KR4_SM [07:07] */
#define QSFI_RX_ANARXCONTROL_USE_CL73_AN_GOOD_KR4_SM_MASK          0x0080
#define QSFI_RX_ANARXCONTROL_USE_CL73_AN_GOOD_KR4_SM_ALIGN         0
#define QSFI_RX_ANARXCONTROL_USE_CL73_AN_GOOD_KR4_SM_BITS          1
#define QSFI_RX_ANARXCONTROL_USE_CL73_AN_GOOD_KR4_SM_SHIFT         7

/* QSFI_RX :: anaRxControl :: use_cl73_an_good_SM [06:06] */
#define QSFI_RX_ANARXCONTROL_USE_CL73_AN_GOOD_SM_MASK              0x0040
#define QSFI_RX_ANARXCONTROL_USE_CL73_AN_GOOD_SM_ALIGN             0
#define QSFI_RX_ANARXCONTROL_USE_CL73_AN_GOOD_SM_BITS              1
#define QSFI_RX_ANARXCONTROL_USE_CL73_AN_GOOD_SM_SHIFT             6

/* QSFI_RX :: anaRxControl :: forceRxSeqDone_en_SM [05:05] */
#define QSFI_RX_ANARXCONTROL_FORCERXSEQDONE_EN_SM_MASK             0x0020
#define QSFI_RX_ANARXCONTROL_FORCERXSEQDONE_EN_SM_ALIGN            0
#define QSFI_RX_ANARXCONTROL_FORCERXSEQDONE_EN_SM_BITS             1
#define QSFI_RX_ANARXCONTROL_FORCERXSEQDONE_EN_SM_SHIFT            5

/* QSFI_RX :: anaRxControl :: forceRxSeqDone_val_SM [04:04] */
#define QSFI_RX_ANARXCONTROL_FORCERXSEQDONE_VAL_SM_MASK            0x0010
#define QSFI_RX_ANARXCONTROL_FORCERXSEQDONE_VAL_SM_ALIGN           0
#define QSFI_RX_ANARXCONTROL_FORCERXSEQDONE_VAL_SM_BITS            1
#define QSFI_RX_ANARXCONTROL_FORCERXSEQDONE_VAL_SM_SHIFT           4

/* QSFI_RX :: anaRxControl :: reserved1 [03:03] */
#define QSFI_RX_ANARXCONTROL_RESERVED1_MASK                        0x0008
#define QSFI_RX_ANARXCONTROL_RESERVED1_ALIGN                       0
#define QSFI_RX_ANARXCONTROL_RESERVED1_BITS                        1
#define QSFI_RX_ANARXCONTROL_RESERVED1_SHIFT                       3

/* QSFI_RX :: anaRxControl :: status_sel [02:00] */
#define QSFI_RX_ANARXCONTROL_STATUS_SEL_MASK                       0x0007
#define QSFI_RX_ANARXCONTROL_STATUS_SEL_ALIGN                      0
#define QSFI_RX_ANARXCONTROL_STATUS_SEL_BITS                       3
#define QSFI_RX_ANARXCONTROL_STATUS_SEL_SHIFT                      0


/****************************************************************************
 * QSFI_RX :: anaRxSigdet
 ***************************************************************************/
/* QSFI_RX :: anaRxSigdet :: reserved0 [15:05] */
#define QSFI_RX_ANARXSIGDET_RESERVED0_MASK                         0xffe0
#define QSFI_RX_ANARXSIGDET_RESERVED0_ALIGN                        0
#define QSFI_RX_ANARXSIGDET_RESERVED0_BITS                         11
#define QSFI_RX_ANARXSIGDET_RESERVED0_SHIFT                        5

/* QSFI_RX :: anaRxSigdet :: rx_sigdet_r [04:04] */
#define QSFI_RX_ANARXSIGDET_RX_SIGDET_R_MASK                       0x0010
#define QSFI_RX_ANARXSIGDET_RX_SIGDET_R_ALIGN                      0
#define QSFI_RX_ANARXSIGDET_RX_SIGDET_R_BITS                       1
#define QSFI_RX_ANARXSIGDET_RX_SIGDET_R_SHIFT                      4

/* QSFI_RX :: anaRxSigdet :: rx_sigdet_force_r [03:03] */
#define QSFI_RX_ANARXSIGDET_RX_SIGDET_FORCE_R_MASK                 0x0008
#define QSFI_RX_ANARXSIGDET_RX_SIGDET_FORCE_R_ALIGN                0
#define QSFI_RX_ANARXSIGDET_RX_SIGDET_FORCE_R_BITS                 1
#define QSFI_RX_ANARXSIGDET_RX_SIGDET_FORCE_R_SHIFT                3

/* QSFI_RX :: anaRxSigdet :: reserved1 [02:00] */
#define QSFI_RX_ANARXSIGDET_RESERVED1_MASK                         0x0007
#define QSFI_RX_ANARXSIGDET_RESERVED1_ALIGN                        0
#define QSFI_RX_ANARXSIGDET_RESERVED1_BITS                         3
#define QSFI_RX_ANARXSIGDET_RESERVED1_SHIFT                        0


/****************************************************************************
 * QSFI_RX :: anaRxControl2
 ***************************************************************************/
/* QSFI_RX :: anaRxControl2 :: reserved0 [15:12] */
#define QSFI_RX_ANARXCONTROL2_RESERVED0_MASK                       0xf000
#define QSFI_RX_ANARXCONTROL2_RESERVED0_ALIGN                      0
#define QSFI_RX_ANARXCONTROL2_RESERVED0_BITS                       4
#define QSFI_RX_ANARXCONTROL2_RESERVED0_SHIFT                      12

/* QSFI_RX :: anaRxControl2 :: rx_bitswap [11:11] */
#define QSFI_RX_ANARXCONTROL2_RX_BITSWAP_MASK                      0x0800
#define QSFI_RX_ANARXCONTROL2_RX_BITSWAP_ALIGN                     0
#define QSFI_RX_ANARXCONTROL2_RX_BITSWAP_BITS                      1
#define QSFI_RX_ANARXCONTROL2_RX_BITSWAP_SHIFT                     11

/* QSFI_RX :: anaRxControl2 :: pmd_ln_rx_h_pwrdn_enb_SM [10:10] */
#define QSFI_RX_ANARXCONTROL2_PMD_LN_RX_H_PWRDN_ENB_SM_MASK        0x0400
#define QSFI_RX_ANARXCONTROL2_PMD_LN_RX_H_PWRDN_ENB_SM_ALIGN       0
#define QSFI_RX_ANARXCONTROL2_PMD_LN_RX_H_PWRDN_ENB_SM_BITS        1
#define QSFI_RX_ANARXCONTROL2_PMD_LN_RX_H_PWRDN_ENB_SM_SHIFT       10

/* QSFI_RX :: anaRxControl2 :: pmd_ln_rx_h_pwrdn_val_SM [09:09] */
#define QSFI_RX_ANARXCONTROL2_PMD_LN_RX_H_PWRDN_VAL_SM_MASK        0x0200
#define QSFI_RX_ANARXCONTROL2_PMD_LN_RX_H_PWRDN_VAL_SM_ALIGN       0
#define QSFI_RX_ANARXCONTROL2_PMD_LN_RX_H_PWRDN_VAL_SM_BITS        1
#define QSFI_RX_ANARXCONTROL2_PMD_LN_RX_H_PWRDN_VAL_SM_SHIFT       9

/* QSFI_RX :: anaRxControl2 :: pmd_ln_dp_rx_rst_SM [08:08] */
#define QSFI_RX_ANARXCONTROL2_PMD_LN_DP_RX_RST_SM_MASK             0x0100
#define QSFI_RX_ANARXCONTROL2_PMD_LN_DP_RX_RST_SM_ALIGN            0
#define QSFI_RX_ANARXCONTROL2_PMD_LN_DP_RX_RST_SM_BITS             1
#define QSFI_RX_ANARXCONTROL2_PMD_LN_DP_RX_RST_SM_SHIFT            8

/* QSFI_RX :: anaRxControl2 :: reserved1 [07:02] */
#define QSFI_RX_ANARXCONTROL2_RESERVED1_MASK                       0x00fc
#define QSFI_RX_ANARXCONTROL2_RESERVED1_ALIGN                      0
#define QSFI_RX_ANARXCONTROL2_RESERVED1_BITS                       6
#define QSFI_RX_ANARXCONTROL2_RESERVED1_SHIFT                      2

/* QSFI_RX :: anaRxControl2 :: rxtm_tstsel_SM [01:00] */
#define QSFI_RX_ANARXCONTROL2_RXTM_TSTSEL_SM_MASK                  0x0003
#define QSFI_RX_ANARXCONTROL2_RXTM_TSTSEL_SM_ALIGN                 0
#define QSFI_RX_ANARXCONTROL2_RXTM_TSTSEL_SM_BITS                  2
#define QSFI_RX_ANARXCONTROL2_RXTM_TSTSEL_SM_SHIFT                 0


/****************************************************************************
 * QSFI_RX :: anaRxControl3
 ***************************************************************************/
/* QSFI_RX :: anaRxControl3 :: rxck_dme_en_force [15:15] */
#define QSFI_RX_ANARXCONTROL3_RXCK_DME_EN_FORCE_MASK               0x8000
#define QSFI_RX_ANARXCONTROL3_RXCK_DME_EN_FORCE_ALIGN              0
#define QSFI_RX_ANARXCONTROL3_RXCK_DME_EN_FORCE_BITS               1
#define QSFI_RX_ANARXCONTROL3_RXCK_DME_EN_FORCE_SHIFT              15

/* QSFI_RX :: anaRxControl3 :: rxck_dme_en_r [14:14] */
#define QSFI_RX_ANARXCONTROL3_RXCK_DME_EN_R_MASK                   0x4000
#define QSFI_RX_ANARXCONTROL3_RXCK_DME_EN_R_ALIGN                  0
#define QSFI_RX_ANARXCONTROL3_RXCK_DME_EN_R_BITS                   1
#define QSFI_RX_ANARXCONTROL3_RXCK_DME_EN_R_SHIFT                  14

/* QSFI_RX :: anaRxControl3 :: rst_dme_en_force [13:13] */
#define QSFI_RX_ANARXCONTROL3_RST_DME_EN_FORCE_MASK                0x2000
#define QSFI_RX_ANARXCONTROL3_RST_DME_EN_FORCE_ALIGN               0
#define QSFI_RX_ANARXCONTROL3_RST_DME_EN_FORCE_BITS                1
#define QSFI_RX_ANARXCONTROL3_RST_DME_EN_FORCE_SHIFT               13

/* QSFI_RX :: anaRxControl3 :: rst_dme_en_r [12:12] */
#define QSFI_RX_ANARXCONTROL3_RST_DME_EN_R_MASK                    0x1000
#define QSFI_RX_ANARXCONTROL3_RST_DME_EN_R_ALIGN                   0
#define QSFI_RX_ANARXCONTROL3_RST_DME_EN_R_BITS                    1
#define QSFI_RX_ANARXCONTROL3_RST_DME_EN_R_SHIFT                   12

/* QSFI_RX :: anaRxControl3 :: cl73_clk25_rst_SM [11:11] */
#define QSFI_RX_ANARXCONTROL3_CL73_CLK25_RST_SM_MASK               0x0800
#define QSFI_RX_ANARXCONTROL3_CL73_CLK25_RST_SM_ALIGN              0
#define QSFI_RX_ANARXCONTROL3_CL73_CLK25_RST_SM_BITS               1
#define QSFI_RX_ANARXCONTROL3_CL73_CLK25_RST_SM_SHIFT              11

/* QSFI_RX :: anaRxControl3 :: cl73_clk25_en_SM [10:10] */
#define QSFI_RX_ANARXCONTROL3_CL73_CLK25_EN_SM_MASK                0x0400
#define QSFI_RX_ANARXCONTROL3_CL73_CLK25_EN_SM_ALIGN               0
#define QSFI_RX_ANARXCONTROL3_CL73_CLK25_EN_SM_BITS                1
#define QSFI_RX_ANARXCONTROL3_CL73_CLK25_EN_SM_SHIFT               10

/* QSFI_RX :: anaRxControl3 :: cl73_gloop_en_SM [09:09] */
#define QSFI_RX_ANARXCONTROL3_CL73_GLOOP_EN_SM_MASK                0x0200
#define QSFI_RX_ANARXCONTROL3_CL73_GLOOP_EN_SM_ALIGN               0
#define QSFI_RX_ANARXCONTROL3_CL73_GLOOP_EN_SM_BITS                1
#define QSFI_RX_ANARXCONTROL3_CL73_GLOOP_EN_SM_SHIFT               9

/* QSFI_RX :: anaRxControl3 :: cl73_rloop_en_SM [08:08] */
#define QSFI_RX_ANARXCONTROL3_CL73_RLOOP_EN_SM_MASK                0x0100
#define QSFI_RX_ANARXCONTROL3_CL73_RLOOP_EN_SM_ALIGN               0
#define QSFI_RX_ANARXCONTROL3_CL73_RLOOP_EN_SM_BITS                1
#define QSFI_RX_ANARXCONTROL3_CL73_RLOOP_EN_SM_SHIFT               8

/* QSFI_RX :: anaRxControl3 :: use_KR_block_lock_SM [07:07] */
#define QSFI_RX_ANARXCONTROL3_USE_KR_BLOCK_LOCK_SM_MASK            0x0080
#define QSFI_RX_ANARXCONTROL3_USE_KR_BLOCK_LOCK_SM_ALIGN           0
#define QSFI_RX_ANARXCONTROL3_USE_KR_BLOCK_LOCK_SM_BITS            1
#define QSFI_RX_ANARXCONTROL3_USE_KR_BLOCK_LOCK_SM_SHIFT           7

/* QSFI_RX :: anaRxControl3 :: use_KR4_block_lock_SM [06:06] */
#define QSFI_RX_ANARXCONTROL3_USE_KR4_BLOCK_LOCK_SM_MASK           0x0040
#define QSFI_RX_ANARXCONTROL3_USE_KR4_BLOCK_LOCK_SM_ALIGN          0
#define QSFI_RX_ANARXCONTROL3_USE_KR4_BLOCK_LOCK_SM_BITS           1
#define QSFI_RX_ANARXCONTROL3_USE_KR4_BLOCK_LOCK_SM_SHIFT          6

/* QSFI_RX :: anaRxControl3 :: link_en_force_SM [05:05] */
#define QSFI_RX_ANARXCONTROL3_LINK_EN_FORCE_SM_MASK                0x0020
#define QSFI_RX_ANARXCONTROL3_LINK_EN_FORCE_SM_ALIGN               0
#define QSFI_RX_ANARXCONTROL3_LINK_EN_FORCE_SM_BITS                1
#define QSFI_RX_ANARXCONTROL3_LINK_EN_FORCE_SM_SHIFT               5

/* QSFI_RX :: anaRxControl3 :: link_en_r [04:04] */
#define QSFI_RX_ANARXCONTROL3_LINK_EN_R_MASK                       0x0010
#define QSFI_RX_ANARXCONTROL3_LINK_EN_R_ALIGN                      0
#define QSFI_RX_ANARXCONTROL3_LINK_EN_R_BITS                       1
#define QSFI_RX_ANARXCONTROL3_LINK_EN_R_SHIFT                      4

/* QSFI_RX :: anaRxControl3 :: use_KR4_pmd_lock_SM [03:03] */
#define QSFI_RX_ANARXCONTROL3_USE_KR4_PMD_LOCK_SM_MASK             0x0008
#define QSFI_RX_ANARXCONTROL3_USE_KR4_PMD_LOCK_SM_ALIGN            0
#define QSFI_RX_ANARXCONTROL3_USE_KR4_PMD_LOCK_SM_BITS             1
#define QSFI_RX_ANARXCONTROL3_USE_KR4_PMD_LOCK_SM_SHIFT            3

/* QSFI_RX :: anaRxControl3 :: cl82_en_SM [02:02] */
#define QSFI_RX_ANARXCONTROL3_CL82_EN_SM_MASK                      0x0004
#define QSFI_RX_ANARXCONTROL3_CL82_EN_SM_ALIGN                     0
#define QSFI_RX_ANARXCONTROL3_CL82_EN_SM_BITS                      1
#define QSFI_RX_ANARXCONTROL3_CL82_EN_SM_SHIFT                     2

/* QSFI_RX :: anaRxControl3 :: cl49_dis_SM [01:01] */
#define QSFI_RX_ANARXCONTROL3_CL49_DIS_SM_MASK                     0x0002
#define QSFI_RX_ANARXCONTROL3_CL49_DIS_SM_ALIGN                    0
#define QSFI_RX_ANARXCONTROL3_CL49_DIS_SM_BITS                     1
#define QSFI_RX_ANARXCONTROL3_CL49_DIS_SM_SHIFT                    1

/* QSFI_RX :: anaRxControl3 :: indck_os5_mode_dis_rx_SM [00:00] */
#define QSFI_RX_ANARXCONTROL3_INDCK_OS5_MODE_DIS_RX_SM_MASK        0x0001
#define QSFI_RX_ANARXCONTROL3_INDCK_OS5_MODE_DIS_RX_SM_ALIGN       0
#define QSFI_RX_ANARXCONTROL3_INDCK_OS5_MODE_DIS_RX_SM_BITS        1
#define QSFI_RX_ANARXCONTROL3_INDCK_OS5_MODE_DIS_RX_SM_SHIFT       0


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_XGXS_BLK2
 ***************************************************************************/
/****************************************************************************
 * QSFI_XGXS_BLK2 :: laneReset
 ***************************************************************************/
/* QSFI_XGXS_BLK2 :: laneReset :: reset_mdio [15:15] */
#define QSFI_XGXS_BLK2_LANERESET_RESET_MDIO_MASK                   0x8000
#define QSFI_XGXS_BLK2_LANERESET_RESET_MDIO_ALIGN                  0
#define QSFI_XGXS_BLK2_LANERESET_RESET_MDIO_BITS                   1
#define QSFI_XGXS_BLK2_LANERESET_RESET_MDIO_SHIFT                  15

/* QSFI_XGXS_BLK2 :: laneReset :: reserved0 [14:09] */
#define QSFI_XGXS_BLK2_LANERESET_RESERVED0_MASK                    0x7e00
#define QSFI_XGXS_BLK2_LANERESET_RESERVED0_ALIGN                   0
#define QSFI_XGXS_BLK2_LANERESET_RESERVED0_BITS                    6
#define QSFI_XGXS_BLK2_LANERESET_RESERVED0_SHIFT                   9

/* QSFI_XGXS_BLK2 :: laneReset :: reset_pll [08:08] */
#define QSFI_XGXS_BLK2_LANERESET_RESET_PLL_MASK                    0x0100
#define QSFI_XGXS_BLK2_LANERESET_RESET_PLL_ALIGN                   0
#define QSFI_XGXS_BLK2_LANERESET_RESET_PLL_BITS                    1
#define QSFI_XGXS_BLK2_LANERESET_RESET_PLL_SHIFT                   8

/* QSFI_XGXS_BLK2 :: laneReset :: reserved1 [07:04] */
#define QSFI_XGXS_BLK2_LANERESET_RESERVED1_MASK                    0x00f0
#define QSFI_XGXS_BLK2_LANERESET_RESERVED1_ALIGN                   0
#define QSFI_XGXS_BLK2_LANERESET_RESERVED1_BITS                    4
#define QSFI_XGXS_BLK2_LANERESET_RESERVED1_SHIFT                   4

/* QSFI_XGXS_BLK2 :: laneReset :: lane_reset [03:00] */
#define QSFI_XGXS_BLK2_LANERESET_LANE_RESET_MASK                   0x000f
#define QSFI_XGXS_BLK2_LANERESET_LANE_RESET_ALIGN                  0
#define QSFI_XGXS_BLK2_LANERESET_LANE_RESET_BITS                   4
#define QSFI_XGXS_BLK2_LANERESET_LANE_RESET_SHIFT                  0


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_XGXS_BLK8
 ***************************************************************************/
/****************************************************************************
 * QSFI_XGXS_BLK8 :: cl73Control8
 ***************************************************************************/
/* QSFI_XGXS_BLK8 :: cl73Control8 :: cl73_refclk_161_offset_cnt [15:08] */
#define QSFI_XGXS_BLK8_CL73CONTROL8_CL73_REFCLK_161_OFFSET_CNT_MASK 0xff00
#define QSFI_XGXS_BLK8_CL73CONTROL8_CL73_REFCLK_161_OFFSET_CNT_ALIGN 0
#define QSFI_XGXS_BLK8_CL73CONTROL8_CL73_REFCLK_161_OFFSET_CNT_BITS 8
#define QSFI_XGXS_BLK8_CL73CONTROL8_CL73_REFCLK_161_OFFSET_CNT_SHIFT 8

/* QSFI_XGXS_BLK8 :: cl73Control8 :: reserved0 [07:00] */
#define QSFI_XGXS_BLK8_CL73CONTROL8_RESERVED0_MASK                 0x00ff
#define QSFI_XGXS_BLK8_CL73CONTROL8_RESERVED0_ALIGN                0
#define QSFI_XGXS_BLK8_CL73CONTROL8_RESERVED0_BITS                 8
#define QSFI_XGXS_BLK8_CL73CONTROL8_RESERVED0_SHIFT                0


/****************************************************************************
 * QSFI_XGXS_BLK8 :: cl73Control9
 ***************************************************************************/
/* QSFI_XGXS_BLK8 :: cl73Control9 :: reserved0 [15:14] */
#define QSFI_XGXS_BLK8_CL73CONTROL9_RESERVED0_MASK                 0xc000
#define QSFI_XGXS_BLK8_CL73CONTROL9_RESERVED0_ALIGN                0
#define QSFI_XGXS_BLK8_CL73CONTROL9_RESERVED0_BITS                 2
#define QSFI_XGXS_BLK8_CL73CONTROL9_RESERVED0_SHIFT                14

/* QSFI_XGXS_BLK8 :: cl73Control9 :: cl73_link_fail_inhibit_timer_kr_val [13:00] */
#define QSFI_XGXS_BLK8_CL73CONTROL9_CL73_LINK_FAIL_INHIBIT_TIMER_KR_VAL_MASK 0x3fff
#define QSFI_XGXS_BLK8_CL73CONTROL9_CL73_LINK_FAIL_INHIBIT_TIMER_KR_VAL_ALIGN 0
#define QSFI_XGXS_BLK8_CL73CONTROL9_CL73_LINK_FAIL_INHIBIT_TIMER_KR_VAL_BITS 14
#define QSFI_XGXS_BLK8_CL73CONTROL9_CL73_LINK_FAIL_INHIBIT_TIMER_KR_VAL_SHIFT 0


/****************************************************************************
 * QSFI_XGXS_BLK8 :: cl73Control10
 ***************************************************************************/
/* QSFI_XGXS_BLK8 :: cl73Control10 :: reserved0 [15:14] */
#define QSFI_XGXS_BLK8_CL73CONTROL10_RESERVED0_MASK                0xc000
#define QSFI_XGXS_BLK8_CL73CONTROL10_RESERVED0_ALIGN               0
#define QSFI_XGXS_BLK8_CL73CONTROL10_RESERVED0_BITS                2
#define QSFI_XGXS_BLK8_CL73CONTROL10_RESERVED0_SHIFT               14

/* QSFI_XGXS_BLK8 :: cl73Control10 :: cl73_link_fail_inhibit_timer_cl72_val [13:00] */
#define QSFI_XGXS_BLK8_CL73CONTROL10_CL73_LINK_FAIL_INHIBIT_TIMER_CL72_VAL_MASK 0x3fff
#define QSFI_XGXS_BLK8_CL73CONTROL10_CL73_LINK_FAIL_INHIBIT_TIMER_CL72_VAL_ALIGN 0
#define QSFI_XGXS_BLK8_CL73CONTROL10_CL73_LINK_FAIL_INHIBIT_TIMER_CL72_VAL_BITS 14
#define QSFI_XGXS_BLK8_CL73CONTROL10_CL73_LINK_FAIL_INHIBIT_TIMER_CL72_VAL_SHIFT 0


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_GP2
 ***************************************************************************/
/****************************************************************************
 * QSFI_GP2 :: GP2_0
 ***************************************************************************/
/* QSFI_GP2 :: GP2_0 :: pmd_pll_mode [15:12] */
#define QSFI_GP2_GP2_0_PMD_PLL_MODE_MASK                           0xf000
#define QSFI_GP2_GP2_0_PMD_PLL_MODE_ALIGN                          0
#define QSFI_GP2_GP2_0_PMD_PLL_MODE_BITS                           4
#define QSFI_GP2_GP2_0_PMD_PLL_MODE_SHIFT                          12

/* QSFI_GP2 :: GP2_0 :: pmd_rx_sigdet [11:08] */
#define QSFI_GP2_GP2_0_PMD_RX_SIGDET_MASK                          0x0f00
#define QSFI_GP2_GP2_0_PMD_RX_SIGDET_ALIGN                         0
#define QSFI_GP2_GP2_0_PMD_RX_SIGDET_BITS                          4
#define QSFI_GP2_GP2_0_PMD_RX_SIGDET_SHIFT                         8

/* QSFI_GP2 :: GP2_0 :: pmd_tx_clk_vld [07:04] */
#define QSFI_GP2_GP2_0_PMD_TX_CLK_VLD_MASK                         0x00f0
#define QSFI_GP2_GP2_0_PMD_TX_CLK_VLD_ALIGN                        0
#define QSFI_GP2_GP2_0_PMD_TX_CLK_VLD_BITS                         4
#define QSFI_GP2_GP2_0_PMD_TX_CLK_VLD_SHIFT                        4

/* QSFI_GP2 :: GP2_0 :: pmd_rx_pmd_lock [03:00] */
#define QSFI_GP2_GP2_0_PMD_RX_PMD_LOCK_MASK                        0x000f
#define QSFI_GP2_GP2_0_PMD_RX_PMD_LOCK_ALIGN                       0
#define QSFI_GP2_GP2_0_PMD_RX_PMD_LOCK_BITS                        4
#define QSFI_GP2_GP2_0_PMD_RX_PMD_LOCK_SHIFT                       0


/****************************************************************************
 * QSFI_GP2 :: GP2_1
 ***************************************************************************/
/* QSFI_GP2 :: GP2_1 :: pmd_osr_mode_ln3 [15:12] */
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN3_MASK                       0xf000
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN3_ALIGN                      0
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN3_BITS                       4
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN3_SHIFT                      12

/* QSFI_GP2 :: GP2_1 :: pmd_osr_mode_ln2 [11:08] */
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN2_MASK                       0x0f00
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN2_ALIGN                      0
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN2_BITS                       4
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN2_SHIFT                      8

/* QSFI_GP2 :: GP2_1 :: pmd_osr_mode_ln1 [07:04] */
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN1_MASK                       0x00f0
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN1_ALIGN                      0
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN1_BITS                       4
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN1_SHIFT                      4

/* QSFI_GP2 :: GP2_1 :: pmd_osr_mode_ln0 [03:00] */
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN0_MASK                       0x000f
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN0_ALIGN                      0
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN0_BITS                       4
#define QSFI_GP2_GP2_1_PMD_OSR_MODE_LN0_SHIFT                      0


/****************************************************************************
 * QSFI_GP2 :: GP2_2
 ***************************************************************************/
/* QSFI_GP2 :: GP2_2 :: reserved0 [15:15] */
#define QSFI_GP2_GP2_2_RESERVED0_MASK                              0x8000
#define QSFI_GP2_GP2_2_RESERVED0_ALIGN                             0
#define QSFI_GP2_GP2_2_RESERVED0_BITS                              1
#define QSFI_GP2_GP2_2_RESERVED0_SHIFT                             15

/* QSFI_GP2 :: GP2_2 :: actual_speed_ln1 [14:08] */
#define QSFI_GP2_GP2_2_ACTUAL_SPEED_LN1_MASK                       0x7f00
#define QSFI_GP2_GP2_2_ACTUAL_SPEED_LN1_ALIGN                      0
#define QSFI_GP2_GP2_2_ACTUAL_SPEED_LN1_BITS                       7
#define QSFI_GP2_GP2_2_ACTUAL_SPEED_LN1_SHIFT                      8

/* QSFI_GP2 :: GP2_2 :: reserved1 [07:07] */
#define QSFI_GP2_GP2_2_RESERVED1_MASK                              0x0080
#define QSFI_GP2_GP2_2_RESERVED1_ALIGN                             0
#define QSFI_GP2_GP2_2_RESERVED1_BITS                              1
#define QSFI_GP2_GP2_2_RESERVED1_SHIFT                             7

/* QSFI_GP2 :: GP2_2 :: actual_speed_ln0 [06:00] */
#define QSFI_GP2_GP2_2_ACTUAL_SPEED_LN0_MASK                       0x007f
#define QSFI_GP2_GP2_2_ACTUAL_SPEED_LN0_ALIGN                      0
#define QSFI_GP2_GP2_2_ACTUAL_SPEED_LN0_BITS                       7
#define QSFI_GP2_GP2_2_ACTUAL_SPEED_LN0_SHIFT                      0


/****************************************************************************
 * QSFI_GP2 :: GP2_3
 ***************************************************************************/
/* QSFI_GP2 :: GP2_3 :: reserved0 [15:15] */
#define QSFI_GP2_GP2_3_RESERVED0_MASK                              0x8000
#define QSFI_GP2_GP2_3_RESERVED0_ALIGN                             0
#define QSFI_GP2_GP2_3_RESERVED0_BITS                              1
#define QSFI_GP2_GP2_3_RESERVED0_SHIFT                             15

/* QSFI_GP2 :: GP2_3 :: actual_speed_ln3 [14:08] */
#define QSFI_GP2_GP2_3_ACTUAL_SPEED_LN3_MASK                       0x7f00
#define QSFI_GP2_GP2_3_ACTUAL_SPEED_LN3_ALIGN                      0
#define QSFI_GP2_GP2_3_ACTUAL_SPEED_LN3_BITS                       7
#define QSFI_GP2_GP2_3_ACTUAL_SPEED_LN3_SHIFT                      8

/* QSFI_GP2 :: GP2_3 :: reserved1 [07:07] */
#define QSFI_GP2_GP2_3_RESERVED1_MASK                              0x0080
#define QSFI_GP2_GP2_3_RESERVED1_ALIGN                             0
#define QSFI_GP2_GP2_3_RESERVED1_BITS                              1
#define QSFI_GP2_GP2_3_RESERVED1_SHIFT                             7

/* QSFI_GP2 :: GP2_3 :: actual_speed_ln2 [06:00] */
#define QSFI_GP2_GP2_3_ACTUAL_SPEED_LN2_MASK                       0x007f
#define QSFI_GP2_GP2_3_ACTUAL_SPEED_LN2_ALIGN                      0
#define QSFI_GP2_GP2_3_ACTUAL_SPEED_LN2_BITS                       7
#define QSFI_GP2_GP2_3_ACTUAL_SPEED_LN2_SHIFT                      0


/****************************************************************************
 * QSFI_GP2 :: GP2_4
 ***************************************************************************/
/* QSFI_GP2 :: GP2_4 :: cl73_autoneg_complete [15:12] */
#define QSFI_GP2_GP2_4_CL73_AUTONEG_COMPLETE_MASK                  0xf000
#define QSFI_GP2_GP2_4_CL73_AUTONEG_COMPLETE_ALIGN                 0
#define QSFI_GP2_GP2_4_CL73_AUTONEG_COMPLETE_BITS                  4
#define QSFI_GP2_GP2_4_CL73_AUTONEG_COMPLETE_SHIFT                 12

/* QSFI_GP2 :: GP2_4 :: pmd_rx_dme_en [11:08] */
#define QSFI_GP2_GP2_4_PMD_RX_DME_EN_MASK                          0x0f00
#define QSFI_GP2_GP2_4_PMD_RX_DME_EN_ALIGN                         0
#define QSFI_GP2_GP2_4_PMD_RX_DME_EN_BITS                          4
#define QSFI_GP2_GP2_4_PMD_RX_DME_EN_SHIFT                         8

/* QSFI_GP2 :: GP2_4 :: cl73_mr_lp_autoneg_able [07:04] */
#define QSFI_GP2_GP2_4_CL73_MR_LP_AUTONEG_ABLE_MASK                0x00f0
#define QSFI_GP2_GP2_4_CL73_MR_LP_AUTONEG_ABLE_ALIGN               0
#define QSFI_GP2_GP2_4_CL73_MR_LP_AUTONEG_ABLE_BITS                4
#define QSFI_GP2_GP2_4_CL73_MR_LP_AUTONEG_ABLE_SHIFT               4

/* QSFI_GP2 :: GP2_4 :: cl73_mr_autoneg_able [03:00] */
#define QSFI_GP2_GP2_4_CL73_MR_AUTONEG_ABLE_MASK                   0x000f
#define QSFI_GP2_GP2_4_CL73_MR_AUTONEG_ABLE_ALIGN                  0
#define QSFI_GP2_GP2_4_CL73_MR_AUTONEG_ABLE_BITS                   4
#define QSFI_GP2_GP2_4_CL73_MR_AUTONEG_ABLE_SHIFT                  0


/****************************************************************************
 * QSFI_GP2 :: GP2_5
 ***************************************************************************/
/* QSFI_GP2 :: GP2_5 :: Cl73_BAMStat123_ln0 [15:00] */
#define QSFI_GP2_GP2_5_CL73_BAMSTAT123_LN0_MASK                    0xffff
#define QSFI_GP2_GP2_5_CL73_BAMSTAT123_LN0_ALIGN                   0
#define QSFI_GP2_GP2_5_CL73_BAMSTAT123_LN0_BITS                    16
#define QSFI_GP2_GP2_5_CL73_BAMSTAT123_LN0_SHIFT                   0


/****************************************************************************
 * QSFI_GP2 :: GP2_6
 ***************************************************************************/
/* QSFI_GP2 :: GP2_6 :: Cl73_BAMStat123_ln0 [15:00] */
#define QSFI_GP2_GP2_6_CL73_BAMSTAT123_LN0_MASK                    0xffff
#define QSFI_GP2_GP2_6_CL73_BAMSTAT123_LN0_ALIGN                   0
#define QSFI_GP2_GP2_6_CL73_BAMSTAT123_LN0_BITS                    16
#define QSFI_GP2_GP2_6_CL73_BAMSTAT123_LN0_SHIFT                   0


/****************************************************************************
 * QSFI_GP2 :: GP2_7
 ***************************************************************************/
/* QSFI_GP2 :: GP2_7 :: Cl73_BAMStat123_ln0 [15:00] */
#define QSFI_GP2_GP2_7_CL73_BAMSTAT123_LN0_MASK                    0xffff
#define QSFI_GP2_GP2_7_CL73_BAMSTAT123_LN0_ALIGN                   0
#define QSFI_GP2_GP2_7_CL73_BAMSTAT123_LN0_BITS                    16
#define QSFI_GP2_GP2_7_CL73_BAMSTAT123_LN0_SHIFT                   0


/****************************************************************************
 * QSFI_GP2 :: GP2_8
 ***************************************************************************/
/* QSFI_GP2 :: GP2_8 :: reserved0 [15:15] */
#define QSFI_GP2_GP2_8_RESERVED0_MASK                              0x8000
#define QSFI_GP2_GP2_8_RESERVED0_ALIGN                             0
#define QSFI_GP2_GP2_8_RESERVED0_BITS                              1
#define QSFI_GP2_GP2_8_RESERVED0_SHIFT                             15

/* QSFI_GP2 :: GP2_8 :: an_speed_ln1 [14:08] */
#define QSFI_GP2_GP2_8_AN_SPEED_LN1_MASK                           0x7f00
#define QSFI_GP2_GP2_8_AN_SPEED_LN1_ALIGN                          0
#define QSFI_GP2_GP2_8_AN_SPEED_LN1_BITS                           7
#define QSFI_GP2_GP2_8_AN_SPEED_LN1_SHIFT                          8

/* QSFI_GP2 :: GP2_8 :: reserved1 [07:07] */
#define QSFI_GP2_GP2_8_RESERVED1_MASK                              0x0080
#define QSFI_GP2_GP2_8_RESERVED1_ALIGN                             0
#define QSFI_GP2_GP2_8_RESERVED1_BITS                              1
#define QSFI_GP2_GP2_8_RESERVED1_SHIFT                             7

/* QSFI_GP2 :: GP2_8 :: an_speed_ln0 [06:00] */
#define QSFI_GP2_GP2_8_AN_SPEED_LN0_MASK                           0x007f
#define QSFI_GP2_GP2_8_AN_SPEED_LN0_ALIGN                          0
#define QSFI_GP2_GP2_8_AN_SPEED_LN0_BITS                           7
#define QSFI_GP2_GP2_8_AN_SPEED_LN0_SHIFT                          0


/****************************************************************************
 * QSFI_GP2 :: GP2_9
 ***************************************************************************/
/* QSFI_GP2 :: GP2_9 :: reserved0 [15:15] */
#define QSFI_GP2_GP2_9_RESERVED0_MASK                              0x8000
#define QSFI_GP2_GP2_9_RESERVED0_ALIGN                             0
#define QSFI_GP2_GP2_9_RESERVED0_BITS                              1
#define QSFI_GP2_GP2_9_RESERVED0_SHIFT                             15

/* QSFI_GP2 :: GP2_9 :: an_speed_ln3 [14:08] */
#define QSFI_GP2_GP2_9_AN_SPEED_LN3_MASK                           0x7f00
#define QSFI_GP2_GP2_9_AN_SPEED_LN3_ALIGN                          0
#define QSFI_GP2_GP2_9_AN_SPEED_LN3_BITS                           7
#define QSFI_GP2_GP2_9_AN_SPEED_LN3_SHIFT                          8

/* QSFI_GP2 :: GP2_9 :: reserved1 [07:07] */
#define QSFI_GP2_GP2_9_RESERVED1_MASK                              0x0080
#define QSFI_GP2_GP2_9_RESERVED1_ALIGN                             0
#define QSFI_GP2_GP2_9_RESERVED1_BITS                              1
#define QSFI_GP2_GP2_9_RESERVED1_SHIFT                             7

/* QSFI_GP2 :: GP2_9 :: an_speed_ln2 [06:00] */
#define QSFI_GP2_GP2_9_AN_SPEED_LN2_MASK                           0x007f
#define QSFI_GP2_GP2_9_AN_SPEED_LN2_ALIGN                          0
#define QSFI_GP2_GP2_9_AN_SPEED_LN2_BITS                           7
#define QSFI_GP2_GP2_9_AN_SPEED_LN2_SHIFT                          0


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_FC_RX
 ***************************************************************************/
/****************************************************************************
 * QSFI_FC_RX :: ln_fc_rx_control_reg
 ***************************************************************************/
/* QSFI_FC_RX :: ln_fc_rx_control_reg :: reserved0 [15:10] */
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_RESERVED0_MASK             0xfc00
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_RESERVED0_ALIGN            0
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_RESERVED0_BITS             6
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_RESERVED0_SHIFT            10

/* QSFI_FC_RX :: ln_fc_rx_control_reg :: fc_cdr_rxseqstart [09:09] */
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_CDR_RXSEQSTART_MASK     0x0200
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_CDR_RXSEQSTART_ALIGN    0
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_CDR_RXSEQSTART_BITS     1
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_CDR_RXSEQSTART_SHIFT    9

/* QSFI_FC_RX :: ln_fc_rx_control_reg :: fc_rx_lsb_first [08:08] */
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_RX_LSB_FIRST_MASK       0x0100
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_RX_LSB_FIRST_ALIGN      0
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_RX_LSB_FIRST_BITS       1
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_RX_LSB_FIRST_SHIFT      8

/* QSFI_FC_RX :: ln_fc_rx_control_reg :: comma_detect_window [07:05] */
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_COMMA_DETECT_WINDOW_MASK   0x00e0
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_COMMA_DETECT_WINDOW_ALIGN  0
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_COMMA_DETECT_WINDOW_BITS   3
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_COMMA_DETECT_WINDOW_SHIFT  5

/* QSFI_FC_RX :: ln_fc_rx_control_reg :: wsync_rst [04:04] */
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_WSYNC_RST_MASK             0x0010
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_WSYNC_RST_ALIGN            0
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_WSYNC_RST_BITS             1
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_WSYNC_RST_SHIFT            4

/* QSFI_FC_RX :: ln_fc_rx_control_reg :: wsync_mode [03:03] */
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_WSYNC_MODE_MASK            0x0008
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_WSYNC_MODE_ALIGN           0
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_WSYNC_MODE_BITS            1
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_WSYNC_MODE_SHIFT           3

/* QSFI_FC_RX :: ln_fc_rx_control_reg :: reserved1 [02:02] */
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_RESERVED1_MASK             0x0004
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_RESERVED1_ALIGN            0
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_RESERVED1_BITS             1
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_RESERVED1_SHIFT            2

/* QSFI_FC_RX :: ln_fc_rx_control_reg :: fc_sw_rst [01:01] */
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_SW_RST_MASK             0x0002
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_SW_RST_ALIGN            0
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_SW_RST_BITS             1
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_SW_RST_SHIFT            1

/* QSFI_FC_RX :: ln_fc_rx_control_reg :: fc_pwr_dwn [00:00] */
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_PWR_DWN_MASK            0x0001
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_PWR_DWN_ALIGN           0
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_PWR_DWN_BITS            1
#define QSFI_FC_RX_LN_FC_RX_CONTROL_REG_FC_PWR_DWN_SHIFT           0


/****************************************************************************
 * QSFI_FC_RX :: ln_fc_rx_status_reg
 ***************************************************************************/
/* QSFI_FC_RX :: ln_fc_rx_status_reg :: reserved0 [15:14] */
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED0_MASK              0xc000
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED0_ALIGN             0
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED0_BITS              2
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED0_SHIFT             14

/* QSFI_FC_RX :: ln_fc_rx_status_reg :: fc_los [13:13] */
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_LOS_MASK                 0x2000
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_LOS_ALIGN                0
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_LOS_BITS                 1
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_LOS_SHIFT                13

/* QSFI_FC_RX :: ln_fc_rx_status_reg :: fc_cdr_lock [12:12] */
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_CDR_LOCK_MASK            0x1000
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_CDR_LOCK_ALIGN           0
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_CDR_LOCK_BITS            1
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_CDR_LOCK_SHIFT           12

/* QSFI_FC_RX :: ln_fc_rx_status_reg :: tx_fault [11:11] */
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_TX_FAULT_MASK               0x0800
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_TX_FAULT_ALIGN              0
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_TX_FAULT_BITS               1
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_TX_FAULT_SHIFT              11

/* QSFI_FC_RX :: ln_fc_rx_status_reg :: reserved1 [10:03] */
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED1_MASK              0x07f8
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED1_ALIGN             0
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED1_BITS              8
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED1_SHIFT             3

/* QSFI_FC_RX :: ln_fc_rx_status_reg :: fc_speed_acq [02:02] */
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_SPEED_ACQ_MASK           0x0004
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_SPEED_ACQ_ALIGN          0
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_SPEED_ACQ_BITS           1
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_SPEED_ACQ_SHIFT          2

/* QSFI_FC_RX :: ln_fc_rx_status_reg :: reserved2 [01:01] */
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED2_MASK              0x0002
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED2_ALIGN             0
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED2_BITS              1
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_RESERVED2_SHIFT             1

/* QSFI_FC_RX :: ln_fc_rx_status_reg :: fc_word_sync_acq [00:00] */
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_WORD_SYNC_ACQ_MASK       0x0001
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_WORD_SYNC_ACQ_ALIGN      0
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_WORD_SYNC_ACQ_BITS       1
#define QSFI_FC_RX_LN_FC_RX_STATUS_REG_FC_WORD_SYNC_ACQ_SHIFT      0


/****************************************************************************
 * QSFI_FC_RX :: ln_fc_rx_interrupts_reg
 ***************************************************************************/
/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: reserved0 [15:11] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_RESERVED0_MASK          0xf800
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_RESERVED0_ALIGN         0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_RESERVED0_BITS          5
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_RESERVED0_SHIFT         11

/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: tx_fault_int [10:10] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_TX_FAULT_INT_MASK       0x0400
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_TX_FAULT_INT_ALIGN      0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_TX_FAULT_INT_BITS       1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_TX_FAULT_INT_SHIFT      10

/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: fc_8g_sync_test_failed_int [09:09] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8G_SYNC_TEST_FAILED_INT_MASK 0x0200
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8G_SYNC_TEST_FAILED_INT_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8G_SYNC_TEST_FAILED_INT_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8G_SYNC_TEST_FAILED_INT_SHIFT 9

/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: fc_4g_sync_test_failed_int [08:08] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_4G_SYNC_TEST_FAILED_INT_MASK 0x0100
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_4G_SYNC_TEST_FAILED_INT_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_4G_SYNC_TEST_FAILED_INT_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_4G_SYNC_TEST_FAILED_INT_SHIFT 8

/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: fc_2g_sync_test_failed_int [07:07] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_2G_SYNC_TEST_FAILED_INT_MASK 0x0080
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_2G_SYNC_TEST_FAILED_INT_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_2G_SYNC_TEST_FAILED_INT_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_2G_SYNC_TEST_FAILED_INT_SHIFT 7

/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: fc_comma_detect_int [06:06] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_COMMA_DETECT_INT_MASK 0x0040
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_COMMA_DETECT_INT_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_COMMA_DETECT_INT_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_COMMA_DETECT_INT_SHIFT 6

/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: fc_40b_code_error_int [05:05] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_40B_CODE_ERROR_INT_MASK 0x0020
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_40B_CODE_ERROR_INT_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_40B_CODE_ERROR_INT_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_40B_CODE_ERROR_INT_SHIFT 5

/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: fc_8b10b_disparity_error_int [04:04] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8B10B_DISPARITY_ERROR_INT_MASK 0x0010
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8B10B_DISPARITY_ERROR_INT_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8B10B_DISPARITY_ERROR_INT_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8B10B_DISPARITY_ERROR_INT_SHIFT 4

/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: fc_8b10b_code_error_int [03:03] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8B10B_CODE_ERROR_INT_MASK 0x0008
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8B10B_CODE_ERROR_INT_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8B10B_CODE_ERROR_INT_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_8B10B_CODE_ERROR_INT_SHIFT 3

/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: fc_speed_acq_int [02:02] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_SPEED_ACQ_INT_MASK   0x0004
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_SPEED_ACQ_INT_ALIGN  0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_SPEED_ACQ_INT_BITS   1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_SPEED_ACQ_INT_SHIFT  2

/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: fc_link_fail_int [01:01] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_LINK_FAIL_INT_MASK   0x0002
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_LINK_FAIL_INT_ALIGN  0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_LINK_FAIL_INT_BITS   1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_LINK_FAIL_INT_SHIFT  1

/* QSFI_FC_RX :: ln_fc_rx_interrupts_reg :: fc_word_sync_acq_int [00:00] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_WORD_SYNC_ACQ_INT_MASK 0x0001
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_WORD_SYNC_ACQ_INT_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_WORD_SYNC_ACQ_INT_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPTS_REG_FC_WORD_SYNC_ACQ_INT_SHIFT 0


/****************************************************************************
 * QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg
 ***************************************************************************/
/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: reserved0 [15:11] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_RESERVED0_MASK   0xf800
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_RESERVED0_ALIGN  0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_RESERVED0_BITS   5
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_RESERVED0_SHIFT  11

/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: tx_fault_enable [10:10] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_TX_FAULT_ENABLE_MASK 0x0400
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_TX_FAULT_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_TX_FAULT_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_TX_FAULT_ENABLE_SHIFT 10

/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: fc_8g_sync_test_failed_enable [09:09] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8G_SYNC_TEST_FAILED_ENABLE_MASK 0x0200
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8G_SYNC_TEST_FAILED_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8G_SYNC_TEST_FAILED_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8G_SYNC_TEST_FAILED_ENABLE_SHIFT 9

/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: fc_4g_sync_test_failed_enable [08:08] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_4G_SYNC_TEST_FAILED_ENABLE_MASK 0x0100
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_4G_SYNC_TEST_FAILED_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_4G_SYNC_TEST_FAILED_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_4G_SYNC_TEST_FAILED_ENABLE_SHIFT 8

/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: fc_2g_sync_test_failed_enable [07:07] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_2G_SYNC_TEST_FAILED_ENABLE_MASK 0x0080
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_2G_SYNC_TEST_FAILED_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_2G_SYNC_TEST_FAILED_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_2G_SYNC_TEST_FAILED_ENABLE_SHIFT 7

/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: fc_comma_detect_enable [06:06] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_COMMA_DETECT_ENABLE_MASK 0x0040
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_COMMA_DETECT_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_COMMA_DETECT_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_COMMA_DETECT_ENABLE_SHIFT 6

/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: fc_40b_code_error_enable [05:05] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_40B_CODE_ERROR_ENABLE_MASK 0x0020
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_40B_CODE_ERROR_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_40B_CODE_ERROR_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_40B_CODE_ERROR_ENABLE_SHIFT 5

/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: fc_8b10b_disparity_error_enable [04:04] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8B10B_DISPARITY_ERROR_ENABLE_MASK 0x0010
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8B10B_DISPARITY_ERROR_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8B10B_DISPARITY_ERROR_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8B10B_DISPARITY_ERROR_ENABLE_SHIFT 4

/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: fc_8b10b_code_error_enable [03:03] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8B10B_CODE_ERROR_ENABLE_MASK 0x0008
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8B10B_CODE_ERROR_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8B10B_CODE_ERROR_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_8B10B_CODE_ERROR_ENABLE_SHIFT 3

/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: fc_speed_acq_enable [02:02] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_SPEED_ACQ_ENABLE_MASK 0x0004
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_SPEED_ACQ_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_SPEED_ACQ_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_SPEED_ACQ_ENABLE_SHIFT 2

/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: fc_link_fail_enable [01:01] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_LINK_FAIL_ENABLE_MASK 0x0002
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_LINK_FAIL_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_LINK_FAIL_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_LINK_FAIL_ENABLE_SHIFT 1

/* QSFI_FC_RX :: ln_fc_rx_interrupt_enables_reg :: fc_word_sync_acq_enable [00:00] */
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_WORD_SYNC_ACQ_ENABLE_MASK 0x0001
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_WORD_SYNC_ACQ_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_WORD_SYNC_ACQ_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_INTERRUPT_ENABLES_REG_FC_WORD_SYNC_ACQ_ENABLE_SHIFT 0


/****************************************************************************
 * QSFI_FC_RX :: ln_fc_rx_auto_speed_config
 ***************************************************************************/
/* QSFI_FC_RX :: ln_fc_rx_auto_speed_config :: reserved0 [15:11] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_RESERVED0_MASK       0xf800
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_RESERVED0_ALIGN      0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_RESERVED0_BITS       5
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_RESERVED0_SHIFT      11

/* QSFI_FC_RX :: ln_fc_rx_auto_speed_config :: fc_auto_speed_self_restart [10:10] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_SELF_RESTART_MASK 0x0400
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_SELF_RESTART_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_SELF_RESTART_BITS 1
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_SELF_RESTART_SHIFT 10

/* QSFI_FC_RX :: ln_fc_rx_auto_speed_config :: fc_auto_speed_delay [09:08] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_DELAY_MASK 0x0300
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_DELAY_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_DELAY_BITS 2
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_DELAY_SHIFT 8

/* QSFI_FC_RX :: ln_fc_rx_auto_speed_config :: fc_auto_speed_sync_test_start [07:07] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_SYNC_TEST_START_MASK 0x0080
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_SYNC_TEST_START_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_SYNC_TEST_START_BITS 1
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_SYNC_TEST_START_SHIFT 7

/* QSFI_FC_RX :: ln_fc_rx_auto_speed_config :: fc_auto_speed_reset [06:06] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_RESET_MASK 0x0040
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_RESET_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_RESET_BITS 1
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_AUTO_SPEED_RESET_SHIFT 6

/* QSFI_FC_RX :: ln_fc_rx_auto_speed_config :: fc_cdr_forced_speed_enc_rx [05:05] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_CDR_FORCED_SPEED_ENC_RX_MASK 0x0020
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_CDR_FORCED_SPEED_ENC_RX_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_CDR_FORCED_SPEED_ENC_RX_BITS 1
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_CDR_FORCED_SPEED_ENC_RX_SHIFT 5

/* QSFI_FC_RX :: ln_fc_rx_auto_speed_config :: reserved1 [04:03] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_RESERVED1_MASK       0x0018
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_RESERVED1_ALIGN      0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_RESERVED1_BITS       2
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_RESERVED1_SHIFT      3

/* QSFI_FC_RX :: ln_fc_rx_auto_speed_config :: fc_oper_rate [02:00] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_OPER_RATE_MASK    0x0007
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_OPER_RATE_ALIGN   0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_OPER_RATE_BITS    3
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_CONFIG_FC_OPER_RATE_SHIFT   0


/****************************************************************************
 * QSFI_FC_RX :: ln_fc_rx_auto_speed_status
 ***************************************************************************/
/* QSFI_FC_RX :: ln_fc_rx_auto_speed_status :: reserved0 [15:09] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_RESERVED0_MASK       0xfe00
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_RESERVED0_ALIGN      0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_RESERVED0_BITS       7
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_RESERVED0_SHIFT      9

/* QSFI_FC_RX :: ln_fc_rx_auto_speed_status :: fc_auto_speed_sync_test_fail [08:08] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_AUTO_SPEED_SYNC_TEST_FAIL_MASK 0x0100
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_AUTO_SPEED_SYNC_TEST_FAIL_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_AUTO_SPEED_SYNC_TEST_FAIL_BITS 1
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_AUTO_SPEED_SYNC_TEST_FAIL_SHIFT 8

/* QSFI_FC_RX :: ln_fc_rx_auto_speed_status :: fc_auto_speed_sync_test_end [07:07] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_AUTO_SPEED_SYNC_TEST_END_MASK 0x0080
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_AUTO_SPEED_SYNC_TEST_END_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_AUTO_SPEED_SYNC_TEST_END_BITS 1
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_AUTO_SPEED_SYNC_TEST_END_SHIFT 7

/* QSFI_FC_RX :: ln_fc_rx_auto_speed_status :: reserved1 [06:03] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_RESERVED1_MASK       0x0078
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_RESERVED1_ALIGN      0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_RESERVED1_BITS       4
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_RESERVED1_SHIFT      3

/* QSFI_FC_RX :: ln_fc_rx_auto_speed_status :: fc_rx_link_speed [02:00] */
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_RX_LINK_SPEED_MASK 0x0007
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_RX_LINK_SPEED_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_RX_LINK_SPEED_BITS 3
#define QSFI_FC_RX_LN_FC_RX_AUTO_SPEED_STATUS_FC_RX_LINK_SPEED_SHIFT 0


/****************************************************************************
 * QSFI_FC_RX :: ln_fc_rx_r_t_tov
 ***************************************************************************/
/* QSFI_FC_RX :: ln_fc_rx_r_t_tov :: r_t_tov [15:00] */
#define QSFI_FC_RX_LN_FC_RX_R_T_TOV_R_T_TOV_MASK                   0xffff
#define QSFI_FC_RX_LN_FC_RX_R_T_TOV_R_T_TOV_ALIGN                  0
#define QSFI_FC_RX_LN_FC_RX_R_T_TOV_R_T_TOV_BITS                   16
#define QSFI_FC_RX_LN_FC_RX_R_T_TOV_R_T_TOV_SHIFT                  0


/****************************************************************************
 * QSFI_FC_RX :: ln_fc_rx_tpat_mon_config
 ***************************************************************************/
/* QSFI_FC_RX :: ln_fc_rx_tpat_mon_config :: reserved0 [15:07] */
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_RESERVED0_MASK         0xff80
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_RESERVED0_ALIGN        0
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_RESERVED0_BITS         9
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_RESERVED0_SHIFT        7

/* QSFI_FC_RX :: ln_fc_rx_tpat_mon_config :: fc_tpat_idle [06:03] */
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_IDLE_MASK      0x0078
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_IDLE_ALIGN     0
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_IDLE_BITS      4
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_IDLE_SHIFT     3

/* QSFI_FC_RX :: ln_fc_rx_tpat_mon_config :: fc_tpat_mode [02:01] */
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_MODE_MASK      0x0006
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_MODE_ALIGN     0
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_MODE_BITS      2
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_MODE_SHIFT     1

/* QSFI_FC_RX :: ln_fc_rx_tpat_mon_config :: fc_tpat_mon_enable [00:00] */
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_MON_ENABLE_MASK 0x0001
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_MON_ENABLE_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_MON_ENABLE_BITS 1
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_CONFIG_FC_TPAT_MON_ENABLE_SHIFT 0


/****************************************************************************
 * QSFI_FC_RX :: ln_fc_rx_tpat_mon_status
 ***************************************************************************/
/* QSFI_FC_RX :: ln_fc_rx_tpat_mon_status :: reserved0 [15:01] */
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_STATUS_RESERVED0_MASK         0xfffe
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_STATUS_RESERVED0_ALIGN        0
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_STATUS_RESERVED0_BITS         15
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_STATUS_RESERVED0_SHIFT        1

/* QSFI_FC_RX :: ln_fc_rx_tpat_mon_status :: fc_tpat_mon_lock [00:00] */
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_STATUS_FC_TPAT_MON_LOCK_MASK  0x0001
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_STATUS_FC_TPAT_MON_LOCK_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_STATUS_FC_TPAT_MON_LOCK_BITS  1
#define QSFI_FC_RX_LN_FC_RX_TPAT_MON_STATUS_FC_TPAT_MON_LOCK_SHIFT 0


/****************************************************************************
 * QSFI_FC_RX :: ln_fc_rx_received_tpat_cnt
 ***************************************************************************/
/* QSFI_FC_RX :: ln_fc_rx_received_tpat_cnt :: fc_received_tpat_cnt [15:00] */
#define QSFI_FC_RX_LN_FC_RX_RECEIVED_TPAT_CNT_FC_RECEIVED_TPAT_CNT_MASK 0xffff
#define QSFI_FC_RX_LN_FC_RX_RECEIVED_TPAT_CNT_FC_RECEIVED_TPAT_CNT_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_RECEIVED_TPAT_CNT_FC_RECEIVED_TPAT_CNT_BITS 16
#define QSFI_FC_RX_LN_FC_RX_RECEIVED_TPAT_CNT_FC_RECEIVED_TPAT_CNT_SHIFT 0


/****************************************************************************
 * QSFI_FC_RX :: ln_fc_rx_tpat_error_cnt
 ***************************************************************************/
/* QSFI_FC_RX :: ln_fc_rx_tpat_error_cnt :: fc_tpat_error_cnt [15:00] */
#define QSFI_FC_RX_LN_FC_RX_TPAT_ERROR_CNT_FC_TPAT_ERROR_CNT_MASK  0xffff
#define QSFI_FC_RX_LN_FC_RX_TPAT_ERROR_CNT_FC_TPAT_ERROR_CNT_ALIGN 0
#define QSFI_FC_RX_LN_FC_RX_TPAT_ERROR_CNT_FC_TPAT_ERROR_CNT_BITS  16
#define QSFI_FC_RX_LN_FC_RX_TPAT_ERROR_CNT_FC_TPAT_ERROR_CNT_SHIFT 0


/****************************************************************************
 * merlin_gallardo_qsfi_blk_QSFI_BASER
 ***************************************************************************/
/****************************************************************************
 * QSFI_BASER :: control_0
 ***************************************************************************/
/* QSFI_BASER :: control_0 :: reserved0 [15:14] */
#define QSFI_BASER_CONTROL_0_RESERVED0_MASK                        0xc000
#define QSFI_BASER_CONTROL_0_RESERVED0_ALIGN                       0
#define QSFI_BASER_CONTROL_0_RESERVED0_BITS                        2
#define QSFI_BASER_CONTROL_0_RESERVED0_SHIFT                       14

/* QSFI_BASER :: control_0 :: fast_lock_cya [13:13] */
#define QSFI_BASER_CONTROL_0_FAST_LOCK_CYA_MASK                    0x2000
#define QSFI_BASER_CONTROL_0_FAST_LOCK_CYA_ALIGN                   0
#define QSFI_BASER_CONTROL_0_FAST_LOCK_CYA_BITS                    1
#define QSFI_BASER_CONTROL_0_FAST_LOCK_CYA_SHIFT                   13

/* QSFI_BASER :: control_0 :: use_cl49_lsm_for_cl82_cya [12:12] */
#define QSFI_BASER_CONTROL_0_USE_CL49_LSM_FOR_CL82_CYA_MASK        0x1000
#define QSFI_BASER_CONTROL_0_USE_CL49_LSM_FOR_CL82_CYA_ALIGN       0
#define QSFI_BASER_CONTROL_0_USE_CL49_LSM_FOR_CL82_CYA_BITS        1
#define QSFI_BASER_CONTROL_0_USE_CL49_LSM_FOR_CL82_CYA_SHIFT       12

/* QSFI_BASER :: control_0 :: sh_cnt_cl82_ext [11:00] */
#define QSFI_BASER_CONTROL_0_SH_CNT_CL82_EXT_MASK                  0x0fff
#define QSFI_BASER_CONTROL_0_SH_CNT_CL82_EXT_ALIGN                 0
#define QSFI_BASER_CONTROL_0_SH_CNT_CL82_EXT_BITS                  12
#define QSFI_BASER_CONTROL_0_SH_CNT_CL82_EXT_SHIFT                 0


/****************************************************************************
 * QSFI_BASER :: control_1
 ***************************************************************************/
/* QSFI_BASER :: control_1 :: rst_gbox [15:15] */
#define QSFI_BASER_CONTROL_1_RST_GBOX_MASK                         0x8000
#define QSFI_BASER_CONTROL_1_RST_GBOX_ALIGN                        0
#define QSFI_BASER_CONTROL_1_RST_GBOX_BITS                         1
#define QSFI_BASER_CONTROL_1_RST_GBOX_SHIFT                        15

/* QSFI_BASER :: control_1 :: rx_baseR_pcs_detect_en [14:14] */
#define QSFI_BASER_CONTROL_1_RX_BASER_PCS_DETECT_EN_MASK           0x4000
#define QSFI_BASER_CONTROL_1_RX_BASER_PCS_DETECT_EN_ALIGN          0
#define QSFI_BASER_CONTROL_1_RX_BASER_PCS_DETECT_EN_BITS           1
#define QSFI_BASER_CONTROL_1_RX_BASER_PCS_DETECT_EN_SHIFT          14

/* QSFI_BASER :: control_1 :: reserved0 [13:10] */
#define QSFI_BASER_CONTROL_1_RESERVED0_MASK                        0x3c00
#define QSFI_BASER_CONTROL_1_RESERVED0_ALIGN                       0
#define QSFI_BASER_CONTROL_1_RESERVED0_BITS                        4
#define QSFI_BASER_CONTROL_1_RESERVED0_SHIFT                       10

/* QSFI_BASER :: control_1 :: force_en_64bit_output_override [09:09] */
#define QSFI_BASER_CONTROL_1_FORCE_EN_64BIT_OUTPUT_OVERRIDE_MASK   0x0200
#define QSFI_BASER_CONTROL_1_FORCE_EN_64BIT_OUTPUT_OVERRIDE_ALIGN  0
#define QSFI_BASER_CONTROL_1_FORCE_EN_64BIT_OUTPUT_OVERRIDE_BITS   1
#define QSFI_BASER_CONTROL_1_FORCE_EN_64BIT_OUTPUT_OVERRIDE_SHIFT  9

/* QSFI_BASER :: control_1 :: force_en_64bit_output_val [08:08] */
#define QSFI_BASER_CONTROL_1_FORCE_EN_64BIT_OUTPUT_VAL_MASK        0x0100
#define QSFI_BASER_CONTROL_1_FORCE_EN_64BIT_OUTPUT_VAL_ALIGN       0
#define QSFI_BASER_CONTROL_1_FORCE_EN_64BIT_OUTPUT_VAL_BITS        1
#define QSFI_BASER_CONTROL_1_FORCE_EN_64BIT_OUTPUT_VAL_SHIFT       8

/* QSFI_BASER :: control_1 :: force_rxck_int66_en_override [07:07] */
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT66_EN_OVERRIDE_MASK     0x0080
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT66_EN_OVERRIDE_ALIGN    0
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT66_EN_OVERRIDE_BITS     1
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT66_EN_OVERRIDE_SHIFT    7

/* QSFI_BASER :: control_1 :: force_rxck_int66_en_val [06:06] */
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT66_EN_VAL_MASK          0x0040
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT66_EN_VAL_ALIGN         0
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT66_EN_VAL_BITS          1
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT66_EN_VAL_SHIFT         6

/* QSFI_BASER :: control_1 :: force_rxck_int64_en_override [05:05] */
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT64_EN_OVERRIDE_MASK     0x0020
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT64_EN_OVERRIDE_ALIGN    0
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT64_EN_OVERRIDE_BITS     1
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT64_EN_OVERRIDE_SHIFT    5

/* QSFI_BASER :: control_1 :: force_rxck_int64_en_val [04:04] */
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT64_EN_VAL_MASK          0x0010
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT64_EN_VAL_ALIGN         0
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT64_EN_VAL_BITS          1
#define QSFI_BASER_CONTROL_1_FORCE_RXCK_INT64_EN_VAL_SHIFT         4

/* QSFI_BASER :: control_1 :: force_rstb_rxck_int64_override [03:03] */
#define QSFI_BASER_CONTROL_1_FORCE_RSTB_RXCK_INT64_OVERRIDE_MASK   0x0008
#define QSFI_BASER_CONTROL_1_FORCE_RSTB_RXCK_INT64_OVERRIDE_ALIGN  0
#define QSFI_BASER_CONTROL_1_FORCE_RSTB_RXCK_INT64_OVERRIDE_BITS   1
#define QSFI_BASER_CONTROL_1_FORCE_RSTB_RXCK_INT64_OVERRIDE_SHIFT  3

/* QSFI_BASER :: control_1 :: force_rstb_rxck_int64_val [02:02] */
#define QSFI_BASER_CONTROL_1_FORCE_RSTB_RXCK_INT64_VAL_MASK        0x0004
#define QSFI_BASER_CONTROL_1_FORCE_RSTB_RXCK_INT64_VAL_ALIGN       0
#define QSFI_BASER_CONTROL_1_FORCE_RSTB_RXCK_INT64_VAL_BITS        1
#define QSFI_BASER_CONTROL_1_FORCE_RSTB_RXCK_INT64_VAL_SHIFT       2

/* QSFI_BASER :: control_1 :: force_all_gbox_clks_override [01:01] */
#define QSFI_BASER_CONTROL_1_FORCE_ALL_GBOX_CLKS_OVERRIDE_MASK     0x0002
#define QSFI_BASER_CONTROL_1_FORCE_ALL_GBOX_CLKS_OVERRIDE_ALIGN    0
#define QSFI_BASER_CONTROL_1_FORCE_ALL_GBOX_CLKS_OVERRIDE_BITS     1
#define QSFI_BASER_CONTROL_1_FORCE_ALL_GBOX_CLKS_OVERRIDE_SHIFT    1

/* QSFI_BASER :: control_1 :: force_all_gbox_clks_val [00:00] */
#define QSFI_BASER_CONTROL_1_FORCE_ALL_GBOX_CLKS_VAL_MASK          0x0001
#define QSFI_BASER_CONTROL_1_FORCE_ALL_GBOX_CLKS_VAL_ALIGN         0
#define QSFI_BASER_CONTROL_1_FORCE_ALL_GBOX_CLKS_VAL_BITS          1
#define QSFI_BASER_CONTROL_1_FORCE_ALL_GBOX_CLKS_VAL_SHIFT         0


/****************************************************************************
 * QSFI_BASER :: control_2
 ***************************************************************************/
/* QSFI_BASER :: control_2 :: reserved0 [15:12] */
#define QSFI_BASER_CONTROL_2_RESERVED0_MASK                        0xf000
#define QSFI_BASER_CONTROL_2_RESERVED0_ALIGN                       0
#define QSFI_BASER_CONTROL_2_RESERVED0_BITS                        4
#define QSFI_BASER_CONTROL_2_RESERVED0_SHIFT                       12

/* QSFI_BASER :: control_2 :: invalid_sh_cnt_cl82_ext [11:00] */
#define QSFI_BASER_CONTROL_2_INVALID_SH_CNT_CL82_EXT_MASK          0x0fff
#define QSFI_BASER_CONTROL_2_INVALID_SH_CNT_CL82_EXT_ALIGN         0
#define QSFI_BASER_CONTROL_2_INVALID_SH_CNT_CL82_EXT_BITS          12
#define QSFI_BASER_CONTROL_2_INVALID_SH_CNT_CL82_EXT_SHIFT         0


/****************************************************************************
 * QSFI_BASER :: control_3
 ***************************************************************************/
/* QSFI_BASER :: control_3 :: valid_sh_cnt [15:08] */
#define QSFI_BASER_CONTROL_3_VALID_SH_CNT_MASK                     0xff00
#define QSFI_BASER_CONTROL_3_VALID_SH_CNT_ALIGN                    0
#define QSFI_BASER_CONTROL_3_VALID_SH_CNT_BITS                     8
#define QSFI_BASER_CONTROL_3_VALID_SH_CNT_SHIFT                    8

/* QSFI_BASER :: control_3 :: invalid_sh_cnt [07:00] */
#define QSFI_BASER_CONTROL_3_INVALID_SH_CNT_MASK                   0x00ff
#define QSFI_BASER_CONTROL_3_INVALID_SH_CNT_ALIGN                  0
#define QSFI_BASER_CONTROL_3_INVALID_SH_CNT_BITS                   8
#define QSFI_BASER_CONTROL_3_INVALID_SH_CNT_SHIFT                  0


/****************************************************************************
 * QSFI_BASER :: control_4
 ***************************************************************************/
/* QSFI_BASER :: control_4 :: timer125us [15:00] */
#define QSFI_BASER_CONTROL_4_TIMER125US_MASK                       0xffff
#define QSFI_BASER_CONTROL_4_TIMER125US_ALIGN                      0
#define QSFI_BASER_CONTROL_4_TIMER125US_BITS                       16
#define QSFI_BASER_CONTROL_4_TIMER125US_SHIFT                      0


/****************************************************************************
 * QSFI_BASER :: control_5
 ***************************************************************************/
/* QSFI_BASER :: control_5 :: reserved0 [15:11] */
#define QSFI_BASER_CONTROL_5_RESERVED0_MASK                        0xf800
#define QSFI_BASER_CONTROL_5_RESERVED0_ALIGN                       0
#define QSFI_BASER_CONTROL_5_RESERVED0_BITS                        5
#define QSFI_BASER_CONTROL_5_RESERVED0_SHIFT                       11

/* QSFI_BASER :: control_5 :: force_BER_mon_on_en_override [10:10] */
#define QSFI_BASER_CONTROL_5_FORCE_BER_MON_ON_EN_OVERRIDE_MASK     0x0400
#define QSFI_BASER_CONTROL_5_FORCE_BER_MON_ON_EN_OVERRIDE_ALIGN    0
#define QSFI_BASER_CONTROL_5_FORCE_BER_MON_ON_EN_OVERRIDE_BITS     1
#define QSFI_BASER_CONTROL_5_FORCE_BER_MON_ON_EN_OVERRIDE_SHIFT    10

/* QSFI_BASER :: control_5 :: reserved1 [09:07] */
#define QSFI_BASER_CONTROL_5_RESERVED1_MASK                        0x0380
#define QSFI_BASER_CONTROL_5_RESERVED1_ALIGN                       0
#define QSFI_BASER_CONTROL_5_RESERVED1_BITS                        3
#define QSFI_BASER_CONTROL_5_RESERVED1_SHIFT                       7

/* QSFI_BASER :: control_5 :: dis_cl49R2_bermon [06:06] */
#define QSFI_BASER_CONTROL_5_DIS_CL49R2_BERMON_MASK                0x0040
#define QSFI_BASER_CONTROL_5_DIS_CL49R2_BERMON_ALIGN               0
#define QSFI_BASER_CONTROL_5_DIS_CL49R2_BERMON_BITS                1
#define QSFI_BASER_CONTROL_5_DIS_CL49R2_BERMON_SHIFT               6

/* QSFI_BASER :: control_5 :: bercnt [05:00] */
#define QSFI_BASER_CONTROL_5_BERCNT_MASK                           0x003f
#define QSFI_BASER_CONTROL_5_BERCNT_ALIGN                          0
#define QSFI_BASER_CONTROL_5_BERCNT_BITS                           6
#define QSFI_BASER_CONTROL_5_BERCNT_SHIFT                          0


/****************************************************************************
 * QSFI_BASER :: status_0
 ***************************************************************************/
/* QSFI_BASER :: status_0 :: block_lock [15:15] */
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_MASK                        0x8000
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_ALIGN                       0
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_BITS                        1
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_SHIFT                       15

/* QSFI_BASER :: status_0 :: block_lock_asserted_lh [14:14] */
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_ASSERTED_LH_MASK            0x4000
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_ASSERTED_LH_ALIGN           0
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_ASSERTED_LH_BITS            1
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_ASSERTED_LH_SHIFT           14

/* QSFI_BASER :: status_0 :: block_lock_deasserted_lh [13:13] */
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_DEASSERTED_LH_MASK          0x2000
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_DEASSERTED_LH_ALIGN         0
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_DEASSERTED_LH_BITS          1
#define QSFI_BASER_STATUS_0_BLOCK_LOCK_DEASSERTED_LH_SHIFT         13

/* QSFI_BASER :: status_0 :: llsm_state [12:04] */
#define QSFI_BASER_STATUS_0_LLSM_STATE_MASK                        0x1ff0
#define QSFI_BASER_STATUS_0_LLSM_STATE_ALIGN                       0
#define QSFI_BASER_STATUS_0_LLSM_STATE_BITS                        9
#define QSFI_BASER_STATUS_0_LLSM_STATE_SHIFT                       4

/* QSFI_BASER :: status_0 :: lsm_state [03:00] */
#define QSFI_BASER_STATUS_0_LSM_STATE_MASK                         0x000f
#define QSFI_BASER_STATUS_0_LSM_STATE_ALIGN                        0
#define QSFI_BASER_STATUS_0_LSM_STATE_BITS                         4
#define QSFI_BASER_STATUS_0_LSM_STATE_SHIFT                        0


/****************************************************************************
 * QSFI_BASER :: status_1
 ***************************************************************************/
/* QSFI_BASER :: status_1 :: block_lock [15:15] */
#define QSFI_BASER_STATUS_1_BLOCK_LOCK_MASK                        0x8000
#define QSFI_BASER_STATUS_1_BLOCK_LOCK_ALIGN                       0
#define QSFI_BASER_STATUS_1_BLOCK_LOCK_BITS                        1
#define QSFI_BASER_STATUS_1_BLOCK_LOCK_SHIFT                       15

/* QSFI_BASER :: status_1 :: latch_hi_BER [14:14] */
#define QSFI_BASER_STATUS_1_LATCH_HI_BER_MASK                      0x4000
#define QSFI_BASER_STATUS_1_LATCH_HI_BER_ALIGN                     0
#define QSFI_BASER_STATUS_1_LATCH_HI_BER_BITS                      1
#define QSFI_BASER_STATUS_1_LATCH_HI_BER_SHIFT                     14

/* QSFI_BASER :: status_1 :: BER [13:08] */
#define QSFI_BASER_STATUS_1_BER_MASK                               0x3f00
#define QSFI_BASER_STATUS_1_BER_ALIGN                              0
#define QSFI_BASER_STATUS_1_BER_BITS                               6
#define QSFI_BASER_STATUS_1_BER_SHIFT                              8

/* QSFI_BASER :: status_1 :: reserved0 [07:00] */
#define QSFI_BASER_STATUS_1_RESERVED0_MASK                         0x00ff
#define QSFI_BASER_STATUS_1_RESERVED0_ALIGN                        0
#define QSFI_BASER_STATUS_1_RESERVED0_BITS                         8
#define QSFI_BASER_STATUS_1_RESERVED0_SHIFT                        0


/****************************************************************************
 * QSFI_BASER :: status_2
 ***************************************************************************/
/* QSFI_BASER :: status_2 :: reserved0 [15:15] */
#define QSFI_BASER_STATUS_2_RESERVED0_MASK                         0x8000
#define QSFI_BASER_STATUS_2_RESERVED0_ALIGN                        0
#define QSFI_BASER_STATUS_2_RESERVED0_BITS                         1
#define QSFI_BASER_STATUS_2_RESERVED0_SHIFT                        15

/* QSFI_BASER :: status_2 :: block_lock_status [14:14] */
#define QSFI_BASER_STATUS_2_BLOCK_LOCK_STATUS_MASK                 0x4000
#define QSFI_BASER_STATUS_2_BLOCK_LOCK_STATUS_ALIGN                0
#define QSFI_BASER_STATUS_2_BLOCK_LOCK_STATUS_BITS                 1
#define QSFI_BASER_STATUS_2_BLOCK_LOCK_STATUS_SHIFT                14

/* QSFI_BASER :: status_2 :: hi_ber [13:13] */
#define QSFI_BASER_STATUS_2_HI_BER_MASK                            0x2000
#define QSFI_BASER_STATUS_2_HI_BER_ALIGN                           0
#define QSFI_BASER_STATUS_2_HI_BER_BITS                            1
#define QSFI_BASER_STATUS_2_HI_BER_SHIFT                           13

/* QSFI_BASER :: status_2 :: t125us_done [12:12] */
#define QSFI_BASER_STATUS_2_T125US_DONE_MASK                       0x1000
#define QSFI_BASER_STATUS_2_T125US_DONE_ALIGN                      0
#define QSFI_BASER_STATUS_2_T125US_DONE_BITS                       1
#define QSFI_BASER_STATUS_2_T125US_DONE_SHIFT                      12

/* QSFI_BASER :: status_2 :: lbermon_state [11:06] */
#define QSFI_BASER_STATUS_2_LBERMON_STATE_MASK                     0x0fc0
#define QSFI_BASER_STATUS_2_LBERMON_STATE_ALIGN                    0
#define QSFI_BASER_STATUS_2_LBERMON_STATE_BITS                     6
#define QSFI_BASER_STATUS_2_LBERMON_STATE_SHIFT                    6

/* QSFI_BASER :: status_2 :: bermon_state [05:00] */
#define QSFI_BASER_STATUS_2_BERMON_STATE_MASK                      0x003f
#define QSFI_BASER_STATUS_2_BERMON_STATE_ALIGN                     0
#define QSFI_BASER_STATUS_2_BERMON_STATE_BITS                      6
#define QSFI_BASER_STATUS_2_BERMON_STATE_SHIFT                     0


/****************************************************************************
 * merlin_gallardo_dsc_blk_DSC_A
 ***************************************************************************/
/****************************************************************************
 * DSC_A :: cdr_control_0
 ***************************************************************************/
/* DSC_A :: cdr_control_0 :: reserved0 [15:12] */
#define DSC_A_CDR_CONTROL_0_RESERVED0_MASK                         0xf000
#define DSC_A_CDR_CONTROL_0_RESERVED0_ALIGN                        0
#define DSC_A_CDR_CONTROL_0_RESERVED0_BITS                         4
#define DSC_A_CDR_CONTROL_0_RESERVED0_SHIFT                        12

/* DSC_A :: cdr_control_0 :: cdr_lm_thr_sel [11:08] */
#define DSC_A_CDR_CONTROL_0_CDR_LM_THR_SEL_MASK                    0x0f00
#define DSC_A_CDR_CONTROL_0_CDR_LM_THR_SEL_ALIGN                   0
#define DSC_A_CDR_CONTROL_0_CDR_LM_THR_SEL_BITS                    4
#define DSC_A_CDR_CONTROL_0_CDR_LM_THR_SEL_SHIFT                   8

/* DSC_A :: cdr_control_0 :: cdr_freq_override_en [07:07] */
#define DSC_A_CDR_CONTROL_0_CDR_FREQ_OVERRIDE_EN_MASK              0x0080
#define DSC_A_CDR_CONTROL_0_CDR_FREQ_OVERRIDE_EN_ALIGN             0
#define DSC_A_CDR_CONTROL_0_CDR_FREQ_OVERRIDE_EN_BITS              1
#define DSC_A_CDR_CONTROL_0_CDR_FREQ_OVERRIDE_EN_SHIFT             7

/* DSC_A :: cdr_control_0 :: cdr_integ_sat_sel [06:06] */
#define DSC_A_CDR_CONTROL_0_CDR_INTEG_SAT_SEL_MASK                 0x0040
#define DSC_A_CDR_CONTROL_0_CDR_INTEG_SAT_SEL_ALIGN                0
#define DSC_A_CDR_CONTROL_0_CDR_INTEG_SAT_SEL_BITS                 1
#define DSC_A_CDR_CONTROL_0_CDR_INTEG_SAT_SEL_SHIFT                6

/* DSC_A :: cdr_control_0 :: cdr_phase_err_frz [05:05] */
#define DSC_A_CDR_CONTROL_0_CDR_PHASE_ERR_FRZ_MASK                 0x0020
#define DSC_A_CDR_CONTROL_0_CDR_PHASE_ERR_FRZ_ALIGN                0
#define DSC_A_CDR_CONTROL_0_CDR_PHASE_ERR_FRZ_BITS                 1
#define DSC_A_CDR_CONTROL_0_CDR_PHASE_ERR_FRZ_SHIFT                5

/* DSC_A :: cdr_control_0 :: cdr_integ_reg_clr [04:04] */
#define DSC_A_CDR_CONTROL_0_CDR_INTEG_REG_CLR_MASK                 0x0010
#define DSC_A_CDR_CONTROL_0_CDR_INTEG_REG_CLR_ALIGN                0
#define DSC_A_CDR_CONTROL_0_CDR_INTEG_REG_CLR_BITS                 1
#define DSC_A_CDR_CONTROL_0_CDR_INTEG_REG_CLR_SHIFT                4

/* DSC_A :: cdr_control_0 :: reserved1 [03:03] */
#define DSC_A_CDR_CONTROL_0_RESERVED1_MASK                         0x0008
#define DSC_A_CDR_CONTROL_0_RESERVED1_ALIGN                        0
#define DSC_A_CDR_CONTROL_0_RESERVED1_BITS                         1
#define DSC_A_CDR_CONTROL_0_RESERVED1_SHIFT                        3

/* DSC_A :: cdr_control_0 :: cdr_freq_en [02:02] */
#define DSC_A_CDR_CONTROL_0_CDR_FREQ_EN_MASK                       0x0004
#define DSC_A_CDR_CONTROL_0_CDR_FREQ_EN_ALIGN                      0
#define DSC_A_CDR_CONTROL_0_CDR_FREQ_EN_BITS                       1
#define DSC_A_CDR_CONTROL_0_CDR_FREQ_EN_SHIFT                      2

/* DSC_A :: cdr_control_0 :: br_pd_en [01:01] */
#define DSC_A_CDR_CONTROL_0_BR_PD_EN_MASK                          0x0002
#define DSC_A_CDR_CONTROL_0_BR_PD_EN_ALIGN                         0
#define DSC_A_CDR_CONTROL_0_BR_PD_EN_BITS                          1
#define DSC_A_CDR_CONTROL_0_BR_PD_EN_SHIFT                         1

/* DSC_A :: cdr_control_0 :: cdr_phase_sat_ctrl [00:00] */
#define DSC_A_CDR_CONTROL_0_CDR_PHASE_SAT_CTRL_MASK                0x0001
#define DSC_A_CDR_CONTROL_0_CDR_PHASE_SAT_CTRL_ALIGN               0
#define DSC_A_CDR_CONTROL_0_CDR_PHASE_SAT_CTRL_BITS                1
#define DSC_A_CDR_CONTROL_0_CDR_PHASE_SAT_CTRL_SHIFT               0


/****************************************************************************
 * DSC_A :: cdr_control_1
 ***************************************************************************/
/* DSC_A :: cdr_control_1 :: cdr_freq_override_val [15:00] */
#define DSC_A_CDR_CONTROL_1_CDR_FREQ_OVERRIDE_VAL_MASK             0xffff
#define DSC_A_CDR_CONTROL_1_CDR_FREQ_OVERRIDE_VAL_ALIGN            0
#define DSC_A_CDR_CONTROL_1_CDR_FREQ_OVERRIDE_VAL_BITS             16
#define DSC_A_CDR_CONTROL_1_CDR_FREQ_OVERRIDE_VAL_SHIFT            0


/****************************************************************************
 * DSC_A :: cdr_control_2
 ***************************************************************************/
/* DSC_A :: cdr_control_2 :: reserved0 [15:10] */
#define DSC_A_CDR_CONTROL_2_RESERVED0_MASK                         0xfc00
#define DSC_A_CDR_CONTROL_2_RESERVED0_ALIGN                        0
#define DSC_A_CDR_CONTROL_2_RESERVED0_BITS                         6
#define DSC_A_CDR_CONTROL_2_RESERVED0_SHIFT                        10

/* DSC_A :: cdr_control_2 :: osx2p_pherr_gain [09:08] */
#define DSC_A_CDR_CONTROL_2_OSX2P_PHERR_GAIN_MASK                  0x0300
#define DSC_A_CDR_CONTROL_2_OSX2P_PHERR_GAIN_ALIGN                 0
#define DSC_A_CDR_CONTROL_2_OSX2P_PHERR_GAIN_BITS                  2
#define DSC_A_CDR_CONTROL_2_OSX2P_PHERR_GAIN_SHIFT                 8

/* DSC_A :: cdr_control_2 :: pattern_sel [07:04] */
#define DSC_A_CDR_CONTROL_2_PATTERN_SEL_MASK                       0x00f0
#define DSC_A_CDR_CONTROL_2_PATTERN_SEL_ALIGN                      0
#define DSC_A_CDR_CONTROL_2_PATTERN_SEL_BITS                       4
#define DSC_A_CDR_CONTROL_2_PATTERN_SEL_SHIFT                      4

/* DSC_A :: cdr_control_2 :: reserved1 [03:02] */
#define DSC_A_CDR_CONTROL_2_RESERVED1_MASK                         0x000c
#define DSC_A_CDR_CONTROL_2_RESERVED1_ALIGN                        0
#define DSC_A_CDR_CONTROL_2_RESERVED1_BITS                         2
#define DSC_A_CDR_CONTROL_2_RESERVED1_SHIFT                        2

/* DSC_A :: cdr_control_2 :: cdr_peak_polarity [01:01] */
#define DSC_A_CDR_CONTROL_2_CDR_PEAK_POLARITY_MASK                 0x0002
#define DSC_A_CDR_CONTROL_2_CDR_PEAK_POLARITY_ALIGN                0
#define DSC_A_CDR_CONTROL_2_CDR_PEAK_POLARITY_BITS                 1
#define DSC_A_CDR_CONTROL_2_CDR_PEAK_POLARITY_SHIFT                1

/* DSC_A :: cdr_control_2 :: cdr_zero_polarity [00:00] */
#define DSC_A_CDR_CONTROL_2_CDR_ZERO_POLARITY_MASK                 0x0001
#define DSC_A_CDR_CONTROL_2_CDR_ZERO_POLARITY_ALIGN                0
#define DSC_A_CDR_CONTROL_2_CDR_ZERO_POLARITY_BITS                 1
#define DSC_A_CDR_CONTROL_2_CDR_ZERO_POLARITY_SHIFT                0


/****************************************************************************
 * DSC_A :: rx_pi_control
 ***************************************************************************/
/* DSC_A :: rx_pi_control :: pi_manual_reset [15:15] */
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_RESET_MASK                   0x8000
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_RESET_ALIGN                  0
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_RESET_BITS                   1
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_RESET_SHIFT                  15

/* DSC_A :: rx_pi_control :: reserved0 [14:13] */
#define DSC_A_RX_PI_CONTROL_RESERVED0_MASK                         0x6000
#define DSC_A_RX_PI_CONTROL_RESERVED0_ALIGN                        0
#define DSC_A_RX_PI_CONTROL_RESERVED0_BITS                         2
#define DSC_A_RX_PI_CONTROL_RESERVED0_SHIFT                        13

/* DSC_A :: rx_pi_control :: pi_manual_strobe [12:12] */
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_STROBE_MASK                  0x1000
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_STROBE_ALIGN                 0
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_STROBE_BITS                  1
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_STROBE_SHIFT                 12

/* DSC_A :: rx_pi_control :: pi_manual_mode [11:11] */
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_MODE_MASK                    0x0800
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_MODE_ALIGN                   0
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_MODE_BITS                    1
#define DSC_A_RX_PI_CONTROL_PI_MANUAL_MODE_SHIFT                   11

/* DSC_A :: rx_pi_control :: pi_phase_step_dir [10:10] */
#define DSC_A_RX_PI_CONTROL_PI_PHASE_STEP_DIR_MASK                 0x0400
#define DSC_A_RX_PI_CONTROL_PI_PHASE_STEP_DIR_ALIGN                0
#define DSC_A_RX_PI_CONTROL_PI_PHASE_STEP_DIR_BITS                 1
#define DSC_A_RX_PI_CONTROL_PI_PHASE_STEP_DIR_SHIFT                10

/* DSC_A :: rx_pi_control :: pi_slicers_en [09:07] */
#define DSC_A_RX_PI_CONTROL_PI_SLICERS_EN_MASK                     0x0380
#define DSC_A_RX_PI_CONTROL_PI_SLICERS_EN_ALIGN                    0
#define DSC_A_RX_PI_CONTROL_PI_SLICERS_EN_BITS                     3
#define DSC_A_RX_PI_CONTROL_PI_SLICERS_EN_SHIFT                    7

/* DSC_A :: rx_pi_control :: pi_phase_step_cnt [06:00] */
#define DSC_A_RX_PI_CONTROL_PI_PHASE_STEP_CNT_MASK                 0x007f
#define DSC_A_RX_PI_CONTROL_PI_PHASE_STEP_CNT_ALIGN                0
#define DSC_A_RX_PI_CONTROL_PI_PHASE_STEP_CNT_BITS                 7
#define DSC_A_RX_PI_CONTROL_PI_PHASE_STEP_CNT_SHIFT                0


/****************************************************************************
 * DSC_A :: cdr_status_integ_reg
 ***************************************************************************/
/* DSC_A :: cdr_status_integ_reg :: cdr_integ_reg [15:00] */
#define DSC_A_CDR_STATUS_INTEG_REG_CDR_INTEG_REG_MASK              0xffff
#define DSC_A_CDR_STATUS_INTEG_REG_CDR_INTEG_REG_ALIGN             0
#define DSC_A_CDR_STATUS_INTEG_REG_CDR_INTEG_REG_BITS              16
#define DSC_A_CDR_STATUS_INTEG_REG_CDR_INTEG_REG_SHIFT             0


/****************************************************************************
 * DSC_A :: cdr_status_phase_error
 ***************************************************************************/
/* DSC_A :: cdr_status_phase_error :: reserved0 [15:09] */
#define DSC_A_CDR_STATUS_PHASE_ERROR_RESERVED0_MASK                0xfe00
#define DSC_A_CDR_STATUS_PHASE_ERROR_RESERVED0_ALIGN               0
#define DSC_A_CDR_STATUS_PHASE_ERROR_RESERVED0_BITS                7
#define DSC_A_CDR_STATUS_PHASE_ERROR_RESERVED0_SHIFT               9

/* DSC_A :: cdr_status_phase_error :: cdr_lm_outoflock [08:08] */
#define DSC_A_CDR_STATUS_PHASE_ERROR_CDR_LM_OUTOFLOCK_MASK         0x0100
#define DSC_A_CDR_STATUS_PHASE_ERROR_CDR_LM_OUTOFLOCK_ALIGN        0
#define DSC_A_CDR_STATUS_PHASE_ERROR_CDR_LM_OUTOFLOCK_BITS         1
#define DSC_A_CDR_STATUS_PHASE_ERROR_CDR_LM_OUTOFLOCK_SHIFT        8

/* DSC_A :: cdr_status_phase_error :: reserved1 [07:05] */
#define DSC_A_CDR_STATUS_PHASE_ERROR_RESERVED1_MASK                0x00e0
#define DSC_A_CDR_STATUS_PHASE_ERROR_RESERVED1_ALIGN               0
#define DSC_A_CDR_STATUS_PHASE_ERROR_RESERVED1_BITS                3
#define DSC_A_CDR_STATUS_PHASE_ERROR_RESERVED1_SHIFT               5

/* DSC_A :: cdr_status_phase_error :: cdr_phase_err [04:00] */
#define DSC_A_CDR_STATUS_PHASE_ERROR_CDR_PHASE_ERR_MASK            0x001f
#define DSC_A_CDR_STATUS_PHASE_ERROR_CDR_PHASE_ERR_ALIGN           0
#define DSC_A_CDR_STATUS_PHASE_ERROR_CDR_PHASE_ERR_BITS            5
#define DSC_A_CDR_STATUS_PHASE_ERROR_CDR_PHASE_ERR_SHIFT           0


/****************************************************************************
 * DSC_A :: rx_pi_cnt_bin_d
 ***************************************************************************/
/* DSC_A :: rx_pi_cnt_bin_d :: reserved0 [15:15] */
#define DSC_A_RX_PI_CNT_BIN_D_RESERVED0_MASK                       0x8000
#define DSC_A_RX_PI_CNT_BIN_D_RESERVED0_ALIGN                      0
#define DSC_A_RX_PI_CNT_BIN_D_RESERVED0_BITS                       1
#define DSC_A_RX_PI_CNT_BIN_D_RESERVED0_SHIFT                      15

/* DSC_A :: rx_pi_cnt_bin_d :: cnt_bin_p1_dreg [14:08] */
#define DSC_A_RX_PI_CNT_BIN_D_CNT_BIN_P1_DREG_MASK                 0x7f00
#define DSC_A_RX_PI_CNT_BIN_D_CNT_BIN_P1_DREG_ALIGN                0
#define DSC_A_RX_PI_CNT_BIN_D_CNT_BIN_P1_DREG_BITS                 7
#define DSC_A_RX_PI_CNT_BIN_D_CNT_BIN_P1_DREG_SHIFT                8

/* DSC_A :: rx_pi_cnt_bin_d :: reserved1 [07:07] */
#define DSC_A_RX_PI_CNT_BIN_D_RESERVED1_MASK                       0x0080
#define DSC_A_RX_PI_CNT_BIN_D_RESERVED1_ALIGN                      0
#define DSC_A_RX_PI_CNT_BIN_D_RESERVED1_BITS                       1
#define DSC_A_RX_PI_CNT_BIN_D_RESERVED1_SHIFT                      7

/* DSC_A :: rx_pi_cnt_bin_d :: cnt_bin_d_dreg [06:00] */
#define DSC_A_RX_PI_CNT_BIN_D_CNT_BIN_D_DREG_MASK                  0x007f
#define DSC_A_RX_PI_CNT_BIN_D_CNT_BIN_D_DREG_ALIGN                 0
#define DSC_A_RX_PI_CNT_BIN_D_CNT_BIN_D_DREG_BITS                  7
#define DSC_A_RX_PI_CNT_BIN_D_CNT_BIN_D_DREG_SHIFT                 0


/****************************************************************************
 * DSC_A :: rx_pi_cnt_bin_p
 ***************************************************************************/
/* DSC_A :: rx_pi_cnt_bin_p :: reserved0 [15:15] */
#define DSC_A_RX_PI_CNT_BIN_P_RESERVED0_MASK                       0x8000
#define DSC_A_RX_PI_CNT_BIN_P_RESERVED0_ALIGN                      0
#define DSC_A_RX_PI_CNT_BIN_P_RESERVED0_BITS                       1
#define DSC_A_RX_PI_CNT_BIN_P_RESERVED0_SHIFT                      15

/* DSC_A :: rx_pi_cnt_bin_p :: cnt_bin_m1_preg [14:08] */
#define DSC_A_RX_PI_CNT_BIN_P_CNT_BIN_M1_PREG_MASK                 0x7f00
#define DSC_A_RX_PI_CNT_BIN_P_CNT_BIN_M1_PREG_ALIGN                0
#define DSC_A_RX_PI_CNT_BIN_P_CNT_BIN_M1_PREG_BITS                 7
#define DSC_A_RX_PI_CNT_BIN_P_CNT_BIN_M1_PREG_SHIFT                8

/* DSC_A :: rx_pi_cnt_bin_p :: reserved1 [07:07] */
#define DSC_A_RX_PI_CNT_BIN_P_RESERVED1_MASK                       0x0080
#define DSC_A_RX_PI_CNT_BIN_P_RESERVED1_ALIGN                      0
#define DSC_A_RX_PI_CNT_BIN_P_RESERVED1_BITS                       1
#define DSC_A_RX_PI_CNT_BIN_P_RESERVED1_SHIFT                      7

/* DSC_A :: rx_pi_cnt_bin_p :: cnt_bin_p1_preg [06:00] */
#define DSC_A_RX_PI_CNT_BIN_P_CNT_BIN_P1_PREG_MASK                 0x007f
#define DSC_A_RX_PI_CNT_BIN_P_CNT_BIN_P1_PREG_ALIGN                0
#define DSC_A_RX_PI_CNT_BIN_P_CNT_BIN_P1_PREG_BITS                 7
#define DSC_A_RX_PI_CNT_BIN_P_CNT_BIN_P1_PREG_SHIFT                0


/****************************************************************************
 * DSC_A :: rx_pi_cnt_bin_m
 ***************************************************************************/
/* DSC_A :: rx_pi_cnt_bin_m :: reserved0 [15:15] */
#define DSC_A_RX_PI_CNT_BIN_M_RESERVED0_MASK                       0x8000
#define DSC_A_RX_PI_CNT_BIN_M_RESERVED0_ALIGN                      0
#define DSC_A_RX_PI_CNT_BIN_M_RESERVED0_BITS                       1
#define DSC_A_RX_PI_CNT_BIN_M_RESERVED0_SHIFT                      15

/* DSC_A :: rx_pi_cnt_bin_m :: cnt_bin_d_mreg [14:08] */
#define DSC_A_RX_PI_CNT_BIN_M_CNT_BIN_D_MREG_MASK                  0x7f00
#define DSC_A_RX_PI_CNT_BIN_M_CNT_BIN_D_MREG_ALIGN                 0
#define DSC_A_RX_PI_CNT_BIN_M_CNT_BIN_D_MREG_BITS                  7
#define DSC_A_RX_PI_CNT_BIN_M_CNT_BIN_D_MREG_SHIFT                 8

/* DSC_A :: rx_pi_cnt_bin_m :: reserved1 [07:07] */
#define DSC_A_RX_PI_CNT_BIN_M_RESERVED1_MASK                       0x0080
#define DSC_A_RX_PI_CNT_BIN_M_RESERVED1_ALIGN                      0
#define DSC_A_RX_PI_CNT_BIN_M_RESERVED1_BITS                       1
#define DSC_A_RX_PI_CNT_BIN_M_RESERVED1_SHIFT                      7

/* DSC_A :: rx_pi_cnt_bin_m :: cnt_bin_m1_mreg [06:00] */
#define DSC_A_RX_PI_CNT_BIN_M_CNT_BIN_M1_MREG_MASK                 0x007f
#define DSC_A_RX_PI_CNT_BIN_M_CNT_BIN_M1_MREG_ALIGN                0
#define DSC_A_RX_PI_CNT_BIN_M_CNT_BIN_M1_MREG_BITS                 7
#define DSC_A_RX_PI_CNT_BIN_M_CNT_BIN_M1_MREG_SHIFT                0


/****************************************************************************
 * DSC_A :: rx_pi_diff_bin
 ***************************************************************************/
/* DSC_A :: rx_pi_diff_bin :: cnt_d_minus_p1 [15:08] */
#define DSC_A_RX_PI_DIFF_BIN_CNT_D_MINUS_P1_MASK                   0xff00
#define DSC_A_RX_PI_DIFF_BIN_CNT_D_MINUS_P1_ALIGN                  0
#define DSC_A_RX_PI_DIFF_BIN_CNT_D_MINUS_P1_BITS                   8
#define DSC_A_RX_PI_DIFF_BIN_CNT_D_MINUS_P1_SHIFT                  8

/* DSC_A :: rx_pi_diff_bin :: cnt_d_minus_m1 [07:00] */
#define DSC_A_RX_PI_DIFF_BIN_CNT_D_MINUS_M1_MASK                   0x00ff
#define DSC_A_RX_PI_DIFF_BIN_CNT_D_MINUS_M1_ALIGN                  0
#define DSC_A_RX_PI_DIFF_BIN_CNT_D_MINUS_M1_BITS                   8
#define DSC_A_RX_PI_DIFF_BIN_CNT_D_MINUS_M1_SHIFT                  0


/****************************************************************************
 * DSC_A :: trnsum_cntl_5
 ***************************************************************************/
/* DSC_A :: trnsum_cntl_5 :: edge_count_refless_en [15:15] */
#define DSC_A_TRNSUM_CNTL_5_EDGE_COUNT_REFLESS_EN_MASK             0x8000
#define DSC_A_TRNSUM_CNTL_5_EDGE_COUNT_REFLESS_EN_ALIGN            0
#define DSC_A_TRNSUM_CNTL_5_EDGE_COUNT_REFLESS_EN_BITS             1
#define DSC_A_TRNSUM_CNTL_5_EDGE_COUNT_REFLESS_EN_SHIFT            15

/* DSC_A :: trnsum_cntl_5 :: send_lms_to_pcs [14:14] */
#define DSC_A_TRNSUM_CNTL_5_SEND_LMS_TO_PCS_MASK                   0x4000
#define DSC_A_TRNSUM_CNTL_5_SEND_LMS_TO_PCS_ALIGN                  0
#define DSC_A_TRNSUM_CNTL_5_SEND_LMS_TO_PCS_BITS                   1
#define DSC_A_TRNSUM_CNTL_5_SEND_LMS_TO_PCS_SHIFT                  14

/* DSC_A :: trnsum_cntl_5 :: reserved0 [13:00] */
#define DSC_A_TRNSUM_CNTL_5_RESERVED0_MASK                         0x3fff
#define DSC_A_TRNSUM_CNTL_5_RESERVED0_ALIGN                        0
#define DSC_A_TRNSUM_CNTL_5_RESERVED0_BITS                         14
#define DSC_A_TRNSUM_CNTL_5_RESERVED0_SHIFT                        0


/****************************************************************************
 * DSC_A :: dsc_uc_ctrl
 ***************************************************************************/
/* DSC_A :: dsc_uc_ctrl :: uc_dsc_supp_info [15:08] */
#define DSC_A_DSC_UC_CTRL_UC_DSC_SUPP_INFO_MASK                    0xff00
#define DSC_A_DSC_UC_CTRL_UC_DSC_SUPP_INFO_ALIGN                   0
#define DSC_A_DSC_UC_CTRL_UC_DSC_SUPP_INFO_BITS                    8
#define DSC_A_DSC_UC_CTRL_UC_DSC_SUPP_INFO_SHIFT                   8

/* DSC_A :: dsc_uc_ctrl :: uc_dsc_ready_for_cmd [07:07] */
#define DSC_A_DSC_UC_CTRL_UC_DSC_READY_FOR_CMD_MASK                0x0080
#define DSC_A_DSC_UC_CTRL_UC_DSC_READY_FOR_CMD_ALIGN               0
#define DSC_A_DSC_UC_CTRL_UC_DSC_READY_FOR_CMD_BITS                1
#define DSC_A_DSC_UC_CTRL_UC_DSC_READY_FOR_CMD_SHIFT               7

/* DSC_A :: dsc_uc_ctrl :: uc_dsc_error_found [06:06] */
#define DSC_A_DSC_UC_CTRL_UC_DSC_ERROR_FOUND_MASK                  0x0040
#define DSC_A_DSC_UC_CTRL_UC_DSC_ERROR_FOUND_ALIGN                 0
#define DSC_A_DSC_UC_CTRL_UC_DSC_ERROR_FOUND_BITS                  1
#define DSC_A_DSC_UC_CTRL_UC_DSC_ERROR_FOUND_SHIFT                 6

/* DSC_A :: dsc_uc_ctrl :: uc_dsc_gp_uc_req [05:00] */
#define DSC_A_DSC_UC_CTRL_UC_DSC_GP_UC_REQ_MASK                    0x003f
#define DSC_A_DSC_UC_CTRL_UC_DSC_GP_UC_REQ_ALIGN                   0
#define DSC_A_DSC_UC_CTRL_UC_DSC_GP_UC_REQ_BITS                    6
#define DSC_A_DSC_UC_CTRL_UC_DSC_GP_UC_REQ_SHIFT                   0


/****************************************************************************
 * DSC_A :: dsc_scratch
 ***************************************************************************/
/* DSC_A :: dsc_scratch :: uc_dsc_scratch [15:00] */
#define DSC_A_DSC_SCRATCH_UC_DSC_SCRATCH_MASK                      0xffff
#define DSC_A_DSC_SCRATCH_UC_DSC_SCRATCH_ALIGN                     0
#define DSC_A_DSC_SCRATCH_UC_DSC_SCRATCH_BITS                      16
#define DSC_A_DSC_SCRATCH_UC_DSC_SCRATCH_SHIFT                     0


/****************************************************************************
 * merlin_gallardo_dsc_blk_DSC_B
 ***************************************************************************/
/****************************************************************************
 * DSC_B :: dsc_sm_ctrl_0
 ***************************************************************************/
/* DSC_B :: dsc_sm_ctrl_0 :: reserved0 [15:15] */
#define DSC_B_DSC_SM_CTRL_0_RESERVED0_MASK                         0x8000
#define DSC_B_DSC_SM_CTRL_0_RESERVED0_ALIGN                        0
#define DSC_B_DSC_SM_CTRL_0_RESERVED0_BITS                         1
#define DSC_B_DSC_SM_CTRL_0_RESERVED0_SHIFT                        15

/* DSC_B :: dsc_sm_ctrl_0 :: uc_ack_dsc_config [14:14] */
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_CONFIG_MASK                 0x4000
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_CONFIG_ALIGN                0
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_CONFIG_BITS                 1
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_CONFIG_SHIFT                14

/* DSC_B :: dsc_sm_ctrl_0 :: uc_ack_dsc_restart [13:13] */
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_RESTART_MASK                0x2000
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_RESTART_ALIGN               0
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_RESTART_BITS                1
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_RESTART_SHIFT               13

/* DSC_B :: dsc_sm_ctrl_0 :: uc_ack_dsc_reset [12:12] */
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_RESET_MASK                  0x1000
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_RESET_ALIGN                 0
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_RESET_BITS                  1
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_RESET_SHIFT                 12

/* DSC_B :: dsc_sm_ctrl_0 :: uc_ack_dsc_eee_done [11:11] */
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_EEE_DONE_MASK               0x0800
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_EEE_DONE_ALIGN              0
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_EEE_DONE_BITS               1
#define DSC_B_DSC_SM_CTRL_0_UC_ACK_DSC_EEE_DONE_SHIFT              11

/* DSC_B :: dsc_sm_ctrl_0 :: reserved1 [10:09] */
#define DSC_B_DSC_SM_CTRL_0_RESERVED1_MASK                         0x0600
#define DSC_B_DSC_SM_CTRL_0_RESERVED1_ALIGN                        0
#define DSC_B_DSC_SM_CTRL_0_RESERVED1_BITS                         2
#define DSC_B_DSC_SM_CTRL_0_RESERVED1_SHIFT                        9

/* DSC_B :: dsc_sm_ctrl_0 :: eee_measure_en [08:08] */
#define DSC_B_DSC_SM_CTRL_0_EEE_MEASURE_EN_MASK                    0x0100
#define DSC_B_DSC_SM_CTRL_0_EEE_MEASURE_EN_ALIGN                   0
#define DSC_B_DSC_SM_CTRL_0_EEE_MEASURE_EN_BITS                    1
#define DSC_B_DSC_SM_CTRL_0_EEE_MEASURE_EN_SHIFT                   8

/* DSC_B :: dsc_sm_ctrl_0 :: uc_trnsum_en [07:07] */
#define DSC_B_DSC_SM_CTRL_0_UC_TRNSUM_EN_MASK                      0x0080
#define DSC_B_DSC_SM_CTRL_0_UC_TRNSUM_EN_ALIGN                     0
#define DSC_B_DSC_SM_CTRL_0_UC_TRNSUM_EN_BITS                      1
#define DSC_B_DSC_SM_CTRL_0_UC_TRNSUM_EN_SHIFT                     7

/* DSC_B :: dsc_sm_ctrl_0 :: hw_tune_en [06:06] */
#define DSC_B_DSC_SM_CTRL_0_HW_TUNE_EN_MASK                        0x0040
#define DSC_B_DSC_SM_CTRL_0_HW_TUNE_EN_ALIGN                       0
#define DSC_B_DSC_SM_CTRL_0_HW_TUNE_EN_BITS                        1
#define DSC_B_DSC_SM_CTRL_0_HW_TUNE_EN_SHIFT                       6

/* DSC_B :: dsc_sm_ctrl_0 :: uc_tune_en [05:05] */
#define DSC_B_DSC_SM_CTRL_0_UC_TUNE_EN_MASK                        0x0020
#define DSC_B_DSC_SM_CTRL_0_UC_TUNE_EN_ALIGN                       0
#define DSC_B_DSC_SM_CTRL_0_UC_TUNE_EN_BITS                        1
#define DSC_B_DSC_SM_CTRL_0_UC_TUNE_EN_SHIFT                       5

/* DSC_B :: dsc_sm_ctrl_0 :: cl72_timer_en [04:04] */
#define DSC_B_DSC_SM_CTRL_0_CL72_TIMER_EN_MASK                     0x0010
#define DSC_B_DSC_SM_CTRL_0_CL72_TIMER_EN_ALIGN                    0
#define DSC_B_DSC_SM_CTRL_0_CL72_TIMER_EN_BITS                     1
#define DSC_B_DSC_SM_CTRL_0_CL72_TIMER_EN_SHIFT                    4

/* DSC_B :: dsc_sm_ctrl_0 :: ignore_rx_mode [03:03] */
#define DSC_B_DSC_SM_CTRL_0_IGNORE_RX_MODE_MASK                    0x0008
#define DSC_B_DSC_SM_CTRL_0_IGNORE_RX_MODE_ALIGN                   0
#define DSC_B_DSC_SM_CTRL_0_IGNORE_RX_MODE_BITS                    1
#define DSC_B_DSC_SM_CTRL_0_IGNORE_RX_MODE_SHIFT                   3

/* DSC_B :: dsc_sm_ctrl_0 :: eee_quiet_rx_afe_pwrdwn_val [02:02] */
#define DSC_B_DSC_SM_CTRL_0_EEE_QUIET_RX_AFE_PWRDWN_VAL_MASK       0x0004
#define DSC_B_DSC_SM_CTRL_0_EEE_QUIET_RX_AFE_PWRDWN_VAL_ALIGN      0
#define DSC_B_DSC_SM_CTRL_0_EEE_QUIET_RX_AFE_PWRDWN_VAL_BITS       1
#define DSC_B_DSC_SM_CTRL_0_EEE_QUIET_RX_AFE_PWRDWN_VAL_SHIFT      2

/* DSC_B :: dsc_sm_ctrl_0 :: eee_mode_en [01:01] */
#define DSC_B_DSC_SM_CTRL_0_EEE_MODE_EN_MASK                       0x0002
#define DSC_B_DSC_SM_CTRL_0_EEE_MODE_EN_ALIGN                      0
#define DSC_B_DSC_SM_CTRL_0_EEE_MODE_EN_BITS                       1
#define DSC_B_DSC_SM_CTRL_0_EEE_MODE_EN_SHIFT                      1

/* DSC_B :: dsc_sm_ctrl_0 :: rx_restart_pmd_hold [00:00] */
#define DSC_B_DSC_SM_CTRL_0_RX_RESTART_PMD_HOLD_MASK               0x0001
#define DSC_B_DSC_SM_CTRL_0_RX_RESTART_PMD_HOLD_ALIGN              0
#define DSC_B_DSC_SM_CTRL_0_RX_RESTART_PMD_HOLD_BITS               1
#define DSC_B_DSC_SM_CTRL_0_RX_RESTART_PMD_HOLD_SHIFT              0


/****************************************************************************
 * DSC_B :: dsc_sm_ctrl_1
 ***************************************************************************/
/* DSC_B :: dsc_sm_ctrl_1 :: reserved0 [15:14] */
#define DSC_B_DSC_SM_CTRL_1_RESERVED0_MASK                         0xc000
#define DSC_B_DSC_SM_CTRL_1_RESERVED0_ALIGN                        0
#define DSC_B_DSC_SM_CTRL_1_RESERVED0_BITS                         2
#define DSC_B_DSC_SM_CTRL_1_RESERVED0_SHIFT                        14

/* DSC_B :: dsc_sm_ctrl_1 :: trnsum_clr_frc_val [13:13] */
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_CLR_FRC_VAL_MASK                0x2000
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_CLR_FRC_VAL_ALIGN               0
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_CLR_FRC_VAL_BITS                1
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_CLR_FRC_VAL_SHIFT               13

/* DSC_B :: dsc_sm_ctrl_1 :: trnsum_clr_frc [12:12] */
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_CLR_FRC_MASK                    0x1000
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_CLR_FRC_ALIGN                   0
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_CLR_FRC_BITS                    1
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_CLR_FRC_SHIFT                   12

/* DSC_B :: dsc_sm_ctrl_1 :: cdr_frz_frc_val [11:11] */
#define DSC_B_DSC_SM_CTRL_1_CDR_FRZ_FRC_VAL_MASK                   0x0800
#define DSC_B_DSC_SM_CTRL_1_CDR_FRZ_FRC_VAL_ALIGN                  0
#define DSC_B_DSC_SM_CTRL_1_CDR_FRZ_FRC_VAL_BITS                   1
#define DSC_B_DSC_SM_CTRL_1_CDR_FRZ_FRC_VAL_SHIFT                  11

/* DSC_B :: dsc_sm_ctrl_1 :: cdr_frz_frc [10:10] */
#define DSC_B_DSC_SM_CTRL_1_CDR_FRZ_FRC_MASK                       0x0400
#define DSC_B_DSC_SM_CTRL_1_CDR_FRZ_FRC_ALIGN                      0
#define DSC_B_DSC_SM_CTRL_1_CDR_FRZ_FRC_BITS                       1
#define DSC_B_DSC_SM_CTRL_1_CDR_FRZ_FRC_SHIFT                      10

/* DSC_B :: dsc_sm_ctrl_1 :: freq_upd_en_frc_val [09:09] */
#define DSC_B_DSC_SM_CTRL_1_FREQ_UPD_EN_FRC_VAL_MASK               0x0200
#define DSC_B_DSC_SM_CTRL_1_FREQ_UPD_EN_FRC_VAL_ALIGN              0
#define DSC_B_DSC_SM_CTRL_1_FREQ_UPD_EN_FRC_VAL_BITS               1
#define DSC_B_DSC_SM_CTRL_1_FREQ_UPD_EN_FRC_VAL_SHIFT              9

/* DSC_B :: dsc_sm_ctrl_1 :: freq_upd_en_frc [08:08] */
#define DSC_B_DSC_SM_CTRL_1_FREQ_UPD_EN_FRC_MASK                   0x0100
#define DSC_B_DSC_SM_CTRL_1_FREQ_UPD_EN_FRC_ALIGN                  0
#define DSC_B_DSC_SM_CTRL_1_FREQ_UPD_EN_FRC_BITS                   1
#define DSC_B_DSC_SM_CTRL_1_FREQ_UPD_EN_FRC_SHIFT                  8

/* DSC_B :: dsc_sm_ctrl_1 :: timer_done_frc_val [07:07] */
#define DSC_B_DSC_SM_CTRL_1_TIMER_DONE_FRC_VAL_MASK                0x0080
#define DSC_B_DSC_SM_CTRL_1_TIMER_DONE_FRC_VAL_ALIGN               0
#define DSC_B_DSC_SM_CTRL_1_TIMER_DONE_FRC_VAL_BITS                1
#define DSC_B_DSC_SM_CTRL_1_TIMER_DONE_FRC_VAL_SHIFT               7

/* DSC_B :: dsc_sm_ctrl_1 :: timer_done_frc [06:06] */
#define DSC_B_DSC_SM_CTRL_1_TIMER_DONE_FRC_MASK                    0x0040
#define DSC_B_DSC_SM_CTRL_1_TIMER_DONE_FRC_ALIGN                   0
#define DSC_B_DSC_SM_CTRL_1_TIMER_DONE_FRC_BITS                    1
#define DSC_B_DSC_SM_CTRL_1_TIMER_DONE_FRC_SHIFT                   6

/* DSC_B :: dsc_sm_ctrl_1 :: trnsum_frz_val [05:05] */
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_FRZ_VAL_MASK                    0x0020
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_FRZ_VAL_ALIGN                   0
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_FRZ_VAL_BITS                    1
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_FRZ_VAL_SHIFT                   5

/* DSC_B :: dsc_sm_ctrl_1 :: trnsum_frz_frc [04:04] */
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_FRZ_FRC_MASK                    0x0010
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_FRZ_FRC_ALIGN                   0
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_FRZ_FRC_BITS                    1
#define DSC_B_DSC_SM_CTRL_1_TRNSUM_FRZ_FRC_SHIFT                   4

/* DSC_B :: dsc_sm_ctrl_1 :: dsc_clr_frc_val [03:03] */
#define DSC_B_DSC_SM_CTRL_1_DSC_CLR_FRC_VAL_MASK                   0x0008
#define DSC_B_DSC_SM_CTRL_1_DSC_CLR_FRC_VAL_ALIGN                  0
#define DSC_B_DSC_SM_CTRL_1_DSC_CLR_FRC_VAL_BITS                   1
#define DSC_B_DSC_SM_CTRL_1_DSC_CLR_FRC_VAL_SHIFT                  3

/* DSC_B :: dsc_sm_ctrl_1 :: dsc_clr_frc [02:02] */
#define DSC_B_DSC_SM_CTRL_1_DSC_CLR_FRC_MASK                       0x0004
#define DSC_B_DSC_SM_CTRL_1_DSC_CLR_FRC_ALIGN                      0
#define DSC_B_DSC_SM_CTRL_1_DSC_CLR_FRC_BITS                       1
#define DSC_B_DSC_SM_CTRL_1_DSC_CLR_FRC_SHIFT                      2

/* DSC_B :: dsc_sm_ctrl_1 :: rx_dsc_lock_frc_val [01:01] */
#define DSC_B_DSC_SM_CTRL_1_RX_DSC_LOCK_FRC_VAL_MASK               0x0002
#define DSC_B_DSC_SM_CTRL_1_RX_DSC_LOCK_FRC_VAL_ALIGN              0
#define DSC_B_DSC_SM_CTRL_1_RX_DSC_LOCK_FRC_VAL_BITS               1
#define DSC_B_DSC_SM_CTRL_1_RX_DSC_LOCK_FRC_VAL_SHIFT              1

/* DSC_B :: dsc_sm_ctrl_1 :: rx_dsc_lock_frc [00:00] */
#define DSC_B_DSC_SM_CTRL_1_RX_DSC_LOCK_FRC_MASK                   0x0001
#define DSC_B_DSC_SM_CTRL_1_RX_DSC_LOCK_FRC_ALIGN                  0
#define DSC_B_DSC_SM_CTRL_1_RX_DSC_LOCK_FRC_BITS                   1
#define DSC_B_DSC_SM_CTRL_1_RX_DSC_LOCK_FRC_SHIFT                  0


/****************************************************************************
 * DSC_B :: dsc_sm_ctrl_2
 ***************************************************************************/
/* DSC_B :: dsc_sm_ctrl_2 :: reserved0 [15:13] */
#define DSC_B_DSC_SM_CTRL_2_RESERVED0_MASK                         0xe000
#define DSC_B_DSC_SM_CTRL_2_RESERVED0_ALIGN                        0
#define DSC_B_DSC_SM_CTRL_2_RESERVED0_BITS                         3
#define DSC_B_DSC_SM_CTRL_2_RESERVED0_SHIFT                        13

/* DSC_B :: dsc_sm_ctrl_2 :: eee_lfsr_cnt [12:00] */
#define DSC_B_DSC_SM_CTRL_2_EEE_LFSR_CNT_MASK                      0x1fff
#define DSC_B_DSC_SM_CTRL_2_EEE_LFSR_CNT_ALIGN                     0
#define DSC_B_DSC_SM_CTRL_2_EEE_LFSR_CNT_BITS                      13
#define DSC_B_DSC_SM_CTRL_2_EEE_LFSR_CNT_SHIFT                     0


/****************************************************************************
 * DSC_B :: dsc_sm_ctrl_3
 ***************************************************************************/
/* DSC_B :: dsc_sm_ctrl_3 :: reserved0 [15:13] */
#define DSC_B_DSC_SM_CTRL_3_RESERVED0_MASK                         0xe000
#define DSC_B_DSC_SM_CTRL_3_RESERVED0_ALIGN                        0
#define DSC_B_DSC_SM_CTRL_3_RESERVED0_BITS                         3
#define DSC_B_DSC_SM_CTRL_3_RESERVED0_SHIFT                        13

/* DSC_B :: dsc_sm_ctrl_3 :: measure_lfsr_cnt [12:00] */
#define DSC_B_DSC_SM_CTRL_3_MEASURE_LFSR_CNT_MASK                  0x1fff
#define DSC_B_DSC_SM_CTRL_3_MEASURE_LFSR_CNT_ALIGN                 0
#define DSC_B_DSC_SM_CTRL_3_MEASURE_LFSR_CNT_BITS                  13
#define DSC_B_DSC_SM_CTRL_3_MEASURE_LFSR_CNT_SHIFT                 0


/****************************************************************************
 * DSC_B :: dsc_sm_ctrl_4
 ***************************************************************************/
/* DSC_B :: dsc_sm_ctrl_4 :: reserved0 [15:15] */
#define DSC_B_DSC_SM_CTRL_4_RESERVED0_MASK                         0x8000
#define DSC_B_DSC_SM_CTRL_4_RESERVED0_ALIGN                        0
#define DSC_B_DSC_SM_CTRL_4_RESERVED0_BITS                         1
#define DSC_B_DSC_SM_CTRL_4_RESERVED0_SHIFT                        15

/* DSC_B :: dsc_sm_ctrl_4 :: hw_tune_timeout [14:10] */
#define DSC_B_DSC_SM_CTRL_4_HW_TUNE_TIMEOUT_MASK                   0x7c00
#define DSC_B_DSC_SM_CTRL_4_HW_TUNE_TIMEOUT_ALIGN                  0
#define DSC_B_DSC_SM_CTRL_4_HW_TUNE_TIMEOUT_BITS                   5
#define DSC_B_DSC_SM_CTRL_4_HW_TUNE_TIMEOUT_SHIFT                  10

/* DSC_B :: dsc_sm_ctrl_4 :: cdr_settle_timeout [09:05] */
#define DSC_B_DSC_SM_CTRL_4_CDR_SETTLE_TIMEOUT_MASK                0x03e0
#define DSC_B_DSC_SM_CTRL_4_CDR_SETTLE_TIMEOUT_ALIGN               0
#define DSC_B_DSC_SM_CTRL_4_CDR_SETTLE_TIMEOUT_BITS                5
#define DSC_B_DSC_SM_CTRL_4_CDR_SETTLE_TIMEOUT_SHIFT               5

/* DSC_B :: dsc_sm_ctrl_4 :: acq_cdr_timeout [04:00] */
#define DSC_B_DSC_SM_CTRL_4_ACQ_CDR_TIMEOUT_MASK                   0x001f
#define DSC_B_DSC_SM_CTRL_4_ACQ_CDR_TIMEOUT_ALIGN                  0
#define DSC_B_DSC_SM_CTRL_4_ACQ_CDR_TIMEOUT_BITS                   5
#define DSC_B_DSC_SM_CTRL_4_ACQ_CDR_TIMEOUT_SHIFT                  0


/****************************************************************************
 * DSC_B :: dsc_sm_ctrl_5
 ***************************************************************************/
/* DSC_B :: dsc_sm_ctrl_5 :: reserved0 [15:15] */
#define DSC_B_DSC_SM_CTRL_5_RESERVED0_MASK                         0x8000
#define DSC_B_DSC_SM_CTRL_5_RESERVED0_ALIGN                        0
#define DSC_B_DSC_SM_CTRL_5_RESERVED0_BITS                         1
#define DSC_B_DSC_SM_CTRL_5_RESERVED0_SHIFT                        15

/* DSC_B :: dsc_sm_ctrl_5 :: eee_cdr_settle_timeout [14:10] */
#define DSC_B_DSC_SM_CTRL_5_EEE_CDR_SETTLE_TIMEOUT_MASK            0x7c00
#define DSC_B_DSC_SM_CTRL_5_EEE_CDR_SETTLE_TIMEOUT_ALIGN           0
#define DSC_B_DSC_SM_CTRL_5_EEE_CDR_SETTLE_TIMEOUT_BITS            5
#define DSC_B_DSC_SM_CTRL_5_EEE_CDR_SETTLE_TIMEOUT_SHIFT           10

/* DSC_B :: dsc_sm_ctrl_5 :: eee_acq_cdr_timeout [09:05] */
#define DSC_B_DSC_SM_CTRL_5_EEE_ACQ_CDR_TIMEOUT_MASK               0x03e0
#define DSC_B_DSC_SM_CTRL_5_EEE_ACQ_CDR_TIMEOUT_ALIGN              0
#define DSC_B_DSC_SM_CTRL_5_EEE_ACQ_CDR_TIMEOUT_BITS               5
#define DSC_B_DSC_SM_CTRL_5_EEE_ACQ_CDR_TIMEOUT_SHIFT              5

/* DSC_B :: dsc_sm_ctrl_5 :: measure_timeout [04:00] */
#define DSC_B_DSC_SM_CTRL_5_MEASURE_TIMEOUT_MASK                   0x001f
#define DSC_B_DSC_SM_CTRL_5_MEASURE_TIMEOUT_ALIGN                  0
#define DSC_B_DSC_SM_CTRL_5_MEASURE_TIMEOUT_BITS                   5
#define DSC_B_DSC_SM_CTRL_5_MEASURE_TIMEOUT_SHIFT                  0


/****************************************************************************
 * DSC_B :: dsc_sm_ctrl_6
 ***************************************************************************/
/* DSC_B :: dsc_sm_ctrl_6 :: reserved0 [15:10] */
#define DSC_B_DSC_SM_CTRL_6_RESERVED0_MASK                         0xfc00
#define DSC_B_DSC_SM_CTRL_6_RESERVED0_ALIGN                        0
#define DSC_B_DSC_SM_CTRL_6_RESERVED0_BITS                         6
#define DSC_B_DSC_SM_CTRL_6_RESERVED0_SHIFT                        10

/* DSC_B :: dsc_sm_ctrl_6 :: eee_ana_pwr_timeout [09:05] */
#define DSC_B_DSC_SM_CTRL_6_EEE_ANA_PWR_TIMEOUT_MASK               0x03e0
#define DSC_B_DSC_SM_CTRL_6_EEE_ANA_PWR_TIMEOUT_ALIGN              0
#define DSC_B_DSC_SM_CTRL_6_EEE_ANA_PWR_TIMEOUT_BITS               5
#define DSC_B_DSC_SM_CTRL_6_EEE_ANA_PWR_TIMEOUT_SHIFT              5

/* DSC_B :: dsc_sm_ctrl_6 :: eee_hw_tune_timeout [04:00] */
#define DSC_B_DSC_SM_CTRL_6_EEE_HW_TUNE_TIMEOUT_MASK               0x001f
#define DSC_B_DSC_SM_CTRL_6_EEE_HW_TUNE_TIMEOUT_ALIGN              0
#define DSC_B_DSC_SM_CTRL_6_EEE_HW_TUNE_TIMEOUT_BITS               5
#define DSC_B_DSC_SM_CTRL_6_EEE_HW_TUNE_TIMEOUT_SHIFT              0


/****************************************************************************
 * DSC_B :: dsc_sm_ctrl_7
 ***************************************************************************/
/* DSC_B :: dsc_sm_ctrl_7 :: cdr_bwsel_prop_norm [15:14] */
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_PROP_NORM_MASK               0xc000
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_PROP_NORM_ALIGN              0
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_PROP_NORM_BITS               2
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_PROP_NORM_SHIFT              14

/* DSC_B :: dsc_sm_ctrl_7 :: cdr_bwsel_prop_acqcdr [13:12] */
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_PROP_ACQCDR_MASK             0x3000
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_PROP_ACQCDR_ALIGN            0
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_PROP_ACQCDR_BITS             2
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_PROP_ACQCDR_SHIFT            12

/* DSC_B :: dsc_sm_ctrl_7 :: cdr_bwsel_integ_norm [11:08] */
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_NORM_MASK              0x0f00
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_NORM_ALIGN             0
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_NORM_BITS              4
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_NORM_SHIFT             8

/* DSC_B :: dsc_sm_ctrl_7 :: cdr_bwsel_integ_eee_acqcdr [07:04] */
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_EEE_ACQCDR_MASK        0x00f0
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_EEE_ACQCDR_ALIGN       0
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_EEE_ACQCDR_BITS        4
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_EEE_ACQCDR_SHIFT       4

/* DSC_B :: dsc_sm_ctrl_7 :: cdr_bwsel_integ_acqcdr [03:00] */
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_ACQCDR_MASK            0x000f
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_ACQCDR_ALIGN           0
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_ACQCDR_BITS            4
#define DSC_B_DSC_SM_CTRL_7_CDR_BWSEL_INTEG_ACQCDR_SHIFT           0


/****************************************************************************
 * DSC_B :: dsc_sm_ctrl_8
 ***************************************************************************/
/* DSC_B :: dsc_sm_ctrl_8 :: cdr_bwsel_prop_eee_acqcdr [15:14] */
#define DSC_B_DSC_SM_CTRL_8_CDR_BWSEL_PROP_EEE_ACQCDR_MASK         0xc000
#define DSC_B_DSC_SM_CTRL_8_CDR_BWSEL_PROP_EEE_ACQCDR_ALIGN        0
#define DSC_B_DSC_SM_CTRL_8_CDR_BWSEL_PROP_EEE_ACQCDR_BITS         2
#define DSC_B_DSC_SM_CTRL_8_CDR_BWSEL_PROP_EEE_ACQCDR_SHIFT        14

/* DSC_B :: dsc_sm_ctrl_8 :: reserved0 [13:12] */
#define DSC_B_DSC_SM_CTRL_8_RESERVED0_MASK                         0x3000
#define DSC_B_DSC_SM_CTRL_8_RESERVED0_ALIGN                        0
#define DSC_B_DSC_SM_CTRL_8_RESERVED0_BITS                         2
#define DSC_B_DSC_SM_CTRL_8_RESERVED0_SHIFT                        12

/* DSC_B :: dsc_sm_ctrl_8 :: eee_phase_err_offset_en [11:10] */
#define DSC_B_DSC_SM_CTRL_8_EEE_PHASE_ERR_OFFSET_EN_MASK           0x0c00
#define DSC_B_DSC_SM_CTRL_8_EEE_PHASE_ERR_OFFSET_EN_ALIGN          0
#define DSC_B_DSC_SM_CTRL_8_EEE_PHASE_ERR_OFFSET_EN_BITS           2
#define DSC_B_DSC_SM_CTRL_8_EEE_PHASE_ERR_OFFSET_EN_SHIFT          10

/* DSC_B :: dsc_sm_ctrl_8 :: phase_err_offset_en [09:08] */
#define DSC_B_DSC_SM_CTRL_8_PHASE_ERR_OFFSET_EN_MASK               0x0300
#define DSC_B_DSC_SM_CTRL_8_PHASE_ERR_OFFSET_EN_ALIGN              0
#define DSC_B_DSC_SM_CTRL_8_PHASE_ERR_OFFSET_EN_BITS               2
#define DSC_B_DSC_SM_CTRL_8_PHASE_ERR_OFFSET_EN_SHIFT              8

/* DSC_B :: dsc_sm_ctrl_8 :: eee_phase_err_offset [07:04] */
#define DSC_B_DSC_SM_CTRL_8_EEE_PHASE_ERR_OFFSET_MASK              0x00f0
#define DSC_B_DSC_SM_CTRL_8_EEE_PHASE_ERR_OFFSET_ALIGN             0
#define DSC_B_DSC_SM_CTRL_8_EEE_PHASE_ERR_OFFSET_BITS              4
#define DSC_B_DSC_SM_CTRL_8_EEE_PHASE_ERR_OFFSET_SHIFT             4

/* DSC_B :: dsc_sm_ctrl_8 :: phase_err_offset [03:00] */
#define DSC_B_DSC_SM_CTRL_8_PHASE_ERR_OFFSET_MASK                  0x000f
#define DSC_B_DSC_SM_CTRL_8_PHASE_ERR_OFFSET_ALIGN                 0
#define DSC_B_DSC_SM_CTRL_8_PHASE_ERR_OFFSET_BITS                  4
#define DSC_B_DSC_SM_CTRL_8_PHASE_ERR_OFFSET_SHIFT                 0


/****************************************************************************
 * DSC_B :: dsc_sm_ctrl_9
 ***************************************************************************/
/* DSC_B :: dsc_sm_ctrl_9 :: reserved0 [15:01] */
#define DSC_B_DSC_SM_CTRL_9_RESERVED0_MASK                         0xfffe
#define DSC_B_DSC_SM_CTRL_9_RESERVED0_ALIGN                        0
#define DSC_B_DSC_SM_CTRL_9_RESERVED0_BITS                         15
#define DSC_B_DSC_SM_CTRL_9_RESERVED0_SHIFT                        1

/* DSC_B :: dsc_sm_ctrl_9 :: rx_restart_pmd [00:00] */
#define DSC_B_DSC_SM_CTRL_9_RX_RESTART_PMD_MASK                    0x0001
#define DSC_B_DSC_SM_CTRL_9_RX_RESTART_PMD_ALIGN                   0
#define DSC_B_DSC_SM_CTRL_9_RX_RESTART_PMD_BITS                    1
#define DSC_B_DSC_SM_CTRL_9_RX_RESTART_PMD_SHIFT                   0


/****************************************************************************
 * DSC_B :: dsc_sm_status_dsc_lock
 ***************************************************************************/
/* DSC_B :: dsc_sm_status_dsc_lock :: reserved0 [15:01] */
#define DSC_B_DSC_SM_STATUS_DSC_LOCK_RESERVED0_MASK                0xfffe
#define DSC_B_DSC_SM_STATUS_DSC_LOCK_RESERVED0_ALIGN               0
#define DSC_B_DSC_SM_STATUS_DSC_LOCK_RESERVED0_BITS                15
#define DSC_B_DSC_SM_STATUS_DSC_LOCK_RESERVED0_SHIFT               1

/* DSC_B :: dsc_sm_status_dsc_lock :: rx_dsc_lock [00:00] */
#define DSC_B_DSC_SM_STATUS_DSC_LOCK_RX_DSC_LOCK_MASK              0x0001
#define DSC_B_DSC_SM_STATUS_DSC_LOCK_RX_DSC_LOCK_ALIGN             0
#define DSC_B_DSC_SM_STATUS_DSC_LOCK_RX_DSC_LOCK_BITS              1
#define DSC_B_DSC_SM_STATUS_DSC_LOCK_RX_DSC_LOCK_SHIFT             0


/****************************************************************************
 * DSC_B :: dsc_sm_status_dsc_state_one_hot
 ***************************************************************************/
/* DSC_B :: dsc_sm_status_dsc_state_one_hot :: reserved0 [15:10] */
#define DSC_B_DSC_SM_STATUS_DSC_STATE_ONE_HOT_RESERVED0_MASK       0xfc00
#define DSC_B_DSC_SM_STATUS_DSC_STATE_ONE_HOT_RESERVED0_ALIGN      0
#define DSC_B_DSC_SM_STATUS_DSC_STATE_ONE_HOT_RESERVED0_BITS       6
#define DSC_B_DSC_SM_STATUS_DSC_STATE_ONE_HOT_RESERVED0_SHIFT      10

/* DSC_B :: dsc_sm_status_dsc_state_one_hot :: dsc_state_one_hot [09:00] */
#define DSC_B_DSC_SM_STATUS_DSC_STATE_ONE_HOT_DSC_STATE_ONE_HOT_MASK 0x03ff
#define DSC_B_DSC_SM_STATUS_DSC_STATE_ONE_HOT_DSC_STATE_ONE_HOT_ALIGN 0
#define DSC_B_DSC_SM_STATUS_DSC_STATE_ONE_HOT_DSC_STATE_ONE_HOT_BITS 10
#define DSC_B_DSC_SM_STATUS_DSC_STATE_ONE_HOT_DSC_STATE_ONE_HOT_SHIFT 0


/****************************************************************************
 * DSC_B :: dsc_sm_status_dsc_state_eee_one_hot
 ***************************************************************************/
/* DSC_B :: dsc_sm_status_dsc_state_eee_one_hot :: reserved0 [15:07] */
#define DSC_B_DSC_SM_STATUS_DSC_STATE_EEE_ONE_HOT_RESERVED0_MASK   0xff80
#define DSC_B_DSC_SM_STATUS_DSC_STATE_EEE_ONE_HOT_RESERVED0_ALIGN  0
#define DSC_B_DSC_SM_STATUS_DSC_STATE_EEE_ONE_HOT_RESERVED0_BITS   9
#define DSC_B_DSC_SM_STATUS_DSC_STATE_EEE_ONE_HOT_RESERVED0_SHIFT  7

/* DSC_B :: dsc_sm_status_dsc_state_eee_one_hot :: dsc_state_eee_one_hot [06:00] */
#define DSC_B_DSC_SM_STATUS_DSC_STATE_EEE_ONE_HOT_DSC_STATE_EEE_ONE_HOT_MASK 0x007f
#define DSC_B_DSC_SM_STATUS_DSC_STATE_EEE_ONE_HOT_DSC_STATE_EEE_ONE_HOT_ALIGN 0
#define DSC_B_DSC_SM_STATUS_DSC_STATE_EEE_ONE_HOT_DSC_STATE_EEE_ONE_HOT_BITS 7
#define DSC_B_DSC_SM_STATUS_DSC_STATE_EEE_ONE_HOT_DSC_STATE_EEE_ONE_HOT_SHIFT 0


/****************************************************************************
 * DSC_B :: dsc_sm_status_restart
 ***************************************************************************/
/* DSC_B :: dsc_sm_status_restart :: reserved0 [15:04] */
#define DSC_B_DSC_SM_STATUS_RESTART_RESERVED0_MASK                 0xfff0
#define DSC_B_DSC_SM_STATUS_RESTART_RESERVED0_ALIGN                0
#define DSC_B_DSC_SM_STATUS_RESTART_RESERVED0_BITS                 12
#define DSC_B_DSC_SM_STATUS_RESTART_RESERVED0_SHIFT                4

/* DSC_B :: dsc_sm_status_restart :: eee_quiet_from_eee_states [03:03] */
#define DSC_B_DSC_SM_STATUS_RESTART_EEE_QUIET_FROM_EEE_STATES_MASK 0x0008
#define DSC_B_DSC_SM_STATUS_RESTART_EEE_QUIET_FROM_EEE_STATES_ALIGN 0
#define DSC_B_DSC_SM_STATUS_RESTART_EEE_QUIET_FROM_EEE_STATES_BITS 1
#define DSC_B_DSC_SM_STATUS_RESTART_EEE_QUIET_FROM_EEE_STATES_SHIFT 3

/* DSC_B :: dsc_sm_status_restart :: restart_pmd_restart [02:02] */
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_PMD_RESTART_MASK       0x0004
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_PMD_RESTART_ALIGN      0
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_PMD_RESTART_BITS       1
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_PMD_RESTART_SHIFT      2

/* DSC_B :: dsc_sm_status_restart :: restart_sigdet [01:01] */
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_SIGDET_MASK            0x0002
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_SIGDET_ALIGN           0
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_SIGDET_BITS            1
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_SIGDET_SHIFT           1

/* DSC_B :: dsc_sm_status_restart :: restart_pi_ext_mode [00:00] */
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_PI_EXT_MODE_MASK       0x0001
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_PI_EXT_MODE_ALIGN      0
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_PI_EXT_MODE_BITS       1
#define DSC_B_DSC_SM_STATUS_RESTART_RESTART_PI_EXT_MODE_SHIFT      0


/****************************************************************************
 * DSC_B :: dsc_sm_status_dsc_state
 ***************************************************************************/
/* DSC_B :: dsc_sm_status_dsc_state :: dsc_state [15:11] */
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_STATE_MASK               0xf800
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_STATE_ALIGN              0
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_STATE_BITS               5
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_STATE_SHIFT              11

/* DSC_B :: dsc_sm_status_dsc_state :: dsc_sm_gp_uc_req [10:05] */
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_GP_UC_REQ_MASK        0x07e0
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_GP_UC_REQ_ALIGN       0
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_GP_UC_REQ_BITS        6
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_GP_UC_REQ_SHIFT       5

/* DSC_B :: dsc_sm_status_dsc_state :: dsc_sm_ready_for_cmd [04:04] */
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_READY_FOR_CMD_MASK    0x0010
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_READY_FOR_CMD_ALIGN   0
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_READY_FOR_CMD_BITS    1
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_READY_FOR_CMD_SHIFT   4

/* DSC_B :: dsc_sm_status_dsc_state :: dsc_sm_scratch [03:00] */
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_SCRATCH_MASK          0x000f
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_SCRATCH_ALIGN         0
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_SCRATCH_BITS          4
#define DSC_B_DSC_SM_STATUS_DSC_STATE_DSC_SM_SCRATCH_SHIFT         0


/****************************************************************************
 * merlin_gallardo_dsc_blk_DSC_C
 ***************************************************************************/
/****************************************************************************
 * DSC_C :: dfe_common_ctl
 ***************************************************************************/
/* DSC_C :: dfe_common_ctl :: dfe_acc_hys_en [15:15] */
#define DSC_C_DFE_COMMON_CTL_DFE_ACC_HYS_EN_MASK                   0x8000
#define DSC_C_DFE_COMMON_CTL_DFE_ACC_HYS_EN_ALIGN                  0
#define DSC_C_DFE_COMMON_CTL_DFE_ACC_HYS_EN_BITS                   1
#define DSC_C_DFE_COMMON_CTL_DFE_ACC_HYS_EN_SHIFT                  15

/* DSC_C :: dfe_common_ctl :: dfe_allow_simult [14:14] */
#define DSC_C_DFE_COMMON_CTL_DFE_ALLOW_SIMULT_MASK                 0x4000
#define DSC_C_DFE_COMMON_CTL_DFE_ALLOW_SIMULT_ALIGN                0
#define DSC_C_DFE_COMMON_CTL_DFE_ALLOW_SIMULT_BITS                 1
#define DSC_C_DFE_COMMON_CTL_DFE_ALLOW_SIMULT_SHIFT                14

/* DSC_C :: dfe_common_ctl :: dfe_update_gain [13:13] */
#define DSC_C_DFE_COMMON_CTL_DFE_UPDATE_GAIN_MASK                  0x2000
#define DSC_C_DFE_COMMON_CTL_DFE_UPDATE_GAIN_ALIGN                 0
#define DSC_C_DFE_COMMON_CTL_DFE_UPDATE_GAIN_BITS                  1
#define DSC_C_DFE_COMMON_CTL_DFE_UPDATE_GAIN_SHIFT                 13

/* DSC_C :: dfe_common_ctl :: reserved0 [12:00] */
#define DSC_C_DFE_COMMON_CTL_RESERVED0_MASK                        0x1fff
#define DSC_C_DFE_COMMON_CTL_RESERVED0_ALIGN                       0
#define DSC_C_DFE_COMMON_CTL_RESERVED0_BITS                        13
#define DSC_C_DFE_COMMON_CTL_RESERVED0_SHIFT                       0


/****************************************************************************
 * DSC_C :: dfe_1_ctl
 ***************************************************************************/
/* DSC_C :: dfe_1_ctl :: dfe_1_en [15:15] */
#define DSC_C_DFE_1_CTL_DFE_1_EN_MASK                              0x8000
#define DSC_C_DFE_1_CTL_DFE_1_EN_ALIGN                             0
#define DSC_C_DFE_1_CTL_DFE_1_EN_BITS                              1
#define DSC_C_DFE_1_CTL_DFE_1_EN_SHIFT                             15

/* DSC_C :: dfe_1_ctl :: dfe_1_err_sel [14:13] */
#define DSC_C_DFE_1_CTL_DFE_1_ERR_SEL_MASK                         0x6000
#define DSC_C_DFE_1_CTL_DFE_1_ERR_SEL_ALIGN                        0
#define DSC_C_DFE_1_CTL_DFE_1_ERR_SEL_BITS                         2
#define DSC_C_DFE_1_CTL_DFE_1_ERR_SEL_SHIFT                        13

/* DSC_C :: dfe_1_ctl :: dfe_1_gradient_invert [12:12] */
#define DSC_C_DFE_1_CTL_DFE_1_GRADIENT_INVERT_MASK                 0x1000
#define DSC_C_DFE_1_CTL_DFE_1_GRADIENT_INVERT_ALIGN                0
#define DSC_C_DFE_1_CTL_DFE_1_GRADIENT_INVERT_BITS                 1
#define DSC_C_DFE_1_CTL_DFE_1_GRADIENT_INVERT_SHIFT                12

/* DSC_C :: dfe_1_ctl :: dfe_1_err_gain [11:10] */
#define DSC_C_DFE_1_CTL_DFE_1_ERR_GAIN_MASK                        0x0c00
#define DSC_C_DFE_1_CTL_DFE_1_ERR_GAIN_ALIGN                       0
#define DSC_C_DFE_1_CTL_DFE_1_ERR_GAIN_BITS                        2
#define DSC_C_DFE_1_CTL_DFE_1_ERR_GAIN_SHIFT                       10

/* DSC_C :: dfe_1_ctl :: dfe_1_inv_m1 [09:09] */
#define DSC_C_DFE_1_CTL_DFE_1_INV_M1_MASK                          0x0200
#define DSC_C_DFE_1_CTL_DFE_1_INV_M1_ALIGN                         0
#define DSC_C_DFE_1_CTL_DFE_1_INV_M1_BITS                          1
#define DSC_C_DFE_1_CTL_DFE_1_INV_M1_SHIFT                         9

/* DSC_C :: dfe_1_ctl :: dfe_1_inv_p1 [08:08] */
#define DSC_C_DFE_1_CTL_DFE_1_INV_P1_MASK                          0x0100
#define DSC_C_DFE_1_CTL_DFE_1_INV_P1_ALIGN                         0
#define DSC_C_DFE_1_CTL_DFE_1_INV_P1_BITS                          1
#define DSC_C_DFE_1_CTL_DFE_1_INV_P1_SHIFT                         8

/* DSC_C :: dfe_1_ctl :: reserved0 [07:02] */
#define DSC_C_DFE_1_CTL_RESERVED0_MASK                             0x00fc
#define DSC_C_DFE_1_CTL_RESERVED0_ALIGN                            0
#define DSC_C_DFE_1_CTL_RESERVED0_BITS                             6
#define DSC_C_DFE_1_CTL_RESERVED0_SHIFT                            2

/* DSC_C :: dfe_1_ctl :: dfe_1_cmn_only [01:01] */
#define DSC_C_DFE_1_CTL_DFE_1_CMN_ONLY_MASK                        0x0002
#define DSC_C_DFE_1_CTL_DFE_1_CMN_ONLY_ALIGN                       0
#define DSC_C_DFE_1_CTL_DFE_1_CMN_ONLY_BITS                        1
#define DSC_C_DFE_1_CTL_DFE_1_CMN_ONLY_SHIFT                       1

/* DSC_C :: dfe_1_ctl :: dfe_1_tap_clr [00:00] */
#define DSC_C_DFE_1_CTL_DFE_1_TAP_CLR_MASK                         0x0001
#define DSC_C_DFE_1_CTL_DFE_1_TAP_CLR_ALIGN                        0
#define DSC_C_DFE_1_CTL_DFE_1_TAP_CLR_BITS                         1
#define DSC_C_DFE_1_CTL_DFE_1_TAP_CLR_SHIFT                        0


/****************************************************************************
 * DSC_C :: dfe_1_pat_ctl
 ***************************************************************************/
/* DSC_C :: dfe_1_pat_ctl :: reserved0 [15:14] */
#define DSC_C_DFE_1_PAT_CTL_RESERVED0_MASK                         0xc000
#define DSC_C_DFE_1_PAT_CTL_RESERVED0_ALIGN                        0
#define DSC_C_DFE_1_PAT_CTL_RESERVED0_BITS                         2
#define DSC_C_DFE_1_PAT_CTL_RESERVED0_SHIFT                        14

/* DSC_C :: dfe_1_pat_ctl :: dfe_1_pattern_bit_en [13:08] */
#define DSC_C_DFE_1_PAT_CTL_DFE_1_PATTERN_BIT_EN_MASK              0x3f00
#define DSC_C_DFE_1_PAT_CTL_DFE_1_PATTERN_BIT_EN_ALIGN             0
#define DSC_C_DFE_1_PAT_CTL_DFE_1_PATTERN_BIT_EN_BITS              6
#define DSC_C_DFE_1_PAT_CTL_DFE_1_PATTERN_BIT_EN_SHIFT             8

/* DSC_C :: dfe_1_pat_ctl :: reserved1 [07:06] */
#define DSC_C_DFE_1_PAT_CTL_RESERVED1_MASK                         0x00c0
#define DSC_C_DFE_1_PAT_CTL_RESERVED1_ALIGN                        0
#define DSC_C_DFE_1_PAT_CTL_RESERVED1_BITS                         2
#define DSC_C_DFE_1_PAT_CTL_RESERVED1_SHIFT                        6

/* DSC_C :: dfe_1_pat_ctl :: dfe_1_pattern [05:00] */
#define DSC_C_DFE_1_PAT_CTL_DFE_1_PATTERN_MASK                     0x003f
#define DSC_C_DFE_1_PAT_CTL_DFE_1_PATTERN_ALIGN                    0
#define DSC_C_DFE_1_PAT_CTL_DFE_1_PATTERN_BITS                     6
#define DSC_C_DFE_1_PAT_CTL_DFE_1_PATTERN_SHIFT                    0


/****************************************************************************
 * DSC_C :: dfe_2_ctl
 ***************************************************************************/
/* DSC_C :: dfe_2_ctl :: dfe_2_en [15:15] */
#define DSC_C_DFE_2_CTL_DFE_2_EN_MASK                              0x8000
#define DSC_C_DFE_2_CTL_DFE_2_EN_ALIGN                             0
#define DSC_C_DFE_2_CTL_DFE_2_EN_BITS                              1
#define DSC_C_DFE_2_CTL_DFE_2_EN_SHIFT                             15

/* DSC_C :: dfe_2_ctl :: dfe_2_err_sel [14:13] */
#define DSC_C_DFE_2_CTL_DFE_2_ERR_SEL_MASK                         0x6000
#define DSC_C_DFE_2_CTL_DFE_2_ERR_SEL_ALIGN                        0
#define DSC_C_DFE_2_CTL_DFE_2_ERR_SEL_BITS                         2
#define DSC_C_DFE_2_CTL_DFE_2_ERR_SEL_SHIFT                        13

/* DSC_C :: dfe_2_ctl :: dfe_2_gradient_invert [12:12] */
#define DSC_C_DFE_2_CTL_DFE_2_GRADIENT_INVERT_MASK                 0x1000
#define DSC_C_DFE_2_CTL_DFE_2_GRADIENT_INVERT_ALIGN                0
#define DSC_C_DFE_2_CTL_DFE_2_GRADIENT_INVERT_BITS                 1
#define DSC_C_DFE_2_CTL_DFE_2_GRADIENT_INVERT_SHIFT                12

/* DSC_C :: dfe_2_ctl :: dfe_2_err_gain [11:10] */
#define DSC_C_DFE_2_CTL_DFE_2_ERR_GAIN_MASK                        0x0c00
#define DSC_C_DFE_2_CTL_DFE_2_ERR_GAIN_ALIGN                       0
#define DSC_C_DFE_2_CTL_DFE_2_ERR_GAIN_BITS                        2
#define DSC_C_DFE_2_CTL_DFE_2_ERR_GAIN_SHIFT                       10

/* DSC_C :: dfe_2_ctl :: dfe_2_inv_m1 [09:09] */
#define DSC_C_DFE_2_CTL_DFE_2_INV_M1_MASK                          0x0200
#define DSC_C_DFE_2_CTL_DFE_2_INV_M1_ALIGN                         0
#define DSC_C_DFE_2_CTL_DFE_2_INV_M1_BITS                          1
#define DSC_C_DFE_2_CTL_DFE_2_INV_M1_SHIFT                         9

/* DSC_C :: dfe_2_ctl :: dfe_2_inv_p1 [08:08] */
#define DSC_C_DFE_2_CTL_DFE_2_INV_P1_MASK                          0x0100
#define DSC_C_DFE_2_CTL_DFE_2_INV_P1_ALIGN                         0
#define DSC_C_DFE_2_CTL_DFE_2_INV_P1_BITS                          1
#define DSC_C_DFE_2_CTL_DFE_2_INV_P1_SHIFT                         8

/* DSC_C :: dfe_2_ctl :: reserved0 [07:02] */
#define DSC_C_DFE_2_CTL_RESERVED0_MASK                             0x00fc
#define DSC_C_DFE_2_CTL_RESERVED0_ALIGN                            0
#define DSC_C_DFE_2_CTL_RESERVED0_BITS                             6
#define DSC_C_DFE_2_CTL_RESERVED0_SHIFT                            2

/* DSC_C :: dfe_2_ctl :: dfe_2_cmn_only [01:01] */
#define DSC_C_DFE_2_CTL_DFE_2_CMN_ONLY_MASK                        0x0002
#define DSC_C_DFE_2_CTL_DFE_2_CMN_ONLY_ALIGN                       0
#define DSC_C_DFE_2_CTL_DFE_2_CMN_ONLY_BITS                        1
#define DSC_C_DFE_2_CTL_DFE_2_CMN_ONLY_SHIFT                       1

/* DSC_C :: dfe_2_ctl :: dfe_2_tap_clr [00:00] */
#define DSC_C_DFE_2_CTL_DFE_2_TAP_CLR_MASK                         0x0001
#define DSC_C_DFE_2_CTL_DFE_2_TAP_CLR_ALIGN                        0
#define DSC_C_DFE_2_CTL_DFE_2_TAP_CLR_BITS                         1
#define DSC_C_DFE_2_CTL_DFE_2_TAP_CLR_SHIFT                        0


/****************************************************************************
 * DSC_C :: dfe_2_pat_ctl
 ***************************************************************************/
/* DSC_C :: dfe_2_pat_ctl :: reserved0 [15:14] */
#define DSC_C_DFE_2_PAT_CTL_RESERVED0_MASK                         0xc000
#define DSC_C_DFE_2_PAT_CTL_RESERVED0_ALIGN                        0
#define DSC_C_DFE_2_PAT_CTL_RESERVED0_BITS                         2
#define DSC_C_DFE_2_PAT_CTL_RESERVED0_SHIFT                        14

/* DSC_C :: dfe_2_pat_ctl :: dfe_2_pattern_bit_en [13:08] */
#define DSC_C_DFE_2_PAT_CTL_DFE_2_PATTERN_BIT_EN_MASK              0x3f00
#define DSC_C_DFE_2_PAT_CTL_DFE_2_PATTERN_BIT_EN_ALIGN             0
#define DSC_C_DFE_2_PAT_CTL_DFE_2_PATTERN_BIT_EN_BITS              6
#define DSC_C_DFE_2_PAT_CTL_DFE_2_PATTERN_BIT_EN_SHIFT             8

/* DSC_C :: dfe_2_pat_ctl :: reserved1 [07:06] */
#define DSC_C_DFE_2_PAT_CTL_RESERVED1_MASK                         0x00c0
#define DSC_C_DFE_2_PAT_CTL_RESERVED1_ALIGN                        0
#define DSC_C_DFE_2_PAT_CTL_RESERVED1_BITS                         2
#define DSC_C_DFE_2_PAT_CTL_RESERVED1_SHIFT                        6

/* DSC_C :: dfe_2_pat_ctl :: dfe_2_pattern [05:00] */
#define DSC_C_DFE_2_PAT_CTL_DFE_2_PATTERN_MASK                     0x003f
#define DSC_C_DFE_2_PAT_CTL_DFE_2_PATTERN_ALIGN                    0
#define DSC_C_DFE_2_PAT_CTL_DFE_2_PATTERN_BITS                     6
#define DSC_C_DFE_2_PAT_CTL_DFE_2_PATTERN_SHIFT                    0


/****************************************************************************
 * DSC_C :: dfe_3_ctl
 ***************************************************************************/
/* DSC_C :: dfe_3_ctl :: dfe_3_en [15:15] */
#define DSC_C_DFE_3_CTL_DFE_3_EN_MASK                              0x8000
#define DSC_C_DFE_3_CTL_DFE_3_EN_ALIGN                             0
#define DSC_C_DFE_3_CTL_DFE_3_EN_BITS                              1
#define DSC_C_DFE_3_CTL_DFE_3_EN_SHIFT                             15

/* DSC_C :: dfe_3_ctl :: dfe_3_err_sel [14:13] */
#define DSC_C_DFE_3_CTL_DFE_3_ERR_SEL_MASK                         0x6000
#define DSC_C_DFE_3_CTL_DFE_3_ERR_SEL_ALIGN                        0
#define DSC_C_DFE_3_CTL_DFE_3_ERR_SEL_BITS                         2
#define DSC_C_DFE_3_CTL_DFE_3_ERR_SEL_SHIFT                        13

/* DSC_C :: dfe_3_ctl :: dfe_3_gradient_invert [12:12] */
#define DSC_C_DFE_3_CTL_DFE_3_GRADIENT_INVERT_MASK                 0x1000
#define DSC_C_DFE_3_CTL_DFE_3_GRADIENT_INVERT_ALIGN                0
#define DSC_C_DFE_3_CTL_DFE_3_GRADIENT_INVERT_BITS                 1
#define DSC_C_DFE_3_CTL_DFE_3_GRADIENT_INVERT_SHIFT                12

/* DSC_C :: dfe_3_ctl :: dfe_3_err_gain [11:10] */
#define DSC_C_DFE_3_CTL_DFE_3_ERR_GAIN_MASK                        0x0c00
#define DSC_C_DFE_3_CTL_DFE_3_ERR_GAIN_ALIGN                       0
#define DSC_C_DFE_3_CTL_DFE_3_ERR_GAIN_BITS                        2
#define DSC_C_DFE_3_CTL_DFE_3_ERR_GAIN_SHIFT                       10

/* DSC_C :: dfe_3_ctl :: dfe_3_inv_m1 [09:09] */
#define DSC_C_DFE_3_CTL_DFE_3_INV_M1_MASK                          0x0200
#define DSC_C_DFE_3_CTL_DFE_3_INV_M1_ALIGN                         0
#define DSC_C_DFE_3_CTL_DFE_3_INV_M1_BITS                          1
#define DSC_C_DFE_3_CTL_DFE_3_INV_M1_SHIFT                         9

/* DSC_C :: dfe_3_ctl :: dfe_3_inv_p1 [08:08] */
#define DSC_C_DFE_3_CTL_DFE_3_INV_P1_MASK                          0x0100
#define DSC_C_DFE_3_CTL_DFE_3_INV_P1_ALIGN                         0
#define DSC_C_DFE_3_CTL_DFE_3_INV_P1_BITS                          1
#define DSC_C_DFE_3_CTL_DFE_3_INV_P1_SHIFT                         8

/* DSC_C :: dfe_3_ctl :: reserved0 [07:01] */
#define DSC_C_DFE_3_CTL_RESERVED0_MASK                             0x00fe
#define DSC_C_DFE_3_CTL_RESERVED0_ALIGN                            0
#define DSC_C_DFE_3_CTL_RESERVED0_BITS                             7
#define DSC_C_DFE_3_CTL_RESERVED0_SHIFT                            1

/* DSC_C :: dfe_3_ctl :: dfe_3_tap_clr [00:00] */
#define DSC_C_DFE_3_CTL_DFE_3_TAP_CLR_MASK                         0x0001
#define DSC_C_DFE_3_CTL_DFE_3_TAP_CLR_ALIGN                        0
#define DSC_C_DFE_3_CTL_DFE_3_TAP_CLR_BITS                         1
#define DSC_C_DFE_3_CTL_DFE_3_TAP_CLR_SHIFT                        0


/****************************************************************************
 * DSC_C :: dfe_3_pat_ctl
 ***************************************************************************/
/* DSC_C :: dfe_3_pat_ctl :: reserved0 [15:14] */
#define DSC_C_DFE_3_PAT_CTL_RESERVED0_MASK                         0xc000
#define DSC_C_DFE_3_PAT_CTL_RESERVED0_ALIGN                        0
#define DSC_C_DFE_3_PAT_CTL_RESERVED0_BITS                         2
#define DSC_C_DFE_3_PAT_CTL_RESERVED0_SHIFT                        14

/* DSC_C :: dfe_3_pat_ctl :: dfe_3_pattern_bit_en [13:08] */
#define DSC_C_DFE_3_PAT_CTL_DFE_3_PATTERN_BIT_EN_MASK              0x3f00
#define DSC_C_DFE_3_PAT_CTL_DFE_3_PATTERN_BIT_EN_ALIGN             0
#define DSC_C_DFE_3_PAT_CTL_DFE_3_PATTERN_BIT_EN_BITS              6
#define DSC_C_DFE_3_PAT_CTL_DFE_3_PATTERN_BIT_EN_SHIFT             8

/* DSC_C :: dfe_3_pat_ctl :: reserved1 [07:06] */
#define DSC_C_DFE_3_PAT_CTL_RESERVED1_MASK                         0x00c0
#define DSC_C_DFE_3_PAT_CTL_RESERVED1_ALIGN                        0
#define DSC_C_DFE_3_PAT_CTL_RESERVED1_BITS                         2
#define DSC_C_DFE_3_PAT_CTL_RESERVED1_SHIFT                        6

/* DSC_C :: dfe_3_pat_ctl :: dfe_3_pattern [05:00] */
#define DSC_C_DFE_3_PAT_CTL_DFE_3_PATTERN_MASK                     0x003f
#define DSC_C_DFE_3_PAT_CTL_DFE_3_PATTERN_ALIGN                    0
#define DSC_C_DFE_3_PAT_CTL_DFE_3_PATTERN_BITS                     6
#define DSC_C_DFE_3_PAT_CTL_DFE_3_PATTERN_SHIFT                    0


/****************************************************************************
 * DSC_C :: dfe_4_ctl
 ***************************************************************************/
/* DSC_C :: dfe_4_ctl :: dfe_4_en [15:15] */
#define DSC_C_DFE_4_CTL_DFE_4_EN_MASK                              0x8000
#define DSC_C_DFE_4_CTL_DFE_4_EN_ALIGN                             0
#define DSC_C_DFE_4_CTL_DFE_4_EN_BITS                              1
#define DSC_C_DFE_4_CTL_DFE_4_EN_SHIFT                             15

/* DSC_C :: dfe_4_ctl :: dfe_4_err_sel [14:13] */
#define DSC_C_DFE_4_CTL_DFE_4_ERR_SEL_MASK                         0x6000
#define DSC_C_DFE_4_CTL_DFE_4_ERR_SEL_ALIGN                        0
#define DSC_C_DFE_4_CTL_DFE_4_ERR_SEL_BITS                         2
#define DSC_C_DFE_4_CTL_DFE_4_ERR_SEL_SHIFT                        13

/* DSC_C :: dfe_4_ctl :: dfe_4_gradient_invert [12:12] */
#define DSC_C_DFE_4_CTL_DFE_4_GRADIENT_INVERT_MASK                 0x1000
#define DSC_C_DFE_4_CTL_DFE_4_GRADIENT_INVERT_ALIGN                0
#define DSC_C_DFE_4_CTL_DFE_4_GRADIENT_INVERT_BITS                 1
#define DSC_C_DFE_4_CTL_DFE_4_GRADIENT_INVERT_SHIFT                12

/* DSC_C :: dfe_4_ctl :: dfe_4_err_gain [11:10] */
#define DSC_C_DFE_4_CTL_DFE_4_ERR_GAIN_MASK                        0x0c00
#define DSC_C_DFE_4_CTL_DFE_4_ERR_GAIN_ALIGN                       0
#define DSC_C_DFE_4_CTL_DFE_4_ERR_GAIN_BITS                        2
#define DSC_C_DFE_4_CTL_DFE_4_ERR_GAIN_SHIFT                       10

/* DSC_C :: dfe_4_ctl :: dfe_4_inv_m1 [09:09] */
#define DSC_C_DFE_4_CTL_DFE_4_INV_M1_MASK                          0x0200
#define DSC_C_DFE_4_CTL_DFE_4_INV_M1_ALIGN                         0
#define DSC_C_DFE_4_CTL_DFE_4_INV_M1_BITS                          1
#define DSC_C_DFE_4_CTL_DFE_4_INV_M1_SHIFT                         9

/* DSC_C :: dfe_4_ctl :: dfe_4_inv_p1 [08:08] */
#define DSC_C_DFE_4_CTL_DFE_4_INV_P1_MASK                          0x0100
#define DSC_C_DFE_4_CTL_DFE_4_INV_P1_ALIGN                         0
#define DSC_C_DFE_4_CTL_DFE_4_INV_P1_BITS                          1
#define DSC_C_DFE_4_CTL_DFE_4_INV_P1_SHIFT                         8

/* DSC_C :: dfe_4_ctl :: reserved0 [07:01] */
#define DSC_C_DFE_4_CTL_RESERVED0_MASK                             0x00fe
#define DSC_C_DFE_4_CTL_RESERVED0_ALIGN                            0
#define DSC_C_DFE_4_CTL_RESERVED0_BITS                             7
#define DSC_C_DFE_4_CTL_RESERVED0_SHIFT                            1

/* DSC_C :: dfe_4_ctl :: dfe_4_tap_clr [00:00] */
#define DSC_C_DFE_4_CTL_DFE_4_TAP_CLR_MASK                         0x0001
#define DSC_C_DFE_4_CTL_DFE_4_TAP_CLR_ALIGN                        0
#define DSC_C_DFE_4_CTL_DFE_4_TAP_CLR_BITS                         1
#define DSC_C_DFE_4_CTL_DFE_4_TAP_CLR_SHIFT                        0


/****************************************************************************
 * DSC_C :: dfe_4_pat_ctl
 ***************************************************************************/
/* DSC_C :: dfe_4_pat_ctl :: reserved0 [15:14] */
#define DSC_C_DFE_4_PAT_CTL_RESERVED0_MASK                         0xc000
#define DSC_C_DFE_4_PAT_CTL_RESERVED0_ALIGN                        0
#define DSC_C_DFE_4_PAT_CTL_RESERVED0_BITS                         2
#define DSC_C_DFE_4_PAT_CTL_RESERVED0_SHIFT                        14

/* DSC_C :: dfe_4_pat_ctl :: dfe_4_pattern_bit_en [13:08] */
#define DSC_C_DFE_4_PAT_CTL_DFE_4_PATTERN_BIT_EN_MASK              0x3f00
#define DSC_C_DFE_4_PAT_CTL_DFE_4_PATTERN_BIT_EN_ALIGN             0
#define DSC_C_DFE_4_PAT_CTL_DFE_4_PATTERN_BIT_EN_BITS              6
#define DSC_C_DFE_4_PAT_CTL_DFE_4_PATTERN_BIT_EN_SHIFT             8

/* DSC_C :: dfe_4_pat_ctl :: reserved1 [07:06] */
#define DSC_C_DFE_4_PAT_CTL_RESERVED1_MASK                         0x00c0
#define DSC_C_DFE_4_PAT_CTL_RESERVED1_ALIGN                        0
#define DSC_C_DFE_4_PAT_CTL_RESERVED1_BITS                         2
#define DSC_C_DFE_4_PAT_CTL_RESERVED1_SHIFT                        6

/* DSC_C :: dfe_4_pat_ctl :: dfe_4_pattern [05:00] */
#define DSC_C_DFE_4_PAT_CTL_DFE_4_PATTERN_MASK                     0x003f
#define DSC_C_DFE_4_PAT_CTL_DFE_4_PATTERN_ALIGN                    0
#define DSC_C_DFE_4_PAT_CTL_DFE_4_PATTERN_BITS                     6
#define DSC_C_DFE_4_PAT_CTL_DFE_4_PATTERN_SHIFT                    0


/****************************************************************************
 * DSC_C :: dfe_5_ctl
 ***************************************************************************/
/* DSC_C :: dfe_5_ctl :: dfe_5_en [15:15] */
#define DSC_C_DFE_5_CTL_DFE_5_EN_MASK                              0x8000
#define DSC_C_DFE_5_CTL_DFE_5_EN_ALIGN                             0
#define DSC_C_DFE_5_CTL_DFE_5_EN_BITS                              1
#define DSC_C_DFE_5_CTL_DFE_5_EN_SHIFT                             15

/* DSC_C :: dfe_5_ctl :: dfe_5_err_sel [14:13] */
#define DSC_C_DFE_5_CTL_DFE_5_ERR_SEL_MASK                         0x6000
#define DSC_C_DFE_5_CTL_DFE_5_ERR_SEL_ALIGN                        0
#define DSC_C_DFE_5_CTL_DFE_5_ERR_SEL_BITS                         2
#define DSC_C_DFE_5_CTL_DFE_5_ERR_SEL_SHIFT                        13

/* DSC_C :: dfe_5_ctl :: dfe_5_gradient_invert [12:12] */
#define DSC_C_DFE_5_CTL_DFE_5_GRADIENT_INVERT_MASK                 0x1000
#define DSC_C_DFE_5_CTL_DFE_5_GRADIENT_INVERT_ALIGN                0
#define DSC_C_DFE_5_CTL_DFE_5_GRADIENT_INVERT_BITS                 1
#define DSC_C_DFE_5_CTL_DFE_5_GRADIENT_INVERT_SHIFT                12

/* DSC_C :: dfe_5_ctl :: dfe_5_err_gain [11:10] */
#define DSC_C_DFE_5_CTL_DFE_5_ERR_GAIN_MASK                        0x0c00
#define DSC_C_DFE_5_CTL_DFE_5_ERR_GAIN_ALIGN                       0
#define DSC_C_DFE_5_CTL_DFE_5_ERR_GAIN_BITS                        2
#define DSC_C_DFE_5_CTL_DFE_5_ERR_GAIN_SHIFT                       10

/* DSC_C :: dfe_5_ctl :: dfe_5_inv_m1 [09:09] */
#define DSC_C_DFE_5_CTL_DFE_5_INV_M1_MASK                          0x0200
#define DSC_C_DFE_5_CTL_DFE_5_INV_M1_ALIGN                         0
#define DSC_C_DFE_5_CTL_DFE_5_INV_M1_BITS                          1
#define DSC_C_DFE_5_CTL_DFE_5_INV_M1_SHIFT                         9

/* DSC_C :: dfe_5_ctl :: dfe_5_inv_p1 [08:08] */
#define DSC_C_DFE_5_CTL_DFE_5_INV_P1_MASK                          0x0100
#define DSC_C_DFE_5_CTL_DFE_5_INV_P1_ALIGN                         0
#define DSC_C_DFE_5_CTL_DFE_5_INV_P1_BITS                          1
#define DSC_C_DFE_5_CTL_DFE_5_INV_P1_SHIFT                         8

/* DSC_C :: dfe_5_ctl :: reserved0 [07:01] */
#define DSC_C_DFE_5_CTL_RESERVED0_MASK                             0x00fe
#define DSC_C_DFE_5_CTL_RESERVED0_ALIGN                            0
#define DSC_C_DFE_5_CTL_RESERVED0_BITS                             7
#define DSC_C_DFE_5_CTL_RESERVED0_SHIFT                            1

/* DSC_C :: dfe_5_ctl :: dfe_5_tap_clr [00:00] */
#define DSC_C_DFE_5_CTL_DFE_5_TAP_CLR_MASK                         0x0001
#define DSC_C_DFE_5_CTL_DFE_5_TAP_CLR_ALIGN                        0
#define DSC_C_DFE_5_CTL_DFE_5_TAP_CLR_BITS                         1
#define DSC_C_DFE_5_CTL_DFE_5_TAP_CLR_SHIFT                        0


/****************************************************************************
 * DSC_C :: dfe_5_pat_ctl
 ***************************************************************************/
/* DSC_C :: dfe_5_pat_ctl :: reserved0 [15:14] */
#define DSC_C_DFE_5_PAT_CTL_RESERVED0_MASK                         0xc000
#define DSC_C_DFE_5_PAT_CTL_RESERVED0_ALIGN                        0
#define DSC_C_DFE_5_PAT_CTL_RESERVED0_BITS                         2
#define DSC_C_DFE_5_PAT_CTL_RESERVED0_SHIFT                        14

/* DSC_C :: dfe_5_pat_ctl :: dfe_5_pattern_bit_en [13:08] */
#define DSC_C_DFE_5_PAT_CTL_DFE_5_PATTERN_BIT_EN_MASK              0x3f00
#define DSC_C_DFE_5_PAT_CTL_DFE_5_PATTERN_BIT_EN_ALIGN             0
#define DSC_C_DFE_5_PAT_CTL_DFE_5_PATTERN_BIT_EN_BITS              6
#define DSC_C_DFE_5_PAT_CTL_DFE_5_PATTERN_BIT_EN_SHIFT             8

/* DSC_C :: dfe_5_pat_ctl :: reserved1 [07:06] */
#define DSC_C_DFE_5_PAT_CTL_RESERVED1_MASK                         0x00c0
#define DSC_C_DFE_5_PAT_CTL_RESERVED1_ALIGN                        0
#define DSC_C_DFE_5_PAT_CTL_RESERVED1_BITS                         2
#define DSC_C_DFE_5_PAT_CTL_RESERVED1_SHIFT                        6

/* DSC_C :: dfe_5_pat_ctl :: dfe_5_pattern [05:00] */
#define DSC_C_DFE_5_PAT_CTL_DFE_5_PATTERN_MASK                     0x003f
#define DSC_C_DFE_5_PAT_CTL_DFE_5_PATTERN_ALIGN                    0
#define DSC_C_DFE_5_PAT_CTL_DFE_5_PATTERN_BITS                     6
#define DSC_C_DFE_5_PAT_CTL_DFE_5_PATTERN_SHIFT                    0


/****************************************************************************
 * DSC_C :: dfe_vga_override
 ***************************************************************************/
/* DSC_C :: dfe_vga_override :: dfe_vga_write_en [15:15] */
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_EN_MASK               0x8000
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_EN_ALIGN              0
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_EN_BITS               1
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_EN_SHIFT              15

/* DSC_C :: dfe_vga_override :: reserved0 [14:14] */
#define DSC_C_DFE_VGA_OVERRIDE_RESERVED0_MASK                      0x4000
#define DSC_C_DFE_VGA_OVERRIDE_RESERVED0_ALIGN                     0
#define DSC_C_DFE_VGA_OVERRIDE_RESERVED0_BITS                      1
#define DSC_C_DFE_VGA_OVERRIDE_RESERVED0_SHIFT                     14

/* DSC_C :: dfe_vga_override :: dfe_vga_write_tapsel [13:09] */
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_TAPSEL_MASK           0x3e00
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_TAPSEL_ALIGN          0
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_TAPSEL_BITS           5
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_TAPSEL_SHIFT          9

/* DSC_C :: dfe_vga_override :: dfe_vga_write_val [08:00] */
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_VAL_MASK              0x01ff
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_VAL_ALIGN             0
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_VAL_BITS              9
#define DSC_C_DFE_VGA_OVERRIDE_DFE_VGA_WRITE_VAL_SHIFT             0


/****************************************************************************
 * DSC_C :: vga_ctl
 ***************************************************************************/
/* DSC_C :: vga_ctl :: vga_en [15:15] */
#define DSC_C_VGA_CTL_VGA_EN_MASK                                  0x8000
#define DSC_C_VGA_CTL_VGA_EN_ALIGN                                 0
#define DSC_C_VGA_CTL_VGA_EN_BITS                                  1
#define DSC_C_VGA_CTL_VGA_EN_SHIFT                                 15

/* DSC_C :: vga_ctl :: vga_err_sel [14:13] */
#define DSC_C_VGA_CTL_VGA_ERR_SEL_MASK                             0x6000
#define DSC_C_VGA_CTL_VGA_ERR_SEL_ALIGN                            0
#define DSC_C_VGA_CTL_VGA_ERR_SEL_BITS                             2
#define DSC_C_VGA_CTL_VGA_ERR_SEL_SHIFT                            13

/* DSC_C :: vga_ctl :: vga_gradient_invert [12:12] */
#define DSC_C_VGA_CTL_VGA_GRADIENT_INVERT_MASK                     0x1000
#define DSC_C_VGA_CTL_VGA_GRADIENT_INVERT_ALIGN                    0
#define DSC_C_VGA_CTL_VGA_GRADIENT_INVERT_BITS                     1
#define DSC_C_VGA_CTL_VGA_GRADIENT_INVERT_SHIFT                    12

/* DSC_C :: vga_ctl :: vga_err_gain [11:10] */
#define DSC_C_VGA_CTL_VGA_ERR_GAIN_MASK                            0x0c00
#define DSC_C_VGA_CTL_VGA_ERR_GAIN_ALIGN                           0
#define DSC_C_VGA_CTL_VGA_ERR_GAIN_BITS                            2
#define DSC_C_VGA_CTL_VGA_ERR_GAIN_SHIFT                           10

/* DSC_C :: vga_ctl :: vga_inv_m1 [09:09] */
#define DSC_C_VGA_CTL_VGA_INV_M1_MASK                              0x0200
#define DSC_C_VGA_CTL_VGA_INV_M1_ALIGN                             0
#define DSC_C_VGA_CTL_VGA_INV_M1_BITS                              1
#define DSC_C_VGA_CTL_VGA_INV_M1_SHIFT                             9

/* DSC_C :: vga_ctl :: vga_inv_p1 [08:08] */
#define DSC_C_VGA_CTL_VGA_INV_P1_MASK                              0x0100
#define DSC_C_VGA_CTL_VGA_INV_P1_ALIGN                             0
#define DSC_C_VGA_CTL_VGA_INV_P1_BITS                              1
#define DSC_C_VGA_CTL_VGA_INV_P1_SHIFT                             8

/* DSC_C :: vga_ctl :: vga_update_gain [07:06] */
#define DSC_C_VGA_CTL_VGA_UPDATE_GAIN_MASK                         0x00c0
#define DSC_C_VGA_CTL_VGA_UPDATE_GAIN_ALIGN                        0
#define DSC_C_VGA_CTL_VGA_UPDATE_GAIN_BITS                         2
#define DSC_C_VGA_CTL_VGA_UPDATE_GAIN_SHIFT                        6

/* DSC_C :: vga_ctl :: reserved0 [05:04] */
#define DSC_C_VGA_CTL_RESERVED0_MASK                               0x0030
#define DSC_C_VGA_CTL_RESERVED0_ALIGN                              0
#define DSC_C_VGA_CTL_RESERVED0_BITS                               2
#define DSC_C_VGA_CTL_RESERVED0_SHIFT                              4

/* DSC_C :: vga_ctl :: vga_update_style [03:02] */
#define DSC_C_VGA_CTL_VGA_UPDATE_STYLE_MASK                        0x000c
#define DSC_C_VGA_CTL_VGA_UPDATE_STYLE_ALIGN                       0
#define DSC_C_VGA_CTL_VGA_UPDATE_STYLE_BITS                        2
#define DSC_C_VGA_CTL_VGA_UPDATE_STYLE_SHIFT                       2

/* DSC_C :: vga_ctl :: vga_acc_hys_en [01:01] */
#define DSC_C_VGA_CTL_VGA_ACC_HYS_EN_MASK                          0x0002
#define DSC_C_VGA_CTL_VGA_ACC_HYS_EN_ALIGN                         0
#define DSC_C_VGA_CTL_VGA_ACC_HYS_EN_BITS                          1
#define DSC_C_VGA_CTL_VGA_ACC_HYS_EN_SHIFT                         1

/* DSC_C :: vga_ctl :: vga_tap_clr [00:00] */
#define DSC_C_VGA_CTL_VGA_TAP_CLR_MASK                             0x0001
#define DSC_C_VGA_CTL_VGA_TAP_CLR_ALIGN                            0
#define DSC_C_VGA_CTL_VGA_TAP_CLR_BITS                             1
#define DSC_C_VGA_CTL_VGA_TAP_CLR_SHIFT                            0


/****************************************************************************
 * DSC_C :: vga_pat_eyediag_ctl
 ***************************************************************************/
/* DSC_C :: vga_pat_eyediag_ctl :: p1_eyediag_en [15:15] */
#define DSC_C_VGA_PAT_EYEDIAG_CTL_P1_EYEDIAG_EN_MASK               0x8000
#define DSC_C_VGA_PAT_EYEDIAG_CTL_P1_EYEDIAG_EN_ALIGN              0
#define DSC_C_VGA_PAT_EYEDIAG_CTL_P1_EYEDIAG_EN_BITS               1
#define DSC_C_VGA_PAT_EYEDIAG_CTL_P1_EYEDIAG_EN_SHIFT              15

/* DSC_C :: vga_pat_eyediag_ctl :: p1_eyediag_clr [14:14] */
#define DSC_C_VGA_PAT_EYEDIAG_CTL_P1_EYEDIAG_CLR_MASK              0x4000
#define DSC_C_VGA_PAT_EYEDIAG_CTL_P1_EYEDIAG_CLR_ALIGN             0
#define DSC_C_VGA_PAT_EYEDIAG_CTL_P1_EYEDIAG_CLR_BITS              1
#define DSC_C_VGA_PAT_EYEDIAG_CTL_P1_EYEDIAG_CLR_SHIFT             14

/* DSC_C :: vga_pat_eyediag_ctl :: reserved0 [13:08] */
#define DSC_C_VGA_PAT_EYEDIAG_CTL_RESERVED0_MASK                   0x3f00
#define DSC_C_VGA_PAT_EYEDIAG_CTL_RESERVED0_ALIGN                  0
#define DSC_C_VGA_PAT_EYEDIAG_CTL_RESERVED0_BITS                   6
#define DSC_C_VGA_PAT_EYEDIAG_CTL_RESERVED0_SHIFT                  8

/* DSC_C :: vga_pat_eyediag_ctl :: vga_pattern_bit_en [07:04] */
#define DSC_C_VGA_PAT_EYEDIAG_CTL_VGA_PATTERN_BIT_EN_MASK          0x00f0
#define DSC_C_VGA_PAT_EYEDIAG_CTL_VGA_PATTERN_BIT_EN_ALIGN         0
#define DSC_C_VGA_PAT_EYEDIAG_CTL_VGA_PATTERN_BIT_EN_BITS          4
#define DSC_C_VGA_PAT_EYEDIAG_CTL_VGA_PATTERN_BIT_EN_SHIFT         4

/* DSC_C :: vga_pat_eyediag_ctl :: vga_pattern [03:00] */
#define DSC_C_VGA_PAT_EYEDIAG_CTL_VGA_PATTERN_MASK                 0x000f
#define DSC_C_VGA_PAT_EYEDIAG_CTL_VGA_PATTERN_ALIGN                0
#define DSC_C_VGA_PAT_EYEDIAG_CTL_VGA_PATTERN_BITS                 4
#define DSC_C_VGA_PAT_EYEDIAG_CTL_VGA_PATTERN_SHIFT                0


/****************************************************************************
 * merlin_gallardo_dsc_blk_DSC_D
 ***************************************************************************/
/****************************************************************************
 * DSC_D :: trnsum_ctl_1
 ***************************************************************************/
/* DSC_D :: trnsum_ctl_1 :: trnsum_en [15:15] */
#define DSC_D_TRNSUM_CTL_1_TRNSUM_EN_MASK                          0x8000
#define DSC_D_TRNSUM_CTL_1_TRNSUM_EN_ALIGN                         0
#define DSC_D_TRNSUM_CTL_1_TRNSUM_EN_BITS                          1
#define DSC_D_TRNSUM_CTL_1_TRNSUM_EN_SHIFT                         15

/* DSC_D :: trnsum_ctl_1 :: trnsum_err_sel [14:12] */
#define DSC_D_TRNSUM_CTL_1_TRNSUM_ERR_SEL_MASK                     0x7000
#define DSC_D_TRNSUM_CTL_1_TRNSUM_ERR_SEL_ALIGN                    0
#define DSC_D_TRNSUM_CTL_1_TRNSUM_ERR_SEL_BITS                     3
#define DSC_D_TRNSUM_CTL_1_TRNSUM_ERR_SEL_SHIFT                    12

/* DSC_D :: trnsum_ctl_1 :: trnsum_random_tapsel_disable [11:11] */
#define DSC_D_TRNSUM_CTL_1_TRNSUM_RANDOM_TAPSEL_DISABLE_MASK       0x0800
#define DSC_D_TRNSUM_CTL_1_TRNSUM_RANDOM_TAPSEL_DISABLE_ALIGN      0
#define DSC_D_TRNSUM_CTL_1_TRNSUM_RANDOM_TAPSEL_DISABLE_BITS       1
#define DSC_D_TRNSUM_CTL_1_TRNSUM_RANDOM_TAPSEL_DISABLE_SHIFT      11

/* DSC_D :: trnsum_ctl_1 :: trnsum_inv_pattern_en [10:10] */
#define DSC_D_TRNSUM_CTL_1_TRNSUM_INV_PATTERN_EN_MASK              0x0400
#define DSC_D_TRNSUM_CTL_1_TRNSUM_INV_PATTERN_EN_ALIGN             0
#define DSC_D_TRNSUM_CTL_1_TRNSUM_INV_PATTERN_EN_BITS              1
#define DSC_D_TRNSUM_CTL_1_TRNSUM_INV_PATTERN_EN_SHIFT             10

/* DSC_D :: trnsum_ctl_1 :: trnsum_pattern_full_check_off [09:09] */
#define DSC_D_TRNSUM_CTL_1_TRNSUM_PATTERN_FULL_CHECK_OFF_MASK      0x0200
#define DSC_D_TRNSUM_CTL_1_TRNSUM_PATTERN_FULL_CHECK_OFF_ALIGN     0
#define DSC_D_TRNSUM_CTL_1_TRNSUM_PATTERN_FULL_CHECK_OFF_BITS      1
#define DSC_D_TRNSUM_CTL_1_TRNSUM_PATTERN_FULL_CHECK_OFF_SHIFT     9

/* DSC_D :: trnsum_ctl_1 :: reserved0 [08:08] */
#define DSC_D_TRNSUM_CTL_1_RESERVED0_MASK                          0x0100
#define DSC_D_TRNSUM_CTL_1_RESERVED0_ALIGN                         0
#define DSC_D_TRNSUM_CTL_1_RESERVED0_BITS                          1
#define DSC_D_TRNSUM_CTL_1_RESERVED0_SHIFT                         8

/* DSC_D :: trnsum_ctl_1 :: trnsum_gain [07:06] */
#define DSC_D_TRNSUM_CTL_1_TRNSUM_GAIN_MASK                        0x00c0
#define DSC_D_TRNSUM_CTL_1_TRNSUM_GAIN_ALIGN                       0
#define DSC_D_TRNSUM_CTL_1_TRNSUM_GAIN_BITS                        2
#define DSC_D_TRNSUM_CTL_1_TRNSUM_GAIN_SHIFT                       6

/* DSC_D :: trnsum_ctl_1 :: trnsum_eye_closure_en [05:05] */
#define DSC_D_TRNSUM_CTL_1_TRNSUM_EYE_CLOSURE_EN_MASK              0x0020
#define DSC_D_TRNSUM_CTL_1_TRNSUM_EYE_CLOSURE_EN_ALIGN             0
#define DSC_D_TRNSUM_CTL_1_TRNSUM_EYE_CLOSURE_EN_BITS              1
#define DSC_D_TRNSUM_CTL_1_TRNSUM_EYE_CLOSURE_EN_SHIFT             5

/* DSC_D :: trnsum_ctl_1 :: cdr_qphase_mult_en [04:04] */
#define DSC_D_TRNSUM_CTL_1_CDR_QPHASE_MULT_EN_MASK                 0x0010
#define DSC_D_TRNSUM_CTL_1_CDR_QPHASE_MULT_EN_ALIGN                0
#define DSC_D_TRNSUM_CTL_1_CDR_QPHASE_MULT_EN_BITS                 1
#define DSC_D_TRNSUM_CTL_1_CDR_QPHASE_MULT_EN_SHIFT                4

/* DSC_D :: trnsum_ctl_1 :: trnsum_tap_range_sel [03:02] */
#define DSC_D_TRNSUM_CTL_1_TRNSUM_TAP_RANGE_SEL_MASK               0x000c
#define DSC_D_TRNSUM_CTL_1_TRNSUM_TAP_RANGE_SEL_ALIGN              0
#define DSC_D_TRNSUM_CTL_1_TRNSUM_TAP_RANGE_SEL_BITS               2
#define DSC_D_TRNSUM_CTL_1_TRNSUM_TAP_RANGE_SEL_SHIFT              2

/* DSC_D :: trnsum_ctl_1 :: reserved1 [01:00] */
#define DSC_D_TRNSUM_CTL_1_RESERVED1_MASK                          0x0003
#define DSC_D_TRNSUM_CTL_1_RESERVED1_ALIGN                         0
#define DSC_D_TRNSUM_CTL_1_RESERVED1_BITS                          2
#define DSC_D_TRNSUM_CTL_1_RESERVED1_SHIFT                         0


/****************************************************************************
 * DSC_D :: trnsum_ctl_2
 ***************************************************************************/
/* DSC_D :: trnsum_ctl_2 :: trnsum_pattern [15:08] */
#define DSC_D_TRNSUM_CTL_2_TRNSUM_PATTERN_MASK                     0xff00
#define DSC_D_TRNSUM_CTL_2_TRNSUM_PATTERN_ALIGN                    0
#define DSC_D_TRNSUM_CTL_2_TRNSUM_PATTERN_BITS                     8
#define DSC_D_TRNSUM_CTL_2_TRNSUM_PATTERN_SHIFT                    8

/* DSC_D :: trnsum_ctl_2 :: trnsum_pattern_bit_en [07:00] */
#define DSC_D_TRNSUM_CTL_2_TRNSUM_PATTERN_BIT_EN_MASK              0x00ff
#define DSC_D_TRNSUM_CTL_2_TRNSUM_PATTERN_BIT_EN_ALIGN             0
#define DSC_D_TRNSUM_CTL_2_TRNSUM_PATTERN_BIT_EN_BITS              8
#define DSC_D_TRNSUM_CTL_2_TRNSUM_PATTERN_BIT_EN_SHIFT             0


/****************************************************************************
 * DSC_D :: trnsum_ctl_3
 ***************************************************************************/
/* DSC_D :: trnsum_ctl_3 :: trnsum_tap_en [15:08] */
#define DSC_D_TRNSUM_CTL_3_TRNSUM_TAP_EN_MASK                      0xff00
#define DSC_D_TRNSUM_CTL_3_TRNSUM_TAP_EN_ALIGN                     0
#define DSC_D_TRNSUM_CTL_3_TRNSUM_TAP_EN_BITS                      8
#define DSC_D_TRNSUM_CTL_3_TRNSUM_TAP_EN_SHIFT                     8

/* DSC_D :: trnsum_ctl_3 :: trnsum_tap_sign [07:00] */
#define DSC_D_TRNSUM_CTL_3_TRNSUM_TAP_SIGN_MASK                    0x00ff
#define DSC_D_TRNSUM_CTL_3_TRNSUM_TAP_SIGN_ALIGN                   0
#define DSC_D_TRNSUM_CTL_3_TRNSUM_TAP_SIGN_BITS                    8
#define DSC_D_TRNSUM_CTL_3_TRNSUM_TAP_SIGN_SHIFT                   0


/****************************************************************************
 * DSC_D :: trnsum_ctl_4
 ***************************************************************************/
/* DSC_D :: trnsum_ctl_4 :: tdr_trnsum_en [15:15] */
#define DSC_D_TRNSUM_CTL_4_TDR_TRNSUM_EN_MASK                      0x8000
#define DSC_D_TRNSUM_CTL_4_TDR_TRNSUM_EN_ALIGN                     0
#define DSC_D_TRNSUM_CTL_4_TDR_TRNSUM_EN_BITS                      1
#define DSC_D_TRNSUM_CTL_4_TDR_TRNSUM_EN_SHIFT                     15

/* DSC_D :: trnsum_ctl_4 :: tdr_cycle_bin [14:11] */
#define DSC_D_TRNSUM_CTL_4_TDR_CYCLE_BIN_MASK                      0x7800
#define DSC_D_TRNSUM_CTL_4_TDR_CYCLE_BIN_ALIGN                     0
#define DSC_D_TRNSUM_CTL_4_TDR_CYCLE_BIN_BITS                      4
#define DSC_D_TRNSUM_CTL_4_TDR_CYCLE_BIN_SHIFT                     11

/* DSC_D :: trnsum_ctl_4 :: tdr_cycle_sel [10:07] */
#define DSC_D_TRNSUM_CTL_4_TDR_CYCLE_SEL_MASK                      0x0780
#define DSC_D_TRNSUM_CTL_4_TDR_CYCLE_SEL_ALIGN                     0
#define DSC_D_TRNSUM_CTL_4_TDR_CYCLE_SEL_BITS                      4
#define DSC_D_TRNSUM_CTL_4_TDR_CYCLE_SEL_SHIFT                     7

/* DSC_D :: trnsum_ctl_4 :: tdr_bit_sel [06:02] */
#define DSC_D_TRNSUM_CTL_4_TDR_BIT_SEL_MASK                        0x007c
#define DSC_D_TRNSUM_CTL_4_TDR_BIT_SEL_ALIGN                       0
#define DSC_D_TRNSUM_CTL_4_TDR_BIT_SEL_BITS                        5
#define DSC_D_TRNSUM_CTL_4_TDR_BIT_SEL_SHIFT                       2

/* DSC_D :: trnsum_ctl_4 :: trnsum_unsigned_flip [01:01] */
#define DSC_D_TRNSUM_CTL_4_TRNSUM_UNSIGNED_FLIP_MASK               0x0002
#define DSC_D_TRNSUM_CTL_4_TRNSUM_UNSIGNED_FLIP_ALIGN              0
#define DSC_D_TRNSUM_CTL_4_TRNSUM_UNSIGNED_FLIP_BITS               1
#define DSC_D_TRNSUM_CTL_4_TRNSUM_UNSIGNED_FLIP_SHIFT              1

/* DSC_D :: trnsum_ctl_4 :: trnsum_unsigned_corr [00:00] */
#define DSC_D_TRNSUM_CTL_4_TRNSUM_UNSIGNED_CORR_MASK               0x0001
#define DSC_D_TRNSUM_CTL_4_TRNSUM_UNSIGNED_CORR_ALIGN              0
#define DSC_D_TRNSUM_CTL_4_TRNSUM_UNSIGNED_CORR_BITS               1
#define DSC_D_TRNSUM_CTL_4_TRNSUM_UNSIGNED_CORR_SHIFT              0


/****************************************************************************
 * DSC_D :: trnsum_sts_1
 ***************************************************************************/
/* DSC_D :: trnsum_sts_1 :: trnsum_e_high [15:00] */
#define DSC_D_TRNSUM_STS_1_TRNSUM_E_HIGH_MASK                      0xffff
#define DSC_D_TRNSUM_STS_1_TRNSUM_E_HIGH_ALIGN                     0
#define DSC_D_TRNSUM_STS_1_TRNSUM_E_HIGH_BITS                      16
#define DSC_D_TRNSUM_STS_1_TRNSUM_E_HIGH_SHIFT                     0


/****************************************************************************
 * DSC_D :: trnsum_sts_2
 ***************************************************************************/
/* DSC_D :: trnsum_sts_2 :: reserved0 [15:08] */
#define DSC_D_TRNSUM_STS_2_RESERVED0_MASK                          0xff00
#define DSC_D_TRNSUM_STS_2_RESERVED0_ALIGN                         0
#define DSC_D_TRNSUM_STS_2_RESERVED0_BITS                          8
#define DSC_D_TRNSUM_STS_2_RESERVED0_SHIFT                         8

/* DSC_D :: trnsum_sts_2 :: trnsum_e_low [07:00] */
#define DSC_D_TRNSUM_STS_2_TRNSUM_E_LOW_MASK                       0x00ff
#define DSC_D_TRNSUM_STS_2_TRNSUM_E_LOW_ALIGN                      0
#define DSC_D_TRNSUM_STS_2_TRNSUM_E_LOW_BITS                       8
#define DSC_D_TRNSUM_STS_2_TRNSUM_E_LOW_SHIFT                      0


/****************************************************************************
 * DSC_D :: trnsum_sts_3
 ***************************************************************************/
/* DSC_D :: trnsum_sts_3 :: trnsum_o_high [15:00] */
#define DSC_D_TRNSUM_STS_3_TRNSUM_O_HIGH_MASK                      0xffff
#define DSC_D_TRNSUM_STS_3_TRNSUM_O_HIGH_ALIGN                     0
#define DSC_D_TRNSUM_STS_3_TRNSUM_O_HIGH_BITS                      16
#define DSC_D_TRNSUM_STS_3_TRNSUM_O_HIGH_SHIFT                     0


/****************************************************************************
 * DSC_D :: trnsum_sts_4
 ***************************************************************************/
/* DSC_D :: trnsum_sts_4 :: reserved0 [15:08] */
#define DSC_D_TRNSUM_STS_4_RESERVED0_MASK                          0xff00
#define DSC_D_TRNSUM_STS_4_RESERVED0_ALIGN                         0
#define DSC_D_TRNSUM_STS_4_RESERVED0_BITS                          8
#define DSC_D_TRNSUM_STS_4_RESERVED0_SHIFT                         8

/* DSC_D :: trnsum_sts_4 :: trnsum_o_low [07:00] */
#define DSC_D_TRNSUM_STS_4_TRNSUM_O_LOW_MASK                       0x00ff
#define DSC_D_TRNSUM_STS_4_TRNSUM_O_LOW_ALIGN                      0
#define DSC_D_TRNSUM_STS_4_TRNSUM_O_LOW_BITS                       8
#define DSC_D_TRNSUM_STS_4_TRNSUM_O_LOW_SHIFT                      0


/****************************************************************************
 * DSC_D :: trnsum_sts_5
 ***************************************************************************/
/* DSC_D :: trnsum_sts_5 :: trnsum_high [15:00] */
#define DSC_D_TRNSUM_STS_5_TRNSUM_HIGH_MASK                        0xffff
#define DSC_D_TRNSUM_STS_5_TRNSUM_HIGH_ALIGN                       0
#define DSC_D_TRNSUM_STS_5_TRNSUM_HIGH_BITS                        16
#define DSC_D_TRNSUM_STS_5_TRNSUM_HIGH_SHIFT                       0


/****************************************************************************
 * DSC_D :: trnsum_sts_6
 ***************************************************************************/
/* DSC_D :: trnsum_sts_6 :: reserved0 [15:10] */
#define DSC_D_TRNSUM_STS_6_RESERVED0_MASK                          0xfc00
#define DSC_D_TRNSUM_STS_6_RESERVED0_ALIGN                         0
#define DSC_D_TRNSUM_STS_6_RESERVED0_BITS                          6
#define DSC_D_TRNSUM_STS_6_RESERVED0_SHIFT                         10

/* DSC_D :: trnsum_sts_6 :: trnsum_low [09:00] */
#define DSC_D_TRNSUM_STS_6_TRNSUM_LOW_MASK                         0x03ff
#define DSC_D_TRNSUM_STS_6_TRNSUM_LOW_ALIGN                        0
#define DSC_D_TRNSUM_STS_6_TRNSUM_LOW_BITS                         10
#define DSC_D_TRNSUM_STS_6_TRNSUM_LOW_SHIFT                        0


/****************************************************************************
 * DSC_D :: vga_p1eyediag_sts
 ***************************************************************************/
/* DSC_D :: vga_p1eyediag_sts :: reserved0 [15:14] */
#define DSC_D_VGA_P1EYEDIAG_STS_RESERVED0_MASK                     0xc000
#define DSC_D_VGA_P1EYEDIAG_STS_RESERVED0_ALIGN                    0
#define DSC_D_VGA_P1EYEDIAG_STS_RESERVED0_BITS                     2
#define DSC_D_VGA_P1EYEDIAG_STS_RESERVED0_SHIFT                    14

/* DSC_D :: vga_p1eyediag_sts :: p1_eyediag_bin [13:08] */
#define DSC_D_VGA_P1EYEDIAG_STS_P1_EYEDIAG_BIN_MASK                0x3f00
#define DSC_D_VGA_P1EYEDIAG_STS_P1_EYEDIAG_BIN_ALIGN               0
#define DSC_D_VGA_P1EYEDIAG_STS_P1_EYEDIAG_BIN_BITS                6
#define DSC_D_VGA_P1EYEDIAG_STS_P1_EYEDIAG_BIN_SHIFT               8

/* DSC_D :: vga_p1eyediag_sts :: reserved1 [07:06] */
#define DSC_D_VGA_P1EYEDIAG_STS_RESERVED1_MASK                     0x00c0
#define DSC_D_VGA_P1EYEDIAG_STS_RESERVED1_ALIGN                    0
#define DSC_D_VGA_P1EYEDIAG_STS_RESERVED1_BITS                     2
#define DSC_D_VGA_P1EYEDIAG_STS_RESERVED1_SHIFT                    6

/* DSC_D :: vga_p1eyediag_sts :: vga_bin [05:00] */
#define DSC_D_VGA_P1EYEDIAG_STS_VGA_BIN_MASK                       0x003f
#define DSC_D_VGA_P1EYEDIAG_STS_VGA_BIN_ALIGN                      0
#define DSC_D_VGA_P1EYEDIAG_STS_VGA_BIN_BITS                       6
#define DSC_D_VGA_P1EYEDIAG_STS_VGA_BIN_SHIFT                      0


/****************************************************************************
 * DSC_D :: dfe_1_sts
 ***************************************************************************/
/* DSC_D :: dfe_1_sts :: dfe_1_wants_negative [15:15] */
#define DSC_D_DFE_1_STS_DFE_1_WANTS_NEGATIVE_MASK                  0x8000
#define DSC_D_DFE_1_STS_DFE_1_WANTS_NEGATIVE_ALIGN                 0
#define DSC_D_DFE_1_STS_DFE_1_WANTS_NEGATIVE_BITS                  1
#define DSC_D_DFE_1_STS_DFE_1_WANTS_NEGATIVE_SHIFT                 15

/* DSC_D :: dfe_1_sts :: reserved0 [14:14] */
#define DSC_D_DFE_1_STS_RESERVED0_MASK                             0x4000
#define DSC_D_DFE_1_STS_RESERVED0_ALIGN                            0
#define DSC_D_DFE_1_STS_RESERVED0_BITS                             1
#define DSC_D_DFE_1_STS_RESERVED0_SHIFT                            14

/* DSC_D :: dfe_1_sts :: dfe_1_e [13:11] */
#define DSC_D_DFE_1_STS_DFE_1_E_MASK                               0x3800
#define DSC_D_DFE_1_STS_DFE_1_E_ALIGN                              0
#define DSC_D_DFE_1_STS_DFE_1_E_BITS                               3
#define DSC_D_DFE_1_STS_DFE_1_E_SHIFT                              11

/* DSC_D :: dfe_1_sts :: dfe_1_o [10:08] */
#define DSC_D_DFE_1_STS_DFE_1_O_MASK                               0x0700
#define DSC_D_DFE_1_STS_DFE_1_O_ALIGN                              0
#define DSC_D_DFE_1_STS_DFE_1_O_BITS                               3
#define DSC_D_DFE_1_STS_DFE_1_O_SHIFT                              8

/* DSC_D :: dfe_1_sts :: reserved1 [07:06] */
#define DSC_D_DFE_1_STS_RESERVED1_MASK                             0x00c0
#define DSC_D_DFE_1_STS_RESERVED1_ALIGN                            0
#define DSC_D_DFE_1_STS_RESERVED1_BITS                             2
#define DSC_D_DFE_1_STS_RESERVED1_SHIFT                            6

/* DSC_D :: dfe_1_sts :: dfe_1_cmn [05:00] */
#define DSC_D_DFE_1_STS_DFE_1_CMN_MASK                             0x003f
#define DSC_D_DFE_1_STS_DFE_1_CMN_ALIGN                            0
#define DSC_D_DFE_1_STS_DFE_1_CMN_BITS                             6
#define DSC_D_DFE_1_STS_DFE_1_CMN_SHIFT                            0


/****************************************************************************
 * DSC_D :: dfe_2_sts
 ***************************************************************************/
/* DSC_D :: dfe_2_sts :: dfe_2_wants_negative [15:15] */
#define DSC_D_DFE_2_STS_DFE_2_WANTS_NEGATIVE_MASK                  0x8000
#define DSC_D_DFE_2_STS_DFE_2_WANTS_NEGATIVE_ALIGN                 0
#define DSC_D_DFE_2_STS_DFE_2_WANTS_NEGATIVE_BITS                  1
#define DSC_D_DFE_2_STS_DFE_2_WANTS_NEGATIVE_SHIFT                 15

/* DSC_D :: dfe_2_sts :: reserved0 [14:14] */
#define DSC_D_DFE_2_STS_RESERVED0_MASK                             0x4000
#define DSC_D_DFE_2_STS_RESERVED0_ALIGN                            0
#define DSC_D_DFE_2_STS_RESERVED0_BITS                             1
#define DSC_D_DFE_2_STS_RESERVED0_SHIFT                            14

/* DSC_D :: dfe_2_sts :: dfe_2_e [13:11] */
#define DSC_D_DFE_2_STS_DFE_2_E_MASK                               0x3800
#define DSC_D_DFE_2_STS_DFE_2_E_ALIGN                              0
#define DSC_D_DFE_2_STS_DFE_2_E_BITS                               3
#define DSC_D_DFE_2_STS_DFE_2_E_SHIFT                              11

/* DSC_D :: dfe_2_sts :: dfe_2_o [10:08] */
#define DSC_D_DFE_2_STS_DFE_2_O_MASK                               0x0700
#define DSC_D_DFE_2_STS_DFE_2_O_ALIGN                              0
#define DSC_D_DFE_2_STS_DFE_2_O_BITS                               3
#define DSC_D_DFE_2_STS_DFE_2_O_SHIFT                              8

/* DSC_D :: dfe_2_sts :: reserved1 [07:07] */
#define DSC_D_DFE_2_STS_RESERVED1_MASK                             0x0080
#define DSC_D_DFE_2_STS_RESERVED1_ALIGN                            0
#define DSC_D_DFE_2_STS_RESERVED1_BITS                             1
#define DSC_D_DFE_2_STS_RESERVED1_SHIFT                            7

/* DSC_D :: dfe_2_sts :: dfe_2_se [06:06] */
#define DSC_D_DFE_2_STS_DFE_2_SE_MASK                              0x0040
#define DSC_D_DFE_2_STS_DFE_2_SE_ALIGN                             0
#define DSC_D_DFE_2_STS_DFE_2_SE_BITS                              1
#define DSC_D_DFE_2_STS_DFE_2_SE_SHIFT                             6

/* DSC_D :: dfe_2_sts :: dfe_2_so [05:05] */
#define DSC_D_DFE_2_STS_DFE_2_SO_MASK                              0x0020
#define DSC_D_DFE_2_STS_DFE_2_SO_ALIGN                             0
#define DSC_D_DFE_2_STS_DFE_2_SO_BITS                              1
#define DSC_D_DFE_2_STS_DFE_2_SO_SHIFT                             5

/* DSC_D :: dfe_2_sts :: dfe_2_cmn [04:00] */
#define DSC_D_DFE_2_STS_DFE_2_CMN_MASK                             0x001f
#define DSC_D_DFE_2_STS_DFE_2_CMN_ALIGN                            0
#define DSC_D_DFE_2_STS_DFE_2_CMN_BITS                             5
#define DSC_D_DFE_2_STS_DFE_2_CMN_SHIFT                            0


/****************************************************************************
 * DSC_D :: dfe_3_4_5_sts
 ***************************************************************************/
/* DSC_D :: dfe_3_4_5_sts :: dfe_5_cmn [15:11] */
#define DSC_D_DFE_3_4_5_STS_DFE_5_CMN_MASK                         0xf800
#define DSC_D_DFE_3_4_5_STS_DFE_5_CMN_ALIGN                        0
#define DSC_D_DFE_3_4_5_STS_DFE_5_CMN_BITS                         5
#define DSC_D_DFE_3_4_5_STS_DFE_5_CMN_SHIFT                        11

/* DSC_D :: dfe_3_4_5_sts :: dfe_4_cmn [10:06] */
#define DSC_D_DFE_3_4_5_STS_DFE_4_CMN_MASK                         0x07c0
#define DSC_D_DFE_3_4_5_STS_DFE_4_CMN_ALIGN                        0
#define DSC_D_DFE_3_4_5_STS_DFE_4_CMN_BITS                         5
#define DSC_D_DFE_3_4_5_STS_DFE_4_CMN_SHIFT                        6

/* DSC_D :: dfe_3_4_5_sts :: dfe_3_cmn [05:00] */
#define DSC_D_DFE_3_4_5_STS_DFE_3_CMN_MASK                         0x003f
#define DSC_D_DFE_3_4_5_STS_DFE_3_CMN_ALIGN                        0
#define DSC_D_DFE_3_4_5_STS_DFE_3_CMN_BITS                         6
#define DSC_D_DFE_3_4_5_STS_DFE_3_CMN_SHIFT                        0


/****************************************************************************
 * DSC_D :: vga_tap_bin
 ***************************************************************************/
/* DSC_D :: vga_tap_bin :: reserved0 [15:12] */
#define DSC_D_VGA_TAP_BIN_RESERVED0_MASK                           0xf000
#define DSC_D_VGA_TAP_BIN_RESERVED0_ALIGN                          0
#define DSC_D_VGA_TAP_BIN_RESERVED0_BITS                           4
#define DSC_D_VGA_TAP_BIN_RESERVED0_SHIFT                          12

/* DSC_D :: vga_tap_bin :: vga3_ctrl_bin [11:08] */
#define DSC_D_VGA_TAP_BIN_VGA3_CTRL_BIN_MASK                       0x0f00
#define DSC_D_VGA_TAP_BIN_VGA3_CTRL_BIN_ALIGN                      0
#define DSC_D_VGA_TAP_BIN_VGA3_CTRL_BIN_BITS                       4
#define DSC_D_VGA_TAP_BIN_VGA3_CTRL_BIN_SHIFT                      8

/* DSC_D :: vga_tap_bin :: vga2_ctrl_bin [07:04] */
#define DSC_D_VGA_TAP_BIN_VGA2_CTRL_BIN_MASK                       0x00f0
#define DSC_D_VGA_TAP_BIN_VGA2_CTRL_BIN_ALIGN                      0
#define DSC_D_VGA_TAP_BIN_VGA2_CTRL_BIN_BITS                       4
#define DSC_D_VGA_TAP_BIN_VGA2_CTRL_BIN_SHIFT                      4

/* DSC_D :: vga_tap_bin :: vga1_ctrl_bin [03:00] */
#define DSC_D_VGA_TAP_BIN_VGA1_CTRL_BIN_MASK                       0x000f
#define DSC_D_VGA_TAP_BIN_VGA1_CTRL_BIN_ALIGN                      0
#define DSC_D_VGA_TAP_BIN_VGA1_CTRL_BIN_BITS                       4
#define DSC_D_VGA_TAP_BIN_VGA1_CTRL_BIN_SHIFT                      0


/****************************************************************************
 * merlin_gallardo_dsc_blk_DSC_E
 ***************************************************************************/
/****************************************************************************
 * DSC_E :: dsc_e_ctrl
 ***************************************************************************/
/* DSC_E :: dsc_e_ctrl :: reserved0 [15:08] */
#define DSC_E_DSC_E_CTRL_RESERVED0_MASK                            0xff00
#define DSC_E_DSC_E_CTRL_RESERVED0_ALIGN                           0
#define DSC_E_DSC_E_CTRL_RESERVED0_BITS                            8
#define DSC_E_DSC_E_CTRL_RESERVED0_SHIFT                           8

/* DSC_E :: dsc_e_ctrl :: pf_hiz [07:07] */
#define DSC_E_DSC_E_CTRL_PF_HIZ_MASK                               0x0080
#define DSC_E_DSC_E_CTRL_PF_HIZ_ALIGN                              0
#define DSC_E_DSC_E_CTRL_PF_HIZ_BITS                               1
#define DSC_E_DSC_E_CTRL_PF_HIZ_SHIFT                              7

/* DSC_E :: dsc_e_ctrl :: thresh_sel [06:05] */
#define DSC_E_DSC_E_CTRL_THRESH_SEL_MASK                           0x0060
#define DSC_E_DSC_E_CTRL_THRESH_SEL_ALIGN                          0
#define DSC_E_DSC_E_CTRL_THRESH_SEL_BITS                           2
#define DSC_E_DSC_E_CTRL_THRESH_SEL_SHIFT                          5

/* DSC_E :: dsc_e_ctrl :: m1_thresh_zero [04:04] */
#define DSC_E_DSC_E_CTRL_M1_THRESH_ZERO_MASK                       0x0010
#define DSC_E_DSC_E_CTRL_M1_THRESH_ZERO_ALIGN                      0
#define DSC_E_DSC_E_CTRL_M1_THRESH_ZERO_BITS                       1
#define DSC_E_DSC_E_CTRL_M1_THRESH_ZERO_SHIFT                      4

/* DSC_E :: dsc_e_ctrl :: p1_thresh_sel [03:03] */
#define DSC_E_DSC_E_CTRL_P1_THRESH_SEL_MASK                        0x0008
#define DSC_E_DSC_E_CTRL_P1_THRESH_SEL_ALIGN                       0
#define DSC_E_DSC_E_CTRL_P1_THRESH_SEL_BITS                        1
#define DSC_E_DSC_E_CTRL_P1_THRESH_SEL_SHIFT                       3

/* DSC_E :: dsc_e_ctrl :: en_hgain [02:02] */
#define DSC_E_DSC_E_CTRL_EN_HGAIN_MASK                             0x0004
#define DSC_E_DSC_E_CTRL_EN_HGAIN_ALIGN                            0
#define DSC_E_DSC_E_CTRL_EN_HGAIN_BITS                             1
#define DSC_E_DSC_E_CTRL_EN_HGAIN_SHIFT                            2

/* DSC_E :: dsc_e_ctrl :: offset_pd [01:01] */
#define DSC_E_DSC_E_CTRL_OFFSET_PD_MASK                            0x0002
#define DSC_E_DSC_E_CTRL_OFFSET_PD_ALIGN                           0
#define DSC_E_DSC_E_CTRL_OFFSET_PD_BITS                            1
#define DSC_E_DSC_E_CTRL_OFFSET_PD_SHIFT                           1

/* DSC_E :: dsc_e_ctrl :: pd_ch_p1 [00:00] */
#define DSC_E_DSC_E_CTRL_PD_CH_P1_MASK                             0x0001
#define DSC_E_DSC_E_CTRL_PD_CH_P1_ALIGN                            0
#define DSC_E_DSC_E_CTRL_PD_CH_P1_BITS                             1
#define DSC_E_DSC_E_CTRL_PD_CH_P1_SHIFT                            0


/****************************************************************************
 * DSC_E :: dsc_e_pf_ctrl
 ***************************************************************************/
/* DSC_E :: dsc_e_pf_ctrl :: reserved0 [15:04] */
#define DSC_E_DSC_E_PF_CTRL_RESERVED0_MASK                         0xfff0
#define DSC_E_DSC_E_PF_CTRL_RESERVED0_ALIGN                        0
#define DSC_E_DSC_E_PF_CTRL_RESERVED0_BITS                         12
#define DSC_E_DSC_E_PF_CTRL_RESERVED0_SHIFT                        4

/* DSC_E :: dsc_e_pf_ctrl :: pf_ctrl [03:00] */
#define DSC_E_DSC_E_PF_CTRL_PF_CTRL_MASK                           0x000f
#define DSC_E_DSC_E_PF_CTRL_PF_CTRL_ALIGN                          0
#define DSC_E_DSC_E_PF_CTRL_PF_CTRL_BITS                           4
#define DSC_E_DSC_E_PF_CTRL_PF_CTRL_SHIFT                          0


/****************************************************************************
 * DSC_E :: dsc_e_pf2_lowp_ctrl
 ***************************************************************************/
/* DSC_E :: dsc_e_pf2_lowp_ctrl :: reserved0 [15:03] */
#define DSC_E_DSC_E_PF2_LOWP_CTRL_RESERVED0_MASK                   0xfff8
#define DSC_E_DSC_E_PF2_LOWP_CTRL_RESERVED0_ALIGN                  0
#define DSC_E_DSC_E_PF2_LOWP_CTRL_RESERVED0_BITS                   13
#define DSC_E_DSC_E_PF2_LOWP_CTRL_RESERVED0_SHIFT                  3

/* DSC_E :: dsc_e_pf2_lowp_ctrl :: pf2_lowp_ctrl [02:00] */
#define DSC_E_DSC_E_PF2_LOWP_CTRL_PF2_LOWP_CTRL_MASK               0x0007
#define DSC_E_DSC_E_PF2_LOWP_CTRL_PF2_LOWP_CTRL_ALIGN              0
#define DSC_E_DSC_E_PF2_LOWP_CTRL_PF2_LOWP_CTRL_BITS               3
#define DSC_E_DSC_E_PF2_LOWP_CTRL_PF2_LOWP_CTRL_SHIFT              0


/****************************************************************************
 * DSC_E :: dsc_e_offset_adj_data_odd
 ***************************************************************************/
/* DSC_E :: dsc_e_offset_adj_data_odd :: reserved0 [15:06] */
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_ODD_RESERVED0_MASK             0xffc0
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_ODD_RESERVED0_ALIGN            0
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_ODD_RESERVED0_BITS             10
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_ODD_RESERVED0_SHIFT            6

/* DSC_E :: dsc_e_offset_adj_data_odd :: dfe_offset_adj_data_odd [05:00] */
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_ODD_DFE_OFFSET_ADJ_DATA_ODD_MASK 0x003f
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_ODD_DFE_OFFSET_ADJ_DATA_ODD_ALIGN 0
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_ODD_DFE_OFFSET_ADJ_DATA_ODD_BITS 6
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_ODD_DFE_OFFSET_ADJ_DATA_ODD_SHIFT 0


/****************************************************************************
 * DSC_E :: dsc_e_offset_adj_data_even
 ***************************************************************************/
/* DSC_E :: dsc_e_offset_adj_data_even :: reserved0 [15:06] */
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_EVEN_RESERVED0_MASK            0xffc0
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_EVEN_RESERVED0_ALIGN           0
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_EVEN_RESERVED0_BITS            10
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_EVEN_RESERVED0_SHIFT           6

/* DSC_E :: dsc_e_offset_adj_data_even :: dfe_offset_adj_data_even [05:00] */
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_EVEN_DFE_OFFSET_ADJ_DATA_EVEN_MASK 0x003f
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_EVEN_DFE_OFFSET_ADJ_DATA_EVEN_ALIGN 0
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_EVEN_DFE_OFFSET_ADJ_DATA_EVEN_BITS 6
#define DSC_E_DSC_E_OFFSET_ADJ_DATA_EVEN_DFE_OFFSET_ADJ_DATA_EVEN_SHIFT 0


/****************************************************************************
 * DSC_E :: dsc_e_offset_adj_p1_odd
 ***************************************************************************/
/* DSC_E :: dsc_e_offset_adj_p1_odd :: reserved0 [15:06] */
#define DSC_E_DSC_E_OFFSET_ADJ_P1_ODD_RESERVED0_MASK               0xffc0
#define DSC_E_DSC_E_OFFSET_ADJ_P1_ODD_RESERVED0_ALIGN              0
#define DSC_E_DSC_E_OFFSET_ADJ_P1_ODD_RESERVED0_BITS               10
#define DSC_E_DSC_E_OFFSET_ADJ_P1_ODD_RESERVED0_SHIFT              6

/* DSC_E :: dsc_e_offset_adj_p1_odd :: dfe_offset_adj_p1_odd [05:00] */
#define DSC_E_DSC_E_OFFSET_ADJ_P1_ODD_DFE_OFFSET_ADJ_P1_ODD_MASK   0x003f
#define DSC_E_DSC_E_OFFSET_ADJ_P1_ODD_DFE_OFFSET_ADJ_P1_ODD_ALIGN  0
#define DSC_E_DSC_E_OFFSET_ADJ_P1_ODD_DFE_OFFSET_ADJ_P1_ODD_BITS   6
#define DSC_E_DSC_E_OFFSET_ADJ_P1_ODD_DFE_OFFSET_ADJ_P1_ODD_SHIFT  0


/****************************************************************************
 * DSC_E :: dsc_e_offset_adj_p1_even
 ***************************************************************************/
/* DSC_E :: dsc_e_offset_adj_p1_even :: reserved0 [15:06] */
#define DSC_E_DSC_E_OFFSET_ADJ_P1_EVEN_RESERVED0_MASK              0xffc0
#define DSC_E_DSC_E_OFFSET_ADJ_P1_EVEN_RESERVED0_ALIGN             0
#define DSC_E_DSC_E_OFFSET_ADJ_P1_EVEN_RESERVED0_BITS              10
#define DSC_E_DSC_E_OFFSET_ADJ_P1_EVEN_RESERVED0_SHIFT             6

/* DSC_E :: dsc_e_offset_adj_p1_even :: dfe_offset_adj_p1_even [05:00] */
#define DSC_E_DSC_E_OFFSET_ADJ_P1_EVEN_DFE_OFFSET_ADJ_P1_EVEN_MASK 0x003f
#define DSC_E_DSC_E_OFFSET_ADJ_P1_EVEN_DFE_OFFSET_ADJ_P1_EVEN_ALIGN 0
#define DSC_E_DSC_E_OFFSET_ADJ_P1_EVEN_DFE_OFFSET_ADJ_P1_EVEN_BITS 6
#define DSC_E_DSC_E_OFFSET_ADJ_P1_EVEN_DFE_OFFSET_ADJ_P1_EVEN_SHIFT 0


/****************************************************************************
 * DSC_E :: dsc_e_offset_adj_m1_odd
 ***************************************************************************/
/* DSC_E :: dsc_e_offset_adj_m1_odd :: reserved0 [15:06] */
#define DSC_E_DSC_E_OFFSET_ADJ_M1_ODD_RESERVED0_MASK               0xffc0
#define DSC_E_DSC_E_OFFSET_ADJ_M1_ODD_RESERVED0_ALIGN              0
#define DSC_E_DSC_E_OFFSET_ADJ_M1_ODD_RESERVED0_BITS               10
#define DSC_E_DSC_E_OFFSET_ADJ_M1_ODD_RESERVED0_SHIFT              6

/* DSC_E :: dsc_e_offset_adj_m1_odd :: dfe_offset_adj_m1_odd [05:00] */
#define DSC_E_DSC_E_OFFSET_ADJ_M1_ODD_DFE_OFFSET_ADJ_M1_ODD_MASK   0x003f
#define DSC_E_DSC_E_OFFSET_ADJ_M1_ODD_DFE_OFFSET_ADJ_M1_ODD_ALIGN  0
#define DSC_E_DSC_E_OFFSET_ADJ_M1_ODD_DFE_OFFSET_ADJ_M1_ODD_BITS   6
#define DSC_E_DSC_E_OFFSET_ADJ_M1_ODD_DFE_OFFSET_ADJ_M1_ODD_SHIFT  0


/****************************************************************************
 * DSC_E :: dsc_e_offset_adj_m1_even
 ***************************************************************************/
/* DSC_E :: dsc_e_offset_adj_m1_even :: reserved0 [15:06] */
#define DSC_E_DSC_E_OFFSET_ADJ_M1_EVEN_RESERVED0_MASK              0xffc0
#define DSC_E_DSC_E_OFFSET_ADJ_M1_EVEN_RESERVED0_ALIGN             0
#define DSC_E_DSC_E_OFFSET_ADJ_M1_EVEN_RESERVED0_BITS              10
#define DSC_E_DSC_E_OFFSET_ADJ_M1_EVEN_RESERVED0_SHIFT             6

/* DSC_E :: dsc_e_offset_adj_m1_even :: dfe_offset_adj_m1_even [05:00] */
#define DSC_E_DSC_E_OFFSET_ADJ_M1_EVEN_DFE_OFFSET_ADJ_M1_EVEN_MASK 0x003f
#define DSC_E_DSC_E_OFFSET_ADJ_M1_EVEN_DFE_OFFSET_ADJ_M1_EVEN_ALIGN 0
#define DSC_E_DSC_E_OFFSET_ADJ_M1_EVEN_DFE_OFFSET_ADJ_M1_EVEN_BITS 6
#define DSC_E_DSC_E_OFFSET_ADJ_M1_EVEN_DFE_OFFSET_ADJ_M1_EVEN_SHIFT 0


/****************************************************************************
 * DSC_E :: dsc_e_dc_offset
 ***************************************************************************/
/* DSC_E :: dsc_e_dc_offset :: reserved0 [15:07] */
#define DSC_E_DSC_E_DC_OFFSET_RESERVED0_MASK                       0xff80
#define DSC_E_DSC_E_DC_OFFSET_RESERVED0_ALIGN                      0
#define DSC_E_DSC_E_DC_OFFSET_RESERVED0_BITS                       9
#define DSC_E_DSC_E_DC_OFFSET_RESERVED0_SHIFT                      7

/* DSC_E :: dsc_e_dc_offset :: dc_offset [06:00] */
#define DSC_E_DSC_E_DC_OFFSET_DC_OFFSET_MASK                       0x007f
#define DSC_E_DSC_E_DC_OFFSET_DC_OFFSET_ALIGN                      0
#define DSC_E_DSC_E_DC_OFFSET_DC_OFFSET_BITS                       7
#define DSC_E_DSC_E_DC_OFFSET_DC_OFFSET_SHIFT                      0


/****************************************************************************
 * merlin_gallardo_cl72_user_blk_CL72_USER_RX
 ***************************************************************************/
/****************************************************************************
 * CL72_USER_RX :: rcvd_status_register
 ***************************************************************************/
/* CL72_USER_RX :: rcvd_status_register :: rcvd_status_page [15:00] */
#define CL72_USER_RX_RCVD_STATUS_REGISTER_RCVD_STATUS_PAGE_MASK    0xffff
#define CL72_USER_RX_RCVD_STATUS_REGISTER_RCVD_STATUS_PAGE_ALIGN   0
#define CL72_USER_RX_RCVD_STATUS_REGISTER_RCVD_STATUS_PAGE_BITS    16
#define CL72_USER_RX_RCVD_STATUS_REGISTER_RCVD_STATUS_PAGE_SHIFT   0


/****************************************************************************
 * CL72_USER_RX :: misc1_control
 ***************************************************************************/
/* CL72_USER_RX :: misc1_control :: reserved0 [15:03] */
#define CL72_USER_RX_MISC1_CONTROL_RESERVED0_MASK                  0xfff8
#define CL72_USER_RX_MISC1_CONTROL_RESERVED0_ALIGN                 0
#define CL72_USER_RX_MISC1_CONTROL_RESERVED0_BITS                  13
#define CL72_USER_RX_MISC1_CONTROL_RESERVED0_SHIFT                 3

/* CL72_USER_RX :: misc1_control :: rx_dp_ln_clk_en [02:02] */
#define CL72_USER_RX_MISC1_CONTROL_RX_DP_LN_CLK_EN_MASK            0x0004
#define CL72_USER_RX_MISC1_CONTROL_RX_DP_LN_CLK_EN_ALIGN           0
#define CL72_USER_RX_MISC1_CONTROL_RX_DP_LN_CLK_EN_BITS            1
#define CL72_USER_RX_MISC1_CONTROL_RX_DP_LN_CLK_EN_SHIFT           2

/* CL72_USER_RX :: misc1_control :: tr_coarse_lock [01:01] */
#define CL72_USER_RX_MISC1_CONTROL_TR_COARSE_LOCK_MASK             0x0002
#define CL72_USER_RX_MISC1_CONTROL_TR_COARSE_LOCK_ALIGN            0
#define CL72_USER_RX_MISC1_CONTROL_TR_COARSE_LOCK_BITS             1
#define CL72_USER_RX_MISC1_CONTROL_TR_COARSE_LOCK_SHIFT            1

/* CL72_USER_RX :: misc1_control :: reserved1 [00:00] */
#define CL72_USER_RX_MISC1_CONTROL_RESERVED1_MASK                  0x0001
#define CL72_USER_RX_MISC1_CONTROL_RESERVED1_ALIGN                 0
#define CL72_USER_RX_MISC1_CONTROL_RESERVED1_BITS                  1
#define CL72_USER_RX_MISC1_CONTROL_RESERVED1_SHIFT                 0


/****************************************************************************
 * CL72_USER_RX :: debug_2_register
 ***************************************************************************/
/* CL72_USER_RX :: debug_2_register :: reserved0 [15:15] */
#define CL72_USER_RX_DEBUG_2_REGISTER_RESERVED0_MASK               0x8000
#define CL72_USER_RX_DEBUG_2_REGISTER_RESERVED0_ALIGN              0
#define CL72_USER_RX_DEBUG_2_REGISTER_RESERVED0_BITS               1
#define CL72_USER_RX_DEBUG_2_REGISTER_RESERVED0_SHIFT              15

/* CL72_USER_RX :: debug_2_register :: ppm_offset_en [14:14] */
#define CL72_USER_RX_DEBUG_2_REGISTER_PPM_OFFSET_EN_MASK           0x4000
#define CL72_USER_RX_DEBUG_2_REGISTER_PPM_OFFSET_EN_ALIGN          0
#define CL72_USER_RX_DEBUG_2_REGISTER_PPM_OFFSET_EN_BITS           1
#define CL72_USER_RX_DEBUG_2_REGISTER_PPM_OFFSET_EN_SHIFT          14

/* CL72_USER_RX :: debug_2_register :: strict_marker_chk [13:13] */
#define CL72_USER_RX_DEBUG_2_REGISTER_STRICT_MARKER_CHK_MASK       0x2000
#define CL72_USER_RX_DEBUG_2_REGISTER_STRICT_MARKER_CHK_ALIGN      0
#define CL72_USER_RX_DEBUG_2_REGISTER_STRICT_MARKER_CHK_BITS       1
#define CL72_USER_RX_DEBUG_2_REGISTER_STRICT_MARKER_CHK_SHIFT      13

/* CL72_USER_RX :: debug_2_register :: strict_dme_chk [12:12] */
#define CL72_USER_RX_DEBUG_2_REGISTER_STRICT_DME_CHK_MASK          0x1000
#define CL72_USER_RX_DEBUG_2_REGISTER_STRICT_DME_CHK_ALIGN         0
#define CL72_USER_RX_DEBUG_2_REGISTER_STRICT_DME_CHK_BITS          1
#define CL72_USER_RX_DEBUG_2_REGISTER_STRICT_DME_CHK_SHIFT         12

/* CL72_USER_RX :: debug_2_register :: ctrl_frame_dly [11:08] */
#define CL72_USER_RX_DEBUG_2_REGISTER_CTRL_FRAME_DLY_MASK          0x0f00
#define CL72_USER_RX_DEBUG_2_REGISTER_CTRL_FRAME_DLY_ALIGN         0
#define CL72_USER_RX_DEBUG_2_REGISTER_CTRL_FRAME_DLY_BITS          4
#define CL72_USER_RX_DEBUG_2_REGISTER_CTRL_FRAME_DLY_SHIFT         8

/* CL72_USER_RX :: debug_2_register :: dme_cell_boundary_chk [07:07] */
#define CL72_USER_RX_DEBUG_2_REGISTER_DME_CELL_BOUNDARY_CHK_MASK   0x0080
#define CL72_USER_RX_DEBUG_2_REGISTER_DME_CELL_BOUNDARY_CHK_ALIGN  0
#define CL72_USER_RX_DEBUG_2_REGISTER_DME_CELL_BOUNDARY_CHK_BITS   1
#define CL72_USER_RX_DEBUG_2_REGISTER_DME_CELL_BOUNDARY_CHK_SHIFT  7

/* CL72_USER_RX :: debug_2_register :: reserved1 [06:05] */
#define CL72_USER_RX_DEBUG_2_REGISTER_RESERVED1_MASK               0x0060
#define CL72_USER_RX_DEBUG_2_REGISTER_RESERVED1_ALIGN              0
#define CL72_USER_RX_DEBUG_2_REGISTER_RESERVED1_BITS               2
#define CL72_USER_RX_DEBUG_2_REGISTER_RESERVED1_SHIFT              5

/* CL72_USER_RX :: debug_2_register :: bad_marker_cnt [04:02] */
#define CL72_USER_RX_DEBUG_2_REGISTER_BAD_MARKER_CNT_MASK          0x001c
#define CL72_USER_RX_DEBUG_2_REGISTER_BAD_MARKER_CNT_ALIGN         0
#define CL72_USER_RX_DEBUG_2_REGISTER_BAD_MARKER_CNT_BITS          3
#define CL72_USER_RX_DEBUG_2_REGISTER_BAD_MARKER_CNT_SHIFT         2

/* CL72_USER_RX :: debug_2_register :: good_marker_cnt [01:00] */
#define CL72_USER_RX_DEBUG_2_REGISTER_GOOD_MARKER_CNT_MASK         0x0003
#define CL72_USER_RX_DEBUG_2_REGISTER_GOOD_MARKER_CNT_ALIGN        0
#define CL72_USER_RX_DEBUG_2_REGISTER_GOOD_MARKER_CNT_BITS         2
#define CL72_USER_RX_DEBUG_2_REGISTER_GOOD_MARKER_CNT_SHIFT        0


/****************************************************************************
 * CL72_USER_RX :: cl72_lp_control_page
 ***************************************************************************/
/* CL72_USER_RX :: cl72_lp_control_page :: lp_control_page [15:00] */
#define CL72_USER_RX_CL72_LP_CONTROL_PAGE_LP_CONTROL_PAGE_MASK     0xffff
#define CL72_USER_RX_CL72_LP_CONTROL_PAGE_LP_CONTROL_PAGE_ALIGN    0
#define CL72_USER_RX_CL72_LP_CONTROL_PAGE_LP_CONTROL_PAGE_BITS     16
#define CL72_USER_RX_CL72_LP_CONTROL_PAGE_LP_CONTROL_PAGE_SHIFT    0


/****************************************************************************
 * CL72_USER_RX :: cl72_status1_register
 ***************************************************************************/
/* CL72_USER_RX :: cl72_status1_register :: reserved0 [15:01] */
#define CL72_USER_RX_CL72_STATUS1_REGISTER_RESERVED0_MASK          0xfffe
#define CL72_USER_RX_CL72_STATUS1_REGISTER_RESERVED0_ALIGN         0
#define CL72_USER_RX_CL72_STATUS1_REGISTER_RESERVED0_BITS          15
#define CL72_USER_RX_CL72_STATUS1_REGISTER_RESERVED0_SHIFT         1

/* CL72_USER_RX :: cl72_status1_register :: cl72_signal_detect [00:00] */
#define CL72_USER_RX_CL72_STATUS1_REGISTER_CL72_SIGNAL_DETECT_MASK 0x0001
#define CL72_USER_RX_CL72_STATUS1_REGISTER_CL72_SIGNAL_DETECT_ALIGN 0
#define CL72_USER_RX_CL72_STATUS1_REGISTER_CL72_SIGNAL_DETECT_BITS 1
#define CL72_USER_RX_CL72_STATUS1_REGISTER_CL72_SIGNAL_DETECT_SHIFT 0


/****************************************************************************
 * merlin_gallardo_cl72_user_blk_CL72_USER_TX
 ***************************************************************************/
/****************************************************************************
 * CL72_USER_TX :: xmt_update_register
 ***************************************************************************/
/* CL72_USER_TX :: xmt_update_register :: xmt_update_page [15:00] */
#define CL72_USER_TX_XMT_UPDATE_REGISTER_XMT_UPDATE_PAGE_MASK      0xffff
#define CL72_USER_TX_XMT_UPDATE_REGISTER_XMT_UPDATE_PAGE_ALIGN     0
#define CL72_USER_TX_XMT_UPDATE_REGISTER_XMT_UPDATE_PAGE_BITS      16
#define CL72_USER_TX_XMT_UPDATE_REGISTER_XMT_UPDATE_PAGE_SHIFT     0


/****************************************************************************
 * CL72_USER_TX :: misc2_control
 ***************************************************************************/
/* CL72_USER_TX :: misc2_control :: reserved0 [15:03] */
#define CL72_USER_TX_MISC2_CONTROL_RESERVED0_MASK                  0xfff8
#define CL72_USER_TX_MISC2_CONTROL_RESERVED0_ALIGN                 0
#define CL72_USER_TX_MISC2_CONTROL_RESERVED0_BITS                  13
#define CL72_USER_TX_MISC2_CONTROL_RESERVED0_SHIFT                 3

/* CL72_USER_TX :: misc2_control :: tx_dp_ln_clk_en [02:02] */
#define CL72_USER_TX_MISC2_CONTROL_TX_DP_LN_CLK_EN_MASK            0x0004
#define CL72_USER_TX_MISC2_CONTROL_TX_DP_LN_CLK_EN_ALIGN           0
#define CL72_USER_TX_MISC2_CONTROL_TX_DP_LN_CLK_EN_BITS            1
#define CL72_USER_TX_MISC2_CONTROL_TX_DP_LN_CLK_EN_SHIFT           2

/* CL72_USER_TX :: misc2_control :: signal_det_force [01:01] */
#define CL72_USER_TX_MISC2_CONTROL_SIGNAL_DET_FORCE_MASK           0x0002
#define CL72_USER_TX_MISC2_CONTROL_SIGNAL_DET_FORCE_ALIGN          0
#define CL72_USER_TX_MISC2_CONTROL_SIGNAL_DET_FORCE_BITS           1
#define CL72_USER_TX_MISC2_CONTROL_SIGNAL_DET_FORCE_SHIFT          1

/* CL72_USER_TX :: misc2_control :: rx_trained [00:00] */
#define CL72_USER_TX_MISC2_CONTROL_RX_TRAINED_MASK                 0x0001
#define CL72_USER_TX_MISC2_CONTROL_RX_TRAINED_ALIGN                0
#define CL72_USER_TX_MISC2_CONTROL_RX_TRAINED_BITS                 1
#define CL72_USER_TX_MISC2_CONTROL_RX_TRAINED_SHIFT                0


/****************************************************************************
 * CL72_USER_TX :: debug_3_register
 ***************************************************************************/
/* CL72_USER_TX :: debug_3_register :: reserved0 [15:02] */
#define CL72_USER_TX_DEBUG_3_REGISTER_RESERVED0_MASK               0xfffc
#define CL72_USER_TX_DEBUG_3_REGISTER_RESERVED0_ALIGN              0
#define CL72_USER_TX_DEBUG_3_REGISTER_RESERVED0_BITS               14
#define CL72_USER_TX_DEBUG_3_REGISTER_RESERVED0_SHIFT              2

/* CL72_USER_TX :: debug_3_register :: frame_lock_rdy_for_cmd_en [01:01] */
#define CL72_USER_TX_DEBUG_3_REGISTER_FRAME_LOCK_RDY_FOR_CMD_EN_MASK 0x0002
#define CL72_USER_TX_DEBUG_3_REGISTER_FRAME_LOCK_RDY_FOR_CMD_EN_ALIGN 0
#define CL72_USER_TX_DEBUG_3_REGISTER_FRAME_LOCK_RDY_FOR_CMD_EN_BITS 1
#define CL72_USER_TX_DEBUG_3_REGISTER_FRAME_LOCK_RDY_FOR_CMD_EN_SHIFT 1

/* CL72_USER_TX :: debug_3_register :: brk_ring_osc [00:00] */
#define CL72_USER_TX_DEBUG_3_REGISTER_BRK_RING_OSC_MASK            0x0001
#define CL72_USER_TX_DEBUG_3_REGISTER_BRK_RING_OSC_ALIGN           0
#define CL72_USER_TX_DEBUG_3_REGISTER_BRK_RING_OSC_BITS            1
#define CL72_USER_TX_DEBUG_3_REGISTER_BRK_RING_OSC_SHIFT           0


/****************************************************************************
 * CL72_USER_TX :: pcs_interface_control_register
 ***************************************************************************/
/* CL72_USER_TX :: pcs_interface_control_register :: reserved0 [15:01] */
#define CL72_USER_TX_PCS_INTERFACE_CONTROL_REGISTER_RESERVED0_MASK 0xfffe
#define CL72_USER_TX_PCS_INTERFACE_CONTROL_REGISTER_RESERVED0_ALIGN 0
#define CL72_USER_TX_PCS_INTERFACE_CONTROL_REGISTER_RESERVED0_BITS 15
#define CL72_USER_TX_PCS_INTERFACE_CONTROL_REGISTER_RESERVED0_SHIFT 1

/* CL72_USER_TX :: pcs_interface_control_register :: dis_max_wait_timer [00:00] */
#define CL72_USER_TX_PCS_INTERFACE_CONTROL_REGISTER_DIS_MAX_WAIT_TIMER_MASK 0x0001
#define CL72_USER_TX_PCS_INTERFACE_CONTROL_REGISTER_DIS_MAX_WAIT_TIMER_ALIGN 0
#define CL72_USER_TX_PCS_INTERFACE_CONTROL_REGISTER_DIS_MAX_WAIT_TIMER_BITS 1
#define CL72_USER_TX_PCS_INTERFACE_CONTROL_REGISTER_DIS_MAX_WAIT_TIMER_SHIFT 0


/****************************************************************************
 * CL72_USER_TX :: cl72_ld_status_page
 ***************************************************************************/
/* CL72_USER_TX :: cl72_ld_status_page :: ld_status_page [15:00] */
#define CL72_USER_TX_CL72_LD_STATUS_PAGE_LD_STATUS_PAGE_MASK       0xffff
#define CL72_USER_TX_CL72_LD_STATUS_PAGE_LD_STATUS_PAGE_ALIGN      0
#define CL72_USER_TX_CL72_LD_STATUS_PAGE_LD_STATUS_PAGE_BITS       16
#define CL72_USER_TX_CL72_LD_STATUS_PAGE_LD_STATUS_PAGE_SHIFT      0


/****************************************************************************
 * CL72_USER_TX :: cl72_ready_for_cmd_register
 ***************************************************************************/
/* CL72_USER_TX :: cl72_ready_for_cmd_register :: reserved0 [15:01] */
#define CL72_USER_TX_CL72_READY_FOR_CMD_REGISTER_RESERVED0_MASK    0xfffe
#define CL72_USER_TX_CL72_READY_FOR_CMD_REGISTER_RESERVED0_ALIGN   0
#define CL72_USER_TX_CL72_READY_FOR_CMD_REGISTER_RESERVED0_BITS    15
#define CL72_USER_TX_CL72_READY_FOR_CMD_REGISTER_RESERVED0_SHIFT   1

/* CL72_USER_TX :: cl72_ready_for_cmd_register :: ready_for_cmd [00:00] */
#define CL72_USER_TX_CL72_READY_FOR_CMD_REGISTER_READY_FOR_CMD_MASK 0x0001
#define CL72_USER_TX_CL72_READY_FOR_CMD_REGISTER_READY_FOR_CMD_ALIGN 0
#define CL72_USER_TX_CL72_READY_FOR_CMD_REGISTER_READY_FOR_CMD_BITS 1
#define CL72_USER_TX_CL72_READY_FOR_CMD_REGISTER_READY_FOR_CMD_SHIFT 0


/****************************************************************************
 * CL72_USER_TX :: kr_default_control1
 ***************************************************************************/
/* CL72_USER_TX :: kr_default_control1 :: reserved0 [15:10] */
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_RESERVED0_MASK            0xfc00
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_RESERVED0_ALIGN           0
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_RESERVED0_BITS            6
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_RESERVED0_SHIFT           10

/* CL72_USER_TX :: kr_default_control1 :: tx_fir_tap_post_kr_init_val [09:05] */
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_TX_FIR_TAP_POST_KR_INIT_VAL_MASK 0x03e0
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_TX_FIR_TAP_POST_KR_INIT_VAL_ALIGN 0
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_TX_FIR_TAP_POST_KR_INIT_VAL_BITS 5
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_TX_FIR_TAP_POST_KR_INIT_VAL_SHIFT 5

/* CL72_USER_TX :: kr_default_control1 :: reserved1 [04:04] */
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_RESERVED1_MASK            0x0010
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_RESERVED1_ALIGN           0
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_RESERVED1_BITS            1
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_RESERVED1_SHIFT           4

/* CL72_USER_TX :: kr_default_control1 :: tx_fir_tap_pre_kr_init_val [03:00] */
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_TX_FIR_TAP_PRE_KR_INIT_VAL_MASK 0x000f
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_TX_FIR_TAP_PRE_KR_INIT_VAL_ALIGN 0
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_TX_FIR_TAP_PRE_KR_INIT_VAL_BITS 4
#define CL72_USER_TX_KR_DEFAULT_CONTROL1_TX_FIR_TAP_PRE_KR_INIT_VAL_SHIFT 0


/****************************************************************************
 * CL72_USER_TX :: kr_default_control2
 ***************************************************************************/
/* CL72_USER_TX :: kr_default_control2 :: reserved0 [15:06] */
#define CL72_USER_TX_KR_DEFAULT_CONTROL2_RESERVED0_MASK            0xffc0
#define CL72_USER_TX_KR_DEFAULT_CONTROL2_RESERVED0_ALIGN           0
#define CL72_USER_TX_KR_DEFAULT_CONTROL2_RESERVED0_BITS            10
#define CL72_USER_TX_KR_DEFAULT_CONTROL2_RESERVED0_SHIFT           6

/* CL72_USER_TX :: kr_default_control2 :: tx_fir_tap_main_kr_init_val [05:00] */
#define CL72_USER_TX_KR_DEFAULT_CONTROL2_TX_FIR_TAP_MAIN_KR_INIT_VAL_MASK 0x003f
#define CL72_USER_TX_KR_DEFAULT_CONTROL2_TX_FIR_TAP_MAIN_KR_INIT_VAL_ALIGN 0
#define CL72_USER_TX_KR_DEFAULT_CONTROL2_TX_FIR_TAP_MAIN_KR_INIT_VAL_BITS 6
#define CL72_USER_TX_KR_DEFAULT_CONTROL2_TX_FIR_TAP_MAIN_KR_INIT_VAL_SHIFT 0


/****************************************************************************
 * CL72_USER_TX :: misc_coeff_control
 ***************************************************************************/
/* CL72_USER_TX :: misc_coeff_control :: reserved0 [15:13] */
#define CL72_USER_TX_MISC_COEFF_CONTROL_RESERVED0_MASK             0xe000
#define CL72_USER_TX_MISC_COEFF_CONTROL_RESERVED0_ALIGN            0
#define CL72_USER_TX_MISC_COEFF_CONTROL_RESERVED0_BITS             3
#define CL72_USER_TX_MISC_COEFF_CONTROL_RESERVED0_SHIFT            13

/* CL72_USER_TX :: misc_coeff_control :: double_cmd_en [12:12] */
#define CL72_USER_TX_MISC_COEFF_CONTROL_DOUBLE_CMD_EN_MASK         0x1000
#define CL72_USER_TX_MISC_COEFF_CONTROL_DOUBLE_CMD_EN_ALIGN        0
#define CL72_USER_TX_MISC_COEFF_CONTROL_DOUBLE_CMD_EN_BITS         1
#define CL72_USER_TX_MISC_COEFF_CONTROL_DOUBLE_CMD_EN_SHIFT        12

/* CL72_USER_TX :: misc_coeff_control :: dis_lp_coeff_updates_to_ld [11:11] */
#define CL72_USER_TX_MISC_COEFF_CONTROL_DIS_LP_COEFF_UPDATES_TO_LD_MASK 0x0800
#define CL72_USER_TX_MISC_COEFF_CONTROL_DIS_LP_COEFF_UPDATES_TO_LD_ALIGN 0
#define CL72_USER_TX_MISC_COEFF_CONTROL_DIS_LP_COEFF_UPDATES_TO_LD_BITS 1
#define CL72_USER_TX_MISC_COEFF_CONTROL_DIS_LP_COEFF_UPDATES_TO_LD_SHIFT 11

/* CL72_USER_TX :: misc_coeff_control :: ld_xmt_status_override [10:10] */
#define CL72_USER_TX_MISC_COEFF_CONTROL_LD_XMT_STATUS_OVERRIDE_MASK 0x0400
#define CL72_USER_TX_MISC_COEFF_CONTROL_LD_XMT_STATUS_OVERRIDE_ALIGN 0
#define CL72_USER_TX_MISC_COEFF_CONTROL_LD_XMT_STATUS_OVERRIDE_BITS 1
#define CL72_USER_TX_MISC_COEFF_CONTROL_LD_XMT_STATUS_OVERRIDE_SHIFT 10

/* CL72_USER_TX :: misc_coeff_control :: ld_xmt_status_load [09:09] */
#define CL72_USER_TX_MISC_COEFF_CONTROL_LD_XMT_STATUS_LOAD_MASK    0x0200
#define CL72_USER_TX_MISC_COEFF_CONTROL_LD_XMT_STATUS_LOAD_ALIGN   0
#define CL72_USER_TX_MISC_COEFF_CONTROL_LD_XMT_STATUS_LOAD_BITS    1
#define CL72_USER_TX_MISC_COEFF_CONTROL_LD_XMT_STATUS_LOAD_SHIFT   9

/* CL72_USER_TX :: misc_coeff_control :: v2_constraint_dis [08:08] */
#define CL72_USER_TX_MISC_COEFF_CONTROL_V2_CONSTRAINT_DIS_MASK     0x0100
#define CL72_USER_TX_MISC_COEFF_CONTROL_V2_CONSTRAINT_DIS_ALIGN    0
#define CL72_USER_TX_MISC_COEFF_CONTROL_V2_CONSTRAINT_DIS_BITS     1
#define CL72_USER_TX_MISC_COEFF_CONTROL_V2_CONSTRAINT_DIS_SHIFT    8

/* CL72_USER_TX :: misc_coeff_control :: reserved1 [07:07] */
#define CL72_USER_TX_MISC_COEFF_CONTROL_RESERVED1_MASK             0x0080
#define CL72_USER_TX_MISC_COEFF_CONTROL_RESERVED1_ALIGN            0
#define CL72_USER_TX_MISC_COEFF_CONTROL_RESERVED1_BITS             1
#define CL72_USER_TX_MISC_COEFF_CONTROL_RESERVED1_SHIFT            7

/* CL72_USER_TX :: misc_coeff_control :: tap_v2_val [06:02] */
#define CL72_USER_TX_MISC_COEFF_CONTROL_TAP_V2_VAL_MASK            0x007c
#define CL72_USER_TX_MISC_COEFF_CONTROL_TAP_V2_VAL_ALIGN           0
#define CL72_USER_TX_MISC_COEFF_CONTROL_TAP_V2_VAL_BITS            5
#define CL72_USER_TX_MISC_COEFF_CONTROL_TAP_V2_VAL_SHIFT           2

/* CL72_USER_TX :: misc_coeff_control :: inc_dec_val_sel [01:00] */
#define CL72_USER_TX_MISC_COEFF_CONTROL_INC_DEC_VAL_SEL_MASK       0x0003
#define CL72_USER_TX_MISC_COEFF_CONTROL_INC_DEC_VAL_SEL_ALIGN      0
#define CL72_USER_TX_MISC_COEFF_CONTROL_INC_DEC_VAL_SEL_BITS       2
#define CL72_USER_TX_MISC_COEFF_CONTROL_INC_DEC_VAL_SEL_SHIFT      0


/****************************************************************************
 * CL72_USER_TX :: cl72_ld_xmt_status_page_override
 ***************************************************************************/
/* CL72_USER_TX :: cl72_ld_xmt_status_page_override :: overide_ld_status_page [15:00] */
#define CL72_USER_TX_CL72_LD_XMT_STATUS_PAGE_OVERRIDE_OVERIDE_LD_STATUS_PAGE_MASK 0xffff
#define CL72_USER_TX_CL72_LD_XMT_STATUS_PAGE_OVERRIDE_OVERIDE_LD_STATUS_PAGE_ALIGN 0
#define CL72_USER_TX_CL72_LD_XMT_STATUS_PAGE_OVERRIDE_OVERIDE_LD_STATUS_PAGE_BITS 16
#define CL72_USER_TX_CL72_LD_XMT_STATUS_PAGE_OVERRIDE_OVERIDE_LD_STATUS_PAGE_SHIFT 0


/****************************************************************************
 * CL72_USER_TX :: cl72_tx_debug_status
 ***************************************************************************/
/* CL72_USER_TX :: cl72_tx_debug_status :: reserved0 [15:12] */
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_RESERVED0_MASK           0xf000
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_RESERVED0_ALIGN          0
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_RESERVED0_BITS           4
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_RESERVED0_SHIFT          12

/* CL72_USER_TX :: cl72_tx_debug_status :: cl72_frame_lock_lh [11:11] */
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_CL72_FRAME_LOCK_LH_MASK  0x0800
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_CL72_FRAME_LOCK_LH_ALIGN 0
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_CL72_FRAME_LOCK_LH_BITS  1
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_CL72_FRAME_LOCK_LH_SHIFT 11

/* CL72_USER_TX :: cl72_tx_debug_status :: cl72_ld_coeff_cmd_hist [10:00] */
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_CL72_LD_COEFF_CMD_HIST_MASK 0x07ff
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_CL72_LD_COEFF_CMD_HIST_ALIGN 0
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_CL72_LD_COEFF_CMD_HIST_BITS 11
#define CL72_USER_TX_CL72_TX_DEBUG_STATUS_CL72_LD_COEFF_CMD_HIST_SHIFT 0


/****************************************************************************
 * merlin_gallardo_tx_pi_blk_TX_PI
 ***************************************************************************/
/****************************************************************************
 * TX_PI :: tx_pi_control_0
 ***************************************************************************/
/* TX_PI :: tx_pi_control_0 :: tx_pi_frc_phase_step_mux_sel [15:15] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FRC_PHASE_STEP_MUX_SEL_MASK    0x8000
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FRC_PHASE_STEP_MUX_SEL_ALIGN   0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FRC_PHASE_STEP_MUX_SEL_BITS    1
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FRC_PHASE_STEP_MUX_SEL_SHIFT   15

/* TX_PI :: tx_pi_control_0 :: reserved0 [14:14] */
#define TX_PI_TX_PI_CONTROL_0_RESERVED0_MASK                       0x4000
#define TX_PI_TX_PI_CONTROL_0_RESERVED0_ALIGN                      0
#define TX_PI_TX_PI_CONTROL_0_RESERVED0_BITS                       1
#define TX_PI_TX_PI_CONTROL_0_RESERVED0_SHIFT                      14

/* TX_PI :: tx_pi_control_0 :: tx_pi_second_order_bwsel_integ [13:12] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SECOND_ORDER_BWSEL_INTEG_MASK  0x3000
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SECOND_ORDER_BWSEL_INTEG_ALIGN 0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SECOND_ORDER_BWSEL_INTEG_BITS  2
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SECOND_ORDER_BWSEL_INTEG_SHIFT 12

/* TX_PI :: tx_pi_control_0 :: tx_pi_first_order_bwsel_integ [11:10] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FIRST_ORDER_BWSEL_INTEG_MASK   0x0c00
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FIRST_ORDER_BWSEL_INTEG_ALIGN  0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FIRST_ORDER_BWSEL_INTEG_BITS   2
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FIRST_ORDER_BWSEL_INTEG_SHIFT  10

/* TX_PI :: tx_pi_control_0 :: tx_pi_rmt_lpbk_bypass_flt [09:09] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_RMT_LPBK_BYPASS_FLT_MASK       0x0200
#define TX_PI_TX_PI_CONTROL_0_TX_PI_RMT_LPBK_BYPASS_FLT_ALIGN      0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_RMT_LPBK_BYPASS_FLT_BITS       1
#define TX_PI_TX_PI_CONTROL_0_TX_PI_RMT_LPBK_BYPASS_FLT_SHIFT      9

/* TX_PI :: tx_pi_control_0 :: tx_pi_second_order_loop_en [08:08] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SECOND_ORDER_LOOP_EN_MASK      0x0100
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SECOND_ORDER_LOOP_EN_ALIGN     0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SECOND_ORDER_LOOP_EN_BITS      1
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SECOND_ORDER_LOOP_EN_SHIFT     8

/* TX_PI :: tx_pi_control_0 :: tx_pi_reset_code_dbg [07:07] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_RESET_CODE_DBG_MASK            0x0080
#define TX_PI_TX_PI_CONTROL_0_TX_PI_RESET_CODE_DBG_ALIGN           0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_RESET_CODE_DBG_BITS            1
#define TX_PI_TX_PI_CONTROL_0_TX_PI_RESET_CODE_DBG_SHIFT           7

/* TX_PI :: tx_pi_control_0 :: tx_pi_jit_ssc_freq_mode [06:06] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_JIT_SSC_FREQ_MODE_MASK         0x0040
#define TX_PI_TX_PI_CONTROL_0_TX_PI_JIT_SSC_FREQ_MODE_ALIGN        0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_JIT_SSC_FREQ_MODE_BITS         1
#define TX_PI_TX_PI_CONTROL_0_TX_PI_JIT_SSC_FREQ_MODE_SHIFT        6

/* TX_PI :: tx_pi_control_0 :: tx_pi_ssc_gen_en [05:05] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SSC_GEN_EN_MASK                0x0020
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SSC_GEN_EN_ALIGN               0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SSC_GEN_EN_BITS                1
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SSC_GEN_EN_SHIFT               5

/* TX_PI :: tx_pi_control_0 :: tx_pi_sj_gen_en [04:04] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SJ_GEN_EN_MASK                 0x0010
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SJ_GEN_EN_ALIGN                0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SJ_GEN_EN_BITS                 1
#define TX_PI_TX_PI_CONTROL_0_TX_PI_SJ_GEN_EN_SHIFT                4

/* TX_PI :: tx_pi_control_0 :: tx_pi_freq_override_en [03:03] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FREQ_OVERRIDE_EN_MASK          0x0008
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FREQ_OVERRIDE_EN_ALIGN         0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FREQ_OVERRIDE_EN_BITS          1
#define TX_PI_TX_PI_CONTROL_0_TX_PI_FREQ_OVERRIDE_EN_SHIFT         3

/* TX_PI :: tx_pi_control_0 :: tx_pi_ext_ctrl_en [02:02] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_EXT_CTRL_EN_MASK               0x0004
#define TX_PI_TX_PI_CONTROL_0_TX_PI_EXT_CTRL_EN_ALIGN              0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_EXT_CTRL_EN_BITS               1
#define TX_PI_TX_PI_CONTROL_0_TX_PI_EXT_CTRL_EN_SHIFT              2

/* TX_PI :: tx_pi_control_0 :: tx_pi_loop_timing_en [01:01] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_LOOP_TIMING_EN_MASK            0x0002
#define TX_PI_TX_PI_CONTROL_0_TX_PI_LOOP_TIMING_EN_ALIGN           0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_LOOP_TIMING_EN_BITS            1
#define TX_PI_TX_PI_CONTROL_0_TX_PI_LOOP_TIMING_EN_SHIFT           1

/* TX_PI :: tx_pi_control_0 :: tx_pi_en [00:00] */
#define TX_PI_TX_PI_CONTROL_0_TX_PI_EN_MASK                        0x0001
#define TX_PI_TX_PI_CONTROL_0_TX_PI_EN_ALIGN                       0
#define TX_PI_TX_PI_CONTROL_0_TX_PI_EN_BITS                        1
#define TX_PI_TX_PI_CONTROL_0_TX_PI_EN_SHIFT                       0


/****************************************************************************
 * TX_PI :: tx_pi_control_1
 ***************************************************************************/
/* TX_PI :: tx_pi_control_1 :: reserved0 [15:15] */
#define TX_PI_TX_PI_CONTROL_1_RESERVED0_MASK                       0x8000
#define TX_PI_TX_PI_CONTROL_1_RESERVED0_ALIGN                      0
#define TX_PI_TX_PI_CONTROL_1_RESERVED0_BITS                       1
#define TX_PI_TX_PI_CONTROL_1_RESERVED0_SHIFT                      15

/* TX_PI :: tx_pi_control_1 :: tx_pi_freq_override_val [14:00] */
#define TX_PI_TX_PI_CONTROL_1_TX_PI_FREQ_OVERRIDE_VAL_MASK         0x7fff
#define TX_PI_TX_PI_CONTROL_1_TX_PI_FREQ_OVERRIDE_VAL_ALIGN        0
#define TX_PI_TX_PI_CONTROL_1_TX_PI_FREQ_OVERRIDE_VAL_BITS         15
#define TX_PI_TX_PI_CONTROL_1_TX_PI_FREQ_OVERRIDE_VAL_SHIFT        0


/****************************************************************************
 * TX_PI :: tx_pi_control_2
 ***************************************************************************/
/* TX_PI :: tx_pi_control_2 :: reserved0 [15:12] */
#define TX_PI_TX_PI_CONTROL_2_RESERVED0_MASK                       0xf000
#define TX_PI_TX_PI_CONTROL_2_RESERVED0_ALIGN                      0
#define TX_PI_TX_PI_CONTROL_2_RESERVED0_BITS                       4
#define TX_PI_TX_PI_CONTROL_2_RESERVED0_SHIFT                      12

/* TX_PI :: tx_pi_control_2 :: tx_pi_jit_amp [11:06] */
#define TX_PI_TX_PI_CONTROL_2_TX_PI_JIT_AMP_MASK                   0x0fc0
#define TX_PI_TX_PI_CONTROL_2_TX_PI_JIT_AMP_ALIGN                  0
#define TX_PI_TX_PI_CONTROL_2_TX_PI_JIT_AMP_BITS                   6
#define TX_PI_TX_PI_CONTROL_2_TX_PI_JIT_AMP_SHIFT                  6

/* TX_PI :: tx_pi_control_2 :: tx_pi_jit_freq_idx [05:00] */
#define TX_PI_TX_PI_CONTROL_2_TX_PI_JIT_FREQ_IDX_MASK              0x003f
#define TX_PI_TX_PI_CONTROL_2_TX_PI_JIT_FREQ_IDX_ALIGN             0
#define TX_PI_TX_PI_CONTROL_2_TX_PI_JIT_FREQ_IDX_BITS              6
#define TX_PI_TX_PI_CONTROL_2_TX_PI_JIT_FREQ_IDX_SHIFT             0


/****************************************************************************
 * TX_PI :: tx_pi_control_3
 ***************************************************************************/
/* TX_PI :: tx_pi_control_3 :: reserved0 [15:15] */
#define TX_PI_TX_PI_CONTROL_3_RESERVED0_MASK                       0x8000
#define TX_PI_TX_PI_CONTROL_3_RESERVED0_ALIGN                      0
#define TX_PI_TX_PI_CONTROL_3_RESERVED0_BITS                       1
#define TX_PI_TX_PI_CONTROL_3_RESERVED0_SHIFT                      15

/* TX_PI :: tx_pi_control_3 :: tx_pi_ext_phase_bwsel_integ [14:12] */
#define TX_PI_TX_PI_CONTROL_3_TX_PI_EXT_PHASE_BWSEL_INTEG_MASK     0x7000
#define TX_PI_TX_PI_CONTROL_3_TX_PI_EXT_PHASE_BWSEL_INTEG_ALIGN    0
#define TX_PI_TX_PI_CONTROL_3_TX_PI_EXT_PHASE_BWSEL_INTEG_BITS     3
#define TX_PI_TX_PI_CONTROL_3_TX_PI_EXT_PHASE_BWSEL_INTEG_SHIFT    12

/* TX_PI :: tx_pi_control_3 :: reserved1 [11:05] */
#define TX_PI_TX_PI_CONTROL_3_RESERVED1_MASK                       0x0fe0
#define TX_PI_TX_PI_CONTROL_3_RESERVED1_ALIGN                      0
#define TX_PI_TX_PI_CONTROL_3_RESERVED1_BITS                       7
#define TX_PI_TX_PI_CONTROL_3_RESERVED1_SHIFT                      5

/* TX_PI :: tx_pi_control_3 :: tx_pi_phase_invert [04:04] */
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_INVERT_MASK              0x0010
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_INVERT_ALIGN             0
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_INVERT_BITS              1
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_INVERT_SHIFT             4

/* TX_PI :: tx_pi_control_3 :: tx_pi_phase_step_osr [03:03] */
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STEP_OSR_MASK            0x0008
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STEP_OSR_ALIGN           0
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STEP_OSR_BITS            1
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STEP_OSR_SHIFT           3

/* TX_PI :: tx_pi_control_3 :: tx_pi_phase_step_dir [02:02] */
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STEP_DIR_MASK            0x0004
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STEP_DIR_ALIGN           0
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STEP_DIR_BITS            1
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STEP_DIR_SHIFT           2

/* TX_PI :: tx_pi_control_3 :: tx_pi_phase_strobe [01:01] */
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STROBE_MASK              0x0002
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STROBE_ALIGN             0
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STROBE_BITS              1
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_STROBE_SHIFT             1

/* TX_PI :: tx_pi_control_3 :: tx_pi_phase_override [00:00] */
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_OVERRIDE_MASK            0x0001
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_OVERRIDE_ALIGN           0
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_OVERRIDE_BITS            1
#define TX_PI_TX_PI_CONTROL_3_TX_PI_PHASE_OVERRIDE_SHIFT           0


/****************************************************************************
 * TX_PI :: tx_pi_control_4
 ***************************************************************************/
/* TX_PI :: tx_pi_control_4 :: reserved0 [15:03] */
#define TX_PI_TX_PI_CONTROL_4_RESERVED0_MASK                       0xfff8
#define TX_PI_TX_PI_CONTROL_4_RESERVED0_ALIGN                      0
#define TX_PI_TX_PI_CONTROL_4_RESERVED0_BITS                       13
#define TX_PI_TX_PI_CONTROL_4_RESERVED0_SHIFT                      3

/* TX_PI :: tx_pi_control_4 :: tx_pi_frz_mode [02:02] */
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_MODE_MASK                  0x0004
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_MODE_ALIGN                 0
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_MODE_BITS                  1
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_MODE_SHIFT                 2

/* TX_PI :: tx_pi_control_4 :: tx_pi_frz_frc_val [01:01] */
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_FRC_VAL_MASK               0x0002
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_FRC_VAL_ALIGN              0
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_FRC_VAL_BITS               1
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_FRC_VAL_SHIFT              1

/* TX_PI :: tx_pi_control_4 :: tx_pi_frz_frc [00:00] */
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_FRC_MASK                   0x0001
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_FRC_ALIGN                  0
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_FRC_BITS                   1
#define TX_PI_TX_PI_CONTROL_4_TX_PI_FRZ_FRC_SHIFT                  0


/****************************************************************************
 * TX_PI :: tx_pi_control_5
 ***************************************************************************/
/* TX_PI :: tx_pi_control_5 :: reserved0 [15:10] */
#define TX_PI_TX_PI_CONTROL_5_RESERVED0_MASK                       0xfc00
#define TX_PI_TX_PI_CONTROL_5_RESERVED0_ALIGN                      0
#define TX_PI_TX_PI_CONTROL_5_RESERVED0_BITS                       6
#define TX_PI_TX_PI_CONTROL_5_RESERVED0_SHIFT                      10

/* TX_PI :: tx_pi_control_5 :: afe_tx_fifo_resetb_frc [09:09] */
#define TX_PI_TX_PI_CONTROL_5_AFE_TX_FIFO_RESETB_FRC_MASK          0x0200
#define TX_PI_TX_PI_CONTROL_5_AFE_TX_FIFO_RESETB_FRC_ALIGN         0
#define TX_PI_TX_PI_CONTROL_5_AFE_TX_FIFO_RESETB_FRC_BITS          1
#define TX_PI_TX_PI_CONTROL_5_AFE_TX_FIFO_RESETB_FRC_SHIFT         9

/* TX_PI :: tx_pi_control_5 :: afe_tx_fifo_resetb [08:08] */
#define TX_PI_TX_PI_CONTROL_5_AFE_TX_FIFO_RESETB_MASK              0x0100
#define TX_PI_TX_PI_CONTROL_5_AFE_TX_FIFO_RESETB_ALIGN             0
#define TX_PI_TX_PI_CONTROL_5_AFE_TX_FIFO_RESETB_BITS              1
#define TX_PI_TX_PI_CONTROL_5_AFE_TX_FIFO_RESETB_SHIFT             8

/* TX_PI :: tx_pi_control_5 :: reserved1 [07:03] */
#define TX_PI_TX_PI_CONTROL_5_RESERVED1_MASK                       0x00f8
#define TX_PI_TX_PI_CONTROL_5_RESERVED1_ALIGN                      0
#define TX_PI_TX_PI_CONTROL_5_RESERVED1_BITS                       5
#define TX_PI_TX_PI_CONTROL_5_RESERVED1_SHIFT                      3

/* TX_PI :: tx_pi_control_5 :: tx_pi_pass_thru_sel [02:02] */
#define TX_PI_TX_PI_CONTROL_5_TX_PI_PASS_THRU_SEL_MASK             0x0004
#define TX_PI_TX_PI_CONTROL_5_TX_PI_PASS_THRU_SEL_ALIGN            0
#define TX_PI_TX_PI_CONTROL_5_TX_PI_PASS_THRU_SEL_BITS             1
#define TX_PI_TX_PI_CONTROL_5_TX_PI_PASS_THRU_SEL_SHIFT            2

/* TX_PI :: tx_pi_control_5 :: tx_pi_hs_fifo_phserr_invert [01:01] */
#define TX_PI_TX_PI_CONTROL_5_TX_PI_HS_FIFO_PHSERR_INVERT_MASK     0x0002
#define TX_PI_TX_PI_CONTROL_5_TX_PI_HS_FIFO_PHSERR_INVERT_ALIGN    0
#define TX_PI_TX_PI_CONTROL_5_TX_PI_HS_FIFO_PHSERR_INVERT_BITS     1
#define TX_PI_TX_PI_CONTROL_5_TX_PI_HS_FIFO_PHSERR_INVERT_SHIFT    1

/* TX_PI :: tx_pi_control_5 :: reserved2 [00:00] */
#define TX_PI_TX_PI_CONTROL_5_RESERVED2_MASK                       0x0001
#define TX_PI_TX_PI_CONTROL_5_RESERVED2_ALIGN                      0
#define TX_PI_TX_PI_CONTROL_5_RESERVED2_BITS                       1
#define TX_PI_TX_PI_CONTROL_5_RESERVED2_SHIFT                      0


/****************************************************************************
 * TX_PI :: tx_pi_control_6
 ***************************************************************************/
/* TX_PI :: tx_pi_control_6 :: reserved0 [15:02] */
#define TX_PI_TX_PI_CONTROL_6_RESERVED0_MASK                       0xfffc
#define TX_PI_TX_PI_CONTROL_6_RESERVED0_ALIGN                      0
#define TX_PI_TX_PI_CONTROL_6_RESERVED0_BITS                       14
#define TX_PI_TX_PI_CONTROL_6_RESERVED0_SHIFT                      2

/* TX_PI :: tx_pi_control_6 :: tx_pi_lane_sel [01:00] */
#define TX_PI_TX_PI_CONTROL_6_TX_PI_LANE_SEL_MASK                  0x0003
#define TX_PI_TX_PI_CONTROL_6_TX_PI_LANE_SEL_ALIGN                 0
#define TX_PI_TX_PI_CONTROL_6_TX_PI_LANE_SEL_BITS                  2
#define TX_PI_TX_PI_CONTROL_6_TX_PI_LANE_SEL_SHIFT                 0


/****************************************************************************
 * TX_PI :: tx_pi_status_0
 ***************************************************************************/
/* TX_PI :: tx_pi_status_0 :: reserved0 [15:07] */
#define TX_PI_TX_PI_STATUS_0_RESERVED0_MASK                        0xff80
#define TX_PI_TX_PI_STATUS_0_RESERVED0_ALIGN                       0
#define TX_PI_TX_PI_STATUS_0_RESERVED0_BITS                        9
#define TX_PI_TX_PI_STATUS_0_RESERVED0_SHIFT                       7

/* TX_PI :: tx_pi_status_0 :: tx_pi_phase_cntr [06:00] */
#define TX_PI_TX_PI_STATUS_0_TX_PI_PHASE_CNTR_MASK                 0x007f
#define TX_PI_TX_PI_STATUS_0_TX_PI_PHASE_CNTR_ALIGN                0
#define TX_PI_TX_PI_STATUS_0_TX_PI_PHASE_CNTR_BITS                 7
#define TX_PI_TX_PI_STATUS_0_TX_PI_PHASE_CNTR_SHIFT                0


/****************************************************************************
 * TX_PI :: tx_pi_status_1
 ***************************************************************************/
/* TX_PI :: tx_pi_status_1 :: reserved0 [15:14] */
#define TX_PI_TX_PI_STATUS_1_RESERVED0_MASK                        0xc000
#define TX_PI_TX_PI_STATUS_1_RESERVED0_ALIGN                       0
#define TX_PI_TX_PI_STATUS_1_RESERVED0_BITS                        2
#define TX_PI_TX_PI_STATUS_1_RESERVED0_SHIFT                       14

/* TX_PI :: tx_pi_status_1 :: tx_pi_integ1_reg [13:00] */
#define TX_PI_TX_PI_STATUS_1_TX_PI_INTEG1_REG_MASK                 0x3fff
#define TX_PI_TX_PI_STATUS_1_TX_PI_INTEG1_REG_ALIGN                0
#define TX_PI_TX_PI_STATUS_1_TX_PI_INTEG1_REG_BITS                 14
#define TX_PI_TX_PI_STATUS_1_TX_PI_INTEG1_REG_SHIFT                0


/****************************************************************************
 * TX_PI :: tx_pi_status_2
 ***************************************************************************/
/* TX_PI :: tx_pi_status_2 :: reserved0 [15:15] */
#define TX_PI_TX_PI_STATUS_2_RESERVED0_MASK                        0x8000
#define TX_PI_TX_PI_STATUS_2_RESERVED0_ALIGN                       0
#define TX_PI_TX_PI_STATUS_2_RESERVED0_BITS                        1
#define TX_PI_TX_PI_STATUS_2_RESERVED0_SHIFT                       15

/* TX_PI :: tx_pi_status_2 :: tx_pi_integ2_reg [14:00] */
#define TX_PI_TX_PI_STATUS_2_TX_PI_INTEG2_REG_MASK                 0x7fff
#define TX_PI_TX_PI_STATUS_2_TX_PI_INTEG2_REG_ALIGN                0
#define TX_PI_TX_PI_STATUS_2_TX_PI_INTEG2_REG_BITS                 15
#define TX_PI_TX_PI_STATUS_2_TX_PI_INTEG2_REG_SHIFT                0


/****************************************************************************
 * TX_PI :: tx_pi_status_3
 ***************************************************************************/
/* TX_PI :: tx_pi_status_3 :: reserved0 [15:06] */
#define TX_PI_TX_PI_STATUS_3_RESERVED0_MASK                        0xffc0
#define TX_PI_TX_PI_STATUS_3_RESERVED0_ALIGN                       0
#define TX_PI_TX_PI_STATUS_3_RESERVED0_BITS                        10
#define TX_PI_TX_PI_STATUS_3_RESERVED0_SHIFT                       6

/* TX_PI :: tx_pi_status_3 :: tx_pi_phase_err [05:00] */
#define TX_PI_TX_PI_STATUS_3_TX_PI_PHASE_ERR_MASK                  0x003f
#define TX_PI_TX_PI_STATUS_3_TX_PI_PHASE_ERR_ALIGN                 0
#define TX_PI_TX_PI_STATUS_3_TX_PI_PHASE_ERR_BITS                  6
#define TX_PI_TX_PI_STATUS_3_TX_PI_PHASE_ERR_SHIFT                 0


/****************************************************************************
 * TX_PI :: tx_pi_status_4
 ***************************************************************************/
/* TX_PI :: tx_pi_status_4 :: reserved0 [15:02] */
#define TX_PI_TX_PI_STATUS_4_RESERVED0_MASK                        0xfffc
#define TX_PI_TX_PI_STATUS_4_RESERVED0_ALIGN                       0
#define TX_PI_TX_PI_STATUS_4_RESERVED0_BITS                        14
#define TX_PI_TX_PI_STATUS_4_RESERVED0_SHIFT                       2

/* TX_PI :: tx_pi_status_4 :: st_afe_tx_fifo_resetb [01:01] */
#define TX_PI_TX_PI_STATUS_4_ST_AFE_TX_FIFO_RESETB_MASK            0x0002
#define TX_PI_TX_PI_STATUS_4_ST_AFE_TX_FIFO_RESETB_ALIGN           0
#define TX_PI_TX_PI_STATUS_4_ST_AFE_TX_FIFO_RESETB_BITS            1
#define TX_PI_TX_PI_STATUS_4_ST_AFE_TX_FIFO_RESETB_SHIFT           1

/* TX_PI :: tx_pi_status_4 :: tx_pi_hs_fifo_phserr [00:00] */
#define TX_PI_TX_PI_STATUS_4_TX_PI_HS_FIFO_PHSERR_MASK             0x0001
#define TX_PI_TX_PI_STATUS_4_TX_PI_HS_FIFO_PHSERR_ALIGN            0
#define TX_PI_TX_PI_STATUS_4_TX_PI_HS_FIFO_PHSERR_BITS             1
#define TX_PI_TX_PI_STATUS_4_TX_PI_HS_FIFO_PHSERR_SHIFT            0


/****************************************************************************
 * TX_PI :: tx_pi_tx_fifo_ovfb_status
 ***************************************************************************/
/* TX_PI :: tx_pi_tx_fifo_ovfb_status :: reserved0 [15:02] */
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_RESERVED0_MASK             0xfffc
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_RESERVED0_ALIGN            0
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_RESERVED0_BITS             14
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_RESERVED0_SHIFT            2

/* TX_PI :: tx_pi_tx_fifo_ovfb_status :: tx_fifo_ovfb_fall_edge_lh [01:01] */
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_TX_FIFO_OVFB_FALL_EDGE_LH_MASK 0x0002
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_TX_FIFO_OVFB_FALL_EDGE_LH_ALIGN 0
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_TX_FIFO_OVFB_FALL_EDGE_LH_BITS 1
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_TX_FIFO_OVFB_FALL_EDGE_LH_SHIFT 1

/* TX_PI :: tx_pi_tx_fifo_ovfb_status :: tx_fifo_ovfb [00:00] */
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_TX_FIFO_OVFB_MASK          0x0001
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_TX_FIFO_OVFB_ALIGN         0
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_TX_FIFO_OVFB_BITS          1
#define TX_PI_TX_PI_TX_FIFO_OVFB_STATUS_TX_FIFO_OVFB_SHIFT         0


/****************************************************************************
 * merlin_gallardo_ckrst_ctrl_blk_CKRST_CTRL
 ***************************************************************************/
/****************************************************************************
 * CKRST_CTRL :: OSR_MODE_CONTROL
 ***************************************************************************/
/* CKRST_CTRL :: OSR_MODE_CONTROL :: osr_mode_frc [15:15] */
#define CKRST_CTRL_OSR_MODE_CONTROL_OSR_MODE_FRC_MASK              0x8000
#define CKRST_CTRL_OSR_MODE_CONTROL_OSR_MODE_FRC_ALIGN             0
#define CKRST_CTRL_OSR_MODE_CONTROL_OSR_MODE_FRC_BITS              1
#define CKRST_CTRL_OSR_MODE_CONTROL_OSR_MODE_FRC_SHIFT             15

/* CKRST_CTRL :: OSR_MODE_CONTROL :: reserved0 [14:04] */
#define CKRST_CTRL_OSR_MODE_CONTROL_RESERVED0_MASK                 0x7ff0
#define CKRST_CTRL_OSR_MODE_CONTROL_RESERVED0_ALIGN                0
#define CKRST_CTRL_OSR_MODE_CONTROL_RESERVED0_BITS                 11
#define CKRST_CTRL_OSR_MODE_CONTROL_RESERVED0_SHIFT                4

/* CKRST_CTRL :: OSR_MODE_CONTROL :: osr_mode [03:00] */
#define CKRST_CTRL_OSR_MODE_CONTROL_OSR_MODE_MASK                  0x000f
#define CKRST_CTRL_OSR_MODE_CONTROL_OSR_MODE_ALIGN                 0
#define CKRST_CTRL_OSR_MODE_CONTROL_OSR_MODE_BITS                  4
#define CKRST_CTRL_OSR_MODE_CONTROL_OSR_MODE_SHIFT                 0


/****************************************************************************
 * CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL
 ***************************************************************************/
/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: pmd_rx_clk_vld_frc_val [15:15] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_RX_CLK_VLD_FRC_VAL_MASK 0x8000
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_RX_CLK_VLD_FRC_VAL_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_RX_CLK_VLD_FRC_VAL_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_RX_CLK_VLD_FRC_VAL_SHIFT 15

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: pmd_rx_clk_vld_frc [14:14] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_RX_CLK_VLD_FRC_MASK 0x4000
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_RX_CLK_VLD_FRC_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_RX_CLK_VLD_FRC_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_RX_CLK_VLD_FRC_SHIFT 14

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: pmd_tx_clk_vld_frc_val [13:13] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_TX_CLK_VLD_FRC_VAL_MASK 0x2000
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_TX_CLK_VLD_FRC_VAL_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_TX_CLK_VLD_FRC_VAL_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_TX_CLK_VLD_FRC_VAL_SHIFT 13

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: pmd_tx_clk_vld_frc [12:12] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_TX_CLK_VLD_FRC_MASK 0x1000
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_TX_CLK_VLD_FRC_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_TX_CLK_VLD_FRC_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_PMD_TX_CLK_VLD_FRC_SHIFT 12

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_tx_s_pwrdn [11:11] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_PWRDN_MASK 0x0800
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_PWRDN_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_PWRDN_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_PWRDN_SHIFT 11

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_tx_s_comclk_frc [10:10] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_COMCLK_FRC_MASK 0x0400
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_COMCLK_FRC_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_COMCLK_FRC_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_COMCLK_FRC_SHIFT 10

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_tx_s_comclk_sel [09:09] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_COMCLK_SEL_MASK 0x0200
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_COMCLK_SEL_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_COMCLK_SEL_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_COMCLK_SEL_SHIFT 9

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_tx_s_clkgate_frc [08:08] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_CLKGATE_FRC_MASK 0x0100
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_CLKGATE_FRC_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_CLKGATE_FRC_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_CLKGATE_FRC_SHIFT 8

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_tx_s_clkgate [07:07] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_CLKGATE_MASK 0x0080
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_CLKGATE_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_CLKGATE_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_TX_S_CLKGATE_SHIFT 7

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_rx_s_pwrdn [06:06] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_PWRDN_MASK 0x0040
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_PWRDN_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_PWRDN_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_PWRDN_SHIFT 6

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_rx_s_comclk_frc [05:05] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_COMCLK_FRC_MASK 0x0020
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_COMCLK_FRC_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_COMCLK_FRC_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_COMCLK_FRC_SHIFT 5

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_rx_s_comclk_sel [04:04] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_COMCLK_SEL_MASK 0x0010
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_COMCLK_SEL_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_COMCLK_SEL_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_COMCLK_SEL_SHIFT 4

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_rx_s_clkgate_frc [03:03] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_CLKGATE_FRC_MASK 0x0008
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_CLKGATE_FRC_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_CLKGATE_FRC_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_CLKGATE_FRC_SHIFT 3

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_rx_s_clkgate [02:02] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_CLKGATE_MASK 0x0004
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_CLKGATE_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_CLKGATE_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_RX_S_CLKGATE_SHIFT 2

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_dp_s_rstb [01:01] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_DP_S_RSTB_MASK 0x0002
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_DP_S_RSTB_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_DP_S_RSTB_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_DP_S_RSTB_SHIFT 1

/* CKRST_CTRL :: LANE_CLK_RESET_N_POWERDOWN_CONTROL :: ln_s_rstb [00:00] */
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_S_RSTB_MASK 0x0001
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_S_RSTB_ALIGN 0
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_S_RSTB_BITS 1
#define CKRST_CTRL_LANE_CLK_RESET_N_POWERDOWN_CONTROL_LN_S_RSTB_SHIFT 0


/****************************************************************************
 * CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL
 ***************************************************************************/
/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: reserved0 [15:11] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_RESERVED0_MASK 0xf800
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_RESERVED0_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_RESERVED0_BITS 5
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_RESERVED0_SHIFT 11

/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: afe_txclk_reset_frc_val [10:10] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TXCLK_RESET_FRC_VAL_MASK 0x0400
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TXCLK_RESET_FRC_VAL_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TXCLK_RESET_FRC_VAL_BITS 1
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TXCLK_RESET_FRC_VAL_SHIFT 10

/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: afe_txclk_reset_frc [09:09] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TXCLK_RESET_FRC_MASK 0x0200
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TXCLK_RESET_FRC_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TXCLK_RESET_FRC_BITS 1
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TXCLK_RESET_FRC_SHIFT 9

/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: afe_SigDetPwrDn [08:08] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_SIGDETPWRDN_MASK 0x0100
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_SIGDETPWRDN_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_SIGDETPWRDN_BITS 1
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_SIGDETPWRDN_SHIFT 8

/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: afe_tx_reset_frc_val [07:07] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_RESET_FRC_VAL_MASK 0x0080
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_RESET_FRC_VAL_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_RESET_FRC_VAL_BITS 1
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_RESET_FRC_VAL_SHIFT 7

/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: afe_tx_reset_frc [06:06] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_RESET_FRC_MASK 0x0040
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_RESET_FRC_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_RESET_FRC_BITS 1
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_RESET_FRC_SHIFT 6

/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: afe_tx_pwrdn_frc_val [05:05] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_PWRDN_FRC_VAL_MASK 0x0020
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_PWRDN_FRC_VAL_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_PWRDN_FRC_VAL_BITS 1
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_PWRDN_FRC_VAL_SHIFT 5

/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: afe_tx_pwrdn_frc [04:04] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_PWRDN_FRC_MASK 0x0010
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_PWRDN_FRC_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_PWRDN_FRC_BITS 1
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_TX_PWRDN_FRC_SHIFT 4

/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: afe_rx_reset_frc_val [03:03] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_RESET_FRC_VAL_MASK 0x0008
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_RESET_FRC_VAL_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_RESET_FRC_VAL_BITS 1
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_RESET_FRC_VAL_SHIFT 3

/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: afe_rx_reset_frc [02:02] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_RESET_FRC_MASK 0x0004
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_RESET_FRC_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_RESET_FRC_BITS 1
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_RESET_FRC_SHIFT 2

/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: afe_rx_pwrdn_frc_val [01:01] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_PWRDN_FRC_VAL_MASK 0x0002
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_PWRDN_FRC_VAL_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_PWRDN_FRC_VAL_BITS 1
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_PWRDN_FRC_VAL_SHIFT 1

/* CKRST_CTRL :: LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL :: afe_rx_pwrdn_frc [00:00] */
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_PWRDN_FRC_MASK 0x0001
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_PWRDN_FRC_ALIGN 0
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_PWRDN_FRC_BITS 1
#define CKRST_CTRL_LANE_AFE_RESET_PWRDWN_CONTROL_CONTROL_AFE_RX_PWRDN_FRC_SHIFT 0


/****************************************************************************
 * CKRST_CTRL :: LANE_RESET_N_PWRDN_PIN_KILL_CONTROL
 ***************************************************************************/
/* CKRST_CTRL :: LANE_RESET_N_PWRDN_PIN_KILL_CONTROL :: reserved0 [15:04] */
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_RESERVED0_MASK 0xfff0
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_RESERVED0_ALIGN 0
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_RESERVED0_BITS 12
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_RESERVED0_SHIFT 4

/* CKRST_CTRL :: LANE_RESET_N_PWRDN_PIN_KILL_CONTROL :: pmd_ln_tx_h_pwrdn_pkill [03:03] */
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_TX_H_PWRDN_PKILL_MASK 0x0008
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_TX_H_PWRDN_PKILL_ALIGN 0
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_TX_H_PWRDN_PKILL_BITS 1
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_TX_H_PWRDN_PKILL_SHIFT 3

/* CKRST_CTRL :: LANE_RESET_N_PWRDN_PIN_KILL_CONTROL :: pmd_ln_rx_h_pwrdn_pkill [02:02] */
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_RX_H_PWRDN_PKILL_MASK 0x0004
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_RX_H_PWRDN_PKILL_ALIGN 0
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_RX_H_PWRDN_PKILL_BITS 1
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_RX_H_PWRDN_PKILL_SHIFT 2

/* CKRST_CTRL :: LANE_RESET_N_PWRDN_PIN_KILL_CONTROL :: pmd_ln_dp_h_rstb_pkill [01:01] */
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_DP_H_RSTB_PKILL_MASK 0x0002
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_DP_H_RSTB_PKILL_ALIGN 0
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_DP_H_RSTB_PKILL_BITS 1
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_DP_H_RSTB_PKILL_SHIFT 1

/* CKRST_CTRL :: LANE_RESET_N_PWRDN_PIN_KILL_CONTROL :: pmd_ln_h_rstb_pkill [00:00] */
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_H_RSTB_PKILL_MASK 0x0001
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_H_RSTB_PKILL_ALIGN 0
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_H_RSTB_PKILL_BITS 1
#define CKRST_CTRL_LANE_RESET_N_PWRDN_PIN_KILL_CONTROL_PMD_LN_H_RSTB_PKILL_SHIFT 0


/****************************************************************************
 * CKRST_CTRL :: LANE_DEBUG_RESET_CONTROL
 ***************************************************************************/
/* CKRST_CTRL :: LANE_DEBUG_RESET_CONTROL :: reserved0 [15:10] */
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_RESERVED0_MASK         0xfc00
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_RESERVED0_ALIGN        0
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_RESERVED0_BITS         6
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_RESERVED0_SHIFT        10

/* CKRST_CTRL :: LANE_DEBUG_RESET_CONTROL :: ln_tx_dp_s_rstb [09:09] */
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_TX_DP_S_RSTB_MASK   0x0200
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_TX_DP_S_RSTB_ALIGN  0
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_TX_DP_S_RSTB_BITS   1
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_TX_DP_S_RSTB_SHIFT  9

/* CKRST_CTRL :: LANE_DEBUG_RESET_CONTROL :: ln_tx_s_rstb [08:08] */
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_TX_S_RSTB_MASK      0x0100
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_TX_S_RSTB_ALIGN     0
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_TX_S_RSTB_BITS      1
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_TX_S_RSTB_SHIFT     8

/* CKRST_CTRL :: LANE_DEBUG_RESET_CONTROL :: reserved1 [07:03] */
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_RESERVED1_MASK         0x00f8
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_RESERVED1_ALIGN        0
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_RESERVED1_BITS         5
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_RESERVED1_SHIFT        3

/* CKRST_CTRL :: LANE_DEBUG_RESET_CONTROL :: sigdet_dp_rstb_en [02:02] */
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_SIGDET_DP_RSTB_EN_MASK 0x0004
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_SIGDET_DP_RSTB_EN_ALIGN 0
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_SIGDET_DP_RSTB_EN_BITS 1
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_SIGDET_DP_RSTB_EN_SHIFT 2

/* CKRST_CTRL :: LANE_DEBUG_RESET_CONTROL :: ln_rx_dp_s_rstb [01:01] */
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_RX_DP_S_RSTB_MASK   0x0002
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_RX_DP_S_RSTB_ALIGN  0
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_RX_DP_S_RSTB_BITS   1
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_RX_DP_S_RSTB_SHIFT  1

/* CKRST_CTRL :: LANE_DEBUG_RESET_CONTROL :: ln_rx_s_rstb [00:00] */
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_RX_S_RSTB_MASK      0x0001
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_RX_S_RSTB_ALIGN     0
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_RX_S_RSTB_BITS      1
#define CKRST_CTRL_LANE_DEBUG_RESET_CONTROL_LN_RX_S_RSTB_SHIFT     0


/****************************************************************************
 * CKRST_CTRL :: UC_ACK_LANE_CONTROL
 ***************************************************************************/
/* CKRST_CTRL :: UC_ACK_LANE_CONTROL :: reserved0 [15:02] */
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_RESERVED0_MASK              0xfffc
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_RESERVED0_ALIGN             0
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_RESERVED0_BITS              14
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_RESERVED0_SHIFT             2

/* CKRST_CTRL :: UC_ACK_LANE_CONTROL :: uc_ack_lane_dp_reset [01:01] */
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_UC_ACK_LANE_DP_RESET_MASK   0x0002
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_UC_ACK_LANE_DP_RESET_ALIGN  0
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_UC_ACK_LANE_DP_RESET_BITS   1
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_UC_ACK_LANE_DP_RESET_SHIFT  1

/* CKRST_CTRL :: UC_ACK_LANE_CONTROL :: uc_ack_lane_cfg_done [00:00] */
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_UC_ACK_LANE_CFG_DONE_MASK   0x0001
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_UC_ACK_LANE_CFG_DONE_ALIGN  0
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_UC_ACK_LANE_CFG_DONE_BITS   1
#define CKRST_CTRL_UC_ACK_LANE_CONTROL_UC_ACK_LANE_CFG_DONE_SHIFT  0


/****************************************************************************
 * CKRST_CTRL :: LANE_REG_RESET_OCCURRED_CONTROL
 ***************************************************************************/
/* CKRST_CTRL :: LANE_REG_RESET_OCCURRED_CONTROL :: reserved0 [15:01] */
#define CKRST_CTRL_LANE_REG_RESET_OCCURRED_CONTROL_RESERVED0_MASK  0xfffe
#define CKRST_CTRL_LANE_REG_RESET_OCCURRED_CONTROL_RESERVED0_ALIGN 0
#define CKRST_CTRL_LANE_REG_RESET_OCCURRED_CONTROL_RESERVED0_BITS  15
#define CKRST_CTRL_LANE_REG_RESET_OCCURRED_CONTROL_RESERVED0_SHIFT 1

/* CKRST_CTRL :: LANE_REG_RESET_OCCURRED_CONTROL :: lane_reg_reset_occurred [00:00] */
#define CKRST_CTRL_LANE_REG_RESET_OCCURRED_CONTROL_LANE_REG_RESET_OCCURRED_MASK 0x0001
#define CKRST_CTRL_LANE_REG_RESET_OCCURRED_CONTROL_LANE_REG_RESET_OCCURRED_ALIGN 0
#define CKRST_CTRL_LANE_REG_RESET_OCCURRED_CONTROL_LANE_REG_RESET_OCCURRED_BITS 1
#define CKRST_CTRL_LANE_REG_RESET_OCCURRED_CONTROL_LANE_REG_RESET_OCCURRED_SHIFT 0


/****************************************************************************
 * CKRST_CTRL :: PMD_LANE_MODE_STATUS
 ***************************************************************************/
/* CKRST_CTRL :: PMD_LANE_MODE_STATUS :: reserved0 [15:08] */
#define CKRST_CTRL_PMD_LANE_MODE_STATUS_RESERVED0_MASK             0xff00
#define CKRST_CTRL_PMD_LANE_MODE_STATUS_RESERVED0_ALIGN            0
#define CKRST_CTRL_PMD_LANE_MODE_STATUS_RESERVED0_BITS             8
#define CKRST_CTRL_PMD_LANE_MODE_STATUS_RESERVED0_SHIFT            8

/* CKRST_CTRL :: PMD_LANE_MODE_STATUS :: pmd_lane_mode [07:00] */
#define CKRST_CTRL_PMD_LANE_MODE_STATUS_PMD_LANE_MODE_MASK         0x00ff
#define CKRST_CTRL_PMD_LANE_MODE_STATUS_PMD_LANE_MODE_ALIGN        0
#define CKRST_CTRL_PMD_LANE_MODE_STATUS_PMD_LANE_MODE_BITS         8
#define CKRST_CTRL_PMD_LANE_MODE_STATUS_PMD_LANE_MODE_SHIFT        0


/****************************************************************************
 * CKRST_CTRL :: LANE_DP_RESET_STATE_STATUS
 ***************************************************************************/
/* CKRST_CTRL :: LANE_DP_RESET_STATE_STATUS :: reserved0 [15:03] */
#define CKRST_CTRL_LANE_DP_RESET_STATE_STATUS_RESERVED0_MASK       0xfff8
#define CKRST_CTRL_LANE_DP_RESET_STATE_STATUS_RESERVED0_ALIGN      0
#define CKRST_CTRL_LANE_DP_RESET_STATE_STATUS_RESERVED0_BITS       13
#define CKRST_CTRL_LANE_DP_RESET_STATE_STATUS_RESERVED0_SHIFT      3

/* CKRST_CTRL :: LANE_DP_RESET_STATE_STATUS :: lane_dp_reset_state [02:00] */
#define CKRST_CTRL_LANE_DP_RESET_STATE_STATUS_LANE_DP_RESET_STATE_MASK 0x0007
#define CKRST_CTRL_LANE_DP_RESET_STATE_STATUS_LANE_DP_RESET_STATE_ALIGN 0
#define CKRST_CTRL_LANE_DP_RESET_STATE_STATUS_LANE_DP_RESET_STATE_BITS 3
#define CKRST_CTRL_LANE_DP_RESET_STATE_STATUS_LANE_DP_RESET_STATE_SHIFT 0


/****************************************************************************
 * CKRST_CTRL :: LN_MASK
 ***************************************************************************/
/* CKRST_CTRL :: LN_MASK :: reserved0 [15:01] */
#define CKRST_CTRL_LN_MASK_RESERVED0_MASK                          0xfffe
#define CKRST_CTRL_LN_MASK_RESERVED0_ALIGN                         0
#define CKRST_CTRL_LN_MASK_RESERVED0_BITS                          15
#define CKRST_CTRL_LN_MASK_RESERVED0_SHIFT                         1

/* CKRST_CTRL :: LN_MASK :: ln_mask [00:00] */
#define CKRST_CTRL_LN_MASK_LN_MASK_MASK                            0x0001
#define CKRST_CTRL_LN_MASK_LN_MASK_ALIGN                           0
#define CKRST_CTRL_LN_MASK_LN_MASK_BITS                            1
#define CKRST_CTRL_LN_MASK_LN_MASK_SHIFT                           0


/****************************************************************************
 * CKRST_CTRL :: OSR_MODE_STATUS
 ***************************************************************************/
/* CKRST_CTRL :: OSR_MODE_STATUS :: reserved0 [15:04] */
#define CKRST_CTRL_OSR_MODE_STATUS_RESERVED0_MASK                  0xfff0
#define CKRST_CTRL_OSR_MODE_STATUS_RESERVED0_ALIGN                 0
#define CKRST_CTRL_OSR_MODE_STATUS_RESERVED0_BITS                  12
#define CKRST_CTRL_OSR_MODE_STATUS_RESERVED0_SHIFT                 4

/* CKRST_CTRL :: OSR_MODE_STATUS :: st_osr_mode [03:00] */
#define CKRST_CTRL_OSR_MODE_STATUS_ST_OSR_MODE_MASK                0x000f
#define CKRST_CTRL_OSR_MODE_STATUS_ST_OSR_MODE_ALIGN               0
#define CKRST_CTRL_OSR_MODE_STATUS_ST_OSR_MODE_BITS                4
#define CKRST_CTRL_OSR_MODE_STATUS_ST_OSR_MODE_SHIFT               0


/****************************************************************************
 * merlin_gallardo_ams_blk_AMS_RX
 ***************************************************************************/
/****************************************************************************
 * AMS_RX :: RX_CTRL_0
 ***************************************************************************/
/* AMS_RX :: RX_CTRL_0 :: term_lowZvdd [15:15] */
#define AMS_RX_RX_CTRL_0_TERM_LOWZVDD_MASK                         0x8000
#define AMS_RX_RX_CTRL_0_TERM_LOWZVDD_ALIGN                        0
#define AMS_RX_RX_CTRL_0_TERM_LOWZVDD_BITS                         1
#define AMS_RX_RX_CTRL_0_TERM_LOWZVDD_SHIFT                        15

/* AMS_RX :: RX_CTRL_0 :: term_lowZgnd [14:14] */
#define AMS_RX_RX_CTRL_0_TERM_LOWZGND_MASK                         0x4000
#define AMS_RX_RX_CTRL_0_TERM_LOWZGND_ALIGN                        0
#define AMS_RX_RX_CTRL_0_TERM_LOWZGND_BITS                         1
#define AMS_RX_RX_CTRL_0_TERM_LOWZGND_SHIFT                        14

/* AMS_RX :: RX_CTRL_0 :: term_cmult_ena [13:13] */
#define AMS_RX_RX_CTRL_0_TERM_CMULT_ENA_MASK                       0x2000
#define AMS_RX_RX_CTRL_0_TERM_CMULT_ENA_ALIGN                      0
#define AMS_RX_RX_CTRL_0_TERM_CMULT_ENA_BITS                       1
#define AMS_RX_RX_CTRL_0_TERM_CMULT_ENA_SHIFT                      13

/* AMS_RX :: RX_CTRL_0 :: term_cm_ena [12:12] */
#define AMS_RX_RX_CTRL_0_TERM_CM_ENA_MASK                          0x1000
#define AMS_RX_RX_CTRL_0_TERM_CM_ENA_ALIGN                         0
#define AMS_RX_RX_CTRL_0_TERM_CM_ENA_BITS                          1
#define AMS_RX_RX_CTRL_0_TERM_CM_ENA_SHIFT                         12

/* AMS_RX :: RX_CTRL_0 :: en_rxck_test [11:10] */
#define AMS_RX_RX_CTRL_0_EN_RXCK_TEST_MASK                         0x0c00
#define AMS_RX_RX_CTRL_0_EN_RXCK_TEST_ALIGN                        0
#define AMS_RX_RX_CTRL_0_EN_RXCK_TEST_BITS                         2
#define AMS_RX_RX_CTRL_0_EN_RXCK_TEST_SHIFT                        10

/* AMS_RX :: RX_CTRL_0 :: en_rxck_testport [09:09] */
#define AMS_RX_RX_CTRL_0_EN_RXCK_TESTPORT_MASK                     0x0200
#define AMS_RX_RX_CTRL_0_EN_RXCK_TESTPORT_ALIGN                    0
#define AMS_RX_RX_CTRL_0_EN_RXCK_TESTPORT_BITS                     1
#define AMS_RX_RX_CTRL_0_EN_RXCK_TESTPORT_SHIFT                    9

/* AMS_RX :: RX_CTRL_0 :: ams_8_5 [08:05] */
#define AMS_RX_RX_CTRL_0_AMS_8_5_MASK                              0x01e0
#define AMS_RX_RX_CTRL_0_AMS_8_5_ALIGN                             0
#define AMS_RX_RX_CTRL_0_AMS_8_5_BITS                              4
#define AMS_RX_RX_CTRL_0_AMS_8_5_SHIFT                             5

/* AMS_RX :: RX_CTRL_0 :: sigdet_modesel [04:04] */
#define AMS_RX_RX_CTRL_0_SIGDET_MODESEL_MASK                       0x0010
#define AMS_RX_RX_CTRL_0_SIGDET_MODESEL_ALIGN                      0
#define AMS_RX_RX_CTRL_0_SIGDET_MODESEL_BITS                       1
#define AMS_RX_RX_CTRL_0_SIGDET_MODESEL_SHIFT                      4

/* AMS_RX :: RX_CTRL_0 :: sigdet_bypass [03:03] */
#define AMS_RX_RX_CTRL_0_SIGDET_BYPASS_MASK                        0x0008
#define AMS_RX_RX_CTRL_0_SIGDET_BYPASS_ALIGN                       0
#define AMS_RX_RX_CTRL_0_SIGDET_BYPASS_BITS                        1
#define AMS_RX_RX_CTRL_0_SIGDET_BYPASS_SHIFT                       3

/* AMS_RX :: RX_CTRL_0 :: sigdet_pwrdn [02:02] */
#define AMS_RX_RX_CTRL_0_SIGDET_PWRDN_MASK                         0x0004
#define AMS_RX_RX_CTRL_0_SIGDET_PWRDN_ALIGN                        0
#define AMS_RX_RX_CTRL_0_SIGDET_PWRDN_BITS                         1
#define AMS_RX_RX_CTRL_0_SIGDET_PWRDN_SHIFT                        2

/* AMS_RX :: RX_CTRL_0 :: ams_spare_0_0 [01:00] */
#define AMS_RX_RX_CTRL_0_AMS_SPARE_0_0_MASK                        0x0003
#define AMS_RX_RX_CTRL_0_AMS_SPARE_0_0_ALIGN                       0
#define AMS_RX_RX_CTRL_0_AMS_SPARE_0_0_BITS                        2
#define AMS_RX_RX_CTRL_0_AMS_SPARE_0_0_SHIFT                       0


/****************************************************************************
 * AMS_RX :: RX_CTRL_1
 ***************************************************************************/
/* AMS_RX :: RX_CTRL_1 :: reserved0 [15:14] */
#define AMS_RX_RX_CTRL_1_RESERVED0_MASK                            0xc000
#define AMS_RX_RX_CTRL_1_RESERVED0_ALIGN                           0
#define AMS_RX_RX_CTRL_1_RESERVED0_BITS                            2
#define AMS_RX_RX_CTRL_1_RESERVED0_SHIFT                           14

/* AMS_RX :: RX_CTRL_1 :: curr_dfe_taps [13:11] */
#define AMS_RX_RX_CTRL_1_CURR_DFE_TAPS_MASK                        0x3800
#define AMS_RX_RX_CTRL_1_CURR_DFE_TAPS_ALIGN                       0
#define AMS_RX_RX_CTRL_1_CURR_DFE_TAPS_BITS                        3
#define AMS_RX_RX_CTRL_1_CURR_DFE_TAPS_SHIFT                       11

/* AMS_RX :: RX_CTRL_1 :: curr_vga [10:08] */
#define AMS_RX_RX_CTRL_1_CURR_VGA_MASK                             0x0700
#define AMS_RX_RX_CTRL_1_CURR_VGA_ALIGN                            0
#define AMS_RX_RX_CTRL_1_CURR_VGA_BITS                             3
#define AMS_RX_RX_CTRL_1_CURR_VGA_SHIFT                            8

/* AMS_RX :: RX_CTRL_1 :: curr_pi [07:05] */
#define AMS_RX_RX_CTRL_1_CURR_PI_MASK                              0x00e0
#define AMS_RX_RX_CTRL_1_CURR_PI_ALIGN                             0
#define AMS_RX_RX_CTRL_1_CURR_PI_BITS                              3
#define AMS_RX_RX_CTRL_1_CURR_PI_SHIFT                             5

/* AMS_RX :: RX_CTRL_1 :: ams_spare_1_0 [04:01] */
#define AMS_RX_RX_CTRL_1_AMS_SPARE_1_0_MASK                        0x001e
#define AMS_RX_RX_CTRL_1_AMS_SPARE_1_0_ALIGN                       0
#define AMS_RX_RX_CTRL_1_AMS_SPARE_1_0_BITS                        4
#define AMS_RX_RX_CTRL_1_AMS_SPARE_1_0_SHIFT                       1

/* AMS_RX :: RX_CTRL_1 :: vga_out_idle [00:00] */
#define AMS_RX_RX_CTRL_1_VGA_OUT_IDLE_MASK                         0x0001
#define AMS_RX_RX_CTRL_1_VGA_OUT_IDLE_ALIGN                        0
#define AMS_RX_RX_CTRL_1_VGA_OUT_IDLE_BITS                         1
#define AMS_RX_RX_CTRL_1_VGA_OUT_IDLE_SHIFT                        0


/****************************************************************************
 * AMS_RX :: RX_CTRL_2
 ***************************************************************************/
/* AMS_RX :: RX_CTRL_2 :: sel_th4dfe [15:14] */
#define AMS_RX_RX_CTRL_2_SEL_TH4DFE_MASK                           0xc000
#define AMS_RX_RX_CTRL_2_SEL_TH4DFE_ALIGN                          0
#define AMS_RX_RX_CTRL_2_SEL_TH4DFE_BITS                           2
#define AMS_RX_RX_CTRL_2_SEL_TH4DFE_SHIFT                          14

/* AMS_RX :: RX_CTRL_2 :: ams_spare_2_0 [13:09] */
#define AMS_RX_RX_CTRL_2_AMS_SPARE_2_0_MASK                        0x3e00
#define AMS_RX_RX_CTRL_2_AMS_SPARE_2_0_ALIGN                       0
#define AMS_RX_RX_CTRL_2_AMS_SPARE_2_0_BITS                        5
#define AMS_RX_RX_CTRL_2_AMS_SPARE_2_0_SHIFT                       9

/* AMS_RX :: RX_CTRL_2 :: curr_dfe_summer [08:06] */
#define AMS_RX_RX_CTRL_2_CURR_DFE_SUMMER_MASK                      0x01c0
#define AMS_RX_RX_CTRL_2_CURR_DFE_SUMMER_ALIGN                     0
#define AMS_RX_RX_CTRL_2_CURR_DFE_SUMMER_BITS                      3
#define AMS_RX_RX_CTRL_2_CURR_DFE_SUMMER_SHIFT                     6

/* AMS_RX :: RX_CTRL_2 :: curr_dfe_ref [05:03] */
#define AMS_RX_RX_CTRL_2_CURR_DFE_REF_MASK                         0x0038
#define AMS_RX_RX_CTRL_2_CURR_DFE_REF_ALIGN                        0
#define AMS_RX_RX_CTRL_2_CURR_DFE_REF_BITS                         3
#define AMS_RX_RX_CTRL_2_CURR_DFE_REF_SHIFT                        3

/* AMS_RX :: RX_CTRL_2 :: curr_ctle [02:00] */
#define AMS_RX_RX_CTRL_2_CURR_CTLE_MASK                            0x0007
#define AMS_RX_RX_CTRL_2_CURR_CTLE_ALIGN                           0
#define AMS_RX_RX_CTRL_2_CURR_CTLE_BITS                            3
#define AMS_RX_RX_CTRL_2_CURR_CTLE_SHIFT                           0


/****************************************************************************
 * AMS_RX :: RX_CTRL_3
 ***************************************************************************/
/* AMS_RX :: RX_CTRL_3 :: reserved0 [15:15] */
#define AMS_RX_RX_CTRL_3_RESERVED0_MASK                            0x8000
#define AMS_RX_RX_CTRL_3_RESERVED0_ALIGN                           0
#define AMS_RX_RX_CTRL_3_RESERVED0_BITS                            1
#define AMS_RX_RX_CTRL_3_RESERVED0_SHIFT                           15

/* AMS_RX :: RX_CTRL_3 :: ll_en [14:14] */
#define AMS_RX_RX_CTRL_3_LL_EN_MASK                                0x4000
#define AMS_RX_RX_CTRL_3_LL_EN_ALIGN                               0
#define AMS_RX_RX_CTRL_3_LL_EN_BITS                                1
#define AMS_RX_RX_CTRL_3_LL_EN_SHIFT                               14

/* AMS_RX :: RX_CTRL_3 :: seli1P25dfe [13:13] */
#define AMS_RX_RX_CTRL_3_SELI1P25DFE_MASK                          0x2000
#define AMS_RX_RX_CTRL_3_SELI1P25DFE_ALIGN                         0
#define AMS_RX_RX_CTRL_3_SELI1P25DFE_BITS                          1
#define AMS_RX_RX_CTRL_3_SELI1P25DFE_SHIFT                         13

/* AMS_RX :: RX_CTRL_3 :: i4deadzone [12:12] */
#define AMS_RX_RX_CTRL_3_I4DEADZONE_MASK                           0x1000
#define AMS_RX_RX_CTRL_3_I4DEADZONE_ALIGN                          0
#define AMS_RX_RX_CTRL_3_I4DEADZONE_BITS                           1
#define AMS_RX_RX_CTRL_3_I4DEADZONE_SHIFT                          12

/* AMS_RX :: RX_CTRL_3 :: curr_sigdet [11:09] */
#define AMS_RX_RX_CTRL_3_CURR_SIGDET_MASK                          0x0e00
#define AMS_RX_RX_CTRL_3_CURR_SIGDET_ALIGN                         0
#define AMS_RX_RX_CTRL_3_CURR_SIGDET_BITS                          3
#define AMS_RX_RX_CTRL_3_CURR_SIGDET_SHIFT                         9

/* AMS_RX :: RX_CTRL_3 :: ams_spare_3_1 [08:06] */
#define AMS_RX_RX_CTRL_3_AMS_SPARE_3_1_MASK                        0x01c0
#define AMS_RX_RX_CTRL_3_AMS_SPARE_3_1_ALIGN                       0
#define AMS_RX_RX_CTRL_3_AMS_SPARE_3_1_BITS                        3
#define AMS_RX_RX_CTRL_3_AMS_SPARE_3_1_SHIFT                       6

/* AMS_RX :: RX_CTRL_3 :: ams_spare_3_0 [05:03] */
#define AMS_RX_RX_CTRL_3_AMS_SPARE_3_0_MASK                        0x0038
#define AMS_RX_RX_CTRL_3_AMS_SPARE_3_0_ALIGN                       0
#define AMS_RX_RX_CTRL_3_AMS_SPARE_3_0_BITS                        3
#define AMS_RX_RX_CTRL_3_AMS_SPARE_3_0_SHIFT                       3

/* AMS_RX :: RX_CTRL_3 :: en_clk16 [02:02] */
#define AMS_RX_RX_CTRL_3_EN_CLK16_MASK                             0x0004
#define AMS_RX_RX_CTRL_3_EN_CLK16_ALIGN                            0
#define AMS_RX_RX_CTRL_3_EN_CLK16_BITS                             1
#define AMS_RX_RX_CTRL_3_EN_CLK16_SHIFT                            2

/* AMS_RX :: RX_CTRL_3 :: en_clk33 [01:01] */
#define AMS_RX_RX_CTRL_3_EN_CLK33_MASK                             0x0002
#define AMS_RX_RX_CTRL_3_EN_CLK33_ALIGN                            0
#define AMS_RX_RX_CTRL_3_EN_CLK33_BITS                             1
#define AMS_RX_RX_CTRL_3_EN_CLK33_SHIFT                            1

/* AMS_RX :: RX_CTRL_3 :: en_vcctrl [00:00] */
#define AMS_RX_RX_CTRL_3_EN_VCCTRL_MASK                            0x0001
#define AMS_RX_RX_CTRL_3_EN_VCCTRL_ALIGN                           0
#define AMS_RX_RX_CTRL_3_EN_VCCTRL_BITS                            1
#define AMS_RX_RX_CTRL_3_EN_VCCTRL_SHIFT                           0


/****************************************************************************
 * AMS_RX :: RX_CTRL_4
 ***************************************************************************/
/* AMS_RX :: RX_CTRL_4 :: vga_pon [15:12] */
#define AMS_RX_RX_CTRL_4_VGA_PON_MASK                              0xf000
#define AMS_RX_RX_CTRL_4_VGA_PON_ALIGN                             0
#define AMS_RX_RX_CTRL_4_VGA_PON_BITS                              4
#define AMS_RX_RX_CTRL_4_VGA_PON_SHIFT                             12

/* AMS_RX :: RX_CTRL_4 :: oc_2x [11:11] */
#define AMS_RX_RX_CTRL_4_OC_2X_MASK                                0x0800
#define AMS_RX_RX_CTRL_4_OC_2X_ALIGN                               0
#define AMS_RX_RX_CTRL_4_OC_2X_BITS                                1
#define AMS_RX_RX_CTRL_4_OC_2X_SHIFT                               11

/* AMS_RX :: RX_CTRL_4 :: ams_spare_4_0 [10:00] */
#define AMS_RX_RX_CTRL_4_AMS_SPARE_4_0_MASK                        0x07ff
#define AMS_RX_RX_CTRL_4_AMS_SPARE_4_0_ALIGN                       0
#define AMS_RX_RX_CTRL_4_AMS_SPARE_4_0_BITS                        11
#define AMS_RX_RX_CTRL_4_AMS_SPARE_4_0_SHIFT                       0


/****************************************************************************
 * AMS_RX :: RX_CTRL_5
 ***************************************************************************/
/* AMS_RX :: RX_CTRL_5 :: ams_spare_5_0 [15:13] */
#define AMS_RX_RX_CTRL_5_AMS_SPARE_5_0_MASK                        0xe000
#define AMS_RX_RX_CTRL_5_AMS_SPARE_5_0_ALIGN                       0
#define AMS_RX_RX_CTRL_5_AMS_SPARE_5_0_BITS                        3
#define AMS_RX_RX_CTRL_5_AMS_SPARE_5_0_SHIFT                       13

/* AMS_RX :: RX_CTRL_5 :: degcap_adj [12:10] */
#define AMS_RX_RX_CTRL_5_DEGCAP_ADJ_MASK                           0x1c00
#define AMS_RX_RX_CTRL_5_DEGCAP_ADJ_ALIGN                          0
#define AMS_RX_RX_CTRL_5_DEGCAP_ADJ_BITS                           3
#define AMS_RX_RX_CTRL_5_DEGCAP_ADJ_SHIFT                          10

/* AMS_RX :: RX_CTRL_5 :: en_dfeclk [09:09] */
#define AMS_RX_RX_CTRL_5_EN_DFECLK_MASK                            0x0200
#define AMS_RX_RX_CTRL_5_EN_DFECLK_ALIGN                           0
#define AMS_RX_RX_CTRL_5_EN_DFECLK_BITS                            1
#define AMS_RX_RX_CTRL_5_EN_DFECLK_SHIFT                           9

/* AMS_RX :: RX_CTRL_5 :: pkbst [08:07] */
#define AMS_RX_RX_CTRL_5_PKBST_MASK                                0x0180
#define AMS_RX_RX_CTRL_5_PKBST_ALIGN                               0
#define AMS_RX_RX_CTRL_5_PKBST_BITS                                2
#define AMS_RX_RX_CTRL_5_PKBST_SHIFT                               7

/* AMS_RX :: RX_CTRL_5 :: curr_in_offset [06:04] */
#define AMS_RX_RX_CTRL_5_CURR_IN_OFFSET_MASK                       0x0070
#define AMS_RX_RX_CTRL_5_CURR_IN_OFFSET_ALIGN                      0
#define AMS_RX_RX_CTRL_5_CURR_IN_OFFSET_BITS                       3
#define AMS_RX_RX_CTRL_5_CURR_IN_OFFSET_SHIFT                      4

/* AMS_RX :: RX_CTRL_5 :: rx_pon [03:00] */
#define AMS_RX_RX_CTRL_5_RX_PON_MASK                               0x000f
#define AMS_RX_RX_CTRL_5_RX_PON_ALIGN                              0
#define AMS_RX_RX_CTRL_5_RX_PON_BITS                               4
#define AMS_RX_RX_CTRL_5_RX_PON_SHIFT                              0


/****************************************************************************
 * AMS_RX :: RX_CTRL_6
 ***************************************************************************/
/* AMS_RX :: RX_CTRL_6 :: reserved0 [15:03] */
#define AMS_RX_RX_CTRL_6_RESERVED0_MASK                            0xfff8
#define AMS_RX_RX_CTRL_6_RESERVED0_ALIGN                           0
#define AMS_RX_RX_CTRL_6_RESERVED0_BITS                            13
#define AMS_RX_RX_CTRL_6_RESERVED0_SHIFT                           3

/* AMS_RX :: RX_CTRL_6 :: ams_spare_6_0 [02:00] */
#define AMS_RX_RX_CTRL_6_AMS_SPARE_6_0_MASK                        0x0007
#define AMS_RX_RX_CTRL_6_AMS_SPARE_6_0_ALIGN                       0
#define AMS_RX_RX_CTRL_6_AMS_SPARE_6_0_BITS                        3
#define AMS_RX_RX_CTRL_6_AMS_SPARE_6_0_SHIFT                       0


/****************************************************************************
 * AMS_RX :: RX_INT
 ***************************************************************************/
/* AMS_RX :: RX_INT :: reserved0 [15:02] */
#define AMS_RX_RX_INT_RESERVED0_MASK                               0xfffc
#define AMS_RX_RX_INT_RESERVED0_ALIGN                              0
#define AMS_RX_RX_INT_RESERVED0_BITS                               14
#define AMS_RX_RX_INT_RESERVED0_SHIFT                              2

/* AMS_RX :: RX_INT :: rxpon_sel [01:01] */
#define AMS_RX_RX_INT_RXPON_SEL_MASK                               0x0002
#define AMS_RX_RX_INT_RXPON_SEL_ALIGN                              0
#define AMS_RX_RX_INT_RXPON_SEL_BITS                               1
#define AMS_RX_RX_INT_RXPON_SEL_SHIFT                              1

/* AMS_RX :: RX_INT :: vgapon_sel [00:00] */
#define AMS_RX_RX_INT_VGAPON_SEL_MASK                              0x0001
#define AMS_RX_RX_INT_VGAPON_SEL_ALIGN                             0
#define AMS_RX_RX_INT_VGAPON_SEL_BITS                              1
#define AMS_RX_RX_INT_VGAPON_SEL_SHIFT                             0


/****************************************************************************
 * AMS_RX :: RX_STS
 ***************************************************************************/
/* AMS_RX :: RX_STS :: reserved0 [15:08] */
#define AMS_RX_RX_STS_RESERVED0_MASK                               0xff00
#define AMS_RX_RX_STS_RESERVED0_ALIGN                              0
#define AMS_RX_RX_STS_RESERVED0_BITS                               8
#define AMS_RX_RX_STS_RESERVED0_SHIFT                              8

/* AMS_RX :: RX_STS :: vgapon_mux [07:04] */
#define AMS_RX_RX_STS_VGAPON_MUX_MASK                              0x00f0
#define AMS_RX_RX_STS_VGAPON_MUX_ALIGN                             0
#define AMS_RX_RX_STS_VGAPON_MUX_BITS                              4
#define AMS_RX_RX_STS_VGAPON_MUX_SHIFT                             4

/* AMS_RX :: RX_STS :: rxpon_mux [03:00] */
#define AMS_RX_RX_STS_RXPON_MUX_MASK                               0x000f
#define AMS_RX_RX_STS_RXPON_MUX_ALIGN                              0
#define AMS_RX_RX_STS_RXPON_MUX_BITS                               4
#define AMS_RX_RX_STS_RXPON_MUX_SHIFT                              0


/****************************************************************************
 * merlin_gallardo_ams_blk_AMS_TX
 ***************************************************************************/
/****************************************************************************
 * AMS_TX :: TX_CTRL_0
 ***************************************************************************/
/* AMS_TX :: TX_CTRL_0 :: lowlatency_en [15:15] */
#define AMS_TX_TX_CTRL_0_LOWLATENCY_EN_MASK                        0x8000
#define AMS_TX_TX_CTRL_0_LOWLATENCY_EN_ALIGN                       0
#define AMS_TX_TX_CTRL_0_LOWLATENCY_EN_BITS                        1
#define AMS_TX_TX_CTRL_0_LOWLATENCY_EN_SHIFT                       15

/* AMS_TX :: TX_CTRL_0 :: ams_14 [14:14] */
#define AMS_TX_TX_CTRL_0_AMS_14_MASK                               0x4000
#define AMS_TX_TX_CTRL_0_AMS_14_ALIGN                              0
#define AMS_TX_TX_CTRL_0_AMS_14_BITS                               1
#define AMS_TX_TX_CTRL_0_AMS_14_SHIFT                              14

/* AMS_TX :: TX_CTRL_0 :: ll_fifo_ctrl [13:11] */
#define AMS_TX_TX_CTRL_0_LL_FIFO_CTRL_MASK                         0x3800
#define AMS_TX_TX_CTRL_0_LL_FIFO_CTRL_ALIGN                        0
#define AMS_TX_TX_CTRL_0_LL_FIFO_CTRL_BITS                         3
#define AMS_TX_TX_CTRL_0_LL_FIFO_CTRL_SHIFT                        11

/* AMS_TX :: TX_CTRL_0 :: ll_fifo_zero_out [10:10] */
#define AMS_TX_TX_CTRL_0_LL_FIFO_ZERO_OUT_MASK                     0x0400
#define AMS_TX_TX_CTRL_0_LL_FIFO_ZERO_OUT_ALIGN                    0
#define AMS_TX_TX_CTRL_0_LL_FIFO_ZERO_OUT_BITS                     1
#define AMS_TX_TX_CTRL_0_LL_FIFO_ZERO_OUT_SHIFT                    10

/* AMS_TX :: TX_CTRL_0 :: ll_polarity_flip [09:09] */
#define AMS_TX_TX_CTRL_0_LL_POLARITY_FLIP_MASK                     0x0200
#define AMS_TX_TX_CTRL_0_LL_POLARITY_FLIP_ALIGN                    0
#define AMS_TX_TX_CTRL_0_LL_POLARITY_FLIP_BITS                     1
#define AMS_TX_TX_CTRL_0_LL_POLARITY_FLIP_SHIFT                    9

/* AMS_TX :: TX_CTRL_0 :: ll_selpath_tx [08:08] */
#define AMS_TX_TX_CTRL_0_LL_SELPATH_TX_MASK                        0x0100
#define AMS_TX_TX_CTRL_0_LL_SELPATH_TX_ALIGN                       0
#define AMS_TX_TX_CTRL_0_LL_SELPATH_TX_BITS                        1
#define AMS_TX_TX_CTRL_0_LL_SELPATH_TX_SHIFT                       8

/* AMS_TX :: TX_CTRL_0 :: noise_cancel_ctrl_0 [07:07] */
#define AMS_TX_TX_CTRL_0_NOISE_CANCEL_CTRL_0_MASK                  0x0080
#define AMS_TX_TX_CTRL_0_NOISE_CANCEL_CTRL_0_ALIGN                 0
#define AMS_TX_TX_CTRL_0_NOISE_CANCEL_CTRL_0_BITS                  1
#define AMS_TX_TX_CTRL_0_NOISE_CANCEL_CTRL_0_SHIFT                 7

/* AMS_TX :: TX_CTRL_0 :: tx_pon [06:03] */
#define AMS_TX_TX_CTRL_0_TX_PON_MASK                               0x0078
#define AMS_TX_TX_CTRL_0_TX_PON_ALIGN                              0
#define AMS_TX_TX_CTRL_0_TX_PON_BITS                               4
#define AMS_TX_TX_CTRL_0_TX_PON_SHIFT                              3

/* AMS_TX :: TX_CTRL_0 :: ticksel [02:01] */
#define AMS_TX_TX_CTRL_0_TICKSEL_MASK                              0x0006
#define AMS_TX_TX_CTRL_0_TICKSEL_ALIGN                             0
#define AMS_TX_TX_CTRL_0_TICKSEL_BITS                              2
#define AMS_TX_TX_CTRL_0_TICKSEL_SHIFT                             1

/* AMS_TX :: TX_CTRL_0 :: tx_pwrdn [00:00] */
#define AMS_TX_TX_CTRL_0_TX_PWRDN_MASK                             0x0001
#define AMS_TX_TX_CTRL_0_TX_PWRDN_ALIGN                            0
#define AMS_TX_TX_CTRL_0_TX_PWRDN_BITS                             1
#define AMS_TX_TX_CTRL_0_TX_PWRDN_SHIFT                            0


/****************************************************************************
 * AMS_TX :: TX_CTRL_1
 ***************************************************************************/
/* AMS_TX :: TX_CTRL_1 :: reserved0 [15:15] */
#define AMS_TX_TX_CTRL_1_RESERVED0_MASK                            0x8000
#define AMS_TX_TX_CTRL_1_RESERVED0_ALIGN                           0
#define AMS_TX_TX_CTRL_1_RESERVED0_BITS                            1
#define AMS_TX_TX_CTRL_1_RESERVED0_SHIFT                           15

/* AMS_TX :: TX_CTRL_1 :: en_slow [14:11] */
#define AMS_TX_TX_CTRL_1_EN_SLOW_MASK                              0x7800
#define AMS_TX_TX_CTRL_1_EN_SLOW_ALIGN                             0
#define AMS_TX_TX_CTRL_1_EN_SLOW_BITS                              4
#define AMS_TX_TX_CTRL_1_EN_SLOW_SHIFT                             11

/* AMS_TX :: TX_CTRL_1 :: en_wclk33 [10:10] */
#define AMS_TX_TX_CTRL_1_EN_WCLK33_MASK                            0x0400
#define AMS_TX_TX_CTRL_1_EN_WCLK33_ALIGN                           0
#define AMS_TX_TX_CTRL_1_EN_WCLK33_BITS                            1
#define AMS_TX_TX_CTRL_1_EN_WCLK33_SHIFT                           10

/* AMS_TX :: TX_CTRL_1 :: en_wclk20 [09:09] */
#define AMS_TX_TX_CTRL_1_EN_WCLK20_MASK                            0x0200
#define AMS_TX_TX_CTRL_1_EN_WCLK20_ALIGN                           0
#define AMS_TX_TX_CTRL_1_EN_WCLK20_BITS                            1
#define AMS_TX_TX_CTRL_1_EN_WCLK20_SHIFT                           9

/* AMS_TX :: TX_CTRL_1 :: en_wclk16 [08:08] */
#define AMS_TX_TX_CTRL_1_EN_WCLK16_MASK                            0x0100
#define AMS_TX_TX_CTRL_1_EN_WCLK16_ALIGN                           0
#define AMS_TX_TX_CTRL_1_EN_WCLK16_BITS                            1
#define AMS_TX_TX_CTRL_1_EN_WCLK16_SHIFT                           8

/* AMS_TX :: TX_CTRL_1 :: testclk_ena [07:07] */
#define AMS_TX_TX_CTRL_1_TESTCLK_ENA_MASK                          0x0080
#define AMS_TX_TX_CTRL_1_TESTCLK_ENA_ALIGN                         0
#define AMS_TX_TX_CTRL_1_TESTCLK_ENA_BITS                          1
#define AMS_TX_TX_CTRL_1_TESTCLK_ENA_SHIFT                         7

/* AMS_TX :: TX_CTRL_1 :: testsel [06:05] */
#define AMS_TX_TX_CTRL_1_TESTSEL_MASK                              0x0060
#define AMS_TX_TX_CTRL_1_TESTSEL_ALIGN                             0
#define AMS_TX_TX_CTRL_1_TESTSEL_BITS                              2
#define AMS_TX_TX_CTRL_1_TESTSEL_SHIFT                             5

/* AMS_TX :: TX_CTRL_1 :: noise_cancel_ctrl_1 [04:04] */
#define AMS_TX_TX_CTRL_1_NOISE_CANCEL_CTRL_1_MASK                  0x0010
#define AMS_TX_TX_CTRL_1_NOISE_CANCEL_CTRL_1_ALIGN                 0
#define AMS_TX_TX_CTRL_1_NOISE_CANCEL_CTRL_1_BITS                  1
#define AMS_TX_TX_CTRL_1_NOISE_CANCEL_CTRL_1_SHIFT                 4

/* AMS_TX :: TX_CTRL_1 :: shunt_dc_level_post2 [03:00] */
#define AMS_TX_TX_CTRL_1_SHUNT_DC_LEVEL_POST2_MASK                 0x000f
#define AMS_TX_TX_CTRL_1_SHUNT_DC_LEVEL_POST2_ALIGN                0
#define AMS_TX_TX_CTRL_1_SHUNT_DC_LEVEL_POST2_BITS                 4
#define AMS_TX_TX_CTRL_1_SHUNT_DC_LEVEL_POST2_SHIFT                0


/****************************************************************************
 * AMS_TX :: TX_CTRL_2
 ***************************************************************************/
/* AMS_TX :: TX_CTRL_2 :: reserved0 [15:15] */
#define AMS_TX_TX_CTRL_2_RESERVED0_MASK                            0x8000
#define AMS_TX_TX_CTRL_2_RESERVED0_ALIGN                           0
#define AMS_TX_TX_CTRL_2_RESERVED0_BITS                            1
#define AMS_TX_TX_CTRL_2_RESERVED0_SHIFT                           15

/* AMS_TX :: TX_CTRL_2 :: fifo_phsdetect_mode [14:14] */
#define AMS_TX_TX_CTRL_2_FIFO_PHSDETECT_MODE_MASK                  0x4000
#define AMS_TX_TX_CTRL_2_FIFO_PHSDETECT_MODE_ALIGN                 0
#define AMS_TX_TX_CTRL_2_FIFO_PHSDETECT_MODE_BITS                  1
#define AMS_TX_TX_CTRL_2_FIFO_PHSDETECT_MODE_SHIFT                 14

/* AMS_TX :: TX_CTRL_2 :: ibias_pibuf_cntl [13:11] */
#define AMS_TX_TX_CTRL_2_IBIAS_PIBUF_CNTL_MASK                     0x3800
#define AMS_TX_TX_CTRL_2_IBIAS_PIBUF_CNTL_ALIGN                    0
#define AMS_TX_TX_CTRL_2_IBIAS_PIBUF_CNTL_BITS                     3
#define AMS_TX_TX_CTRL_2_IBIAS_PIBUF_CNTL_SHIFT                    11

/* AMS_TX :: TX_CTRL_2 :: ibias_pi_cntl [10:08] */
#define AMS_TX_TX_CTRL_2_IBIAS_PI_CNTL_MASK                        0x0700
#define AMS_TX_TX_CTRL_2_IBIAS_PI_CNTL_ALIGN                       0
#define AMS_TX_TX_CTRL_2_IBIAS_PI_CNTL_BITS                        3
#define AMS_TX_TX_CTRL_2_IBIAS_PI_CNTL_SHIFT                       8

/* AMS_TX :: TX_CTRL_2 :: ibias_opamp_cntl [07:05] */
#define AMS_TX_TX_CTRL_2_IBIAS_OPAMP_CNTL_MASK                     0x00e0
#define AMS_TX_TX_CTRL_2_IBIAS_OPAMP_CNTL_ALIGN                    0
#define AMS_TX_TX_CTRL_2_IBIAS_OPAMP_CNTL_BITS                     3
#define AMS_TX_TX_CTRL_2_IBIAS_OPAMP_CNTL_SHIFT                    5

/* AMS_TX :: TX_CTRL_2 :: dcc_en [04:04] */
#define AMS_TX_TX_CTRL_2_DCC_EN_MASK                               0x0010
#define AMS_TX_TX_CTRL_2_DCC_EN_ALIGN                              0
#define AMS_TX_TX_CTRL_2_DCC_EN_BITS                               1
#define AMS_TX_TX_CTRL_2_DCC_EN_SHIFT                              4

/* AMS_TX :: TX_CTRL_2 :: en_hpf [03:00] */
#define AMS_TX_TX_CTRL_2_EN_HPF_MASK                               0x000f
#define AMS_TX_TX_CTRL_2_EN_HPF_ALIGN                              0
#define AMS_TX_TX_CTRL_2_EN_HPF_BITS                               4
#define AMS_TX_TX_CTRL_2_EN_HPF_SHIFT                              0


/****************************************************************************
 * AMS_TX :: TX_CTRL_3
 ***************************************************************************/
/* AMS_TX :: TX_CTRL_3 :: reserved0 [15:14] */
#define AMS_TX_TX_CTRL_3_RESERVED0_MASK                            0xc000
#define AMS_TX_TX_CTRL_3_RESERVED0_ALIGN                           0
#define AMS_TX_TX_CTRL_3_RESERVED0_BITS                            2
#define AMS_TX_TX_CTRL_3_RESERVED0_SHIFT                           14

/* AMS_TX :: TX_CTRL_3 :: refcalm [13:10] */
#define AMS_TX_TX_CTRL_3_REFCALM_MASK                              0x3c00
#define AMS_TX_TX_CTRL_3_REFCALM_ALIGN                             0
#define AMS_TX_TX_CTRL_3_REFCALM_BITS                              4
#define AMS_TX_TX_CTRL_3_REFCALM_SHIFT                             10

/* AMS_TX :: TX_CTRL_3 :: refcalp [09:06] */
#define AMS_TX_TX_CTRL_3_REFCALP_MASK                              0x03c0
#define AMS_TX_TX_CTRL_3_REFCALP_ALIGN                             0
#define AMS_TX_TX_CTRL_3_REFCALP_BITS                              4
#define AMS_TX_TX_CTRL_3_REFCALP_SHIFT                             6

/* AMS_TX :: TX_CTRL_3 :: refcalshunt [05:02] */
#define AMS_TX_TX_CTRL_3_REFCALSHUNT_MASK                          0x003c
#define AMS_TX_TX_CTRL_3_REFCALSHUNT_ALIGN                         0
#define AMS_TX_TX_CTRL_3_REFCALSHUNT_BITS                          4
#define AMS_TX_TX_CTRL_3_REFCALSHUNT_SHIFT                         2

/* AMS_TX :: TX_CTRL_3 :: refnwbias [01:00] */
#define AMS_TX_TX_CTRL_3_REFNWBIAS_MASK                            0x0003
#define AMS_TX_TX_CTRL_3_REFNWBIAS_ALIGN                           0
#define AMS_TX_TX_CTRL_3_REFNWBIAS_BITS                            2
#define AMS_TX_TX_CTRL_3_REFNWBIAS_SHIFT                           0


/****************************************************************************
 * AMS_TX :: TX_CTRL_4
 ***************************************************************************/
/* AMS_TX :: TX_CTRL_4 :: reserved0 [15:15] */
#define AMS_TX_TX_CTRL_4_RESERVED0_MASK                            0x8000
#define AMS_TX_TX_CTRL_4_RESERVED0_ALIGN                           0
#define AMS_TX_TX_CTRL_4_RESERVED0_BITS                            1
#define AMS_TX_TX_CTRL_4_RESERVED0_SHIFT                           15

/* AMS_TX :: TX_CTRL_4 :: en_shuntmode [14:14] */
#define AMS_TX_TX_CTRL_4_EN_SHUNTMODE_MASK                         0x4000
#define AMS_TX_TX_CTRL_4_EN_SHUNTMODE_ALIGN                        0
#define AMS_TX_TX_CTRL_4_EN_SHUNTMODE_BITS                         1
#define AMS_TX_TX_CTRL_4_EN_SHUNTMODE_SHIFT                        14

/* AMS_TX :: TX_CTRL_4 :: shunt_pre_shared [13:11] */
#define AMS_TX_TX_CTRL_4_SHUNT_PRE_SHARED_MASK                     0x3800
#define AMS_TX_TX_CTRL_4_SHUNT_PRE_SHARED_ALIGN                    0
#define AMS_TX_TX_CTRL_4_SHUNT_PRE_SHARED_BITS                     3
#define AMS_TX_TX_CTRL_4_SHUNT_PRE_SHARED_SHIFT                    11

/* AMS_TX :: TX_CTRL_4 :: shunt_dc_level [10:10] */
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_MASK                       0x0400
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_ALIGN                      0
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_BITS                       1
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_SHIFT                      10

/* AMS_TX :: TX_CTRL_4 :: shunt_dc_level_pre [09:07] */
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_PRE_MASK                   0x0380
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_PRE_ALIGN                  0
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_PRE_BITS                   3
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_PRE_SHIFT                  7

/* AMS_TX :: TX_CTRL_4 :: shunt_dc_level_post1 [06:03] */
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_POST1_MASK                 0x0078
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_POST1_ALIGN                0
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_POST1_BITS                 4
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_POST1_SHIFT                3

/* AMS_TX :: TX_CTRL_4 :: shunt_dc_level_shared [02:00] */
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_SHARED_MASK                0x0007
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_SHARED_ALIGN               0
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_SHARED_BITS                3
#define AMS_TX_TX_CTRL_4_SHUNT_DC_LEVEL_SHARED_SHIFT               0


/****************************************************************************
 * AMS_TX :: TX_CTRL_5
 ***************************************************************************/
/* AMS_TX :: TX_CTRL_5 :: Post2to1 [15:15] */
#define AMS_TX_TX_CTRL_5_POST2TO1_MASK                             0x8000
#define AMS_TX_TX_CTRL_5_POST2TO1_ALIGN                            0
#define AMS_TX_TX_CTRL_5_POST2TO1_BITS                             1
#define AMS_TX_TX_CTRL_5_POST2TO1_SHIFT                            15

/* AMS_TX :: TX_CTRL_5 :: en_pre [14:14] */
#define AMS_TX_TX_CTRL_5_EN_PRE_MASK                               0x4000
#define AMS_TX_TX_CTRL_5_EN_PRE_ALIGN                              0
#define AMS_TX_TX_CTRL_5_EN_PRE_BITS                               1
#define AMS_TX_TX_CTRL_5_EN_PRE_SHIFT                              14

/* AMS_TX :: TX_CTRL_5 :: en_post1 [13:13] */
#define AMS_TX_TX_CTRL_5_EN_POST1_MASK                             0x2000
#define AMS_TX_TX_CTRL_5_EN_POST1_ALIGN                            0
#define AMS_TX_TX_CTRL_5_EN_POST1_BITS                             1
#define AMS_TX_TX_CTRL_5_EN_POST1_SHIFT                            13

/* AMS_TX :: TX_CTRL_5 :: en_post2 [12:12] */
#define AMS_TX_TX_CTRL_5_EN_POST2_MASK                             0x1000
#define AMS_TX_TX_CTRL_5_EN_POST2_ALIGN                            0
#define AMS_TX_TX_CTRL_5_EN_POST2_BITS                             1
#define AMS_TX_TX_CTRL_5_EN_POST2_SHIFT                            12

/* AMS_TX :: TX_CTRL_5 :: shunt_post2 [11:08] */
#define AMS_TX_TX_CTRL_5_SHUNT_POST2_MASK                          0x0f00
#define AMS_TX_TX_CTRL_5_SHUNT_POST2_ALIGN                         0
#define AMS_TX_TX_CTRL_5_SHUNT_POST2_BITS                          4
#define AMS_TX_TX_CTRL_5_SHUNT_POST2_SHIFT                         8

/* AMS_TX :: TX_CTRL_5 :: shunt_post1 [07:03] */
#define AMS_TX_TX_CTRL_5_SHUNT_POST1_MASK                          0x00f8
#define AMS_TX_TX_CTRL_5_SHUNT_POST1_ALIGN                         0
#define AMS_TX_TX_CTRL_5_SHUNT_POST1_BITS                          5
#define AMS_TX_TX_CTRL_5_SHUNT_POST1_SHIFT                         3

/* AMS_TX :: TX_CTRL_5 :: shunt_pre [02:00] */
#define AMS_TX_TX_CTRL_5_SHUNT_PRE_MASK                            0x0007
#define AMS_TX_TX_CTRL_5_SHUNT_PRE_ALIGN                           0
#define AMS_TX_TX_CTRL_5_SHUNT_PRE_BITS                            3
#define AMS_TX_TX_CTRL_5_SHUNT_PRE_SHIFT                           0


/****************************************************************************
 * AMS_TX :: TX_INT
 ***************************************************************************/
/* AMS_TX :: TX_INT :: reserved0 [15:03] */
#define AMS_TX_TX_INT_RESERVED0_MASK                               0xfff8
#define AMS_TX_TX_INT_RESERVED0_ALIGN                              0
#define AMS_TX_TX_INT_RESERVED0_BITS                               13
#define AMS_TX_TX_INT_RESERVED0_SHIFT                              3

/* AMS_TX :: TX_INT :: auto_ll_selpath_tx_dis [02:02] */
#define AMS_TX_TX_INT_AUTO_LL_SELPATH_TX_DIS_MASK                  0x0004
#define AMS_TX_TX_INT_AUTO_LL_SELPATH_TX_DIS_ALIGN                 0
#define AMS_TX_TX_INT_AUTO_LL_SELPATH_TX_DIS_BITS                  1
#define AMS_TX_TX_INT_AUTO_LL_SELPATH_TX_DIS_SHIFT                 2

/* AMS_TX :: TX_INT :: txpon_sel [01:01] */
#define AMS_TX_TX_INT_TXPON_SEL_MASK                               0x0002
#define AMS_TX_TX_INT_TXPON_SEL_ALIGN                              0
#define AMS_TX_TX_INT_TXPON_SEL_BITS                               1
#define AMS_TX_TX_INT_TXPON_SEL_SHIFT                              1

/* AMS_TX :: TX_INT :: reserved1 [00:00] */
#define AMS_TX_TX_INT_RESERVED1_MASK                               0x0001
#define AMS_TX_TX_INT_RESERVED1_ALIGN                              0
#define AMS_TX_TX_INT_RESERVED1_BITS                               1
#define AMS_TX_TX_INT_RESERVED1_SHIFT                              0


/****************************************************************************
 * AMS_TX :: TX_STS
 ***************************************************************************/
/* AMS_TX :: TX_STS :: reserved0 [15:08] */
#define AMS_TX_TX_STS_RESERVED0_MASK                               0xff00
#define AMS_TX_TX_STS_RESERVED0_ALIGN                              0
#define AMS_TX_TX_STS_RESERVED0_BITS                               8
#define AMS_TX_TX_STS_RESERVED0_SHIFT                              8

/* AMS_TX :: TX_STS :: rescal [07:04] */
#define AMS_TX_TX_STS_RESCAL_MASK                                  0x00f0
#define AMS_TX_TX_STS_RESCAL_ALIGN                                 0
#define AMS_TX_TX_STS_RESCAL_BITS                                  4
#define AMS_TX_TX_STS_RESCAL_SHIFT                                 4

/* AMS_TX :: TX_STS :: txpon_mux [03:00] */
#define AMS_TX_TX_STS_TXPON_MUX_MASK                               0x000f
#define AMS_TX_TX_STS_TXPON_MUX_ALIGN                              0
#define AMS_TX_TX_STS_TXPON_MUX_BITS                               4
#define AMS_TX_TX_STS_TXPON_MUX_SHIFT                              0


/****************************************************************************
 * merlin_gallardo_ams_blk_AMSCOM
 ***************************************************************************/
/****************************************************************************
 * AMSCOM :: PLL_CTRL_0
 ***************************************************************************/
/* AMSCOM :: PLL_CTRL_0 :: cpar [15:14] */
#define AMSCOM_PLL_CTRL_0_CPAR_MASK                                0xc000
#define AMSCOM_PLL_CTRL_0_CPAR_ALIGN                               0
#define AMSCOM_PLL_CTRL_0_CPAR_BITS                                2
#define AMSCOM_PLL_CTRL_0_CPAR_SHIFT                               14

/* AMSCOM :: PLL_CTRL_0 :: term_cm_en [13:13] */
#define AMSCOM_PLL_CTRL_0_TERM_CM_EN_MASK                          0x2000
#define AMSCOM_PLL_CTRL_0_TERM_CM_EN_ALIGN                         0
#define AMSCOM_PLL_CTRL_0_TERM_CM_EN_BITS                          1
#define AMSCOM_PLL_CTRL_0_TERM_CM_EN_SHIFT                         13

/* AMSCOM :: PLL_CTRL_0 :: rpar [12:09] */
#define AMSCOM_PLL_CTRL_0_RPAR_MASK                                0x1e00
#define AMSCOM_PLL_CTRL_0_RPAR_ALIGN                               0
#define AMSCOM_PLL_CTRL_0_RPAR_BITS                                4
#define AMSCOM_PLL_CTRL_0_RPAR_SHIFT                               9

/* AMSCOM :: PLL_CTRL_0 :: xtal_core_bias [08:05] */
#define AMSCOM_PLL_CTRL_0_XTAL_CORE_BIAS_MASK                      0x01e0
#define AMSCOM_PLL_CTRL_0_XTAL_CORE_BIAS_ALIGN                     0
#define AMSCOM_PLL_CTRL_0_XTAL_CORE_BIAS_BITS                      4
#define AMSCOM_PLL_CTRL_0_XTAL_CORE_BIAS_SHIFT                     5

/* AMSCOM :: PLL_CTRL_0 :: xtal_bias [04:02] */
#define AMSCOM_PLL_CTRL_0_XTAL_BIAS_MASK                           0x001c
#define AMSCOM_PLL_CTRL_0_XTAL_BIAS_ALIGN                          0
#define AMSCOM_PLL_CTRL_0_XTAL_BIAS_BITS                           3
#define AMSCOM_PLL_CTRL_0_XTAL_BIAS_SHIFT                          2

/* AMSCOM :: PLL_CTRL_0 :: hipass [01:01] */
#define AMSCOM_PLL_CTRL_0_HIPASS_MASK                              0x0002
#define AMSCOM_PLL_CTRL_0_HIPASS_ALIGN                             0
#define AMSCOM_PLL_CTRL_0_HIPASS_BITS                              1
#define AMSCOM_PLL_CTRL_0_HIPASS_SHIFT                             1

/* AMSCOM :: PLL_CTRL_0 :: xtal_cm_sel [00:00] */
#define AMSCOM_PLL_CTRL_0_XTAL_CM_SEL_MASK                         0x0001
#define AMSCOM_PLL_CTRL_0_XTAL_CM_SEL_ALIGN                        0
#define AMSCOM_PLL_CTRL_0_XTAL_CM_SEL_BITS                         1
#define AMSCOM_PLL_CTRL_0_XTAL_CM_SEL_SHIFT                        0


/****************************************************************************
 * AMSCOM :: PLL_CTRL_1
 ***************************************************************************/
/* AMSCOM :: PLL_CTRL_1 :: pll_spare1_1 [15:13] */
#define AMSCOM_PLL_CTRL_1_PLL_SPARE1_1_MASK                        0xe000
#define AMSCOM_PLL_CTRL_1_PLL_SPARE1_1_ALIGN                       0
#define AMSCOM_PLL_CTRL_1_PLL_SPARE1_1_BITS                        3
#define AMSCOM_PLL_CTRL_1_PLL_SPARE1_1_SHIFT                       13

/* AMSCOM :: PLL_CTRL_1 :: vco_range [12:06] */
#define AMSCOM_PLL_CTRL_1_VCO_RANGE_MASK                           0x1fc0
#define AMSCOM_PLL_CTRL_1_VCO_RANGE_ALIGN                          0
#define AMSCOM_PLL_CTRL_1_VCO_RANGE_BITS                           7
#define AMSCOM_PLL_CTRL_1_VCO_RANGE_SHIFT                          6

/* AMSCOM :: PLL_CTRL_1 :: pll_spare1_0 [05:05] */
#define AMSCOM_PLL_CTRL_1_PLL_SPARE1_0_MASK                        0x0020
#define AMSCOM_PLL_CTRL_1_PLL_SPARE1_0_ALIGN                       0
#define AMSCOM_PLL_CTRL_1_PLL_SPARE1_0_BITS                        1
#define AMSCOM_PLL_CTRL_1_PLL_SPARE1_0_SHIFT                       5

/* AMSCOM :: PLL_CTRL_1 :: xtal_cm_en [04:04] */
#define AMSCOM_PLL_CTRL_1_XTAL_CM_EN_MASK                          0x0010
#define AMSCOM_PLL_CTRL_1_XTAL_CM_EN_ALIGN                         0
#define AMSCOM_PLL_CTRL_1_XTAL_CM_EN_BITS                          1
#define AMSCOM_PLL_CTRL_1_XTAL_CM_EN_SHIFT                         4

/* AMSCOM :: PLL_CTRL_1 :: curr_sel [03:00] */
#define AMSCOM_PLL_CTRL_1_CURR_SEL_MASK                            0x000f
#define AMSCOM_PLL_CTRL_1_CURR_SEL_ALIGN                           0
#define AMSCOM_PLL_CTRL_1_CURR_SEL_BITS                            4
#define AMSCOM_PLL_CTRL_1_CURR_SEL_SHIFT                           0


/****************************************************************************
 * AMSCOM :: PLL_CTRL_2
 ***************************************************************************/
/* AMSCOM :: PLL_CTRL_2 :: en_i4iqbuf [15:14] */
#define AMSCOM_PLL_CTRL_2_EN_I4IQBUF_MASK                          0xc000
#define AMSCOM_PLL_CTRL_2_EN_I4IQBUF_ALIGN                         0
#define AMSCOM_PLL_CTRL_2_EN_I4IQBUF_BITS                          2
#define AMSCOM_PLL_CTRL_2_EN_I4IQBUF_SHIFT                         14

/* AMSCOM :: PLL_CTRL_2 :: vco_buf_pon [13:10] */
#define AMSCOM_PLL_CTRL_2_VCO_BUF_PON_MASK                         0x3c00
#define AMSCOM_PLL_CTRL_2_VCO_BUF_PON_ALIGN                        0
#define AMSCOM_PLL_CTRL_2_VCO_BUF_PON_BITS                         4
#define AMSCOM_PLL_CTRL_2_VCO_BUF_PON_SHIFT                        10

/* AMSCOM :: PLL_CTRL_2 :: pll_clkvco_cal_invert [09:09] */
#define AMSCOM_PLL_CTRL_2_PLL_CLKVCO_CAL_INVERT_MASK               0x0200
#define AMSCOM_PLL_CTRL_2_PLL_CLKVCO_CAL_INVERT_ALIGN              0
#define AMSCOM_PLL_CTRL_2_PLL_CLKVCO_CAL_INVERT_BITS               1
#define AMSCOM_PLL_CTRL_2_PLL_CLKVCO_CAL_INVERT_SHIFT              9

/* AMSCOM :: PLL_CTRL_2 :: pll_spare2_0 [08:08] */
#define AMSCOM_PLL_CTRL_2_PLL_SPARE2_0_MASK                        0x0100
#define AMSCOM_PLL_CTRL_2_PLL_SPARE2_0_ALIGN                       0
#define AMSCOM_PLL_CTRL_2_PLL_SPARE2_0_BITS                        1
#define AMSCOM_PLL_CTRL_2_PLL_SPARE2_0_SHIFT                       8

/* AMSCOM :: PLL_CTRL_2 :: calib_adj [07:05] */
#define AMSCOM_PLL_CTRL_2_CALIB_ADJ_MASK                           0x00e0
#define AMSCOM_PLL_CTRL_2_CALIB_ADJ_ALIGN                          0
#define AMSCOM_PLL_CTRL_2_CALIB_ADJ_BITS                           3
#define AMSCOM_PLL_CTRL_2_CALIB_ADJ_SHIFT                          5

/* AMSCOM :: PLL_CTRL_2 :: en_8p5g [04:04] */
#define AMSCOM_PLL_CTRL_2_EN_8P5G_MASK                             0x0010
#define AMSCOM_PLL_CTRL_2_EN_8P5G_ALIGN                            0
#define AMSCOM_PLL_CTRL_2_EN_8P5G_BITS                             1
#define AMSCOM_PLL_CTRL_2_EN_8P5G_SHIFT                            4

/* AMSCOM :: PLL_CTRL_2 :: vco_pon [03:00] */
#define AMSCOM_PLL_CTRL_2_VCO_PON_MASK                             0x000f
#define AMSCOM_PLL_CTRL_2_VCO_PON_ALIGN                            0
#define AMSCOM_PLL_CTRL_2_VCO_PON_BITS                             4
#define AMSCOM_PLL_CTRL_2_VCO_PON_SHIFT                            0


/****************************************************************************
 * AMSCOM :: PLL_CTRL_3
 ***************************************************************************/
/* AMSCOM :: PLL_CTRL_3 :: div [15:11] */
#define AMSCOM_PLL_CTRL_3_DIV_MASK                                 0xf800
#define AMSCOM_PLL_CTRL_3_DIV_ALIGN                                0
#define AMSCOM_PLL_CTRL_3_DIV_BITS                                 5
#define AMSCOM_PLL_CTRL_3_DIV_SHIFT                                11

/* AMSCOM :: PLL_CTRL_3 :: en_cmos_refout [10:10] */
#define AMSCOM_PLL_CTRL_3_EN_CMOS_REFOUT_MASK                      0x0400
#define AMSCOM_PLL_CTRL_3_EN_CMOS_REFOUT_ALIGN                     0
#define AMSCOM_PLL_CTRL_3_EN_CMOS_REFOUT_BITS                      1
#define AMSCOM_PLL_CTRL_3_EN_CMOS_REFOUT_SHIFT                     10

/* AMSCOM :: PLL_CTRL_3 :: en_cml_refout [09:09] */
#define AMSCOM_PLL_CTRL_3_EN_CML_REFOUT_MASK                       0x0200
#define AMSCOM_PLL_CTRL_3_EN_CML_REFOUT_ALIGN                      0
#define AMSCOM_PLL_CTRL_3_EN_CML_REFOUT_BITS                       1
#define AMSCOM_PLL_CTRL_3_EN_CML_REFOUT_SHIFT                      9

/* AMSCOM :: PLL_CTRL_3 :: pllclksel [08:08] */
#define AMSCOM_PLL_CTRL_3_PLLCLKSEL_MASK                           0x0100
#define AMSCOM_PLL_CTRL_3_PLLCLKSEL_ALIGN                          0
#define AMSCOM_PLL_CTRL_3_PLLCLKSEL_BITS                           1
#define AMSCOM_PLL_CTRL_3_PLLCLKSEL_SHIFT                          8

/* AMSCOM :: PLL_CTRL_3 :: en_rclk_refout [07:07] */
#define AMSCOM_PLL_CTRL_3_EN_RCLK_REFOUT_MASK                      0x0080
#define AMSCOM_PLL_CTRL_3_EN_RCLK_REFOUT_ALIGN                     0
#define AMSCOM_PLL_CTRL_3_EN_RCLK_REFOUT_BITS                      1
#define AMSCOM_PLL_CTRL_3_EN_RCLK_REFOUT_SHIFT                     7

/* AMSCOM :: PLL_CTRL_3 :: en_cmos_refout_overwr [06:06] */
#define AMSCOM_PLL_CTRL_3_EN_CMOS_REFOUT_OVERWR_MASK               0x0040
#define AMSCOM_PLL_CTRL_3_EN_CMOS_REFOUT_OVERWR_ALIGN              0
#define AMSCOM_PLL_CTRL_3_EN_CMOS_REFOUT_OVERWR_BITS               1
#define AMSCOM_PLL_CTRL_3_EN_CMOS_REFOUT_OVERWR_SHIFT              6

/* AMSCOM :: PLL_CTRL_3 :: en_cml_refout_overwr [05:05] */
#define AMSCOM_PLL_CTRL_3_EN_CML_REFOUT_OVERWR_MASK                0x0020
#define AMSCOM_PLL_CTRL_3_EN_CML_REFOUT_OVERWR_ALIGN               0
#define AMSCOM_PLL_CTRL_3_EN_CML_REFOUT_OVERWR_BITS                1
#define AMSCOM_PLL_CTRL_3_EN_CML_REFOUT_OVERWR_SHIFT               5

/* AMSCOM :: PLL_CTRL_3 :: en_test_frac_clk [04:04] */
#define AMSCOM_PLL_CTRL_3_EN_TEST_FRAC_CLK_MASK                    0x0010
#define AMSCOM_PLL_CTRL_3_EN_TEST_FRAC_CLK_ALIGN                   0
#define AMSCOM_PLL_CTRL_3_EN_TEST_FRAC_CLK_BITS                    1
#define AMSCOM_PLL_CTRL_3_EN_TEST_FRAC_CLK_SHIFT                   4

/* AMSCOM :: PLL_CTRL_3 :: en_test_integer_clk [03:03] */
#define AMSCOM_PLL_CTRL_3_EN_TEST_INTEGER_CLK_MASK                 0x0008
#define AMSCOM_PLL_CTRL_3_EN_TEST_INTEGER_CLK_ALIGN                0
#define AMSCOM_PLL_CTRL_3_EN_TEST_INTEGER_CLK_BITS                 1
#define AMSCOM_PLL_CTRL_3_EN_TEST_INTEGER_CLK_SHIFT                3

/* AMSCOM :: PLL_CTRL_3 :: band_Iqbuf_ctr [02:00] */
#define AMSCOM_PLL_CTRL_3_BAND_IQBUF_CTR_MASK                      0x0007
#define AMSCOM_PLL_CTRL_3_BAND_IQBUF_CTR_ALIGN                     0
#define AMSCOM_PLL_CTRL_3_BAND_IQBUF_CTR_BITS                      3
#define AMSCOM_PLL_CTRL_3_BAND_IQBUF_CTR_SHIFT                     0


/****************************************************************************
 * AMSCOM :: PLL_CTRL_4
 ***************************************************************************/
/* AMSCOM :: PLL_CTRL_4 :: reserved0 [15:15] */
#define AMSCOM_PLL_CTRL_4_RESERVED0_MASK                           0x8000
#define AMSCOM_PLL_CTRL_4_RESERVED0_ALIGN                          0
#define AMSCOM_PLL_CTRL_4_RESERVED0_BITS                           1
#define AMSCOM_PLL_CTRL_4_RESERVED0_SHIFT                          15

/* AMSCOM :: PLL_CTRL_4 :: test_sel [14:12] */
#define AMSCOM_PLL_CTRL_4_TEST_SEL_MASK                            0x7000
#define AMSCOM_PLL_CTRL_4_TEST_SEL_ALIGN                           0
#define AMSCOM_PLL_CTRL_4_TEST_SEL_BITS                            3
#define AMSCOM_PLL_CTRL_4_TEST_SEL_SHIFT                           12

/* AMSCOM :: PLL_CTRL_4 :: test_amp [11:10] */
#define AMSCOM_PLL_CTRL_4_TEST_AMP_MASK                            0x0c00
#define AMSCOM_PLL_CTRL_4_TEST_AMP_ALIGN                           0
#define AMSCOM_PLL_CTRL_4_TEST_AMP_BITS                            2
#define AMSCOM_PLL_CTRL_4_TEST_AMP_SHIFT                           10

/* AMSCOM :: PLL_CTRL_4 :: pll_spare4_1 [09:05] */
#define AMSCOM_PLL_CTRL_4_PLL_SPARE4_1_MASK                        0x03e0
#define AMSCOM_PLL_CTRL_4_PLL_SPARE4_1_ALIGN                       0
#define AMSCOM_PLL_CTRL_4_PLL_SPARE4_1_BITS                        5
#define AMSCOM_PLL_CTRL_4_PLL_SPARE4_1_SHIFT                       5

/* AMSCOM :: PLL_CTRL_4 :: lp_adj [04:02] */
#define AMSCOM_PLL_CTRL_4_LP_ADJ_MASK                              0x001c
#define AMSCOM_PLL_CTRL_4_LP_ADJ_ALIGN                             0
#define AMSCOM_PLL_CTRL_4_LP_ADJ_BITS                              3
#define AMSCOM_PLL_CTRL_4_LP_ADJ_SHIFT                             2

/* AMSCOM :: PLL_CTRL_4 :: pll_spare4_0 [01:01] */
#define AMSCOM_PLL_CTRL_4_PLL_SPARE4_0_MASK                        0x0002
#define AMSCOM_PLL_CTRL_4_PLL_SPARE4_0_ALIGN                       0
#define AMSCOM_PLL_CTRL_4_PLL_SPARE4_0_BITS                        1
#define AMSCOM_PLL_CTRL_4_PLL_SPARE4_0_SHIFT                       1

/* AMSCOM :: PLL_CTRL_4 :: test_pll_mode [00:00] */
#define AMSCOM_PLL_CTRL_4_TEST_PLL_MODE_MASK                       0x0001
#define AMSCOM_PLL_CTRL_4_TEST_PLL_MODE_ALIGN                      0
#define AMSCOM_PLL_CTRL_4_TEST_PLL_MODE_BITS                       1
#define AMSCOM_PLL_CTRL_4_TEST_PLL_MODE_SHIFT                      0


/****************************************************************************
 * AMSCOM :: PLL_CTRL_5
 ***************************************************************************/
/* AMSCOM :: PLL_CTRL_5 :: reserved0 [15:13] */
#define AMSCOM_PLL_CTRL_5_RESERVED0_MASK                           0xe000
#define AMSCOM_PLL_CTRL_5_RESERVED0_ALIGN                          0
#define AMSCOM_PLL_CTRL_5_RESERVED0_BITS                           3
#define AMSCOM_PLL_CTRL_5_RESERVED0_SHIFT                          13

/* AMSCOM :: PLL_CTRL_5 :: en_cur [12:10] */
#define AMSCOM_PLL_CTRL_5_EN_CUR_MASK                              0x1c00
#define AMSCOM_PLL_CTRL_5_EN_CUR_ALIGN                             0
#define AMSCOM_PLL_CTRL_5_EN_CUR_BITS                              3
#define AMSCOM_PLL_CTRL_5_EN_CUR_SHIFT                             10

/* AMSCOM :: PLL_CTRL_5 :: pwdb_dum [09:09] */
#define AMSCOM_PLL_CTRL_5_PWDB_DUM_MASK                            0x0200
#define AMSCOM_PLL_CTRL_5_PWDB_DUM_ALIGN                           0
#define AMSCOM_PLL_CTRL_5_PWDB_DUM_BITS                            1
#define AMSCOM_PLL_CTRL_5_PWDB_DUM_SHIFT                           9

/* AMSCOM :: PLL_CTRL_5 :: bias_pwd [08:08] */
#define AMSCOM_PLL_CTRL_5_BIAS_PWD_MASK                            0x0100
#define AMSCOM_PLL_CTRL_5_BIAS_PWD_ALIGN                           0
#define AMSCOM_PLL_CTRL_5_BIAS_PWD_BITS                            1
#define AMSCOM_PLL_CTRL_5_BIAS_PWD_SHIFT                           8

/* AMSCOM :: PLL_CTRL_5 :: pll_pwrdn [07:07] */
#define AMSCOM_PLL_CTRL_5_PLL_PWRDN_MASK                           0x0080
#define AMSCOM_PLL_CTRL_5_PLL_PWRDN_ALIGN                          0
#define AMSCOM_PLL_CTRL_5_PLL_PWRDN_BITS                           1
#define AMSCOM_PLL_CTRL_5_PLL_PWRDN_SHIFT                          7

/* AMSCOM :: PLL_CTRL_5 :: term_sel [06:05] */
#define AMSCOM_PLL_CTRL_5_TERM_SEL_MASK                            0x0060
#define AMSCOM_PLL_CTRL_5_TERM_SEL_ALIGN                           0
#define AMSCOM_PLL_CTRL_5_TERM_SEL_BITS                            2
#define AMSCOM_PLL_CTRL_5_TERM_SEL_SHIFT                           5

/* AMSCOM :: PLL_CTRL_5 :: test_sel_overwrite [04:04] */
#define AMSCOM_PLL_CTRL_5_TEST_SEL_OVERWRITE_MASK                  0x0010
#define AMSCOM_PLL_CTRL_5_TEST_SEL_OVERWRITE_ALIGN                 0
#define AMSCOM_PLL_CTRL_5_TEST_SEL_OVERWRITE_BITS                  1
#define AMSCOM_PLL_CTRL_5_TEST_SEL_OVERWRITE_SHIFT                 4

/* AMSCOM :: PLL_CTRL_5 :: test_vc [03:03] */
#define AMSCOM_PLL_CTRL_5_TEST_VC_MASK                             0x0008
#define AMSCOM_PLL_CTRL_5_TEST_VC_ALIGN                            0
#define AMSCOM_PLL_CTRL_5_TEST_VC_BITS                             1
#define AMSCOM_PLL_CTRL_5_TEST_VC_SHIFT                            3

/* AMSCOM :: PLL_CTRL_5 :: clk_test_sel [02:00] */
#define AMSCOM_PLL_CTRL_5_CLK_TEST_SEL_MASK                        0x0007
#define AMSCOM_PLL_CTRL_5_CLK_TEST_SEL_ALIGN                       0
#define AMSCOM_PLL_CTRL_5_CLK_TEST_SEL_BITS                        3
#define AMSCOM_PLL_CTRL_5_CLK_TEST_SEL_SHIFT                       0


/****************************************************************************
 * AMSCOM :: PLL_CTRL_6
 ***************************************************************************/
/* AMSCOM :: PLL_CTRL_6 :: i_ndiv_frac_l [15:12] */
#define AMSCOM_PLL_CTRL_6_I_NDIV_FRAC_L_MASK                       0xf000
#define AMSCOM_PLL_CTRL_6_I_NDIV_FRAC_L_ALIGN                      0
#define AMSCOM_PLL_CTRL_6_I_NDIV_FRAC_L_BITS                       4
#define AMSCOM_PLL_CTRL_6_I_NDIV_FRAC_L_SHIFT                      12

/* AMSCOM :: PLL_CTRL_6 :: i_pfd_offset [11:10] */
#define AMSCOM_PLL_CTRL_6_I_PFD_OFFSET_MASK                        0x0c00
#define AMSCOM_PLL_CTRL_6_I_PFD_OFFSET_ALIGN                       0
#define AMSCOM_PLL_CTRL_6_I_PFD_OFFSET_BITS                        2
#define AMSCOM_PLL_CTRL_6_I_PFD_OFFSET_SHIFT                       10

/* AMSCOM :: PLL_CTRL_6 :: ref_doubler_en [09:09] */
#define AMSCOM_PLL_CTRL_6_REF_DOUBLER_EN_MASK                      0x0200
#define AMSCOM_PLL_CTRL_6_REF_DOUBLER_EN_ALIGN                     0
#define AMSCOM_PLL_CTRL_6_REF_DOUBLER_EN_BITS                      1
#define AMSCOM_PLL_CTRL_6_REF_DOUBLER_EN_SHIFT                     9

/* AMSCOM :: PLL_CTRL_6 :: i_pfd_offset_enlarge [08:08] */
#define AMSCOM_PLL_CTRL_6_I_PFD_OFFSET_ENLARGE_MASK                0x0100
#define AMSCOM_PLL_CTRL_6_I_PFD_OFFSET_ENLARGE_ALIGN               0
#define AMSCOM_PLL_CTRL_6_I_PFD_OFFSET_ENLARGE_BITS                1
#define AMSCOM_PLL_CTRL_6_I_PFD_OFFSET_ENLARGE_SHIFT               8

/* AMSCOM :: PLL_CTRL_6 :: en_cap [07:05] */
#define AMSCOM_PLL_CTRL_6_EN_CAP_MASK                              0x00e0
#define AMSCOM_PLL_CTRL_6_EN_CAP_ALIGN                             0
#define AMSCOM_PLL_CTRL_6_EN_CAP_BITS                              3
#define AMSCOM_PLL_CTRL_6_EN_CAP_SHIFT                             5

/* AMSCOM :: PLL_CTRL_6 :: pll_spare6_0 [04:04] */
#define AMSCOM_PLL_CTRL_6_PLL_SPARE6_0_MASK                        0x0010
#define AMSCOM_PLL_CTRL_6_PLL_SPARE6_0_ALIGN                       0
#define AMSCOM_PLL_CTRL_6_PLL_SPARE6_0_BITS                        1
#define AMSCOM_PLL_CTRL_6_PLL_SPARE6_0_SHIFT                       4

/* AMSCOM :: PLL_CTRL_6 :: pll_pon [03:00] */
#define AMSCOM_PLL_CTRL_6_PLL_PON_MASK                             0x000f
#define AMSCOM_PLL_CTRL_6_PLL_PON_ALIGN                            0
#define AMSCOM_PLL_CTRL_6_PLL_PON_BITS                             4
#define AMSCOM_PLL_CTRL_6_PLL_PON_SHIFT                            0


/****************************************************************************
 * AMSCOM :: PLL_CTRL_7
 ***************************************************************************/
/* AMSCOM :: PLL_CTRL_7 :: reserved0 [15:14] */
#define AMSCOM_PLL_CTRL_7_RESERVED0_MASK                           0xc000
#define AMSCOM_PLL_CTRL_7_RESERVED0_ALIGN                          0
#define AMSCOM_PLL_CTRL_7_RESERVED0_BITS                           2
#define AMSCOM_PLL_CTRL_7_RESERVED0_SHIFT                          14

/* AMSCOM :: PLL_CTRL_7 :: i_ndiv_frac_h [13:00] */
#define AMSCOM_PLL_CTRL_7_I_NDIV_FRAC_H_MASK                       0x3fff
#define AMSCOM_PLL_CTRL_7_I_NDIV_FRAC_H_ALIGN                      0
#define AMSCOM_PLL_CTRL_7_I_NDIV_FRAC_H_BITS                       14
#define AMSCOM_PLL_CTRL_7_I_NDIV_FRAC_H_SHIFT                      0


/****************************************************************************
 * AMSCOM :: PLL_CTRL_8
 ***************************************************************************/
/* AMSCOM :: PLL_CTRL_8 :: i_ndiv_dither_en [15:15] */
#define AMSCOM_PLL_CTRL_8_I_NDIV_DITHER_EN_MASK                    0x8000
#define AMSCOM_PLL_CTRL_8_I_NDIV_DITHER_EN_ALIGN                   0
#define AMSCOM_PLL_CTRL_8_I_NDIV_DITHER_EN_BITS                    1
#define AMSCOM_PLL_CTRL_8_I_NDIV_DITHER_EN_SHIFT                   15

/* AMSCOM :: PLL_CTRL_8 :: i_pll_sdm_pwrdnb [14:14] */
#define AMSCOM_PLL_CTRL_8_I_PLL_SDM_PWRDNB_MASK                    0x4000
#define AMSCOM_PLL_CTRL_8_I_PLL_SDM_PWRDNB_ALIGN                   0
#define AMSCOM_PLL_CTRL_8_I_PLL_SDM_PWRDNB_BITS                    1
#define AMSCOM_PLL_CTRL_8_I_PLL_SDM_PWRDNB_SHIFT                   14

/* AMSCOM :: PLL_CTRL_8 :: mmd_en [13:13] */
#define AMSCOM_PLL_CTRL_8_MMD_EN_MASK                              0x2000
#define AMSCOM_PLL_CTRL_8_MMD_EN_ALIGN                             0
#define AMSCOM_PLL_CTRL_8_MMD_EN_BITS                              1
#define AMSCOM_PLL_CTRL_8_MMD_EN_SHIFT                             13

/* AMSCOM :: PLL_CTRL_8 :: mmd_prsc4or5pwdb [12:12] */
#define AMSCOM_PLL_CTRL_8_MMD_PRSC4OR5PWDB_MASK                    0x1000
#define AMSCOM_PLL_CTRL_8_MMD_PRSC4OR5PWDB_ALIGN                   0
#define AMSCOM_PLL_CTRL_8_MMD_PRSC4OR5PWDB_BITS                    1
#define AMSCOM_PLL_CTRL_8_MMD_PRSC4OR5PWDB_SHIFT                   12

/* AMSCOM :: PLL_CTRL_8 :: mmd_prsc8or9pwdb [11:11] */
#define AMSCOM_PLL_CTRL_8_MMD_PRSC8OR9PWDB_MASK                    0x0800
#define AMSCOM_PLL_CTRL_8_MMD_PRSC8OR9PWDB_ALIGN                   0
#define AMSCOM_PLL_CTRL_8_MMD_PRSC8OR9PWDB_BITS                    1
#define AMSCOM_PLL_CTRL_8_MMD_PRSC8OR9PWDB_SHIFT                   11

/* AMSCOM :: PLL_CTRL_8 :: mmd_div_range [10:10] */
#define AMSCOM_PLL_CTRL_8_MMD_DIV_RANGE_MASK                       0x0400
#define AMSCOM_PLL_CTRL_8_MMD_DIV_RANGE_ALIGN                      0
#define AMSCOM_PLL_CTRL_8_MMD_DIV_RANGE_BITS                       1
#define AMSCOM_PLL_CTRL_8_MMD_DIV_RANGE_SHIFT                      10

/* AMSCOM :: PLL_CTRL_8 :: i_ndiv_int [09:00] */
#define AMSCOM_PLL_CTRL_8_I_NDIV_INT_MASK                          0x03ff
#define AMSCOM_PLL_CTRL_8_I_NDIV_INT_ALIGN                         0
#define AMSCOM_PLL_CTRL_8_I_NDIV_INT_BITS                          10
#define AMSCOM_PLL_CTRL_8_I_NDIV_INT_SHIFT                         0


/****************************************************************************
 * AMSCOM :: PLL_CTRL_9
 ***************************************************************************/
/* AMSCOM :: PLL_CTRL_9 :: refclk_out_bias [15:14] */
#define AMSCOM_PLL_CTRL_9_REFCLK_OUT_BIAS_MASK                     0xc000
#define AMSCOM_PLL_CTRL_9_REFCLK_OUT_BIAS_ALIGN                    0
#define AMSCOM_PLL_CTRL_9_REFCLK_OUT_BIAS_BITS                     2
#define AMSCOM_PLL_CTRL_9_REFCLK_OUT_BIAS_SHIFT                    14

/* AMSCOM :: PLL_CTRL_9 :: bias_iq_ctrl [13:11] */
#define AMSCOM_PLL_CTRL_9_BIAS_IQ_CTRL_MASK                        0x3800
#define AMSCOM_PLL_CTRL_9_BIAS_IQ_CTRL_ALIGN                       0
#define AMSCOM_PLL_CTRL_9_BIAS_IQ_CTRL_BITS                        3
#define AMSCOM_PLL_CTRL_9_BIAS_IQ_CTRL_SHIFT                       11

/* AMSCOM :: PLL_CTRL_9 :: bias_div_ctrl [10:08] */
#define AMSCOM_PLL_CTRL_9_BIAS_DIV_CTRL_MASK                       0x0700
#define AMSCOM_PLL_CTRL_9_BIAS_DIV_CTRL_ALIGN                      0
#define AMSCOM_PLL_CTRL_9_BIAS_DIV_CTRL_BITS                       3
#define AMSCOM_PLL_CTRL_9_BIAS_DIV_CTRL_SHIFT                      8

/* AMSCOM :: PLL_CTRL_9 :: low_supply_en [07:07] */
#define AMSCOM_PLL_CTRL_9_LOW_SUPPLY_EN_MASK                       0x0080
#define AMSCOM_PLL_CTRL_9_LOW_SUPPLY_EN_ALIGN                      0
#define AMSCOM_PLL_CTRL_9_LOW_SUPPLY_EN_BITS                       1
#define AMSCOM_PLL_CTRL_9_LOW_SUPPLY_EN_SHIFT                      7

/* AMSCOM :: PLL_CTRL_9 :: sel_fp3cap [06:03] */
#define AMSCOM_PLL_CTRL_9_SEL_FP3CAP_MASK                          0x0078
#define AMSCOM_PLL_CTRL_9_SEL_FP3CAP_ALIGN                         0
#define AMSCOM_PLL_CTRL_9_SEL_FP3CAP_BITS                          4
#define AMSCOM_PLL_CTRL_9_SEL_FP3CAP_SHIFT                         3

/* AMSCOM :: PLL_CTRL_9 :: i_pll_frac_mode [02:01] */
#define AMSCOM_PLL_CTRL_9_I_PLL_FRAC_MODE_MASK                     0x0006
#define AMSCOM_PLL_CTRL_9_I_PLL_FRAC_MODE_ALIGN                    0
#define AMSCOM_PLL_CTRL_9_I_PLL_FRAC_MODE_BITS                     2
#define AMSCOM_PLL_CTRL_9_I_PLL_FRAC_MODE_SHIFT                    1

/* AMSCOM :: PLL_CTRL_9 :: mmd_resetb [00:00] */
#define AMSCOM_PLL_CTRL_9_MMD_RESETB_MASK                          0x0001
#define AMSCOM_PLL_CTRL_9_MMD_RESETB_ALIGN                         0
#define AMSCOM_PLL_CTRL_9_MMD_RESETB_BITS                          1
#define AMSCOM_PLL_CTRL_9_MMD_RESETB_SHIFT                         0


/****************************************************************************
 * AMSCOM :: PLL_CTRL_10
 ***************************************************************************/
/* AMSCOM :: PLL_CTRL_10 :: reserved0 [15:13] */
#define AMSCOM_PLL_CTRL_10_RESERVED0_MASK                          0xe000
#define AMSCOM_PLL_CTRL_10_RESERVED0_ALIGN                         0
#define AMSCOM_PLL_CTRL_10_RESERVED0_BITS                          3
#define AMSCOM_PLL_CTRL_10_RESERVED0_SHIFT                         13

/* AMSCOM :: PLL_CTRL_10 :: pll_spare_10_0 [12:06] */
#define AMSCOM_PLL_CTRL_10_PLL_SPARE_10_0_MASK                     0x1fc0
#define AMSCOM_PLL_CTRL_10_PLL_SPARE_10_0_ALIGN                    0
#define AMSCOM_PLL_CTRL_10_PLL_SPARE_10_0_BITS                     7
#define AMSCOM_PLL_CTRL_10_PLL_SPARE_10_0_SHIFT                    6

/* AMSCOM :: PLL_CTRL_10 :: refclk_in_bias [05:00] */
#define AMSCOM_PLL_CTRL_10_REFCLK_IN_BIAS_MASK                     0x003f
#define AMSCOM_PLL_CTRL_10_REFCLK_IN_BIAS_ALIGN                    0
#define AMSCOM_PLL_CTRL_10_REFCLK_IN_BIAS_BITS                     6
#define AMSCOM_PLL_CTRL_10_REFCLK_IN_BIAS_SHIFT                    0


/****************************************************************************
 * merlin_gallardo_sigdet_blk_SIGDET
 ***************************************************************************/
/****************************************************************************
 * SIGDET :: SIGDET_CTRL_0
 ***************************************************************************/
/* SIGDET :: SIGDET_CTRL_0 :: reserved0 [15:15] */
#define SIGDET_SIGDET_CTRL_0_RESERVED0_MASK                        0x8000
#define SIGDET_SIGDET_CTRL_0_RESERVED0_ALIGN                       0
#define SIGDET_SIGDET_CTRL_0_RESERVED0_BITS                        1
#define SIGDET_SIGDET_CTRL_0_RESERVED0_SHIFT                       15

/* SIGDET :: SIGDET_CTRL_0 :: energy_detect_mask_count [14:10] */
#define SIGDET_SIGDET_CTRL_0_ENERGY_DETECT_MASK_COUNT_MASK         0x7c00
#define SIGDET_SIGDET_CTRL_0_ENERGY_DETECT_MASK_COUNT_ALIGN        0
#define SIGDET_SIGDET_CTRL_0_ENERGY_DETECT_MASK_COUNT_BITS         5
#define SIGDET_SIGDET_CTRL_0_ENERGY_DETECT_MASK_COUNT_SHIFT        10

/* SIGDET :: SIGDET_CTRL_0 :: los_filter_count [09:05] */
#define SIGDET_SIGDET_CTRL_0_LOS_FILTER_COUNT_MASK                 0x03e0
#define SIGDET_SIGDET_CTRL_0_LOS_FILTER_COUNT_ALIGN                0
#define SIGDET_SIGDET_CTRL_0_LOS_FILTER_COUNT_BITS                 5
#define SIGDET_SIGDET_CTRL_0_LOS_FILTER_COUNT_SHIFT                5

/* SIGDET :: SIGDET_CTRL_0 :: signal_detect_filter_count [04:00] */
#define SIGDET_SIGDET_CTRL_0_SIGNAL_DETECT_FILTER_COUNT_MASK       0x001f
#define SIGDET_SIGDET_CTRL_0_SIGNAL_DETECT_FILTER_COUNT_ALIGN      0
#define SIGDET_SIGDET_CTRL_0_SIGNAL_DETECT_FILTER_COUNT_BITS       5
#define SIGDET_SIGDET_CTRL_0_SIGNAL_DETECT_FILTER_COUNT_SHIFT      0


/****************************************************************************
 * SIGDET :: SIGDET_CTRL_1
 ***************************************************************************/
/* SIGDET :: SIGDET_CTRL_1 :: reserved0 [15:09] */
#define SIGDET_SIGDET_CTRL_1_RESERVED0_MASK                        0xfe00
#define SIGDET_SIGDET_CTRL_1_RESERVED0_ALIGN                       0
#define SIGDET_SIGDET_CTRL_1_RESERVED0_BITS                        7
#define SIGDET_SIGDET_CTRL_1_RESERVED0_SHIFT                       9

/* SIGDET :: SIGDET_CTRL_1 :: signal_detect_frc_val [08:08] */
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FRC_VAL_MASK            0x0100
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FRC_VAL_ALIGN           0
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FRC_VAL_BITS            1
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FRC_VAL_SHIFT           8

/* SIGDET :: SIGDET_CTRL_1 :: signal_detect_frc [07:07] */
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FRC_MASK                0x0080
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FRC_ALIGN               0
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FRC_BITS                1
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FRC_SHIFT               7

/* SIGDET :: SIGDET_CTRL_1 :: energy_detect_frc_val [06:06] */
#define SIGDET_SIGDET_CTRL_1_ENERGY_DETECT_FRC_VAL_MASK            0x0040
#define SIGDET_SIGDET_CTRL_1_ENERGY_DETECT_FRC_VAL_ALIGN           0
#define SIGDET_SIGDET_CTRL_1_ENERGY_DETECT_FRC_VAL_BITS            1
#define SIGDET_SIGDET_CTRL_1_ENERGY_DETECT_FRC_VAL_SHIFT           6

/* SIGDET :: SIGDET_CTRL_1 :: energy_detect_frc [05:05] */
#define SIGDET_SIGDET_CTRL_1_ENERGY_DETECT_FRC_MASK                0x0020
#define SIGDET_SIGDET_CTRL_1_ENERGY_DETECT_FRC_ALIGN               0
#define SIGDET_SIGDET_CTRL_1_ENERGY_DETECT_FRC_BITS                1
#define SIGDET_SIGDET_CTRL_1_ENERGY_DETECT_FRC_SHIFT               5

/* SIGDET :: SIGDET_CTRL_1 :: signal_detect_filter_1us [04:04] */
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FILTER_1US_MASK         0x0010
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FILTER_1US_ALIGN        0
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FILTER_1US_BITS         1
#define SIGDET_SIGDET_CTRL_1_SIGNAL_DETECT_FILTER_1US_SHIFT        4

/* SIGDET :: SIGDET_CTRL_1 :: ignore_lp_mode [03:03] */
#define SIGDET_SIGDET_CTRL_1_IGNORE_LP_MODE_MASK                   0x0008
#define SIGDET_SIGDET_CTRL_1_IGNORE_LP_MODE_ALIGN                  0
#define SIGDET_SIGDET_CTRL_1_IGNORE_LP_MODE_BITS                   1
#define SIGDET_SIGDET_CTRL_1_IGNORE_LP_MODE_SHIFT                  3

/* SIGDET :: SIGDET_CTRL_1 :: ext_los_inv [02:02] */
#define SIGDET_SIGDET_CTRL_1_EXT_LOS_INV_MASK                      0x0004
#define SIGDET_SIGDET_CTRL_1_EXT_LOS_INV_ALIGN                     0
#define SIGDET_SIGDET_CTRL_1_EXT_LOS_INV_BITS                      1
#define SIGDET_SIGDET_CTRL_1_EXT_LOS_INV_SHIFT                     2

/* SIGDET :: SIGDET_CTRL_1 :: ext_los_en [01:01] */
#define SIGDET_SIGDET_CTRL_1_EXT_LOS_EN_MASK                       0x0002
#define SIGDET_SIGDET_CTRL_1_EXT_LOS_EN_ALIGN                      0
#define SIGDET_SIGDET_CTRL_1_EXT_LOS_EN_BITS                       1
#define SIGDET_SIGDET_CTRL_1_EXT_LOS_EN_SHIFT                      1

/* SIGDET :: SIGDET_CTRL_1 :: afe_signal_detect_dis [00:00] */
#define SIGDET_SIGDET_CTRL_1_AFE_SIGNAL_DETECT_DIS_MASK            0x0001
#define SIGDET_SIGDET_CTRL_1_AFE_SIGNAL_DETECT_DIS_ALIGN           0
#define SIGDET_SIGDET_CTRL_1_AFE_SIGNAL_DETECT_DIS_BITS            1
#define SIGDET_SIGDET_CTRL_1_AFE_SIGNAL_DETECT_DIS_SHIFT           0


/****************************************************************************
 * SIGDET :: SIGDET_CTRL_2
 ***************************************************************************/
/* SIGDET :: SIGDET_CTRL_2 :: reserved0 [15:14] */
#define SIGDET_SIGDET_CTRL_2_RESERVED0_MASK                        0xc000
#define SIGDET_SIGDET_CTRL_2_RESERVED0_ALIGN                       0
#define SIGDET_SIGDET_CTRL_2_RESERVED0_BITS                        2
#define SIGDET_SIGDET_CTRL_2_RESERVED0_SHIFT                       14

/* SIGDET :: SIGDET_CTRL_2 :: hold_sd_count [13:11] */
#define SIGDET_SIGDET_CTRL_2_HOLD_SD_COUNT_MASK                    0x3800
#define SIGDET_SIGDET_CTRL_2_HOLD_SD_COUNT_ALIGN                   0
#define SIGDET_SIGDET_CTRL_2_HOLD_SD_COUNT_BITS                    3
#define SIGDET_SIGDET_CTRL_2_HOLD_SD_COUNT_SHIFT                   11

/* SIGDET :: SIGDET_CTRL_2 :: hold_los_count [10:08] */
#define SIGDET_SIGDET_CTRL_2_HOLD_LOS_COUNT_MASK                   0x0700
#define SIGDET_SIGDET_CTRL_2_HOLD_LOS_COUNT_ALIGN                  0
#define SIGDET_SIGDET_CTRL_2_HOLD_LOS_COUNT_BITS                   3
#define SIGDET_SIGDET_CTRL_2_HOLD_LOS_COUNT_SHIFT                  8

/* SIGDET :: SIGDET_CTRL_2 :: signal_detect_thresh [07:04] */
#define SIGDET_SIGDET_CTRL_2_SIGNAL_DETECT_THRESH_MASK             0x00f0
#define SIGDET_SIGDET_CTRL_2_SIGNAL_DETECT_THRESH_ALIGN            0
#define SIGDET_SIGDET_CTRL_2_SIGNAL_DETECT_THRESH_BITS             4
#define SIGDET_SIGDET_CTRL_2_SIGNAL_DETECT_THRESH_SHIFT            4

/* SIGDET :: SIGDET_CTRL_2 :: los_thresh [03:00] */
#define SIGDET_SIGDET_CTRL_2_LOS_THRESH_MASK                       0x000f
#define SIGDET_SIGDET_CTRL_2_LOS_THRESH_ALIGN                      0
#define SIGDET_SIGDET_CTRL_2_LOS_THRESH_BITS                       4
#define SIGDET_SIGDET_CTRL_2_LOS_THRESH_SHIFT                      0


/****************************************************************************
 * SIGDET :: SIGDET_STATUS_0
 ***************************************************************************/
/* SIGDET :: SIGDET_STATUS_0 :: reserved0 [15:12] */
#define SIGDET_SIGDET_STATUS_0_RESERVED0_MASK                      0xf000
#define SIGDET_SIGDET_STATUS_0_RESERVED0_ALIGN                     0
#define SIGDET_SIGDET_STATUS_0_RESERVED0_BITS                      4
#define SIGDET_SIGDET_STATUS_0_RESERVED0_SHIFT                     12

/* SIGDET :: SIGDET_STATUS_0 :: afe_sigdet_thresh [11:08] */
#define SIGDET_SIGDET_STATUS_0_AFE_SIGDET_THRESH_MASK              0x0f00
#define SIGDET_SIGDET_STATUS_0_AFE_SIGDET_THRESH_ALIGN             0
#define SIGDET_SIGDET_STATUS_0_AFE_SIGDET_THRESH_BITS              4
#define SIGDET_SIGDET_STATUS_0_AFE_SIGDET_THRESH_SHIFT             8

/* SIGDET :: SIGDET_STATUS_0 :: reserved1 [07:06] */
#define SIGDET_SIGDET_STATUS_0_RESERVED1_MASK                      0x00c0
#define SIGDET_SIGDET_STATUS_0_RESERVED1_ALIGN                     0
#define SIGDET_SIGDET_STATUS_0_RESERVED1_BITS                      2
#define SIGDET_SIGDET_STATUS_0_RESERVED1_SHIFT                     6

/* SIGDET :: SIGDET_STATUS_0 :: signal_detect_raw_change [05:05] */
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_RAW_CHANGE_MASK       0x0020
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_RAW_CHANGE_ALIGN      0
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_RAW_CHANGE_BITS       1
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_RAW_CHANGE_SHIFT      5

/* SIGDET :: SIGDET_STATUS_0 :: signal_detect_raw [04:04] */
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_RAW_MASK              0x0010
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_RAW_ALIGN             0
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_RAW_BITS              1
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_RAW_SHIFT             4

/* SIGDET :: SIGDET_STATUS_0 :: energy_detect_change [03:03] */
#define SIGDET_SIGDET_STATUS_0_ENERGY_DETECT_CHANGE_MASK           0x0008
#define SIGDET_SIGDET_STATUS_0_ENERGY_DETECT_CHANGE_ALIGN          0
#define SIGDET_SIGDET_STATUS_0_ENERGY_DETECT_CHANGE_BITS           1
#define SIGDET_SIGDET_STATUS_0_ENERGY_DETECT_CHANGE_SHIFT          3

/* SIGDET :: SIGDET_STATUS_0 :: energy_detect [02:02] */
#define SIGDET_SIGDET_STATUS_0_ENERGY_DETECT_MASK                  0x0004
#define SIGDET_SIGDET_STATUS_0_ENERGY_DETECT_ALIGN                 0
#define SIGDET_SIGDET_STATUS_0_ENERGY_DETECT_BITS                  1
#define SIGDET_SIGDET_STATUS_0_ENERGY_DETECT_SHIFT                 2

/* SIGDET :: SIGDET_STATUS_0 :: signal_detect_change [01:01] */
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_CHANGE_MASK           0x0002
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_CHANGE_ALIGN          0
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_CHANGE_BITS           1
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_CHANGE_SHIFT          1

/* SIGDET :: SIGDET_STATUS_0 :: signal_detect [00:00] */
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_MASK                  0x0001
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_ALIGN                 0
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_BITS                  1
#define SIGDET_SIGDET_STATUS_0_SIGNAL_DETECT_SHIFT                 0


/****************************************************************************
 * merlin_gallardo_tlb_blk_TLB_RX
 ***************************************************************************/
/****************************************************************************
 * TLB_RX :: prbs_chk_config
 ***************************************************************************/
/* TLB_RX :: prbs_chk_config :: reserved0 [15:11] */
#define TLB_RX_PRBS_CHK_CONFIG_RESERVED0_MASK                      0xf800
#define TLB_RX_PRBS_CHK_CONFIG_RESERVED0_ALIGN                     0
#define TLB_RX_PRBS_CHK_CONFIG_RESERVED0_BITS                      5
#define TLB_RX_PRBS_CHK_CONFIG_RESERVED0_SHIFT                     11

/* TLB_RX :: prbs_chk_config :: trnsum_error_count_en [10:10] */
#define TLB_RX_PRBS_CHK_CONFIG_TRNSUM_ERROR_COUNT_EN_MASK          0x0400
#define TLB_RX_PRBS_CHK_CONFIG_TRNSUM_ERROR_COUNT_EN_ALIGN         0
#define TLB_RX_PRBS_CHK_CONFIG_TRNSUM_ERROR_COUNT_EN_BITS          1
#define TLB_RX_PRBS_CHK_CONFIG_TRNSUM_ERROR_COUNT_EN_SHIFT         10

/* TLB_RX :: prbs_chk_config :: prbs_chk_err_cnt_burst_mode [09:09] */
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_ERR_CNT_BURST_MODE_MASK    0x0200
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_ERR_CNT_BURST_MODE_ALIGN   0
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_ERR_CNT_BURST_MODE_BITS    1
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_ERR_CNT_BURST_MODE_SHIFT   9

/* TLB_RX :: prbs_chk_config :: prbs_chk_out_of_lock_mode_31 [08:08] */
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_OUT_OF_LOCK_MODE_31_MASK   0x0100
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_OUT_OF_LOCK_MODE_31_ALIGN  0
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_OUT_OF_LOCK_MODE_31_BITS   1
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_OUT_OF_LOCK_MODE_31_SHIFT  8

/* TLB_RX :: prbs_chk_config :: prbs_chk_en_auto_mode [07:07] */
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_EN_AUTO_MODE_MASK          0x0080
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_EN_AUTO_MODE_ALIGN         0
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_EN_AUTO_MODE_BITS          1
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_EN_AUTO_MODE_SHIFT         7

/* TLB_RX :: prbs_chk_config :: prbs_chk_mode [06:05] */
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_MODE_MASK                  0x0060
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_MODE_ALIGN                 0
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_MODE_BITS                  2
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_MODE_SHIFT                 5

/* TLB_RX :: prbs_chk_config :: prbs_chk_inv [04:04] */
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_INV_MASK                   0x0010
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_INV_ALIGN                  0
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_INV_BITS                   1
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_INV_SHIFT                  4

/* TLB_RX :: prbs_chk_config :: prbs_chk_mode_sel [03:01] */
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_MODE_SEL_MASK              0x000e
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_MODE_SEL_ALIGN             0
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_MODE_SEL_BITS              3
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_MODE_SEL_SHIFT             1

/* TLB_RX :: prbs_chk_config :: prbs_chk_en [00:00] */
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_EN_MASK                    0x0001
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_EN_ALIGN                   0
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_EN_BITS                    1
#define TLB_RX_PRBS_CHK_CONFIG_PRBS_CHK_EN_SHIFT                   0


/****************************************************************************
 * TLB_RX :: dig_lpbk_config
 ***************************************************************************/
/* TLB_RX :: dig_lpbk_config :: reserved0 [15:03] */
#define TLB_RX_DIG_LPBK_CONFIG_RESERVED0_MASK                      0xfff8
#define TLB_RX_DIG_LPBK_CONFIG_RESERVED0_ALIGN                     0
#define TLB_RX_DIG_LPBK_CONFIG_RESERVED0_BITS                      13
#define TLB_RX_DIG_LPBK_CONFIG_RESERVED0_SHIFT                     3

/* TLB_RX :: dig_lpbk_config :: dig_lpbk_pd_flt_bypass [02:02] */
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_PD_FLT_BYPASS_MASK         0x0004
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_PD_FLT_BYPASS_ALIGN        0
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_PD_FLT_BYPASS_BITS         1
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_PD_FLT_BYPASS_SHIFT        2

/* TLB_RX :: dig_lpbk_config :: dig_lpbk_pd_mode [01:01] */
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_PD_MODE_MASK               0x0002
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_PD_MODE_ALIGN              0
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_PD_MODE_BITS               1
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_PD_MODE_SHIFT              1

/* TLB_RX :: dig_lpbk_config :: dig_lpbk_en [00:00] */
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_EN_MASK                    0x0001
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_EN_ALIGN                   0
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_EN_BITS                    1
#define TLB_RX_DIG_LPBK_CONFIG_DIG_LPBK_EN_SHIFT                   0


/****************************************************************************
 * TLB_RX :: tlb_rx_misc_config
 ***************************************************************************/
/* TLB_RX :: tlb_rx_misc_config :: reserved0 [15:03] */
#define TLB_RX_TLB_RX_MISC_CONFIG_RESERVED0_MASK                   0xfff8
#define TLB_RX_TLB_RX_MISC_CONFIG_RESERVED0_ALIGN                  0
#define TLB_RX_TLB_RX_MISC_CONFIG_RESERVED0_BITS                   13
#define TLB_RX_TLB_RX_MISC_CONFIG_RESERVED0_SHIFT                  3

/* TLB_RX :: tlb_rx_misc_config :: dbg_mask_dig_lpbk_en [02:02] */
#define TLB_RX_TLB_RX_MISC_CONFIG_DBG_MASK_DIG_LPBK_EN_MASK        0x0004
#define TLB_RX_TLB_RX_MISC_CONFIG_DBG_MASK_DIG_LPBK_EN_ALIGN       0
#define TLB_RX_TLB_RX_MISC_CONFIG_DBG_MASK_DIG_LPBK_EN_BITS        1
#define TLB_RX_TLB_RX_MISC_CONFIG_DBG_MASK_DIG_LPBK_EN_SHIFT       2

/* TLB_RX :: tlb_rx_misc_config :: rx_aggregator_bypass_en [01:01] */
#define TLB_RX_TLB_RX_MISC_CONFIG_RX_AGGREGATOR_BYPASS_EN_MASK     0x0002
#define TLB_RX_TLB_RX_MISC_CONFIG_RX_AGGREGATOR_BYPASS_EN_ALIGN    0
#define TLB_RX_TLB_RX_MISC_CONFIG_RX_AGGREGATOR_BYPASS_EN_BITS     1
#define TLB_RX_TLB_RX_MISC_CONFIG_RX_AGGREGATOR_BYPASS_EN_SHIFT    1

/* TLB_RX :: tlb_rx_misc_config :: rx_pmd_dp_invert [00:00] */
#define TLB_RX_TLB_RX_MISC_CONFIG_RX_PMD_DP_INVERT_MASK            0x0001
#define TLB_RX_TLB_RX_MISC_CONFIG_RX_PMD_DP_INVERT_ALIGN           0
#define TLB_RX_TLB_RX_MISC_CONFIG_RX_PMD_DP_INVERT_BITS            1
#define TLB_RX_TLB_RX_MISC_CONFIG_RX_PMD_DP_INVERT_SHIFT           0


/****************************************************************************
 * TLB_RX :: prbs_chk_en_timer_control
 ***************************************************************************/
/* TLB_RX :: prbs_chk_en_timer_control :: reserved0 [15:09] */
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_RESERVED0_MASK            0xfe00
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_RESERVED0_ALIGN           0
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_RESERVED0_BITS            7
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_RESERVED0_SHIFT           9

/* TLB_RX :: prbs_chk_en_timer_control :: prbs_chk_en_timeout [08:04] */
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_PRBS_CHK_EN_TIMEOUT_MASK  0x01f0
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_PRBS_CHK_EN_TIMEOUT_ALIGN 0
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_PRBS_CHK_EN_TIMEOUT_BITS  5
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_PRBS_CHK_EN_TIMEOUT_SHIFT 4

/* TLB_RX :: prbs_chk_en_timer_control :: reserved1 [03:02] */
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_RESERVED1_MASK            0x000c
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_RESERVED1_ALIGN           0
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_RESERVED1_BITS            2
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_RESERVED1_SHIFT           2

/* TLB_RX :: prbs_chk_en_timer_control :: prbs_chk_en_timer_mode [01:00] */
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_PRBS_CHK_EN_TIMER_MODE_MASK 0x0003
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_PRBS_CHK_EN_TIMER_MODE_ALIGN 0
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_PRBS_CHK_EN_TIMER_MODE_BITS 2
#define TLB_RX_PRBS_CHK_EN_TIMER_CONTROL_PRBS_CHK_EN_TIMER_MODE_SHIFT 0


/****************************************************************************
 * TLB_RX :: dig_lpbk_pd_status
 ***************************************************************************/
/* TLB_RX :: dig_lpbk_pd_status :: reserved0 [15:02] */
#define TLB_RX_DIG_LPBK_PD_STATUS_RESERVED0_MASK                   0xfffc
#define TLB_RX_DIG_LPBK_PD_STATUS_RESERVED0_ALIGN                  0
#define TLB_RX_DIG_LPBK_PD_STATUS_RESERVED0_BITS                   14
#define TLB_RX_DIG_LPBK_PD_STATUS_RESERVED0_SHIFT                  2

/* TLB_RX :: dig_lpbk_pd_status :: dig_lpbk_pd_early_ind [01:01] */
#define TLB_RX_DIG_LPBK_PD_STATUS_DIG_LPBK_PD_EARLY_IND_MASK       0x0002
#define TLB_RX_DIG_LPBK_PD_STATUS_DIG_LPBK_PD_EARLY_IND_ALIGN      0
#define TLB_RX_DIG_LPBK_PD_STATUS_DIG_LPBK_PD_EARLY_IND_BITS       1
#define TLB_RX_DIG_LPBK_PD_STATUS_DIG_LPBK_PD_EARLY_IND_SHIFT      1

/* TLB_RX :: dig_lpbk_pd_status :: dig_lpbk_pd_late_ind [00:00] */
#define TLB_RX_DIG_LPBK_PD_STATUS_DIG_LPBK_PD_LATE_IND_MASK        0x0001
#define TLB_RX_DIG_LPBK_PD_STATUS_DIG_LPBK_PD_LATE_IND_ALIGN       0
#define TLB_RX_DIG_LPBK_PD_STATUS_DIG_LPBK_PD_LATE_IND_BITS        1
#define TLB_RX_DIG_LPBK_PD_STATUS_DIG_LPBK_PD_LATE_IND_SHIFT       0


/****************************************************************************
 * TLB_RX :: prbs_chk_lock_status
 ***************************************************************************/
/* TLB_RX :: prbs_chk_lock_status :: reserved0 [15:01] */
#define TLB_RX_PRBS_CHK_LOCK_STATUS_RESERVED0_MASK                 0xfffe
#define TLB_RX_PRBS_CHK_LOCK_STATUS_RESERVED0_ALIGN                0
#define TLB_RX_PRBS_CHK_LOCK_STATUS_RESERVED0_BITS                 15
#define TLB_RX_PRBS_CHK_LOCK_STATUS_RESERVED0_SHIFT                1

/* TLB_RX :: prbs_chk_lock_status :: prbs_chk_lock [00:00] */
#define TLB_RX_PRBS_CHK_LOCK_STATUS_PRBS_CHK_LOCK_MASK             0x0001
#define TLB_RX_PRBS_CHK_LOCK_STATUS_PRBS_CHK_LOCK_ALIGN            0
#define TLB_RX_PRBS_CHK_LOCK_STATUS_PRBS_CHK_LOCK_BITS             1
#define TLB_RX_PRBS_CHK_LOCK_STATUS_PRBS_CHK_LOCK_SHIFT            0


/****************************************************************************
 * TLB_RX :: prbs_chk_err_cnt_msb_status
 ***************************************************************************/
/* TLB_RX :: prbs_chk_err_cnt_msb_status :: prbs_chk_lock_lost_lh [15:15] */
#define TLB_RX_PRBS_CHK_ERR_CNT_MSB_STATUS_PRBS_CHK_LOCK_LOST_LH_MASK 0x8000
#define TLB_RX_PRBS_CHK_ERR_CNT_MSB_STATUS_PRBS_CHK_LOCK_LOST_LH_ALIGN 0
#define TLB_RX_PRBS_CHK_ERR_CNT_MSB_STATUS_PRBS_CHK_LOCK_LOST_LH_BITS 1
#define TLB_RX_PRBS_CHK_ERR_CNT_MSB_STATUS_PRBS_CHK_LOCK_LOST_LH_SHIFT 15

/* TLB_RX :: prbs_chk_err_cnt_msb_status :: prbs_chk_err_cnt_msb [14:00] */
#define TLB_RX_PRBS_CHK_ERR_CNT_MSB_STATUS_PRBS_CHK_ERR_CNT_MSB_MASK 0x7fff
#define TLB_RX_PRBS_CHK_ERR_CNT_MSB_STATUS_PRBS_CHK_ERR_CNT_MSB_ALIGN 0
#define TLB_RX_PRBS_CHK_ERR_CNT_MSB_STATUS_PRBS_CHK_ERR_CNT_MSB_BITS 15
#define TLB_RX_PRBS_CHK_ERR_CNT_MSB_STATUS_PRBS_CHK_ERR_CNT_MSB_SHIFT 0


/****************************************************************************
 * TLB_RX :: prbs_chk_err_cnt_lsb_status
 ***************************************************************************/
/* TLB_RX :: prbs_chk_err_cnt_lsb_status :: prbs_chk_err_cnt_lsb [15:00] */
#define TLB_RX_PRBS_CHK_ERR_CNT_LSB_STATUS_PRBS_CHK_ERR_CNT_LSB_MASK 0xffff
#define TLB_RX_PRBS_CHK_ERR_CNT_LSB_STATUS_PRBS_CHK_ERR_CNT_LSB_ALIGN 0
#define TLB_RX_PRBS_CHK_ERR_CNT_LSB_STATUS_PRBS_CHK_ERR_CNT_LSB_BITS 16
#define TLB_RX_PRBS_CHK_ERR_CNT_LSB_STATUS_PRBS_CHK_ERR_CNT_LSB_SHIFT 0


/****************************************************************************
 * TLB_RX :: pmd_rx_lock_status
 ***************************************************************************/
/* TLB_RX :: pmd_rx_lock_status :: reserved0 [15:02] */
#define TLB_RX_PMD_RX_LOCK_STATUS_RESERVED0_MASK                   0xfffc
#define TLB_RX_PMD_RX_LOCK_STATUS_RESERVED0_ALIGN                  0
#define TLB_RX_PMD_RX_LOCK_STATUS_RESERVED0_BITS                   14
#define TLB_RX_PMD_RX_LOCK_STATUS_RESERVED0_SHIFT                  2

/* TLB_RX :: pmd_rx_lock_status :: pmd_rx_lock_change [01:01] */
#define TLB_RX_PMD_RX_LOCK_STATUS_PMD_RX_LOCK_CHANGE_MASK          0x0002
#define TLB_RX_PMD_RX_LOCK_STATUS_PMD_RX_LOCK_CHANGE_ALIGN         0
#define TLB_RX_PMD_RX_LOCK_STATUS_PMD_RX_LOCK_CHANGE_BITS          1
#define TLB_RX_PMD_RX_LOCK_STATUS_PMD_RX_LOCK_CHANGE_SHIFT         1

/* TLB_RX :: pmd_rx_lock_status :: pmd_rx_lock [00:00] */
#define TLB_RX_PMD_RX_LOCK_STATUS_PMD_RX_LOCK_MASK                 0x0001
#define TLB_RX_PMD_RX_LOCK_STATUS_PMD_RX_LOCK_ALIGN                0
#define TLB_RX_PMD_RX_LOCK_STATUS_PMD_RX_LOCK_BITS                 1
#define TLB_RX_PMD_RX_LOCK_STATUS_PMD_RX_LOCK_SHIFT                0


/****************************************************************************
 * merlin_gallardo_tlb_blk_TLB_TX
 ***************************************************************************/
/****************************************************************************
 * TLB_TX :: patt_gen_config
 ***************************************************************************/
/* TLB_TX :: patt_gen_config :: reserved0 [15:04] */
#define TLB_TX_PATT_GEN_CONFIG_RESERVED0_MASK                      0xfff0
#define TLB_TX_PATT_GEN_CONFIG_RESERVED0_ALIGN                     0
#define TLB_TX_PATT_GEN_CONFIG_RESERVED0_BITS                      12
#define TLB_TX_PATT_GEN_CONFIG_RESERVED0_SHIFT                     4

/* TLB_TX :: patt_gen_config :: patt_gen_mode_sel [03:01] */
#define TLB_TX_PATT_GEN_CONFIG_PATT_GEN_MODE_SEL_MASK              0x000e
#define TLB_TX_PATT_GEN_CONFIG_PATT_GEN_MODE_SEL_ALIGN             0
#define TLB_TX_PATT_GEN_CONFIG_PATT_GEN_MODE_SEL_BITS              3
#define TLB_TX_PATT_GEN_CONFIG_PATT_GEN_MODE_SEL_SHIFT             1

/* TLB_TX :: patt_gen_config :: patt_gen_en [00:00] */
#define TLB_TX_PATT_GEN_CONFIG_PATT_GEN_EN_MASK                    0x0001
#define TLB_TX_PATT_GEN_CONFIG_PATT_GEN_EN_ALIGN                   0
#define TLB_TX_PATT_GEN_CONFIG_PATT_GEN_EN_BITS                    1
#define TLB_TX_PATT_GEN_CONFIG_PATT_GEN_EN_SHIFT                   0


/****************************************************************************
 * TLB_TX :: prbs_gen_config
 ***************************************************************************/
/* TLB_TX :: prbs_gen_config :: reserved0 [15:06] */
#define TLB_TX_PRBS_GEN_CONFIG_RESERVED0_MASK                      0xffc0
#define TLB_TX_PRBS_GEN_CONFIG_RESERVED0_ALIGN                     0
#define TLB_TX_PRBS_GEN_CONFIG_RESERVED0_BITS                      10
#define TLB_TX_PRBS_GEN_CONFIG_RESERVED0_SHIFT                     6

/* TLB_TX :: prbs_gen_config :: prbs_gen_err_ins [05:05] */
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_ERR_INS_MASK               0x0020
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_ERR_INS_ALIGN              0
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_ERR_INS_BITS               1
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_ERR_INS_SHIFT              5

/* TLB_TX :: prbs_gen_config :: prbs_gen_inv [04:04] */
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_INV_MASK                   0x0010
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_INV_ALIGN                  0
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_INV_BITS                   1
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_INV_SHIFT                  4

/* TLB_TX :: prbs_gen_config :: prbs_gen_mode_sel [03:01] */
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_MODE_SEL_MASK              0x000e
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_MODE_SEL_ALIGN             0
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_MODE_SEL_BITS              3
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_MODE_SEL_SHIFT             1

/* TLB_TX :: prbs_gen_config :: prbs_gen_en [00:00] */
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_EN_MASK                    0x0001
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_EN_ALIGN                   0
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_EN_BITS                    1
#define TLB_TX_PRBS_GEN_CONFIG_PRBS_GEN_EN_SHIFT                   0


/****************************************************************************
 * TLB_TX :: rmt_lpbk_config
 ***************************************************************************/
/* TLB_TX :: rmt_lpbk_config :: reserved0 [15:02] */
#define TLB_TX_RMT_LPBK_CONFIG_RESERVED0_MASK                      0xfffc
#define TLB_TX_RMT_LPBK_CONFIG_RESERVED0_ALIGN                     0
#define TLB_TX_RMT_LPBK_CONFIG_RESERVED0_BITS                      14
#define TLB_TX_RMT_LPBK_CONFIG_RESERVED0_SHIFT                     2

/* TLB_TX :: rmt_lpbk_config :: rmt_lpbk_pd_mode [01:01] */
#define TLB_TX_RMT_LPBK_CONFIG_RMT_LPBK_PD_MODE_MASK               0x0002
#define TLB_TX_RMT_LPBK_CONFIG_RMT_LPBK_PD_MODE_ALIGN              0
#define TLB_TX_RMT_LPBK_CONFIG_RMT_LPBK_PD_MODE_BITS               1
#define TLB_TX_RMT_LPBK_CONFIG_RMT_LPBK_PD_MODE_SHIFT              1

/* TLB_TX :: rmt_lpbk_config :: rmt_lpbk_en [00:00] */
#define TLB_TX_RMT_LPBK_CONFIG_RMT_LPBK_EN_MASK                    0x0001
#define TLB_TX_RMT_LPBK_CONFIG_RMT_LPBK_EN_ALIGN                   0
#define TLB_TX_RMT_LPBK_CONFIG_RMT_LPBK_EN_BITS                    1
#define TLB_TX_RMT_LPBK_CONFIG_RMT_LPBK_EN_SHIFT                   0


/****************************************************************************
 * TLB_TX :: tlb_tx_misc_config
 ***************************************************************************/
/* TLB_TX :: tlb_tx_misc_config :: reserved0 [15:03] */
#define TLB_TX_TLB_TX_MISC_CONFIG_RESERVED0_MASK                   0xfff8
#define TLB_TX_TLB_TX_MISC_CONFIG_RESERVED0_ALIGN                  0
#define TLB_TX_TLB_TX_MISC_CONFIG_RESERVED0_BITS                   13
#define TLB_TX_TLB_TX_MISC_CONFIG_RESERVED0_SHIFT                  3

/* TLB_TX :: tlb_tx_misc_config :: tx_mux_sel_order [02:02] */
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_MUX_SEL_ORDER_MASK            0x0004
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_MUX_SEL_ORDER_ALIGN           0
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_MUX_SEL_ORDER_BITS            1
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_MUX_SEL_ORDER_SHIFT           2

/* TLB_TX :: tlb_tx_misc_config :: tx_pcs_native_ana_frmt_en [01:01] */
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_PCS_NATIVE_ANA_FRMT_EN_MASK   0x0002
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_PCS_NATIVE_ANA_FRMT_EN_ALIGN  0
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_PCS_NATIVE_ANA_FRMT_EN_BITS   1
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_PCS_NATIVE_ANA_FRMT_EN_SHIFT  1

/* TLB_TX :: tlb_tx_misc_config :: tx_pmd_dp_invert [00:00] */
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_PMD_DP_INVERT_MASK            0x0001
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_PMD_DP_INVERT_ALIGN           0
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_PMD_DP_INVERT_BITS            1
#define TLB_TX_TLB_TX_MISC_CONFIG_TX_PMD_DP_INVERT_SHIFT           0


/****************************************************************************
 * TLB_TX :: rmt_lpbk_pd_status
 ***************************************************************************/
/* TLB_TX :: rmt_lpbk_pd_status :: reserved0 [15:02] */
#define TLB_TX_RMT_LPBK_PD_STATUS_RESERVED0_MASK                   0xfffc
#define TLB_TX_RMT_LPBK_PD_STATUS_RESERVED0_ALIGN                  0
#define TLB_TX_RMT_LPBK_PD_STATUS_RESERVED0_BITS                   14
#define TLB_TX_RMT_LPBK_PD_STATUS_RESERVED0_SHIFT                  2

/* TLB_TX :: rmt_lpbk_pd_status :: rmt_lpbk_pd_early_ind [01:01] */
#define TLB_TX_RMT_LPBK_PD_STATUS_RMT_LPBK_PD_EARLY_IND_MASK       0x0002
#define TLB_TX_RMT_LPBK_PD_STATUS_RMT_LPBK_PD_EARLY_IND_ALIGN      0
#define TLB_TX_RMT_LPBK_PD_STATUS_RMT_LPBK_PD_EARLY_IND_BITS       1
#define TLB_TX_RMT_LPBK_PD_STATUS_RMT_LPBK_PD_EARLY_IND_SHIFT      1

/* TLB_TX :: rmt_lpbk_pd_status :: rmt_lpbk_pd_late_ind [00:00] */
#define TLB_TX_RMT_LPBK_PD_STATUS_RMT_LPBK_PD_LATE_IND_MASK        0x0001
#define TLB_TX_RMT_LPBK_PD_STATUS_RMT_LPBK_PD_LATE_IND_ALIGN       0
#define TLB_TX_RMT_LPBK_PD_STATUS_RMT_LPBK_PD_LATE_IND_BITS        1
#define TLB_TX_RMT_LPBK_PD_STATUS_RMT_LPBK_PD_LATE_IND_SHIFT       0


/****************************************************************************
 * merlin_gallardo_digcom_blk_DIGCOM
 ***************************************************************************/
/****************************************************************************
 * DIGCOM :: REVID0
 ***************************************************************************/
/* DIGCOM :: REVID0 :: rev_letter [15:14] */
#define DIGCOM_REVID0_REV_LETTER_MASK                              0xc000
#define DIGCOM_REVID0_REV_LETTER_ALIGN                             0
#define DIGCOM_REVID0_REV_LETTER_BITS                              2
#define DIGCOM_REVID0_REV_LETTER_SHIFT                             14

/* DIGCOM :: REVID0 :: rev_number [13:11] */
#define DIGCOM_REVID0_REV_NUMBER_MASK                              0x3800
#define DIGCOM_REVID0_REV_NUMBER_ALIGN                             0
#define DIGCOM_REVID0_REV_NUMBER_BITS                              3
#define DIGCOM_REVID0_REV_NUMBER_SHIFT                             11

/* DIGCOM :: REVID0 :: bonding [10:09] */
#define DIGCOM_REVID0_BONDING_MASK                                 0x0600
#define DIGCOM_REVID0_BONDING_ALIGN                                0
#define DIGCOM_REVID0_BONDING_BITS                                 2
#define DIGCOM_REVID0_BONDING_SHIFT                                9

/* DIGCOM :: REVID0 :: process [08:06] */
#define DIGCOM_REVID0_PROCESS_MASK                                 0x01c0
#define DIGCOM_REVID0_PROCESS_ALIGN                                0
#define DIGCOM_REVID0_PROCESS_BITS                                 3
#define DIGCOM_REVID0_PROCESS_SHIFT                                6

/* DIGCOM :: REVID0 :: model [05:00] */
#define DIGCOM_REVID0_MODEL_MASK                                   0x003f
#define DIGCOM_REVID0_MODEL_ALIGN                                  0
#define DIGCOM_REVID0_MODEL_BITS                                   6
#define DIGCOM_REVID0_MODEL_SHIFT                                  0


/****************************************************************************
 * DIGCOM :: RESET_CONTROL_PMD
 ***************************************************************************/
/* DIGCOM :: RESET_CONTROL_PMD :: reserved0 [15:01] */
#define DIGCOM_RESET_CONTROL_PMD_RESERVED0_MASK                    0xfffe
#define DIGCOM_RESET_CONTROL_PMD_RESERVED0_ALIGN                   0
#define DIGCOM_RESET_CONTROL_PMD_RESERVED0_BITS                    15
#define DIGCOM_RESET_CONTROL_PMD_RESERVED0_SHIFT                   1

/* DIGCOM :: RESET_CONTROL_PMD :: pmd_s_rstb [00:00] */
#define DIGCOM_RESET_CONTROL_PMD_PMD_S_RSTB_MASK                   0x0001
#define DIGCOM_RESET_CONTROL_PMD_PMD_S_RSTB_ALIGN                  0
#define DIGCOM_RESET_CONTROL_PMD_PMD_S_RSTB_BITS                   1
#define DIGCOM_RESET_CONTROL_PMD_PMD_S_RSTB_SHIFT                  0


/****************************************************************************
 * DIGCOM :: RESET_CONTROL_CORE_DP
 ***************************************************************************/
/* DIGCOM :: RESET_CONTROL_CORE_DP :: reserved0 [15:07] */
#define DIGCOM_RESET_CONTROL_CORE_DP_RESERVED0_MASK                0xff80
#define DIGCOM_RESET_CONTROL_CORE_DP_RESERVED0_ALIGN               0
#define DIGCOM_RESET_CONTROL_CORE_DP_RESERVED0_BITS                9
#define DIGCOM_RESET_CONTROL_CORE_DP_RESERVED0_SHIFT               7

/* DIGCOM :: RESET_CONTROL_CORE_DP :: uc_active [06:06] */
#define DIGCOM_RESET_CONTROL_CORE_DP_UC_ACTIVE_MASK                0x0040
#define DIGCOM_RESET_CONTROL_CORE_DP_UC_ACTIVE_ALIGN               0
#define DIGCOM_RESET_CONTROL_CORE_DP_UC_ACTIVE_BITS                1
#define DIGCOM_RESET_CONTROL_CORE_DP_UC_ACTIVE_SHIFT               6

/* DIGCOM :: RESET_CONTROL_CORE_DP :: pmd_mdio_trans_pkill [05:05] */
#define DIGCOM_RESET_CONTROL_CORE_DP_PMD_MDIO_TRANS_PKILL_MASK     0x0020
#define DIGCOM_RESET_CONTROL_CORE_DP_PMD_MDIO_TRANS_PKILL_ALIGN    0
#define DIGCOM_RESET_CONTROL_CORE_DP_PMD_MDIO_TRANS_PKILL_BITS     1
#define DIGCOM_RESET_CONTROL_CORE_DP_PMD_MDIO_TRANS_PKILL_SHIFT    5

/* DIGCOM :: RESET_CONTROL_CORE_DP :: sup_rst_seq_frc [04:04] */
#define DIGCOM_RESET_CONTROL_CORE_DP_SUP_RST_SEQ_FRC_MASK          0x0010
#define DIGCOM_RESET_CONTROL_CORE_DP_SUP_RST_SEQ_FRC_ALIGN         0
#define DIGCOM_RESET_CONTROL_CORE_DP_SUP_RST_SEQ_FRC_BITS          1
#define DIGCOM_RESET_CONTROL_CORE_DP_SUP_RST_SEQ_FRC_SHIFT         4

/* DIGCOM :: RESET_CONTROL_CORE_DP :: sup_rst_seq [03:03] */
#define DIGCOM_RESET_CONTROL_CORE_DP_SUP_RST_SEQ_MASK              0x0008
#define DIGCOM_RESET_CONTROL_CORE_DP_SUP_RST_SEQ_ALIGN             0
#define DIGCOM_RESET_CONTROL_CORE_DP_SUP_RST_SEQ_BITS              1
#define DIGCOM_RESET_CONTROL_CORE_DP_SUP_RST_SEQ_SHIFT             3

/* DIGCOM :: RESET_CONTROL_CORE_DP :: afe_s_pll_pwrdn [02:02] */
#define DIGCOM_RESET_CONTROL_CORE_DP_AFE_S_PLL_PWRDN_MASK          0x0004
#define DIGCOM_RESET_CONTROL_CORE_DP_AFE_S_PLL_PWRDN_ALIGN         0
#define DIGCOM_RESET_CONTROL_CORE_DP_AFE_S_PLL_PWRDN_BITS          1
#define DIGCOM_RESET_CONTROL_CORE_DP_AFE_S_PLL_PWRDN_SHIFT         2

/* DIGCOM :: RESET_CONTROL_CORE_DP :: pmd_core_dp_h_rstb_pkill [01:01] */
#define DIGCOM_RESET_CONTROL_CORE_DP_PMD_CORE_DP_H_RSTB_PKILL_MASK 0x0002
#define DIGCOM_RESET_CONTROL_CORE_DP_PMD_CORE_DP_H_RSTB_PKILL_ALIGN 0
#define DIGCOM_RESET_CONTROL_CORE_DP_PMD_CORE_DP_H_RSTB_PKILL_BITS 1
#define DIGCOM_RESET_CONTROL_CORE_DP_PMD_CORE_DP_H_RSTB_PKILL_SHIFT 1

/* DIGCOM :: RESET_CONTROL_CORE_DP :: core_dp_s_rstb [00:00] */
#define DIGCOM_RESET_CONTROL_CORE_DP_CORE_DP_S_RSTB_MASK           0x0001
#define DIGCOM_RESET_CONTROL_CORE_DP_CORE_DP_S_RSTB_ALIGN          0
#define DIGCOM_RESET_CONTROL_CORE_DP_CORE_DP_S_RSTB_BITS           1
#define DIGCOM_RESET_CONTROL_CORE_DP_CORE_DP_S_RSTB_SHIFT          0


/****************************************************************************
 * DIGCOM :: LANE_MASK
 ***************************************************************************/
/* DIGCOM :: LANE_MASK :: reserved0 [15:04] */
#define DIGCOM_LANE_MASK_RESERVED0_MASK                            0xfff0
#define DIGCOM_LANE_MASK_RESERVED0_ALIGN                           0
#define DIGCOM_LANE_MASK_RESERVED0_BITS                            12
#define DIGCOM_LANE_MASK_RESERVED0_SHIFT                           4

/* DIGCOM :: LANE_MASK :: lane_mask [03:00] */
#define DIGCOM_LANE_MASK_LANE_MASK_MASK                            0x000f
#define DIGCOM_LANE_MASK_LANE_MASK_ALIGN                           0
#define DIGCOM_LANE_MASK_LANE_MASK_BITS                            4
#define DIGCOM_LANE_MASK_LANE_MASK_SHIFT                           0


/****************************************************************************
 * DIGCOM :: HEARTBEAT_TIMER_CONTROL
 ***************************************************************************/
/* DIGCOM :: HEARTBEAT_TIMER_CONTROL :: reserved0 [15:10] */
#define DIGCOM_HEARTBEAT_TIMER_CONTROL_RESERVED0_MASK              0xfc00
#define DIGCOM_HEARTBEAT_TIMER_CONTROL_RESERVED0_ALIGN             0
#define DIGCOM_HEARTBEAT_TIMER_CONTROL_RESERVED0_BITS              6
#define DIGCOM_HEARTBEAT_TIMER_CONTROL_RESERVED0_SHIFT             10

/* DIGCOM :: HEARTBEAT_TIMER_CONTROL :: heartbeat_count_1us [09:00] */
#define DIGCOM_HEARTBEAT_TIMER_CONTROL_HEARTBEAT_COUNT_1US_MASK    0x03ff
#define DIGCOM_HEARTBEAT_TIMER_CONTROL_HEARTBEAT_COUNT_1US_ALIGN   0
#define DIGCOM_HEARTBEAT_TIMER_CONTROL_HEARTBEAT_COUNT_1US_BITS    10
#define DIGCOM_HEARTBEAT_TIMER_CONTROL_HEARTBEAT_COUNT_1US_SHIFT   0


/****************************************************************************
 * DIGCOM :: UC_ACK_CORE_CONTROL
 ***************************************************************************/
/* DIGCOM :: UC_ACK_CORE_CONTROL :: reserved0 [15:02] */
#define DIGCOM_UC_ACK_CORE_CONTROL_RESERVED0_MASK                  0xfffc
#define DIGCOM_UC_ACK_CORE_CONTROL_RESERVED0_ALIGN                 0
#define DIGCOM_UC_ACK_CORE_CONTROL_RESERVED0_BITS                  14
#define DIGCOM_UC_ACK_CORE_CONTROL_RESERVED0_SHIFT                 2

/* DIGCOM :: UC_ACK_CORE_CONTROL :: uc_ack_core_dp_reset [01:01] */
#define DIGCOM_UC_ACK_CORE_CONTROL_UC_ACK_CORE_DP_RESET_MASK       0x0002
#define DIGCOM_UC_ACK_CORE_CONTROL_UC_ACK_CORE_DP_RESET_ALIGN      0
#define DIGCOM_UC_ACK_CORE_CONTROL_UC_ACK_CORE_DP_RESET_BITS       1
#define DIGCOM_UC_ACK_CORE_CONTROL_UC_ACK_CORE_DP_RESET_SHIFT      1

/* DIGCOM :: UC_ACK_CORE_CONTROL :: uc_ack_core_cfg_done [00:00] */
#define DIGCOM_UC_ACK_CORE_CONTROL_UC_ACK_CORE_CFG_DONE_MASK       0x0001
#define DIGCOM_UC_ACK_CORE_CONTROL_UC_ACK_CORE_CFG_DONE_ALIGN      0
#define DIGCOM_UC_ACK_CORE_CONTROL_UC_ACK_CORE_CFG_DONE_BITS       1
#define DIGCOM_UC_ACK_CORE_CONTROL_UC_ACK_CORE_CFG_DONE_SHIFT      0


/****************************************************************************
 * DIGCOM :: CORE_REG_RESET_OCCURRED_CONTROL
 ***************************************************************************/
/* DIGCOM :: CORE_REG_RESET_OCCURRED_CONTROL :: reserved0 [15:01] */
#define DIGCOM_CORE_REG_RESET_OCCURRED_CONTROL_RESERVED0_MASK      0xfffe
#define DIGCOM_CORE_REG_RESET_OCCURRED_CONTROL_RESERVED0_ALIGN     0
#define DIGCOM_CORE_REG_RESET_OCCURRED_CONTROL_RESERVED0_BITS      15
#define DIGCOM_CORE_REG_RESET_OCCURRED_CONTROL_RESERVED0_SHIFT     1

/* DIGCOM :: CORE_REG_RESET_OCCURRED_CONTROL :: core_reg_reset_occurred [00:00] */
#define DIGCOM_CORE_REG_RESET_OCCURRED_CONTROL_CORE_REG_RESET_OCCURRED_MASK 0x0001
#define DIGCOM_CORE_REG_RESET_OCCURRED_CONTROL_CORE_REG_RESET_OCCURRED_ALIGN 0
#define DIGCOM_CORE_REG_RESET_OCCURRED_CONTROL_CORE_REG_RESET_OCCURRED_BITS 1
#define DIGCOM_CORE_REG_RESET_OCCURRED_CONTROL_CORE_REG_RESET_OCCURRED_SHIFT 0


/****************************************************************************
 * DIGCOM :: RST_SEQ_TIMER_CONTROL
 ***************************************************************************/
/* DIGCOM :: RST_SEQ_TIMER_CONTROL :: reserved0 [15:09] */
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RESERVED0_MASK                0xfe00
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RESERVED0_ALIGN               0
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RESERVED0_BITS                7
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RESERVED0_SHIFT               9

/* DIGCOM :: RST_SEQ_TIMER_CONTROL :: rst_seq_timer_en_clkgate [08:08] */
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RST_SEQ_TIMER_EN_CLKGATE_MASK 0x0100
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RST_SEQ_TIMER_EN_CLKGATE_ALIGN 0
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RST_SEQ_TIMER_EN_CLKGATE_BITS 1
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RST_SEQ_TIMER_EN_CLKGATE_SHIFT 8

/* DIGCOM :: RST_SEQ_TIMER_CONTROL :: reserved1 [07:04] */
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RESERVED1_MASK                0x00f0
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RESERVED1_ALIGN               0
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RESERVED1_BITS                4
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RESERVED1_SHIFT               4

/* DIGCOM :: RST_SEQ_TIMER_CONTROL :: rst_seq_timer [03:00] */
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RST_SEQ_TIMER_MASK            0x000f
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RST_SEQ_TIMER_ALIGN           0
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RST_SEQ_TIMER_BITS            4
#define DIGCOM_RST_SEQ_TIMER_CONTROL_RST_SEQ_TIMER_SHIFT           0


/****************************************************************************
 * DIGCOM :: CORE_DP_RESET_STATE_STATUS
 ***************************************************************************/
/* DIGCOM :: CORE_DP_RESET_STATE_STATUS :: reserved0 [15:15] */
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED0_MASK           0x8000
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED0_ALIGN          0
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED0_BITS           1
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED0_SHIFT          15

/* DIGCOM :: CORE_DP_RESET_STATE_STATUS :: lane_reset_released [14:14] */
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_LANE_RESET_RELEASED_MASK 0x4000
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_LANE_RESET_RELEASED_ALIGN 0
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_LANE_RESET_RELEASED_BITS 1
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_LANE_RESET_RELEASED_SHIFT 14

/* DIGCOM :: CORE_DP_RESET_STATE_STATUS :: reserved1 [13:13] */
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED1_MASK           0x2000
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED1_ALIGN          0
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED1_BITS           1
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED1_SHIFT          13

/* DIGCOM :: CORE_DP_RESET_STATE_STATUS :: lane_reset_released_index [12:08] */
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_LANE_RESET_RELEASED_INDEX_MASK 0x1f00
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_LANE_RESET_RELEASED_INDEX_ALIGN 0
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_LANE_RESET_RELEASED_INDEX_BITS 5
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_LANE_RESET_RELEASED_INDEX_SHIFT 8

/* DIGCOM :: CORE_DP_RESET_STATE_STATUS :: reserved2 [07:03] */
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED2_MASK           0x00f8
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED2_ALIGN          0
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED2_BITS           5
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_RESERVED2_SHIFT          3

/* DIGCOM :: CORE_DP_RESET_STATE_STATUS :: core_dp_reset_state [02:00] */
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_CORE_DP_RESET_STATE_MASK 0x0007
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_CORE_DP_RESET_STATE_ALIGN 0
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_CORE_DP_RESET_STATE_BITS 3
#define DIGCOM_CORE_DP_RESET_STATE_STATUS_CORE_DP_RESET_STATE_SHIFT 0


/****************************************************************************
 * DIGCOM :: PMD_CORE_MODE_STATUS
 ***************************************************************************/
/* DIGCOM :: PMD_CORE_MODE_STATUS :: reserved0 [15:08] */
#define DIGCOM_PMD_CORE_MODE_STATUS_RESERVED0_MASK                 0xff00
#define DIGCOM_PMD_CORE_MODE_STATUS_RESERVED0_ALIGN                0
#define DIGCOM_PMD_CORE_MODE_STATUS_RESERVED0_BITS                 8
#define DIGCOM_PMD_CORE_MODE_STATUS_RESERVED0_SHIFT                8

/* DIGCOM :: PMD_CORE_MODE_STATUS :: pmd_core_mode [07:00] */
#define DIGCOM_PMD_CORE_MODE_STATUS_PMD_CORE_MODE_MASK             0x00ff
#define DIGCOM_PMD_CORE_MODE_STATUS_PMD_CORE_MODE_ALIGN            0
#define DIGCOM_PMD_CORE_MODE_STATUS_PMD_CORE_MODE_BITS             8
#define DIGCOM_PMD_CORE_MODE_STATUS_PMD_CORE_MODE_SHIFT            0


/****************************************************************************
 * DIGCOM :: REVID1
 ***************************************************************************/
/* DIGCOM :: REVID1 :: multiplicity [15:12] */
#define DIGCOM_REVID1_MULTIPLICITY_MASK                            0xf000
#define DIGCOM_REVID1_MULTIPLICITY_ALIGN                           0
#define DIGCOM_REVID1_MULTIPLICITY_BITS                            4
#define DIGCOM_REVID1_MULTIPLICITY_SHIFT                           12

/* DIGCOM :: REVID1 :: reserved0 [11:06] */
#define DIGCOM_REVID1_RESERVED0_MASK                               0x0fc0
#define DIGCOM_REVID1_RESERVED0_ALIGN                              0
#define DIGCOM_REVID1_RESERVED0_BITS                               6
#define DIGCOM_REVID1_RESERVED0_SHIFT                              6

/* DIGCOM :: REVID1 :: mdio [05:05] */
#define DIGCOM_REVID1_MDIO_MASK                                    0x0020
#define DIGCOM_REVID1_MDIO_ALIGN                                   0
#define DIGCOM_REVID1_MDIO_BITS                                    1
#define DIGCOM_REVID1_MDIO_SHIFT                                   5

/* DIGCOM :: REVID1 :: micro [04:04] */
#define DIGCOM_REVID1_MICRO_MASK                                   0x0010
#define DIGCOM_REVID1_MICRO_ALIGN                                  0
#define DIGCOM_REVID1_MICRO_BITS                                   1
#define DIGCOM_REVID1_MICRO_SHIFT                                  4

/* DIGCOM :: REVID1 :: CL72 [03:03] */
#define DIGCOM_REVID1_CL72_MASK                                    0x0008
#define DIGCOM_REVID1_CL72_ALIGN                                   0
#define DIGCOM_REVID1_CL72_BITS                                    1
#define DIGCOM_REVID1_CL72_SHIFT                                   3

/* DIGCOM :: REVID1 :: PIR [02:02] */
#define DIGCOM_REVID1_PIR_MASK                                     0x0004
#define DIGCOM_REVID1_PIR_ALIGN                                    0
#define DIGCOM_REVID1_PIR_BITS                                     1
#define DIGCOM_REVID1_PIR_SHIFT                                    2

/* DIGCOM :: REVID1 :: LLP [01:01] */
#define DIGCOM_REVID1_LLP_MASK                                     0x0002
#define DIGCOM_REVID1_LLP_ALIGN                                    0
#define DIGCOM_REVID1_LLP_BITS                                     1
#define DIGCOM_REVID1_LLP_SHIFT                                    1

/* DIGCOM :: REVID1 :: EEE [00:00] */
#define DIGCOM_REVID1_EEE_MASK                                     0x0001
#define DIGCOM_REVID1_EEE_ALIGN                                    0
#define DIGCOM_REVID1_EEE_BITS                                     1
#define DIGCOM_REVID1_EEE_SHIFT                                    0


/****************************************************************************
 * DIGCOM :: REVID2
 ***************************************************************************/
/* DIGCOM :: REVID2 :: reserved0 [15:04] */
#define DIGCOM_REVID2_RESERVED0_MASK                               0xfff0
#define DIGCOM_REVID2_RESERVED0_ALIGN                              0
#define DIGCOM_REVID2_RESERVED0_BITS                               12
#define DIGCOM_REVID2_RESERVED0_SHIFT                              4

/* DIGCOM :: REVID2 :: revid2 [03:00] */
#define DIGCOM_REVID2_REVID2_MASK                                  0x000f
#define DIGCOM_REVID2_REVID2_ALIGN                                 0
#define DIGCOM_REVID2_REVID2_BITS                                  4
#define DIGCOM_REVID2_REVID2_SHIFT                                 0


/****************************************************************************
 * merlin_gallardo_patt_gen_blk_PATT_GEN
 ***************************************************************************/
/****************************************************************************
 * PATT_GEN :: patt_gen_seq_0
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_0 :: patt_gen_seq_0 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_0_PATT_GEN_SEQ_0_MASK                0xffff
#define PATT_GEN_PATT_GEN_SEQ_0_PATT_GEN_SEQ_0_ALIGN               0
#define PATT_GEN_PATT_GEN_SEQ_0_PATT_GEN_SEQ_0_BITS                16
#define PATT_GEN_PATT_GEN_SEQ_0_PATT_GEN_SEQ_0_SHIFT               0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_1
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_1 :: patt_gen_seq_1 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_1_PATT_GEN_SEQ_1_MASK                0xffff
#define PATT_GEN_PATT_GEN_SEQ_1_PATT_GEN_SEQ_1_ALIGN               0
#define PATT_GEN_PATT_GEN_SEQ_1_PATT_GEN_SEQ_1_BITS                16
#define PATT_GEN_PATT_GEN_SEQ_1_PATT_GEN_SEQ_1_SHIFT               0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_2
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_2 :: patt_gen_seq_2 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_2_PATT_GEN_SEQ_2_MASK                0xffff
#define PATT_GEN_PATT_GEN_SEQ_2_PATT_GEN_SEQ_2_ALIGN               0
#define PATT_GEN_PATT_GEN_SEQ_2_PATT_GEN_SEQ_2_BITS                16
#define PATT_GEN_PATT_GEN_SEQ_2_PATT_GEN_SEQ_2_SHIFT               0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_3
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_3 :: patt_gen_seq_3 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_3_PATT_GEN_SEQ_3_MASK                0xffff
#define PATT_GEN_PATT_GEN_SEQ_3_PATT_GEN_SEQ_3_ALIGN               0
#define PATT_GEN_PATT_GEN_SEQ_3_PATT_GEN_SEQ_3_BITS                16
#define PATT_GEN_PATT_GEN_SEQ_3_PATT_GEN_SEQ_3_SHIFT               0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_4
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_4 :: patt_gen_seq_4 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_4_PATT_GEN_SEQ_4_MASK                0xffff
#define PATT_GEN_PATT_GEN_SEQ_4_PATT_GEN_SEQ_4_ALIGN               0
#define PATT_GEN_PATT_GEN_SEQ_4_PATT_GEN_SEQ_4_BITS                16
#define PATT_GEN_PATT_GEN_SEQ_4_PATT_GEN_SEQ_4_SHIFT               0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_5
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_5 :: patt_gen_seq_5 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_5_PATT_GEN_SEQ_5_MASK                0xffff
#define PATT_GEN_PATT_GEN_SEQ_5_PATT_GEN_SEQ_5_ALIGN               0
#define PATT_GEN_PATT_GEN_SEQ_5_PATT_GEN_SEQ_5_BITS                16
#define PATT_GEN_PATT_GEN_SEQ_5_PATT_GEN_SEQ_5_SHIFT               0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_6
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_6 :: patt_gen_seq_6 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_6_PATT_GEN_SEQ_6_MASK                0xffff
#define PATT_GEN_PATT_GEN_SEQ_6_PATT_GEN_SEQ_6_ALIGN               0
#define PATT_GEN_PATT_GEN_SEQ_6_PATT_GEN_SEQ_6_BITS                16
#define PATT_GEN_PATT_GEN_SEQ_6_PATT_GEN_SEQ_6_SHIFT               0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_7
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_7 :: patt_gen_seq_7 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_7_PATT_GEN_SEQ_7_MASK                0xffff
#define PATT_GEN_PATT_GEN_SEQ_7_PATT_GEN_SEQ_7_ALIGN               0
#define PATT_GEN_PATT_GEN_SEQ_7_PATT_GEN_SEQ_7_BITS                16
#define PATT_GEN_PATT_GEN_SEQ_7_PATT_GEN_SEQ_7_SHIFT               0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_8
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_8 :: patt_gen_seq_8 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_8_PATT_GEN_SEQ_8_MASK                0xffff
#define PATT_GEN_PATT_GEN_SEQ_8_PATT_GEN_SEQ_8_ALIGN               0
#define PATT_GEN_PATT_GEN_SEQ_8_PATT_GEN_SEQ_8_BITS                16
#define PATT_GEN_PATT_GEN_SEQ_8_PATT_GEN_SEQ_8_SHIFT               0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_9
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_9 :: patt_gen_seq_9 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_9_PATT_GEN_SEQ_9_MASK                0xffff
#define PATT_GEN_PATT_GEN_SEQ_9_PATT_GEN_SEQ_9_ALIGN               0
#define PATT_GEN_PATT_GEN_SEQ_9_PATT_GEN_SEQ_9_BITS                16
#define PATT_GEN_PATT_GEN_SEQ_9_PATT_GEN_SEQ_9_SHIFT               0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_10
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_10 :: patt_gen_seq_10 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_10_PATT_GEN_SEQ_10_MASK              0xffff
#define PATT_GEN_PATT_GEN_SEQ_10_PATT_GEN_SEQ_10_ALIGN             0
#define PATT_GEN_PATT_GEN_SEQ_10_PATT_GEN_SEQ_10_BITS              16
#define PATT_GEN_PATT_GEN_SEQ_10_PATT_GEN_SEQ_10_SHIFT             0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_11
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_11 :: patt_gen_seq_11 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_11_PATT_GEN_SEQ_11_MASK              0xffff
#define PATT_GEN_PATT_GEN_SEQ_11_PATT_GEN_SEQ_11_ALIGN             0
#define PATT_GEN_PATT_GEN_SEQ_11_PATT_GEN_SEQ_11_BITS              16
#define PATT_GEN_PATT_GEN_SEQ_11_PATT_GEN_SEQ_11_SHIFT             0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_12
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_12 :: patt_gen_seq_12 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_12_PATT_GEN_SEQ_12_MASK              0xffff
#define PATT_GEN_PATT_GEN_SEQ_12_PATT_GEN_SEQ_12_ALIGN             0
#define PATT_GEN_PATT_GEN_SEQ_12_PATT_GEN_SEQ_12_BITS              16
#define PATT_GEN_PATT_GEN_SEQ_12_PATT_GEN_SEQ_12_SHIFT             0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_13
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_13 :: patt_gen_seq_13 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_13_PATT_GEN_SEQ_13_MASK              0xffff
#define PATT_GEN_PATT_GEN_SEQ_13_PATT_GEN_SEQ_13_ALIGN             0
#define PATT_GEN_PATT_GEN_SEQ_13_PATT_GEN_SEQ_13_BITS              16
#define PATT_GEN_PATT_GEN_SEQ_13_PATT_GEN_SEQ_13_SHIFT             0


/****************************************************************************
 * PATT_GEN :: patt_gen_seq_14
 ***************************************************************************/
/* PATT_GEN :: patt_gen_seq_14 :: patt_gen_seq_14 [15:00] */
#define PATT_GEN_PATT_GEN_SEQ_14_PATT_GEN_SEQ_14_MASK              0xffff
#define PATT_GEN_PATT_GEN_SEQ_14_PATT_GEN_SEQ_14_ALIGN             0
#define PATT_GEN_PATT_GEN_SEQ_14_PATT_GEN_SEQ_14_BITS              16
#define PATT_GEN_PATT_GEN_SEQ_14_PATT_GEN_SEQ_14_SHIFT             0


/****************************************************************************
 * merlin_gallardo_tx_fed_blk_TX_FED
 ***************************************************************************/
/****************************************************************************
 * TX_FED :: txfir_control1
 ***************************************************************************/
/* TX_FED :: txfir_control1 :: reserved0 [15:10] */
#define TX_FED_TXFIR_CONTROL1_RESERVED0_MASK                       0xfc00
#define TX_FED_TXFIR_CONTROL1_RESERVED0_ALIGN                      0
#define TX_FED_TXFIR_CONTROL1_RESERVED0_BITS                       6
#define TX_FED_TXFIR_CONTROL1_RESERVED0_SHIFT                      10

/* TX_FED :: txfir_control1 :: txfir_post_override [09:05] */
#define TX_FED_TXFIR_CONTROL1_TXFIR_POST_OVERRIDE_MASK             0x03e0
#define TX_FED_TXFIR_CONTROL1_TXFIR_POST_OVERRIDE_ALIGN            0
#define TX_FED_TXFIR_CONTROL1_TXFIR_POST_OVERRIDE_BITS             5
#define TX_FED_TXFIR_CONTROL1_TXFIR_POST_OVERRIDE_SHIFT            5

/* TX_FED :: txfir_control1 :: reserved1 [04:04] */
#define TX_FED_TXFIR_CONTROL1_RESERVED1_MASK                       0x0010
#define TX_FED_TXFIR_CONTROL1_RESERVED1_ALIGN                      0
#define TX_FED_TXFIR_CONTROL1_RESERVED1_BITS                       1
#define TX_FED_TXFIR_CONTROL1_RESERVED1_SHIFT                      4

/* TX_FED :: txfir_control1 :: txfir_pre_override [03:00] */
#define TX_FED_TXFIR_CONTROL1_TXFIR_PRE_OVERRIDE_MASK              0x000f
#define TX_FED_TXFIR_CONTROL1_TXFIR_PRE_OVERRIDE_ALIGN             0
#define TX_FED_TXFIR_CONTROL1_TXFIR_PRE_OVERRIDE_BITS              4
#define TX_FED_TXFIR_CONTROL1_TXFIR_PRE_OVERRIDE_SHIFT             0


/****************************************************************************
 * TX_FED :: txfir_control2
 ***************************************************************************/
/* TX_FED :: txfir_control2 :: txfir_override_en [15:15] */
#define TX_FED_TXFIR_CONTROL2_TXFIR_OVERRIDE_EN_MASK               0x8000
#define TX_FED_TXFIR_CONTROL2_TXFIR_OVERRIDE_EN_ALIGN              0
#define TX_FED_TXFIR_CONTROL2_TXFIR_OVERRIDE_EN_BITS               1
#define TX_FED_TXFIR_CONTROL2_TXFIR_OVERRIDE_EN_SHIFT              15

/* TX_FED :: txfir_control2 :: reserved0 [14:11] */
#define TX_FED_TXFIR_CONTROL2_RESERVED0_MASK                       0x7800
#define TX_FED_TXFIR_CONTROL2_RESERVED0_ALIGN                      0
#define TX_FED_TXFIR_CONTROL2_RESERVED0_BITS                       4
#define TX_FED_TXFIR_CONTROL2_RESERVED0_SHIFT                      11

/* TX_FED :: txfir_control2 :: txfir_post2 [10:07] */
#define TX_FED_TXFIR_CONTROL2_TXFIR_POST2_MASK                     0x0780
#define TX_FED_TXFIR_CONTROL2_TXFIR_POST2_ALIGN                    0
#define TX_FED_TXFIR_CONTROL2_TXFIR_POST2_BITS                     4
#define TX_FED_TXFIR_CONTROL2_TXFIR_POST2_SHIFT                    7

/* TX_FED :: txfir_control2 :: reserved1 [06:06] */
#define TX_FED_TXFIR_CONTROL2_RESERVED1_MASK                       0x0040
#define TX_FED_TXFIR_CONTROL2_RESERVED1_ALIGN                      0
#define TX_FED_TXFIR_CONTROL2_RESERVED1_BITS                       1
#define TX_FED_TXFIR_CONTROL2_RESERVED1_SHIFT                      6

/* TX_FED :: txfir_control2 :: txfir_main_override [05:00] */
#define TX_FED_TXFIR_CONTROL2_TXFIR_MAIN_OVERRIDE_MASK             0x003f
#define TX_FED_TXFIR_CONTROL2_TXFIR_MAIN_OVERRIDE_ALIGN            0
#define TX_FED_TXFIR_CONTROL2_TXFIR_MAIN_OVERRIDE_BITS             6
#define TX_FED_TXFIR_CONTROL2_TXFIR_MAIN_OVERRIDE_SHIFT            0


/****************************************************************************
 * TX_FED :: txfir_control3
 ***************************************************************************/
/* TX_FED :: txfir_control3 :: txfir_post2_offset [15:12] */
#define TX_FED_TXFIR_CONTROL3_TXFIR_POST2_OFFSET_MASK              0xf000
#define TX_FED_TXFIR_CONTROL3_TXFIR_POST2_OFFSET_ALIGN             0
#define TX_FED_TXFIR_CONTROL3_TXFIR_POST2_OFFSET_BITS              4
#define TX_FED_TXFIR_CONTROL3_TXFIR_POST2_OFFSET_SHIFT             12

/* TX_FED :: txfir_control3 :: txfir_post_offset [11:08] */
#define TX_FED_TXFIR_CONTROL3_TXFIR_POST_OFFSET_MASK               0x0f00
#define TX_FED_TXFIR_CONTROL3_TXFIR_POST_OFFSET_ALIGN              0
#define TX_FED_TXFIR_CONTROL3_TXFIR_POST_OFFSET_BITS               4
#define TX_FED_TXFIR_CONTROL3_TXFIR_POST_OFFSET_SHIFT              8

/* TX_FED :: txfir_control3 :: txfir_main_offset [07:04] */
#define TX_FED_TXFIR_CONTROL3_TXFIR_MAIN_OFFSET_MASK               0x00f0
#define TX_FED_TXFIR_CONTROL3_TXFIR_MAIN_OFFSET_ALIGN              0
#define TX_FED_TXFIR_CONTROL3_TXFIR_MAIN_OFFSET_BITS               4
#define TX_FED_TXFIR_CONTROL3_TXFIR_MAIN_OFFSET_SHIFT              4

/* TX_FED :: txfir_control3 :: txfir_pre_offset [03:00] */
#define TX_FED_TXFIR_CONTROL3_TXFIR_PRE_OFFSET_MASK                0x000f
#define TX_FED_TXFIR_CONTROL3_TXFIR_PRE_OFFSET_ALIGN               0
#define TX_FED_TXFIR_CONTROL3_TXFIR_PRE_OFFSET_BITS                4
#define TX_FED_TXFIR_CONTROL3_TXFIR_PRE_OFFSET_SHIFT               0


/****************************************************************************
 * TX_FED :: txfir_status1
 ***************************************************************************/
/* TX_FED :: txfir_status1 :: reserved0 [15:10] */
#define TX_FED_TXFIR_STATUS1_RESERVED0_MASK                        0xfc00
#define TX_FED_TXFIR_STATUS1_RESERVED0_ALIGN                       0
#define TX_FED_TXFIR_STATUS1_RESERVED0_BITS                        6
#define TX_FED_TXFIR_STATUS1_RESERVED0_SHIFT                       10

/* TX_FED :: txfir_status1 :: txfir_post_after_ovr [09:05] */
#define TX_FED_TXFIR_STATUS1_TXFIR_POST_AFTER_OVR_MASK             0x03e0
#define TX_FED_TXFIR_STATUS1_TXFIR_POST_AFTER_OVR_ALIGN            0
#define TX_FED_TXFIR_STATUS1_TXFIR_POST_AFTER_OVR_BITS             5
#define TX_FED_TXFIR_STATUS1_TXFIR_POST_AFTER_OVR_SHIFT            5

/* TX_FED :: txfir_status1 :: reserved1 [04:04] */
#define TX_FED_TXFIR_STATUS1_RESERVED1_MASK                        0x0010
#define TX_FED_TXFIR_STATUS1_RESERVED1_ALIGN                       0
#define TX_FED_TXFIR_STATUS1_RESERVED1_BITS                        1
#define TX_FED_TXFIR_STATUS1_RESERVED1_SHIFT                       4

/* TX_FED :: txfir_status1 :: txfir_pre_after_ovr [03:00] */
#define TX_FED_TXFIR_STATUS1_TXFIR_PRE_AFTER_OVR_MASK              0x000f
#define TX_FED_TXFIR_STATUS1_TXFIR_PRE_AFTER_OVR_ALIGN             0
#define TX_FED_TXFIR_STATUS1_TXFIR_PRE_AFTER_OVR_BITS              4
#define TX_FED_TXFIR_STATUS1_TXFIR_PRE_AFTER_OVR_SHIFT             0


/****************************************************************************
 * TX_FED :: txfir_status2
 ***************************************************************************/
/* TX_FED :: txfir_status2 :: reserved0 [15:06] */
#define TX_FED_TXFIR_STATUS2_RESERVED0_MASK                        0xffc0
#define TX_FED_TXFIR_STATUS2_RESERVED0_ALIGN                       0
#define TX_FED_TXFIR_STATUS2_RESERVED0_BITS                        10
#define TX_FED_TXFIR_STATUS2_RESERVED0_SHIFT                       6

/* TX_FED :: txfir_status2 :: txfir_main_after_ovr [05:00] */
#define TX_FED_TXFIR_STATUS2_TXFIR_MAIN_AFTER_OVR_MASK             0x003f
#define TX_FED_TXFIR_STATUS2_TXFIR_MAIN_AFTER_OVR_ALIGN            0
#define TX_FED_TXFIR_STATUS2_TXFIR_MAIN_AFTER_OVR_BITS             6
#define TX_FED_TXFIR_STATUS2_TXFIR_MAIN_AFTER_OVR_SHIFT            0


/****************************************************************************
 * TX_FED :: txfir_status3
 ***************************************************************************/
/* TX_FED :: txfir_status3 :: reserved0 [15:10] */
#define TX_FED_TXFIR_STATUS3_RESERVED0_MASK                        0xfc00
#define TX_FED_TXFIR_STATUS3_RESERVED0_ALIGN                       0
#define TX_FED_TXFIR_STATUS3_RESERVED0_BITS                        6
#define TX_FED_TXFIR_STATUS3_RESERVED0_SHIFT                       10

/* TX_FED :: txfir_status3 :: txfir_post_adjusted [09:05] */
#define TX_FED_TXFIR_STATUS3_TXFIR_POST_ADJUSTED_MASK              0x03e0
#define TX_FED_TXFIR_STATUS3_TXFIR_POST_ADJUSTED_ALIGN             0
#define TX_FED_TXFIR_STATUS3_TXFIR_POST_ADJUSTED_BITS              5
#define TX_FED_TXFIR_STATUS3_TXFIR_POST_ADJUSTED_SHIFT             5

/* TX_FED :: txfir_status3 :: reserved1 [04:04] */
#define TX_FED_TXFIR_STATUS3_RESERVED1_MASK                        0x0010
#define TX_FED_TXFIR_STATUS3_RESERVED1_ALIGN                       0
#define TX_FED_TXFIR_STATUS3_RESERVED1_BITS                        1
#define TX_FED_TXFIR_STATUS3_RESERVED1_SHIFT                       4

/* TX_FED :: txfir_status3 :: txfir_pre_adjusted [03:00] */
#define TX_FED_TXFIR_STATUS3_TXFIR_PRE_ADJUSTED_MASK               0x000f
#define TX_FED_TXFIR_STATUS3_TXFIR_PRE_ADJUSTED_ALIGN              0
#define TX_FED_TXFIR_STATUS3_TXFIR_PRE_ADJUSTED_BITS               4
#define TX_FED_TXFIR_STATUS3_TXFIR_PRE_ADJUSTED_SHIFT              0


/****************************************************************************
 * TX_FED :: txfir_status4
 ***************************************************************************/
/* TX_FED :: txfir_status4 :: reserved0 [15:11] */
#define TX_FED_TXFIR_STATUS4_RESERVED0_MASK                        0xf800
#define TX_FED_TXFIR_STATUS4_RESERVED0_ALIGN                       0
#define TX_FED_TXFIR_STATUS4_RESERVED0_BITS                        5
#define TX_FED_TXFIR_STATUS4_RESERVED0_SHIFT                       11

/* TX_FED :: txfir_status4 :: txfir_post2_adjusted [10:07] */
#define TX_FED_TXFIR_STATUS4_TXFIR_POST2_ADJUSTED_MASK             0x0780
#define TX_FED_TXFIR_STATUS4_TXFIR_POST2_ADJUSTED_ALIGN            0
#define TX_FED_TXFIR_STATUS4_TXFIR_POST2_ADJUSTED_BITS             4
#define TX_FED_TXFIR_STATUS4_TXFIR_POST2_ADJUSTED_SHIFT            7

/* TX_FED :: txfir_status4 :: reserved1 [06:06] */
#define TX_FED_TXFIR_STATUS4_RESERVED1_MASK                        0x0040
#define TX_FED_TXFIR_STATUS4_RESERVED1_ALIGN                       0
#define TX_FED_TXFIR_STATUS4_RESERVED1_BITS                        1
#define TX_FED_TXFIR_STATUS4_RESERVED1_SHIFT                       6

/* TX_FED :: txfir_status4 :: txfir_main_adjusted [05:00] */
#define TX_FED_TXFIR_STATUS4_TXFIR_MAIN_ADJUSTED_MASK              0x003f
#define TX_FED_TXFIR_STATUS4_TXFIR_MAIN_ADJUSTED_ALIGN             0
#define TX_FED_TXFIR_STATUS4_TXFIR_MAIN_ADJUSTED_BITS              6
#define TX_FED_TXFIR_STATUS4_TXFIR_MAIN_ADJUSTED_SHIFT             0


/****************************************************************************
 * TX_FED :: micro_control
 ***************************************************************************/
/* TX_FED :: micro_control :: reserved0 [15:01] */
#define TX_FED_MICRO_CONTROL_RESERVED0_MASK                        0xfffe
#define TX_FED_MICRO_CONTROL_RESERVED0_ALIGN                       0
#define TX_FED_MICRO_CONTROL_RESERVED0_BITS                        15
#define TX_FED_MICRO_CONTROL_RESERVED0_SHIFT                       1

/* TX_FED :: micro_control :: micro_tx_disable [00:00] */
#define TX_FED_MICRO_CONTROL_MICRO_TX_DISABLE_MASK                 0x0001
#define TX_FED_MICRO_CONTROL_MICRO_TX_DISABLE_ALIGN                0
#define TX_FED_MICRO_CONTROL_MICRO_TX_DISABLE_BITS                 1
#define TX_FED_MICRO_CONTROL_MICRO_TX_DISABLE_SHIFT                0


/****************************************************************************
 * TX_FED :: misc_control1
 ***************************************************************************/
/* TX_FED :: misc_control1 :: reserved0 [15:13] */
#define TX_FED_MISC_CONTROL1_RESERVED0_MASK                        0xe000
#define TX_FED_MISC_CONTROL1_RESERVED0_ALIGN                       0
#define TX_FED_MISC_CONTROL1_RESERVED0_BITS                        3
#define TX_FED_MISC_CONTROL1_RESERVED0_SHIFT                       13

/* TX_FED :: misc_control1 :: dp_reset_tx_disable_dis [12:12] */
#define TX_FED_MISC_CONTROL1_DP_RESET_TX_DISABLE_DIS_MASK          0x1000
#define TX_FED_MISC_CONTROL1_DP_RESET_TX_DISABLE_DIS_ALIGN         0
#define TX_FED_MISC_CONTROL1_DP_RESET_TX_DISABLE_DIS_BITS          1
#define TX_FED_MISC_CONTROL1_DP_RESET_TX_DISABLE_DIS_SHIFT         12

/* TX_FED :: misc_control1 :: tx_disable_output_sel [11:10] */
#define TX_FED_MISC_CONTROL1_TX_DISABLE_OUTPUT_SEL_MASK            0x0c00
#define TX_FED_MISC_CONTROL1_TX_DISABLE_OUTPUT_SEL_ALIGN           0
#define TX_FED_MISC_CONTROL1_TX_DISABLE_OUTPUT_SEL_BITS            2
#define TX_FED_MISC_CONTROL1_TX_DISABLE_OUTPUT_SEL_SHIFT           10

/* TX_FED :: misc_control1 :: tx_eee_alert_en [09:09] */
#define TX_FED_MISC_CONTROL1_TX_EEE_ALERT_EN_MASK                  0x0200
#define TX_FED_MISC_CONTROL1_TX_EEE_ALERT_EN_ALIGN                 0
#define TX_FED_MISC_CONTROL1_TX_EEE_ALERT_EN_BITS                  1
#define TX_FED_MISC_CONTROL1_TX_EEE_ALERT_EN_SHIFT                 9

/* TX_FED :: misc_control1 :: tx_eee_quiet_en [08:08] */
#define TX_FED_MISC_CONTROL1_TX_EEE_QUIET_EN_MASK                  0x0100
#define TX_FED_MISC_CONTROL1_TX_EEE_QUIET_EN_ALIGN                 0
#define TX_FED_MISC_CONTROL1_TX_EEE_QUIET_EN_BITS                  1
#define TX_FED_MISC_CONTROL1_TX_EEE_QUIET_EN_SHIFT                 8

/* TX_FED :: misc_control1 :: tx_disable_timer_ctrl [07:02] */
#define TX_FED_MISC_CONTROL1_TX_DISABLE_TIMER_CTRL_MASK            0x00fc
#define TX_FED_MISC_CONTROL1_TX_DISABLE_TIMER_CTRL_ALIGN           0
#define TX_FED_MISC_CONTROL1_TX_DISABLE_TIMER_CTRL_BITS            6
#define TX_FED_MISC_CONTROL1_TX_DISABLE_TIMER_CTRL_SHIFT           2

/* TX_FED :: misc_control1 :: pmd_tx_disable_pin_dis [01:01] */
#define TX_FED_MISC_CONTROL1_PMD_TX_DISABLE_PIN_DIS_MASK           0x0002
#define TX_FED_MISC_CONTROL1_PMD_TX_DISABLE_PIN_DIS_ALIGN          0
#define TX_FED_MISC_CONTROL1_PMD_TX_DISABLE_PIN_DIS_BITS           1
#define TX_FED_MISC_CONTROL1_PMD_TX_DISABLE_PIN_DIS_SHIFT          1

/* TX_FED :: misc_control1 :: sdk_tx_disable [00:00] */
#define TX_FED_MISC_CONTROL1_SDK_TX_DISABLE_MASK                   0x0001
#define TX_FED_MISC_CONTROL1_SDK_TX_DISABLE_ALIGN                  0
#define TX_FED_MISC_CONTROL1_SDK_TX_DISABLE_BITS                   1
#define TX_FED_MISC_CONTROL1_SDK_TX_DISABLE_SHIFT                  0


/****************************************************************************
 * TX_FED :: misc_control2
 ***************************************************************************/
/* TX_FED :: misc_control2 :: txfir_dc_level_frc_en [15:15] */
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_FRC_EN_MASK            0x8000
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_FRC_EN_ALIGN           0
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_FRC_EN_BITS            1
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_FRC_EN_SHIFT           15

/* TX_FED :: misc_control2 :: txfir_dc_level_lsb_frc_val [14:14] */
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_LSB_FRC_VAL_MASK       0x4000
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_LSB_FRC_VAL_ALIGN      0
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_LSB_FRC_VAL_BITS       1
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_LSB_FRC_VAL_SHIFT      14

/* TX_FED :: misc_control2 :: txfir_dc_level_pre_frc_val [13:11] */
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_PRE_FRC_VAL_MASK       0x3800
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_PRE_FRC_VAL_ALIGN      0
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_PRE_FRC_VAL_BITS       3
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_PRE_FRC_VAL_SHIFT      11

/* TX_FED :: misc_control2 :: txfir_dc_level_post1_frc_val [10:07] */
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_POST1_FRC_VAL_MASK     0x0780
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_POST1_FRC_VAL_ALIGN    0
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_POST1_FRC_VAL_BITS     4
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_POST1_FRC_VAL_SHIFT    7

/* TX_FED :: misc_control2 :: txfir_dc_level_post2_frc_val [06:03] */
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_POST2_FRC_VAL_MASK     0x0078
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_POST2_FRC_VAL_ALIGN    0
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_POST2_FRC_VAL_BITS     4
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_POST2_FRC_VAL_SHIFT    3

/* TX_FED :: misc_control2 :: txfir_dc_level_shared_frc_val [02:00] */
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_SHARED_FRC_VAL_MASK    0x0007
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_SHARED_FRC_VAL_ALIGN   0
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_SHARED_FRC_VAL_BITS    3
#define TX_FED_MISC_CONTROL2_TXFIR_DC_LEVEL_SHARED_FRC_VAL_SHIFT   0


/****************************************************************************
 * TX_FED :: misc_control3
 ***************************************************************************/
/* TX_FED :: misc_control3 :: reserved0 [15:01] */
#define TX_FED_MISC_CONTROL3_RESERVED0_MASK                        0xfffe
#define TX_FED_MISC_CONTROL3_RESERVED0_ALIGN                       0
#define TX_FED_MISC_CONTROL3_RESERVED0_BITS                        15
#define TX_FED_MISC_CONTROL3_RESERVED0_SHIFT                       1

/* TX_FED :: misc_control3 :: txfir_post2_hw_limit_max_sel [00:00] */
#define TX_FED_MISC_CONTROL3_TXFIR_POST2_HW_LIMIT_MAX_SEL_MASK     0x0001
#define TX_FED_MISC_CONTROL3_TXFIR_POST2_HW_LIMIT_MAX_SEL_ALIGN    0
#define TX_FED_MISC_CONTROL3_TXFIR_POST2_HW_LIMIT_MAX_SEL_BITS     1
#define TX_FED_MISC_CONTROL3_TXFIR_POST2_HW_LIMIT_MAX_SEL_SHIFT    0


/****************************************************************************
 * merlin_gallardo_pll_cal_blk_PLL_CAL
 ***************************************************************************/
/****************************************************************************
 * PLL_CAL :: PLL_CALCTL_0
 ***************************************************************************/
/* PLL_CAL :: PLL_CALCTL_0 :: cal_th [15:14] */
#define PLL_CAL_PLL_CALCTL_0_CAL_TH_MASK                           0xc000
#define PLL_CAL_PLL_CALCTL_0_CAL_TH_ALIGN                          0
#define PLL_CAL_PLL_CALCTL_0_CAL_TH_BITS                           2
#define PLL_CAL_PLL_CALCTL_0_CAL_TH_SHIFT                          14

/* PLL_CAL :: PLL_CALCTL_0 :: reserved0 [13:13] */
#define PLL_CAL_PLL_CALCTL_0_RESERVED0_MASK                        0x2000
#define PLL_CAL_PLL_CALCTL_0_RESERVED0_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_0_RESERVED0_BITS                        1
#define PLL_CAL_PLL_CALCTL_0_RESERVED0_SHIFT                       13

/* PLL_CAL :: PLL_CALCTL_0 :: calib_step_time [12:00] */
#define PLL_CAL_PLL_CALCTL_0_CALIB_STEP_TIME_MASK                  0x1fff
#define PLL_CAL_PLL_CALCTL_0_CALIB_STEP_TIME_ALIGN                 0
#define PLL_CAL_PLL_CALCTL_0_CALIB_STEP_TIME_BITS                  13
#define PLL_CAL_PLL_CALCTL_0_CALIB_STEP_TIME_SHIFT                 0


/****************************************************************************
 * PLL_CAL :: PLL_CALCTL_1
 ***************************************************************************/
/* PLL_CAL :: PLL_CALCTL_1 :: freqdet_time [15:00] */
#define PLL_CAL_PLL_CALCTL_1_FREQDET_TIME_MASK                     0xffff
#define PLL_CAL_PLL_CALCTL_1_FREQDET_TIME_ALIGN                    0
#define PLL_CAL_PLL_CALCTL_1_FREQDET_TIME_BITS                     16
#define PLL_CAL_PLL_CALCTL_1_FREQDET_TIME_SHIFT                    0


/****************************************************************************
 * PLL_CAL :: PLL_CALCTL_2
 ***************************************************************************/
/* PLL_CAL :: PLL_CALCTL_2 :: reserved0 [15:12] */
#define PLL_CAL_PLL_CALCTL_2_RESERVED0_MASK                        0xf000
#define PLL_CAL_PLL_CALCTL_2_RESERVED0_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_2_RESERVED0_BITS                        4
#define PLL_CAL_PLL_CALCTL_2_RESERVED0_SHIFT                       12

/* PLL_CAL :: PLL_CALCTL_2 :: calib_cap_charge_time [11:00] */
#define PLL_CAL_PLL_CALCTL_2_CALIB_CAP_CHARGE_TIME_MASK            0x0fff
#define PLL_CAL_PLL_CALCTL_2_CALIB_CAP_CHARGE_TIME_ALIGN           0
#define PLL_CAL_PLL_CALCTL_2_CALIB_CAP_CHARGE_TIME_BITS            12
#define PLL_CAL_PLL_CALCTL_2_CALIB_CAP_CHARGE_TIME_SHIFT           0


/****************************************************************************
 * PLL_CAL :: PLL_CALCTL_3
 ***************************************************************************/
/* PLL_CAL :: PLL_CALCTL_3 :: ext_state [15:12] */
#define PLL_CAL_PLL_CALCTL_3_EXT_STATE_MASK                        0xf000
#define PLL_CAL_PLL_CALCTL_3_EXT_STATE_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_3_EXT_STATE_BITS                        4
#define PLL_CAL_PLL_CALCTL_3_EXT_STATE_SHIFT                       12

/* PLL_CAL :: PLL_CALCTL_3 :: accel_en [11:11] */
#define PLL_CAL_PLL_CALCTL_3_ACCEL_EN_MASK                         0x0800
#define PLL_CAL_PLL_CALCTL_3_ACCEL_EN_ALIGN                        0
#define PLL_CAL_PLL_CALCTL_3_ACCEL_EN_BITS                         1
#define PLL_CAL_PLL_CALCTL_3_ACCEL_EN_SHIFT                        11

/* PLL_CAL :: PLL_CALCTL_3 :: debug_clr [10:10] */
#define PLL_CAL_PLL_CALCTL_3_DEBUG_CLR_MASK                        0x0400
#define PLL_CAL_PLL_CALCTL_3_DEBUG_CLR_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_3_DEBUG_CLR_BITS                        1
#define PLL_CAL_PLL_CALCTL_3_DEBUG_CLR_SHIFT                       10

/* PLL_CAL :: PLL_CALCTL_3 :: freqdet_time_msb [09:09] */
#define PLL_CAL_PLL_CALCTL_3_FREQDET_TIME_MSB_MASK                 0x0200
#define PLL_CAL_PLL_CALCTL_3_FREQDET_TIME_MSB_ALIGN                0
#define PLL_CAL_PLL_CALCTL_3_FREQDET_TIME_MSB_BITS                 1
#define PLL_CAL_PLL_CALCTL_3_FREQDET_TIME_MSB_SHIFT                9

/* PLL_CAL :: PLL_CALCTL_3 :: reserved0 [08:08] */
#define PLL_CAL_PLL_CALCTL_3_RESERVED0_MASK                        0x0100
#define PLL_CAL_PLL_CALCTL_3_RESERVED0_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_3_RESERVED0_BITS                        1
#define PLL_CAL_PLL_CALCTL_3_RESERVED0_SHIFT                       8

/* PLL_CAL :: PLL_CALCTL_3 :: freqdet_win [07:00] */
#define PLL_CAL_PLL_CALCTL_3_FREQDET_WIN_MASK                      0x00ff
#define PLL_CAL_PLL_CALCTL_3_FREQDET_WIN_ALIGN                     0
#define PLL_CAL_PLL_CALCTL_3_FREQDET_WIN_BITS                      8
#define PLL_CAL_PLL_CALCTL_3_FREQDET_WIN_SHIFT                     0


/****************************************************************************
 * PLL_CAL :: PLL_CALCTL_4
 ***************************************************************************/
/* PLL_CAL :: PLL_CALCTL_4 :: halfstep_en [15:15] */
#define PLL_CAL_PLL_CALCTL_4_HALFSTEP_EN_MASK                      0x8000
#define PLL_CAL_PLL_CALCTL_4_HALFSTEP_EN_ALIGN                     0
#define PLL_CAL_PLL_CALCTL_4_HALFSTEP_EN_BITS                      1
#define PLL_CAL_PLL_CALCTL_4_HALFSTEP_EN_SHIFT                     15

/* PLL_CAL :: PLL_CALCTL_4 :: pllForceCapPass_en [14:14] */
#define PLL_CAL_PLL_CALCTL_4_PLLFORCECAPPASS_EN_MASK               0x4000
#define PLL_CAL_PLL_CALCTL_4_PLLFORCECAPPASS_EN_ALIGN              0
#define PLL_CAL_PLL_CALCTL_4_PLLFORCECAPPASS_EN_BITS               1
#define PLL_CAL_PLL_CALCTL_4_PLLFORCECAPPASS_EN_SHIFT              14

/* PLL_CAL :: PLL_CALCTL_4 :: pllForceCapPass [13:13] */
#define PLL_CAL_PLL_CALCTL_4_PLLFORCECAPPASS_MASK                  0x2000
#define PLL_CAL_PLL_CALCTL_4_PLLFORCECAPPASS_ALIGN                 0
#define PLL_CAL_PLL_CALCTL_4_PLLFORCECAPPASS_BITS                  1
#define PLL_CAL_PLL_CALCTL_4_PLLFORCECAPPASS_SHIFT                 13

/* PLL_CAL :: PLL_CALCTL_4 :: cal_pause_en [12:12] */
#define PLL_CAL_PLL_CALCTL_4_CAL_PAUSE_EN_MASK                     0x1000
#define PLL_CAL_PLL_CALCTL_4_CAL_PAUSE_EN_ALIGN                    0
#define PLL_CAL_PLL_CALCTL_4_CAL_PAUSE_EN_BITS                     1
#define PLL_CAL_PLL_CALCTL_4_CAL_PAUSE_EN_SHIFT                    12

/* PLL_CAL :: PLL_CALCTL_4 :: cal_pause_rel [11:11] */
#define PLL_CAL_PLL_CALCTL_4_CAL_PAUSE_REL_MASK                    0x0800
#define PLL_CAL_PLL_CALCTL_4_CAL_PAUSE_REL_ALIGN                   0
#define PLL_CAL_PLL_CALCTL_4_CAL_PAUSE_REL_BITS                    1
#define PLL_CAL_PLL_CALCTL_4_CAL_PAUSE_REL_SHIFT                   11

/* PLL_CAL :: PLL_CALCTL_4 :: cap_delay [10:10] */
#define PLL_CAL_PLL_CALCTL_4_CAP_DELAY_MASK                        0x0400
#define PLL_CAL_PLL_CALCTL_4_CAP_DELAY_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_4_CAP_DELAY_BITS                        1
#define PLL_CAL_PLL_CALCTL_4_CAP_DELAY_SHIFT                       10

/* PLL_CAL :: PLL_CALCTL_4 :: calib_start [09:09] */
#define PLL_CAL_PLL_CALCTL_4_CALIB_START_MASK                      0x0200
#define PLL_CAL_PLL_CALCTL_4_CALIB_START_ALIGN                     0
#define PLL_CAL_PLL_CALCTL_4_CALIB_START_BITS                      1
#define PLL_CAL_PLL_CALCTL_4_CALIB_START_SHIFT                     9

/* PLL_CAL :: PLL_CALCTL_4 :: en_calib_n [08:08] */
#define PLL_CAL_PLL_CALCTL_4_EN_CALIB_N_MASK                       0x0100
#define PLL_CAL_PLL_CALCTL_4_EN_CALIB_N_ALIGN                      0
#define PLL_CAL_PLL_CALCTL_4_EN_CALIB_N_BITS                       1
#define PLL_CAL_PLL_CALCTL_4_EN_CALIB_N_SHIFT                      8

/* PLL_CAL :: PLL_CALCTL_4 :: reserved0 [07:07] */
#define PLL_CAL_PLL_CALCTL_4_RESERVED0_MASK                        0x0080
#define PLL_CAL_PLL_CALCTL_4_RESERVED0_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_4_RESERVED0_BITS                        1
#define PLL_CAL_PLL_CALCTL_4_RESERVED0_SHIFT                       7

/* PLL_CAL :: PLL_CALCTL_4 :: ext_range [06:00] */
#define PLL_CAL_PLL_CALCTL_4_EXT_RANGE_MASK                        0x007f
#define PLL_CAL_PLL_CALCTL_4_EXT_RANGE_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_4_EXT_RANGE_BITS                        7
#define PLL_CAL_PLL_CALCTL_4_EXT_RANGE_SHIFT                       0


/****************************************************************************
 * PLL_CAL :: PLL_CALCTL_5
 ***************************************************************************/
/* PLL_CAL :: PLL_CALCTL_5 :: pll_seq_start [15:15] */
#define PLL_CAL_PLL_CALCTL_5_PLL_SEQ_START_MASK                    0x8000
#define PLL_CAL_PLL_CALCTL_5_PLL_SEQ_START_ALIGN                   0
#define PLL_CAL_PLL_CALCTL_5_PLL_SEQ_START_BITS                    1
#define PLL_CAL_PLL_CALCTL_5_PLL_SEQ_START_SHIFT                   15

/* PLL_CAL :: PLL_CALCTL_5 :: lkdt_pause_en [14:14] */
#define PLL_CAL_PLL_CALCTL_5_LKDT_PAUSE_EN_MASK                    0x4000
#define PLL_CAL_PLL_CALCTL_5_LKDT_PAUSE_EN_ALIGN                   0
#define PLL_CAL_PLL_CALCTL_5_LKDT_PAUSE_EN_BITS                    1
#define PLL_CAL_PLL_CALCTL_5_LKDT_PAUSE_EN_SHIFT                   14

/* PLL_CAL :: PLL_CALCTL_5 :: lkdt_pause_rel [13:13] */
#define PLL_CAL_PLL_CALCTL_5_LKDT_PAUSE_REL_MASK                   0x2000
#define PLL_CAL_PLL_CALCTL_5_LKDT_PAUSE_REL_ALIGN                  0
#define PLL_CAL_PLL_CALCTL_5_LKDT_PAUSE_REL_BITS                   1
#define PLL_CAL_PLL_CALCTL_5_LKDT_PAUSE_REL_SHIFT                  13

/* PLL_CAL :: PLL_CALCTL_5 :: vco_rst_en [12:12] */
#define PLL_CAL_PLL_CALCTL_5_VCO_RST_EN_MASK                       0x1000
#define PLL_CAL_PLL_CALCTL_5_VCO_RST_EN_ALIGN                      0
#define PLL_CAL_PLL_CALCTL_5_VCO_RST_EN_BITS                       1
#define PLL_CAL_PLL_CALCTL_5_VCO_RST_EN_SHIFT                      12

/* PLL_CAL :: PLL_CALCTL_5 :: reserved0 [11:09] */
#define PLL_CAL_PLL_CALCTL_5_RESERVED0_MASK                        0x0e00
#define PLL_CAL_PLL_CALCTL_5_RESERVED0_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_5_RESERVED0_BITS                        3
#define PLL_CAL_PLL_CALCTL_5_RESERVED0_SHIFT                       9

/* PLL_CAL :: PLL_CALCTL_5 :: autocal_en [08:08] */
#define PLL_CAL_PLL_CALCTL_5_AUTOCAL_EN_MASK                       0x0100
#define PLL_CAL_PLL_CALCTL_5_AUTOCAL_EN_ALIGN                      0
#define PLL_CAL_PLL_CALCTL_5_AUTOCAL_EN_BITS                       1
#define PLL_CAL_PLL_CALCTL_5_AUTOCAL_EN_SHIFT                      8

/* PLL_CAL :: PLL_CALCTL_5 :: autocal_cnt [07:05] */
#define PLL_CAL_PLL_CALCTL_5_AUTOCAL_CNT_MASK                      0x00e0
#define PLL_CAL_PLL_CALCTL_5_AUTOCAL_CNT_ALIGN                     0
#define PLL_CAL_PLL_CALCTL_5_AUTOCAL_CNT_BITS                      3
#define PLL_CAL_PLL_CALCTL_5_AUTOCAL_CNT_SHIFT                     5

/* PLL_CAL :: PLL_CALCTL_5 :: lkdt_byp [04:04] */
#define PLL_CAL_PLL_CALCTL_5_LKDT_BYP_MASK                         0x0010
#define PLL_CAL_PLL_CALCTL_5_LKDT_BYP_ALIGN                        0
#define PLL_CAL_PLL_CALCTL_5_LKDT_BYP_BITS                         1
#define PLL_CAL_PLL_CALCTL_5_LKDT_BYP_SHIFT                        4

/* PLL_CAL :: PLL_CALCTL_5 :: pll_lock_frcval [03:03] */
#define PLL_CAL_PLL_CALCTL_5_PLL_LOCK_FRCVAL_MASK                  0x0008
#define PLL_CAL_PLL_CALCTL_5_PLL_LOCK_FRCVAL_ALIGN                 0
#define PLL_CAL_PLL_CALCTL_5_PLL_LOCK_FRCVAL_BITS                  1
#define PLL_CAL_PLL_CALCTL_5_PLL_LOCK_FRCVAL_SHIFT                 3

/* PLL_CAL :: PLL_CALCTL_5 :: pll_lock_frc [02:02] */
#define PLL_CAL_PLL_CALCTL_5_PLL_LOCK_FRC_MASK                     0x0004
#define PLL_CAL_PLL_CALCTL_5_PLL_LOCK_FRC_ALIGN                    0
#define PLL_CAL_PLL_CALCTL_5_PLL_LOCK_FRC_BITS                     1
#define PLL_CAL_PLL_CALCTL_5_PLL_LOCK_FRC_SHIFT                    2

/* PLL_CAL :: PLL_CALCTL_5 :: pllforce_fdone [01:01] */
#define PLL_CAL_PLL_CALCTL_5_PLLFORCE_FDONE_MASK                   0x0002
#define PLL_CAL_PLL_CALCTL_5_PLLFORCE_FDONE_ALIGN                  0
#define PLL_CAL_PLL_CALCTL_5_PLLFORCE_FDONE_BITS                   1
#define PLL_CAL_PLL_CALCTL_5_PLLFORCE_FDONE_SHIFT                  1

/* PLL_CAL :: PLL_CALCTL_5 :: pllforce_fdone_en [00:00] */
#define PLL_CAL_PLL_CALCTL_5_PLLFORCE_FDONE_EN_MASK                0x0001
#define PLL_CAL_PLL_CALCTL_5_PLLFORCE_FDONE_EN_ALIGN               0
#define PLL_CAL_PLL_CALCTL_5_PLLFORCE_FDONE_EN_BITS                1
#define PLL_CAL_PLL_CALCTL_5_PLLFORCE_FDONE_EN_SHIFT               0


/****************************************************************************
 * PLL_CAL :: PLL_CALCTL_6
 ***************************************************************************/
/* PLL_CAL :: PLL_CALCTL_6 :: reserved0 [15:08] */
#define PLL_CAL_PLL_CALCTL_6_RESERVED0_MASK                        0xff00
#define PLL_CAL_PLL_CALCTL_6_RESERVED0_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_6_RESERVED0_BITS                        8
#define PLL_CAL_PLL_CALCTL_6_RESERVED0_SHIFT                       8

/* PLL_CAL :: PLL_CALCTL_6 :: band_iqbuf_sel [07:07] */
#define PLL_CAL_PLL_CALCTL_6_BAND_IQBUF_SEL_MASK                   0x0080
#define PLL_CAL_PLL_CALCTL_6_BAND_IQBUF_SEL_ALIGN                  0
#define PLL_CAL_PLL_CALCTL_6_BAND_IQBUF_SEL_BITS                   1
#define PLL_CAL_PLL_CALCTL_6_BAND_IQBUF_SEL_SHIFT                  7

/* PLL_CAL :: PLL_CALCTL_6 :: vcorange_sel [06:06] */
#define PLL_CAL_PLL_CALCTL_6_VCORANGE_SEL_MASK                     0x0040
#define PLL_CAL_PLL_CALCTL_6_VCORANGE_SEL_ALIGN                    0
#define PLL_CAL_PLL_CALCTL_6_VCORANGE_SEL_BITS                     1
#define PLL_CAL_PLL_CALCTL_6_VCORANGE_SEL_SHIFT                    6

/* PLL_CAL :: PLL_CALCTL_6 :: vcobufpon_sel [05:05] */
#define PLL_CAL_PLL_CALCTL_6_VCOBUFPON_SEL_MASK                    0x0020
#define PLL_CAL_PLL_CALCTL_6_VCOBUFPON_SEL_ALIGN                   0
#define PLL_CAL_PLL_CALCTL_6_VCOBUFPON_SEL_BITS                    1
#define PLL_CAL_PLL_CALCTL_6_VCOBUFPON_SEL_SHIFT                   5

/* PLL_CAL :: PLL_CALCTL_6 :: reserved1 [04:04] */
#define PLL_CAL_PLL_CALCTL_6_RESERVED1_MASK                        0x0010
#define PLL_CAL_PLL_CALCTL_6_RESERVED1_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_6_RESERVED1_BITS                        1
#define PLL_CAL_PLL_CALCTL_6_RESERVED1_SHIFT                       4

/* PLL_CAL :: PLL_CALCTL_6 :: vcopon_sel [03:03] */
#define PLL_CAL_PLL_CALCTL_6_VCOPON_SEL_MASK                       0x0008
#define PLL_CAL_PLL_CALCTL_6_VCOPON_SEL_ALIGN                      0
#define PLL_CAL_PLL_CALCTL_6_VCOPON_SEL_BITS                       1
#define PLL_CAL_PLL_CALCTL_6_VCOPON_SEL_SHIFT                      3

/* PLL_CAL :: PLL_CALCTL_6 :: reserved2 [02:02] */
#define PLL_CAL_PLL_CALCTL_6_RESERVED2_MASK                        0x0004
#define PLL_CAL_PLL_CALCTL_6_RESERVED2_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_6_RESERVED2_BITS                        1
#define PLL_CAL_PLL_CALCTL_6_RESERVED2_SHIFT                       2

/* PLL_CAL :: PLL_CALCTL_6 :: pllpon_sel [01:01] */
#define PLL_CAL_PLL_CALCTL_6_PLLPON_SEL_MASK                       0x0002
#define PLL_CAL_PLL_CALCTL_6_PLLPON_SEL_ALIGN                      0
#define PLL_CAL_PLL_CALCTL_6_PLLPON_SEL_BITS                       1
#define PLL_CAL_PLL_CALCTL_6_PLLPON_SEL_SHIFT                      1

/* PLL_CAL :: PLL_CALCTL_6 :: reserved3 [00:00] */
#define PLL_CAL_PLL_CALCTL_6_RESERVED3_MASK                        0x0001
#define PLL_CAL_PLL_CALCTL_6_RESERVED3_ALIGN                       0
#define PLL_CAL_PLL_CALCTL_6_RESERVED3_BITS                        1
#define PLL_CAL_PLL_CALCTL_6_RESERVED3_SHIFT                       0


/****************************************************************************
 * PLL_CAL :: PLL_CALSTS_0
 ***************************************************************************/
/* PLL_CAL :: PLL_CALSTS_0 :: pll_fail_stky [15:15] */
#define PLL_CAL_PLL_CALSTS_0_PLL_FAIL_STKY_MASK                    0x8000
#define PLL_CAL_PLL_CALSTS_0_PLL_FAIL_STKY_ALIGN                   0
#define PLL_CAL_PLL_CALSTS_0_PLL_FAIL_STKY_BITS                    1
#define PLL_CAL_PLL_CALSTS_0_PLL_FAIL_STKY_SHIFT                   15

/* PLL_CAL :: PLL_CALSTS_0 :: cal_state [14:11] */
#define PLL_CAL_PLL_CALSTS_0_CAL_STATE_MASK                        0x7800
#define PLL_CAL_PLL_CALSTS_0_CAL_STATE_ALIGN                       0
#define PLL_CAL_PLL_CALSTS_0_CAL_STATE_BITS                        4
#define PLL_CAL_PLL_CALSTS_0_CAL_STATE_SHIFT                       11

/* PLL_CAL :: PLL_CALSTS_0 :: cal_valid [10:10] */
#define PLL_CAL_PLL_CALSTS_0_CAL_VALID_MASK                        0x0400
#define PLL_CAL_PLL_CALSTS_0_CAL_VALID_ALIGN                       0
#define PLL_CAL_PLL_CALSTS_0_CAL_VALID_BITS                        1
#define PLL_CAL_PLL_CALSTS_0_CAL_VALID_SHIFT                       10

/* PLL_CAL :: PLL_CALSTS_0 :: pll_lock [09:09] */
#define PLL_CAL_PLL_CALSTS_0_PLL_LOCK_MASK                         0x0200
#define PLL_CAL_PLL_CALSTS_0_PLL_LOCK_ALIGN                        0
#define PLL_CAL_PLL_CALSTS_0_PLL_LOCK_BITS                         1
#define PLL_CAL_PLL_CALSTS_0_PLL_LOCK_SHIFT                        9

/* PLL_CAL :: PLL_CALSTS_0 :: pll_lock_bar_stky [08:08] */
#define PLL_CAL_PLL_CALSTS_0_PLL_LOCK_BAR_STKY_MASK                0x0100
#define PLL_CAL_PLL_CALSTS_0_PLL_LOCK_BAR_STKY_ALIGN               0
#define PLL_CAL_PLL_CALSTS_0_PLL_LOCK_BAR_STKY_BITS                1
#define PLL_CAL_PLL_CALSTS_0_PLL_LOCK_BAR_STKY_SHIFT               8

/* PLL_CAL :: PLL_CALSTS_0 :: reserved0 [07:07] */
#define PLL_CAL_PLL_CALSTS_0_RESERVED0_MASK                        0x0080
#define PLL_CAL_PLL_CALSTS_0_RESERVED0_ALIGN                       0
#define PLL_CAL_PLL_CALSTS_0_RESERVED0_BITS                        1
#define PLL_CAL_PLL_CALSTS_0_RESERVED0_SHIFT                       7

/* PLL_CAL :: PLL_CALSTS_0 :: pll_range [06:00] */
#define PLL_CAL_PLL_CALSTS_0_PLL_RANGE_MASK                        0x007f
#define PLL_CAL_PLL_CALSTS_0_PLL_RANGE_ALIGN                       0
#define PLL_CAL_PLL_CALSTS_0_PLL_RANGE_BITS                        7
#define PLL_CAL_PLL_CALSTS_0_PLL_RANGE_SHIFT                       0


/****************************************************************************
 * PLL_CAL :: PLL_CALSTS_1
 ***************************************************************************/
/* PLL_CAL :: PLL_CALSTS_1 :: lkdtref_counter_msb [15:15] */
#define PLL_CAL_PLL_CALSTS_1_LKDTREF_COUNTER_MSB_MASK              0x8000
#define PLL_CAL_PLL_CALSTS_1_LKDTREF_COUNTER_MSB_ALIGN             0
#define PLL_CAL_PLL_CALSTS_1_LKDTREF_COUNTER_MSB_BITS              1
#define PLL_CAL_PLL_CALSTS_1_LKDTREF_COUNTER_MSB_SHIFT             15

/* PLL_CAL :: PLL_CALSTS_1 :: lkdtvco_counter_msb [14:14] */
#define PLL_CAL_PLL_CALSTS_1_LKDTVCO_COUNTER_MSB_MASK              0x4000
#define PLL_CAL_PLL_CALSTS_1_LKDTVCO_COUNTER_MSB_ALIGN             0
#define PLL_CAL_PLL_CALSTS_1_LKDTVCO_COUNTER_MSB_BITS              1
#define PLL_CAL_PLL_CALSTS_1_LKDTVCO_COUNTER_MSB_SHIFT             14

/* PLL_CAL :: PLL_CALSTS_1 :: reserved0 [13:13] */
#define PLL_CAL_PLL_CALSTS_1_RESERVED0_MASK                        0x2000
#define PLL_CAL_PLL_CALSTS_1_RESERVED0_ALIGN                       0
#define PLL_CAL_PLL_CALSTS_1_RESERVED0_BITS                        1
#define PLL_CAL_PLL_CALSTS_1_RESERVED0_SHIFT                       13

/* PLL_CAL :: PLL_CALSTS_1 :: calref_counter [12:00] */
#define PLL_CAL_PLL_CALSTS_1_CALREF_COUNTER_MASK                   0x1fff
#define PLL_CAL_PLL_CALSTS_1_CALREF_COUNTER_ALIGN                  0
#define PLL_CAL_PLL_CALSTS_1_CALREF_COUNTER_BITS                   13
#define PLL_CAL_PLL_CALSTS_1_CALREF_COUNTER_SHIFT                  0


/****************************************************************************
 * PLL_CAL :: PLL_CALSTS_2
 ***************************************************************************/
/* PLL_CAL :: PLL_CALSTS_2 :: band_iqbuf_mux [15:13] */
#define PLL_CAL_PLL_CALSTS_2_BAND_IQBUF_MUX_MASK                   0xe000
#define PLL_CAL_PLL_CALSTS_2_BAND_IQBUF_MUX_ALIGN                  0
#define PLL_CAL_PLL_CALSTS_2_BAND_IQBUF_MUX_BITS                   3
#define PLL_CAL_PLL_CALSTS_2_BAND_IQBUF_MUX_SHIFT                  13

/* PLL_CAL :: PLL_CALSTS_2 :: calvco_counter [12:00] */
#define PLL_CAL_PLL_CALSTS_2_CALVCO_COUNTER_MASK                   0x1fff
#define PLL_CAL_PLL_CALSTS_2_CALVCO_COUNTER_ALIGN                  0
#define PLL_CAL_PLL_CALSTS_2_CALVCO_COUNTER_BITS                   13
#define PLL_CAL_PLL_CALSTS_2_CALVCO_COUNTER_SHIFT                  0


/****************************************************************************
 * PLL_CAL :: PLL_CALSTS_3
 ***************************************************************************/
/* PLL_CAL :: PLL_CALSTS_3 :: lkdtref_counter [15:00] */
#define PLL_CAL_PLL_CALSTS_3_LKDTREF_COUNTER_MASK                  0xffff
#define PLL_CAL_PLL_CALSTS_3_LKDTREF_COUNTER_ALIGN                 0
#define PLL_CAL_PLL_CALSTS_3_LKDTREF_COUNTER_BITS                  16
#define PLL_CAL_PLL_CALSTS_3_LKDTREF_COUNTER_SHIFT                 0


/****************************************************************************
 * PLL_CAL :: PLL_CALSTS_4
 ***************************************************************************/
/* PLL_CAL :: PLL_CALSTS_4 :: lkdtvco_counter [15:00] */
#define PLL_CAL_PLL_CALSTS_4_LKDTVCO_COUNTER_MASK                  0xffff
#define PLL_CAL_PLL_CALSTS_4_LKDTVCO_COUNTER_ALIGN                 0
#define PLL_CAL_PLL_CALSTS_4_LKDTVCO_COUNTER_BITS                  16
#define PLL_CAL_PLL_CALSTS_4_LKDTVCO_COUNTER_SHIFT                 0


/****************************************************************************
 * PLL_CAL :: PLL_CALSTS_5
 ***************************************************************************/
/* PLL_CAL :: PLL_CALSTS_5 :: reserved0 [15:14] */
#define PLL_CAL_PLL_CALSTS_5_RESERVED0_MASK                        0xc000
#define PLL_CAL_PLL_CALSTS_5_RESERVED0_ALIGN                       0
#define PLL_CAL_PLL_CALSTS_5_RESERVED0_BITS                        2
#define PLL_CAL_PLL_CALSTS_5_RESERVED0_SHIFT                       14

/* PLL_CAL :: PLL_CALSTS_5 :: vcobufpon_mux [13:10] */
#define PLL_CAL_PLL_CALSTS_5_VCOBUFPON_MUX_MASK                    0x3c00
#define PLL_CAL_PLL_CALSTS_5_VCOBUFPON_MUX_ALIGN                   0
#define PLL_CAL_PLL_CALSTS_5_VCOBUFPON_MUX_BITS                    4
#define PLL_CAL_PLL_CALSTS_5_VCOBUFPON_MUX_SHIFT                   10

/* PLL_CAL :: PLL_CALSTS_5 :: calstate_onehot [09:00] */
#define PLL_CAL_PLL_CALSTS_5_CALSTATE_ONEHOT_MASK                  0x03ff
#define PLL_CAL_PLL_CALSTS_5_CALSTATE_ONEHOT_ALIGN                 0
#define PLL_CAL_PLL_CALSTS_5_CALSTATE_ONEHOT_BITS                  10
#define PLL_CAL_PLL_CALSTS_5_CALSTATE_ONEHOT_SHIFT                 0


/****************************************************************************
 * PLL_CAL :: PLL_CALSTS_6
 ***************************************************************************/
/* PLL_CAL :: PLL_CALSTS_6 :: pll_pwrdn_or [15:15] */
#define PLL_CAL_PLL_CALSTS_6_PLL_PWRDN_OR_MASK                     0x8000
#define PLL_CAL_PLL_CALSTS_6_PLL_PWRDN_OR_ALIGN                    0
#define PLL_CAL_PLL_CALSTS_6_PLL_PWRDN_OR_BITS                     1
#define PLL_CAL_PLL_CALSTS_6_PLL_PWRDN_OR_SHIFT                    15

/* PLL_CAL :: PLL_CALSTS_6 :: vco_range_mux [14:08] */
#define PLL_CAL_PLL_CALSTS_6_VCO_RANGE_MUX_MASK                    0x7f00
#define PLL_CAL_PLL_CALSTS_6_VCO_RANGE_MUX_ALIGN                   0
#define PLL_CAL_PLL_CALSTS_6_VCO_RANGE_MUX_BITS                    7
#define PLL_CAL_PLL_CALSTS_6_VCO_RANGE_MUX_SHIFT                   8

/* PLL_CAL :: PLL_CALSTS_6 :: vcopon_mux [07:04] */
#define PLL_CAL_PLL_CALSTS_6_VCOPON_MUX_MASK                       0x00f0
#define PLL_CAL_PLL_CALSTS_6_VCOPON_MUX_ALIGN                      0
#define PLL_CAL_PLL_CALSTS_6_VCOPON_MUX_BITS                       4
#define PLL_CAL_PLL_CALSTS_6_VCOPON_MUX_SHIFT                      4

/* PLL_CAL :: PLL_CALSTS_6 :: pllpon_mux [03:00] */
#define PLL_CAL_PLL_CALSTS_6_PLLPON_MUX_MASK                       0x000f
#define PLL_CAL_PLL_CALSTS_6_PLLPON_MUX_ALIGN                      0
#define PLL_CAL_PLL_CALSTS_6_PLLPON_MUX_BITS                       4
#define PLL_CAL_PLL_CALSTS_6_PLLPON_MUX_SHIFT                      0


/****************************************************************************
 * merlin_gallardo_txcom_blk_TXCOM
 ***************************************************************************/
/****************************************************************************
 * TXCOM :: CL72_tap_limit_control1
 ***************************************************************************/
/* TXCOM :: CL72_tap_limit_control1 :: reserved0 [15:10] */
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_RESERVED0_MASK               0xfc00
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_RESERVED0_ALIGN              0
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_RESERVED0_BITS               6
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_RESERVED0_SHIFT              10

/* TXCOM :: CL72_tap_limit_control1 :: post_tap_limit [09:05] */
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_POST_TAP_LIMIT_MASK          0x03e0
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_POST_TAP_LIMIT_ALIGN         0
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_POST_TAP_LIMIT_BITS          5
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_POST_TAP_LIMIT_SHIFT         5

/* TXCOM :: CL72_tap_limit_control1 :: reserved1 [04:04] */
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_RESERVED1_MASK               0x0010
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_RESERVED1_ALIGN              0
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_RESERVED1_BITS               1
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_RESERVED1_SHIFT              4

/* TXCOM :: CL72_tap_limit_control1 :: pre_tap_limit [03:00] */
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_PRE_TAP_LIMIT_MASK           0x000f
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_PRE_TAP_LIMIT_ALIGN          0
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_PRE_TAP_LIMIT_BITS           4
#define TXCOM_CL72_TAP_LIMIT_CONTROL1_PRE_TAP_LIMIT_SHIFT          0


/****************************************************************************
 * TXCOM :: CL72_tap_limit_control2
 ***************************************************************************/
/* TXCOM :: CL72_tap_limit_control2 :: reserved0 [15:06] */
#define TXCOM_CL72_TAP_LIMIT_CONTROL2_RESERVED0_MASK               0xffc0
#define TXCOM_CL72_TAP_LIMIT_CONTROL2_RESERVED0_ALIGN              0
#define TXCOM_CL72_TAP_LIMIT_CONTROL2_RESERVED0_BITS               10
#define TXCOM_CL72_TAP_LIMIT_CONTROL2_RESERVED0_SHIFT              6

/* TXCOM :: CL72_tap_limit_control2 :: main_tap_limit [05:00] */
#define TXCOM_CL72_TAP_LIMIT_CONTROL2_MAIN_TAP_LIMIT_MASK          0x003f
#define TXCOM_CL72_TAP_LIMIT_CONTROL2_MAIN_TAP_LIMIT_ALIGN         0
#define TXCOM_CL72_TAP_LIMIT_CONTROL2_MAIN_TAP_LIMIT_BITS          6
#define TXCOM_CL72_TAP_LIMIT_CONTROL2_MAIN_TAP_LIMIT_SHIFT         0


/****************************************************************************
 * TXCOM :: CL72_tap_preset_control
 ***************************************************************************/
/* TXCOM :: CL72_tap_preset_control :: reserved0 [15:10] */
#define TXCOM_CL72_TAP_PRESET_CONTROL_RESERVED0_MASK               0xfc00
#define TXCOM_CL72_TAP_PRESET_CONTROL_RESERVED0_ALIGN              0
#define TXCOM_CL72_TAP_PRESET_CONTROL_RESERVED0_BITS               6
#define TXCOM_CL72_TAP_PRESET_CONTROL_RESERVED0_SHIFT              10

/* TXCOM :: CL72_tap_preset_control :: pre_tap_preset_val [09:06] */
#define TXCOM_CL72_TAP_PRESET_CONTROL_PRE_TAP_PRESET_VAL_MASK      0x03c0
#define TXCOM_CL72_TAP_PRESET_CONTROL_PRE_TAP_PRESET_VAL_ALIGN     0
#define TXCOM_CL72_TAP_PRESET_CONTROL_PRE_TAP_PRESET_VAL_BITS      4
#define TXCOM_CL72_TAP_PRESET_CONTROL_PRE_TAP_PRESET_VAL_SHIFT     6

/* TXCOM :: CL72_tap_preset_control :: reserved1 [05:05] */
#define TXCOM_CL72_TAP_PRESET_CONTROL_RESERVED1_MASK               0x0020
#define TXCOM_CL72_TAP_PRESET_CONTROL_RESERVED1_ALIGN              0
#define TXCOM_CL72_TAP_PRESET_CONTROL_RESERVED1_BITS               1
#define TXCOM_CL72_TAP_PRESET_CONTROL_RESERVED1_SHIFT              5

/* TXCOM :: CL72_tap_preset_control :: post_tap_preset_val [04:00] */
#define TXCOM_CL72_TAP_PRESET_CONTROL_POST_TAP_PRESET_VAL_MASK     0x001f
#define TXCOM_CL72_TAP_PRESET_CONTROL_POST_TAP_PRESET_VAL_ALIGN    0
#define TXCOM_CL72_TAP_PRESET_CONTROL_POST_TAP_PRESET_VAL_BITS     5
#define TXCOM_CL72_TAP_PRESET_CONTROL_POST_TAP_PRESET_VAL_SHIFT    0


/****************************************************************************
 * TXCOM :: CL72_debug_1_register
 ***************************************************************************/
/* TXCOM :: CL72_debug_1_register :: reserved0 [15:14] */
#define TXCOM_CL72_DEBUG_1_REGISTER_RESERVED0_MASK                 0xc000
#define TXCOM_CL72_DEBUG_1_REGISTER_RESERVED0_ALIGN                0
#define TXCOM_CL72_DEBUG_1_REGISTER_RESERVED0_BITS                 2
#define TXCOM_CL72_DEBUG_1_REGISTER_RESERVED0_SHIFT                14

/* TXCOM :: CL72_debug_1_register :: tap_sum_max_val [13:07] */
#define TXCOM_CL72_DEBUG_1_REGISTER_TAP_SUM_MAX_VAL_MASK           0x3f80
#define TXCOM_CL72_DEBUG_1_REGISTER_TAP_SUM_MAX_VAL_ALIGN          0
#define TXCOM_CL72_DEBUG_1_REGISTER_TAP_SUM_MAX_VAL_BITS           7
#define TXCOM_CL72_DEBUG_1_REGISTER_TAP_SUM_MAX_VAL_SHIFT          7

/* TXCOM :: CL72_debug_1_register :: reserved1 [06:06] */
#define TXCOM_CL72_DEBUG_1_REGISTER_RESERVED1_MASK                 0x0040
#define TXCOM_CL72_DEBUG_1_REGISTER_RESERVED1_ALIGN                0
#define TXCOM_CL72_DEBUG_1_REGISTER_RESERVED1_BITS                 1
#define TXCOM_CL72_DEBUG_1_REGISTER_RESERVED1_SHIFT                6

/* TXCOM :: CL72_debug_1_register :: main_tap_min_val [05:00] */
#define TXCOM_CL72_DEBUG_1_REGISTER_MAIN_TAP_MIN_VAL_MASK          0x003f
#define TXCOM_CL72_DEBUG_1_REGISTER_MAIN_TAP_MIN_VAL_ALIGN         0
#define TXCOM_CL72_DEBUG_1_REGISTER_MAIN_TAP_MIN_VAL_BITS          6
#define TXCOM_CL72_DEBUG_1_REGISTER_MAIN_TAP_MIN_VAL_SHIFT         0


/****************************************************************************
 * TXCOM :: CL72_max_wait_timer_register
 ***************************************************************************/
/* TXCOM :: CL72_max_wait_timer_register :: max_wait_timer_period [15:00] */
#define TXCOM_CL72_MAX_WAIT_TIMER_REGISTER_MAX_WAIT_TIMER_PERIOD_MASK 0xffff
#define TXCOM_CL72_MAX_WAIT_TIMER_REGISTER_MAX_WAIT_TIMER_PERIOD_ALIGN 0
#define TXCOM_CL72_MAX_WAIT_TIMER_REGISTER_MAX_WAIT_TIMER_PERIOD_BITS 16
#define TXCOM_CL72_MAX_WAIT_TIMER_REGISTER_MAX_WAIT_TIMER_PERIOD_SHIFT 0


/****************************************************************************
 * TXCOM :: CL72_wait_timer_register
 ***************************************************************************/
/* TXCOM :: CL72_wait_timer_register :: reserved0 [15:09] */
#define TXCOM_CL72_WAIT_TIMER_REGISTER_RESERVED0_MASK              0xfe00
#define TXCOM_CL72_WAIT_TIMER_REGISTER_RESERVED0_ALIGN             0
#define TXCOM_CL72_WAIT_TIMER_REGISTER_RESERVED0_BITS              7
#define TXCOM_CL72_WAIT_TIMER_REGISTER_RESERVED0_SHIFT             9

/* TXCOM :: CL72_wait_timer_register :: wait_cntr_limit [08:00] */
#define TXCOM_CL72_WAIT_TIMER_REGISTER_WAIT_CNTR_LIMIT_MASK        0x01ff
#define TXCOM_CL72_WAIT_TIMER_REGISTER_WAIT_CNTR_LIMIT_ALIGN       0
#define TXCOM_CL72_WAIT_TIMER_REGISTER_WAIT_CNTR_LIMIT_BITS        9
#define TXCOM_CL72_WAIT_TIMER_REGISTER_WAIT_CNTR_LIMIT_SHIFT       0


/****************************************************************************
 * Datatype Definitions.
 ***************************************************************************/
#endif /* #ifndef PHY82328_H__ */

/* End of File */


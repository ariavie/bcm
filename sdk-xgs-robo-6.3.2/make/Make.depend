# $Id: Make.depend 1.16 Broadcom SDK $
# $Copyright: Copyright 2012 Broadcom Corporation.
# This program is the proprietary software of Broadcom Corporation
# and/or its licensors, and may only be used, duplicated, modified
# or distributed pursuant to the terms and conditions of a separate,
# written license agreement executed between you and Broadcom
# (an "Authorized License").  Except as set forth in an Authorized
# License, Broadcom grants no license (express or implied), right
# to use, or waiver of any kind with respect to the Software, and
# Broadcom expressly reserves all rights in and to the Software
# and all intellectual property rights therein.  IF YOU HAVE
# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
# ALL USE OF THE SOFTWARE.  
#  
# Except as expressly set forth in the Authorized License,
#  
# 1.     This program, including its structure, sequence and organization,
# constitutes the valuable trade secrets of Broadcom, and you shall use
# all reasonable efforts to protect the confidentiality thereof,
# and to use this information only in connection with your use of
# Broadcom integrated circuit products.
#  
# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
# 
# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
#
# Default rule to build dependencies.  This builds a x.d file for each
# x.c file that describes the dependencies.  We then conditionally include 
# the generated .d files.
#

#
# If making 'clean', do not include any .d files.  If they are included,
# gmake intrinsically tries to remake them all.
#
ifeq (,$(findstring clean,$(MAKECMDGOALS)))

ZFS      :=$(wildcard *.zf)
ZFC := $(ZFS:.zf=.c)

ifdef GENERATE_C_FILES
ifndef GEN_INCS
$(error "GEN_INCS was not defined")
endif

ZF_GEN   = ${SDK}/tools/zFrameCodeGen.pl

# 1=.zf
define ZFS_RULE
$(1:.zf=Console.c) : $(1:.zf=.c)
	@echo updated $$@ from $$?

$(1:.zf=.c) : $(1) $(ZF_GEN)
	@$(PERL) $(ZF_GEN) -s -z . -p . -g $1 -t c
	@echo generated ${LOCALDIR}/$$@ from $(1)
	@mv $$(*F).cx $$@
	@if [ -e $$(*F)Console.cx ] ; then \
	   mv $$(*F)Console.cx $$(*F)Console.c; \
	    echo Created $$(*F)Console.c ;\
	fi
	@if [ -e $$(*F)Console.hx ] ; then \
	   echo Created $(GEN_INCS)/$$(*F)Console.hx ;\
	   mv $$(*F)Console.hx $(GEN_INCS)/ ; \
	fi
	@mv $$(*F).hx $(GEN_INCS)/
endef

$(foreach zf,$(ZFS),$(eval $(call ZFS_RULE,$(zf))))

${BLDDIR}/%.P : ${BLDDIR}/.tree %.c

.PHONY: GENFILES
GENFILES: $(ZFC)

$(BOBJS) : $(ZFC)

else
#
# Attempt to build the depend files.  If it fails, the depend file is
# removed so that it is not included in later builds.
#
${BLDDIR}/%.P : %.c ${BLDDIR}/.tree
	@$(ECHO) Dependencies for ${LOCALDIR}/$<

${BLDDIR}/%.P : %.cc ${BLDDIR}/.tree
	@$(ECHO) Dependencies for ${LOCALDIR}/$<

endif

#
# If there are C or C++ files in this directory, include the 
# depend files for them.
#

ifeq ($(findstring _COMPILER,$(MAKECMDGOALS))$(findstring variable,$(MAKECMDGOALS)),)
ifneq ($(strip ${LSRCS}),)
ifneq (,$(findstring .o,$(MAKECMDGOALS)))
-include $(addprefix ${BLDDIR}/,$(MAKECMDGOALS:.o=.P)) $(addprefix ${BLDDIR}/,$(MAKECMDGOALS:.o=.sig))
else
-include $(addprefix ${BLDDIR}/,$(addsuffix .P,$(basename $(LSRCS)))) $(addprefix ${BLDDIR}/,$(addsuffix .sig,$(basename $(LSRCS))))
endif
endif
endif

endif	# !CLEANING

clean_d::
ifdef QUIET
	@$(ECHO) Cleaning dependencies for ${LOCALDIR}
endif
	$Q$(RM) $(BOBJS:.o=.P)
ifdef GENERATE_C_FILES
	$Q$(RM) $(ZFC:%=$(SDK)/$(LOCALDIR)/%) $(ZFC:%.c=$(SDK)/$(LOCALDIR)/%Console.c)
endif

clean:: clean_d

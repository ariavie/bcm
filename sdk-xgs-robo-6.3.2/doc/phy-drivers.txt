/*
 * $Id: phy-drivers.txt 1.2 Broadcom SDK $
 *
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 */
------------------------------------------------------------------------------
		      Notes on Adding a PHY Driver
		 Curt McDowell, Broadcom Corp. 08-14-02
			 Last Updated: 08-14-02
------------------------------------------------------------------------------

1) Define the PHY Device ID

In $SDK/include/soc/phy.h, add a definition for the PHY ID.

#define PHY_ID1_BCMxxxx		0x<phy-id>

Here, <phy-id> is normally the value of the PHY ID1 register of the part
(MII address 0x03), after having been ANDed with 0x03f0.

For non-Broadcom PHYs, an appropriate PHY_OUI_xxx would need to be
defined.

2) Define the PHY Driver ID

In $SDK/include/soc/phy.h, add a definition for the driver ID.

In enum soc_known_phy_t, add _phy_id_BCMxxxx.  This is the actual driver
ID.  Multiple PHY IDs may map to the same driver ID.

3) Add translation from PHY Device ID to Driver ID

In $SDK/src/soc/phy/phyident.c, there is a switch table in
_phy_ident_type_get().  A case entry should be added mapping the device
ID to the driver ID, for example:

        case PHY_ID1_BCM5464:  /* Broadcom 5464 */
            return _phy_id_BCM5464;

For non-Broadcom PHYs, appropriate extra coding would be required.

4) Add translation from Driver ID to driver function vector

In $SDK/src/soc/phy/phyident.c, there is a table mapping PHY driver ID
to function vectors, called _standard_phy_table.

The simplest thing to do is add a new entry to this table.

For example:

    {_chk_phy, _phy_id_BCM5464, "BCM5464",     &phy_5464drv_ge, NULL},

It is possible to add a PHY driver without modifying phyident.c by using
the soc_phy_add_entry() call to add a new driver to the PHY table.

5) Create a PHY driver include and source file

In $SDK/src/phy, there is a header and source file for each PHY driver;
for example:

	phy54xx.h
	phy54xx.c

Here, the phy54xx drivers are all so similar that a single driver is
used and multiple PHY function vectors are defined that point to the
same actual driver funtions.

To add a totally different PHY, new files should be created; otherwise,
it may be possible to add functionality to an existing PHY driver in
this manner.  Even if a new file is created, it is still possible to
call into the standard driver functions because most PHYs largely adhere
to IEEE register definitions.

The Makefiles that come with the SDK will automatically compile the new
PHY source file without having to list it in any of the Makefiles.

# $Id: rcr.soc 1.4 Broadcom SDK $
# $Copyright: Copyright 2012 Broadcom Corporation.
# This program is the proprietary software of Broadcom Corporation
# and/or its licensors, and may only be used, duplicated, modified
# or distributed pursuant to the terms and conditions of a separate,
# written license agreement executed between you and Broadcom
# (an "Authorized License").  Except as set forth in an Authorized
# License, Broadcom grants no license (express or implied), right
# to use, or waiver of any kind with respect to the Software, and
# Broadcom expressly reserves all rights in and to the Software
# and all intellectual property rights therein.  IF YOU HAVE
# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
# ALL USE OF THE SOFTWARE.  
#  
# Except as expressly set forth in the Authorized License,
#  
# 1.     This program, including its structure, sequence and organization,
# constitutes the valuable trade secrets of Broadcom, and you shall use
# all reasonable efforts to protect the confidentiality thereof,
# and to use this information only in connection with your use of
# Broadcom integrated circuit products.
#  
# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
# 
# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
#
# Reload script
#
#	A system reload is when the software is restarted from scratch
#	*without* the hardware being reset in any way.  The software
#	will read the current state out of the hardware and resume as if
#	nothing had happened.
#
#	This script is the reload counterpart to the rc.soc script.
#	It calls all the steps needed during the reload process to
#	restore each subsystem.
#
#	To use reload mode, the boot flag must be set to indicate reload.
#	In this mode, the BCM command monitor will attach all devices
#	and come to the prompt non-destructively.  Then this script is
#	run to bring all the software modules through reload initialization.
#	
#	Assumes the same board configuration config variables are set
#	that rc.soc uses.

if $?1 "echo reload: arguments not supported; exit"

local echo echo

echo "reload: unit $unit device $devname"

#reload show

# Set convenience local variables

if $?quickturn || $?plisim \
	"local simulator 1"

# Chip-related

if $?drac || $?drac15 \
	"local drac_any 1"

# Set software's wait for S-Channel response to 3 seconds for QuickTurn
# (Recommend at least 10 seconds if the ARL is 100% busy with inserts.)
if $?quickturn	"stimeout 3000000"
if $?plisim	"stimeout 60000000"

# Direct phy led programming: 5464 activity led becomes link/activity
if $?lancelot && $?drac_any \
	"config add phy_led_ctrl=0x18"

# Direct phy led programming: 5464 led4 becomes energy/link
if $?magnum \
	"config add phy_led4_mode_ge=0xc"

#
# The following commands each do reinitialization instead of
# initialization when the unit is in reload mode.
#

# Reinitialize SOC
init soc

# Reinitialize miscellaneous chip registers
init misc

# Reinitialize the StrataSwitch MMU registers
init mmu

#
# Init CLI and BCM API
#
# This must be done after the raw register writes to avoid having state
# clobbered.  NOTE: Tables are cleared by "init bcm" below.  If
# table modifications are required, put them after "init bcm".  Some
# registers might also be affected.
#

init bcm
$echo rc: BCM driver reinitialized

# Resume mirroring of hardware ARL operations into software ARL table.
# The ARL table will be reloaded from hardware.

if $?feature_arl_sorted \
	"arlmode intr_dma; \
	 $echo rc: ARL DMA shadowing enabled"

if $?feature_arl_hashed && !$?simulator \
	"l2mode interval=3000000; \
	 $echo rc: L2 Table shadowing enabled"

# If running BCM library, resume linkscan task

linkscan interval=250000 spbm=e,hg

# At this point the reload is completed.

echo "Use the command 'reload done' to exit reload mode."

# Restart statistics collection (zeroed)

if $?plisim "local dma false"
if !$?plisim "local dma true"

counter Interval=1000 Pbm=all Dma=$dma

# Resynchronize the saved values kept by the 'show counter' command.
if !$?simulator "counter sync"

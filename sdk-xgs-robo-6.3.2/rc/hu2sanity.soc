# $Id: hu2sanity.soc 1.8 Broadcom SDK $
# $Copyright: Copyright 2012 Broadcom Corporation.
# This program is the proprietary software of Broadcom Corporation
# and/or its licensors, and may only be used, duplicated, modified
# or distributed pursuant to the terms and conditions of a separate,
# written license agreement executed between you and Broadcom
# (an "Authorized License").  Except as set forth in an Authorized
# License, Broadcom grants no license (express or implied), right
# to use, or waiver of any kind with respect to the Software, and
# Broadcom expressly reserves all rights in and to the Software
# and all intellectual property rights therein.  IF YOU HAVE
# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
# ALL USE OF THE SOFTWARE.  
#  
# Except as expressly set forth in the Authorized License,
#  
# 1.     This program, including its structure, sequence and organization,
# constitutes the valuable trade secrets of Broadcom, and you shall use
# all reasonable efforts to protect the confidentiality thereof,
# and to use this information only in connection with your use of
# Broadcom integrated circuit products.
#  
# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
# 
# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$

# Hurricane2 (BCM56150) Sanity
#
# Script to run all available tests as quickly as possible.
# For testing basic sanity of new drivers, simulators, chips, etc.
#

# Hurricane-2
if $?BCM56150_A0 || $?BCM56151_A0\
    'local BCM5615X_A0 1'

# Wolfhound
if $?BCM53342_A0 || $?BCM53343_A0 || $?BCM53344_A0 || $?BCM53346_A0 \
   'local BCM5334X_A0 1'

# Deerhound
if $?BCM53393_A0 || $?BCM53394_A0 \
   'local BCM5339X_A0 1'

echo "testsuite: started: sanity"
rcload rc.soc
counter off
l2mode off

# We need to print out port status since any cabling effects results.
*:ps

# Avoid link messages while testing
linkscan off

init
init misc
init mmu

local done 'echo "   Done"'

# Set run command script not to fail on errors reported by commands
# this allows the script to continue if a test fails
set rcerror=false

# Set up test mode: don't stop on errors, show progress on each test
tm -stoponerror +progress
# Unselect all
ts -*

#Display some useful information
date
ver
soc

#Start Test
if !$?ihost_mode \
    'echo "Running PCI Compliance ...";\
     tr 2;\
     $done;'

#Start Test
echo "Running PCI S-Channel Buf ..."
tr 4
$done

echo "Running Register reset defaults ..."
tr 1
$done

echo "Running Register read/write ..."
tr 3 mask64
$done

init soc; init misc; init mmu;
#Clean up after register read/write test.

rcload rc.soc
counter off
l2mode off
echo "Running CPU Benchmarks ..."
tr 21
$done
linkscan off

init soc; init mmu;
set rct=false

echo "Running Switching Memory Tests ..."

echo " ALTERNATE_EMIRROR_BITMAP";
tr 50 M=ALTERNATE_EMIRROR_BITMAP;
tr 51 M=ALTERNATE_EMIRROR_BITMAP;
tr 52 M=ALTERNATE_EMIRROR_BITMAP;
tr 71 M=ALTERNATE_EMIRROR_BITMAP TSE=F SLTH=T;
tr 71 M=ALTERNATE_EMIRROR_BITMAP TSE=T SLTH=T;
tr 71 M=ALTERNATE_EMIRROR_BITMAP TSE=T SLTH=F;
echo " CPU_COS_MAP";
tr 50 M=CPU_COS_MAP;
tr 51 M=CPU_COS_MAP;
tr 52 M=CPU_COS_MAP;
tr 71 M=CPU_COS_MAP TSE=F SLTH=T;
tr 71 M=CPU_COS_MAP TSE=T SLTH=T;
tr 71 M=CPU_COS_MAP TSE=T SLTH=F;
echo " CPU_COS_MAP_DATA_ONLY";
tr 50 M=CPU_COS_MAP_DATA_ONLY;
tr 51 M=CPU_COS_MAP_DATA_ONLY;
tr 52 M=CPU_COS_MAP_DATA_ONLY;
tr 71 M=CPU_COS_MAP_DATA_ONLY TSE=F SLTH=T;
tr 71 M=CPU_COS_MAP_DATA_ONLY TSE=T SLTH=T;
tr 71 M=CPU_COS_MAP_DATA_ONLY TSE=T SLTH=F;
echo " CPU_COS_MAP_ONLY";
tr 50 M=CPU_COS_MAP_ONLY;
tr 51 M=CPU_COS_MAP_ONLY;
tr 52 M=CPU_COS_MAP_ONLY;
tr 71 M=CPU_COS_MAP_ONLY TSE=F SLTH=T;
tr 71 M=CPU_COS_MAP_ONLY TSE=T SLTH=T;
tr 71 M=CPU_COS_MAP_ONLY TSE=T SLTH=F;
echo " CPU_TS_MAP";
tr 50 M=CPU_TS_MAP;
tr 51 M=CPU_TS_MAP;
tr 52 M=CPU_TS_MAP;
tr 71 M=CPU_TS_MAP TSE=F SLTH=T;
tr 71 M=CPU_TS_MAP TSE=T SLTH=T;
tr 71 M=CPU_TS_MAP TSE=T SLTH=F;
echo " DSCP_TABLE";
tr 50 M=DSCP_TABLE;
tr 51 M=DSCP_TABLE;
tr 52 M=DSCP_TABLE;
tr 71 M=DSCP_TABLE TSE=F SLTH=T;
tr 71 M=DSCP_TABLE TSE=T SLTH=T;
tr 71 M=DSCP_TABLE TSE=T SLTH=F;
if  !$?BCM5334X_A0 && !$?BCM5339X_A0 \
    'echo " EFP_COUNTER_TABLE"; \
    tr 50 M=EFP_COUNTER_TABLE; \
    tr 51 M=EFP_COUNTER_TABLE; \
    tr 52 M=EFP_COUNTER_TABLE; \
    tr 71 M=EFP_COUNTER_TABLE TSE=F SLTH=T; \
    tr 71 M=EFP_COUNTER_TABLE TSE=T SLTH=T; \
    tr 71 M=EFP_COUNTER_TABLE TSE=T SLTH=F; \
    echo " EFP_METER_TABLE"; \
    tr 50 M=EFP_METER_TABLE; \
    tr 51 M=EFP_METER_TABLE; \
    tr 52 M=EFP_METER_TABLE; \
    tr 71 M=EFP_METER_TABLE TSE=F SLTH=T; \
    tr 71 M=EFP_METER_TABLE TSE=T SLTH=T; \
    tr 71 M=EFP_METER_TABLE TSE=T SLTH=F; \
    echo " EFP_POLICY_TABLE"; \
    tr 50 M=EFP_POLICY_TABLE; \
    tr 51 M=EFP_POLICY_TABLE; \
    tr 52 M=EFP_POLICY_TABLE; \
    tr 71 M=EFP_POLICY_TABLE TSE=F SLTH=T; \
    tr 71 M=EFP_POLICY_TABLE TSE=T SLTH=T; \
    tr 71 M=EFP_POLICY_TABLE TSE=T SLTH=F; \
    echo " EFP_TCAM"; \
    tr 50 M=EFP_TCAM; \
    tr 51 M=EFP_TCAM; \
    tr 52 M=EFP_TCAM; \
    tr 71 M=EFP_TCAM TSE=F SLTH=T; \
    tr 71 M=EFP_TCAM TSE=T SLTH=T; \
    tr 71 M=EFP_TCAM TSE=T SLTH=F; \
    echo " FP_GLOBAL_MASK_TCAM"; \
    tr 50 M=FP_GLOBAL_MASK_TCAM; \
    tr 51 M=FP_GLOBAL_MASK_TCAM; \
    tr 52 M=FP_GLOBAL_MASK_TCAM; \
    tr 71 M=FP_GLOBAL_MASK_TCAM TSE=F SLTH=T; \
    tr 71 M=FP_GLOBAL_MASK_TCAM TSE=T SLTH=T; \
    tr 71 M=FP_GLOBAL_MASK_TCAM TSE=T SLTH=F; \
    echo " FP_TCAM"; \
    tr 50 M=FP_TCAM; \
    tr 51 M=FP_TCAM; \
    tr 52 M=FP_TCAM; \
    tr 71 M=FP_TCAM TSE=F SLTH=T; \
    tr 71 M=FP_TCAM TSE=T SLTH=T; \
    tr 71 M=FP_TCAM TSE=T SLTH=F; \
    echo " VFP_POLICY_TABLE"; \
    tr 50 M=VFP_POLICY_TABLE; \
    tr 51 M=VFP_POLICY_TABLE; \
    tr 52 M=VFP_POLICY_TABLE; \
    tr 71 M=VFP_POLICY_TABLE TSE=F SLTH=T; \
    tr 71 M=VFP_POLICY_TABLE TSE=T SLTH=T; \
    tr 71 M=VFP_POLICY_TABLE TSE=T SLTH=F; \
    echo " VFP_TCAM"; \
    tr 50 M=VFP_TCAM; \
    tr 51 M=VFP_TCAM; \
    tr 52 M=VFP_TCAM; \
    tr 71 M=VFP_TCAM TSE=F SLTH=T; \
    tr 71 M=VFP_TCAM TSE=T SLTH=T; \
    tr 71 M=VFP_TCAM TSE=T SLTH=F;'
echo " EGR_1588_SA";
tr 50 M=EGR_1588_SA;
tr 51 M=EGR_1588_SA;
tr 52 M=EGR_1588_SA;
tr 71 M=EGR_1588_SA TSE=F SLTH=T;
tr 71 M=EGR_1588_SA TSE=T SLTH=T;
tr 71 M=EGR_1588_SA TSE=T SLTH=F;
echo " EGR_DSCP_ECN_MAP";
tr 50 M=EGR_DSCP_ECN_MAP;
tr 51 M=EGR_DSCP_ECN_MAP;
tr 52 M=EGR_DSCP_ECN_MAP;
tr 71 M=EGR_DSCP_ECN_MAP TSE=F SLTH=T;
tr 71 M=EGR_DSCP_ECN_MAP TSE=T SLTH=T;
tr 71 M=EGR_DSCP_ECN_MAP TSE=T SLTH=F;
echo " EGR_DSCP_TABLE";
tr 50 M=EGR_DSCP_TABLE;
tr 51 M=EGR_DSCP_TABLE;
tr 52 M=EGR_DSCP_TABLE;
tr 71 M=EGR_DSCP_TABLE TSE=F SLTH=T;
tr 71 M=EGR_DSCP_TABLE TSE=T SLTH=T;
tr 71 M=EGR_DSCP_TABLE TSE=T SLTH=F;
echo " EGR_EDB_XMIT_CTRL";
tr 50 M=EGR_EDB_XMIT_CTRL;
tr 51 M=EGR_EDB_XMIT_CTRL;
tr 52 M=EGR_EDB_XMIT_CTRL;
tr 71 M=EGR_EDB_XMIT_CTRL TSE=F SLTH=T;
tr 71 M=EGR_EDB_XMIT_CTRL TSE=T SLTH=T;
tr 71 M=EGR_EDB_XMIT_CTRL TSE=T SLTH=F;
echo " EGR_EM_MTP_INDEX";
tr 50 M=EGR_EM_MTP_INDEX;
tr 51 M=EGR_EM_MTP_INDEX;
tr 52 M=EGR_EM_MTP_INDEX;
tr 71 M=EGR_EM_MTP_INDEX TSE=F SLTH=T;
tr 71 M=EGR_EM_MTP_INDEX TSE=T SLTH=T;
tr 71 M=EGR_EM_MTP_INDEX TSE=T SLTH=F;
echo " EGR_ENABLE";
tr 50 M=EGR_ENABLE;
tr 51 M=EGR_ENABLE;
tr 52 M=EGR_ENABLE;
tr 71 M=EGR_ENABLE TSE=F SLTH=T;
tr 71 M=EGR_ENABLE TSE=T SLTH=T;
tr 71 M=EGR_ENABLE TSE=T SLTH=F;
echo " EGR_ERSPAN";
tr 50 M=EGR_ERSPAN;
tr 51 M=EGR_ERSPAN;
tr 52 M=EGR_ERSPAN;
tr 71 M=EGR_ERSPAN TSE=F SLTH=T;
tr 71 M=EGR_ERSPAN TSE=T SLTH=T;
tr 71 M=EGR_ERSPAN TSE=T SLTH=F;
echo " EGR_IM_MTP_INDEX";
tr 50 M=EGR_IM_MTP_INDEX;
tr 51 M=EGR_IM_MTP_INDEX;
tr 52 M=EGR_IM_MTP_INDEX;
tr 71 M=EGR_IM_MTP_INDEX TSE=F SLTH=T;
tr 71 M=EGR_IM_MTP_INDEX TSE=T SLTH=T;
tr 71 M=EGR_IM_MTP_INDEX TSE=T SLTH=F;
echo " EGR_L3_INTF";
tr 50 M=EGR_L3_INTF;
tr 51 M=EGR_L3_INTF;
tr 52 M=EGR_L3_INTF;
tr 71 M=EGR_L3_INTF TSE=F SLTH=T;
tr 71 M=EGR_L3_INTF TSE=T SLTH=T;
tr 71 M=EGR_L3_INTF TSE=T SLTH=F;
echo " EGR_L3_NEXT_HOP";
tr 50 M=EGR_L3_NEXT_HOP;
tr 51 M=EGR_L3_NEXT_HOP;
tr 52 M=EGR_L3_NEXT_HOP;
tr 71 M=EGR_L3_NEXT_HOP TSE=F SLTH=T;
tr 71 M=EGR_L3_NEXT_HOP TSE=T SLTH=T;
tr 71 M=EGR_L3_NEXT_HOP TSE=T SLTH=F;
echo " EGR_MASK";
tr 50 M=EGR_MASK;
tr 51 M=EGR_MASK;
tr 52 M=EGR_MASK;
tr 71 M=EGR_MASK TSE=F SLTH=T;
tr 71 M=EGR_MASK TSE=T SLTH=T;
tr 71 M=EGR_MASK TSE=T SLTH=F;
#echo " EGR_MAX_USED_ENTRIES";
#tr 50 M=EGR_MAX_USED_ENTRIES;
#tr 51 M=EGR_MAX_USED_ENTRIES;
#tr 52 M=EGR_MAX_USED_ENTRIES;
#tr 71 M=EGR_MAX_USED_ENTRIES TSE=F SLTH=T;
#tr 71 M=EGR_MAX_USED_ENTRIES TSE=T SLTH=T;
#tr 71 M=EGR_MAX_USED_ENTRIES TSE=T SLTH=F;
#echo " EGR_MMU_REQUESTS";
#tr 50 M=EGR_MMU_REQUESTS;
#tr 51 M=EGR_MMU_REQUESTS;
#tr 52 M=EGR_MMU_REQUESTS;
#tr 71 M=EGR_MMU_REQUESTS TSE=F SLTH=T;
#tr 71 M=EGR_MMU_REQUESTS TSE=T SLTH=T;
#tr 71 M=EGR_MMU_REQUESTS TSE=T SLTH=F;
echo " EGR_MOD_MAP_TABLE";
tr 50 M=EGR_MOD_MAP_TABLE;
tr 51 M=EGR_MOD_MAP_TABLE;
tr 52 M=EGR_MOD_MAP_TABLE;
tr 71 M=EGR_MOD_MAP_TABLE TSE=F SLTH=T;
tr 71 M=EGR_MOD_MAP_TABLE TSE=T SLTH=T;
tr 71 M=EGR_MOD_MAP_TABLE TSE=T SLTH=F;
echo " EGR_MPLS_PRI_MAPPING";
tr 50 M=EGR_MPLS_PRI_MAPPING;
tr 51 M=EGR_MPLS_PRI_MAPPING;
tr 52 M=EGR_MPLS_PRI_MAPPING;
tr 71 M=EGR_MPLS_PRI_MAPPING TSE=F SLTH=T;
tr 71 M=EGR_MPLS_PRI_MAPPING TSE=T SLTH=T;
tr 71 M=EGR_MPLS_PRI_MAPPING TSE=T SLTH=F;
echo " EGR_OAM_MAC_ADDRESS";
tr 50 M=EGR_OAM_MAC_ADDRESS;
tr 51 M=EGR_OAM_MAC_ADDRESS;
tr 52 M=EGR_OAM_MAC_ADDRESS;
tr 71 M=EGR_OAM_MAC_ADDRESS TSE=F SLTH=T;
tr 71 M=EGR_OAM_MAC_ADDRESS TSE=T SLTH=T;
tr 71 M=EGR_OAM_MAC_ADDRESS TSE=T SLTH=F;
echo " EGR_PERQ_XMT_COUNTERS";
tr 50 M=EGR_PERQ_XMT_COUNTERS;
tr 51 M=EGR_PERQ_XMT_COUNTERS;
tr 52 M=EGR_PERQ_XMT_COUNTERS;
tr 71 M=EGR_PERQ_XMT_COUNTERS TSE=F SLTH=T;
tr 71 M=EGR_PERQ_XMT_COUNTERS TSE=T SLTH=T;
tr 71 M=EGR_PERQ_XMT_COUNTERS TSE=T SLTH=F;
echo " EGR_PORT_CREDIT_RESET";
tr 50 M=EGR_PORT_CREDIT_RESET;
tr 51 M=EGR_PORT_CREDIT_RESET;
tr 52 M=EGR_PORT_CREDIT_RESET;
tr 71 M=EGR_PORT_CREDIT_RESET TSE=F SLTH=T;
tr 71 M=EGR_PORT_CREDIT_RESET TSE=T SLTH=T;
tr 71 M=EGR_PORT_CREDIT_RESET TSE=T SLTH=F;
#echo " EGR_PORT_REQUESTS";
#tr 50 M=EGR_PORT_REQUESTS;
#tr 51 M=EGR_PORT_REQUESTS;
#tr 52 M=EGR_PORT_REQUESTS;
#tr 71 M=EGR_PORT_REQUESTS TSE=F SLTH=T;
#tr 71 M=EGR_PORT_REQUESTS TSE=T SLTH=T;
#tr 71 M=EGR_PORT_REQUESTS TSE=T SLTH=F;
echo " EGR_PRI_CNG_MAP";
tr 50 M=EGR_PRI_CNG_MAP;
tr 51 M=EGR_PRI_CNG_MAP;
tr 52 M=EGR_PRI_CNG_MAP;
tr 71 M=EGR_PRI_CNG_MAP TSE=F SLTH=T;
tr 71 M=EGR_PRI_CNG_MAP TSE=T SLTH=T;
tr 71 M=EGR_PRI_CNG_MAP TSE=T SLTH=F;
echo " EGR_VLAN";
tr 50 M=EGR_VLAN;
tr 51 M=EGR_VLAN;
tr 52 M=EGR_VLAN;
tr 71 M=EGR_VLAN TSE=F SLTH=T;
tr 71 M=EGR_VLAN TSE=T SLTH=T;
tr 71 M=EGR_VLAN TSE=T SLTH=F;
echo " EGR_VLAN_STG";
tr 50 M=EGR_VLAN_STG;
tr 51 M=EGR_VLAN_STG;
tr 52 M=EGR_VLAN_STG;
tr 71 M=EGR_VLAN_STG TSE=F SLTH=T;
tr 71 M=EGR_VLAN_STG TSE=T SLTH=T;
tr 71 M=EGR_VLAN_STG TSE=T SLTH=F;
echo " EGR_VLAN_TAG_ACTION_PROFILE";
tr 50 M=EGR_VLAN_TAG_ACTION_PROFILE;
tr 51 M=EGR_VLAN_TAG_ACTION_PROFILE;
tr 52 M=EGR_VLAN_TAG_ACTION_PROFILE;
tr 71 M=EGR_VLAN_TAG_ACTION_PROFILE TSE=F SLTH=T;
tr 71 M=EGR_VLAN_TAG_ACTION_PROFILE TSE=T SLTH=T;
tr 71 M=EGR_VLAN_TAG_ACTION_PROFILE TSE=T SLTH=F;
echo " EGR_VLAN_XLATE";
tr 50 M=EGR_VLAN_XLATE;
tr 51 M=EGR_VLAN_XLATE;
tr 52 M=EGR_VLAN_XLATE;
tr 71 M=EGR_VLAN_XLATE TSE=F SLTH=T;
tr 71 M=EGR_VLAN_XLATE TSE=T SLTH=T;
tr 71 M=EGR_VLAN_XLATE TSE=T SLTH=F;
echo " EM_MTP_INDEX";
tr 50 M=EM_MTP_INDEX;
tr 51 M=EM_MTP_INDEX;
tr 52 M=EM_MTP_INDEX;
tr 71 M=EM_MTP_INDEX TSE=F SLTH=T;
tr 71 M=EM_MTP_INDEX TSE=T SLTH=T;
tr 71 M=EM_MTP_INDEX TSE=T SLTH=F;
echo " FP_COUNTER_TABLE";
tr 50 M=FP_COUNTER_TABLE;
tr 51 M=FP_COUNTER_TABLE;
tr 52 M=FP_COUNTER_TABLE;
tr 71 M=FP_COUNTER_TABLE TSE=F SLTH=T;
tr 71 M=FP_COUNTER_TABLE TSE=T SLTH=T;
tr 71 M=FP_COUNTER_TABLE TSE=T SLTH=F;
echo " FP_METER_TABLE";
tr 50 M=FP_METER_TABLE;
tr 51 M=FP_METER_TABLE;
tr 52 M=FP_METER_TABLE;
tr 71 M=FP_METER_TABLE TSE=F SLTH=T;
tr 71 M=FP_METER_TABLE TSE=T SLTH=T;
tr 71 M=FP_METER_TABLE TSE=T SLTH=F;
echo " FP_POLICY_TABLE";
tr 50 M=FP_POLICY_TABLE;
tr 51 M=FP_POLICY_TABLE;
tr 52 M=FP_POLICY_TABLE;
tr 71 M=FP_POLICY_TABLE TSE=F SLTH=T;
tr 71 M=FP_POLICY_TABLE TSE=T SLTH=T;
tr 71 M=FP_POLICY_TABLE TSE=T SLTH=F;
echo " FP_PORT_FIELD_SEL";
tr 50 M=FP_PORT_FIELD_SEL;
tr 51 M=FP_PORT_FIELD_SEL;
tr 52 M=FP_PORT_FIELD_SEL;
tr 71 M=FP_PORT_FIELD_SEL TSE=F SLTH=T;
tr 71 M=FP_PORT_FIELD_SEL TSE=T SLTH=T;
tr 71 M=FP_PORT_FIELD_SEL TSE=T SLTH=F;
echo " FP_PORT_METER_MAP";
tr 50 M=FP_PORT_METER_MAP;
tr 51 M=FP_PORT_METER_MAP;
tr 52 M=FP_PORT_METER_MAP;
tr 71 M=FP_PORT_METER_MAP TSE=F SLTH=T;
tr 71 M=FP_PORT_METER_MAP TSE=T SLTH=T;
tr 71 M=FP_PORT_METER_MAP TSE=T SLTH=F;
echo " FP_RANGE_CHECK";
tr 50 M=FP_RANGE_CHECK;
tr 51 M=FP_RANGE_CHECK;
tr 52 M=FP_RANGE_CHECK;
tr 71 M=FP_RANGE_CHECK TSE=F SLTH=T;
tr 71 M=FP_RANGE_CHECK TSE=T SLTH=T;
tr 71 M=FP_RANGE_CHECK TSE=T SLTH=F;
echo " FP_SLICE_KEY_CONTROL";
tr 50 M=FP_SLICE_KEY_CONTROL;
#tr 51 M=FP_SLICE_KEY_CONTROL;
#tr 52 M=FP_SLICE_KEY_CONTROL;
tr 71 M=FP_SLICE_KEY_CONTROL TSE=F SLTH=T;
tr 71 M=FP_SLICE_KEY_CONTROL TSE=T SLTH=T;
tr 71 M=FP_SLICE_KEY_CONTROL TSE=T SLTH=F;
echo " FP_SLICE_MAP";
tr 50 M=FP_SLICE_MAP;
#tr 51 M=FP_SLICE_MAP;
#tr 52 M=FP_SLICE_MAP;
tr 71 M=FP_SLICE_MAP TSE=F SLTH=T;
tr 71 M=FP_SLICE_MAP TSE=T SLTH=T;
tr 71 M=FP_SLICE_MAP TSE=T SLTH=F;
echo " FP_STORM_CONTROL_METERS";
tr 50 M=FP_STORM_CONTROL_METERS;
tr 51 M=FP_STORM_CONTROL_METERS;
tr 52 M=FP_STORM_CONTROL_METERS;
tr 71 M=FP_STORM_CONTROL_METERS TSE=F SLTH=T;
tr 71 M=FP_STORM_CONTROL_METERS TSE=T SLTH=T;
tr 71 M=FP_STORM_CONTROL_METERS TSE=T SLTH=F;
echo " FP_UDF_OFFSET";
tr 50 M=FP_UDF_OFFSET;
tr 51 M=FP_UDF_OFFSET;
tr 52 M=FP_UDF_OFFSET;
tr 71 M=FP_UDF_OFFSET TSE=F SLTH=T;
tr 71 M=FP_UDF_OFFSET TSE=T SLTH=T;
tr 71 M=FP_UDF_OFFSET TSE=T SLTH=F;
echo " HG_TRUNK_FAILOVER_SET";
tr 50 M=HG_TRUNK_FAILOVER_SET;
tr 51 M=HG_TRUNK_FAILOVER_SET;
tr 52 M=HG_TRUNK_FAILOVER_SET;
tr 71 M=HG_TRUNK_FAILOVER_SET TSE=F SLTH=T;
tr 71 M=HG_TRUNK_FAILOVER_SET TSE=T SLTH=T;
tr 71 M=HG_TRUNK_FAILOVER_SET TSE=T SLTH=F;
echo " IARB_TDM_TABLE";
tr 50 M=IARB_TDM_TABLE;
tr 51 M=IARB_TDM_TABLE;
tr 52 M=IARB_TDM_TABLE;
tr 71 M=IARB_TDM_TABLE TSE=F SLTH=T;
tr 71 M=IARB_TDM_TABLE TSE=T SLTH=T;
tr 71 M=IARB_TDM_TABLE TSE=T SLTH=F;
#echo " IFP_PORT_FIELD_SEL";
#HWALIAS to FP_PORT_FIELD_SEL -- NOTEST
#tr 50 M=IFP_PORT_FIELD_SEL;
#tr 51 M=IFP_PORT_FIELD_SEL;
#tr 52 M=IFP_PORT_FIELD_SEL;
#tr 71 M=IFP_PORT_FIELD_SEL TSE=F SLTH=T;
#tr 71 M=IFP_PORT_FIELD_SEL TSE=T SLTH=T;
#tr 71 M=IFP_PORT_FIELD_SEL TSE=T SLTH=F;
echo " IFP_REDIRECTION_PROFILE";
tr 50 M=IFP_REDIRECTION_PROFILE;
tr 51 M=IFP_REDIRECTION_PROFILE;
tr 52 M=IFP_REDIRECTION_PROFILE;
tr 71 M=IFP_REDIRECTION_PROFILE TSE=F SLTH=T;
tr 71 M=IFP_REDIRECTION_PROFILE TSE=T SLTH=T;
tr 71 M=IFP_REDIRECTION_PROFILE TSE=T SLTH=F;
echo " IM_MTP_INDEX";
tr 50 M=IM_MTP_INDEX;
tr 51 M=IM_MTP_INDEX;
tr 52 M=IM_MTP_INDEX;
tr 71 M=IM_MTP_INDEX TSE=F SLTH=T;
tr 71 M=IM_MTP_INDEX TSE=T SLTH=T;
tr 71 M=IM_MTP_INDEX TSE=T SLTH=F;
echo " ING_1588_INGRESS_CTRL";
tr 50 M=ING_1588_INGRESS_CTRL;
tr 51 M=ING_1588_INGRESS_CTRL;
tr 52 M=ING_1588_INGRESS_CTRL;
tr 71 M=ING_1588_INGRESS_CTRL TSE=F SLTH=T;
tr 71 M=ING_1588_INGRESS_CTRL TSE=T SLTH=T;
tr 71 M=ING_1588_INGRESS_CTRL TSE=T SLTH=F;
echo " ING_IPV6_MC_RESERVED_ADDRESS";
tr 50 M=ING_IPV6_MC_RESERVED_ADDRESS;
#tr 51 M=ING_IPV6_MC_RESERVED_ADDRESS;
#tr 52 M=ING_IPV6_MC_RESERVED_ADDRESS;
tr 71 M=ING_IPV6_MC_RESERVED_ADDRESS TSE=F SLTH=T;
tr 71 M=ING_IPV6_MC_RESERVED_ADDRESS TSE=T SLTH=T;
tr 71 M=ING_IPV6_MC_RESERVED_ADDRESS TSE=T SLTH=F;
echo " ING_L3_NEXT_HOP";
tr 50 M=ING_L3_NEXT_HOP;
tr 51 M=ING_L3_NEXT_HOP;
tr 52 M=ING_L3_NEXT_HOP;
tr 71 M=ING_L3_NEXT_HOP TSE=F SLTH=T;
tr 71 M=ING_L3_NEXT_HOP TSE=T SLTH=T;
tr 71 M=ING_L3_NEXT_HOP TSE=T SLTH=F;
echo " ING_MOD_MAP_TABLE";
tr 50 M=ING_MOD_MAP_TABLE;
tr 51 M=ING_MOD_MAP_TABLE;
tr 52 M=ING_MOD_MAP_TABLE;
tr 71 M=ING_MOD_MAP_TABLE TSE=F SLTH=T;
tr 71 M=ING_MOD_MAP_TABLE TSE=T SLTH=T;
tr 71 M=ING_MOD_MAP_TABLE TSE=T SLTH=F;
echo " ING_PHYSICAL_TO_LOGICAL_PORT_NUMBER_MAPPING_TABLE";
tr 50 M=ING_PHYSICAL_TO_LOGICAL_PORT_NUMBER_MAPPING_TABLE;
tr 51 M=ING_PHYSICAL_TO_LOGICAL_PORT_NUMBER_MAPPING_TABLE;
tr 52 M=ING_PHYSICAL_TO_LOGICAL_PORT_NUMBER_MAPPING_TABLE;
tr 71 M=ING_PHYSICAL_TO_LOGICAL_PORT_NUMBER_MAPPING_TABLE TSE=F SLTH=T;
tr 71 M=ING_PHYSICAL_TO_LOGICAL_PORT_NUMBER_MAPPING_TABLE TSE=T SLTH=T;
tr 71 M=ING_PHYSICAL_TO_LOGICAL_PORT_NUMBER_MAPPING_TABLE TSE=T SLTH=F;
echo " ING_PRI_CNG_MAP";
tr 50 M=ING_PRI_CNG_MAP;
tr 51 M=ING_PRI_CNG_MAP;
tr 52 M=ING_PRI_CNG_MAP;
tr 71 M=ING_PRI_CNG_MAP TSE=F SLTH=T;
tr 71 M=ING_PRI_CNG_MAP TSE=T SLTH=T;
tr 71 M=ING_PRI_CNG_MAP TSE=T SLTH=F;
echo " ING_SERVICE_PRI_MAP";
tr 50 M=ING_SERVICE_PRI_MAP;
tr 51 M=ING_SERVICE_PRI_MAP;
tr 52 M=ING_SERVICE_PRI_MAP;
tr 71 M=ING_SERVICE_PRI_MAP TSE=F SLTH=T;
tr 71 M=ING_SERVICE_PRI_MAP TSE=T SLTH=T;
tr 71 M=ING_SERVICE_PRI_MAP TSE=T SLTH=F;
echo " ING_VLAN_RANGE";
tr 50 M=ING_VLAN_RANGE;
tr 51 M=ING_VLAN_RANGE;
tr 52 M=ING_VLAN_RANGE;
tr 71 M=ING_VLAN_RANGE TSE=F SLTH=T;
tr 71 M=ING_VLAN_RANGE TSE=T SLTH=T;
tr 71 M=ING_VLAN_RANGE TSE=T SLTH=F;
echo " ING_VLAN_TAG_ACTION_PROFILE";
tr 50 M=ING_VLAN_TAG_ACTION_PROFILE;
tr 51 M=ING_VLAN_TAG_ACTION_PROFILE;
tr 52 M=ING_VLAN_TAG_ACTION_PROFILE;
tr 71 M=ING_VLAN_TAG_ACTION_PROFILE TSE=F SLTH=T;
tr 71 M=ING_VLAN_TAG_ACTION_PROFILE TSE=T SLTH=T;
tr 71 M=ING_VLAN_TAG_ACTION_PROFILE TSE=T SLTH=F;
echo " INITIAL_ING_L3_NEXT_HOP";
tr 50 M=INITIAL_ING_L3_NEXT_HOP;
tr 51 M=INITIAL_ING_L3_NEXT_HOP;
tr 52 M=INITIAL_ING_L3_NEXT_HOP;
tr 71 M=INITIAL_ING_L3_NEXT_HOP TSE=F SLTH=T;
tr 71 M=INITIAL_ING_L3_NEXT_HOP TSE=T SLTH=T;
tr 71 M=INITIAL_ING_L3_NEXT_HOP TSE=T SLTH=F;
echo " IPORT_TABLE";
tr 50 M=IPORT_TABLE;
tr 51 M=IPORT_TABLE;
tr 52 M=IPORT_TABLE;
tr 71 M=IPORT_TABLE TSE=F SLTH=T;
tr 71 M=IPORT_TABLE TSE=T SLTH=T;
tr 71 M=IPORT_TABLE TSE=T SLTH=F;
echo " IPV4_IN_IPV6_PREFIX_MATCH_TABLE";
tr 50 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE;
tr 51 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE;
tr 52 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE;
tr 71 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE TSE=F SLTH=T;
tr 71 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE TSE=T SLTH=T;
tr 71 M=IPV4_IN_IPV6_PREFIX_MATCH_TABLE TSE=T SLTH=F;
echo " IPV6_PROXY_ENABLE_TABLE";
tr 50 M=IPV6_PROXY_ENABLE_TABLE;
tr 51 M=IPV6_PROXY_ENABLE_TABLE;
tr 52 M=IPV6_PROXY_ENABLE_TABLE;
tr 71 M=IPV6_PROXY_ENABLE_TABLE TSE=F SLTH=T;
tr 71 M=IPV6_PROXY_ENABLE_TABLE TSE=T SLTH=T;
tr 71 M=IPV6_PROXY_ENABLE_TABLE TSE=T SLTH=F;
echo " L2MC";
tr 50 M=L2MC;
tr 51 M=L2MC;
tr 52 M=L2MC;
tr 71 M=L2MC TSE=F SLTH=T;
tr 71 M=L2MC TSE=T SLTH=T;
tr 71 M=L2MC TSE=T SLTH=F;
echo " L2X";
tr 50 M=L2X;
tr 51 M=L2X;
tr 52 M=L2X;
tr 71 M=L2X TSE=F SLTH=T;
tr 71 M=L2X TSE=T SLTH=T;
tr 71 M=L2X TSE=T SLTH=F;
echo " L2_ENTRY_ONLY";
tr 50 M=L2_ENTRY_ONLY;
tr 51 M=L2_ENTRY_ONLY;
tr 52 M=L2_ENTRY_ONLY;
tr 71 M=L2_ENTRY_ONLY TSE=F SLTH=T;
tr 71 M=L2_ENTRY_ONLY TSE=T SLTH=T;
tr 71 M=L2_ENTRY_ONLY TSE=T SLTH=F;
echo " L2_ENTRY_OVERFLOW";
tr 50 M=L2_ENTRY_OVERFLOW;
#tr 51 M=L2_ENTRY_OVERFLOW;
#tr 52 M=L2_ENTRY_OVERFLOW;
tr 71 M=L2_ENTRY_OVERFLOW TSE=F SLTH=T;
tr 71 M=L2_ENTRY_OVERFLOW TSE=T SLTH=T;
tr 71 M=L2_ENTRY_OVERFLOW TSE=T SLTH=F;
echo " L2_HITDA_ONLY";
tr 50 M=L2_HITDA_ONLY;
tr 51 M=L2_HITDA_ONLY;
tr 52 M=L2_HITDA_ONLY;
tr 71 M=L2_HITDA_ONLY TSE=F SLTH=T;
tr 71 M=L2_HITDA_ONLY TSE=T SLTH=T;
tr 71 M=L2_HITDA_ONLY TSE=T SLTH=F;
echo " L2_HITSA_ONLY";
tr 50 M=L2_HITSA_ONLY;
tr 51 M=L2_HITSA_ONLY;
tr 52 M=L2_HITSA_ONLY;
tr 71 M=L2_HITSA_ONLY TSE=F SLTH=T;
tr 71 M=L2_HITSA_ONLY TSE=T SLTH=T;
tr 71 M=L2_HITSA_ONLY TSE=T SLTH=F;
echo " L2_MOD_FIFO";
tr 50 M=L2_MOD_FIFO;
tr 51 M=L2_MOD_FIFO;
tr 52 M=L2_MOD_FIFO;
tr 71 M=L2_MOD_FIFO TSE=F SLTH=T;
tr 71 M=L2_MOD_FIFO TSE=T SLTH=T;
tr 71 M=L2_MOD_FIFO TSE=T SLTH=F;
echo " L2_USER_ENTRY";
tr 50 M=L2_USER_ENTRY;
tr 51 M=L2_USER_ENTRY;
tr 52 M=L2_USER_ENTRY;
tr 71 M=L2_USER_ENTRY TSE=F SLTH=T;
tr 71 M=L2_USER_ENTRY TSE=T SLTH=T;
tr 71 M=L2_USER_ENTRY TSE=T SLTH=F;
echo " L2_USER_ENTRY_DATA_ONLY";
tr 50 M=L2_USER_ENTRY_DATA_ONLY;
tr 51 M=L2_USER_ENTRY_DATA_ONLY;
tr 52 M=L2_USER_ENTRY_DATA_ONLY;
tr 71 M=L2_USER_ENTRY_DATA_ONLY TSE=F SLTH=T;
tr 71 M=L2_USER_ENTRY_DATA_ONLY TSE=T SLTH=T;
tr 71 M=L2_USER_ENTRY_DATA_ONLY TSE=T SLTH=F;
echo " L2_USER_ENTRY_ONLY";
tr 50 M=L2_USER_ENTRY_ONLY;
tr 51 M=L2_USER_ENTRY_ONLY;
tr 52 M=L2_USER_ENTRY_ONLY;
tr 71 M=L2_USER_ENTRY_ONLY TSE=F SLTH=T;
tr 71 M=L2_USER_ENTRY_ONLY TSE=T SLTH=T;
tr 71 M=L2_USER_ENTRY_ONLY TSE=T SLTH=F;
echo " L3_DEFIP";
tr 50 M=L3_DEFIP;
tr 51 M=L3_DEFIP;
tr 52 M=L3_DEFIP;
tr 71 M=L3_DEFIP TSE=F SLTH=T;
tr 71 M=L3_DEFIP TSE=T SLTH=T;
tr 71 M=L3_DEFIP TSE=T SLTH=F;
echo " L3_DEFIP_DATA_ONLY";
tr 50 M=L3_DEFIP_DATA_ONLY;
tr 51 M=L3_DEFIP_DATA_ONLY;
tr 52 M=L3_DEFIP_DATA_ONLY;
tr 71 M=L3_DEFIP_DATA_ONLY TSE=F SLTH=T;
tr 71 M=L3_DEFIP_DATA_ONLY TSE=T SLTH=T;
tr 71 M=L3_DEFIP_DATA_ONLY TSE=T SLTH=F;
echo " L3_DEFIP_HIT_ONLY";
tr 50 M=L3_DEFIP_HIT_ONLY;
tr 51 M=L3_DEFIP_HIT_ONLY;
tr 52 M=L3_DEFIP_HIT_ONLY;
tr 71 M=L3_DEFIP_HIT_ONLY TSE=F SLTH=T;
tr 71 M=L3_DEFIP_HIT_ONLY TSE=T SLTH=T;
tr 71 M=L3_DEFIP_HIT_ONLY TSE=T SLTH=F;
echo " L3_DEFIP_ONLY";
tr 50 M=L3_DEFIP_ONLY;
tr 51 M=L3_DEFIP_ONLY;
tr 52 M=L3_DEFIP_ONLY;
tr 71 M=L3_DEFIP_ONLY TSE=F SLTH=T;
tr 71 M=L3_DEFIP_ONLY TSE=T SLTH=T;
tr 71 M=L3_DEFIP_ONLY TSE=T SLTH=F;
echo " L3_ENTRY_HIT_ONLY";
tr 50 M=L3_ENTRY_HIT_ONLY;
tr 51 M=L3_ENTRY_HIT_ONLY;
tr 52 M=L3_ENTRY_HIT_ONLY;
tr 71 M=L3_ENTRY_HIT_ONLY TSE=F SLTH=T;
tr 71 M=L3_ENTRY_HIT_ONLY TSE=T SLTH=T;
tr 71 M=L3_ENTRY_HIT_ONLY TSE=T SLTH=F;
echo " L3_ENTRY_IPV4_MULTICAST";
tr 50 M=L3_ENTRY_IPV4_MULTICAST;
tr 51 M=L3_ENTRY_IPV4_MULTICAST;
tr 52 M=L3_ENTRY_IPV4_MULTICAST;
tr 71 M=L3_ENTRY_IPV4_MULTICAST TSE=F SLTH=T;
tr 71 M=L3_ENTRY_IPV4_MULTICAST TSE=T SLTH=T;
tr 71 M=L3_ENTRY_IPV4_MULTICAST TSE=T SLTH=F;
echo " L3_ENTRY_IPV4_UNICAST";
tr 50 M=L3_ENTRY_IPV4_UNICAST;
tr 51 M=L3_ENTRY_IPV4_UNICAST;
tr 52 M=L3_ENTRY_IPV4_UNICAST;
tr 71 M=L3_ENTRY_IPV4_UNICAST TSE=F SLTH=T;
tr 71 M=L3_ENTRY_IPV4_UNICAST TSE=T SLTH=T;
tr 71 M=L3_ENTRY_IPV4_UNICAST TSE=T SLTH=F;
echo " L3_ENTRY_IPV6_MULTICAST";
tr 50 M=L3_ENTRY_IPV6_MULTICAST;
tr 51 M=L3_ENTRY_IPV6_MULTICAST;
tr 52 M=L3_ENTRY_IPV6_MULTICAST;
tr 71 M=L3_ENTRY_IPV6_MULTICAST TSE=F SLTH=T;
tr 71 M=L3_ENTRY_IPV6_MULTICAST TSE=T SLTH=T;
tr 71 M=L3_ENTRY_IPV6_MULTICAST TSE=T SLTH=F;
echo " L3_ENTRY_IPV6_UNICAST";
tr 50 M=L3_ENTRY_IPV6_UNICAST;
tr 51 M=L3_ENTRY_IPV6_UNICAST;
tr 52 M=L3_ENTRY_IPV6_UNICAST;
tr 71 M=L3_ENTRY_IPV6_UNICAST TSE=F SLTH=T;
tr 71 M=L3_ENTRY_IPV6_UNICAST TSE=T SLTH=T;
tr 71 M=L3_ENTRY_IPV6_UNICAST TSE=T SLTH=F;
echo " L3_ENTRY_ONLY";
tr 50 M=L3_ENTRY_ONLY;
tr 51 M=L3_ENTRY_ONLY;
tr 52 M=L3_ENTRY_ONLY;
tr 71 M=L3_ENTRY_ONLY TSE=F SLTH=T;
tr 71 M=L3_ENTRY_ONLY TSE=T SLTH=T;
tr 71 M=L3_ENTRY_ONLY TSE=T SLTH=F;
echo " L3_ENTRY_VALID_ONLY";
tr 50 M=L3_ENTRY_VALID_ONLY;
tr 51 M=L3_ENTRY_VALID_ONLY;
tr 52 M=L3_ENTRY_VALID_ONLY;
tr 71 M=L3_ENTRY_VALID_ONLY TSE=F SLTH=T;
tr 71 M=L3_ENTRY_VALID_ONLY TSE=T SLTH=T;
tr 71 M=L3_ENTRY_VALID_ONLY TSE=T SLTH=F;
echo " L3_IPMC";
tr 50 M=L3_IPMC;
tr 51 M=L3_IPMC;
tr 52 M=L3_IPMC;
tr 71 M=L3_IPMC TSE=F SLTH=T;
tr 71 M=L3_IPMC TSE=T SLTH=T;
tr 71 M=L3_IPMC TSE=T SLTH=F;
echo " L3_MTU_VALUES";
tr 50 M=L3_MTU_VALUES;
tr 51 M=L3_MTU_VALUES;
tr 52 M=L3_MTU_VALUES;
tr 71 M=L3_MTU_VALUES TSE=F SLTH=T;
tr 71 M=L3_MTU_VALUES TSE=T SLTH=T;
tr 71 M=L3_MTU_VALUES TSE=T SLTH=F;
echo " LMEP";
tr 50 M=LMEP;
tr 51 M=LMEP;
tr 52 M=LMEP;
tr 71 M=LMEP TSE=F SLTH=T;
tr 71 M=LMEP TSE=T SLTH=T;
tr 71 M=LMEP TSE=T SLTH=F;
echo " LMEP_DA";
tr 50 M=LMEP_DA;
tr 51 M=LMEP_DA;
tr 52 M=LMEP_DA;
tr 71 M=LMEP_DA TSE=F SLTH=T;
tr 71 M=LMEP_DA TSE=T SLTH=T;
tr 71 M=LMEP_DA TSE=T SLTH=F;
echo " LPORT_TAB";
tr 50 M=LPORT_TAB;
tr 51 M=LPORT_TAB;
tr 52 M=LPORT_TAB;
tr 71 M=LPORT_TAB TSE=F SLTH=T;
tr 71 M=LPORT_TAB TSE=T SLTH=T;
tr 71 M=LPORT_TAB TSE=T SLTH=F;
echo " MAC_BLOCK";
tr 50 M=MAC_BLOCK;
tr 51 M=MAC_BLOCK;
tr 52 M=MAC_BLOCK;
tr 71 M=MAC_BLOCK TSE=F SLTH=T;
tr 71 M=MAC_BLOCK TSE=T SLTH=T;
tr 71 M=MAC_BLOCK TSE=T SLTH=F;
echo " MAID_REDUCTION";
tr 50 M=MAID_REDUCTION;
tr 51 M=MAID_REDUCTION;
tr 52 M=MAID_REDUCTION;
tr 71 M=MAID_REDUCTION TSE=F SLTH=T;
tr 71 M=MAID_REDUCTION TSE=T SLTH=T;
tr 71 M=MAID_REDUCTION TSE=T SLTH=F;
echo " MA_INDEX";
tr 50 M=MA_INDEX;
tr 51 M=MA_INDEX;
tr 52 M=MA_INDEX;
tr 71 M=MA_INDEX TSE=F SLTH=T;
tr 71 M=MA_INDEX TSE=T SLTH=T;
tr 71 M=MA_INDEX TSE=T SLTH=F;
echo " MA_STATE";
tr 50 M=MA_STATE;
tr 51 M=MA_STATE;
tr 52 M=MA_STATE;
tr 71 M=MA_STATE TSE=F SLTH=T;
tr 71 M=MA_STATE TSE=T SLTH=T;
tr 71 M=MA_STATE TSE=T SLTH=F;
echo " MMU_AGING_CTR";
tr 50 M=MMU_AGING_CTR;
tr 51 M=MMU_AGING_CTR;
tr 52 M=MMU_AGING_CTR;
tr 71 M=MMU_AGING_CTR TSE=F SLTH=T;
tr 71 M=MMU_AGING_CTR TSE=T SLTH=T;
tr 71 M=MMU_AGING_CTR TSE=T SLTH=F;
echo " MMU_AGING_EXP";
tr 50 M=MMU_AGING_EXP;
tr 51 M=MMU_AGING_EXP;
tr 52 M=MMU_AGING_EXP;
tr 71 M=MMU_AGING_EXP TSE=F SLTH=T;
tr 71 M=MMU_AGING_EXP TSE=T SLTH=T;
tr 71 M=MMU_AGING_EXP TSE=T SLTH=F;
echo " MMU_ARB_TDM_TABLE";
tr 50 M=MMU_ARB_TDM_TABLE;
tr 51 M=MMU_ARB_TDM_TABLE;
tr 52 M=MMU_ARB_TDM_TABLE;
tr 71 M=MMU_ARB_TDM_TABLE TSE=F SLTH=T;
tr 71 M=MMU_ARB_TDM_TABLE TSE=T SLTH=T;
tr 71 M=MMU_ARB_TDM_TABLE TSE=T SLTH=F;
echo " MMU_CBPCellHeader";
tr 50 M=MMU_CBPCellHeader;
tr 51 M=MMU_CBPCellHeader;
tr 52 M=MMU_CBPCellHeader;
tr 71 M=MMU_CBPCellHeader TSE=F SLTH=T;
tr 71 M=MMU_CBPCellHeader TSE=T SLTH=T;
tr 71 M=MMU_CBPCellHeader TSE=T SLTH=F;
echo " MMU_CBPData0";
tr 50 M=MMU_CBPData0;
tr 51 M=MMU_CBPData0;
tr 52 M=MMU_CBPData0;
tr 71 M=MMU_CBPData0 TSE=F SLTH=T;
tr 71 M=MMU_CBPData0 TSE=T SLTH=T;
tr 71 M=MMU_CBPData0 TSE=T SLTH=F;
echo " MMU_CBPData1";
tr 50 M=MMU_CBPData1;
tr 51 M=MMU_CBPData1;
tr 52 M=MMU_CBPData1;
tr 71 M=MMU_CBPData1 TSE=F SLTH=T;
tr 71 M=MMU_CBPData1 TSE=T SLTH=T;
tr 71 M=MMU_CBPData1 TSE=T SLTH=F;
echo " MMU_CBPData2";
tr 50 M=MMU_CBPData2;
tr 51 M=MMU_CBPData2;
tr 52 M=MMU_CBPData2;
tr 71 M=MMU_CBPData2 TSE=F SLTH=T;
tr 71 M=MMU_CBPData2 TSE=T SLTH=T;
tr 71 M=MMU_CBPData2 TSE=T SLTH=F;
echo " MMU_CBPData3";
tr 50 M=MMU_CBPData3;
tr 51 M=MMU_CBPData3;
tr 52 M=MMU_CBPData3;
tr 71 M=MMU_CBPData3 TSE=F SLTH=T;
tr 71 M=MMU_CBPData3 TSE=T SLTH=T;
tr 71 M=MMU_CBPData3 TSE=T SLTH=F;
echo " MMU_CBPData4";
tr 50 M=MMU_CBPData4;
tr 51 M=MMU_CBPData4;
tr 52 M=MMU_CBPData4;
tr 71 M=MMU_CBPData4 TSE=F SLTH=T;
tr 71 M=MMU_CBPData4 TSE=T SLTH=T;
tr 71 M=MMU_CBPData4 TSE=T SLTH=F;
echo " MMU_CBPData5";
tr 50 M=MMU_CBPData5;
tr 51 M=MMU_CBPData5;
tr 52 M=MMU_CBPData5;
tr 71 M=MMU_CBPData5 TSE=F SLTH=T;
tr 71 M=MMU_CBPData5 TSE=T SLTH=T;
tr 71 M=MMU_CBPData5 TSE=T SLTH=F;
echo " MMU_CBPData6";
tr 50 M=MMU_CBPData6;
tr 51 M=MMU_CBPData6;
tr 52 M=MMU_CBPData6;
tr 71 M=MMU_CBPData6 TSE=F SLTH=T;
tr 71 M=MMU_CBPData6 TSE=T SLTH=T;
tr 71 M=MMU_CBPData6 TSE=T SLTH=F;
echo " MMU_CBPData7";
tr 50 M=MMU_CBPData7;
tr 51 M=MMU_CBPData7;
tr 52 M=MMU_CBPData7;
tr 71 M=MMU_CBPData7 TSE=F SLTH=T;
tr 71 M=MMU_CBPData7 TSE=T SLTH=T;
tr 71 M=MMU_CBPData7 TSE=T SLTH=F;
echo " MMU_CBPPktHeader0";
tr 50 M=MMU_CBPPktHeader0;
tr 51 M=MMU_CBPPktHeader0;
tr 52 M=MMU_CBPPktHeader0;
tr 71 M=MMU_CBPPktHeader0 TSE=F SLTH=T;
tr 71 M=MMU_CBPPktHeader0 TSE=T SLTH=T;
tr 71 M=MMU_CBPPktHeader0 TSE=T SLTH=F;
echo " MMU_CBPPktHeader1";
tr 50 M=MMU_CBPPktHeader1;
tr 51 M=MMU_CBPPktHeader1;
tr 52 M=MMU_CBPPktHeader1;
tr 71 M=MMU_CBPPktHeader1 TSE=F SLTH=T;
tr 71 M=MMU_CBPPktHeader1 TSE=T SLTH=T;
tr 71 M=MMU_CBPPktHeader1 TSE=T SLTH=F;
echo " MMU_CBPPktHeader2";
tr 50 M=MMU_CBPPktHeader2;
tr 51 M=MMU_CBPPktHeader2;
tr 52 M=MMU_CBPPktHeader2;
tr 71 M=MMU_CBPPktHeader2 TSE=F SLTH=T;
tr 71 M=MMU_CBPPktHeader2 TSE=T SLTH=T;
tr 71 M=MMU_CBPPktHeader2 TSE=T SLTH=F;
echo " MMU_CBPPktHeader_EXT";
tr 50 M=MMU_CBPPktHeader_EXT;
tr 51 M=MMU_CBPPktHeader_EXT;
tr 52 M=MMU_CBPPktHeader_EXT;
tr 71 M=MMU_CBPPktHeader_EXT TSE=F SLTH=T;
tr 71 M=MMU_CBPPktHeader_EXT TSE=T SLTH=T;
tr 71 M=MMU_CBPPktHeader_EXT TSE=T SLTH=F;
echo " MMU_CCP";
tr 50 M=MMU_CCP;
tr 51 M=MMU_CCP;
tr 52 M=MMU_CCP;
tr 71 M=MMU_CCP TSE=F SLTH=T;
tr 71 M=MMU_CCP TSE=T SLTH=T;
tr 71 M=MMU_CCP TSE=T SLTH=F;
echo " MMU_CFAP";
tr 50 M=MMU_CFAP;
tr 51 M=MMU_CFAP;
tr 52 M=MMU_CFAP;
tr 71 M=MMU_CFAP TSE=F SLTH=T;
tr 71 M=MMU_CFAP TSE=T SLTH=T;
tr 71 M=MMU_CFAP TSE=T SLTH=F;
echo " MMU_IPMC_GROUP_TBL0";
tr 50 M=MMU_IPMC_GROUP_TBL0;
tr 51 M=MMU_IPMC_GROUP_TBL0;
tr 52 M=MMU_IPMC_GROUP_TBL0;
tr 71 M=MMU_IPMC_GROUP_TBL0 TSE=F SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL0 TSE=T SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL0 TSE=T SLTH=F;
echo " MMU_IPMC_GROUP_TBL1";
tr 50 M=MMU_IPMC_GROUP_TBL1;
tr 51 M=MMU_IPMC_GROUP_TBL1;
tr 52 M=MMU_IPMC_GROUP_TBL1;
tr 71 M=MMU_IPMC_GROUP_TBL1 TSE=F SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL1 TSE=T SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL1 TSE=T SLTH=F;
echo " MMU_IPMC_GROUP_TBL2";
tr 50 M=MMU_IPMC_GROUP_TBL2;
tr 51 M=MMU_IPMC_GROUP_TBL2;
tr 52 M=MMU_IPMC_GROUP_TBL2;
tr 71 M=MMU_IPMC_GROUP_TBL2 TSE=F SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL2 TSE=T SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL2 TSE=T SLTH=F;
echo " MMU_IPMC_GROUP_TBL3";
tr 50 M=MMU_IPMC_GROUP_TBL3;
tr 51 M=MMU_IPMC_GROUP_TBL3;
tr 52 M=MMU_IPMC_GROUP_TBL3;
tr 71 M=MMU_IPMC_GROUP_TBL3 TSE=F SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL3 TSE=T SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL3 TSE=T SLTH=F;
echo " MMU_IPMC_GROUP_TBL4";
tr 50 M=MMU_IPMC_GROUP_TBL4;
tr 51 M=MMU_IPMC_GROUP_TBL4;
tr 52 M=MMU_IPMC_GROUP_TBL4;
tr 71 M=MMU_IPMC_GROUP_TBL4 TSE=F SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL4 TSE=T SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL4 TSE=T SLTH=F;
echo " MMU_IPMC_GROUP_TBL5";
tr 50 M=MMU_IPMC_GROUP_TBL5;
tr 51 M=MMU_IPMC_GROUP_TBL5;
tr 52 M=MMU_IPMC_GROUP_TBL5;
tr 71 M=MMU_IPMC_GROUP_TBL5 TSE=F SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL5 TSE=T SLTH=T;
tr 71 M=MMU_IPMC_GROUP_TBL5 TSE=T SLTH=F;
echo " MMU_IPMC_VLAN_TBL";
tr 50 M=MMU_IPMC_VLAN_TBL;
tr 51 M=MMU_IPMC_VLAN_TBL;
tr 52 M=MMU_IPMC_VLAN_TBL;
tr 71 M=MMU_IPMC_VLAN_TBL TSE=F SLTH=T;
tr 71 M=MMU_IPMC_VLAN_TBL TSE=T SLTH=T;
tr 71 M=MMU_IPMC_VLAN_TBL TSE=T SLTH=F;
echo " MMU_MAX_BUCKET_GPORT";
tr 50 M=MMU_MAX_BUCKET_GPORT;
tr 51 M=MMU_MAX_BUCKET_GPORT;
tr 52 M=MMU_MAX_BUCKET_GPORT;
tr 71 M=MMU_MAX_BUCKET_GPORT TSE=F SLTH=T;
tr 71 M=MMU_MAX_BUCKET_GPORT TSE=T SLTH=T;
tr 71 M=MMU_MAX_BUCKET_GPORT TSE=T SLTH=F;
echo " MMU_MIN_BUCKET_GPORT";
tr 50 M=MMU_MIN_BUCKET_GPORT;
tr 51 M=MMU_MIN_BUCKET_GPORT;
tr 52 M=MMU_MIN_BUCKET_GPORT;
tr 71 M=MMU_MIN_BUCKET_GPORT TSE=F SLTH=T;
tr 71 M=MMU_MIN_BUCKET_GPORT TSE=T SLTH=T;
tr 71 M=MMU_MIN_BUCKET_GPORT TSE=T SLTH=F;
echo " MMU_XQ0";
tr 50 M=MMU_XQ0;
tr 51 M=MMU_XQ0;
tr 52 M=MMU_XQ0;
tr 71 M=MMU_XQ0 TSE=F SLTH=T;
tr 71 M=MMU_XQ0 TSE=T SLTH=T;
tr 71 M=MMU_XQ0 TSE=T SLTH=F;
echo " MMU_XQ10";
tr 50 M=MMU_XQ10;
tr 51 M=MMU_XQ10;
tr 52 M=MMU_XQ10;
tr 71 M=MMU_XQ10 TSE=F SLTH=T;
tr 71 M=MMU_XQ10 TSE=T SLTH=T;
tr 71 M=MMU_XQ10 TSE=T SLTH=F;
echo " MMU_XQ11";
tr 50 M=MMU_XQ11;
tr 51 M=MMU_XQ11;
tr 52 M=MMU_XQ11;
tr 71 M=MMU_XQ11 TSE=F SLTH=T;
tr 71 M=MMU_XQ11 TSE=T SLTH=T;
tr 71 M=MMU_XQ11 TSE=T SLTH=F;
echo " MMU_XQ12";
tr 50 M=MMU_XQ12;
tr 51 M=MMU_XQ12;
tr 52 M=MMU_XQ12;
tr 71 M=MMU_XQ12 TSE=F SLTH=T;
tr 71 M=MMU_XQ12 TSE=T SLTH=T;
tr 71 M=MMU_XQ12 TSE=T SLTH=F;
echo " MMU_XQ13";
tr 50 M=MMU_XQ13;
tr 51 M=MMU_XQ13;
tr 52 M=MMU_XQ13;
tr 71 M=MMU_XQ13 TSE=F SLTH=T;
tr 71 M=MMU_XQ13 TSE=T SLTH=T;
tr 71 M=MMU_XQ13 TSE=T SLTH=F;
echo " MMU_XQ14";
tr 50 M=MMU_XQ14;
tr 51 M=MMU_XQ14;
tr 52 M=MMU_XQ14;
tr 71 M=MMU_XQ14 TSE=F SLTH=T;
tr 71 M=MMU_XQ14 TSE=T SLTH=T;
tr 71 M=MMU_XQ14 TSE=T SLTH=F;
echo " MMU_XQ15";
tr 50 M=MMU_XQ15;
tr 51 M=MMU_XQ15;
tr 52 M=MMU_XQ15;
tr 71 M=MMU_XQ15 TSE=F SLTH=T;
tr 71 M=MMU_XQ15 TSE=T SLTH=T;
tr 71 M=MMU_XQ15 TSE=T SLTH=F;
echo " MMU_XQ16";
tr 50 M=MMU_XQ16;
tr 51 M=MMU_XQ16;
tr 52 M=MMU_XQ16;
tr 71 M=MMU_XQ16 TSE=F SLTH=T;
tr 71 M=MMU_XQ16 TSE=T SLTH=T;
tr 71 M=MMU_XQ16 TSE=T SLTH=F;
echo " MMU_XQ17";
tr 50 M=MMU_XQ17;
tr 51 M=MMU_XQ17;
tr 52 M=MMU_XQ17;
tr 71 M=MMU_XQ17 TSE=F SLTH=T;
tr 71 M=MMU_XQ17 TSE=T SLTH=T;
tr 71 M=MMU_XQ17 TSE=T SLTH=F;
echo " MMU_XQ18";
tr 50 M=MMU_XQ18;
tr 51 M=MMU_XQ18;
tr 52 M=MMU_XQ18;
tr 71 M=MMU_XQ18 TSE=F SLTH=T;
tr 71 M=MMU_XQ18 TSE=T SLTH=T;
tr 71 M=MMU_XQ18 TSE=T SLTH=F;
echo " MMU_XQ19";
tr 50 M=MMU_XQ19;
tr 51 M=MMU_XQ19;
tr 52 M=MMU_XQ19;
tr 71 M=MMU_XQ19 TSE=F SLTH=T;
tr 71 M=MMU_XQ19 TSE=T SLTH=T;
tr 71 M=MMU_XQ19 TSE=T SLTH=F;
echo " MMU_XQ2";
tr 50 M=MMU_XQ2;
tr 51 M=MMU_XQ2;
tr 52 M=MMU_XQ2;
tr 71 M=MMU_XQ2 TSE=F SLTH=T;
tr 71 M=MMU_XQ2 TSE=T SLTH=T;
tr 71 M=MMU_XQ2 TSE=T SLTH=F;
echo " MMU_XQ20";
tr 50 M=MMU_XQ20;
tr 51 M=MMU_XQ20;
tr 52 M=MMU_XQ20;
tr 71 M=MMU_XQ20 TSE=F SLTH=T;
tr 71 M=MMU_XQ20 TSE=T SLTH=T;
tr 71 M=MMU_XQ20 TSE=T SLTH=F;
echo " MMU_XQ21";
tr 50 M=MMU_XQ21;
tr 51 M=MMU_XQ21;
tr 52 M=MMU_XQ21;
tr 71 M=MMU_XQ21 TSE=F SLTH=T;
tr 71 M=MMU_XQ21 TSE=T SLTH=T;
tr 71 M=MMU_XQ21 TSE=T SLTH=F;
echo " MMU_XQ22";
tr 50 M=MMU_XQ22;
tr 51 M=MMU_XQ22;
tr 52 M=MMU_XQ22;
tr 71 M=MMU_XQ22 TSE=F SLTH=T;
tr 71 M=MMU_XQ22 TSE=T SLTH=T;
tr 71 M=MMU_XQ22 TSE=T SLTH=F;
echo " MMU_XQ23";
tr 50 M=MMU_XQ23;
tr 51 M=MMU_XQ23;
tr 52 M=MMU_XQ23;
tr 71 M=MMU_XQ23 TSE=F SLTH=T;
tr 71 M=MMU_XQ23 TSE=T SLTH=T;
tr 71 M=MMU_XQ23 TSE=T SLTH=F;
echo " MMU_XQ24";
tr 50 M=MMU_XQ24;
tr 51 M=MMU_XQ24;
tr 52 M=MMU_XQ24;
tr 71 M=MMU_XQ24 TSE=F SLTH=T;
tr 71 M=MMU_XQ24 TSE=T SLTH=T;
tr 71 M=MMU_XQ24 TSE=T SLTH=F;
echo " MMU_XQ25";
tr 50 M=MMU_XQ25;
tr 51 M=MMU_XQ25;
tr 52 M=MMU_XQ25;
tr 71 M=MMU_XQ25 TSE=F SLTH=T;
tr 71 M=MMU_XQ25 TSE=T SLTH=T;
tr 71 M=MMU_XQ25 TSE=T SLTH=F;
echo " MMU_XQ26";
tr 50 M=MMU_XQ26;
tr 51 M=MMU_XQ26;
tr 52 M=MMU_XQ26;
tr 71 M=MMU_XQ26 TSE=F SLTH=T;
tr 71 M=MMU_XQ26 TSE=T SLTH=T;
tr 71 M=MMU_XQ26 TSE=T SLTH=F;
echo " MMU_XQ27";
tr 50 M=MMU_XQ27;
tr 51 M=MMU_XQ27;
tr 52 M=MMU_XQ27;
tr 71 M=MMU_XQ27 TSE=F SLTH=T;
tr 71 M=MMU_XQ27 TSE=T SLTH=T;
tr 71 M=MMU_XQ27 TSE=T SLTH=F;
echo " MMU_XQ28";
tr 50 M=MMU_XQ28;
tr 51 M=MMU_XQ28;
tr 52 M=MMU_XQ28;
tr 71 M=MMU_XQ28 TSE=F SLTH=T;
tr 71 M=MMU_XQ28 TSE=T SLTH=T;
tr 71 M=MMU_XQ28 TSE=T SLTH=F;
echo " MMU_XQ29";
tr 50 M=MMU_XQ29;
tr 51 M=MMU_XQ29;
tr 52 M=MMU_XQ29;
tr 71 M=MMU_XQ29 TSE=F SLTH=T;
tr 71 M=MMU_XQ29 TSE=T SLTH=T;
tr 71 M=MMU_XQ29 TSE=T SLTH=F;
echo " MMU_XQ3";
tr 50 M=MMU_XQ3;
tr 51 M=MMU_XQ3;
tr 52 M=MMU_XQ3;
tr 71 M=MMU_XQ3 TSE=F SLTH=T;
tr 71 M=MMU_XQ3 TSE=T SLTH=T;
tr 71 M=MMU_XQ3 TSE=T SLTH=F;
echo " MMU_XQ4";
tr 50 M=MMU_XQ4;
tr 51 M=MMU_XQ4;
tr 52 M=MMU_XQ4;
tr 71 M=MMU_XQ4 TSE=F SLTH=T;
tr 71 M=MMU_XQ4 TSE=T SLTH=T;
tr 71 M=MMU_XQ4 TSE=T SLTH=F;
echo " MMU_XQ5";
tr 50 M=MMU_XQ5;
tr 51 M=MMU_XQ5;
tr 52 M=MMU_XQ5;
tr 71 M=MMU_XQ5 TSE=F SLTH=T;
tr 71 M=MMU_XQ5 TSE=T SLTH=T;
tr 71 M=MMU_XQ5 TSE=T SLTH=F;
echo " MMU_XQ6";
tr 50 M=MMU_XQ6;
tr 51 M=MMU_XQ6;
tr 52 M=MMU_XQ6;
tr 71 M=MMU_XQ6 TSE=F SLTH=T;
tr 71 M=MMU_XQ6 TSE=T SLTH=T;
tr 71 M=MMU_XQ6 TSE=T SLTH=F;
echo " MMU_XQ7";
tr 50 M=MMU_XQ7;
tr 51 M=MMU_XQ7;
tr 52 M=MMU_XQ7;
tr 71 M=MMU_XQ7 TSE=F SLTH=T;
tr 71 M=MMU_XQ7 TSE=T SLTH=T;
tr 71 M=MMU_XQ7 TSE=T SLTH=F;
echo " MMU_XQ8";
tr 50 M=MMU_XQ8;
tr 51 M=MMU_XQ8;
tr 52 M=MMU_XQ8;
tr 71 M=MMU_XQ8 TSE=F SLTH=T;
tr 71 M=MMU_XQ8 TSE=T SLTH=T;
tr 71 M=MMU_XQ8 TSE=T SLTH=F;
echo " MMU_XQ9";
tr 50 M=MMU_XQ9;
tr 51 M=MMU_XQ9;
tr 52 M=MMU_XQ9;
tr 71 M=MMU_XQ9 TSE=F SLTH=T;
tr 71 M=MMU_XQ9 TSE=T SLTH=T;
tr 71 M=MMU_XQ9 TSE=T SLTH=F;
echo " MODPORT_MAP";
tr 50 M=MODPORT_MAP;
tr 51 M=MODPORT_MAP;
tr 52 M=MODPORT_MAP;
tr 71 M=MODPORT_MAP TSE=F SLTH=T;
tr 71 M=MODPORT_MAP TSE=T SLTH=T;
tr 71 M=MODPORT_MAP TSE=T SLTH=F;
echo " MODPORT_MAP_EM";
tr 50 M=MODPORT_MAP_EM;
tr 51 M=MODPORT_MAP_EM;
tr 52 M=MODPORT_MAP_EM;
tr 71 M=MODPORT_MAP_EM TSE=F SLTH=T;
tr 71 M=MODPORT_MAP_EM TSE=T SLTH=T;
tr 71 M=MODPORT_MAP_EM TSE=T SLTH=F;
echo " MODPORT_MAP_IM";
tr 50 M=MODPORT_MAP_IM;
tr 51 M=MODPORT_MAP_IM;
tr 52 M=MODPORT_MAP_IM;
tr 71 M=MODPORT_MAP_IM TSE=F SLTH=T;
tr 71 M=MODPORT_MAP_IM TSE=T SLTH=T;
tr 71 M=MODPORT_MAP_IM TSE=T SLTH=F;
echo " MODPORT_MAP_SW";
tr 50 M=MODPORT_MAP_SW;
tr 51 M=MODPORT_MAP_SW;
tr 52 M=MODPORT_MAP_SW;
tr 71 M=MODPORT_MAP_SW TSE=F SLTH=T;
tr 71 M=MODPORT_MAP_SW TSE=T SLTH=T;
tr 71 M=MODPORT_MAP_SW TSE=T SLTH=F;
echo " NONUCAST_TRUNK_BLOCK_MASK";
tr 50 M=NONUCAST_TRUNK_BLOCK_MASK;
tr 51 M=NONUCAST_TRUNK_BLOCK_MASK;
tr 52 M=NONUCAST_TRUNK_BLOCK_MASK;
tr 71 M=NONUCAST_TRUNK_BLOCK_MASK TSE=F SLTH=T;
tr 71 M=NONUCAST_TRUNK_BLOCK_MASK TSE=T SLTH=T;
tr 71 M=NONUCAST_TRUNK_BLOCK_MASK TSE=T SLTH=F;
echo " OAM_LM_COUNTERS";
tr 50 M=OAM_LM_COUNTERS;
tr 51 M=OAM_LM_COUNTERS;
tr 52 M=OAM_LM_COUNTERS;
tr 71 M=OAM_LM_COUNTERS TSE=F SLTH=T;
tr 71 M=OAM_LM_COUNTERS TSE=T SLTH=T;
tr 71 M=OAM_LM_COUNTERS TSE=T SLTH=F;
echo " OAM_OPCODE_CONTROL_PROFILE";
tr 50 M=OAM_OPCODE_CONTROL_PROFILE;
tr 51 M=OAM_OPCODE_CONTROL_PROFILE;
tr 52 M=OAM_OPCODE_CONTROL_PROFILE;
tr 71 M=OAM_OPCODE_CONTROL_PROFILE TSE=F SLTH=T;
tr 71 M=OAM_OPCODE_CONTROL_PROFILE TSE=T SLTH=T;
tr 71 M=OAM_OPCODE_CONTROL_PROFILE TSE=T SLTH=F;
echo " PORT_COS_MAP";
tr 50 M=PORT_COS_MAP;
tr 51 M=PORT_COS_MAP;
tr 52 M=PORT_COS_MAP;
tr 71 M=PORT_COS_MAP TSE=F SLTH=T;
tr 71 M=PORT_COS_MAP TSE=T SLTH=T;
tr 71 M=PORT_COS_MAP TSE=T SLTH=F;
echo " PORT_OR_TRUNK_MAC_COUNT";
tr 50 M=PORT_OR_TRUNK_MAC_COUNT;
tr 51 M=PORT_OR_TRUNK_MAC_COUNT;
tr 52 M=PORT_OR_TRUNK_MAC_COUNT;
tr 71 M=PORT_OR_TRUNK_MAC_COUNT TSE=F SLTH=T;
tr 71 M=PORT_OR_TRUNK_MAC_COUNT TSE=T SLTH=T;
tr 71 M=PORT_OR_TRUNK_MAC_COUNT TSE=T SLTH=F;
echo " PORT_OR_TRUNK_MAC_LIMIT";
tr 50 M=PORT_OR_TRUNK_MAC_LIMIT;
tr 51 M=PORT_OR_TRUNK_MAC_LIMIT;
tr 52 M=PORT_OR_TRUNK_MAC_LIMIT;
tr 71 M=PORT_OR_TRUNK_MAC_LIMIT TSE=F SLTH=T;
tr 71 M=PORT_OR_TRUNK_MAC_LIMIT TSE=T SLTH=T;
tr 71 M=PORT_OR_TRUNK_MAC_LIMIT TSE=T SLTH=F;
echo " PORT_TAB";
tr 50 M=PORT_TAB;
tr 51 M=PORT_TAB;
tr 52 M=PORT_TAB;
tr 71 M=PORT_TAB TSE=F SLTH=T;
tr 71 M=PORT_TAB TSE=T SLTH=T;
tr 71 M=PORT_TAB TSE=T SLTH=F;
echo " RMEP";
tr 50 M=RMEP;
tr 51 M=RMEP;
tr 52 M=RMEP;
tr 71 M=RMEP TSE=F SLTH=T;
tr 71 M=RMEP TSE=T SLTH=T;
tr 71 M=RMEP TSE=T SLTH=F;
echo " SER_MEMORY";
tr 50 M=SER_MEMORY;
tr 51 M=SER_MEMORY;
tr 52 M=SER_MEMORY;
tr 71 M=SER_MEMORY TSE=F SLTH=T;
tr 71 M=SER_MEMORY TSE=T SLTH=T;
tr 71 M=SER_MEMORY TSE=T SLTH=F;
echo " SER_RESULT_0";
tr 50 M=SER_RESULT_0;
#tr 51 M=SER_RESULT_0;
#tr 52 M=SER_RESULT_0;
tr 71 M=SER_RESULT_0 TSE=F SLTH=T;
tr 71 M=SER_RESULT_0 TSE=T SLTH=T;
tr 71 M=SER_RESULT_0 TSE=T SLTH=F;
echo " SER_RESULT_1";
tr 50 M=SER_RESULT_1;
#tr 51 M=SER_RESULT_1;
#tr 52 M=SER_RESULT_1;
tr 71 M=SER_RESULT_1 TSE=F SLTH=T;
tr 71 M=SER_RESULT_1 TSE=T SLTH=T;
tr 71 M=SER_RESULT_1 TSE=T SLTH=F;
echo " SER_RESULT_DATA_0";
tr 50 M=SER_RESULT_DATA_0;
#tr 51 M=SER_RESULT_DATA_0;
#tr 52 M=SER_RESULT_DATA_0;
tr 71 M=SER_RESULT_DATA_0 TSE=F SLTH=T;
tr 71 M=SER_RESULT_DATA_0 TSE=T SLTH=T;
tr 71 M=SER_RESULT_DATA_0 TSE=T SLTH=F;
echo " SER_RESULT_DATA_1";
tr 50 M=SER_RESULT_DATA_1;
#tr 51 M=SER_RESULT_DATA_1;
#tr 52 M=SER_RESULT_DATA_1;
tr 71 M=SER_RESULT_DATA_1 TSE=F SLTH=T;
tr 71 M=SER_RESULT_DATA_1 TSE=T SLTH=T;
tr 71 M=SER_RESULT_DATA_1 TSE=T SLTH=F;
echo " SER_RESULT_EXPECTED_0";
tr 50 M=SER_RESULT_EXPECTED_0;
#tr 51 M=SER_RESULT_EXPECTED_0;
#tr 52 M=SER_RESULT_EXPECTED_0;
tr 71 M=SER_RESULT_EXPECTED_0 TSE=F SLTH=T;
tr 71 M=SER_RESULT_EXPECTED_0 TSE=T SLTH=T;
tr 71 M=SER_RESULT_EXPECTED_0 TSE=T SLTH=F;
echo " SER_RESULT_EXPECTED_1";
tr 50 M=SER_RESULT_EXPECTED_1;
#tr 51 M=SER_RESULT_EXPECTED_1;
#tr 52 M=SER_RESULT_EXPECTED_1;
tr 71 M=SER_RESULT_EXPECTED_1 TSE=F SLTH=T;
tr 71 M=SER_RESULT_EXPECTED_1 TSE=T SLTH=T;
tr 71 M=SER_RESULT_EXPECTED_1 TSE=T SLTH=F;
echo " SOURCE_TRUNK_MAP_TABLE";
tr 50 M=SOURCE_TRUNK_MAP_TABLE;
tr 51 M=SOURCE_TRUNK_MAP_TABLE;
tr 52 M=SOURCE_TRUNK_MAP_TABLE;
tr 71 M=SOURCE_TRUNK_MAP_TABLE TSE=F SLTH=T;
tr 71 M=SOURCE_TRUNK_MAP_TABLE TSE=T SLTH=T;
tr 71 M=SOURCE_TRUNK_MAP_TABLE TSE=T SLTH=F;
echo " SRC_MODID_BLOCK";
tr 50 M=SRC_MODID_BLOCK;
tr 51 M=SRC_MODID_BLOCK;
tr 52 M=SRC_MODID_BLOCK;
tr 71 M=SRC_MODID_BLOCK TSE=F SLTH=T;
tr 71 M=SRC_MODID_BLOCK TSE=T SLTH=T;
tr 71 M=SRC_MODID_BLOCK TSE=T SLTH=F;
echo " STG_TAB";
tr 50 M=STG_TAB;
tr 51 M=STG_TAB;
tr 52 M=STG_TAB;
tr 71 M=STG_TAB TSE=F SLTH=T;
tr 71 M=STG_TAB TSE=T SLTH=T;
tr 71 M=STG_TAB TSE=T SLTH=F;
echo " SYSTEM_CONFIG_TABLE";
tr 50 M=SYSTEM_CONFIG_TABLE;
tr 51 M=SYSTEM_CONFIG_TABLE;
tr 52 M=SYSTEM_CONFIG_TABLE;
tr 71 M=SYSTEM_CONFIG_TABLE TSE=F SLTH=T;
tr 71 M=SYSTEM_CONFIG_TABLE TSE=T SLTH=T;
tr 71 M=SYSTEM_CONFIG_TABLE TSE=T SLTH=F;
echo " TCP_FN";
tr 50 M=TCP_FN;
tr 51 M=TCP_FN;
tr 52 M=TCP_FN;
tr 71 M=TCP_FN TSE=F SLTH=T;
tr 71 M=TCP_FN TSE=T SLTH=T;
tr 71 M=TCP_FN TSE=T SLTH=F;
echo " TOS_FN";
tr 50 M=TOS_FN;
tr 51 M=TOS_FN;
tr 52 M=TOS_FN;
tr 71 M=TOS_FN TSE=F SLTH=T;
tr 71 M=TOS_FN TSE=T SLTH=T;
tr 71 M=TOS_FN TSE=T SLTH=F;
echo " TRUNK32_CONFIG_TABLE";
tr 50 M=TRUNK32_CONFIG_TABLE;
tr 51 M=TRUNK32_CONFIG_TABLE;
tr 52 M=TRUNK32_CONFIG_TABLE;
tr 71 M=TRUNK32_CONFIG_TABLE TSE=F SLTH=T;
tr 71 M=TRUNK32_CONFIG_TABLE TSE=T SLTH=T;
tr 71 M=TRUNK32_CONFIG_TABLE TSE=T SLTH=F;
echo " TRUNK32_PORT_TABLE";
tr 50 M=TRUNK32_PORT_TABLE;
tr 51 M=TRUNK32_PORT_TABLE;
tr 52 M=TRUNK32_PORT_TABLE;
tr 71 M=TRUNK32_PORT_TABLE TSE=F SLTH=T;
tr 71 M=TRUNK32_PORT_TABLE TSE=T SLTH=T;
tr 71 M=TRUNK32_PORT_TABLE TSE=T SLTH=F;
echo " TRUNK_BITMAP";
tr 50 M=TRUNK_BITMAP;
tr 51 M=TRUNK_BITMAP;
tr 52 M=TRUNK_BITMAP;
tr 71 M=TRUNK_BITMAP TSE=F SLTH=T;
tr 71 M=TRUNK_BITMAP TSE=T SLTH=T;
tr 71 M=TRUNK_BITMAP TSE=T SLTH=F;
echo " TRUNK_EGR_MASK";
tr 50 M=TRUNK_EGR_MASK;
tr 51 M=TRUNK_EGR_MASK;
tr 52 M=TRUNK_EGR_MASK;
tr 71 M=TRUNK_EGR_MASK TSE=F SLTH=T;
tr 71 M=TRUNK_EGR_MASK TSE=T SLTH=T;
tr 71 M=TRUNK_EGR_MASK TSE=T SLTH=F;
echo " TRUNK_GROUP";
tr 50 M=TRUNK_GROUP;
tr 51 M=TRUNK_GROUP;
tr 52 M=TRUNK_GROUP;
tr 71 M=TRUNK_GROUP TSE=F SLTH=T;
tr 71 M=TRUNK_GROUP TSE=T SLTH=T;
tr 71 M=TRUNK_GROUP TSE=T SLTH=F;
echo " TTL_FN";
tr 50 M=TTL_FN;
tr 51 M=TTL_FN;
tr 52 M=TTL_FN;
tr 71 M=TTL_FN TSE=F SLTH=T;
tr 71 M=TTL_FN TSE=T SLTH=T;
tr 71 M=TTL_FN TSE=T SLTH=F;
echo " VLAN_MAC";
tr 50 M=VLAN_MAC;
tr 51 M=VLAN_MAC;
tr 52 M=VLAN_MAC;
tr 71 M=VLAN_MAC TSE=F SLTH=T;
tr 71 M=VLAN_MAC TSE=T SLTH=T;
tr 71 M=VLAN_MAC TSE=T SLTH=F;
echo " VLAN_OR_VFI_MAC_COUNT";
tr 50 M=VLAN_OR_VFI_MAC_COUNT;
tr 51 M=VLAN_OR_VFI_MAC_COUNT;
tr 52 M=VLAN_OR_VFI_MAC_COUNT;
tr 71 M=VLAN_OR_VFI_MAC_COUNT TSE=F SLTH=T;
tr 71 M=VLAN_OR_VFI_MAC_COUNT TSE=T SLTH=T;
tr 71 M=VLAN_OR_VFI_MAC_COUNT TSE=T SLTH=F;
echo " VLAN_OR_VFI_MAC_LIMIT";
tr 50 M=VLAN_OR_VFI_MAC_LIMIT;
tr 51 M=VLAN_OR_VFI_MAC_LIMIT;
tr 52 M=VLAN_OR_VFI_MAC_LIMIT;
tr 71 M=VLAN_OR_VFI_MAC_LIMIT TSE=F SLTH=T;
tr 71 M=VLAN_OR_VFI_MAC_LIMIT TSE=T SLTH=T;
tr 71 M=VLAN_OR_VFI_MAC_LIMIT TSE=T SLTH=F;
echo " VLAN_PROFILE_2";
tr 50 M=VLAN_PROFILE_2;
tr 51 M=VLAN_PROFILE_2;
tr 52 M=VLAN_PROFILE_2;
tr 71 M=VLAN_PROFILE_2 TSE=F SLTH=T;
tr 71 M=VLAN_PROFILE_2 TSE=T SLTH=T;
tr 71 M=VLAN_PROFILE_2 TSE=T SLTH=F;
echo " VLAN_PROFILE_TAB";
tr 50 M=VLAN_PROFILE_TAB;
tr 51 M=VLAN_PROFILE_TAB;
tr 52 M=VLAN_PROFILE_TAB;
tr 71 M=VLAN_PROFILE_TAB TSE=F SLTH=T;
tr 71 M=VLAN_PROFILE_TAB TSE=T SLTH=T;
tr 71 M=VLAN_PROFILE_TAB TSE=T SLTH=F;
echo " VLAN_PROTOCOL";
tr 50 M=VLAN_PROTOCOL;
tr 51 M=VLAN_PROTOCOL;
tr 52 M=VLAN_PROTOCOL;
tr 71 M=VLAN_PROTOCOL TSE=F SLTH=T;
tr 71 M=VLAN_PROTOCOL TSE=T SLTH=T;
tr 71 M=VLAN_PROTOCOL TSE=T SLTH=F;
echo " VLAN_PROTOCOL_DATA";
tr 50 M=VLAN_PROTOCOL_DATA;
tr 51 M=VLAN_PROTOCOL_DATA;
tr 52 M=VLAN_PROTOCOL_DATA;
tr 71 M=VLAN_PROTOCOL_DATA TSE=F SLTH=T;
tr 71 M=VLAN_PROTOCOL_DATA TSE=T SLTH=T;
tr 71 M=VLAN_PROTOCOL_DATA TSE=T SLTH=F;
echo " VLAN_SUBNET";
tr 50 M=VLAN_SUBNET;
tr 51 M=VLAN_SUBNET;
tr 52 M=VLAN_SUBNET;
tr 71 M=VLAN_SUBNET TSE=F SLTH=T;
tr 71 M=VLAN_SUBNET TSE=T SLTH=T;
tr 71 M=VLAN_SUBNET TSE=T SLTH=F;
echo " VLAN_SUBNET_DATA_ONLY";
tr 50 M=VLAN_SUBNET_DATA_ONLY;
tr 51 M=VLAN_SUBNET_DATA_ONLY;
tr 52 M=VLAN_SUBNET_DATA_ONLY;
tr 71 M=VLAN_SUBNET_DATA_ONLY TSE=F SLTH=T;
tr 71 M=VLAN_SUBNET_DATA_ONLY TSE=T SLTH=T;
tr 71 M=VLAN_SUBNET_DATA_ONLY TSE=T SLTH=F;
echo " VLAN_SUBNET_ONLY";
tr 50 M=VLAN_SUBNET_ONLY;
tr 51 M=VLAN_SUBNET_ONLY;
tr 52 M=VLAN_SUBNET_ONLY;
tr 71 M=VLAN_SUBNET_ONLY TSE=F SLTH=T;
tr 71 M=VLAN_SUBNET_ONLY TSE=T SLTH=T;
tr 71 M=VLAN_SUBNET_ONLY TSE=T SLTH=F;
echo " VLAN_TAB";
tr 50 M=VLAN_TAB;
tr 51 M=VLAN_TAB;
tr 52 M=VLAN_TAB;
tr 71 M=VLAN_TAB TSE=F SLTH=T;
tr 71 M=VLAN_TAB TSE=T SLTH=T;
tr 71 M=VLAN_TAB TSE=T SLTH=F;
echo " VLAN_XLATE";
tr 50 M=VLAN_XLATE;
tr 51 M=VLAN_XLATE;
tr 52 M=VLAN_XLATE;
tr 71 M=VLAN_XLATE TSE=F SLTH=T;
tr 71 M=VLAN_XLATE TSE=T SLTH=T;
tr 71 M=VLAN_XLATE TSE=T SLTH=F;
#echo " XLPORT_WC_UCMEM_DATA";
#tr 50 M=XLPORT_WC_UCMEM_DATA;
#tr 51 M=XLPORT_WC_UCMEM_DATA;
#tr 52 M=XLPORT_WC_UCMEM_DATA;
#tr 71 M=XLPORT_WC_UCMEM_DATA TSE=F SLTH=T;
#tr 71 M=XLPORT_WC_UCMEM_DATA TSE=T SLTH=T;
#tr 71 M=XLPORT_WC_UCMEM_DATA TSE=T SLTH=F;

# Re-initialize to clean up of various read/wrires to MMU memories
set rct=true
rcload rc.soc
counter off
l2mode off
linkscan off

echo "Running counter width verification test ..."
tr 30
$done

echo "Running counter read/write test ..."
tr 31
$done

#L2/L3 hashing tests
echo "Running L2 insert/delete/lookup test ..."
tr 32
$done

echo "Running L2 overflow insert test ..."
tr 33
$done

echo "Running L2 hash test ..."
tr 34
$done

echo "Running L2 delete by port test ..."
tr 35
$done

echo "Running L2 delete by vlan test ..."
tr 36
$done

echo "Running IPV4 overflow insert test ..."
tr 87 IPMCEnable=False
tr 87 IPMCEnable=True
$done

echo "Running IPV6 hash test ..."
tr 88 IPMCEnable=False
tr 88 IPMCEnable=True
$done

echo "Running IPV6 overflow insert test ..."
tr 85 IPMCEnable=False
tr 85 IPMCEnable=True
$done

echo "Running IPV6 hash test ..."
tr 86 IPMCEnable=False
tr 86 IPMCEnable=True
$done

echo "Running VLAN translate overflow insert test ..."
tr 100

echo "Running VLAN translate hash tests ..."
tr 101 hash=0
tr 101 hash=1
tr 101 hash=2
tr 101 hash=3
tr 101 hash=4
tr 101 hash=5
$done

echo "Running Egress VLAN translate overflow insert test ..."
tr 102
$done

echo "Running Egress VLAN translate hash tests ..."
tr 103 hash=0
tr 103 hash=1
tr 103 hash=2
tr 103 hash=3
tr 103 hash=4
tr 103 hash=5
$done
#no mpls in hurricane
#echo "Running MPLS overflow insert test ..."
#tr 104
#$done

#echo "Running MPLS hash tests ..."
#tr 105 hash=0
#tr 105 hash=1
#tr 105 hash=2
#tr 105 hash=3
#tr 105 hash=4
#tr 105 hash=5
#$done

echo "Running MDIO Linkscan test"
tr 60 readcount=10000
$done

echo "Testing CPU DMA loopback ..."
tr 17 c=5
$done

echo "Testing CPU DMA, Scatter/Gather Reload ..."
tr 22
$done

echo "Testing CPU DMA, Scatter/Gather Simple ..."
tr 23
$done

echo "Testing CPU DMA, Scatter/Gather Random ..."
tr 24
$done

tr 48 smi=103 dmi=42 vlan=5 pi=0x11335577 sendm=single
$done

echo "Running PHY loopback V2 on all ports ..."
tr 49 smi=52 dmi=83 vlan=23 pi=0x01204007
$done

#Internal snake Loopback
echo "Running internal snake on all ports, MAC loopback ..."
tr 39 loopbackmode=mac snakepath=two PBM=e
$done

echo "Running internal snake on all ports, PHY loopback ..."
tr 39 loopbackmode=phy snakepath=two PBM=e
$done

echo "Running MAC loopback TR 18 on all ports ..."
tr 18 pbm=ge speed=10
tr 18 pbm=ge speed=100
tr 18 pbm=ge speed=1000
tr 18 pbm=xe speed=10G
tr 18 pbm=hg speed=10G
tr 18 pbm=hg speed=MAX
$done

echo "Running PHY loopback TR 19 on all ports ..."
tr 19 pbm=ge speed=10
tr 19 pbm=ge speed=100
tr 19 pbm=ge speed=1000
tr 19 pbm=xe speed=10G
tr 19 pbm=hg speed=10G
tr 19 pbm=hg speed=MAX
$done

#Traffic Test
echo "Running Traffic Test in MAC mode ..."
tr 72 RM=MAC PBM=e
$done

echo "Running Traffic Test in PHY mode ..."
tr 72 RM=PHY PBM=e
$done

#SNMP
echo "SNMP MIB Object Test"
tr 73
$done

# Show status
date
tl
local returnCode $?

echo Tests Complete.  Reinitializing ...
config refresh
rcload rc.soc
counter off
l2mode off

# We want to show the return code from the tl command which
# lists the results. The automated test infrastructure keys off of this
# value
echo "testsuite: finished: sanity: $returnCode"

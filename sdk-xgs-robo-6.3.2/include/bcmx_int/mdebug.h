/*
 * $Id: mdebug.h 1.5 Broadcom SDK $
 * 
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef __BCMX_MDEBUG_H__
#define __BCMX_MDEBUG_H__

#include <soc/cmmdebug.h>

#define BCMX_DBG_PORT           SOC_CM_MDEBUG_OPT_ENC(0)
#define BCMX_DBG_VLAN           SOC_CM_MDEBUG_OPT_ENC(1)
#define BCMX_DBG_L2             SOC_CM_MDEBUG_OPT_ENC(2)
#define BCMX_DBG_L3             SOC_CM_MDEBUG_OPT_ENC(3)
#define BCMX_DBG_TX             SOC_CM_MDEBUG_OPT_ENC(4)
#define BCMX_DBG_RX             SOC_CM_MDEBUG_OPT_ENC(5)
#define BCMX_DBG_PKT_DATA       SOC_CM_MDEBUG_OPT_ENC(6)
#define BCMX_DBG_LINK           SOC_CM_MDEBUG_OPT_ENC(7)
#define BCMX_DBG_COUNTER        SOC_CM_MDEBUG_OPT_ENC(8)
#define BCMX_DBG_ATTACH         SOC_CM_MDEBUG_OPT_ENC(9)

#define BCMX_DBG_COUNT          10

#define BCMX_DBG_ERR            SOC_CM_DBG_ERR
#define BCMX_DBG_WARN           SOC_CM_DBG_WARN
#define BCMX_DBG_NORMAL         SOC_CM_DBG_NORMAL
#define BCMX_DBG_VERBOSE        SOC_CM_DBG_VERBOSE
#define BCMX_DBG_VVERBOSE       SOC_CM_DBG_VVERBOSE

#define BCMX_DBG_NAMES  \
    "POrt",             \
    "VLAN",             \
    "L2",               \
    "L3",               \
    "TX",               \
    "RX",               \
    "PKTdata",          \
    "LInk",             \
    "CounTeR",          \
    "ATTach",           \
    ""

/*
 * Proper use of debug print macros requires parentheses, e.g.:
 *
 *     BCMX_OPT_WARN(("Problem %d with unit %d\n", pr, unit));
 *     BCMX_WARN(("Problem %d with unit %d\n", pr, unit));
 *     BCMX_DEBUG(BCMX_DBG_FOO, ("Problem %d with unit %d\n", pr, unit));
 */

extern soc_cm_mdebug_config_t bcmx_mdebug_config;

extern int (*bcmx_mdebug_print)(const char *format, ...)
    COMPILER_ATTRIBUTE_FUNCTION_POINTER ((format (printf, 1, 2)));

#if defined(BROADCOM_DEBUG)

#define BCMX_DEBUG_CHECK(enc_) \
    soc_cm_mdebug_check(&bcmx_mdebug_config, enc_)

#define BCMX_DEBUG(enc_, stuff_) \
    if (BCMX_DEBUG_CHECK(enc_) && bcmx_mdebug_print != 0) \
	(*bcmx_mdebug_print) stuff_

/*
 * Option-specific debug print macros.
 * Source file must define BCMX_DEBUG_OPTION to the desired debug
 * option before using these macros, e.g.:
 *
 * #define BCMX_DEBUG_OPTION BCMX_DBG_PORT
 */

#define BCMX_OPT_ERR(stuff_) \
    BCMX_DEBUG(BCMX_DEBUG_OPTION | BCMX_DBG_ERR, stuff_)
#define BCMX_OPT_WARN(stuff_) \
    BCMX_DEBUG(BCMX_DEBUG_OPTION | BCMX_DBG_WARN, stuff_)
#define BCMX_OPT_NORM(stuff_) \
    BCMX_DEBUG(BCMX_DEBUG_OPTION | BCMX_DBG_NORMAL, stuff_)
#define BCMX_OPT_VERB(stuff_) \
    BCMX_DEBUG(BCMX_DEBUG_OPTION | BCMX_DBG_VERBOSE, stuff_)
#define BCMX_OPT_VVERB(stuff_) \
    BCMX_DEBUG(BCMX_DEBUG_OPTION | BCMX_DBG_VVERBOSE, stuff_)

/* Module-wide debug print macros (do not require any options enabled) */
#define BCMX_ERR(stuff_) \
    BCMX_DEBUG(BCMX_DBG_ERR, stuff_)
#define BCMX_WARN(stuff_) \
    BCMX_DEBUG(BCMX_DBG_WARN, stuff_)
#define BCMX_NORM(stuff_) \
    BCMX_DEBUG(BCMX_DBG_NORMAL, stuff_)
#define BCMX_VERB(stuff_) \
    BCMX_DEBUG(BCMX_DBG_VERBOSE, stuff_)
#define BCMX_VVERB(stuff_) \
    BCMX_DEBUG(BCMX_DBG_VVERBOSE, stuff_)

extern int bcmx_mdebug_init(void);

#else

#define BCMX_DEBUG_CHECK(enc_) 0
#define BCMX_DEBUG(flags_, stuff_)

#define BCMX_OPT_ERR(stuff_)
#define BCMX_OPT_WARN(stuff_)
#define BCMX_OPT_NORM(stuff_)
#define BCMX_OPT_VERB(stuff_)
#define BCMX_OPT_VVERB(stuff_)

#define BCMX_ERR(stuff_)
#define BCMX_WARN(stuff_)
#define BCMX_NORM(stuff_)
#define BCMX_VERB(stuff_)
#define BCMX_VVERB(stuff_)

#endif /* defined(BROADCOM_DEBUG) */

#endif /* __BCMX_MDEBUG_H__ */

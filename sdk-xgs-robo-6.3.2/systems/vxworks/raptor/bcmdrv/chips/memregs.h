/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated from the registers file.
 * Edits to this file will be lost when it is regenerated.
 *
 * $Id: memregs.h 1.5 Broadcom SDK $
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 *
 * File:	memregs.h
 * Purpose:	Memory entry declarations, memory and register macros
 * Supports:	bcm56218_a0
 */

#ifndef _SOC_MEMREGS_H
#define _SOC_MEMREGS_H


/****************************************************************
 *
 * Each structure is an array big enough for the memory structures
 * in all supported chips.
 * These are accessed and manipulated by soc_mem functions
 * in soc/common.c and soc/mem.c
 *
 ****************************************************************/

#define MEM_ENTRY(tname, bytes) \
	typedef struct { \
		uint32 entry_data[BYTES2WORDS(bytes)]; \
	} tname 

MEM_ENTRY(bsafe_cmd_data_in_entry_t, 4);
MEM_ENTRY(bsafe_cmd_data_out_entry_t, 4);
MEM_ENTRY(dscp_table_entry_t, 2);
MEM_ENTRY(egr_dscp_ecn_map_entry_t, 1);
MEM_ENTRY(egr_dscp_table_entry_t, 1);
MEM_ENTRY(egr_em_mtp_index_entry_t, 2);
MEM_ENTRY(egr_im_mtp_index_entry_t, 2);
MEM_ENTRY(egr_ip_tunnel_entry_t, 17);
MEM_ENTRY(egr_l3_intf_entry_t, 8);
MEM_ENTRY(egr_l3_next_hop_entry_t, 8);
MEM_ENTRY(egr_mask_entry_t, 7);
MEM_ENTRY(egr_vlan_entry_t, 8);
MEM_ENTRY(egr_vlan_stg_entry_t, 14);
MEM_ENTRY(em_mtp_index_entry_t, 2);
MEM_ENTRY(fp_counter_table_entry_t, 4);
MEM_ENTRY(fp_meter_table_entry_t, 7);
MEM_ENTRY(fp_policy_table_entry_t, 21);
MEM_ENTRY(fp_port_field_sel_entry_t, 11);
MEM_ENTRY(fp_range_check_entry_t, 5);
MEM_ENTRY(fp_sc_bcast_meter_table_entry_t, 7);
MEM_ENTRY(fp_sc_dlf_meter_table_entry_t, 7);
MEM_ENTRY(fp_sc_mcast_meter_table_entry_t, 7);
MEM_ENTRY(fp_sc_meter_table_entry_t, 7);
MEM_ENTRY(fp_slice_entry_port_sel_entry_t, 16);
MEM_ENTRY(fp_slice_map_entry_t, 6);
MEM_ENTRY(fp_tcam_entry_t, 47);
MEM_ENTRY(fp_udf_offset_entry_t, 6);
MEM_ENTRY(im_mtp_index_entry_t, 2);
MEM_ENTRY(ing_l3_next_hop_entry_t, 3);
MEM_ENTRY(iport_table_entry_t, 9);
MEM_ENTRY(l2mc_entry_t, 7);
MEM_ENTRY(l2x_entry_t, 12);
MEM_ENTRY(l2_entry_only_entry_t, 12);
MEM_ENTRY(l2_hitda_only_entry_t, 1);
MEM_ENTRY(l2_hitsa_only_entry_t, 1);
MEM_ENTRY(l2_mod_fifo_entry_t, 14);
MEM_ENTRY(l2_user_entry_entry_t, 18);
MEM_ENTRY(l2_user_entry_data_only_entry_t, 3);
MEM_ENTRY(l2_user_entry_only_entry_t, 16);
MEM_ENTRY(tunnel_entry_t, 24);
MEM_ENTRY(mac_block_entry_t, 7);
MEM_ENTRY(mac_limit_port_map_table_entry_t, 1);
MEM_ENTRY(mac_limit_trunk_map_table_entry_t, 1);
MEM_ENTRY(mmu_aging_ctr_entry_t, 3);
MEM_ENTRY(mmu_aging_exp_entry_t, 1);
MEM_ENTRY(mmu_cbpcellheader_entry_t, 5);
MEM_ENTRY(mmu_cbpdata0_entry_t, 16);
MEM_ENTRY(mmu_cbpdata1_entry_t, 16);
MEM_ENTRY(mmu_cbpdata2_entry_t, 16);
MEM_ENTRY(mmu_cbpdata3_entry_t, 16);
MEM_ENTRY(mmu_cbpdata4_entry_t, 16);
MEM_ENTRY(mmu_cbpdata5_entry_t, 16);
MEM_ENTRY(mmu_cbpdata6_entry_t, 16);
MEM_ENTRY(mmu_cbpdata7_entry_t, 16);
MEM_ENTRY(mmu_cbppktheader0_entry_t, 5);
MEM_ENTRY(mmu_cbppktheader1_entry_t, 5);
MEM_ENTRY(mmu_ccp_entry_t, 1);
MEM_ENTRY(mmu_cfap_entry_t, 2);
MEM_ENTRY(mmu_xq0_entry_t, 21);
MEM_ENTRY(mmu_xq1_entry_t, 16);
MEM_ENTRY(mmu_xq2_entry_t, 16);
MEM_ENTRY(mmu_xq3_entry_t, 3);
MEM_ENTRY(mmu_xq4_entry_t, 3);
MEM_ENTRY(mmu_xq5_entry_t, 3);
MEM_ENTRY(mmu_xq6_entry_t, 3);
MEM_ENTRY(mmu_xq7_entry_t, 3);
MEM_ENTRY(mmu_xq8_entry_t, 3);
MEM_ENTRY(mmu_xq9_entry_t, 3);
MEM_ENTRY(mmu_xq10_entry_t, 3);
MEM_ENTRY(mmu_xq11_entry_t, 3);
MEM_ENTRY(mmu_xq12_entry_t, 3);
MEM_ENTRY(mmu_xq13_entry_t, 3);
MEM_ENTRY(mmu_xq14_entry_t, 3);
MEM_ENTRY(mmu_xq15_entry_t, 3);
MEM_ENTRY(mmu_xq16_entry_t, 3);
MEM_ENTRY(mmu_xq17_entry_t, 3);
MEM_ENTRY(mmu_xq18_entry_t, 3);
MEM_ENTRY(mmu_xq19_entry_t, 3);
MEM_ENTRY(mmu_xq20_entry_t, 3);
MEM_ENTRY(mmu_xq21_entry_t, 3);
MEM_ENTRY(mmu_xq22_entry_t, 3);
MEM_ENTRY(mmu_xq23_entry_t, 3);
MEM_ENTRY(mmu_xq24_entry_t, 3);
MEM_ENTRY(mmu_xq25_entry_t, 3);
MEM_ENTRY(mmu_xq26_entry_t, 3);
MEM_ENTRY(mmu_xq27_entry_t, 3);
MEM_ENTRY(mmu_xq28_entry_t, 3);
MEM_ENTRY(mmu_xq29_entry_t, 3);
MEM_ENTRY(mmu_xq30_entry_t, 3);
MEM_ENTRY(mmu_xq31_entry_t, 3);
MEM_ENTRY(mmu_xq32_entry_t, 3);
MEM_ENTRY(mmu_xq33_entry_t, 3);
MEM_ENTRY(mmu_xq34_entry_t, 3);
MEM_ENTRY(mmu_xq35_entry_t, 3);
MEM_ENTRY(mmu_xq36_entry_t, 3);
MEM_ENTRY(mmu_xq37_entry_t, 3);
MEM_ENTRY(mmu_xq38_entry_t, 3);
MEM_ENTRY(mmu_xq39_entry_t, 3);
MEM_ENTRY(mmu_xq40_entry_t, 3);
MEM_ENTRY(mmu_xq41_entry_t, 3);
MEM_ENTRY(mmu_xq42_entry_t, 3);
MEM_ENTRY(mmu_xq43_entry_t, 3);
MEM_ENTRY(mmu_xq44_entry_t, 3);
MEM_ENTRY(mmu_xq45_entry_t, 3);
MEM_ENTRY(mmu_xq46_entry_t, 3);
MEM_ENTRY(mmu_xq47_entry_t, 3);
MEM_ENTRY(mmu_xq48_entry_t, 3);
MEM_ENTRY(mmu_xq49_entry_t, 3);
MEM_ENTRY(mmu_xq50_entry_t, 3);
MEM_ENTRY(mmu_xq51_entry_t, 3);
MEM_ENTRY(mmu_xq52_entry_t, 3);
MEM_ENTRY(mmu_xq53_entry_t, 3);
MEM_ENTRY(modport_map_entry_t, 1);
MEM_ENTRY(modport_map_em_entry_t, 1);
MEM_ENTRY(modport_map_im_entry_t, 1);
MEM_ENTRY(modport_map_sw_entry_t, 1);
MEM_ENTRY(nonucast_trunk_block_mask_entry_t, 7);
MEM_ENTRY(port_or_trunk_mac_action_entry_t, 1);
MEM_ENTRY(port_or_trunk_mac_count_entry_t, 2);
MEM_ENTRY(port_or_trunk_mac_limit_entry_t, 2);
MEM_ENTRY(port_tab_entry_t, 9);
MEM_ENTRY(source_trunk_map_table_entry_t, 1);
MEM_ENTRY(src_modid_block_entry_t, 1);
MEM_ENTRY(stg_tab_entry_t, 14);
MEM_ENTRY(trunk_bitmap_entry_t, 7);
MEM_ENTRY(trunk_group_entry_t, 11);
MEM_ENTRY(vlan_mac_entry_t, 8);
MEM_ENTRY(vlan_protocol_entry_t, 3);
MEM_ENTRY(vlan_protocol_data_entry_t, 2);
MEM_ENTRY(vlan_subnet_entry_t, 18);
MEM_ENTRY(vlan_subnet_data_only_entry_t, 2);
MEM_ENTRY(vlan_subnet_only_entry_t, 17);
MEM_ENTRY(vlan_tab_entry_t, 8);
#undef MEM_ENTRY

/* Register and memory list declarations */
extern soc_reg_info_t soc_reg_list[];
extern soc_mem_info_t soc_mem_list[];
#if !defined(SOC_NO_NAMES)
extern char *soc_reg_name[];
#endif /* !defined(SOC_NO_NAMES) */
#if !defined(SOC_NO_ALIAS)
extern char *soc_reg_alias[];
#endif /* !defined(SOC_NO_ALIAS) */
#if !defined(SOC_NO_DESC)
extern char *soc_reg_desc[];
#endif /* !defined(SOC_NO_DESC) */
#if !defined(SOC_NO_NAMES)
extern char *soc_mem_name[];
extern char *soc_mem_ufname[];
extern char *soc_mem_ufalias[];
#endif /* !defined(SOC_NO_NAMES) */
#if !defined(SOC_NO_DESC)
extern char *soc_mem_desc[];
#endif /* !defined(SOC_NO_DESC) */

/* Chip specific include matter */


/* bcm56218_a0 */
extern port_or_trunk_mac_limit_entry_t
    _soc_mem_entry_null_port_or_trunk_mac_limit_bcm56218_a0;
extern fp_slice_map_entry_t
    _soc_mem_entry_null_fp_slice_map_entry_bcm56218_a0;




/*****************************************************************************
 **
 **	REGISTER READ and WRITE MACROS
 **
 *****************************************************************************/

#define READ_AGINGCTRMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, AGINGCTRMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_AGINGCTRMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, AGINGCTRMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_AGINGEXPMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, AGINGEXPMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_AGINGEXPMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, AGINGEXPMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_AUX_ARB_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, AUX_ARB_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_AUX_ARB_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, AUX_ARB_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_BCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_BCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BCAST_BLOCK_MASKr, port, 0), rv)

#define READ_BCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_BCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_BCAST_STORM_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BCAST_STORM_CONTROLr, port, 0), rvp)
#define WRITE_BCAST_STORM_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BCAST_STORM_CONTROLr, port, 0), rv)

#define READ_BKPMETERINGBUCKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGBUCKETr, port, 0), rvp)
#define WRITE_BKPMETERINGBUCKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGBUCKETr, port, 0), rv)

#define READ_BKPMETERINGCONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGCONFIGr, port, 0), rvp)
#define WRITE_BKPMETERINGCONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGCONFIGr, port, 0), rv)

#define READ_BKPMETERINGDISCSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGDISCSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKPMETERINGDISCSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGDISCSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_BKPMETERINGDISCSTATUS_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGDISCSTATUS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKPMETERINGDISCSTATUS_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGDISCSTATUS_HIr, REG_PORT_ANY, 0), rv)

#define READ_BKPMETERINGSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKPMETERINGSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_BKPMETERINGSTATUS_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGSTATUS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKPMETERINGSTATUS_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGSTATUS_HIr, REG_PORT_ANY, 0), rv)

#define READ_BKP_DISC_BMAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKP_DISC_BMAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKP_DISC_BMAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKP_DISC_BMAPr, REG_PORT_ANY, 0), rv)

#define READ_BKP_DISC_BMAP_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKP_DISC_BMAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKP_DISC_BMAP_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKP_DISC_BMAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_CMD_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_CMD_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_CMD_DATA_INr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_DATA_INr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_CMD_DATA_INr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_DATA_INr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_CMD_DATA_OUTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_DATA_OUTr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_CMD_DATA_OUTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_DATA_OUTr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_DEV_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_DEV_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_DEV_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_DEV_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_INT_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_INT_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_INT_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_INT_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_PRESCALEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_PRESCALEr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_PRESCALEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_PRESCALEr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_PROD_CFGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_PROD_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_PROD_CFGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_PROD_CFGr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_TIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_TIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_TIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_TIMERr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_UHSM_CFGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_UHSM_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_UHSM_CFGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_UHSM_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CBPCELLCRCERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPCELLCRCERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPCELLCRCERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPCELLCRCERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_CBPCELLHDRMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPCELLHDRMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPCELLHDRMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPCELLHDRMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPCELLHDRPARITYERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPCELLHDRPARITYERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPCELLHDRPARITYERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPCELLHDRPARITYERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEMDEBUGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEMDEBUGr, REG_PORT_ANY, idx), rvp)
#define WRITE_CBPDATAMEMDEBUGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEMDEBUGr, REG_PORT_ANY, idx), rv)

#define READ_CBPPKTHDRMEM0DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPPKTHDRMEM0DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPPKTHDRMEM0DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPPKTHDRMEM0DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPPKTHDRMEM1DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPPKTHDRMEM1DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPPKTHDRMEM1DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPPKTHDRMEM1DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPPKTHDRPARITYERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPPKTHDRPARITYERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPPKTHDRPARITYERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPPKTHDRPARITYERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_CCPMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CCPMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CCPMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CCPMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CCPPARITYERRORPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CCPPARITYERRORPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CCPPARITYERRORPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CCPPARITYERRORPTRr, REG_PORT_ANY, 0), rv)

#define READ_CFAPCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_CFAPFULLTHRESHOLDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPFULLTHRESHOLDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPFULLTHRESHOLDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPFULLTHRESHOLDr, REG_PORT_ANY, 0), rv)

#define READ_CFAPMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CFAPPARITYERRORPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPPARITYERRORPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPPARITYERRORPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPPARITYERRORPTRr, REG_PORT_ANY, 0), rv)

#define READ_CFAPREADPOINTERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPREADPOINTERr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPREADPOINTERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPREADPOINTERr, REG_PORT_ANY, 0), rv)

#define READ_CMICTXCOSMASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CMICTXCOSMASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMICTXCOSMASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CMICTXCOSMASKr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CONFIGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CONFIGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RXr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RXr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RXr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RXr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RX_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RX_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DEV_REV_IDr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DEV_REV_IDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DEV_REV_IDr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DEV_REV_IDr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_DESC0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_DESC0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_DESC0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_DESC0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_DESC1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_DESC1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_DESC1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_DESC1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_DESC2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_DESC2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_DESC2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_DESC2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_DESC3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_DESC3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_DESC3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_DESC3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_STATr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_STATr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_STATr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_ENDIANESS_SELr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_ENDIANESS_SELr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_ENDIANESS_SELr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_ENDIANESS_SELr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_GFPORT_CLOCK_CONFIGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_GFPORT_CLOCK_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_GFPORT_CLOCK_CONFIGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_GFPORT_CLOCK_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_DATAr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_DATAr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_DATAr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_RESETr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_RESETr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_RESETr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_RESETr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_SLAVE_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_SLAVE_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_SLAVE_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_SLAVE_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_SLAVE_XADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_SLAVE_XADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_SLAVE_XADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_SLAVE_XADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_STATr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_STATr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_STATr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_IRQ_MASKr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_IRQ_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_IRQ_MASKr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_IRQ_MASKr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_IRQ_STATr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_IRQ_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_IRQ_STATr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_IRQ_STATr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LEDUP_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LEDUP_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LEDUP_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LEDUP_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LEDUP_DATA_RAMr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LEDUP_DATA_RAMr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_LEDUP_DATA_RAMr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LEDUP_DATA_RAMr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_LEDUP_PROGRAM_RAMr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LEDUP_PROGRAM_RAMr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_LEDUP_PROGRAM_RAMr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LEDUP_PROGRAM_RAMr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_LEDUP_STATUSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LEDUP_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LEDUP_STATUSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LEDUP_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_0_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_0_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_0_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_0_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_10_14r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_10_14r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_10_14r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_10_14r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_15_19r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_15_19r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_15_19r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_15_19r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_20_24r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_20_24r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_20_24r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_20_24r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_25_29r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_25_29r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_25_29r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_25_29r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_30_34r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_30_34r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_30_34r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_30_34r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_35_39r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_35_39r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_35_39r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_35_39r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_40_44r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_40_44r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_40_44r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_40_44r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_45_49r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_45_49r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_45_49r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_45_49r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_50_54r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_50_54r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_50_54r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_50_54r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_5_9r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_5_9r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_5_9r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_5_9r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LINK_STATr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LINK_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LINK_STATr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LINK_STATr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LINK_STAT_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LINK_STAT_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LINK_STAT_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LINK_STAT_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_11_8r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_11_8r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_11_8r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_11_8r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_15_12r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_15_12r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_15_12r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_15_12r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_19_16r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_19_16r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_19_16r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_19_16r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_23_20r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_23_20r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_23_20r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_23_20r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_27_24r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_27_24r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_27_24r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_27_24r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_31_28r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_31_28r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_31_28r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_31_28r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_35_32r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_35_32r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_35_32r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_35_32r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_39_36r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_39_36r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_39_36r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_39_36r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_3_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_3_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_3_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_3_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_43_40r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_43_40r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_43_40r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_43_40r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_47_44r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_47_44r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_47_44r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_47_44r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_51_48r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_51_48r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_51_48r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_51_48r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_55_52r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_55_52r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_55_52r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_55_52r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_59_56r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_59_56r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_59_56r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_59_56r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_63_60r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_63_60r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_63_60r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_63_60r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_7_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_7_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_7_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_7_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_INT_SEL_MAPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_INT_SEL_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_INT_SEL_MAPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_INT_SEL_MAPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_INT_SEL_MAP_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_INT_SEL_MAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_INT_SEL_MAP_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_INT_SEL_MAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PARAMr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PARAMr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PARAMr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PARAMr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PORT_TYPE_MAPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PORT_TYPE_MAPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PORT_TYPE_MAP_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PORT_TYPE_MAP_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PROTOCOL_MAPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PROTOCOL_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PROTOCOL_MAPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PROTOCOL_MAPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PROTOCOL_MAP_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PROTOCOL_MAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PROTOCOL_MAP_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PROTOCOL_MAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_READ_DATAr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_READ_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_READ_DATAr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_READ_DATAr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_FROMCPUr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_FROMCPUr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_FROMCPUr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_FROMCPUr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_FROMCPU_MHr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_FROMCPU_MHr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_FROMCPU_MHr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_FROMCPU_MHr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_SCHANr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_SCHANr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_SCHANr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_SCHANr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_SCHAN_REPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_SCHAN_REPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_SCHAN_REPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_SCHAN_REPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_TOCPUDr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_TOCPUDr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUDr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_TOCPUDMr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUDMr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_TOCPUDMr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUDMr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_TOCPUEr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_TOCPUEr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUEr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_TOCPUEMr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUEMr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_TOCPUEMr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUEMr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_TOCPUNr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUNr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_TOCPUNr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUNr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_ETHER_SIGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_ETHER_SIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_ETHER_SIGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_ETHER_SIGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_LMAC0_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_LMAC0_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_LMAC0_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_LMAC0_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_LMAC0_LOr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_LMAC0_LOr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_LMAC0_LOr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_LMAC0_LOr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_LMAC1_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_LMAC1_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_LMAC1_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_LMAC1_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_LMAC1_LOr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_LMAC1_LOr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_LMAC1_LOr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_LMAC1_LOr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_PORTSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_PORTSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_PORTSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_PORTSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_PORTS_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_PORTS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_PORTS_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_PORTS_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_REASONr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_REASONr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_REASONr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_REASONr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_REASON_DIRECTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_REASON_DIRECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_REASON_DIRECTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_REASON_DIRECTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_REASON_MINIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_REASON_MINIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_REASON_MINIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_REASON_MINIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMACr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMACr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMACr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMACr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMAC_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMAC_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMAC_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMAC_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMH0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMH0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMH0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMH0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMH1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMH1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMH1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMH1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMH2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMH2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMH2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMH2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMH3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMH3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMH3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMH3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_VLANr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_VLANr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_VLANr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_VLANr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_RATE_ADJUSTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_RATE_ADJUSTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_RATE_ADJUSTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_RATE_ADJUSTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_RATE_ADJUST_I2Cr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_I2Cr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_RATE_ADJUST_I2Cr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_I2Cr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_RATE_ADJUST_INT_MDIOr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_INT_MDIOr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_RATE_ADJUST_INT_MDIOr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_INT_MDIOr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_RATE_ADJUST_STDMAr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_STDMAr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_RATE_ADJUST_STDMAr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_STDMAr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SBUS_RING_MAPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SBUS_RING_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SBUS_RING_MAPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SBUS_RING_MAPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SBUS_TIMEOUTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SBUS_TIMEOUTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SBUS_TIMEOUTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SBUS_TIMEOUTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCAN_PORTSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCAN_PORTSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SCAN_PORTSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCAN_PORTSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCAN_PORTS_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCAN_PORTS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SCAN_PORTS_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCAN_PORTS_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCHAN_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCHAN_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SCHAN_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCHAN_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCHAN_ERRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCHAN_ERRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SCHAN_ERRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCHAN_ERRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCHAN_MESSAGEr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCHAN_MESSAGEr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_SCHAN_MESSAGEr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCHAN_MESSAGEr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_SCHAN_MESSAGE_EXTr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCHAN_MESSAGE_EXTr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_SCHAN_MESSAGE_EXTr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCHAN_MESSAGE_EXTr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_SCHAN_RCPU_RPIO_MESSAGEr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCHAN_RCPU_RPIO_MESSAGEr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_SCHAN_RCPU_RPIO_MESSAGEr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCHAN_RCPU_RPIO_MESSAGEr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_SLAM_DMA_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SLAM_DMA_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SLAM_DMA_CUR_ENTRY_SBUS_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_CUR_ENTRY_SBUS_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SLAM_DMA_CUR_ENTRY_SBUS_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_CUR_ENTRY_SBUS_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SLAM_DMA_ENTRY_COUNTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_ENTRY_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SLAM_DMA_ENTRY_COUNTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_ENTRY_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SLAM_DMA_PCIMEM_START_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_PCIMEM_START_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SLAM_DMA_PCIMEM_START_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_PCIMEM_START_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SLAM_DMA_SBUS_START_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_SBUS_START_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SLAM_DMA_SBUS_START_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_SBUS_START_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SOFT_RESET_REGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SOFT_RESET_REGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SOFT_RESET_REGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SOFT_RESET_REGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_15_8r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_15_8r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_15_8r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_15_8r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_23_16r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_23_16r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_23_16r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_23_16r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_31_24r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_31_24r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_31_24r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_31_24r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_39_32r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_39_32r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_39_32r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_39_32r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_47_40r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_47_40r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_47_40r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_47_40r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_55_48r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_55_48r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_55_48r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_55_48r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_63_56r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_63_56r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_63_56r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_63_56r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_7_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_7_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_7_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_7_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_CURRENTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_CURRENTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_CURRENTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_CURRENTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_EGR_STATS_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_EGR_STATS_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_EGR_STATS_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_EGR_STATS_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_ING_STATS_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_ING_STATS_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_ING_STATS_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_ING_STATS_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_MAC_STATS_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_MAC_STATS_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_MAC_STATS_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_MAC_STATS_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_11_8r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_11_8r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_11_8r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_11_8r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_15_12r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_15_12r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_15_12r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_15_12r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_19_16r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_19_16r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_19_16r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_19_16r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_23_20r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_23_20r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_23_20r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_23_20r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_27_24r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_27_24r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_27_24r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_27_24r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_31_28r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_31_28r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_31_28r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_31_28r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_35_32r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_35_32r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_35_32r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_35_32r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_39_36r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_39_36r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_39_36r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_39_36r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_3_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_3_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_3_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_3_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_43_40r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_43_40r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_43_40r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_43_40r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_47_44r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_47_44r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_47_44r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_47_44r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_51_48r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_51_48r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_51_48r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_51_48r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_55_52r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_55_52r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_55_52r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_55_52r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_59_56r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_59_56r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_59_56r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_59_56r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_63_60r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_63_60r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_63_60r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_63_60r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_7_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_7_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_7_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_7_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTS_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTS_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTS_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORT_TYPE_MAPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORT_TYPE_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORT_TYPE_MAPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORT_TYPE_MAPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORT_TYPE_MAP_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORT_TYPE_MAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORT_TYPE_MAP_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORT_TYPE_MAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_SETUPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_SETUPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_SETUPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_SETUPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STRAP_OPTIONSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STRAP_OPTIONSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STRAP_OPTIONSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STRAP_OPTIONSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SWITCH_FEATURE_ENABLEr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SWITCH_FEATURE_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SWITCH_FEATURE_ENABLEr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SWITCH_FEATURE_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SW_PIO_ACK_DATA_BEAT_COUNTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SW_PIO_ACK_DATA_BEAT_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SW_PIO_ACK_DATA_BEAT_COUNTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SW_PIO_ACK_DATA_BEAT_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TABLE_DMA_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TABLE_DMA_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TABLE_DMA_CUR_ENTRY_SBUS_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_CUR_ENTRY_SBUS_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TABLE_DMA_CUR_ENTRY_SBUS_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_CUR_ENTRY_SBUS_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TABLE_DMA_ENTRY_COUNTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_ENTRY_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TABLE_DMA_ENTRY_COUNTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_ENTRY_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TABLE_DMA_PCIMEM_START_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_PCIMEM_START_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TABLE_DMA_PCIMEM_START_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_PCIMEM_START_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TABLE_DMA_SBUS_START_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_SBUS_START_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TABLE_DMA_SBUS_START_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_SBUS_START_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TAP_CONTROLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TAP_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TAP_CONTROLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TAP_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_PLL_CONTROL_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_PLL_CONTROL_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_PLL_CONTROL_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_PLL_CONTROL_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_CNGCOSPKTLIMIT0r(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGCOSPKTLIMIT0r, port, idx), rvp)
#define WRITE_CNGCOSPKTLIMIT0r(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGCOSPKTLIMIT0r, port, idx), rv)

#define READ_CNGCOSPKTLIMIT1r(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGCOSPKTLIMIT1r, port, idx), rvp)
#define WRITE_CNGCOSPKTLIMIT1r(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGCOSPKTLIMIT1r, port, idx), rv)

#define READ_CNGDROPCOUNT0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGDROPCOUNT0r, port, 0), rvp)
#define WRITE_CNGDROPCOUNT0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGDROPCOUNT0r, port, 0), rv)

#define READ_CNGDROPCOUNT1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGDROPCOUNT1r, port, 0), rvp)
#define WRITE_CNGDROPCOUNT1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGDROPCOUNT1r, port, 0), rv)

#define READ_CNG_MAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNG_MAPr, port, 0), rvp)
#define WRITE_CNG_MAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNG_MAPr, port, 0), rv)

#define READ_COSLCCOUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COSLCCOUNTr, port, idx), rvp)
#define WRITE_COSLCCOUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COSLCCOUNTr, port, idx), rv)

#define READ_COSPKTCOUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COSPKTCOUNTr, port, idx), rvp)
#define WRITE_COSPKTCOUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COSPKTCOUNTr, port, idx), rv)

#define READ_COS_SELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COS_SELr, port, 0), rvp)
#define WRITE_COS_SELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COS_SELr, port, 0), rv)

#define READ_COS_SEL_2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COS_SEL_2r, port, 0), rvp)
#define WRITE_COS_SEL_2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COS_SEL_2r, port, 0), rv)

#define READ_CPU_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_CPU_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_CPU_CONTROL_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_CONTROL_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_CONTROL_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_CONTROL_3r, REG_PORT_ANY, 0), rv)

#define READ_CPU_COS_SELr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_COS_SELr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_COS_SELr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_COS_SELr, REG_PORT_ANY, 0), rv)

#define READ_CPU_COS_SEL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_COS_SEL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_COS_SEL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_COS_SEL_2r, REG_PORT_ANY, 0), rv)

#define READ_CPU_PRIORITY_SELr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_PRIORITY_SELr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_PRIORITY_SELr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_PRIORITY_SELr, REG_PORT_ANY, 0), rv)

#define READ_CPU_PRIORITY_SEL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_PRIORITY_SEL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_PRIORITY_SEL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_PRIORITY_SEL_2r, REG_PORT_ANY, 0), rv)

#define READ_DLFBC_STORM_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DLFBC_STORM_CONTROLr, port, 0), rvp)
#define WRITE_DLFBC_STORM_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DLFBC_STORM_CONTROLr, port, 0), rv)

#define READ_DOS_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DOS_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_DOS_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DOS_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_DOS_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DOS_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_DOS_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DOS_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_DYNCELLCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DYNCELLCOUNTr, port, 0), rvp)
#define WRITE_DYNCELLCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DYNCELLCOUNTr, port, 0), rv)

#define READ_DYNCELLLIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DYNCELLLIMITr, port, 0), rvp)
#define WRITE_DYNCELLLIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DYNCELLLIMITr, port, 0), rv)

#define READ_EGRDROPPKTCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRDROPPKTCOUNTr, port, 0), rvp)
#define WRITE_EGRDROPPKTCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRDROPPKTCOUNTr, port, 0), rv)

#define READ_EGRESSCELLREQUESTCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRESSCELLREQUESTCOUNTr, port, 0), rvp)
#define WRITE_EGRESSCELLREQUESTCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRESSCELLREQUESTCOUNTr, port, 0), rv)

#define READ_EGRMETERINGBUCKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRMETERINGBUCKETr, port, 0), rvp)
#define WRITE_EGRMETERINGBUCKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRMETERINGBUCKETr, port, 0), rv)

#define READ_EGRMETERINGCONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRMETERINGCONFIGr, port, 0), rvp)
#define WRITE_EGRMETERINGCONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRMETERINGCONFIGr, port, 0), rv)

#define READ_EGRTXPKTCTRr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRr, REG_PORT_ANY, idx), rvp)
#define WRITE_EGRTXPKTCTRr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRr, REG_PORT_ANY, idx), rv)

#define READ_EGRTXPKTCTRCONFIGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIGr, REG_PORT_ANY, idx), rvp)
#define WRITE_EGRTXPKTCTRCONFIGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIGr, REG_PORT_ANY, idx), rv)

#define READ_EGR_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_EGR_CONFIG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_CONFIG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_CONFIG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_CONFIG_1r, REG_PORT_ANY, 0), rv)

#define READ_EGR_DBGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_DBGr, port, 0), rvp)
#define WRITE_EGR_DBGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_DBGr, port, 0), rv)

#define READ_EGR_ENABLEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_ENABLEr, port, 0), rvp)
#define WRITE_EGR_ENABLEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_ENABLEr, port, 0), rv)

#define READ_EGR_EVENT_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_EVENT_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_EVENT_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_EVENT_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_EGR_HW_RESET_CONTROL_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_HW_RESET_CONTROL_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_HW_RESET_CONTROL_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_HW_RESET_CONTROL_0r, REG_PORT_ANY, 0), rv)

#define READ_EGR_HW_RESET_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_HW_RESET_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_HW_RESET_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_HW_RESET_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_EGR_MC_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MC_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_MC_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MC_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_EGR_MC_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MC_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_MC_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MC_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_EGR_MMU_REQUESTSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MMU_REQUESTSr, port, 0), rvp)
#define WRITE_EGR_MMU_REQUESTSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MMU_REQUESTSr, port, 0), rv)

#define READ_EGR_MTU_SIZEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MTU_SIZEr, port, 0), rvp)
#define WRITE_EGR_MTU_SIZEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MTU_SIZEr, port, 0), rv)

#define READ_EGR_PORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PORTr, port, 0), rvp)
#define WRITE_EGR_PORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PORTr, port, 0), rv)

#define READ_EGR_PORT_L3UC_MODSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PORT_L3UC_MODSr, port, 0), rvp)
#define WRITE_EGR_PORT_L3UC_MODSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PORT_L3UC_MODSr, port, 0), rv)

#define READ_EGR_PORT_REQUESTSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PORT_REQUESTSr, port, 0), rvp)
#define WRITE_EGR_PORT_REQUESTSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PORT_REQUESTSr, port, 0), rv)

#define READ_EGR_Q_BEGINr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_Q_BEGINr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_Q_BEGINr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_Q_BEGINr, REG_PORT_ANY, 0), rv)

#define READ_EGR_Q_ENDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_Q_ENDr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_Q_ENDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_Q_ENDr, REG_PORT_ANY, 0), rv)

#define READ_EGR_RSPAN_VLAN_TAGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_RSPAN_VLAN_TAGr, port, 0), rvp)
#define WRITE_EGR_RSPAN_VLAN_TAGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_RSPAN_VLAN_TAGr, port, 0), rv)

#define READ_EGR_SHAPING_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_SHAPING_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_SHAPING_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_SHAPING_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_ID_MASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_ID_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_ID_MASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_ID_MASKr, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_PIMDR1_CFG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR1_CFG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_PIMDR1_CFG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR1_CFG0r, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_PIMDR1_CFG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR1_CFG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_PIMDR1_CFG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR1_CFG1r, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_PIMDR2_CFG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR2_CFG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_PIMDR2_CFG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR2_CFG0r, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_PIMDR2_CFG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR2_CFG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_PIMDR2_CFG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR2_CFG1r, REG_PORT_ANY, 0), rv)

#define READ_EGR_VLAN_CONTROL_1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_CONTROL_1r, port, 0), rvp)
#define WRITE_EGR_VLAN_CONTROL_1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_CONTROL_1r, port, 0), rv)

#define READ_EMIRROR_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EMIRROR_CONTROLr, port, 0), rvp)
#define WRITE_EMIRROR_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EMIRROR_CONTROLr, port, 0), rv)

#define READ_EMIRROR_CONTROL_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EMIRROR_CONTROL_HIr, port, 0), rvp)
#define WRITE_EMIRROR_CONTROL_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EMIRROR_CONTROL_HIr, port, 0), rv)

#define READ_EPC_LINK_BMAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_LINK_BMAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_EPC_LINK_BMAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_LINK_BMAPr, REG_PORT_ANY, 0), rv)

#define READ_EPC_LINK_BMAP_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_LINK_BMAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_EPC_LINK_BMAP_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_LINK_BMAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_ESA0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESA0r, port, 0), rvp)
#define WRITE_ESA0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESA0r, port, 0), rv)

#define READ_ESA1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESA1r, port, 0), rvp)
#define WRITE_ESA1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESA1r, port, 0), rv)

#define READ_ESA2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESA2r, port, 0), rvp)
#define WRITE_ESA2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESA2r, port, 0), rv)

#define READ_FE_CLRTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FE_CLRTr, port, 0), rvp)
#define WRITE_FE_CLRTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FE_CLRTr, port, 0), rv)

#define READ_FE_EXCESSIVE_DEFER_LIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FE_EXCESSIVE_DEFER_LIMITr, port, 0), rvp)
#define WRITE_FE_EXCESSIVE_DEFER_LIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FE_EXCESSIVE_DEFER_LIMITr, port, 0), rv)

#define READ_FE_IPGRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FE_IPGRr, port, 0), rvp)
#define WRITE_FE_IPGRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FE_IPGRr, port, 0), rv)

#define READ_FE_IPGTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FE_IPGTr, port, 0), rvp)
#define WRITE_FE_IPGTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FE_IPGTr, port, 0), rv)

#define READ_FE_MAC1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FE_MAC1r, port, 0), rvp)
#define WRITE_FE_MAC1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FE_MAC1r, port, 0), rv)

#define READ_FE_MAC2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FE_MAC2r, port, 0), rvp)
#define WRITE_FE_MAC2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FE_MAC2r, port, 0), rv)

#define READ_FE_MAXFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FE_MAXFr, port, 0), rvp)
#define WRITE_FE_MAXFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FE_MAXFr, port, 0), rv)

#define READ_FE_SUPPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FE_SUPPr, port, 0), rvp)
#define WRITE_FE_SUPPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FE_SUPPr, port, 0), rv)

#define READ_FE_TESTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FE_TESTr, port, 0), rvp)
#define WRITE_FE_TESTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FE_TESTr, port, 0), rv)

#define READ_FP_CAM_BIST_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S12_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S12_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S12_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S12_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S14_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S14_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S14_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S14_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S15_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S15_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S15_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S15_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_CONTROL_LOWERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROL_LOWERr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_CONTROL_LOWERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROL_LOWERr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_0r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_1r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_2r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_3r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_4r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_5r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_5r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_SENDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_SENDr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_SENDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_SENDr, REG_PORT_ANY, 0), rv)

#define READ_FP_METER_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_METER_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_METER_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_METER_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_FP_SLICE_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_SLICE_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_SLICE_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_SLICE_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_FP_SLICE_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_SLICE_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_SLICE_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_SLICE_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_GE0_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE0_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE0_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE0_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE0_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE0_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE0_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE0_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE0_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE0_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE0_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE0_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE10_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE10_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE10_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE10_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE10_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE10_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE10_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE10_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE10_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE10_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE10_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE10_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE11_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE11_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE11_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE11_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE11_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE11_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE11_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE11_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE11_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE11_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE11_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE11_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE1_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE1_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE1_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE1_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE1_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE1_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE1_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE1_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE1_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE1_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE1_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE1_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE2_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE2_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE2_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE2_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE2_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE2_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE2_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE2_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE2_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE2_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE2_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE2_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE3_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE3_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE3_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE3_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE3_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE3_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE3_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE3_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE3_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE3_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE3_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE3_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE4_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE4_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE4_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE4_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE4_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE4_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE4_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE4_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE4_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE4_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE4_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE4_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE5_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE5_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE5_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE5_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE5_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE5_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE5_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE5_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE5_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE5_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE5_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE5_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE6_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE6_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE6_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE6_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE6_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE6_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE6_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE6_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE6_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE6_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE6_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE6_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE7_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE7_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE7_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE7_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE7_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE7_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE7_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE7_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE7_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE7_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE7_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE7_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE8_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE8_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE8_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE8_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE8_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE8_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE8_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE8_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE8_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE8_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE8_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE8_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE9_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE9_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE9_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE9_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE9_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE9_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE9_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE9_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE9_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE9_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE9_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE9_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE_EGR_PKT_DROP_CTLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE_EGR_PKT_DROP_CTLr, port, 0), rvp)
#define WRITE_GE_EGR_PKT_DROP_CTLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE_EGR_PKT_DROP_CTLr, port, 0), rv)

#define READ_GE_PORT_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE_PORT_CONFIGr, port, 0), rvp)
#define WRITE_GE_PORT_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE_PORT_CONFIGr, port, 0), rv)

#define READ_GMACC0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GMACC0r, port, 0), rvp)
#define WRITE_GMACC0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GMACC0r, port, 0), rv)

#define READ_GMACC1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GMACC1r, port, 0), rvp)
#define WRITE_GMACC1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GMACC1r, port, 0), rv)

#define READ_GMACC2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GMACC2r, port, 0), rvp)
#define WRITE_GMACC2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GMACC2r, port, 0), rv)

#define READ_GPCSCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPCSCr, port, 0), rvp)
#define WRITE_GPCSCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPCSCr, port, 0), rv)

#define READ_GPORT_CNTMAXSIZEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_CNTMAXSIZEr, port, 0), rvp)
#define WRITE_GPORT_CNTMAXSIZEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_CNTMAXSIZEr, port, 0), rv)

#define READ_GPORT_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_CONFIGr, port, 0), rvp)
#define WRITE_GPORT_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_CONFIGr, port, 0), rv)

#define READ_GPORT_DROP_ON_WRONG_SOP_S0_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S0_CNTr, port, 0), rvp)
#define WRITE_GPORT_DROP_ON_WRONG_SOP_S0_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S0_CNTr, port, 0), rv)

#define READ_GPORT_DROP_ON_WRONG_SOP_S1_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S1_CNTr, port, 0), rvp)
#define WRITE_GPORT_DROP_ON_WRONG_SOP_S1_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S1_CNTr, port, 0), rv)

#define READ_GPORT_RSV_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_RSV_MASKr, port, 0), rvp)
#define WRITE_GPORT_RSV_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_RSV_MASKr, port, 0), rv)

#define READ_GPORT_SOP_S0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_SOP_S0r, port, 0), rvp)
#define WRITE_GPORT_SOP_S0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_SOP_S0r, port, 0), rv)

#define READ_GPORT_SOP_S1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_SOP_S1r, port, 0), rvp)
#define WRITE_GPORT_SOP_S1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_SOP_S1r, port, 0), rv)

#define READ_GPORT_STAT_UPDATE_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_STAT_UPDATE_MASKr, port, 0), rvp)
#define WRITE_GPORT_STAT_UPDATE_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_STAT_UPDATE_MASKr, port, 0), rv)

#define READ_GPORT_TPIDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_TPIDr, port, 0), rvp)
#define WRITE_GPORT_TPIDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_TPIDr, port, 0), rv)

#define READ_GR64r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR64r, port, 0), rvp)
#define WRITE_GR64r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR64r, port, 0), rv)

#define READ_GR127r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR127r, port, 0), rvp)
#define WRITE_GR127r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR127r, port, 0), rv)

#define READ_GR255r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR255r, port, 0), rvp)
#define WRITE_GR255r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR255r, port, 0), rv)

#define READ_GR511r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR511r, port, 0), rvp)
#define WRITE_GR511r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR511r, port, 0), rv)

#define READ_GR1023r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR1023r, port, 0), rvp)
#define WRITE_GR1023r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR1023r, port, 0), rv)

#define READ_GR1518r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR1518r, port, 0), rvp)
#define WRITE_GR1518r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR1518r, port, 0), rv)

#define READ_GR2047r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR2047r, port, 0), rvp)
#define WRITE_GR2047r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR2047r, port, 0), rv)

#define READ_GR4095r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR4095r, port, 0), rvp)
#define WRITE_GR4095r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR4095r, port, 0), rv)

#define READ_GR9216r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR9216r, port, 0), rvp)
#define WRITE_GR9216r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR9216r, port, 0), rv)

#define READ_GRALNr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRALNr, port, 0), rvp)
#define WRITE_GRALNr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRALNr, port, 0), rv)

#define READ_GRBCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRBCAr, port, 0), rvp)
#define WRITE_GRBCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRBCAr, port, 0), rv)

#define READ_GRBYTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRBYTr, port, 0), rvp)
#define WRITE_GRBYTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRBYTr, port, 0), rv)

#define READ_GRCDEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRCDEr, port, 0), rvp)
#define WRITE_GRCDEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRCDEr, port, 0), rv)

#define READ_GRFCRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRFCRr, port, 0), rvp)
#define WRITE_GRFCRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRFCRr, port, 0), rv)

#define READ_GRFCSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRFCSr, port, 0), rvp)
#define WRITE_GRFCSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRFCSr, port, 0), rv)

#define READ_GRFLRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRFLRr, port, 0), rvp)
#define WRITE_GRFLRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRFLRr, port, 0), rv)

#define READ_GRFRGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRFRGr, port, 0), rvp)
#define WRITE_GRFRGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRFRGr, port, 0), rv)

#define READ_GRJBRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRJBRr, port, 0), rvp)
#define WRITE_GRJBRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRJBRr, port, 0), rv)

#define READ_GRMCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRMCAr, port, 0), rvp)
#define WRITE_GRMCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRMCAr, port, 0), rv)

#define READ_GRMGVr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRMGVr, port, 0), rvp)
#define WRITE_GRMGVr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRMGVr, port, 0), rv)

#define READ_GRMTUEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRMTUEr, port, 0), rvp)
#define WRITE_GRMTUEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRMTUEr, port, 0), rv)

#define READ_GROVRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GROVRr, port, 0), rvp)
#define WRITE_GROVRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GROVRr, port, 0), rv)

#define READ_GRPKTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRPKTr, port, 0), rvp)
#define WRITE_GRPKTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRPKTr, port, 0), rv)

#define READ_GRPOKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRPOKr, port, 0), rvp)
#define WRITE_GRPOKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRPOKr, port, 0), rv)

#define READ_GRUCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRUCr, port, 0), rvp)
#define WRITE_GRUCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRUCr, port, 0), rv)

#define READ_GRUNDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRUNDr, port, 0), rvp)
#define WRITE_GRUNDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRUNDr, port, 0), rv)

#define READ_GRXCFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRXCFr, port, 0), rvp)
#define WRITE_GRXCFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRXCFr, port, 0), rv)

#define READ_GRXPFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRXPFr, port, 0), rvp)
#define WRITE_GRXPFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRXPFr, port, 0), rv)

#define READ_GRXUOr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRXUOr, port, 0), rvp)
#define WRITE_GRXUOr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRXUOr, port, 0), rv)

#define READ_GSA0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GSA0r, port, 0), rvp)
#define WRITE_GSA0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GSA0r, port, 0), rv)

#define READ_GSA1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GSA1r, port, 0), rvp)
#define WRITE_GSA1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GSA1r, port, 0), rv)

#define READ_GT64r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT64r, port, 0), rvp)
#define WRITE_GT64r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT64r, port, 0), rv)

#define READ_GT127r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT127r, port, 0), rvp)
#define WRITE_GT127r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT127r, port, 0), rv)

#define READ_GT255r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT255r, port, 0), rvp)
#define WRITE_GT255r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT255r, port, 0), rv)

#define READ_GT511r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT511r, port, 0), rvp)
#define WRITE_GT511r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT511r, port, 0), rv)

#define READ_GT1023r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT1023r, port, 0), rvp)
#define WRITE_GT1023r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT1023r, port, 0), rv)

#define READ_GT1518r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT1518r, port, 0), rvp)
#define WRITE_GT1518r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT1518r, port, 0), rv)

#define READ_GT2047r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT2047r, port, 0), rvp)
#define WRITE_GT2047r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT2047r, port, 0), rv)

#define READ_GT4095r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT4095r, port, 0), rvp)
#define WRITE_GT4095r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT4095r, port, 0), rv)

#define READ_GT9216r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT9216r, port, 0), rvp)
#define WRITE_GT9216r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT9216r, port, 0), rv)

#define READ_GTBCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTBCAr, port, 0), rvp)
#define WRITE_GTBCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTBCAr, port, 0), rv)

#define READ_GTBYTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTBYTr, port, 0), rvp)
#define WRITE_GTBYTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTBYTr, port, 0), rv)

#define READ_GTDFRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTDFRr, port, 0), rvp)
#define WRITE_GTDFRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTDFRr, port, 0), rv)

#define READ_GTEDFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTEDFr, port, 0), rvp)
#define WRITE_GTEDFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTEDFr, port, 0), rv)

#define READ_GTFCSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTFCSr, port, 0), rvp)
#define WRITE_GTFCSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTFCSr, port, 0), rv)

#define READ_GTFRGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTFRGr, port, 0), rvp)
#define WRITE_GTFRGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTFRGr, port, 0), rv)

#define READ_GTJBRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTJBRr, port, 0), rvp)
#define WRITE_GTJBRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTJBRr, port, 0), rv)

#define READ_GTLCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTLCLr, port, 0), rvp)
#define WRITE_GTLCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTLCLr, port, 0), rv)

#define READ_GTMCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTMCAr, port, 0), rvp)
#define WRITE_GTMCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTMCAr, port, 0), rv)

#define READ_GTMCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTMCLr, port, 0), rvp)
#define WRITE_GTMCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTMCLr, port, 0), rv)

#define READ_GTMGVr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTMGVr, port, 0), rvp)
#define WRITE_GTMGVr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTMGVr, port, 0), rv)

#define READ_GTNCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTNCLr, port, 0), rvp)
#define WRITE_GTNCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTNCLr, port, 0), rv)

#define READ_GTOVRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTOVRr, port, 0), rvp)
#define WRITE_GTOVRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTOVRr, port, 0), rv)

#define READ_GTPKTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTPKTr, port, 0), rvp)
#define WRITE_GTPKTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTPKTr, port, 0), rv)

#define READ_GTPOKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTPOKr, port, 0), rvp)
#define WRITE_GTPOKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTPOKr, port, 0), rv)

#define READ_GTSCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTSCLr, port, 0), rvp)
#define WRITE_GTSCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTSCLr, port, 0), rv)

#define READ_GTUCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTUCr, port, 0), rvp)
#define WRITE_GTUCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTUCr, port, 0), rv)

#define READ_GTXCFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTXCFr, port, 0), rvp)
#define WRITE_GTXCFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTXCFr, port, 0), rv)

#define READ_GTXCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTXCLr, port, 0), rvp)
#define WRITE_GTXCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTXCLr, port, 0), rv)

#define READ_GTXPFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTXPFr, port, 0), rvp)
#define WRITE_GTXPFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTXPFr, port, 0), rv)

#define READ_HASH_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HASH_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_HASH_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HASH_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_HOLCOSPKTSETLIMITr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLCOSPKTSETLIMITr, port, idx), rvp)
#define WRITE_HOLCOSPKTSETLIMITr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLCOSPKTSETLIMITr, port, idx), rv)

#define READ_HOLCOSSTATUSr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLCOSSTATUSr, REG_PORT_ANY, idx), rvp)
#define WRITE_HOLCOSSTATUSr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLCOSSTATUSr, REG_PORT_ANY, idx), rv)

#define READ_HOLCOSSTATUS_HIr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLCOSSTATUS_HIr, REG_PORT_ANY, idx), rvp)
#define WRITE_HOLCOSSTATUS_HIr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLCOSSTATUS_HIr, REG_PORT_ANY, idx), rv)

#define READ_HOLDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLDr, port, 0), rvp)
#define WRITE_HOLDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLDr, port, 0), rv)

#define READ_HOLD_COS0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS0r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS1r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS2r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS3r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS3r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS4r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS4r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS5r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS5r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS6r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS6r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS7r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS7r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS7r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS7r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS_PORT_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS_PORT_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS_PORT_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS_PORT_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_HOL_STAT_BMAPr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOL_STAT_BMAPr, REG_PORT_ANY, idx), rvp)
#define WRITE_HOL_STAT_BMAPr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOL_STAT_BMAPr, REG_PORT_ANY, idx), rv)

#define READ_HOL_STAT_BMAP_HIr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOL_STAT_BMAP_HIr, REG_PORT_ANY, idx), rvp)
#define WRITE_HOL_STAT_BMAP_HIr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOL_STAT_BMAP_HIr, REG_PORT_ANY, idx), rv)

#define READ_IBCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_IBCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBCAST_BLOCK_MASKr, port, 0), rv)

#define READ_IBCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_IBCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_IBPBKPSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPBKPSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBPBKPSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPBKPSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_IBPBKPSTATUS_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPBKPSTATUS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBPBKPSTATUS_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPBKPSTATUS_HIr, REG_PORT_ANY, 0), rv)

#define READ_IBPCELLCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPCELLCOUNTr, port, 0), rvp)
#define WRITE_IBPCELLCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPCELLCOUNTr, port, 0), rv)

#define READ_IBPCELLSETLIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPCELLSETLIMITr, port, 0), rvp)
#define WRITE_IBPCELLSETLIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPCELLSETLIMITr, port, 0), rv)

#define READ_IBPDISCARDSETLIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPDISCARDSETLIMITr, port, 0), rvp)
#define WRITE_IBPDISCARDSETLIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPDISCARDSETLIMITr, port, 0), rv)

#define READ_IBPDISCSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPDISCSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBPDISCSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPDISCSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_IBPDISCSTATUS_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPDISCSTATUS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBPDISCSTATUS_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPDISCSTATUS_HIr, REG_PORT_ANY, 0), rv)

#define READ_IBPPKTCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPPKTCOUNTr, port, 0), rvp)
#define WRITE_IBPPKTCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPPKTCOUNTr, port, 0), rv)

#define READ_IBPPKTSETLIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPPKTSETLIMITr, port, 0), rvp)
#define WRITE_IBPPKTSETLIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPPKTSETLIMITr, port, 0), rv)

#define READ_ICONTROL_OPCODE_BITMAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ICONTROL_OPCODE_BITMAPr, port, 0), rvp)
#define WRITE_ICONTROL_OPCODE_BITMAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ICONTROL_OPCODE_BITMAPr, port, 0), rv)

#define READ_ICOS_SELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ICOS_SELr, port, 0), rvp)
#define WRITE_ICOS_SELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ICOS_SELr, port, 0), rv)

#define READ_ICOS_SEL_2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ICOS_SEL_2r, port, 0), rvp)
#define WRITE_ICOS_SEL_2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ICOS_SEL_2r, port, 0), rv)

#define READ_IEGR_PORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IEGR_PORTr, port, 0), rvp)
#define WRITE_IEGR_PORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IEGR_PORTr, port, 0), rv)

#define READ_IEGR_PORT_L3UC_MODSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IEGR_PORT_L3UC_MODSr, port, 0), rvp)
#define WRITE_IEGR_PORT_L3UC_MODSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IEGR_PORT_L3UC_MODSr, port, 0), rv)

#define READ_IEMIRROR_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IEMIRROR_CONTROLr, port, 0), rvp)
#define WRITE_IEMIRROR_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IEMIRROR_CONTROLr, port, 0), rv)

#define READ_IEMIRROR_CONTROL_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IEMIRROR_CONTROL_HIr, port, 0), rvp)
#define WRITE_IEMIRROR_CONTROL_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IEMIRROR_CONTROL_HIr, port, 0), rv)

#define READ_IGMP_MLD_PKT_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IGMP_MLD_PKT_CONTROLr, port, 0), rvp)
#define WRITE_IGMP_MLD_PKT_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IGMP_MLD_PKT_CONTROLr, port, 0), rv)

#define READ_IHIGIG_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHIGIG_CONTROLr, port, 0), rvp)
#define WRITE_IHIGIG_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHIGIG_CONTROLr, port, 0), rv)

#define READ_IMIRROR_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMIRROR_CONTROLr, port, 0), rvp)
#define WRITE_IMIRROR_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMIRROR_CONTROLr, port, 0), rv)

#define READ_IMRP4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMRP4r, port, 0), rvp)
#define WRITE_IMRP4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMRP4r, port, 0), rv)

#define READ_IMRP6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMRP6r, port, 0), rvp)
#define WRITE_IMRP6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMRP6r, port, 0), rv)

#define READ_ING_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_ING_EVENT_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_EVENT_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_EVENT_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_EVENT_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_ING_HW_RESET_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_HW_RESET_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_ING_HW_RESET_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_HW_RESET_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_ING_MISC_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MISC_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_MISC_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MISC_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_ING_MISC_CONFIG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MISC_CONFIG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_MISC_CONFIG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MISC_CONFIG2r, REG_PORT_ANY, 0), rv)

#define READ_ING_Q_BEGINr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_Q_BEGINr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_Q_BEGINr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_Q_BEGINr, REG_PORT_ANY, 0), rv)

#define READ_IUNKNOWN_MCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUNKNOWN_MCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_IUNKNOWN_MCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUNKNOWN_MCAST_BLOCK_MASKr, port, 0), rv)

#define READ_IUNKNOWN_MCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUNKNOWN_MCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_IUNKNOWN_MCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUNKNOWN_MCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_IUNKNOWN_OPCODEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUNKNOWN_OPCODEr, port, 0), rvp)
#define WRITE_IUNKNOWN_OPCODEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUNKNOWN_OPCODEr, port, 0), rv)

#define READ_IUNKNOWN_OPCODE_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUNKNOWN_OPCODE_HIr, port, 0), rvp)
#define WRITE_IUNKNOWN_OPCODE_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUNKNOWN_OPCODE_HIr, port, 0), rv)

#define READ_IUNKNOWN_UCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUNKNOWN_UCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_IUNKNOWN_UCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUNKNOWN_UCAST_BLOCK_MASKr, port, 0), rv)

#define READ_IUNKNOWN_UCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUNKNOWN_UCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_IUNKNOWN_UCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUNKNOWN_UCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_L2_AGE_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_AGE_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_AGE_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_AGE_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_L2_AGE_TIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_AGE_TIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_AGE_TIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_AGE_TIMERr, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_HIT_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_HIT_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_HIT_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_HIT_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L2_MOD_FIFO_CNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_MOD_FIFO_CNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_MOD_FIFO_CNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_MOD_FIFO_CNTr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_LWMCOSCELLSETLIMITr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LWMCOSCELLSETLIMITr, port, idx), rvp)
#define WRITE_LWMCOSCELLSETLIMITr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LWMCOSCELLSETLIMITr, port, idx), rv)

#define READ_MAC_LIMIT_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAC_LIMIT_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MAC_LIMIT_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAC_LIMIT_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MAC_LIMIT_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAC_LIMIT_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MAC_LIMIT_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAC_LIMIT_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_MAC_TX_STATUSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAC_TX_STATUSr, port, 0), rvp)
#define WRITE_MAC_TX_STATUSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAC_TX_STATUSr, port, 0), rv)

#define READ_MAXFRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAXFRr, port, 0), rvp)
#define WRITE_MAXFRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAXFRr, port, 0), rv)

#define READ_MCAST_STORM_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCAST_STORM_CONTROLr, port, 0), rvp)
#define WRITE_MCAST_STORM_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCAST_STORM_CONTROLr, port, 0), rv)

#define READ_MC_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MC_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MC_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MC_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_MC_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MC_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MC_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MC_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_MC_CONTROL_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MC_CONTROL_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_MC_CONTROL_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MC_CONTROL_3r, REG_PORT_ANY, 0), rv)

#define READ_MEMFAILINTMASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEMFAILINTMASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEMFAILINTMASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEMFAILINTMASKr, REG_PORT_ANY, 0), rv)

#define READ_MEMFAILINTSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEMFAILINTSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEMFAILINTSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEMFAILINTSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_MIRROR_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MIRROR_CONTROLr, port, 0), rvp)
#define WRITE_MIRROR_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MIRROR_CONTROLr, port, 0), rv)

#define READ_MISCCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MISCCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MISCCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MISCCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTENABLEr, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTENABLE_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTENABLE_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTENABLE_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTENABLE_HIr, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTTXENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTTXENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTTXENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTTXENABLEr, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTTXENABLE_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTTXENABLE_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTTXENABLE_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTTXENABLE_HIr, REG_PORT_ANY, 0), rv)

#define READ_PAUSE_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAUSE_CONTROLr, port, 0), rvp)
#define WRITE_PAUSE_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAUSE_CONTROLr, port, 0), rv)

#define READ_PER_PORT_AGE_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PER_PORT_AGE_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_PER_PORT_AGE_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PER_PORT_AGE_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_PER_PORT_REPL_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PER_PORT_REPL_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_PER_PORT_REPL_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PER_PORT_REPL_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_PKTAGINGLIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTAGINGLIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTAGINGLIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTAGINGLIMITr, REG_PORT_ANY, 0), rv)

#define READ_PKTAGINGTIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTAGINGTIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTAGINGTIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTAGINGTIMERr, REG_PORT_ANY, 0), rv)

#define READ_PORT_BRIDGE_BMAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_BRIDGE_BMAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_PORT_BRIDGE_BMAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_BRIDGE_BMAPr, REG_PORT_ANY, 0), rv)

#define READ_PORT_BRIDGE_BMAP_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_BRIDGE_BMAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_PORT_BRIDGE_BMAP_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_BRIDGE_BMAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_PPPEMPTYSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPPEMPTYSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_PPPEMPTYSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPPEMPTYSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_PPPEMPTYSTATUS_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPPEMPTYSTATUS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_PPPEMPTYSTATUS_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPPEMPTYSTATUS_HIr, REG_PORT_ANY, 0), rv)

#define READ_PRIORITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PRIORITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_PRIORITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PRIORITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_PROTOCOL_PKT_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PROTOCOL_PKT_CONTROLr, port, 0), rvp)
#define WRITE_PROTOCOL_PKT_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PROTOCOL_PKT_CONTROLr, port, 0), rv)

#define READ_RDBGC0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC0r, port, 0), rvp)
#define WRITE_RDBGC0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC0r, port, 0), rv)

#define READ_RDBGC1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC1r, port, 0), rvp)
#define WRITE_RDBGC1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC1r, port, 0), rv)

#define READ_RDBGC2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC2r, port, 0), rvp)
#define WRITE_RDBGC2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC2r, port, 0), rv)

#define READ_RDBGC3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC3r, port, 0), rvp)
#define WRITE_RDBGC3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC3r, port, 0), rv)

#define READ_RDBGC4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC4r, port, 0), rvp)
#define WRITE_RDBGC4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC4r, port, 0), rv)

#define READ_RDBGC5r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC5r, port, 0), rvp)
#define WRITE_RDBGC5r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC5r, port, 0), rv)

#define READ_RDBGC6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC6r, port, 0), rvp)
#define WRITE_RDBGC6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC6r, port, 0), rv)

#define READ_RDBGC7r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC7r, port, 0), rvp)
#define WRITE_RDBGC7r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC7r, port, 0), rv)

#define READ_RDBGC8r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC8r, port, 0), rvp)
#define WRITE_RDBGC8r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC8r, port, 0), rv)

#define READ_RDBGC0_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC0_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC0_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC0_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC1_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC1_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC1_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC1_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC2_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC2_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC2_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC2_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC3_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC3_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC3_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC3_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC4_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC4_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC4_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC4_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC5_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC5_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC5_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC5_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC6_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC6_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC6_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC6_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC7_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC7_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC7_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC7_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC8_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC8_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC8_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC8_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDISCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDISCr, port, 0), rvp)
#define WRITE_RDISCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDISCr, port, 0), rv)

#define READ_REVCDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, REVCDr, port, 0), rvp)
#define WRITE_REVCDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, REVCDr, port, 0), rv)

#define READ_RIPC4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPC4r, port, 0), rvp)
#define WRITE_RIPC4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPC4r, port, 0), rv)

#define READ_RIPC6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPC6r, port, 0), rvp)
#define WRITE_RIPC6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPC6r, port, 0), rv)

#define READ_RIPD4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPD4r, port, 0), rvp)
#define WRITE_RIPD4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPD4r, port, 0), rv)

#define READ_RIPD6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPD6r, port, 0), rvp)
#define WRITE_RIPD6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPD6r, port, 0), rv)

#define READ_RIPHE4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPHE4r, port, 0), rvp)
#define WRITE_RIPHE4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPHE4r, port, 0), rv)

#define READ_RIPHE6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPHE6r, port, 0), rvp)
#define WRITE_RIPHE6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPHE6r, port, 0), rv)

#define READ_RPORTDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RPORTDr, port, 0), rvp)
#define WRITE_RPORTDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RPORTDr, port, 0), rv)

#define READ_RRBYTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RRBYTr, port, 0), rvp)
#define WRITE_RRBYTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RRBYTr, port, 0), rv)

#define READ_RRPKTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RRPKTr, port, 0), rvp)
#define WRITE_RRPKTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RRPKTr, port, 0), rv)

#define READ_RSV_READr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RSV_READr, port, 0), rvp)
#define WRITE_RSV_READr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RSV_READr, port, 0), rv)

#define READ_RUCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RUCr, port, 0), rvp)
#define WRITE_RUCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RUCr, port, 0), rv)

#define READ_SC_BYTE_METER_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SC_BYTE_METER_CONFIGr, port, 0), rvp)
#define WRITE_SC_BYTE_METER_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SC_BYTE_METER_CONFIGr, port, 0), rv)

#define READ_SFLOW_EGR_RAND_SEEDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SFLOW_EGR_RAND_SEEDr, REG_PORT_ANY, 0), rvp)
#define WRITE_SFLOW_EGR_RAND_SEEDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SFLOW_EGR_RAND_SEEDr, REG_PORT_ANY, 0), rv)

#define READ_SFLOW_EGR_THRESHOLDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SFLOW_EGR_THRESHOLDr, port, 0), rvp)
#define WRITE_SFLOW_EGR_THRESHOLDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SFLOW_EGR_THRESHOLDr, port, 0), rv)

#define READ_SFLOW_ING_RAND_SEEDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SFLOW_ING_RAND_SEEDr, REG_PORT_ANY, 0), rvp)
#define WRITE_SFLOW_ING_RAND_SEEDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SFLOW_ING_RAND_SEEDr, REG_PORT_ANY, 0), rv)

#define READ_SFLOW_ING_THRESHOLDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SFLOW_ING_THRESHOLDr, port, 0), rvp)
#define WRITE_SFLOW_ING_THRESHOLDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SFLOW_ING_THRESHOLDr, port, 0), rv)

#define READ_SOFTRESETPBMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SOFTRESETPBMr, REG_PORT_ANY, 0), rvp)
#define WRITE_SOFTRESETPBMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SOFTRESETPBMr, REG_PORT_ANY, 0), rv)

#define READ_SOFTRESETPBM_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SOFTRESETPBM_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_SOFTRESETPBM_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SOFTRESETPBM_HIr, REG_PORT_ANY, 0), rv)

#define READ_SYS_MAC_ACTIONr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SYS_MAC_ACTIONr, REG_PORT_ANY, 0), rvp)
#define WRITE_SYS_MAC_ACTIONr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SYS_MAC_ACTIONr, REG_PORT_ANY, 0), rv)

#define READ_SYS_MAC_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SYS_MAC_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_SYS_MAC_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SYS_MAC_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_SYS_MAC_LIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SYS_MAC_LIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_SYS_MAC_LIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SYS_MAC_LIMITr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC0r, port, 0), rvp)
#define WRITE_TDBGC0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC0r, port, 0), rv)

#define READ_TDBGC1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC1r, port, 0), rvp)
#define WRITE_TDBGC1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC1r, port, 0), rv)

#define READ_TDBGC2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC2r, port, 0), rvp)
#define WRITE_TDBGC2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC2r, port, 0), rv)

#define READ_TDBGC3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC3r, port, 0), rvp)
#define WRITE_TDBGC3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC3r, port, 0), rv)

#define READ_TDBGC4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC4r, port, 0), rvp)
#define WRITE_TDBGC4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC4r, port, 0), rv)

#define READ_TDBGC5r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC5r, port, 0), rvp)
#define WRITE_TDBGC5r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC5r, port, 0), rv)

#define READ_TDBGC6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC6r, port, 0), rvp)
#define WRITE_TDBGC6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC6r, port, 0), rv)

#define READ_TDBGC7r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC7r, port, 0), rvp)
#define WRITE_TDBGC7r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC7r, port, 0), rv)

#define READ_TDBGC8r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC8r, port, 0), rvp)
#define WRITE_TDBGC8r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC8r, port, 0), rv)

#define READ_TDBGC9r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC9r, port, 0), rvp)
#define WRITE_TDBGC9r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC9r, port, 0), rv)

#define READ_TDBGC10r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC10r, port, 0), rvp)
#define WRITE_TDBGC10r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC10r, port, 0), rv)

#define READ_TDBGC11r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC11r, port, 0), rvp)
#define WRITE_TDBGC11r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC11r, port, 0), rv)

#define READ_TDBGC0_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC0_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC0_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC0_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC10_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC10_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC10_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC10_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC11_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC11_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC11_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC11_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC1_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC1_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC1_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC1_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC2_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC2_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC2_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC2_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC3_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC3_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC3_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC3_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC4_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC4_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC4_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC4_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC5_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC5_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC5_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC5_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC6_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC6_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC6_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC6_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC7_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC7_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC7_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC7_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC8_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC8_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC8_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC8_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC9_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC9_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC9_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC9_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TEST2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TEST2r, port, 0), rvp)
#define WRITE_TEST2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TEST2r, port, 0), rv)

#define READ_TOTALDYNCELLRESETLIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTALDYNCELLRESETLIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTALDYNCELLRESETLIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTALDYNCELLRESETLIMITr, REG_PORT_ANY, 0), rv)

#define READ_TOTALDYNCELLSETLIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTALDYNCELLSETLIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTALDYNCELLSETLIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTALDYNCELLSETLIMITr, REG_PORT_ANY, 0), rv)

#define READ_TOTALDYNCELLUSEDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTALDYNCELLUSEDr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTALDYNCELLUSEDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTALDYNCELLUSEDr, REG_PORT_ANY, 0), rv)

#define READ_TPCEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TPCEr, port, 0), rvp)
#define WRITE_TPCEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TPCEr, port, 0), rv)

#define READ_UDF_ETHERTYPE_MATCHr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UDF_ETHERTYPE_MATCHr, REG_PORT_ANY, idx), rvp)
#define WRITE_UDF_ETHERTYPE_MATCHr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UDF_ETHERTYPE_MATCHr, REG_PORT_ANY, idx), rv)

#define READ_UDF_IPPROTO_MATCHr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UDF_IPPROTO_MATCHr, REG_PORT_ANY, idx), rvp)
#define WRITE_UDF_IPPROTO_MATCHr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UDF_IPPROTO_MATCHr, REG_PORT_ANY, idx), rv)

#define READ_UNKNOWN_MCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UNKNOWN_MCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_UNKNOWN_MCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UNKNOWN_MCAST_BLOCK_MASKr, port, 0), rv)

#define READ_UNKNOWN_MCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UNKNOWN_MCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_UNKNOWN_MCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UNKNOWN_MCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_UNKNOWN_UCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UNKNOWN_UCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_UNKNOWN_UCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UNKNOWN_UCAST_BLOCK_MASKr, port, 0), rv)

#define READ_UNKNOWN_UCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UNKNOWN_UCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_UNKNOWN_UCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UNKNOWN_UCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_VLAN_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_WRRWEIGHT_COSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WRRWEIGHT_COSr, port, idx), rvp)
#define WRITE_WRRWEIGHT_COSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WRRWEIGHT_COSr, port, idx), rv)

#define READ_XQCOSARBSELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQCOSARBSELr, port, 0), rvp)
#define WRITE_XQCOSARBSELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQCOSARBSELr, port, 0), rv)

#define READ_XQEMPTYr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQEMPTYr, port, 0), rvp)
#define WRITE_XQEMPTYr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQEMPTYr, port, 0), rv)

#define READ_XQMEMDEBUGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQMEMDEBUGr, port, 0), rvp)
#define WRITE_XQMEMDEBUGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQMEMDEBUGr, port, 0), rv)

#define READ_XQPARITYERRORPBMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQPARITYERRORPBMr, REG_PORT_ANY, 0), rvp)
#define WRITE_XQPARITYERRORPBMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQPARITYERRORPBMr, REG_PORT_ANY, 0), rv)

#define READ_XQPARITYERRORPBM_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQPARITYERRORPBM_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_XQPARITYERRORPBM_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQPARITYERRORPBM_HIr, REG_PORT_ANY, 0), rv)

#define READ_XQPARITYERRORPTRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQPARITYERRORPTRr, port, 0), rvp)
#define WRITE_XQPARITYERRORPTRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQPARITYERRORPTRr, port, 0), rv)

#define READ_XQREADPOINTERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQREADPOINTERr, port, 0), rvp)
#define WRITE_XQREADPOINTERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQREADPOINTERr, port, 0), rv)



/*****************************************************************************
 **
 **	MEMORY READ and WRITE MACROS
 **
 *****************************************************************************/

#define READ_BSAFE_CMD_DATA_INm(unit, blk, index, data) \
	soc_mem_read(unit, BSAFE_CMD_DATA_INm, blk, index, data)
#define WRITE_BSAFE_CMD_DATA_INm(unit, blk, index, data) \
	soc_mem_write(unit, BSAFE_CMD_DATA_INm, blk, index, data)

#define READ_BSAFE_CMD_DATA_OUTm(unit, blk, index, data) \
	soc_mem_read(unit, BSAFE_CMD_DATA_OUTm, blk, index, data)
#define WRITE_BSAFE_CMD_DATA_OUTm(unit, blk, index, data) \
	soc_mem_write(unit, BSAFE_CMD_DATA_OUTm, blk, index, data)

#define READ_DSCP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, DSCP_TABLEm, blk, index, data)
#define WRITE_DSCP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, DSCP_TABLEm, blk, index, data)

#define READ_EGR_DSCP_ECN_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_DSCP_ECN_MAPm, blk, index, data)
#define WRITE_EGR_DSCP_ECN_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_DSCP_ECN_MAPm, blk, index, data)

#define READ_EGR_DSCP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_DSCP_TABLEm, blk, index, data)
#define WRITE_EGR_DSCP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_DSCP_TABLEm, blk, index, data)

#define READ_EGR_EM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_EM_MTP_INDEXm, blk, index, data)
#define WRITE_EGR_EM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_EM_MTP_INDEXm, blk, index, data)

#define READ_EGR_IM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IM_MTP_INDEXm, blk, index, data)
#define WRITE_EGR_IM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IM_MTP_INDEXm, blk, index, data)

#define READ_EGR_IP_TUNNELm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IP_TUNNELm, blk, index, data)
#define WRITE_EGR_IP_TUNNELm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IP_TUNNELm, blk, index, data)

#define READ_EGR_L3_INTFm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_L3_INTFm, blk, index, data)
#define WRITE_EGR_L3_INTFm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_L3_INTFm, blk, index, data)

#define READ_EGR_L3_NEXT_HOPm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_L3_NEXT_HOPm, blk, index, data)
#define WRITE_EGR_L3_NEXT_HOPm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_L3_NEXT_HOPm, blk, index, data)

#define READ_EGR_MASKm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_MASKm, blk, index, data)
#define WRITE_EGR_MASKm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_MASKm, blk, index, data)

#define READ_EGR_VLANm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_VLANm, blk, index, data)
#define WRITE_EGR_VLANm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_VLANm, blk, index, data)

#define READ_EGR_VLAN_STGm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_VLAN_STGm, blk, index, data)
#define WRITE_EGR_VLAN_STGm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_VLAN_STGm, blk, index, data)

#define READ_EM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_read(unit, EM_MTP_INDEXm, blk, index, data)
#define WRITE_EM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_write(unit, EM_MTP_INDEXm, blk, index, data)

#define READ_FP_COUNTER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_COUNTER_TABLEm, blk, index, data)
#define WRITE_FP_COUNTER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_COUNTER_TABLEm, blk, index, data)

#define READ_FP_METER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_METER_TABLEm, blk, index, data)
#define WRITE_FP_METER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_METER_TABLEm, blk, index, data)

#define READ_FP_POLICY_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_POLICY_TABLEm, blk, index, data)
#define WRITE_FP_POLICY_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_POLICY_TABLEm, blk, index, data)

#define READ_FP_PORT_FIELD_SELm(unit, blk, index, data) \
	soc_mem_read(unit, FP_PORT_FIELD_SELm, blk, index, data)
#define WRITE_FP_PORT_FIELD_SELm(unit, blk, index, data) \
	soc_mem_write(unit, FP_PORT_FIELD_SELm, blk, index, data)

#define READ_FP_RANGE_CHECKm(unit, blk, index, data) \
	soc_mem_read(unit, FP_RANGE_CHECKm, blk, index, data)
#define WRITE_FP_RANGE_CHECKm(unit, blk, index, data) \
	soc_mem_write(unit, FP_RANGE_CHECKm, blk, index, data)

#define READ_FP_SC_BCAST_METER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SC_BCAST_METER_TABLEm, blk, index, data)
#define WRITE_FP_SC_BCAST_METER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SC_BCAST_METER_TABLEm, blk, index, data)

#define READ_FP_SC_DLF_METER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SC_DLF_METER_TABLEm, blk, index, data)
#define WRITE_FP_SC_DLF_METER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SC_DLF_METER_TABLEm, blk, index, data)

#define READ_FP_SC_MCAST_METER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SC_MCAST_METER_TABLEm, blk, index, data)
#define WRITE_FP_SC_MCAST_METER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SC_MCAST_METER_TABLEm, blk, index, data)

#define READ_FP_SC_METER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SC_METER_TABLEm, blk, index, data)
#define WRITE_FP_SC_METER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SC_METER_TABLEm, blk, index, data)

#define READ_FP_SLICE_ENTRY_PORT_SELm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SLICE_ENTRY_PORT_SELm, blk, index, data)
#define WRITE_FP_SLICE_ENTRY_PORT_SELm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SLICE_ENTRY_PORT_SELm, blk, index, data)

#define READ_FP_SLICE_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SLICE_MAPm, blk, index, data)
#define WRITE_FP_SLICE_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SLICE_MAPm, blk, index, data)

#define READ_FP_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, FP_TCAMm, blk, index, data)
#define WRITE_FP_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, FP_TCAMm, blk, index, data)

#define READ_FP_UDF_OFFSETm(unit, blk, index, data) \
	soc_mem_read(unit, FP_UDF_OFFSETm, blk, index, data)
#define WRITE_FP_UDF_OFFSETm(unit, blk, index, data) \
	soc_mem_write(unit, FP_UDF_OFFSETm, blk, index, data)

#define READ_IM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_read(unit, IM_MTP_INDEXm, blk, index, data)
#define WRITE_IM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_write(unit, IM_MTP_INDEXm, blk, index, data)

#define READ_ING_L3_NEXT_HOPm(unit, blk, index, data) \
	soc_mem_read(unit, ING_L3_NEXT_HOPm, blk, index, data)
#define WRITE_ING_L3_NEXT_HOPm(unit, blk, index, data) \
	soc_mem_write(unit, ING_L3_NEXT_HOPm, blk, index, data)

#define READ_IPORT_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, IPORT_TABLEm, blk, index, data)
#define WRITE_IPORT_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, IPORT_TABLEm, blk, index, data)

#define READ_L2MCm(unit, blk, index, data) \
	soc_mem_read(unit, L2MCm, blk, index, data)
#define WRITE_L2MCm(unit, blk, index, data) \
	soc_mem_write(unit, L2MCm, blk, index, data)

#define READ_L2Xm(unit, blk, index, data) \
	soc_mem_read(unit, L2Xm, blk, index, data)
#define WRITE_L2Xm(unit, blk, index, data) \
	soc_mem_write(unit, L2Xm, blk, index, data)

#define READ_L2_ENTRY_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_ENTRY_ONLYm, blk, index, data)
#define WRITE_L2_ENTRY_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_ENTRY_ONLYm, blk, index, data)

#define READ_L2_HITDA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_HITDA_ONLYm, blk, index, data)
#define WRITE_L2_HITDA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_HITDA_ONLYm, blk, index, data)

#define READ_L2_HITSA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_HITSA_ONLYm, blk, index, data)
#define WRITE_L2_HITSA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_HITSA_ONLYm, blk, index, data)

#define READ_L2_MOD_FIFOm(unit, blk, index, data) \
	soc_mem_read(unit, L2_MOD_FIFOm, blk, index, data)
#define WRITE_L2_MOD_FIFOm(unit, blk, index, data) \
	soc_mem_write(unit, L2_MOD_FIFOm, blk, index, data)

#define READ_L2_USER_ENTRYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_USER_ENTRYm, blk, index, data)
#define WRITE_L2_USER_ENTRYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_USER_ENTRYm, blk, index, data)

#define READ_L2_USER_ENTRY_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_USER_ENTRY_DATA_ONLYm, blk, index, data)
#define WRITE_L2_USER_ENTRY_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_USER_ENTRY_DATA_ONLYm, blk, index, data)

#define READ_L2_USER_ENTRY_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_USER_ENTRY_ONLYm, blk, index, data)
#define WRITE_L2_USER_ENTRY_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_USER_ENTRY_ONLYm, blk, index, data)

#define READ_L3_TUNNELm(unit, blk, index, data) \
	soc_mem_read(unit, L3_TUNNELm, blk, index, data)
#define WRITE_L3_TUNNELm(unit, blk, index, data) \
	soc_mem_write(unit, L3_TUNNELm, blk, index, data)

#define READ_MAC_BLOCKm(unit, blk, index, data) \
	soc_mem_read(unit, MAC_BLOCKm, blk, index, data)
#define WRITE_MAC_BLOCKm(unit, blk, index, data) \
	soc_mem_write(unit, MAC_BLOCKm, blk, index, data)

#define READ_MAC_LIMIT_PORT_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, MAC_LIMIT_PORT_MAP_TABLEm, blk, index, data)
#define WRITE_MAC_LIMIT_PORT_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, MAC_LIMIT_PORT_MAP_TABLEm, blk, index, data)

#define READ_MAC_LIMIT_TRUNK_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, MAC_LIMIT_TRUNK_MAP_TABLEm, blk, index, data)
#define WRITE_MAC_LIMIT_TRUNK_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, MAC_LIMIT_TRUNK_MAP_TABLEm, blk, index, data)

#define READ_MMU_AGING_CTRm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_AGING_CTRm, blk, index, data)
#define WRITE_MMU_AGING_CTRm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_AGING_CTRm, blk, index, data)

#define READ_MMU_AGING_EXPm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_AGING_EXPm, blk, index, data)
#define WRITE_MMU_AGING_EXPm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_AGING_EXPm, blk, index, data)

#define READ_MMU_CBPCELLHEADERm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPCELLHEADERm, blk, index, data)
#define WRITE_MMU_CBPCELLHEADERm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPCELLHEADERm, blk, index, data)

#define READ_MMU_CBPDATA0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA0m, blk, index, data)
#define WRITE_MMU_CBPDATA0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA0m, blk, index, data)

#define READ_MMU_CBPDATA1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA1m, blk, index, data)
#define WRITE_MMU_CBPDATA1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA1m, blk, index, data)

#define READ_MMU_CBPDATA2m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA2m, blk, index, data)
#define WRITE_MMU_CBPDATA2m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA2m, blk, index, data)

#define READ_MMU_CBPDATA3m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA3m, blk, index, data)
#define WRITE_MMU_CBPDATA3m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA3m, blk, index, data)

#define READ_MMU_CBPDATA4m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA4m, blk, index, data)
#define WRITE_MMU_CBPDATA4m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA4m, blk, index, data)

#define READ_MMU_CBPDATA5m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA5m, blk, index, data)
#define WRITE_MMU_CBPDATA5m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA5m, blk, index, data)

#define READ_MMU_CBPDATA6m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA6m, blk, index, data)
#define WRITE_MMU_CBPDATA6m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA6m, blk, index, data)

#define READ_MMU_CBPDATA7m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA7m, blk, index, data)
#define WRITE_MMU_CBPDATA7m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA7m, blk, index, data)

#define READ_MMU_CBPPKTHEADER0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER0m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER0m, blk, index, data)

#define READ_MMU_CBPPKTHEADER1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER1m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER1m, blk, index, data)

#define READ_MMU_CCPm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CCPm, blk, index, data)
#define WRITE_MMU_CCPm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CCPm, blk, index, data)

#define READ_MMU_CFAPm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CFAPm, blk, index, data)
#define WRITE_MMU_CFAPm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CFAPm, blk, index, data)

#define READ_MMU_XQ0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ0m, blk, index, data)
#define WRITE_MMU_XQ0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ0m, blk, index, data)

#define READ_MMU_XQ1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ1m, blk, index, data)
#define WRITE_MMU_XQ1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ1m, blk, index, data)

#define READ_MMU_XQ2m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ2m, blk, index, data)
#define WRITE_MMU_XQ2m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ2m, blk, index, data)

#define READ_MMU_XQ3m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ3m, blk, index, data)
#define WRITE_MMU_XQ3m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ3m, blk, index, data)

#define READ_MMU_XQ4m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ4m, blk, index, data)
#define WRITE_MMU_XQ4m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ4m, blk, index, data)

#define READ_MMU_XQ5m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ5m, blk, index, data)
#define WRITE_MMU_XQ5m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ5m, blk, index, data)

#define READ_MMU_XQ6m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ6m, blk, index, data)
#define WRITE_MMU_XQ6m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ6m, blk, index, data)

#define READ_MMU_XQ7m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ7m, blk, index, data)
#define WRITE_MMU_XQ7m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ7m, blk, index, data)

#define READ_MMU_XQ8m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ8m, blk, index, data)
#define WRITE_MMU_XQ8m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ8m, blk, index, data)

#define READ_MMU_XQ9m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ9m, blk, index, data)
#define WRITE_MMU_XQ9m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ9m, blk, index, data)

#define READ_MMU_XQ10m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ10m, blk, index, data)
#define WRITE_MMU_XQ10m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ10m, blk, index, data)

#define READ_MMU_XQ11m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ11m, blk, index, data)
#define WRITE_MMU_XQ11m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ11m, blk, index, data)

#define READ_MMU_XQ12m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ12m, blk, index, data)
#define WRITE_MMU_XQ12m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ12m, blk, index, data)

#define READ_MMU_XQ13m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ13m, blk, index, data)
#define WRITE_MMU_XQ13m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ13m, blk, index, data)

#define READ_MMU_XQ14m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ14m, blk, index, data)
#define WRITE_MMU_XQ14m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ14m, blk, index, data)

#define READ_MMU_XQ15m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ15m, blk, index, data)
#define WRITE_MMU_XQ15m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ15m, blk, index, data)

#define READ_MMU_XQ16m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ16m, blk, index, data)
#define WRITE_MMU_XQ16m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ16m, blk, index, data)

#define READ_MMU_XQ17m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ17m, blk, index, data)
#define WRITE_MMU_XQ17m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ17m, blk, index, data)

#define READ_MMU_XQ18m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ18m, blk, index, data)
#define WRITE_MMU_XQ18m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ18m, blk, index, data)

#define READ_MMU_XQ19m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ19m, blk, index, data)
#define WRITE_MMU_XQ19m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ19m, blk, index, data)

#define READ_MMU_XQ20m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ20m, blk, index, data)
#define WRITE_MMU_XQ20m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ20m, blk, index, data)

#define READ_MMU_XQ21m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ21m, blk, index, data)
#define WRITE_MMU_XQ21m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ21m, blk, index, data)

#define READ_MMU_XQ22m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ22m, blk, index, data)
#define WRITE_MMU_XQ22m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ22m, blk, index, data)

#define READ_MMU_XQ23m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ23m, blk, index, data)
#define WRITE_MMU_XQ23m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ23m, blk, index, data)

#define READ_MMU_XQ24m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ24m, blk, index, data)
#define WRITE_MMU_XQ24m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ24m, blk, index, data)

#define READ_MMU_XQ25m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ25m, blk, index, data)
#define WRITE_MMU_XQ25m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ25m, blk, index, data)

#define READ_MMU_XQ26m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ26m, blk, index, data)
#define WRITE_MMU_XQ26m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ26m, blk, index, data)

#define READ_MMU_XQ27m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ27m, blk, index, data)
#define WRITE_MMU_XQ27m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ27m, blk, index, data)

#define READ_MMU_XQ28m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ28m, blk, index, data)
#define WRITE_MMU_XQ28m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ28m, blk, index, data)

#define READ_MMU_XQ29m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ29m, blk, index, data)
#define WRITE_MMU_XQ29m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ29m, blk, index, data)

#define READ_MMU_XQ30m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ30m, blk, index, data)
#define WRITE_MMU_XQ30m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ30m, blk, index, data)

#define READ_MMU_XQ31m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ31m, blk, index, data)
#define WRITE_MMU_XQ31m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ31m, blk, index, data)

#define READ_MMU_XQ32m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ32m, blk, index, data)
#define WRITE_MMU_XQ32m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ32m, blk, index, data)

#define READ_MMU_XQ33m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ33m, blk, index, data)
#define WRITE_MMU_XQ33m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ33m, blk, index, data)

#define READ_MMU_XQ34m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ34m, blk, index, data)
#define WRITE_MMU_XQ34m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ34m, blk, index, data)

#define READ_MMU_XQ35m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ35m, blk, index, data)
#define WRITE_MMU_XQ35m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ35m, blk, index, data)

#define READ_MMU_XQ36m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ36m, blk, index, data)
#define WRITE_MMU_XQ36m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ36m, blk, index, data)

#define READ_MMU_XQ37m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ37m, blk, index, data)
#define WRITE_MMU_XQ37m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ37m, blk, index, data)

#define READ_MMU_XQ38m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ38m, blk, index, data)
#define WRITE_MMU_XQ38m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ38m, blk, index, data)

#define READ_MMU_XQ39m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ39m, blk, index, data)
#define WRITE_MMU_XQ39m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ39m, blk, index, data)

#define READ_MMU_XQ40m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ40m, blk, index, data)
#define WRITE_MMU_XQ40m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ40m, blk, index, data)

#define READ_MMU_XQ41m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ41m, blk, index, data)
#define WRITE_MMU_XQ41m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ41m, blk, index, data)

#define READ_MMU_XQ42m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ42m, blk, index, data)
#define WRITE_MMU_XQ42m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ42m, blk, index, data)

#define READ_MMU_XQ43m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ43m, blk, index, data)
#define WRITE_MMU_XQ43m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ43m, blk, index, data)

#define READ_MMU_XQ44m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ44m, blk, index, data)
#define WRITE_MMU_XQ44m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ44m, blk, index, data)

#define READ_MMU_XQ45m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ45m, blk, index, data)
#define WRITE_MMU_XQ45m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ45m, blk, index, data)

#define READ_MMU_XQ46m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ46m, blk, index, data)
#define WRITE_MMU_XQ46m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ46m, blk, index, data)

#define READ_MMU_XQ47m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ47m, blk, index, data)
#define WRITE_MMU_XQ47m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ47m, blk, index, data)

#define READ_MMU_XQ48m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ48m, blk, index, data)
#define WRITE_MMU_XQ48m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ48m, blk, index, data)

#define READ_MMU_XQ49m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ49m, blk, index, data)
#define WRITE_MMU_XQ49m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ49m, blk, index, data)

#define READ_MMU_XQ50m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ50m, blk, index, data)
#define WRITE_MMU_XQ50m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ50m, blk, index, data)

#define READ_MMU_XQ51m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ51m, blk, index, data)
#define WRITE_MMU_XQ51m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ51m, blk, index, data)

#define READ_MMU_XQ52m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ52m, blk, index, data)
#define WRITE_MMU_XQ52m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ52m, blk, index, data)

#define READ_MMU_XQ53m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ53m, blk, index, data)
#define WRITE_MMU_XQ53m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ53m, blk, index, data)

#define READ_MODPORT_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, MODPORT_MAPm, blk, index, data)
#define WRITE_MODPORT_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, MODPORT_MAPm, blk, index, data)

#define READ_MODPORT_MAP_EMm(unit, blk, index, data) \
	soc_mem_read(unit, MODPORT_MAP_EMm, blk, index, data)
#define WRITE_MODPORT_MAP_EMm(unit, blk, index, data) \
	soc_mem_write(unit, MODPORT_MAP_EMm, blk, index, data)

#define READ_MODPORT_MAP_IMm(unit, blk, index, data) \
	soc_mem_read(unit, MODPORT_MAP_IMm, blk, index, data)
#define WRITE_MODPORT_MAP_IMm(unit, blk, index, data) \
	soc_mem_write(unit, MODPORT_MAP_IMm, blk, index, data)

#define READ_MODPORT_MAP_SWm(unit, blk, index, data) \
	soc_mem_read(unit, MODPORT_MAP_SWm, blk, index, data)
#define WRITE_MODPORT_MAP_SWm(unit, blk, index, data) \
	soc_mem_write(unit, MODPORT_MAP_SWm, blk, index, data)

#define READ_NONUCAST_TRUNK_BLOCK_MASKm(unit, blk, index, data) \
	soc_mem_read(unit, NONUCAST_TRUNK_BLOCK_MASKm, blk, index, data)
#define WRITE_NONUCAST_TRUNK_BLOCK_MASKm(unit, blk, index, data) \
	soc_mem_write(unit, NONUCAST_TRUNK_BLOCK_MASKm, blk, index, data)

#define READ_PORT_OR_TRUNK_MAC_ACTIONm(unit, blk, index, data) \
	soc_mem_read(unit, PORT_OR_TRUNK_MAC_ACTIONm, blk, index, data)
#define WRITE_PORT_OR_TRUNK_MAC_ACTIONm(unit, blk, index, data) \
	soc_mem_write(unit, PORT_OR_TRUNK_MAC_ACTIONm, blk, index, data)

#define READ_PORT_OR_TRUNK_MAC_COUNTm(unit, blk, index, data) \
	soc_mem_read(unit, PORT_OR_TRUNK_MAC_COUNTm, blk, index, data)
#define WRITE_PORT_OR_TRUNK_MAC_COUNTm(unit, blk, index, data) \
	soc_mem_write(unit, PORT_OR_TRUNK_MAC_COUNTm, blk, index, data)

#define READ_PORT_OR_TRUNK_MAC_LIMITm(unit, blk, index, data) \
	soc_mem_read(unit, PORT_OR_TRUNK_MAC_LIMITm, blk, index, data)
#define WRITE_PORT_OR_TRUNK_MAC_LIMITm(unit, blk, index, data) \
	soc_mem_write(unit, PORT_OR_TRUNK_MAC_LIMITm, blk, index, data)

#define READ_PORT_TABm(unit, blk, index, data) \
	soc_mem_read(unit, PORT_TABm, blk, index, data)
#define WRITE_PORT_TABm(unit, blk, index, data) \
	soc_mem_write(unit, PORT_TABm, blk, index, data)

#define READ_SOURCE_TRUNK_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, SOURCE_TRUNK_MAP_TABLEm, blk, index, data)
#define WRITE_SOURCE_TRUNK_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, SOURCE_TRUNK_MAP_TABLEm, blk, index, data)

#define READ_SRC_MODID_BLOCKm(unit, blk, index, data) \
	soc_mem_read(unit, SRC_MODID_BLOCKm, blk, index, data)
#define WRITE_SRC_MODID_BLOCKm(unit, blk, index, data) \
	soc_mem_write(unit, SRC_MODID_BLOCKm, blk, index, data)

#define READ_STG_TABm(unit, blk, index, data) \
	soc_mem_read(unit, STG_TABm, blk, index, data)
#define WRITE_STG_TABm(unit, blk, index, data) \
	soc_mem_write(unit, STG_TABm, blk, index, data)

#define READ_TRUNK_BITMAPm(unit, blk, index, data) \
	soc_mem_read(unit, TRUNK_BITMAPm, blk, index, data)
#define WRITE_TRUNK_BITMAPm(unit, blk, index, data) \
	soc_mem_write(unit, TRUNK_BITMAPm, blk, index, data)

#define READ_TRUNK_GROUPm(unit, blk, index, data) \
	soc_mem_read(unit, TRUNK_GROUPm, blk, index, data)
#define WRITE_TRUNK_GROUPm(unit, blk, index, data) \
	soc_mem_write(unit, TRUNK_GROUPm, blk, index, data)

#define READ_VLAN_MACm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_MACm, blk, index, data)
#define WRITE_VLAN_MACm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_MACm, blk, index, data)

#define READ_VLAN_PROTOCOLm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_PROTOCOLm, blk, index, data)
#define WRITE_VLAN_PROTOCOLm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_PROTOCOLm, blk, index, data)

#define READ_VLAN_PROTOCOL_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_PROTOCOL_DATAm, blk, index, data)
#define WRITE_VLAN_PROTOCOL_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_PROTOCOL_DATAm, blk, index, data)

#define READ_VLAN_SUBNETm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_SUBNETm, blk, index, data)
#define WRITE_VLAN_SUBNETm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_SUBNETm, blk, index, data)

#define READ_VLAN_SUBNET_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_SUBNET_DATA_ONLYm, blk, index, data)
#define WRITE_VLAN_SUBNET_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_SUBNET_DATA_ONLYm, blk, index, data)

#define READ_VLAN_SUBNET_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_SUBNET_ONLYm, blk, index, data)
#define WRITE_VLAN_SUBNET_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_SUBNET_ONLYm, blk, index, data)

#define READ_VLAN_TABm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_TABm, blk, index, data)
#define WRITE_VLAN_TABm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_TABm, blk, index, data)


#endif	/* !_SOC_MEMREGS_H */

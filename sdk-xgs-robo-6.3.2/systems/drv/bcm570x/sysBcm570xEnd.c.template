/*
 * $Id: sysBcm570xEnd.c.template 1.4 Broadcom SDK $
 *
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 *
 * sysBcm570xEnd.c - system configuration module for BCM570x END
 */


/*
DESCRIPTION
This is an example configuration module for the VxWorks BCM570x (bc) END
driver.  Something like this should be placed in your BSP.  It should then
be #included somewhere like sysLib.c, so you don't need to write a
build rule for it.


N.B.: code formatting conventions used here are Wind River, not
Broadcom's, since this driver wrapper resides in the BSP.
*/

#if (defined(INCLUDE_NETWORK) && defined(INCLUDE_BCM570XEND) \
     && defined (INCLUDE_END))

/* includes */

#include "vxWorks.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "end.h"
#include "config.h"

/* 
* The include below should point to whereever you have the
* driver source directory
*/

#include "../../drv/bcm570x/bcm570xEnd.h"

/* defines */

/* forward declarations */

/* typedefs */

/* locals */

IMPORT END_OBJ* bcm570xEndLoad (char *);

/******************************************************************************
*
* sysBcm570xCacheFuncsGet - Get flush/invalidate routine for driver
*
* RETURNS: N/A
*
*/

void sysBcm570xCacheFuncsGet
    (
    CACHE_FUNCS *pCacheFuncs
    )
    {

#if 0
    /* For a processor without bus snooping, e.g. many MIPS */

    pCacheFuncs->flushRtn = cacheLib.flushRtn;
    pCacheFuncs->invalidateRtn = cacheLib.invalidateRtn;
    pCacheFuncs->virtToPhysRtn = cacheLib.dmaVirtToPhysRtn;
    pCacheFuncs->physToVirtRtn = cacheLib.dmaPhysToVirtRtn;
#else

    /* If your processor does bus snooping, e.g. most PPC's */
    *pCacheFuncs = cacheDmaFuncs;
#endif
    return;
    }


/******************************************************************************
*
* sysBcm570xEndLoad - board specific initialization for BCM570x
*
* RETURNS: pointer to END object or ERROR.
*
* SEE ALSO: bcm570xEndLoad()
*/

END_OBJ * sysBcm570xEndLoad
    (
    char * pParamStr,   /* ptr to initialization parameter string */
    void * unused       /* BSP-specific param */
    )
    {
    END_OBJ * pEnd;

    if (strlen (pParamStr) == 0)
        {
        /*
         * muxDevLoad() calls us twice.  If the string is
         * zero length, then this is the first time through
         * this routine, so we just return.
         */

        pEnd = bcm570xEndLoad (pParamStr);
        }

    else
        {
        /*
        * Define a local function, sysEnetAddrGet, the fetch
        * the MAC address from your board's flash or NVRAM
        */
        _func_bcm570xEnetAddrGet = sysEnetAddrGet;

        /*
        * Do any other preprocessing you want.  For example, 
        * the END load string could be dynamic, i.e. built on
        * the fly instead of taken from a static endDevTbl.
        */

        if ((pEnd = bcm570xEndLoad (pParamStr)) == (END_OBJ *)ERROR)
            {
            printf ("Error: bcm570x device failed bcm570xEndLoad routine.\n");
            }
        }

    return (pEnd);
    }

#endif
